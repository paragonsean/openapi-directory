/**
 * YouTube Data API v3
 * The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPlaylist.h
 *
 * A *playlist* resource represents a YouTube playlist. A playlist is a collection of videos that can be viewed sequentially and shared with other users. A playlist can contain up to 200 videos, and YouTube does not limit the number of playlists that each user creates. By default, playlists are publicly visible to other users, but playlists can be public or private. YouTube also uses playlists to identify special collections of videos for a channel, such as: - uploaded videos - favorite videos - positively rated (liked) videos - watch history - watch later To be more specific, these lists are associated with a channel, which is a collection of a person, group, or company&#39;s videos, playlists, and other YouTube information. You can retrieve the playlist IDs for each of these lists from the channel resource for a given channel. You can then use the playlistItems.list method to retrieve any of those lists. You can also add or remove items from those lists by calling the playlistItems.insert and playlistItems.delete methods.
 */

#ifndef OAIPlaylist_H
#define OAIPlaylist_H

#include <QJsonObject>

#include "OAIPlaylistContentDetails.h"
#include "OAIPlaylistLocalization.h"
#include "OAIPlaylistPlayer.h"
#include "OAIPlaylistSnippet.h"
#include "OAIPlaylistStatus.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPlaylistContentDetails;
class OAIPlaylistLocalization;
class OAIPlaylistPlayer;
class OAIPlaylistSnippet;
class OAIPlaylistStatus;

class OAIPlaylist : public OAIObject {
public:
    OAIPlaylist();
    OAIPlaylist(QString json);
    ~OAIPlaylist() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIPlaylistContentDetails getContentDetails() const;
    void setContentDetails(const OAIPlaylistContentDetails &content_details);
    bool is_content_details_Set() const;
    bool is_content_details_Valid() const;

    QString getEtag() const;
    void setEtag(const QString &etag);
    bool is_etag_Set() const;
    bool is_etag_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    QMap<QString, OAIPlaylistLocalization> getLocalizations() const;
    void setLocalizations(const QMap<QString, OAIPlaylistLocalization> &localizations);
    bool is_localizations_Set() const;
    bool is_localizations_Valid() const;

    OAIPlaylistPlayer getPlayer() const;
    void setPlayer(const OAIPlaylistPlayer &player);
    bool is_player_Set() const;
    bool is_player_Valid() const;

    OAIPlaylistSnippet getSnippet() const;
    void setSnippet(const OAIPlaylistSnippet &snippet);
    bool is_snippet_Set() const;
    bool is_snippet_Valid() const;

    OAIPlaylistStatus getStatus() const;
    void setStatus(const OAIPlaylistStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIPlaylistContentDetails m_content_details;
    bool m_content_details_isSet;
    bool m_content_details_isValid;

    QString m_etag;
    bool m_etag_isSet;
    bool m_etag_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    QMap<QString, OAIPlaylistLocalization> m_localizations;
    bool m_localizations_isSet;
    bool m_localizations_isValid;

    OAIPlaylistPlayer m_player;
    bool m_player_isSet;
    bool m_player_isValid;

    OAIPlaylistSnippet m_snippet;
    bool m_snippet_isSet;
    bool m_snippet_isValid;

    OAIPlaylistStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPlaylist)

#endif // OAIPlaylist_H
