/**
 * YouTube Data API v3
 * The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILiveBroadcast.h
 *
 * A *liveBroadcast* resource represents an event that will be streamed, via live video, on YouTube.
 */

#ifndef OAILiveBroadcast_H
#define OAILiveBroadcast_H

#include <QJsonObject>

#include "OAILiveBroadcastContentDetails.h"
#include "OAILiveBroadcastMonetizationDetails.h"
#include "OAILiveBroadcastSnippet.h"
#include "OAILiveBroadcastStatistics.h"
#include "OAILiveBroadcastStatus.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAILiveBroadcastContentDetails;
class OAILiveBroadcastMonetizationDetails;
class OAILiveBroadcastSnippet;
class OAILiveBroadcastStatistics;
class OAILiveBroadcastStatus;

class OAILiveBroadcast : public OAIObject {
public:
    OAILiveBroadcast();
    OAILiveBroadcast(QString json);
    ~OAILiveBroadcast() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAILiveBroadcastContentDetails getContentDetails() const;
    void setContentDetails(const OAILiveBroadcastContentDetails &content_details);
    bool is_content_details_Set() const;
    bool is_content_details_Valid() const;

    QString getEtag() const;
    void setEtag(const QString &etag);
    bool is_etag_Set() const;
    bool is_etag_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    OAILiveBroadcastMonetizationDetails getMonetizationDetails() const;
    void setMonetizationDetails(const OAILiveBroadcastMonetizationDetails &monetization_details);
    bool is_monetization_details_Set() const;
    bool is_monetization_details_Valid() const;

    OAILiveBroadcastSnippet getSnippet() const;
    void setSnippet(const OAILiveBroadcastSnippet &snippet);
    bool is_snippet_Set() const;
    bool is_snippet_Valid() const;

    OAILiveBroadcastStatistics getStatistics() const;
    void setStatistics(const OAILiveBroadcastStatistics &statistics);
    bool is_statistics_Set() const;
    bool is_statistics_Valid() const;

    OAILiveBroadcastStatus getStatus() const;
    void setStatus(const OAILiveBroadcastStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAILiveBroadcastContentDetails m_content_details;
    bool m_content_details_isSet;
    bool m_content_details_isValid;

    QString m_etag;
    bool m_etag_isSet;
    bool m_etag_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    OAILiveBroadcastMonetizationDetails m_monetization_details;
    bool m_monetization_details_isSet;
    bool m_monetization_details_isValid;

    OAILiveBroadcastSnippet m_snippet;
    bool m_snippet_isSet;
    bool m_snippet_isValid;

    OAILiveBroadcastStatistics m_statistics;
    bool m_statistics_isSet;
    bool m_statistics_isValid;

    OAILiveBroadcastStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILiveBroadcast)

#endif // OAILiveBroadcast_H
