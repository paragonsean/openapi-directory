/**
 * YouTube Data API v3
 * The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVideoProcessingDetailsProcessingProgress.h
 *
 * Video processing progress and completion time estimate.
 */

#ifndef OAIVideoProcessingDetailsProcessingProgress_H
#define OAIVideoProcessingDetailsProcessingProgress_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIVideoProcessingDetailsProcessingProgress : public OAIObject {
public:
    OAIVideoProcessingDetailsProcessingProgress();
    OAIVideoProcessingDetailsProcessingProgress(QString json);
    ~OAIVideoProcessingDetailsProcessingProgress() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getPartsProcessed() const;
    void setPartsProcessed(const QString &parts_processed);
    bool is_parts_processed_Set() const;
    bool is_parts_processed_Valid() const;

    QString getPartsTotal() const;
    void setPartsTotal(const QString &parts_total);
    bool is_parts_total_Set() const;
    bool is_parts_total_Valid() const;

    QString getTimeLeftMs() const;
    void setTimeLeftMs(const QString &time_left_ms);
    bool is_time_left_ms_Set() const;
    bool is_time_left_ms_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_parts_processed;
    bool m_parts_processed_isSet;
    bool m_parts_processed_isValid;

    QString m_parts_total;
    bool m_parts_total_isSet;
    bool m_parts_total_isValid;

    QString m_time_left_ms;
    bool m_time_left_ms_isSet;
    bool m_time_left_ms_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVideoProcessingDetailsProcessingProgress)

#endif // OAIVideoProcessingDetailsProcessingProgress_H
