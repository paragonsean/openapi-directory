/**
 * YouTube Data API v3
 * The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILiveChatNewSponsorDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILiveChatNewSponsorDetails::OAILiveChatNewSponsorDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILiveChatNewSponsorDetails::OAILiveChatNewSponsorDetails() {
    this->initializeModel();
}

OAILiveChatNewSponsorDetails::~OAILiveChatNewSponsorDetails() {}

void OAILiveChatNewSponsorDetails::initializeModel() {

    m_is_upgrade_isSet = false;
    m_is_upgrade_isValid = false;

    m_member_level_name_isSet = false;
    m_member_level_name_isValid = false;
}

void OAILiveChatNewSponsorDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILiveChatNewSponsorDetails::fromJsonObject(QJsonObject json) {

    m_is_upgrade_isValid = ::OpenAPI::fromJsonValue(m_is_upgrade, json[QString("isUpgrade")]);
    m_is_upgrade_isSet = !json[QString("isUpgrade")].isNull() && m_is_upgrade_isValid;

    m_member_level_name_isValid = ::OpenAPI::fromJsonValue(m_member_level_name, json[QString("memberLevelName")]);
    m_member_level_name_isSet = !json[QString("memberLevelName")].isNull() && m_member_level_name_isValid;
}

QString OAILiveChatNewSponsorDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILiveChatNewSponsorDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_is_upgrade_isSet) {
        obj.insert(QString("isUpgrade"), ::OpenAPI::toJsonValue(m_is_upgrade));
    }
    if (m_member_level_name_isSet) {
        obj.insert(QString("memberLevelName"), ::OpenAPI::toJsonValue(m_member_level_name));
    }
    return obj;
}

bool OAILiveChatNewSponsorDetails::isIsUpgrade() const {
    return m_is_upgrade;
}
void OAILiveChatNewSponsorDetails::setIsUpgrade(const bool &is_upgrade) {
    m_is_upgrade = is_upgrade;
    m_is_upgrade_isSet = true;
}

bool OAILiveChatNewSponsorDetails::is_is_upgrade_Set() const{
    return m_is_upgrade_isSet;
}

bool OAILiveChatNewSponsorDetails::is_is_upgrade_Valid() const{
    return m_is_upgrade_isValid;
}

QString OAILiveChatNewSponsorDetails::getMemberLevelName() const {
    return m_member_level_name;
}
void OAILiveChatNewSponsorDetails::setMemberLevelName(const QString &member_level_name) {
    m_member_level_name = member_level_name;
    m_member_level_name_isSet = true;
}

bool OAILiveChatNewSponsorDetails::is_member_level_name_Set() const{
    return m_member_level_name_isSet;
}

bool OAILiveChatNewSponsorDetails::is_member_level_name_Valid() const{
    return m_member_level_name_isValid;
}

bool OAILiveChatNewSponsorDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_is_upgrade_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_member_level_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILiveChatNewSponsorDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
