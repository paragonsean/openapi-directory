/*
 * YouTube Data API v3
 * The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ThirdPartyLink;
import org.openapitools.client.model.ThirdPartyLinkListResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ThirdPartyLinksApi
 */
@Disabled
public class ThirdPartyLinksApiTest {

    private final ThirdPartyLinksApi api = new ThirdPartyLinksApi();

    /**
     * Deletes a resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void youtubeThirdPartyLinksDeleteTest() throws ApiException {
        String linkingToken = null;
        String type = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String externalChannelId = null;
        List<String> part = null;
        api.youtubeThirdPartyLinksDelete(linkingToken, type, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, externalChannelId, part);
        // TODO: test validations
    }

    /**
     * Inserts a new resource into this collection.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void youtubeThirdPartyLinksInsertTest() throws ApiException {
        List<String> part = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String externalChannelId = null;
        ThirdPartyLink thirdPartyLink = null;
        ThirdPartyLink response = api.youtubeThirdPartyLinksInsert(part, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, externalChannelId, thirdPartyLink);
        // TODO: test validations
    }

    /**
     * Retrieves a list of resources, possibly filtered.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void youtubeThirdPartyLinksListTest() throws ApiException {
        List<String> part = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String externalChannelId = null;
        String linkingToken = null;
        String type = null;
        ThirdPartyLinkListResponse response = api.youtubeThirdPartyLinksList(part, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, externalChannelId, linkingToken, type);
        // TODO: test validations
    }

    /**
     * Updates an existing resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void youtubeThirdPartyLinksUpdateTest() throws ApiException {
        List<String> part = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String externalChannelId = null;
        ThirdPartyLink thirdPartyLink = null;
        ThirdPartyLink response = api.youtubeThirdPartyLinksUpdate(part, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, externalChannelId, thirdPartyLink);
        // TODO: test validations
    }

}
