/*
 * YouTube Data API v3
 * The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ChannelSection;
import org.openapitools.client.model.ChannelSectionListResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ChannelSectionsApi
 */
@Disabled
public class ChannelSectionsApiTest {

    private final ChannelSectionsApi api = new ChannelSectionsApi();

    /**
     * Deletes a resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void youtubeChannelSectionsDeleteTest() throws ApiException {
        String id = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String onBehalfOfContentOwner = null;
        api.youtubeChannelSectionsDelete(id, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, onBehalfOfContentOwner);
        // TODO: test validations
    }

    /**
     * Inserts a new resource into this collection.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void youtubeChannelSectionsInsertTest() throws ApiException {
        List<String> part = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String onBehalfOfContentOwner = null;
        String onBehalfOfContentOwnerChannel = null;
        ChannelSection channelSection = null;
        ChannelSection response = api.youtubeChannelSectionsInsert(part, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, onBehalfOfContentOwner, onBehalfOfContentOwnerChannel, channelSection);
        // TODO: test validations
    }

    /**
     * Retrieves a list of resources, possibly filtered.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void youtubeChannelSectionsListTest() throws ApiException {
        List<String> part = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String channelId = null;
        String hl = null;
        List<String> id = null;
        Boolean mine = null;
        String onBehalfOfContentOwner = null;
        ChannelSectionListResponse response = api.youtubeChannelSectionsList(part, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, channelId, hl, id, mine, onBehalfOfContentOwner);
        // TODO: test validations
    }

    /**
     * Updates an existing resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void youtubeChannelSectionsUpdateTest() throws ApiException {
        List<String> part = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String onBehalfOfContentOwner = null;
        ChannelSection channelSection = null;
        ChannelSection response = api.youtubeChannelSectionsUpdate(part, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, onBehalfOfContentOwner, channelSection);
        // TODO: test validations
    }

}
