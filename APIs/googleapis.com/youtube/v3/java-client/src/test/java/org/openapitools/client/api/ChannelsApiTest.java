/*
 * YouTube Data API v3
 * The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Channel;
import org.openapitools.client.model.ChannelListResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ChannelsApi
 */
@Disabled
public class ChannelsApiTest {

    private final ChannelsApi api = new ChannelsApi();

    /**
     * Retrieves a list of resources, possibly filtered.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void youtubeChannelsListTest() throws ApiException {
        List<String> part = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String categoryId = null;
        String forHandle = null;
        String forUsername = null;
        String hl = null;
        List<String> id = null;
        Boolean managedByMe = null;
        Integer maxResults = null;
        Boolean mine = null;
        Boolean mySubscribers = null;
        String onBehalfOfContentOwner = null;
        String pageToken = null;
        ChannelListResponse response = api.youtubeChannelsList(part, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, categoryId, forHandle, forUsername, hl, id, managedByMe, maxResults, mine, mySubscribers, onBehalfOfContentOwner, pageToken);
        // TODO: test validations
    }

    /**
     * Updates an existing resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void youtubeChannelsUpdateTest() throws ApiException {
        List<String> part = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String onBehalfOfContentOwner = null;
        Channel channel = null;
        Channel response = api.youtubeChannelsUpdate(part, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, onBehalfOfContentOwner, channel);
        // TODO: test validations
    }

}
