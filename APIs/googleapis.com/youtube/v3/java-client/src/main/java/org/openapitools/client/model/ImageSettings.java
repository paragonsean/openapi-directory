/*
 * YouTube Data API v3
 * The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.LocalizedProperty;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Branding properties for images associated with the channel.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:42:06.328357-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ImageSettings {
  public static final String SERIALIZED_NAME_BACKGROUND_IMAGE_URL = "backgroundImageUrl";
  @SerializedName(SERIALIZED_NAME_BACKGROUND_IMAGE_URL)
  private LocalizedProperty backgroundImageUrl;

  public static final String SERIALIZED_NAME_BANNER_EXTERNAL_URL = "bannerExternalUrl";
  @SerializedName(SERIALIZED_NAME_BANNER_EXTERNAL_URL)
  private String bannerExternalUrl;

  public static final String SERIALIZED_NAME_BANNER_IMAGE_URL = "bannerImageUrl";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_BANNER_IMAGE_URL)
  private String bannerImageUrl;

  public static final String SERIALIZED_NAME_BANNER_MOBILE_EXTRA_HD_IMAGE_URL = "bannerMobileExtraHdImageUrl";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_BANNER_MOBILE_EXTRA_HD_IMAGE_URL)
  private String bannerMobileExtraHdImageUrl;

  public static final String SERIALIZED_NAME_BANNER_MOBILE_HD_IMAGE_URL = "bannerMobileHdImageUrl";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_BANNER_MOBILE_HD_IMAGE_URL)
  private String bannerMobileHdImageUrl;

  public static final String SERIALIZED_NAME_BANNER_MOBILE_IMAGE_URL = "bannerMobileImageUrl";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_BANNER_MOBILE_IMAGE_URL)
  private String bannerMobileImageUrl;

  public static final String SERIALIZED_NAME_BANNER_MOBILE_LOW_IMAGE_URL = "bannerMobileLowImageUrl";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_BANNER_MOBILE_LOW_IMAGE_URL)
  private String bannerMobileLowImageUrl;

  public static final String SERIALIZED_NAME_BANNER_MOBILE_MEDIUM_HD_IMAGE_URL = "bannerMobileMediumHdImageUrl";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_BANNER_MOBILE_MEDIUM_HD_IMAGE_URL)
  private String bannerMobileMediumHdImageUrl;

  public static final String SERIALIZED_NAME_BANNER_TABLET_EXTRA_HD_IMAGE_URL = "bannerTabletExtraHdImageUrl";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_BANNER_TABLET_EXTRA_HD_IMAGE_URL)
  private String bannerTabletExtraHdImageUrl;

  public static final String SERIALIZED_NAME_BANNER_TABLET_HD_IMAGE_URL = "bannerTabletHdImageUrl";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_BANNER_TABLET_HD_IMAGE_URL)
  private String bannerTabletHdImageUrl;

  public static final String SERIALIZED_NAME_BANNER_TABLET_IMAGE_URL = "bannerTabletImageUrl";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_BANNER_TABLET_IMAGE_URL)
  private String bannerTabletImageUrl;

  public static final String SERIALIZED_NAME_BANNER_TABLET_LOW_IMAGE_URL = "bannerTabletLowImageUrl";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_BANNER_TABLET_LOW_IMAGE_URL)
  private String bannerTabletLowImageUrl;

  public static final String SERIALIZED_NAME_BANNER_TV_HIGH_IMAGE_URL = "bannerTvHighImageUrl";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_BANNER_TV_HIGH_IMAGE_URL)
  private String bannerTvHighImageUrl;

  public static final String SERIALIZED_NAME_BANNER_TV_IMAGE_URL = "bannerTvImageUrl";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_BANNER_TV_IMAGE_URL)
  private String bannerTvImageUrl;

  public static final String SERIALIZED_NAME_BANNER_TV_LOW_IMAGE_URL = "bannerTvLowImageUrl";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_BANNER_TV_LOW_IMAGE_URL)
  private String bannerTvLowImageUrl;

  public static final String SERIALIZED_NAME_BANNER_TV_MEDIUM_IMAGE_URL = "bannerTvMediumImageUrl";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_BANNER_TV_MEDIUM_IMAGE_URL)
  private String bannerTvMediumImageUrl;

  public static final String SERIALIZED_NAME_LARGE_BRANDED_BANNER_IMAGE_IMAP_SCRIPT = "largeBrandedBannerImageImapScript";
  @SerializedName(SERIALIZED_NAME_LARGE_BRANDED_BANNER_IMAGE_IMAP_SCRIPT)
  private LocalizedProperty largeBrandedBannerImageImapScript;

  public static final String SERIALIZED_NAME_LARGE_BRANDED_BANNER_IMAGE_URL = "largeBrandedBannerImageUrl";
  @SerializedName(SERIALIZED_NAME_LARGE_BRANDED_BANNER_IMAGE_URL)
  private LocalizedProperty largeBrandedBannerImageUrl;

  public static final String SERIALIZED_NAME_SMALL_BRANDED_BANNER_IMAGE_IMAP_SCRIPT = "smallBrandedBannerImageImapScript";
  @SerializedName(SERIALIZED_NAME_SMALL_BRANDED_BANNER_IMAGE_IMAP_SCRIPT)
  private LocalizedProperty smallBrandedBannerImageImapScript;

  public static final String SERIALIZED_NAME_SMALL_BRANDED_BANNER_IMAGE_URL = "smallBrandedBannerImageUrl";
  @SerializedName(SERIALIZED_NAME_SMALL_BRANDED_BANNER_IMAGE_URL)
  private LocalizedProperty smallBrandedBannerImageUrl;

  public static final String SERIALIZED_NAME_TRACKING_IMAGE_URL = "trackingImageUrl";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_TRACKING_IMAGE_URL)
  private String trackingImageUrl;

  public static final String SERIALIZED_NAME_WATCH_ICON_IMAGE_URL = "watchIconImageUrl";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_WATCH_ICON_IMAGE_URL)
  private String watchIconImageUrl;

  public ImageSettings() {
  }

  public ImageSettings backgroundImageUrl(LocalizedProperty backgroundImageUrl) {
    this.backgroundImageUrl = backgroundImageUrl;
    return this;
  }

  /**
   * Get backgroundImageUrl
   * @return backgroundImageUrl
   */
  @javax.annotation.Nullable
  public LocalizedProperty getBackgroundImageUrl() {
    return backgroundImageUrl;
  }

  public void setBackgroundImageUrl(LocalizedProperty backgroundImageUrl) {
    this.backgroundImageUrl = backgroundImageUrl;
  }


  public ImageSettings bannerExternalUrl(String bannerExternalUrl) {
    this.bannerExternalUrl = bannerExternalUrl;
    return this;
  }

  /**
   * This is generated when a ChannelBanner.Insert request has succeeded for the given channel.
   * @return bannerExternalUrl
   */
  @javax.annotation.Nullable
  public String getBannerExternalUrl() {
    return bannerExternalUrl;
  }

  public void setBannerExternalUrl(String bannerExternalUrl) {
    this.bannerExternalUrl = bannerExternalUrl;
  }


  @Deprecated
  public ImageSettings bannerImageUrl(String bannerImageUrl) {
    this.bannerImageUrl = bannerImageUrl;
    return this;
  }

  /**
   * Banner image. Desktop size (1060x175).
   * @return bannerImageUrl
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public String getBannerImageUrl() {
    return bannerImageUrl;
  }

  @Deprecated
  public void setBannerImageUrl(String bannerImageUrl) {
    this.bannerImageUrl = bannerImageUrl;
  }


  @Deprecated
  public ImageSettings bannerMobileExtraHdImageUrl(String bannerMobileExtraHdImageUrl) {
    this.bannerMobileExtraHdImageUrl = bannerMobileExtraHdImageUrl;
    return this;
  }

  /**
   * Banner image. Mobile size high resolution (1440x395).
   * @return bannerMobileExtraHdImageUrl
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public String getBannerMobileExtraHdImageUrl() {
    return bannerMobileExtraHdImageUrl;
  }

  @Deprecated
  public void setBannerMobileExtraHdImageUrl(String bannerMobileExtraHdImageUrl) {
    this.bannerMobileExtraHdImageUrl = bannerMobileExtraHdImageUrl;
  }


  @Deprecated
  public ImageSettings bannerMobileHdImageUrl(String bannerMobileHdImageUrl) {
    this.bannerMobileHdImageUrl = bannerMobileHdImageUrl;
    return this;
  }

  /**
   * Banner image. Mobile size high resolution (1280x360).
   * @return bannerMobileHdImageUrl
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public String getBannerMobileHdImageUrl() {
    return bannerMobileHdImageUrl;
  }

  @Deprecated
  public void setBannerMobileHdImageUrl(String bannerMobileHdImageUrl) {
    this.bannerMobileHdImageUrl = bannerMobileHdImageUrl;
  }


  @Deprecated
  public ImageSettings bannerMobileImageUrl(String bannerMobileImageUrl) {
    this.bannerMobileImageUrl = bannerMobileImageUrl;
    return this;
  }

  /**
   * Banner image. Mobile size (640x175).
   * @return bannerMobileImageUrl
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public String getBannerMobileImageUrl() {
    return bannerMobileImageUrl;
  }

  @Deprecated
  public void setBannerMobileImageUrl(String bannerMobileImageUrl) {
    this.bannerMobileImageUrl = bannerMobileImageUrl;
  }


  @Deprecated
  public ImageSettings bannerMobileLowImageUrl(String bannerMobileLowImageUrl) {
    this.bannerMobileLowImageUrl = bannerMobileLowImageUrl;
    return this;
  }

  /**
   * Banner image. Mobile size low resolution (320x88).
   * @return bannerMobileLowImageUrl
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public String getBannerMobileLowImageUrl() {
    return bannerMobileLowImageUrl;
  }

  @Deprecated
  public void setBannerMobileLowImageUrl(String bannerMobileLowImageUrl) {
    this.bannerMobileLowImageUrl = bannerMobileLowImageUrl;
  }


  @Deprecated
  public ImageSettings bannerMobileMediumHdImageUrl(String bannerMobileMediumHdImageUrl) {
    this.bannerMobileMediumHdImageUrl = bannerMobileMediumHdImageUrl;
    return this;
  }

  /**
   * Banner image. Mobile size medium/high resolution (960x263).
   * @return bannerMobileMediumHdImageUrl
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public String getBannerMobileMediumHdImageUrl() {
    return bannerMobileMediumHdImageUrl;
  }

  @Deprecated
  public void setBannerMobileMediumHdImageUrl(String bannerMobileMediumHdImageUrl) {
    this.bannerMobileMediumHdImageUrl = bannerMobileMediumHdImageUrl;
  }


  @Deprecated
  public ImageSettings bannerTabletExtraHdImageUrl(String bannerTabletExtraHdImageUrl) {
    this.bannerTabletExtraHdImageUrl = bannerTabletExtraHdImageUrl;
    return this;
  }

  /**
   * Banner image. Tablet size extra high resolution (2560x424).
   * @return bannerTabletExtraHdImageUrl
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public String getBannerTabletExtraHdImageUrl() {
    return bannerTabletExtraHdImageUrl;
  }

  @Deprecated
  public void setBannerTabletExtraHdImageUrl(String bannerTabletExtraHdImageUrl) {
    this.bannerTabletExtraHdImageUrl = bannerTabletExtraHdImageUrl;
  }


  @Deprecated
  public ImageSettings bannerTabletHdImageUrl(String bannerTabletHdImageUrl) {
    this.bannerTabletHdImageUrl = bannerTabletHdImageUrl;
    return this;
  }

  /**
   * Banner image. Tablet size high resolution (2276x377).
   * @return bannerTabletHdImageUrl
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public String getBannerTabletHdImageUrl() {
    return bannerTabletHdImageUrl;
  }

  @Deprecated
  public void setBannerTabletHdImageUrl(String bannerTabletHdImageUrl) {
    this.bannerTabletHdImageUrl = bannerTabletHdImageUrl;
  }


  @Deprecated
  public ImageSettings bannerTabletImageUrl(String bannerTabletImageUrl) {
    this.bannerTabletImageUrl = bannerTabletImageUrl;
    return this;
  }

  /**
   * Banner image. Tablet size (1707x283).
   * @return bannerTabletImageUrl
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public String getBannerTabletImageUrl() {
    return bannerTabletImageUrl;
  }

  @Deprecated
  public void setBannerTabletImageUrl(String bannerTabletImageUrl) {
    this.bannerTabletImageUrl = bannerTabletImageUrl;
  }


  @Deprecated
  public ImageSettings bannerTabletLowImageUrl(String bannerTabletLowImageUrl) {
    this.bannerTabletLowImageUrl = bannerTabletLowImageUrl;
    return this;
  }

  /**
   * Banner image. Tablet size low resolution (1138x188).
   * @return bannerTabletLowImageUrl
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public String getBannerTabletLowImageUrl() {
    return bannerTabletLowImageUrl;
  }

  @Deprecated
  public void setBannerTabletLowImageUrl(String bannerTabletLowImageUrl) {
    this.bannerTabletLowImageUrl = bannerTabletLowImageUrl;
  }


  @Deprecated
  public ImageSettings bannerTvHighImageUrl(String bannerTvHighImageUrl) {
    this.bannerTvHighImageUrl = bannerTvHighImageUrl;
    return this;
  }

  /**
   * Banner image. TV size high resolution (1920x1080).
   * @return bannerTvHighImageUrl
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public String getBannerTvHighImageUrl() {
    return bannerTvHighImageUrl;
  }

  @Deprecated
  public void setBannerTvHighImageUrl(String bannerTvHighImageUrl) {
    this.bannerTvHighImageUrl = bannerTvHighImageUrl;
  }


  @Deprecated
  public ImageSettings bannerTvImageUrl(String bannerTvImageUrl) {
    this.bannerTvImageUrl = bannerTvImageUrl;
    return this;
  }

  /**
   * Banner image. TV size extra high resolution (2120x1192).
   * @return bannerTvImageUrl
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public String getBannerTvImageUrl() {
    return bannerTvImageUrl;
  }

  @Deprecated
  public void setBannerTvImageUrl(String bannerTvImageUrl) {
    this.bannerTvImageUrl = bannerTvImageUrl;
  }


  @Deprecated
  public ImageSettings bannerTvLowImageUrl(String bannerTvLowImageUrl) {
    this.bannerTvLowImageUrl = bannerTvLowImageUrl;
    return this;
  }

  /**
   * Banner image. TV size low resolution (854x480).
   * @return bannerTvLowImageUrl
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public String getBannerTvLowImageUrl() {
    return bannerTvLowImageUrl;
  }

  @Deprecated
  public void setBannerTvLowImageUrl(String bannerTvLowImageUrl) {
    this.bannerTvLowImageUrl = bannerTvLowImageUrl;
  }


  @Deprecated
  public ImageSettings bannerTvMediumImageUrl(String bannerTvMediumImageUrl) {
    this.bannerTvMediumImageUrl = bannerTvMediumImageUrl;
    return this;
  }

  /**
   * Banner image. TV size medium resolution (1280x720).
   * @return bannerTvMediumImageUrl
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public String getBannerTvMediumImageUrl() {
    return bannerTvMediumImageUrl;
  }

  @Deprecated
  public void setBannerTvMediumImageUrl(String bannerTvMediumImageUrl) {
    this.bannerTvMediumImageUrl = bannerTvMediumImageUrl;
  }


  public ImageSettings largeBrandedBannerImageImapScript(LocalizedProperty largeBrandedBannerImageImapScript) {
    this.largeBrandedBannerImageImapScript = largeBrandedBannerImageImapScript;
    return this;
  }

  /**
   * Get largeBrandedBannerImageImapScript
   * @return largeBrandedBannerImageImapScript
   */
  @javax.annotation.Nullable
  public LocalizedProperty getLargeBrandedBannerImageImapScript() {
    return largeBrandedBannerImageImapScript;
  }

  public void setLargeBrandedBannerImageImapScript(LocalizedProperty largeBrandedBannerImageImapScript) {
    this.largeBrandedBannerImageImapScript = largeBrandedBannerImageImapScript;
  }


  public ImageSettings largeBrandedBannerImageUrl(LocalizedProperty largeBrandedBannerImageUrl) {
    this.largeBrandedBannerImageUrl = largeBrandedBannerImageUrl;
    return this;
  }

  /**
   * Get largeBrandedBannerImageUrl
   * @return largeBrandedBannerImageUrl
   */
  @javax.annotation.Nullable
  public LocalizedProperty getLargeBrandedBannerImageUrl() {
    return largeBrandedBannerImageUrl;
  }

  public void setLargeBrandedBannerImageUrl(LocalizedProperty largeBrandedBannerImageUrl) {
    this.largeBrandedBannerImageUrl = largeBrandedBannerImageUrl;
  }


  public ImageSettings smallBrandedBannerImageImapScript(LocalizedProperty smallBrandedBannerImageImapScript) {
    this.smallBrandedBannerImageImapScript = smallBrandedBannerImageImapScript;
    return this;
  }

  /**
   * Get smallBrandedBannerImageImapScript
   * @return smallBrandedBannerImageImapScript
   */
  @javax.annotation.Nullable
  public LocalizedProperty getSmallBrandedBannerImageImapScript() {
    return smallBrandedBannerImageImapScript;
  }

  public void setSmallBrandedBannerImageImapScript(LocalizedProperty smallBrandedBannerImageImapScript) {
    this.smallBrandedBannerImageImapScript = smallBrandedBannerImageImapScript;
  }


  public ImageSettings smallBrandedBannerImageUrl(LocalizedProperty smallBrandedBannerImageUrl) {
    this.smallBrandedBannerImageUrl = smallBrandedBannerImageUrl;
    return this;
  }

  /**
   * Get smallBrandedBannerImageUrl
   * @return smallBrandedBannerImageUrl
   */
  @javax.annotation.Nullable
  public LocalizedProperty getSmallBrandedBannerImageUrl() {
    return smallBrandedBannerImageUrl;
  }

  public void setSmallBrandedBannerImageUrl(LocalizedProperty smallBrandedBannerImageUrl) {
    this.smallBrandedBannerImageUrl = smallBrandedBannerImageUrl;
  }


  @Deprecated
  public ImageSettings trackingImageUrl(String trackingImageUrl) {
    this.trackingImageUrl = trackingImageUrl;
    return this;
  }

  /**
   * The URL for a 1px by 1px tracking pixel that can be used to collect statistics for views of the channel or video pages.
   * @return trackingImageUrl
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public String getTrackingImageUrl() {
    return trackingImageUrl;
  }

  @Deprecated
  public void setTrackingImageUrl(String trackingImageUrl) {
    this.trackingImageUrl = trackingImageUrl;
  }


  @Deprecated
  public ImageSettings watchIconImageUrl(String watchIconImageUrl) {
    this.watchIconImageUrl = watchIconImageUrl;
    return this;
  }

  /**
   * Get watchIconImageUrl
   * @return watchIconImageUrl
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public String getWatchIconImageUrl() {
    return watchIconImageUrl;
  }

  @Deprecated
  public void setWatchIconImageUrl(String watchIconImageUrl) {
    this.watchIconImageUrl = watchIconImageUrl;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ImageSettings imageSettings = (ImageSettings) o;
    return Objects.equals(this.backgroundImageUrl, imageSettings.backgroundImageUrl) &&
        Objects.equals(this.bannerExternalUrl, imageSettings.bannerExternalUrl) &&
        Objects.equals(this.bannerImageUrl, imageSettings.bannerImageUrl) &&
        Objects.equals(this.bannerMobileExtraHdImageUrl, imageSettings.bannerMobileExtraHdImageUrl) &&
        Objects.equals(this.bannerMobileHdImageUrl, imageSettings.bannerMobileHdImageUrl) &&
        Objects.equals(this.bannerMobileImageUrl, imageSettings.bannerMobileImageUrl) &&
        Objects.equals(this.bannerMobileLowImageUrl, imageSettings.bannerMobileLowImageUrl) &&
        Objects.equals(this.bannerMobileMediumHdImageUrl, imageSettings.bannerMobileMediumHdImageUrl) &&
        Objects.equals(this.bannerTabletExtraHdImageUrl, imageSettings.bannerTabletExtraHdImageUrl) &&
        Objects.equals(this.bannerTabletHdImageUrl, imageSettings.bannerTabletHdImageUrl) &&
        Objects.equals(this.bannerTabletImageUrl, imageSettings.bannerTabletImageUrl) &&
        Objects.equals(this.bannerTabletLowImageUrl, imageSettings.bannerTabletLowImageUrl) &&
        Objects.equals(this.bannerTvHighImageUrl, imageSettings.bannerTvHighImageUrl) &&
        Objects.equals(this.bannerTvImageUrl, imageSettings.bannerTvImageUrl) &&
        Objects.equals(this.bannerTvLowImageUrl, imageSettings.bannerTvLowImageUrl) &&
        Objects.equals(this.bannerTvMediumImageUrl, imageSettings.bannerTvMediumImageUrl) &&
        Objects.equals(this.largeBrandedBannerImageImapScript, imageSettings.largeBrandedBannerImageImapScript) &&
        Objects.equals(this.largeBrandedBannerImageUrl, imageSettings.largeBrandedBannerImageUrl) &&
        Objects.equals(this.smallBrandedBannerImageImapScript, imageSettings.smallBrandedBannerImageImapScript) &&
        Objects.equals(this.smallBrandedBannerImageUrl, imageSettings.smallBrandedBannerImageUrl) &&
        Objects.equals(this.trackingImageUrl, imageSettings.trackingImageUrl) &&
        Objects.equals(this.watchIconImageUrl, imageSettings.watchIconImageUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(backgroundImageUrl, bannerExternalUrl, bannerImageUrl, bannerMobileExtraHdImageUrl, bannerMobileHdImageUrl, bannerMobileImageUrl, bannerMobileLowImageUrl, bannerMobileMediumHdImageUrl, bannerTabletExtraHdImageUrl, bannerTabletHdImageUrl, bannerTabletImageUrl, bannerTabletLowImageUrl, bannerTvHighImageUrl, bannerTvImageUrl, bannerTvLowImageUrl, bannerTvMediumImageUrl, largeBrandedBannerImageImapScript, largeBrandedBannerImageUrl, smallBrandedBannerImageImapScript, smallBrandedBannerImageUrl, trackingImageUrl, watchIconImageUrl);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ImageSettings {\n");
    sb.append("    backgroundImageUrl: ").append(toIndentedString(backgroundImageUrl)).append("\n");
    sb.append("    bannerExternalUrl: ").append(toIndentedString(bannerExternalUrl)).append("\n");
    sb.append("    bannerImageUrl: ").append(toIndentedString(bannerImageUrl)).append("\n");
    sb.append("    bannerMobileExtraHdImageUrl: ").append(toIndentedString(bannerMobileExtraHdImageUrl)).append("\n");
    sb.append("    bannerMobileHdImageUrl: ").append(toIndentedString(bannerMobileHdImageUrl)).append("\n");
    sb.append("    bannerMobileImageUrl: ").append(toIndentedString(bannerMobileImageUrl)).append("\n");
    sb.append("    bannerMobileLowImageUrl: ").append(toIndentedString(bannerMobileLowImageUrl)).append("\n");
    sb.append("    bannerMobileMediumHdImageUrl: ").append(toIndentedString(bannerMobileMediumHdImageUrl)).append("\n");
    sb.append("    bannerTabletExtraHdImageUrl: ").append(toIndentedString(bannerTabletExtraHdImageUrl)).append("\n");
    sb.append("    bannerTabletHdImageUrl: ").append(toIndentedString(bannerTabletHdImageUrl)).append("\n");
    sb.append("    bannerTabletImageUrl: ").append(toIndentedString(bannerTabletImageUrl)).append("\n");
    sb.append("    bannerTabletLowImageUrl: ").append(toIndentedString(bannerTabletLowImageUrl)).append("\n");
    sb.append("    bannerTvHighImageUrl: ").append(toIndentedString(bannerTvHighImageUrl)).append("\n");
    sb.append("    bannerTvImageUrl: ").append(toIndentedString(bannerTvImageUrl)).append("\n");
    sb.append("    bannerTvLowImageUrl: ").append(toIndentedString(bannerTvLowImageUrl)).append("\n");
    sb.append("    bannerTvMediumImageUrl: ").append(toIndentedString(bannerTvMediumImageUrl)).append("\n");
    sb.append("    largeBrandedBannerImageImapScript: ").append(toIndentedString(largeBrandedBannerImageImapScript)).append("\n");
    sb.append("    largeBrandedBannerImageUrl: ").append(toIndentedString(largeBrandedBannerImageUrl)).append("\n");
    sb.append("    smallBrandedBannerImageImapScript: ").append(toIndentedString(smallBrandedBannerImageImapScript)).append("\n");
    sb.append("    smallBrandedBannerImageUrl: ").append(toIndentedString(smallBrandedBannerImageUrl)).append("\n");
    sb.append("    trackingImageUrl: ").append(toIndentedString(trackingImageUrl)).append("\n");
    sb.append("    watchIconImageUrl: ").append(toIndentedString(watchIconImageUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("backgroundImageUrl");
    openapiFields.add("bannerExternalUrl");
    openapiFields.add("bannerImageUrl");
    openapiFields.add("bannerMobileExtraHdImageUrl");
    openapiFields.add("bannerMobileHdImageUrl");
    openapiFields.add("bannerMobileImageUrl");
    openapiFields.add("bannerMobileLowImageUrl");
    openapiFields.add("bannerMobileMediumHdImageUrl");
    openapiFields.add("bannerTabletExtraHdImageUrl");
    openapiFields.add("bannerTabletHdImageUrl");
    openapiFields.add("bannerTabletImageUrl");
    openapiFields.add("bannerTabletLowImageUrl");
    openapiFields.add("bannerTvHighImageUrl");
    openapiFields.add("bannerTvImageUrl");
    openapiFields.add("bannerTvLowImageUrl");
    openapiFields.add("bannerTvMediumImageUrl");
    openapiFields.add("largeBrandedBannerImageImapScript");
    openapiFields.add("largeBrandedBannerImageUrl");
    openapiFields.add("smallBrandedBannerImageImapScript");
    openapiFields.add("smallBrandedBannerImageUrl");
    openapiFields.add("trackingImageUrl");
    openapiFields.add("watchIconImageUrl");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ImageSettings
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ImageSettings.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ImageSettings is not found in the empty JSON string", ImageSettings.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ImageSettings.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ImageSettings` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `backgroundImageUrl`
      if (jsonObj.get("backgroundImageUrl") != null && !jsonObj.get("backgroundImageUrl").isJsonNull()) {
        LocalizedProperty.validateJsonElement(jsonObj.get("backgroundImageUrl"));
      }
      if ((jsonObj.get("bannerExternalUrl") != null && !jsonObj.get("bannerExternalUrl").isJsonNull()) && !jsonObj.get("bannerExternalUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bannerExternalUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bannerExternalUrl").toString()));
      }
      if ((jsonObj.get("bannerImageUrl") != null && !jsonObj.get("bannerImageUrl").isJsonNull()) && !jsonObj.get("bannerImageUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bannerImageUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bannerImageUrl").toString()));
      }
      if ((jsonObj.get("bannerMobileExtraHdImageUrl") != null && !jsonObj.get("bannerMobileExtraHdImageUrl").isJsonNull()) && !jsonObj.get("bannerMobileExtraHdImageUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bannerMobileExtraHdImageUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bannerMobileExtraHdImageUrl").toString()));
      }
      if ((jsonObj.get("bannerMobileHdImageUrl") != null && !jsonObj.get("bannerMobileHdImageUrl").isJsonNull()) && !jsonObj.get("bannerMobileHdImageUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bannerMobileHdImageUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bannerMobileHdImageUrl").toString()));
      }
      if ((jsonObj.get("bannerMobileImageUrl") != null && !jsonObj.get("bannerMobileImageUrl").isJsonNull()) && !jsonObj.get("bannerMobileImageUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bannerMobileImageUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bannerMobileImageUrl").toString()));
      }
      if ((jsonObj.get("bannerMobileLowImageUrl") != null && !jsonObj.get("bannerMobileLowImageUrl").isJsonNull()) && !jsonObj.get("bannerMobileLowImageUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bannerMobileLowImageUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bannerMobileLowImageUrl").toString()));
      }
      if ((jsonObj.get("bannerMobileMediumHdImageUrl") != null && !jsonObj.get("bannerMobileMediumHdImageUrl").isJsonNull()) && !jsonObj.get("bannerMobileMediumHdImageUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bannerMobileMediumHdImageUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bannerMobileMediumHdImageUrl").toString()));
      }
      if ((jsonObj.get("bannerTabletExtraHdImageUrl") != null && !jsonObj.get("bannerTabletExtraHdImageUrl").isJsonNull()) && !jsonObj.get("bannerTabletExtraHdImageUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bannerTabletExtraHdImageUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bannerTabletExtraHdImageUrl").toString()));
      }
      if ((jsonObj.get("bannerTabletHdImageUrl") != null && !jsonObj.get("bannerTabletHdImageUrl").isJsonNull()) && !jsonObj.get("bannerTabletHdImageUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bannerTabletHdImageUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bannerTabletHdImageUrl").toString()));
      }
      if ((jsonObj.get("bannerTabletImageUrl") != null && !jsonObj.get("bannerTabletImageUrl").isJsonNull()) && !jsonObj.get("bannerTabletImageUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bannerTabletImageUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bannerTabletImageUrl").toString()));
      }
      if ((jsonObj.get("bannerTabletLowImageUrl") != null && !jsonObj.get("bannerTabletLowImageUrl").isJsonNull()) && !jsonObj.get("bannerTabletLowImageUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bannerTabletLowImageUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bannerTabletLowImageUrl").toString()));
      }
      if ((jsonObj.get("bannerTvHighImageUrl") != null && !jsonObj.get("bannerTvHighImageUrl").isJsonNull()) && !jsonObj.get("bannerTvHighImageUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bannerTvHighImageUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bannerTvHighImageUrl").toString()));
      }
      if ((jsonObj.get("bannerTvImageUrl") != null && !jsonObj.get("bannerTvImageUrl").isJsonNull()) && !jsonObj.get("bannerTvImageUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bannerTvImageUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bannerTvImageUrl").toString()));
      }
      if ((jsonObj.get("bannerTvLowImageUrl") != null && !jsonObj.get("bannerTvLowImageUrl").isJsonNull()) && !jsonObj.get("bannerTvLowImageUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bannerTvLowImageUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bannerTvLowImageUrl").toString()));
      }
      if ((jsonObj.get("bannerTvMediumImageUrl") != null && !jsonObj.get("bannerTvMediumImageUrl").isJsonNull()) && !jsonObj.get("bannerTvMediumImageUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bannerTvMediumImageUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bannerTvMediumImageUrl").toString()));
      }
      // validate the optional field `largeBrandedBannerImageImapScript`
      if (jsonObj.get("largeBrandedBannerImageImapScript") != null && !jsonObj.get("largeBrandedBannerImageImapScript").isJsonNull()) {
        LocalizedProperty.validateJsonElement(jsonObj.get("largeBrandedBannerImageImapScript"));
      }
      // validate the optional field `largeBrandedBannerImageUrl`
      if (jsonObj.get("largeBrandedBannerImageUrl") != null && !jsonObj.get("largeBrandedBannerImageUrl").isJsonNull()) {
        LocalizedProperty.validateJsonElement(jsonObj.get("largeBrandedBannerImageUrl"));
      }
      // validate the optional field `smallBrandedBannerImageImapScript`
      if (jsonObj.get("smallBrandedBannerImageImapScript") != null && !jsonObj.get("smallBrandedBannerImageImapScript").isJsonNull()) {
        LocalizedProperty.validateJsonElement(jsonObj.get("smallBrandedBannerImageImapScript"));
      }
      // validate the optional field `smallBrandedBannerImageUrl`
      if (jsonObj.get("smallBrandedBannerImageUrl") != null && !jsonObj.get("smallBrandedBannerImageUrl").isJsonNull()) {
        LocalizedProperty.validateJsonElement(jsonObj.get("smallBrandedBannerImageUrl"));
      }
      if ((jsonObj.get("trackingImageUrl") != null && !jsonObj.get("trackingImageUrl").isJsonNull()) && !jsonObj.get("trackingImageUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `trackingImageUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("trackingImageUrl").toString()));
      }
      if ((jsonObj.get("watchIconImageUrl") != null && !jsonObj.get("watchIconImageUrl").isJsonNull()) && !jsonObj.get("watchIconImageUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `watchIconImageUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("watchIconImageUrl").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ImageSettings.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ImageSettings' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ImageSettings> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ImageSettings.class));

       return (TypeAdapter<T>) new TypeAdapter<ImageSettings>() {
           @Override
           public void write(JsonWriter out, ImageSettings value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ImageSettings read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ImageSettings given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ImageSettings
   * @throws IOException if the JSON string is invalid with respect to ImageSettings
   */
  public static ImageSettings fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ImageSettings.class);
  }

  /**
   * Convert an instance of ImageSettings to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

