/*
 * YouTube Data API v3
 * The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.ChannelAuditDetails;
import org.openapitools.client.model.ChannelBrandingSettings;
import org.openapitools.client.model.ChannelContentDetails;
import org.openapitools.client.model.ChannelContentOwnerDetails;
import org.openapitools.client.model.ChannelConversionPings;
import org.openapitools.client.model.ChannelLocalization;
import org.openapitools.client.model.ChannelSnippet;
import org.openapitools.client.model.ChannelStatistics;
import org.openapitools.client.model.ChannelStatus;
import org.openapitools.client.model.ChannelTopicDetails;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A *channel* resource contains information about a YouTube channel.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:42:06.328357-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Channel {
  public static final String SERIALIZED_NAME_AUDIT_DETAILS = "auditDetails";
  @SerializedName(SERIALIZED_NAME_AUDIT_DETAILS)
  private ChannelAuditDetails auditDetails;

  public static final String SERIALIZED_NAME_BRANDING_SETTINGS = "brandingSettings";
  @SerializedName(SERIALIZED_NAME_BRANDING_SETTINGS)
  private ChannelBrandingSettings brandingSettings;

  public static final String SERIALIZED_NAME_CONTENT_DETAILS = "contentDetails";
  @SerializedName(SERIALIZED_NAME_CONTENT_DETAILS)
  private ChannelContentDetails contentDetails;

  public static final String SERIALIZED_NAME_CONTENT_OWNER_DETAILS = "contentOwnerDetails";
  @SerializedName(SERIALIZED_NAME_CONTENT_OWNER_DETAILS)
  private ChannelContentOwnerDetails contentOwnerDetails;

  public static final String SERIALIZED_NAME_CONVERSION_PINGS = "conversionPings";
  @SerializedName(SERIALIZED_NAME_CONVERSION_PINGS)
  private ChannelConversionPings conversionPings;

  public static final String SERIALIZED_NAME_ETAG = "etag";
  @SerializedName(SERIALIZED_NAME_ETAG)
  private String etag;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_KIND = "kind";
  @SerializedName(SERIALIZED_NAME_KIND)
  private String kind = "youtube#channel";

  public static final String SERIALIZED_NAME_LOCALIZATIONS = "localizations";
  @SerializedName(SERIALIZED_NAME_LOCALIZATIONS)
  private Map<String, ChannelLocalization> localizations = new HashMap<>();

  public static final String SERIALIZED_NAME_SNIPPET = "snippet";
  @SerializedName(SERIALIZED_NAME_SNIPPET)
  private ChannelSnippet snippet;

  public static final String SERIALIZED_NAME_STATISTICS = "statistics";
  @SerializedName(SERIALIZED_NAME_STATISTICS)
  private ChannelStatistics statistics;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private ChannelStatus status;

  public static final String SERIALIZED_NAME_TOPIC_DETAILS = "topicDetails";
  @SerializedName(SERIALIZED_NAME_TOPIC_DETAILS)
  private ChannelTopicDetails topicDetails;

  public Channel() {
  }

  public Channel auditDetails(ChannelAuditDetails auditDetails) {
    this.auditDetails = auditDetails;
    return this;
  }

  /**
   * Get auditDetails
   * @return auditDetails
   */
  @javax.annotation.Nullable
  public ChannelAuditDetails getAuditDetails() {
    return auditDetails;
  }

  public void setAuditDetails(ChannelAuditDetails auditDetails) {
    this.auditDetails = auditDetails;
  }


  public Channel brandingSettings(ChannelBrandingSettings brandingSettings) {
    this.brandingSettings = brandingSettings;
    return this;
  }

  /**
   * Get brandingSettings
   * @return brandingSettings
   */
  @javax.annotation.Nullable
  public ChannelBrandingSettings getBrandingSettings() {
    return brandingSettings;
  }

  public void setBrandingSettings(ChannelBrandingSettings brandingSettings) {
    this.brandingSettings = brandingSettings;
  }


  public Channel contentDetails(ChannelContentDetails contentDetails) {
    this.contentDetails = contentDetails;
    return this;
  }

  /**
   * Get contentDetails
   * @return contentDetails
   */
  @javax.annotation.Nullable
  public ChannelContentDetails getContentDetails() {
    return contentDetails;
  }

  public void setContentDetails(ChannelContentDetails contentDetails) {
    this.contentDetails = contentDetails;
  }


  public Channel contentOwnerDetails(ChannelContentOwnerDetails contentOwnerDetails) {
    this.contentOwnerDetails = contentOwnerDetails;
    return this;
  }

  /**
   * Get contentOwnerDetails
   * @return contentOwnerDetails
   */
  @javax.annotation.Nullable
  public ChannelContentOwnerDetails getContentOwnerDetails() {
    return contentOwnerDetails;
  }

  public void setContentOwnerDetails(ChannelContentOwnerDetails contentOwnerDetails) {
    this.contentOwnerDetails = contentOwnerDetails;
  }


  public Channel conversionPings(ChannelConversionPings conversionPings) {
    this.conversionPings = conversionPings;
    return this;
  }

  /**
   * Get conversionPings
   * @return conversionPings
   */
  @javax.annotation.Nullable
  public ChannelConversionPings getConversionPings() {
    return conversionPings;
  }

  public void setConversionPings(ChannelConversionPings conversionPings) {
    this.conversionPings = conversionPings;
  }


  public Channel etag(String etag) {
    this.etag = etag;
    return this;
  }

  /**
   * Etag of this resource.
   * @return etag
   */
  @javax.annotation.Nullable
  public String getEtag() {
    return etag;
  }

  public void setEtag(String etag) {
    this.etag = etag;
  }


  public Channel id(String id) {
    this.id = id;
    return this;
  }

  /**
   * The ID that YouTube uses to uniquely identify the channel.
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public Channel kind(String kind) {
    this.kind = kind;
    return this;
  }

  /**
   * Identifies what kind of resource this is. Value: the fixed string \&quot;youtube#channel\&quot;.
   * @return kind
   */
  @javax.annotation.Nullable
  public String getKind() {
    return kind;
  }

  public void setKind(String kind) {
    this.kind = kind;
  }


  public Channel localizations(Map<String, ChannelLocalization> localizations) {
    this.localizations = localizations;
    return this;
  }

  public Channel putLocalizationsItem(String key, ChannelLocalization localizationsItem) {
    if (this.localizations == null) {
      this.localizations = new HashMap<>();
    }
    this.localizations.put(key, localizationsItem);
    return this;
  }

  /**
   * Localizations for different languages
   * @return localizations
   */
  @javax.annotation.Nullable
  public Map<String, ChannelLocalization> getLocalizations() {
    return localizations;
  }

  public void setLocalizations(Map<String, ChannelLocalization> localizations) {
    this.localizations = localizations;
  }


  public Channel snippet(ChannelSnippet snippet) {
    this.snippet = snippet;
    return this;
  }

  /**
   * Get snippet
   * @return snippet
   */
  @javax.annotation.Nullable
  public ChannelSnippet getSnippet() {
    return snippet;
  }

  public void setSnippet(ChannelSnippet snippet) {
    this.snippet = snippet;
  }


  public Channel statistics(ChannelStatistics statistics) {
    this.statistics = statistics;
    return this;
  }

  /**
   * Get statistics
   * @return statistics
   */
  @javax.annotation.Nullable
  public ChannelStatistics getStatistics() {
    return statistics;
  }

  public void setStatistics(ChannelStatistics statistics) {
    this.statistics = statistics;
  }


  public Channel status(ChannelStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public ChannelStatus getStatus() {
    return status;
  }

  public void setStatus(ChannelStatus status) {
    this.status = status;
  }


  public Channel topicDetails(ChannelTopicDetails topicDetails) {
    this.topicDetails = topicDetails;
    return this;
  }

  /**
   * Get topicDetails
   * @return topicDetails
   */
  @javax.annotation.Nullable
  public ChannelTopicDetails getTopicDetails() {
    return topicDetails;
  }

  public void setTopicDetails(ChannelTopicDetails topicDetails) {
    this.topicDetails = topicDetails;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Channel channel = (Channel) o;
    return Objects.equals(this.auditDetails, channel.auditDetails) &&
        Objects.equals(this.brandingSettings, channel.brandingSettings) &&
        Objects.equals(this.contentDetails, channel.contentDetails) &&
        Objects.equals(this.contentOwnerDetails, channel.contentOwnerDetails) &&
        Objects.equals(this.conversionPings, channel.conversionPings) &&
        Objects.equals(this.etag, channel.etag) &&
        Objects.equals(this.id, channel.id) &&
        Objects.equals(this.kind, channel.kind) &&
        Objects.equals(this.localizations, channel.localizations) &&
        Objects.equals(this.snippet, channel.snippet) &&
        Objects.equals(this.statistics, channel.statistics) &&
        Objects.equals(this.status, channel.status) &&
        Objects.equals(this.topicDetails, channel.topicDetails);
  }

  @Override
  public int hashCode() {
    return Objects.hash(auditDetails, brandingSettings, contentDetails, contentOwnerDetails, conversionPings, etag, id, kind, localizations, snippet, statistics, status, topicDetails);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Channel {\n");
    sb.append("    auditDetails: ").append(toIndentedString(auditDetails)).append("\n");
    sb.append("    brandingSettings: ").append(toIndentedString(brandingSettings)).append("\n");
    sb.append("    contentDetails: ").append(toIndentedString(contentDetails)).append("\n");
    sb.append("    contentOwnerDetails: ").append(toIndentedString(contentOwnerDetails)).append("\n");
    sb.append("    conversionPings: ").append(toIndentedString(conversionPings)).append("\n");
    sb.append("    etag: ").append(toIndentedString(etag)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
    sb.append("    localizations: ").append(toIndentedString(localizations)).append("\n");
    sb.append("    snippet: ").append(toIndentedString(snippet)).append("\n");
    sb.append("    statistics: ").append(toIndentedString(statistics)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    topicDetails: ").append(toIndentedString(topicDetails)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("auditDetails");
    openapiFields.add("brandingSettings");
    openapiFields.add("contentDetails");
    openapiFields.add("contentOwnerDetails");
    openapiFields.add("conversionPings");
    openapiFields.add("etag");
    openapiFields.add("id");
    openapiFields.add("kind");
    openapiFields.add("localizations");
    openapiFields.add("snippet");
    openapiFields.add("statistics");
    openapiFields.add("status");
    openapiFields.add("topicDetails");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Channel
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Channel.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Channel is not found in the empty JSON string", Channel.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Channel.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Channel` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `auditDetails`
      if (jsonObj.get("auditDetails") != null && !jsonObj.get("auditDetails").isJsonNull()) {
        ChannelAuditDetails.validateJsonElement(jsonObj.get("auditDetails"));
      }
      // validate the optional field `brandingSettings`
      if (jsonObj.get("brandingSettings") != null && !jsonObj.get("brandingSettings").isJsonNull()) {
        ChannelBrandingSettings.validateJsonElement(jsonObj.get("brandingSettings"));
      }
      // validate the optional field `contentDetails`
      if (jsonObj.get("contentDetails") != null && !jsonObj.get("contentDetails").isJsonNull()) {
        ChannelContentDetails.validateJsonElement(jsonObj.get("contentDetails"));
      }
      // validate the optional field `contentOwnerDetails`
      if (jsonObj.get("contentOwnerDetails") != null && !jsonObj.get("contentOwnerDetails").isJsonNull()) {
        ChannelContentOwnerDetails.validateJsonElement(jsonObj.get("contentOwnerDetails"));
      }
      // validate the optional field `conversionPings`
      if (jsonObj.get("conversionPings") != null && !jsonObj.get("conversionPings").isJsonNull()) {
        ChannelConversionPings.validateJsonElement(jsonObj.get("conversionPings"));
      }
      if ((jsonObj.get("etag") != null && !jsonObj.get("etag").isJsonNull()) && !jsonObj.get("etag").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `etag` to be a primitive type in the JSON string but got `%s`", jsonObj.get("etag").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("kind") != null && !jsonObj.get("kind").isJsonNull()) && !jsonObj.get("kind").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kind` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kind").toString()));
      }
      // validate the optional field `snippet`
      if (jsonObj.get("snippet") != null && !jsonObj.get("snippet").isJsonNull()) {
        ChannelSnippet.validateJsonElement(jsonObj.get("snippet"));
      }
      // validate the optional field `statistics`
      if (jsonObj.get("statistics") != null && !jsonObj.get("statistics").isJsonNull()) {
        ChannelStatistics.validateJsonElement(jsonObj.get("statistics"));
      }
      // validate the optional field `status`
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) {
        ChannelStatus.validateJsonElement(jsonObj.get("status"));
      }
      // validate the optional field `topicDetails`
      if (jsonObj.get("topicDetails") != null && !jsonObj.get("topicDetails").isJsonNull()) {
        ChannelTopicDetails.validateJsonElement(jsonObj.get("topicDetails"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Channel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Channel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Channel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Channel.class));

       return (TypeAdapter<T>) new TypeAdapter<Channel>() {
           @Override
           public void write(JsonWriter out, Channel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Channel read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Channel given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Channel
   * @throws IOException if the JSON string is invalid with respect to Channel
   */
  public static Channel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Channel.class);
  }

  /**
   * Convert an instance of Channel to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

