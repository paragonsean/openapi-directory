/*
 * YouTube Data API v3
 * The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.VideoAgeGating;
import org.openapitools.client.model.VideoContentDetails;
import org.openapitools.client.model.VideoFileDetails;
import org.openapitools.client.model.VideoLiveStreamingDetails;
import org.openapitools.client.model.VideoLocalization;
import org.openapitools.client.model.VideoMonetizationDetails;
import org.openapitools.client.model.VideoPlayer;
import org.openapitools.client.model.VideoProcessingDetails;
import org.openapitools.client.model.VideoRecordingDetails;
import org.openapitools.client.model.VideoSnippet;
import org.openapitools.client.model.VideoStatistics;
import org.openapitools.client.model.VideoStatus;
import org.openapitools.client.model.VideoSuggestions;
import org.openapitools.client.model.VideoTopicDetails;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A *video* resource represents a YouTube video.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:42:06.328357-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Video {
  public static final String SERIALIZED_NAME_AGE_GATING = "ageGating";
  @SerializedName(SERIALIZED_NAME_AGE_GATING)
  private VideoAgeGating ageGating;

  public static final String SERIALIZED_NAME_CONTENT_DETAILS = "contentDetails";
  @SerializedName(SERIALIZED_NAME_CONTENT_DETAILS)
  private VideoContentDetails contentDetails;

  public static final String SERIALIZED_NAME_ETAG = "etag";
  @SerializedName(SERIALIZED_NAME_ETAG)
  private String etag;

  public static final String SERIALIZED_NAME_FILE_DETAILS = "fileDetails";
  @SerializedName(SERIALIZED_NAME_FILE_DETAILS)
  private VideoFileDetails fileDetails;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_KIND = "kind";
  @SerializedName(SERIALIZED_NAME_KIND)
  private String kind = "youtube#video";

  public static final String SERIALIZED_NAME_LIVE_STREAMING_DETAILS = "liveStreamingDetails";
  @SerializedName(SERIALIZED_NAME_LIVE_STREAMING_DETAILS)
  private VideoLiveStreamingDetails liveStreamingDetails;

  public static final String SERIALIZED_NAME_LOCALIZATIONS = "localizations";
  @SerializedName(SERIALIZED_NAME_LOCALIZATIONS)
  private Map<String, VideoLocalization> localizations = new HashMap<>();

  public static final String SERIALIZED_NAME_MONETIZATION_DETAILS = "monetizationDetails";
  @SerializedName(SERIALIZED_NAME_MONETIZATION_DETAILS)
  private VideoMonetizationDetails monetizationDetails;

  public static final String SERIALIZED_NAME_PLAYER = "player";
  @SerializedName(SERIALIZED_NAME_PLAYER)
  private VideoPlayer player;

  public static final String SERIALIZED_NAME_PROCESSING_DETAILS = "processingDetails";
  @SerializedName(SERIALIZED_NAME_PROCESSING_DETAILS)
  private VideoProcessingDetails processingDetails;

  public static final String SERIALIZED_NAME_PROJECT_DETAILS = "projectDetails";
  @SerializedName(SERIALIZED_NAME_PROJECT_DETAILS)
  private Object projectDetails;

  public static final String SERIALIZED_NAME_RECORDING_DETAILS = "recordingDetails";
  @SerializedName(SERIALIZED_NAME_RECORDING_DETAILS)
  private VideoRecordingDetails recordingDetails;

  public static final String SERIALIZED_NAME_SNIPPET = "snippet";
  @SerializedName(SERIALIZED_NAME_SNIPPET)
  private VideoSnippet snippet;

  public static final String SERIALIZED_NAME_STATISTICS = "statistics";
  @SerializedName(SERIALIZED_NAME_STATISTICS)
  private VideoStatistics statistics;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private VideoStatus status;

  public static final String SERIALIZED_NAME_SUGGESTIONS = "suggestions";
  @SerializedName(SERIALIZED_NAME_SUGGESTIONS)
  private VideoSuggestions suggestions;

  public static final String SERIALIZED_NAME_TOPIC_DETAILS = "topicDetails";
  @SerializedName(SERIALIZED_NAME_TOPIC_DETAILS)
  private VideoTopicDetails topicDetails;

  public Video() {
  }

  public Video ageGating(VideoAgeGating ageGating) {
    this.ageGating = ageGating;
    return this;
  }

  /**
   * Get ageGating
   * @return ageGating
   */
  @javax.annotation.Nullable
  public VideoAgeGating getAgeGating() {
    return ageGating;
  }

  public void setAgeGating(VideoAgeGating ageGating) {
    this.ageGating = ageGating;
  }


  public Video contentDetails(VideoContentDetails contentDetails) {
    this.contentDetails = contentDetails;
    return this;
  }

  /**
   * Get contentDetails
   * @return contentDetails
   */
  @javax.annotation.Nullable
  public VideoContentDetails getContentDetails() {
    return contentDetails;
  }

  public void setContentDetails(VideoContentDetails contentDetails) {
    this.contentDetails = contentDetails;
  }


  public Video etag(String etag) {
    this.etag = etag;
    return this;
  }

  /**
   * Etag of this resource.
   * @return etag
   */
  @javax.annotation.Nullable
  public String getEtag() {
    return etag;
  }

  public void setEtag(String etag) {
    this.etag = etag;
  }


  public Video fileDetails(VideoFileDetails fileDetails) {
    this.fileDetails = fileDetails;
    return this;
  }

  /**
   * Get fileDetails
   * @return fileDetails
   */
  @javax.annotation.Nullable
  public VideoFileDetails getFileDetails() {
    return fileDetails;
  }

  public void setFileDetails(VideoFileDetails fileDetails) {
    this.fileDetails = fileDetails;
  }


  public Video id(String id) {
    this.id = id;
    return this;
  }

  /**
   * The ID that YouTube uses to uniquely identify the video.
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public Video kind(String kind) {
    this.kind = kind;
    return this;
  }

  /**
   * Identifies what kind of resource this is. Value: the fixed string \&quot;youtube#video\&quot;.
   * @return kind
   */
  @javax.annotation.Nullable
  public String getKind() {
    return kind;
  }

  public void setKind(String kind) {
    this.kind = kind;
  }


  public Video liveStreamingDetails(VideoLiveStreamingDetails liveStreamingDetails) {
    this.liveStreamingDetails = liveStreamingDetails;
    return this;
  }

  /**
   * Get liveStreamingDetails
   * @return liveStreamingDetails
   */
  @javax.annotation.Nullable
  public VideoLiveStreamingDetails getLiveStreamingDetails() {
    return liveStreamingDetails;
  }

  public void setLiveStreamingDetails(VideoLiveStreamingDetails liveStreamingDetails) {
    this.liveStreamingDetails = liveStreamingDetails;
  }


  public Video localizations(Map<String, VideoLocalization> localizations) {
    this.localizations = localizations;
    return this;
  }

  public Video putLocalizationsItem(String key, VideoLocalization localizationsItem) {
    if (this.localizations == null) {
      this.localizations = new HashMap<>();
    }
    this.localizations.put(key, localizationsItem);
    return this;
  }

  /**
   * The localizations object contains localized versions of the basic details about the video, such as its title and description.
   * @return localizations
   */
  @javax.annotation.Nullable
  public Map<String, VideoLocalization> getLocalizations() {
    return localizations;
  }

  public void setLocalizations(Map<String, VideoLocalization> localizations) {
    this.localizations = localizations;
  }


  public Video monetizationDetails(VideoMonetizationDetails monetizationDetails) {
    this.monetizationDetails = monetizationDetails;
    return this;
  }

  /**
   * Get monetizationDetails
   * @return monetizationDetails
   */
  @javax.annotation.Nullable
  public VideoMonetizationDetails getMonetizationDetails() {
    return monetizationDetails;
  }

  public void setMonetizationDetails(VideoMonetizationDetails monetizationDetails) {
    this.monetizationDetails = monetizationDetails;
  }


  public Video player(VideoPlayer player) {
    this.player = player;
    return this;
  }

  /**
   * Get player
   * @return player
   */
  @javax.annotation.Nullable
  public VideoPlayer getPlayer() {
    return player;
  }

  public void setPlayer(VideoPlayer player) {
    this.player = player;
  }


  public Video processingDetails(VideoProcessingDetails processingDetails) {
    this.processingDetails = processingDetails;
    return this;
  }

  /**
   * Get processingDetails
   * @return processingDetails
   */
  @javax.annotation.Nullable
  public VideoProcessingDetails getProcessingDetails() {
    return processingDetails;
  }

  public void setProcessingDetails(VideoProcessingDetails processingDetails) {
    this.processingDetails = processingDetails;
  }


  public Video projectDetails(Object projectDetails) {
    this.projectDetails = projectDetails;
    return this;
  }

  /**
   * DEPRECATED. b/157517979: This part was never populated after it was added. However, it sees non-zero traffic because there is generated client code in the wild that refers to it [1]. We keep this field and do NOT remove it because otherwise V3 would return an error when this part gets requested [2]. [1] https://developers.google.com/resources/api-libraries/documentation/youtube/v3/csharp/latest/classGoogle_1_1Apis_1_1YouTube_1_1v3_1_1Data_1_1VideoProjectDetails.html [2] http://google3/video/youtube/src/python/servers/data_api/common.py?l&#x3D;1565-1569&amp;rcl&#x3D;344141677
   * @return projectDetails
   */
  @javax.annotation.Nullable
  public Object getProjectDetails() {
    return projectDetails;
  }

  public void setProjectDetails(Object projectDetails) {
    this.projectDetails = projectDetails;
  }


  public Video recordingDetails(VideoRecordingDetails recordingDetails) {
    this.recordingDetails = recordingDetails;
    return this;
  }

  /**
   * Get recordingDetails
   * @return recordingDetails
   */
  @javax.annotation.Nullable
  public VideoRecordingDetails getRecordingDetails() {
    return recordingDetails;
  }

  public void setRecordingDetails(VideoRecordingDetails recordingDetails) {
    this.recordingDetails = recordingDetails;
  }


  public Video snippet(VideoSnippet snippet) {
    this.snippet = snippet;
    return this;
  }

  /**
   * Get snippet
   * @return snippet
   */
  @javax.annotation.Nullable
  public VideoSnippet getSnippet() {
    return snippet;
  }

  public void setSnippet(VideoSnippet snippet) {
    this.snippet = snippet;
  }


  public Video statistics(VideoStatistics statistics) {
    this.statistics = statistics;
    return this;
  }

  /**
   * Get statistics
   * @return statistics
   */
  @javax.annotation.Nullable
  public VideoStatistics getStatistics() {
    return statistics;
  }

  public void setStatistics(VideoStatistics statistics) {
    this.statistics = statistics;
  }


  public Video status(VideoStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public VideoStatus getStatus() {
    return status;
  }

  public void setStatus(VideoStatus status) {
    this.status = status;
  }


  public Video suggestions(VideoSuggestions suggestions) {
    this.suggestions = suggestions;
    return this;
  }

  /**
   * Get suggestions
   * @return suggestions
   */
  @javax.annotation.Nullable
  public VideoSuggestions getSuggestions() {
    return suggestions;
  }

  public void setSuggestions(VideoSuggestions suggestions) {
    this.suggestions = suggestions;
  }


  public Video topicDetails(VideoTopicDetails topicDetails) {
    this.topicDetails = topicDetails;
    return this;
  }

  /**
   * Get topicDetails
   * @return topicDetails
   */
  @javax.annotation.Nullable
  public VideoTopicDetails getTopicDetails() {
    return topicDetails;
  }

  public void setTopicDetails(VideoTopicDetails topicDetails) {
    this.topicDetails = topicDetails;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Video video = (Video) o;
    return Objects.equals(this.ageGating, video.ageGating) &&
        Objects.equals(this.contentDetails, video.contentDetails) &&
        Objects.equals(this.etag, video.etag) &&
        Objects.equals(this.fileDetails, video.fileDetails) &&
        Objects.equals(this.id, video.id) &&
        Objects.equals(this.kind, video.kind) &&
        Objects.equals(this.liveStreamingDetails, video.liveStreamingDetails) &&
        Objects.equals(this.localizations, video.localizations) &&
        Objects.equals(this.monetizationDetails, video.monetizationDetails) &&
        Objects.equals(this.player, video.player) &&
        Objects.equals(this.processingDetails, video.processingDetails) &&
        Objects.equals(this.projectDetails, video.projectDetails) &&
        Objects.equals(this.recordingDetails, video.recordingDetails) &&
        Objects.equals(this.snippet, video.snippet) &&
        Objects.equals(this.statistics, video.statistics) &&
        Objects.equals(this.status, video.status) &&
        Objects.equals(this.suggestions, video.suggestions) &&
        Objects.equals(this.topicDetails, video.topicDetails);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ageGating, contentDetails, etag, fileDetails, id, kind, liveStreamingDetails, localizations, monetizationDetails, player, processingDetails, projectDetails, recordingDetails, snippet, statistics, status, suggestions, topicDetails);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Video {\n");
    sb.append("    ageGating: ").append(toIndentedString(ageGating)).append("\n");
    sb.append("    contentDetails: ").append(toIndentedString(contentDetails)).append("\n");
    sb.append("    etag: ").append(toIndentedString(etag)).append("\n");
    sb.append("    fileDetails: ").append(toIndentedString(fileDetails)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
    sb.append("    liveStreamingDetails: ").append(toIndentedString(liveStreamingDetails)).append("\n");
    sb.append("    localizations: ").append(toIndentedString(localizations)).append("\n");
    sb.append("    monetizationDetails: ").append(toIndentedString(monetizationDetails)).append("\n");
    sb.append("    player: ").append(toIndentedString(player)).append("\n");
    sb.append("    processingDetails: ").append(toIndentedString(processingDetails)).append("\n");
    sb.append("    projectDetails: ").append(toIndentedString(projectDetails)).append("\n");
    sb.append("    recordingDetails: ").append(toIndentedString(recordingDetails)).append("\n");
    sb.append("    snippet: ").append(toIndentedString(snippet)).append("\n");
    sb.append("    statistics: ").append(toIndentedString(statistics)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    suggestions: ").append(toIndentedString(suggestions)).append("\n");
    sb.append("    topicDetails: ").append(toIndentedString(topicDetails)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ageGating");
    openapiFields.add("contentDetails");
    openapiFields.add("etag");
    openapiFields.add("fileDetails");
    openapiFields.add("id");
    openapiFields.add("kind");
    openapiFields.add("liveStreamingDetails");
    openapiFields.add("localizations");
    openapiFields.add("monetizationDetails");
    openapiFields.add("player");
    openapiFields.add("processingDetails");
    openapiFields.add("projectDetails");
    openapiFields.add("recordingDetails");
    openapiFields.add("snippet");
    openapiFields.add("statistics");
    openapiFields.add("status");
    openapiFields.add("suggestions");
    openapiFields.add("topicDetails");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Video
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Video.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Video is not found in the empty JSON string", Video.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Video.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Video` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `ageGating`
      if (jsonObj.get("ageGating") != null && !jsonObj.get("ageGating").isJsonNull()) {
        VideoAgeGating.validateJsonElement(jsonObj.get("ageGating"));
      }
      // validate the optional field `contentDetails`
      if (jsonObj.get("contentDetails") != null && !jsonObj.get("contentDetails").isJsonNull()) {
        VideoContentDetails.validateJsonElement(jsonObj.get("contentDetails"));
      }
      if ((jsonObj.get("etag") != null && !jsonObj.get("etag").isJsonNull()) && !jsonObj.get("etag").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `etag` to be a primitive type in the JSON string but got `%s`", jsonObj.get("etag").toString()));
      }
      // validate the optional field `fileDetails`
      if (jsonObj.get("fileDetails") != null && !jsonObj.get("fileDetails").isJsonNull()) {
        VideoFileDetails.validateJsonElement(jsonObj.get("fileDetails"));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("kind") != null && !jsonObj.get("kind").isJsonNull()) && !jsonObj.get("kind").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kind` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kind").toString()));
      }
      // validate the optional field `liveStreamingDetails`
      if (jsonObj.get("liveStreamingDetails") != null && !jsonObj.get("liveStreamingDetails").isJsonNull()) {
        VideoLiveStreamingDetails.validateJsonElement(jsonObj.get("liveStreamingDetails"));
      }
      // validate the optional field `monetizationDetails`
      if (jsonObj.get("monetizationDetails") != null && !jsonObj.get("monetizationDetails").isJsonNull()) {
        VideoMonetizationDetails.validateJsonElement(jsonObj.get("monetizationDetails"));
      }
      // validate the optional field `player`
      if (jsonObj.get("player") != null && !jsonObj.get("player").isJsonNull()) {
        VideoPlayer.validateJsonElement(jsonObj.get("player"));
      }
      // validate the optional field `processingDetails`
      if (jsonObj.get("processingDetails") != null && !jsonObj.get("processingDetails").isJsonNull()) {
        VideoProcessingDetails.validateJsonElement(jsonObj.get("processingDetails"));
      }
      // validate the optional field `recordingDetails`
      if (jsonObj.get("recordingDetails") != null && !jsonObj.get("recordingDetails").isJsonNull()) {
        VideoRecordingDetails.validateJsonElement(jsonObj.get("recordingDetails"));
      }
      // validate the optional field `snippet`
      if (jsonObj.get("snippet") != null && !jsonObj.get("snippet").isJsonNull()) {
        VideoSnippet.validateJsonElement(jsonObj.get("snippet"));
      }
      // validate the optional field `statistics`
      if (jsonObj.get("statistics") != null && !jsonObj.get("statistics").isJsonNull()) {
        VideoStatistics.validateJsonElement(jsonObj.get("statistics"));
      }
      // validate the optional field `status`
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) {
        VideoStatus.validateJsonElement(jsonObj.get("status"));
      }
      // validate the optional field `suggestions`
      if (jsonObj.get("suggestions") != null && !jsonObj.get("suggestions").isJsonNull()) {
        VideoSuggestions.validateJsonElement(jsonObj.get("suggestions"));
      }
      // validate the optional field `topicDetails`
      if (jsonObj.get("topicDetails") != null && !jsonObj.get("topicDetails").isJsonNull()) {
        VideoTopicDetails.validateJsonElement(jsonObj.get("topicDetails"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Video.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Video' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Video> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Video.class));

       return (TypeAdapter<T>) new TypeAdapter<Video>() {
           @Override
           public void write(JsonWriter out, Video value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Video read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Video given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Video
   * @throws IOException if the JSON string is invalid with respect to Video
   */
  public static Video fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Video.class);
  }

  /**
   * Convert an instance of Video to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

