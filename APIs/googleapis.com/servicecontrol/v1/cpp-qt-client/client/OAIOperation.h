/**
 * Service Control API
 * Provides admission control and telemetry reporting for services integrated with Service Infrastructure. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOperation.h
 *
 * Represents information regarding an operation.
 */

#ifndef OAIOperation_H
#define OAIOperation_H

#include <QJsonObject>

#include "OAILogEntry.h"
#include "OAIMetricValueSet.h"
#include "OAIQuotaProperties.h"
#include "OAIResourceInfo.h"
#include "OAITraceSpan.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAILogEntry;
class OAIMetricValueSet;
class OAIQuotaProperties;
class OAIResourceInfo;
class OAITraceSpan;

class OAIOperation : public OAIObject {
public:
    OAIOperation();
    OAIOperation(QString json);
    ~OAIOperation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getConsumerId() const;
    void setConsumerId(const QString &consumer_id);
    bool is_consumer_id_Set() const;
    bool is_consumer_id_Valid() const;

    QString getEndTime() const;
    void setEndTime(const QString &end_time);
    bool is_end_time_Set() const;
    bool is_end_time_Valid() const;

    QString getImportance() const;
    void setImportance(const QString &importance);
    bool is_importance_Set() const;
    bool is_importance_Valid() const;

    QMap<QString, QString> getLabels() const;
    void setLabels(const QMap<QString, QString> &labels);
    bool is_labels_Set() const;
    bool is_labels_Valid() const;

    QList<OAILogEntry> getLogEntries() const;
    void setLogEntries(const QList<OAILogEntry> &log_entries);
    bool is_log_entries_Set() const;
    bool is_log_entries_Valid() const;

    QList<OAIMetricValueSet> getMetricValueSets() const;
    void setMetricValueSets(const QList<OAIMetricValueSet> &metric_value_sets);
    bool is_metric_value_sets_Set() const;
    bool is_metric_value_sets_Valid() const;

    QString getOperationId() const;
    void setOperationId(const QString &operation_id);
    bool is_operation_id_Set() const;
    bool is_operation_id_Valid() const;

    QString getOperationName() const;
    void setOperationName(const QString &operation_name);
    bool is_operation_name_Set() const;
    bool is_operation_name_Valid() const;

    OAIQuotaProperties getQuotaProperties() const;
    void setQuotaProperties(const OAIQuotaProperties &quota_properties);
    bool is_quota_properties_Set() const;
    bool is_quota_properties_Valid() const;

    QList<OAIResourceInfo> getResources() const;
    void setResources(const QList<OAIResourceInfo> &resources);
    bool is_resources_Set() const;
    bool is_resources_Valid() const;

    QString getStartTime() const;
    void setStartTime(const QString &start_time);
    bool is_start_time_Set() const;
    bool is_start_time_Valid() const;

    QList<OAITraceSpan> getTraceSpans() const;
    void setTraceSpans(const QList<OAITraceSpan> &trace_spans);
    bool is_trace_spans_Set() const;
    bool is_trace_spans_Valid() const;

    QMap<QString, QString> getUserLabels() const;
    void setUserLabels(const QMap<QString, QString> &user_labels);
    bool is_user_labels_Set() const;
    bool is_user_labels_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_consumer_id;
    bool m_consumer_id_isSet;
    bool m_consumer_id_isValid;

    QString m_end_time;
    bool m_end_time_isSet;
    bool m_end_time_isValid;

    QString m_importance;
    bool m_importance_isSet;
    bool m_importance_isValid;

    QMap<QString, QString> m_labels;
    bool m_labels_isSet;
    bool m_labels_isValid;

    QList<OAILogEntry> m_log_entries;
    bool m_log_entries_isSet;
    bool m_log_entries_isValid;

    QList<OAIMetricValueSet> m_metric_value_sets;
    bool m_metric_value_sets_isSet;
    bool m_metric_value_sets_isValid;

    QString m_operation_id;
    bool m_operation_id_isSet;
    bool m_operation_id_isValid;

    QString m_operation_name;
    bool m_operation_name_isSet;
    bool m_operation_name_isValid;

    OAIQuotaProperties m_quota_properties;
    bool m_quota_properties_isSet;
    bool m_quota_properties_isValid;

    QList<OAIResourceInfo> m_resources;
    bool m_resources_isSet;
    bool m_resources_isValid;

    QString m_start_time;
    bool m_start_time_isSet;
    bool m_start_time_isValid;

    QList<OAITraceSpan> m_trace_spans;
    bool m_trace_spans_isSet;
    bool m_trace_spans_isValid;

    QMap<QString, QString> m_user_labels;
    bool m_user_labels_isSet;
    bool m_user_labels_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOperation)

#endif // OAIOperation_H
