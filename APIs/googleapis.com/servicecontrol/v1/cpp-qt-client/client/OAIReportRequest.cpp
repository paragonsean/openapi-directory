/**
 * Service Control API
 * Provides admission control and telemetry reporting for services integrated with Service Infrastructure. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIReportRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIReportRequest::OAIReportRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIReportRequest::OAIReportRequest() {
    this->initializeModel();
}

OAIReportRequest::~OAIReportRequest() {}

void OAIReportRequest::initializeModel() {

    m_operations_isSet = false;
    m_operations_isValid = false;

    m_service_config_id_isSet = false;
    m_service_config_id_isValid = false;
}

void OAIReportRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIReportRequest::fromJsonObject(QJsonObject json) {

    m_operations_isValid = ::OpenAPI::fromJsonValue(m_operations, json[QString("operations")]);
    m_operations_isSet = !json[QString("operations")].isNull() && m_operations_isValid;

    m_service_config_id_isValid = ::OpenAPI::fromJsonValue(m_service_config_id, json[QString("serviceConfigId")]);
    m_service_config_id_isSet = !json[QString("serviceConfigId")].isNull() && m_service_config_id_isValid;
}

QString OAIReportRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIReportRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_operations.size() > 0) {
        obj.insert(QString("operations"), ::OpenAPI::toJsonValue(m_operations));
    }
    if (m_service_config_id_isSet) {
        obj.insert(QString("serviceConfigId"), ::OpenAPI::toJsonValue(m_service_config_id));
    }
    return obj;
}

QList<OAIOperation> OAIReportRequest::getOperations() const {
    return m_operations;
}
void OAIReportRequest::setOperations(const QList<OAIOperation> &operations) {
    m_operations = operations;
    m_operations_isSet = true;
}

bool OAIReportRequest::is_operations_Set() const{
    return m_operations_isSet;
}

bool OAIReportRequest::is_operations_Valid() const{
    return m_operations_isValid;
}

QString OAIReportRequest::getServiceConfigId() const {
    return m_service_config_id;
}
void OAIReportRequest::setServiceConfigId(const QString &service_config_id) {
    m_service_config_id = service_config_id;
    m_service_config_id_isSet = true;
}

bool OAIReportRequest::is_service_config_id_Set() const{
    return m_service_config_id_isSet;
}

bool OAIReportRequest::is_service_config_id_Valid() const{
    return m_service_config_id_isValid;
}

bool OAIReportRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_operations.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_config_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIReportRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
