/**
 * Service Control API
 * Provides admission control and telemetry reporting for services integrated with Service Infrastructure. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILogEntry.h
 *
 * An individual log entry.
 */

#ifndef OAILogEntry_H
#define OAILogEntry_H

#include <QJsonObject>

#include "OAIHttpRequest.h"
#include "OAILogEntryOperation.h"
#include "OAILogEntrySourceLocation.h"
#include <QJsonValue>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIHttpRequest;
class OAILogEntryOperation;
class OAILogEntrySourceLocation;

class OAILogEntry : public OAIObject {
public:
    OAILogEntry();
    OAILogEntry(QString json);
    ~OAILogEntry() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIHttpRequest getHttpRequest() const;
    void setHttpRequest(const OAIHttpRequest &http_request);
    bool is_http_request_Set() const;
    bool is_http_request_Valid() const;

    QString getInsertId() const;
    void setInsertId(const QString &insert_id);
    bool is_insert_id_Set() const;
    bool is_insert_id_Valid() const;

    QMap<QString, QString> getLabels() const;
    void setLabels(const QMap<QString, QString> &labels);
    bool is_labels_Set() const;
    bool is_labels_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAILogEntryOperation getOperation() const;
    void setOperation(const OAILogEntryOperation &operation);
    bool is_operation_Set() const;
    bool is_operation_Valid() const;

    QMap<QString, QJsonValue> getProtoPayload() const;
    void setProtoPayload(const QMap<QString, QJsonValue> &proto_payload);
    bool is_proto_payload_Set() const;
    bool is_proto_payload_Valid() const;

    QString getSeverity() const;
    void setSeverity(const QString &severity);
    bool is_severity_Set() const;
    bool is_severity_Valid() const;

    OAILogEntrySourceLocation getSourceLocation() const;
    void setSourceLocation(const OAILogEntrySourceLocation &source_location);
    bool is_source_location_Set() const;
    bool is_source_location_Valid() const;

    QMap<QString, QJsonValue> getStructPayload() const;
    void setStructPayload(const QMap<QString, QJsonValue> &struct_payload);
    bool is_struct_payload_Set() const;
    bool is_struct_payload_Valid() const;

    QString getTextPayload() const;
    void setTextPayload(const QString &text_payload);
    bool is_text_payload_Set() const;
    bool is_text_payload_Valid() const;

    QString getTimestamp() const;
    void setTimestamp(const QString &timestamp);
    bool is_timestamp_Set() const;
    bool is_timestamp_Valid() const;

    QString getTrace() const;
    void setTrace(const QString &trace);
    bool is_trace_Set() const;
    bool is_trace_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIHttpRequest m_http_request;
    bool m_http_request_isSet;
    bool m_http_request_isValid;

    QString m_insert_id;
    bool m_insert_id_isSet;
    bool m_insert_id_isValid;

    QMap<QString, QString> m_labels;
    bool m_labels_isSet;
    bool m_labels_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAILogEntryOperation m_operation;
    bool m_operation_isSet;
    bool m_operation_isValid;

    QMap<QString, QJsonValue> m_proto_payload;
    bool m_proto_payload_isSet;
    bool m_proto_payload_isValid;

    QString m_severity;
    bool m_severity_isSet;
    bool m_severity_isValid;

    OAILogEntrySourceLocation m_source_location;
    bool m_source_location_isSet;
    bool m_source_location_isValid;

    QMap<QString, QJsonValue> m_struct_payload;
    bool m_struct_payload_isSet;
    bool m_struct_payload_isValid;

    QString m_text_payload;
    bool m_text_payload_isSet;
    bool m_text_payload_isValid;

    QString m_timestamp;
    bool m_timestamp_isSet;
    bool m_timestamp_isValid;

    QString m_trace;
    bool m_trace_isSet;
    bool m_trace_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILogEntry)

#endif // OAILogEntry_H
