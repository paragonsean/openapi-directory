/**
 * Service Control API
 * Provides admission control and telemetry reporting for services integrated with Service Infrastructure. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIThirdPartyPrincipal.h
 *
 * Third party identity principal.
 */

#ifndef OAIThirdPartyPrincipal_H
#define OAIThirdPartyPrincipal_H

#include <QJsonObject>

#include <QJsonValue>
#include <QMap>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIThirdPartyPrincipal : public OAIObject {
public:
    OAIThirdPartyPrincipal();
    OAIThirdPartyPrincipal(QString json);
    ~OAIThirdPartyPrincipal() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QMap<QString, QJsonValue> getThirdPartyClaims() const;
    void setThirdPartyClaims(const QMap<QString, QJsonValue> &third_party_claims);
    bool is_third_party_claims_Set() const;
    bool is_third_party_claims_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QMap<QString, QJsonValue> m_third_party_claims;
    bool m_third_party_claims_isSet;
    bool m_third_party_claims_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIThirdPartyPrincipal)

#endif // OAIThirdPartyPrincipal_H
