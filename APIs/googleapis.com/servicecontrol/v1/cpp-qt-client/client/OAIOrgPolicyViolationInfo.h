/**
 * Service Control API
 * Provides admission control and telemetry reporting for services integrated with Service Infrastructure. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOrgPolicyViolationInfo.h
 *
 * Represents OrgPolicy Violation information.
 */

#ifndef OAIOrgPolicyViolationInfo_H
#define OAIOrgPolicyViolationInfo_H

#include <QJsonObject>

#include "OAIViolationInfo.h"
#include <QJsonValue>
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIViolationInfo;

class OAIOrgPolicyViolationInfo : public OAIObject {
public:
    OAIOrgPolicyViolationInfo();
    OAIOrgPolicyViolationInfo(QString json);
    ~OAIOrgPolicyViolationInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QMap<QString, QJsonValue> getPayload() const;
    void setPayload(const QMap<QString, QJsonValue> &payload);
    bool is_payload_Set() const;
    bool is_payload_Valid() const;

    QMap<QString, QString> getResourceTags() const;
    void setResourceTags(const QMap<QString, QString> &resource_tags);
    bool is_resource_tags_Set() const;
    bool is_resource_tags_Valid() const;

    QString getResourceType() const;
    void setResourceType(const QString &resource_type);
    bool is_resource_type_Set() const;
    bool is_resource_type_Valid() const;

    QList<OAIViolationInfo> getViolationInfo() const;
    void setViolationInfo(const QList<OAIViolationInfo> &violation_info);
    bool is_violation_info_Set() const;
    bool is_violation_info_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QMap<QString, QJsonValue> m_payload;
    bool m_payload_isSet;
    bool m_payload_isValid;

    QMap<QString, QString> m_resource_tags;
    bool m_resource_tags_isSet;
    bool m_resource_tags_isValid;

    QString m_resource_type;
    bool m_resource_type_isSet;
    bool m_resource_type_isValid;

    QList<OAIViolationInfo> m_violation_info;
    bool m_violation_info_isSet;
    bool m_violation_info_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOrgPolicyViolationInfo)

#endif // OAIOrgPolicyViolationInfo_H
