/**
 * Service Control API
 * Provides admission control and telemetry reporting for services integrated with Service Infrastructure. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMetricValue.h
 *
 * Represents a single metric value.
 */

#ifndef OAIMetricValue_H
#define OAIMetricValue_H

#include <QJsonObject>

#include "OAIDistribution.h"
#include "OAIMoney.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDistribution;
class OAIMoney;

class OAIMetricValue : public OAIObject {
public:
    OAIMetricValue();
    OAIMetricValue(QString json);
    ~OAIMetricValue() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isBoolValue() const;
    void setBoolValue(const bool &bool_value);
    bool is_bool_value_Set() const;
    bool is_bool_value_Valid() const;

    OAIDistribution getDistributionValue() const;
    void setDistributionValue(const OAIDistribution &distribution_value);
    bool is_distribution_value_Set() const;
    bool is_distribution_value_Valid() const;

    double getDoubleValue() const;
    void setDoubleValue(const double &double_value);
    bool is_double_value_Set() const;
    bool is_double_value_Valid() const;

    QString getEndTime() const;
    void setEndTime(const QString &end_time);
    bool is_end_time_Set() const;
    bool is_end_time_Valid() const;

    QString getInt64Value() const;
    void setInt64Value(const QString &int64_value);
    bool is_int64_value_Set() const;
    bool is_int64_value_Valid() const;

    QMap<QString, QString> getLabels() const;
    void setLabels(const QMap<QString, QString> &labels);
    bool is_labels_Set() const;
    bool is_labels_Valid() const;

    OAIMoney getMoneyValue() const;
    void setMoneyValue(const OAIMoney &money_value);
    bool is_money_value_Set() const;
    bool is_money_value_Valid() const;

    QString getStartTime() const;
    void setStartTime(const QString &start_time);
    bool is_start_time_Set() const;
    bool is_start_time_Valid() const;

    QString getStringValue() const;
    void setStringValue(const QString &string_value);
    bool is_string_value_Set() const;
    bool is_string_value_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_bool_value;
    bool m_bool_value_isSet;
    bool m_bool_value_isValid;

    OAIDistribution m_distribution_value;
    bool m_distribution_value_isSet;
    bool m_distribution_value_isValid;

    double m_double_value;
    bool m_double_value_isSet;
    bool m_double_value_isValid;

    QString m_end_time;
    bool m_end_time_isSet;
    bool m_end_time_isValid;

    QString m_int64_value;
    bool m_int64_value_isSet;
    bool m_int64_value_isValid;

    QMap<QString, QString> m_labels;
    bool m_labels_isSet;
    bool m_labels_isValid;

    OAIMoney m_money_value;
    bool m_money_value_isSet;
    bool m_money_value_isValid;

    QString m_start_time;
    bool m_start_time_isSet;
    bool m_start_time_isValid;

    QString m_string_value;
    bool m_string_value_isSet;
    bool m_string_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMetricValue)

#endif // OAIMetricValue_H
