# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class QuotaProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, quota_mode: str=None):
        """QuotaProperties - a model defined in OpenAPI

        :param quota_mode: The quota_mode of this QuotaProperties.
        """
        self.openapi_types = {
            'quota_mode': str
        }

        self.attribute_map = {
            'quota_mode': 'quotaMode'
        }

        self._quota_mode = quota_mode

    @classmethod
    def from_dict(cls, dikt: dict) -> 'QuotaProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The QuotaProperties of this QuotaProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def quota_mode(self):
        """Gets the quota_mode of this QuotaProperties.

        Quota mode for this operation.

        :return: The quota_mode of this QuotaProperties.
        :rtype: str
        """
        return self._quota_mode

    @quota_mode.setter
    def quota_mode(self, quota_mode):
        """Sets the quota_mode of this QuotaProperties.

        Quota mode for this operation.

        :param quota_mode: The quota_mode of this QuotaProperties.
        :type quota_mode: str
        """
        allowed_values = ["ACQUIRE", "ACQUIRE_BEST_EFFORT", "CHECK"]  # noqa: E501
        if quota_mode not in allowed_values:
            raise ValueError(
                "Invalid value for `quota_mode` ({0}), must be one of {1}"
                .format(quota_mode, allowed_values)
            )

        self._quota_mode = quota_mode
