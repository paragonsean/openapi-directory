# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class V1HttpRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cache_fill_bytes: str=None, cache_hit: bool=None, cache_lookup: bool=None, cache_validated_with_origin_server: bool=None, latency: str=None, protocol: str=None, referer: str=None, remote_ip: str=None, request_method: str=None, request_size: str=None, request_url: str=None, response_size: str=None, server_ip: str=None, status: int=None, user_agent: str=None):
        """V1HttpRequest - a model defined in OpenAPI

        :param cache_fill_bytes: The cache_fill_bytes of this V1HttpRequest.
        :param cache_hit: The cache_hit of this V1HttpRequest.
        :param cache_lookup: The cache_lookup of this V1HttpRequest.
        :param cache_validated_with_origin_server: The cache_validated_with_origin_server of this V1HttpRequest.
        :param latency: The latency of this V1HttpRequest.
        :param protocol: The protocol of this V1HttpRequest.
        :param referer: The referer of this V1HttpRequest.
        :param remote_ip: The remote_ip of this V1HttpRequest.
        :param request_method: The request_method of this V1HttpRequest.
        :param request_size: The request_size of this V1HttpRequest.
        :param request_url: The request_url of this V1HttpRequest.
        :param response_size: The response_size of this V1HttpRequest.
        :param server_ip: The server_ip of this V1HttpRequest.
        :param status: The status of this V1HttpRequest.
        :param user_agent: The user_agent of this V1HttpRequest.
        """
        self.openapi_types = {
            'cache_fill_bytes': str,
            'cache_hit': bool,
            'cache_lookup': bool,
            'cache_validated_with_origin_server': bool,
            'latency': str,
            'protocol': str,
            'referer': str,
            'remote_ip': str,
            'request_method': str,
            'request_size': str,
            'request_url': str,
            'response_size': str,
            'server_ip': str,
            'status': int,
            'user_agent': str
        }

        self.attribute_map = {
            'cache_fill_bytes': 'cacheFillBytes',
            'cache_hit': 'cacheHit',
            'cache_lookup': 'cacheLookup',
            'cache_validated_with_origin_server': 'cacheValidatedWithOriginServer',
            'latency': 'latency',
            'protocol': 'protocol',
            'referer': 'referer',
            'remote_ip': 'remoteIp',
            'request_method': 'requestMethod',
            'request_size': 'requestSize',
            'request_url': 'requestUrl',
            'response_size': 'responseSize',
            'server_ip': 'serverIp',
            'status': 'status',
            'user_agent': 'userAgent'
        }

        self._cache_fill_bytes = cache_fill_bytes
        self._cache_hit = cache_hit
        self._cache_lookup = cache_lookup
        self._cache_validated_with_origin_server = cache_validated_with_origin_server
        self._latency = latency
        self._protocol = protocol
        self._referer = referer
        self._remote_ip = remote_ip
        self._request_method = request_method
        self._request_size = request_size
        self._request_url = request_url
        self._response_size = response_size
        self._server_ip = server_ip
        self._status = status
        self._user_agent = user_agent

    @classmethod
    def from_dict(cls, dikt: dict) -> 'V1HttpRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The V1HttpRequest of this V1HttpRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cache_fill_bytes(self):
        """Gets the cache_fill_bytes of this V1HttpRequest.

        The number of HTTP response bytes inserted into cache. Set only when a cache fill was attempted.

        :return: The cache_fill_bytes of this V1HttpRequest.
        :rtype: str
        """
        return self._cache_fill_bytes

    @cache_fill_bytes.setter
    def cache_fill_bytes(self, cache_fill_bytes):
        """Sets the cache_fill_bytes of this V1HttpRequest.

        The number of HTTP response bytes inserted into cache. Set only when a cache fill was attempted.

        :param cache_fill_bytes: The cache_fill_bytes of this V1HttpRequest.
        :type cache_fill_bytes: str
        """

        self._cache_fill_bytes = cache_fill_bytes

    @property
    def cache_hit(self):
        """Gets the cache_hit of this V1HttpRequest.

        Whether or not an entity was served from cache (with or without validation).

        :return: The cache_hit of this V1HttpRequest.
        :rtype: bool
        """
        return self._cache_hit

    @cache_hit.setter
    def cache_hit(self, cache_hit):
        """Sets the cache_hit of this V1HttpRequest.

        Whether or not an entity was served from cache (with or without validation).

        :param cache_hit: The cache_hit of this V1HttpRequest.
        :type cache_hit: bool
        """

        self._cache_hit = cache_hit

    @property
    def cache_lookup(self):
        """Gets the cache_lookup of this V1HttpRequest.

        Whether or not a cache lookup was attempted.

        :return: The cache_lookup of this V1HttpRequest.
        :rtype: bool
        """
        return self._cache_lookup

    @cache_lookup.setter
    def cache_lookup(self, cache_lookup):
        """Sets the cache_lookup of this V1HttpRequest.

        Whether or not a cache lookup was attempted.

        :param cache_lookup: The cache_lookup of this V1HttpRequest.
        :type cache_lookup: bool
        """

        self._cache_lookup = cache_lookup

    @property
    def cache_validated_with_origin_server(self):
        """Gets the cache_validated_with_origin_server of this V1HttpRequest.

        Whether or not the response was validated with the origin server before being served from cache. This field is only meaningful if `cache_hit` is True.

        :return: The cache_validated_with_origin_server of this V1HttpRequest.
        :rtype: bool
        """
        return self._cache_validated_with_origin_server

    @cache_validated_with_origin_server.setter
    def cache_validated_with_origin_server(self, cache_validated_with_origin_server):
        """Sets the cache_validated_with_origin_server of this V1HttpRequest.

        Whether or not the response was validated with the origin server before being served from cache. This field is only meaningful if `cache_hit` is True.

        :param cache_validated_with_origin_server: The cache_validated_with_origin_server of this V1HttpRequest.
        :type cache_validated_with_origin_server: bool
        """

        self._cache_validated_with_origin_server = cache_validated_with_origin_server

    @property
    def latency(self):
        """Gets the latency of this V1HttpRequest.

        The request processing latency on the server, from the time the request was received until the response was sent.

        :return: The latency of this V1HttpRequest.
        :rtype: str
        """
        return self._latency

    @latency.setter
    def latency(self, latency):
        """Sets the latency of this V1HttpRequest.

        The request processing latency on the server, from the time the request was received until the response was sent.

        :param latency: The latency of this V1HttpRequest.
        :type latency: str
        """

        self._latency = latency

    @property
    def protocol(self):
        """Gets the protocol of this V1HttpRequest.

        Protocol used for the request. Examples: \"HTTP/1.1\", \"HTTP/2\", \"websocket\"

        :return: The protocol of this V1HttpRequest.
        :rtype: str
        """
        return self._protocol

    @protocol.setter
    def protocol(self, protocol):
        """Sets the protocol of this V1HttpRequest.

        Protocol used for the request. Examples: \"HTTP/1.1\", \"HTTP/2\", \"websocket\"

        :param protocol: The protocol of this V1HttpRequest.
        :type protocol: str
        """

        self._protocol = protocol

    @property
    def referer(self):
        """Gets the referer of this V1HttpRequest.

        The referer URL of the request, as defined in [HTTP/1.1 Header Field Definitions](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html).

        :return: The referer of this V1HttpRequest.
        :rtype: str
        """
        return self._referer

    @referer.setter
    def referer(self, referer):
        """Sets the referer of this V1HttpRequest.

        The referer URL of the request, as defined in [HTTP/1.1 Header Field Definitions](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html).

        :param referer: The referer of this V1HttpRequest.
        :type referer: str
        """

        self._referer = referer

    @property
    def remote_ip(self):
        """Gets the remote_ip of this V1HttpRequest.

        The IP address (IPv4 or IPv6) of the client that issued the HTTP request. Examples: `\"192.168.1.1\"`, `\"FE80::0202:B3FF:FE1E:8329\"`.

        :return: The remote_ip of this V1HttpRequest.
        :rtype: str
        """
        return self._remote_ip

    @remote_ip.setter
    def remote_ip(self, remote_ip):
        """Sets the remote_ip of this V1HttpRequest.

        The IP address (IPv4 or IPv6) of the client that issued the HTTP request. Examples: `\"192.168.1.1\"`, `\"FE80::0202:B3FF:FE1E:8329\"`.

        :param remote_ip: The remote_ip of this V1HttpRequest.
        :type remote_ip: str
        """

        self._remote_ip = remote_ip

    @property
    def request_method(self):
        """Gets the request_method of this V1HttpRequest.

        The request method. Examples: `\"GET\"`, `\"HEAD\"`, `\"PUT\"`, `\"POST\"`.

        :return: The request_method of this V1HttpRequest.
        :rtype: str
        """
        return self._request_method

    @request_method.setter
    def request_method(self, request_method):
        """Sets the request_method of this V1HttpRequest.

        The request method. Examples: `\"GET\"`, `\"HEAD\"`, `\"PUT\"`, `\"POST\"`.

        :param request_method: The request_method of this V1HttpRequest.
        :type request_method: str
        """

        self._request_method = request_method

    @property
    def request_size(self):
        """Gets the request_size of this V1HttpRequest.

        The size of the HTTP request message in bytes, including the request headers and the request body.

        :return: The request_size of this V1HttpRequest.
        :rtype: str
        """
        return self._request_size

    @request_size.setter
    def request_size(self, request_size):
        """Sets the request_size of this V1HttpRequest.

        The size of the HTTP request message in bytes, including the request headers and the request body.

        :param request_size: The request_size of this V1HttpRequest.
        :type request_size: str
        """

        self._request_size = request_size

    @property
    def request_url(self):
        """Gets the request_url of this V1HttpRequest.

        The scheme (http, https), the host name, the path, and the query portion of the URL that was requested. Example: `\"http://example.com/some/info?color=red\"`.

        :return: The request_url of this V1HttpRequest.
        :rtype: str
        """
        return self._request_url

    @request_url.setter
    def request_url(self, request_url):
        """Sets the request_url of this V1HttpRequest.

        The scheme (http, https), the host name, the path, and the query portion of the URL that was requested. Example: `\"http://example.com/some/info?color=red\"`.

        :param request_url: The request_url of this V1HttpRequest.
        :type request_url: str
        """

        self._request_url = request_url

    @property
    def response_size(self):
        """Gets the response_size of this V1HttpRequest.

        The size of the HTTP response message sent back to the client, in bytes, including the response headers and the response body.

        :return: The response_size of this V1HttpRequest.
        :rtype: str
        """
        return self._response_size

    @response_size.setter
    def response_size(self, response_size):
        """Sets the response_size of this V1HttpRequest.

        The size of the HTTP response message sent back to the client, in bytes, including the response headers and the response body.

        :param response_size: The response_size of this V1HttpRequest.
        :type response_size: str
        """

        self._response_size = response_size

    @property
    def server_ip(self):
        """Gets the server_ip of this V1HttpRequest.

        The IP address (IPv4 or IPv6) of the origin server that the request was sent to.

        :return: The server_ip of this V1HttpRequest.
        :rtype: str
        """
        return self._server_ip

    @server_ip.setter
    def server_ip(self, server_ip):
        """Sets the server_ip of this V1HttpRequest.

        The IP address (IPv4 or IPv6) of the origin server that the request was sent to.

        :param server_ip: The server_ip of this V1HttpRequest.
        :type server_ip: str
        """

        self._server_ip = server_ip

    @property
    def status(self):
        """Gets the status of this V1HttpRequest.

        The response code indicating the status of the response. Examples: 200, 404.

        :return: The status of this V1HttpRequest.
        :rtype: int
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this V1HttpRequest.

        The response code indicating the status of the response. Examples: 200, 404.

        :param status: The status of this V1HttpRequest.
        :type status: int
        """

        self._status = status

    @property
    def user_agent(self):
        """Gets the user_agent of this V1HttpRequest.

        The user agent sent by the client. Example: `\"Mozilla/4.0 (compatible; MSIE 6.0; Windows 98; Q312461; .NET CLR 1.0.3705)\"`.

        :return: The user_agent of this V1HttpRequest.
        :rtype: str
        """
        return self._user_agent

    @user_agent.setter
    def user_agent(self, user_agent):
        """Sets the user_agent of this V1HttpRequest.

        The user agent sent by the client. Example: `\"Mozilla/4.0 (compatible; MSIE 6.0; Windows 98; Q312461; .NET CLR 1.0.3705)\"`.

        :param user_agent: The user_agent of this V1HttpRequest.
        :type user_agent: str
        """

        self._user_agent = user_agent
