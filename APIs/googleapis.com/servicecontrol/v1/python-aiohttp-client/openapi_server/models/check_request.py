# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.operation import Operation
from openapi_server import util


class CheckRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, operation: Operation=None, request_project_settings: bool=None, service_config_id: str=None, skip_activation_check: bool=None):
        """CheckRequest - a model defined in OpenAPI

        :param operation: The operation of this CheckRequest.
        :param request_project_settings: The request_project_settings of this CheckRequest.
        :param service_config_id: The service_config_id of this CheckRequest.
        :param skip_activation_check: The skip_activation_check of this CheckRequest.
        """
        self.openapi_types = {
            'operation': Operation,
            'request_project_settings': bool,
            'service_config_id': str,
            'skip_activation_check': bool
        }

        self.attribute_map = {
            'operation': 'operation',
            'request_project_settings': 'requestProjectSettings',
            'service_config_id': 'serviceConfigId',
            'skip_activation_check': 'skipActivationCheck'
        }

        self._operation = operation
        self._request_project_settings = request_project_settings
        self._service_config_id = service_config_id
        self._skip_activation_check = skip_activation_check

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CheckRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CheckRequest of this CheckRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def operation(self):
        """Gets the operation of this CheckRequest.


        :return: The operation of this CheckRequest.
        :rtype: Operation
        """
        return self._operation

    @operation.setter
    def operation(self, operation):
        """Sets the operation of this CheckRequest.


        :param operation: The operation of this CheckRequest.
        :type operation: Operation
        """

        self._operation = operation

    @property
    def request_project_settings(self):
        """Gets the request_project_settings of this CheckRequest.

        Requests the project settings to be returned as part of the check response.

        :return: The request_project_settings of this CheckRequest.
        :rtype: bool
        """
        return self._request_project_settings

    @request_project_settings.setter
    def request_project_settings(self, request_project_settings):
        """Sets the request_project_settings of this CheckRequest.

        Requests the project settings to be returned as part of the check response.

        :param request_project_settings: The request_project_settings of this CheckRequest.
        :type request_project_settings: bool
        """

        self._request_project_settings = request_project_settings

    @property
    def service_config_id(self):
        """Gets the service_config_id of this CheckRequest.

        Specifies which version of service configuration should be used to process the request. If unspecified or no matching version can be found, the latest one will be used.

        :return: The service_config_id of this CheckRequest.
        :rtype: str
        """
        return self._service_config_id

    @service_config_id.setter
    def service_config_id(self, service_config_id):
        """Sets the service_config_id of this CheckRequest.

        Specifies which version of service configuration should be used to process the request. If unspecified or no matching version can be found, the latest one will be used.

        :param service_config_id: The service_config_id of this CheckRequest.
        :type service_config_id: str
        """

        self._service_config_id = service_config_id

    @property
    def skip_activation_check(self):
        """Gets the skip_activation_check of this CheckRequest.

        Indicates if service activation check should be skipped for this request. Default behavior is to perform the check and apply relevant quota. WARNING: Setting this flag to \"true\" will disable quota enforcement.

        :return: The skip_activation_check of this CheckRequest.
        :rtype: bool
        """
        return self._skip_activation_check

    @skip_activation_check.setter
    def skip_activation_check(self, skip_activation_check):
        """Sets the skip_activation_check of this CheckRequest.

        Indicates if service activation check should be skipped for this request. Default behavior is to perform the check and apply relevant quota. WARNING: Setting this flag to \"true\" will disable quota enforcement.

        :param skip_activation_check: The skip_activation_check of this CheckRequest.
        :type skip_activation_check: bool
        """

        self._skip_activation_check = skip_activation_check
