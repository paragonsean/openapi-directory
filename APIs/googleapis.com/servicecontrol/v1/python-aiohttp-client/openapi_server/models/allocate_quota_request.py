# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.quota_operation import QuotaOperation
from openapi_server import util


class AllocateQuotaRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, allocate_operation: QuotaOperation=None, service_config_id: str=None):
        """AllocateQuotaRequest - a model defined in OpenAPI

        :param allocate_operation: The allocate_operation of this AllocateQuotaRequest.
        :param service_config_id: The service_config_id of this AllocateQuotaRequest.
        """
        self.openapi_types = {
            'allocate_operation': QuotaOperation,
            'service_config_id': str
        }

        self.attribute_map = {
            'allocate_operation': 'allocateOperation',
            'service_config_id': 'serviceConfigId'
        }

        self._allocate_operation = allocate_operation
        self._service_config_id = service_config_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AllocateQuotaRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AllocateQuotaRequest of this AllocateQuotaRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allocate_operation(self):
        """Gets the allocate_operation of this AllocateQuotaRequest.


        :return: The allocate_operation of this AllocateQuotaRequest.
        :rtype: QuotaOperation
        """
        return self._allocate_operation

    @allocate_operation.setter
    def allocate_operation(self, allocate_operation):
        """Sets the allocate_operation of this AllocateQuotaRequest.


        :param allocate_operation: The allocate_operation of this AllocateQuotaRequest.
        :type allocate_operation: QuotaOperation
        """

        self._allocate_operation = allocate_operation

    @property
    def service_config_id(self):
        """Gets the service_config_id of this AllocateQuotaRequest.

        Specifies which version of service configuration should be used to process the request. If unspecified or no matching version can be found, the latest one will be used.

        :return: The service_config_id of this AllocateQuotaRequest.
        :rtype: str
        """
        return self._service_config_id

    @service_config_id.setter
    def service_config_id(self, service_config_id):
        """Sets the service_config_id of this AllocateQuotaRequest.

        Specifies which version of service configuration should be used to process the request. If unspecified or no matching version can be found, the latest one will be used.

        :param service_config_id: The service_config_id of this AllocateQuotaRequest.
        :type service_config_id: str
        """

        self._service_config_id = service_config_id
