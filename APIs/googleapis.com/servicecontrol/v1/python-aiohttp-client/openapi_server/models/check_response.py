# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.check_error import CheckError
from openapi_server.models.check_info import CheckInfo
from openapi_server.models.quota_info import QuotaInfo
from openapi_server import util


class CheckResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, check_errors: List[CheckError]=None, check_info: CheckInfo=None, operation_id: str=None, quota_info: QuotaInfo=None, service_config_id: str=None, service_rollout_id: str=None):
        """CheckResponse - a model defined in OpenAPI

        :param check_errors: The check_errors of this CheckResponse.
        :param check_info: The check_info of this CheckResponse.
        :param operation_id: The operation_id of this CheckResponse.
        :param quota_info: The quota_info of this CheckResponse.
        :param service_config_id: The service_config_id of this CheckResponse.
        :param service_rollout_id: The service_rollout_id of this CheckResponse.
        """
        self.openapi_types = {
            'check_errors': List[CheckError],
            'check_info': CheckInfo,
            'operation_id': str,
            'quota_info': QuotaInfo,
            'service_config_id': str,
            'service_rollout_id': str
        }

        self.attribute_map = {
            'check_errors': 'checkErrors',
            'check_info': 'checkInfo',
            'operation_id': 'operationId',
            'quota_info': 'quotaInfo',
            'service_config_id': 'serviceConfigId',
            'service_rollout_id': 'serviceRolloutId'
        }

        self._check_errors = check_errors
        self._check_info = check_info
        self._operation_id = operation_id
        self._quota_info = quota_info
        self._service_config_id = service_config_id
        self._service_rollout_id = service_rollout_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CheckResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CheckResponse of this CheckResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def check_errors(self):
        """Gets the check_errors of this CheckResponse.

        Indicate the decision of the check. If no check errors are present, the service should process the operation. Otherwise the service should use the list of errors to determine the appropriate action.

        :return: The check_errors of this CheckResponse.
        :rtype: List[CheckError]
        """
        return self._check_errors

    @check_errors.setter
    def check_errors(self, check_errors):
        """Sets the check_errors of this CheckResponse.

        Indicate the decision of the check. If no check errors are present, the service should process the operation. Otherwise the service should use the list of errors to determine the appropriate action.

        :param check_errors: The check_errors of this CheckResponse.
        :type check_errors: List[CheckError]
        """

        self._check_errors = check_errors

    @property
    def check_info(self):
        """Gets the check_info of this CheckResponse.


        :return: The check_info of this CheckResponse.
        :rtype: CheckInfo
        """
        return self._check_info

    @check_info.setter
    def check_info(self, check_info):
        """Sets the check_info of this CheckResponse.


        :param check_info: The check_info of this CheckResponse.
        :type check_info: CheckInfo
        """

        self._check_info = check_info

    @property
    def operation_id(self):
        """Gets the operation_id of this CheckResponse.

        The same operation_id value used in the CheckRequest. Used for logging and diagnostics purposes.

        :return: The operation_id of this CheckResponse.
        :rtype: str
        """
        return self._operation_id

    @operation_id.setter
    def operation_id(self, operation_id):
        """Sets the operation_id of this CheckResponse.

        The same operation_id value used in the CheckRequest. Used for logging and diagnostics purposes.

        :param operation_id: The operation_id of this CheckResponse.
        :type operation_id: str
        """

        self._operation_id = operation_id

    @property
    def quota_info(self):
        """Gets the quota_info of this CheckResponse.


        :return: The quota_info of this CheckResponse.
        :rtype: QuotaInfo
        """
        return self._quota_info

    @quota_info.setter
    def quota_info(self, quota_info):
        """Sets the quota_info of this CheckResponse.


        :param quota_info: The quota_info of this CheckResponse.
        :type quota_info: QuotaInfo
        """

        self._quota_info = quota_info

    @property
    def service_config_id(self):
        """Gets the service_config_id of this CheckResponse.

        The actual config id used to process the request.

        :return: The service_config_id of this CheckResponse.
        :rtype: str
        """
        return self._service_config_id

    @service_config_id.setter
    def service_config_id(self, service_config_id):
        """Sets the service_config_id of this CheckResponse.

        The actual config id used to process the request.

        :param service_config_id: The service_config_id of this CheckResponse.
        :type service_config_id: str
        """

        self._service_config_id = service_config_id

    @property
    def service_rollout_id(self):
        """Gets the service_rollout_id of this CheckResponse.

        The current service rollout id used to process the request.

        :return: The service_rollout_id of this CheckResponse.
        :rtype: str
        """
        return self._service_rollout_id

    @service_rollout_id.setter
    def service_rollout_id(self, service_rollout_id):
        """Sets the service_rollout_id of this CheckResponse.

        The current service rollout id used to process the request.

        :param service_rollout_id: The service_rollout_id of this CheckResponse.
        :type service_rollout_id: str
        """

        self._service_rollout_id = service_rollout_id
