# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.service_metadata import ServiceMetadata
from openapi_server import util


class ServiceDelegationHistory(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, original_principal: str=None, service_metadata: List[ServiceMetadata]=None):
        """ServiceDelegationHistory - a model defined in OpenAPI

        :param original_principal: The original_principal of this ServiceDelegationHistory.
        :param service_metadata: The service_metadata of this ServiceDelegationHistory.
        """
        self.openapi_types = {
            'original_principal': str,
            'service_metadata': List[ServiceMetadata]
        }

        self.attribute_map = {
            'original_principal': 'originalPrincipal',
            'service_metadata': 'serviceMetadata'
        }

        self._original_principal = original_principal
        self._service_metadata = service_metadata

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ServiceDelegationHistory':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ServiceDelegationHistory of this ServiceDelegationHistory.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def original_principal(self):
        """Gets the original_principal of this ServiceDelegationHistory.

        The original end user who initiated the request to GCP.

        :return: The original_principal of this ServiceDelegationHistory.
        :rtype: str
        """
        return self._original_principal

    @original_principal.setter
    def original_principal(self, original_principal):
        """Sets the original_principal of this ServiceDelegationHistory.

        The original end user who initiated the request to GCP.

        :param original_principal: The original_principal of this ServiceDelegationHistory.
        :type original_principal: str
        """

        self._original_principal = original_principal

    @property
    def service_metadata(self):
        """Gets the service_metadata of this ServiceDelegationHistory.

        Data identifying the service specific jobs or units of work that were involved in a chain of service calls.

        :return: The service_metadata of this ServiceDelegationHistory.
        :rtype: List[ServiceMetadata]
        """
        return self._service_metadata

    @service_metadata.setter
    def service_metadata(self, service_metadata):
        """Sets the service_metadata of this ServiceDelegationHistory.

        Data identifying the service specific jobs or units of work that were involved in a chain of service calls.

        :param service_metadata: The service_metadata of this ServiceDelegationHistory.
        :type service_metadata: List[ServiceMetadata]
        """

        self._service_metadata = service_metadata
