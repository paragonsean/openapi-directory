# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.status import Status
from openapi_server import util


class QuotaError(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, code: str=None, description: str=None, status: Status=None, subject: str=None):
        """QuotaError - a model defined in OpenAPI

        :param code: The code of this QuotaError.
        :param description: The description of this QuotaError.
        :param status: The status of this QuotaError.
        :param subject: The subject of this QuotaError.
        """
        self.openapi_types = {
            'code': str,
            'description': str,
            'status': Status,
            'subject': str
        }

        self.attribute_map = {
            'code': 'code',
            'description': 'description',
            'status': 'status',
            'subject': 'subject'
        }

        self._code = code
        self._description = description
        self._status = status
        self._subject = subject

    @classmethod
    def from_dict(cls, dikt: dict) -> 'QuotaError':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The QuotaError of this QuotaError.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def code(self):
        """Gets the code of this QuotaError.

        Error code.

        :return: The code of this QuotaError.
        :rtype: str
        """
        return self._code

    @code.setter
    def code(self, code):
        """Sets the code of this QuotaError.

        Error code.

        :param code: The code of this QuotaError.
        :type code: str
        """
        allowed_values = ["UNSPECIFIED", "RESOURCE_EXHAUSTED", "OUT_OF_RANGE", "BILLING_NOT_ACTIVE", "PROJECT_DELETED", "API_KEY_INVALID", "API_KEY_EXPIRED", "SPATULA_HEADER_INVALID", "LOAS_ROLE_INVALID", "NO_LOAS_PROJECT", "PROJECT_STATUS_UNAVAILABLE", "SERVICE_STATUS_UNAVAILABLE", "BILLING_STATUS_UNAVAILABLE", "QUOTA_SYSTEM_UNAVAILABLE"]  # noqa: E501
        if code not in allowed_values:
            raise ValueError(
                "Invalid value for `code` ({0}), must be one of {1}"
                .format(code, allowed_values)
            )

        self._code = code

    @property
    def description(self):
        """Gets the description of this QuotaError.

        Free-form text that provides details on the cause of the error.

        :return: The description of this QuotaError.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this QuotaError.

        Free-form text that provides details on the cause of the error.

        :param description: The description of this QuotaError.
        :type description: str
        """

        self._description = description

    @property
    def status(self):
        """Gets the status of this QuotaError.


        :return: The status of this QuotaError.
        :rtype: Status
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this QuotaError.


        :param status: The status of this QuotaError.
        :type status: Status
        """

        self._status = status

    @property
    def subject(self):
        """Gets the subject of this QuotaError.

        Subject to whom this error applies. See the specific enum for more details on this field. For example, \"clientip:\" or \"project:\".

        :return: The subject of this QuotaError.
        :rtype: str
        """
        return self._subject

    @subject.setter
    def subject(self, subject):
        """Sets the subject of this QuotaError.

        Subject to whom this error applies. See the specific enum for more details on this field. For example, \"clientip:\" or \"project:\".

        :param subject: The subject of this QuotaError.
        :type subject: str
        """

        self._subject = subject
