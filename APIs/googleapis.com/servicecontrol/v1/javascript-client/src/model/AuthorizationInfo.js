/**
 * Service Control API
 * Provides admission control and telemetry reporting for services integrated with Service Infrastructure. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Resource from './Resource';

/**
 * The AuthorizationInfo model module.
 * @module model/AuthorizationInfo
 * @version v1
 */
class AuthorizationInfo {
    /**
     * Constructs a new <code>AuthorizationInfo</code>.
     * Authorization information for the operation.
     * @alias module:model/AuthorizationInfo
     */
    constructor() { 
        
        AuthorizationInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AuthorizationInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AuthorizationInfo} obj Optional instance to populate.
     * @return {module:model/AuthorizationInfo} The populated <code>AuthorizationInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AuthorizationInfo();

            if (data.hasOwnProperty('granted')) {
                obj['granted'] = ApiClient.convertToType(data['granted'], 'Boolean');
            }
            if (data.hasOwnProperty('permission')) {
                obj['permission'] = ApiClient.convertToType(data['permission'], 'String');
            }
            if (data.hasOwnProperty('resource')) {
                obj['resource'] = ApiClient.convertToType(data['resource'], 'String');
            }
            if (data.hasOwnProperty('resourceAttributes')) {
                obj['resourceAttributes'] = Resource.constructFromObject(data['resourceAttributes']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AuthorizationInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AuthorizationInfo</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['permission'] && !(typeof data['permission'] === 'string' || data['permission'] instanceof String)) {
            throw new Error("Expected the field `permission` to be a primitive type in the JSON string but got " + data['permission']);
        }
        // ensure the json data is a string
        if (data['resource'] && !(typeof data['resource'] === 'string' || data['resource'] instanceof String)) {
            throw new Error("Expected the field `resource` to be a primitive type in the JSON string but got " + data['resource']);
        }
        // validate the optional field `resourceAttributes`
        if (data['resourceAttributes']) { // data not null
          Resource.validateJSON(data['resourceAttributes']);
        }

        return true;
    }


}



/**
 * Whether or not authorization for `resource` and `permission` was granted.
 * @member {Boolean} granted
 */
AuthorizationInfo.prototype['granted'] = undefined;

/**
 * The required IAM permission.
 * @member {String} permission
 */
AuthorizationInfo.prototype['permission'] = undefined;

/**
 * The resource being accessed, as a REST-style or cloud resource string. For example: bigquery.googleapis.com/projects/PROJECTID/datasets/DATASETID or projects/PROJECTID/datasets/DATASETID
 * @member {String} resource
 */
AuthorizationInfo.prototype['resource'] = undefined;

/**
 * @member {module:model/Resource} resourceAttributes
 */
AuthorizationInfo.prototype['resourceAttributes'] = undefined;






export default AuthorizationInfo;

