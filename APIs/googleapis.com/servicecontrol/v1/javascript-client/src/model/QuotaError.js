/**
 * Service Control API
 * Provides admission control and telemetry reporting for services integrated with Service Infrastructure. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Status from './Status';

/**
 * The QuotaError model module.
 * @module model/QuotaError
 * @version v1
 */
class QuotaError {
    /**
     * Constructs a new <code>QuotaError</code>.
     * Represents error information for QuotaOperation.
     * @alias module:model/QuotaError
     */
    constructor() { 
        
        QuotaError.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>QuotaError</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/QuotaError} obj Optional instance to populate.
     * @return {module:model/QuotaError} The populated <code>QuotaError</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new QuotaError();

            if (data.hasOwnProperty('code')) {
                obj['code'] = ApiClient.convertToType(data['code'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = Status.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('subject')) {
                obj['subject'] = ApiClient.convertToType(data['subject'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>QuotaError</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>QuotaError</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['code'] && !(typeof data['code'] === 'string' || data['code'] instanceof String)) {
            throw new Error("Expected the field `code` to be a primitive type in the JSON string but got " + data['code']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // validate the optional field `status`
        if (data['status']) { // data not null
          Status.validateJSON(data['status']);
        }
        // ensure the json data is a string
        if (data['subject'] && !(typeof data['subject'] === 'string' || data['subject'] instanceof String)) {
            throw new Error("Expected the field `subject` to be a primitive type in the JSON string but got " + data['subject']);
        }

        return true;
    }


}



/**
 * Error code.
 * @member {module:model/QuotaError.CodeEnum} code
 */
QuotaError.prototype['code'] = undefined;

/**
 * Free-form text that provides details on the cause of the error.
 * @member {String} description
 */
QuotaError.prototype['description'] = undefined;

/**
 * @member {module:model/Status} status
 */
QuotaError.prototype['status'] = undefined;

/**
 * Subject to whom this error applies. See the specific enum for more details on this field. For example, \"clientip:\" or \"project:\".
 * @member {String} subject
 */
QuotaError.prototype['subject'] = undefined;





/**
 * Allowed values for the <code>code</code> property.
 * @enum {String}
 * @readonly
 */
QuotaError['CodeEnum'] = {

    /**
     * value: "UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "UNSPECIFIED",

    /**
     * value: "RESOURCE_EXHAUSTED"
     * @const
     */
    "RESOURCE_EXHAUSTED": "RESOURCE_EXHAUSTED",

    /**
     * value: "OUT_OF_RANGE"
     * @const
     */
    "OUT_OF_RANGE": "OUT_OF_RANGE",

    /**
     * value: "BILLING_NOT_ACTIVE"
     * @const
     */
    "BILLING_NOT_ACTIVE": "BILLING_NOT_ACTIVE",

    /**
     * value: "PROJECT_DELETED"
     * @const
     */
    "PROJECT_DELETED": "PROJECT_DELETED",

    /**
     * value: "API_KEY_INVALID"
     * @const
     */
    "API_KEY_INVALID": "API_KEY_INVALID",

    /**
     * value: "API_KEY_EXPIRED"
     * @const
     */
    "API_KEY_EXPIRED": "API_KEY_EXPIRED",

    /**
     * value: "SPATULA_HEADER_INVALID"
     * @const
     */
    "SPATULA_HEADER_INVALID": "SPATULA_HEADER_INVALID",

    /**
     * value: "LOAS_ROLE_INVALID"
     * @const
     */
    "LOAS_ROLE_INVALID": "LOAS_ROLE_INVALID",

    /**
     * value: "NO_LOAS_PROJECT"
     * @const
     */
    "NO_LOAS_PROJECT": "NO_LOAS_PROJECT",

    /**
     * value: "PROJECT_STATUS_UNAVAILABLE"
     * @const
     */
    "PROJECT_STATUS_UNAVAILABLE": "PROJECT_STATUS_UNAVAILABLE",

    /**
     * value: "SERVICE_STATUS_UNAVAILABLE"
     * @const
     */
    "SERVICE_STATUS_UNAVAILABLE": "SERVICE_STATUS_UNAVAILABLE",

    /**
     * value: "BILLING_STATUS_UNAVAILABLE"
     * @const
     */
    "BILLING_STATUS_UNAVAILABLE": "BILLING_STATUS_UNAVAILABLE",

    /**
     * value: "QUOTA_SYSTEM_UNAVAILABLE"
     * @const
     */
    "QUOTA_SYSTEM_UNAVAILABLE": "QUOTA_SYSTEM_UNAVAILABLE"
};



export default QuotaError;

