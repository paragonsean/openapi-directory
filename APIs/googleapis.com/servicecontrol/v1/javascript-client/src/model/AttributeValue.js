/**
 * Service Control API
 * Provides admission control and telemetry reporting for services integrated with Service Infrastructure. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TruncatableString from './TruncatableString';

/**
 * The AttributeValue model module.
 * @module model/AttributeValue
 * @version v1
 */
class AttributeValue {
    /**
     * Constructs a new <code>AttributeValue</code>.
     * The allowed types for [VALUE] in a &#x60;[KEY]:[VALUE]&#x60; attribute.
     * @alias module:model/AttributeValue
     */
    constructor() { 
        
        AttributeValue.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AttributeValue</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AttributeValue} obj Optional instance to populate.
     * @return {module:model/AttributeValue} The populated <code>AttributeValue</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AttributeValue();

            if (data.hasOwnProperty('boolValue')) {
                obj['boolValue'] = ApiClient.convertToType(data['boolValue'], 'Boolean');
            }
            if (data.hasOwnProperty('intValue')) {
                obj['intValue'] = ApiClient.convertToType(data['intValue'], 'String');
            }
            if (data.hasOwnProperty('stringValue')) {
                obj['stringValue'] = TruncatableString.constructFromObject(data['stringValue']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AttributeValue</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AttributeValue</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['intValue'] && !(typeof data['intValue'] === 'string' || data['intValue'] instanceof String)) {
            throw new Error("Expected the field `intValue` to be a primitive type in the JSON string but got " + data['intValue']);
        }
        // validate the optional field `stringValue`
        if (data['stringValue']) { // data not null
          TruncatableString.validateJSON(data['stringValue']);
        }

        return true;
    }


}



/**
 * A Boolean value represented by `true` or `false`.
 * @member {Boolean} boolValue
 */
AttributeValue.prototype['boolValue'] = undefined;

/**
 * A 64-bit signed integer.
 * @member {String} intValue
 */
AttributeValue.prototype['intValue'] = undefined;

/**
 * @member {module:model/TruncatableString} stringValue
 */
AttributeValue.prototype['stringValue'] = undefined;






export default AttributeValue;

