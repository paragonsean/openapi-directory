/**
 * Service Control API
 * Provides admission control and telemetry reporting for services integrated with Service Infrastructure. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ServiceMetadata from './ServiceMetadata';

/**
 * The ServiceDelegationHistory model module.
 * @module model/ServiceDelegationHistory
 * @version v1
 */
class ServiceDelegationHistory {
    /**
     * Constructs a new <code>ServiceDelegationHistory</code>.
     * The history of delegation across multiple services as the result of the original user&#39;s action. Such as \&quot;service A uses its own account to do something for user B\&quot;. This differs from ServiceAccountDelegationInfo, which only tracks the history of direct token exchanges (impersonation).
     * @alias module:model/ServiceDelegationHistory
     */
    constructor() { 
        
        ServiceDelegationHistory.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ServiceDelegationHistory</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ServiceDelegationHistory} obj Optional instance to populate.
     * @return {module:model/ServiceDelegationHistory} The populated <code>ServiceDelegationHistory</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ServiceDelegationHistory();

            if (data.hasOwnProperty('originalPrincipal')) {
                obj['originalPrincipal'] = ApiClient.convertToType(data['originalPrincipal'], 'String');
            }
            if (data.hasOwnProperty('serviceMetadata')) {
                obj['serviceMetadata'] = ApiClient.convertToType(data['serviceMetadata'], [ServiceMetadata]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ServiceDelegationHistory</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ServiceDelegationHistory</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['originalPrincipal'] && !(typeof data['originalPrincipal'] === 'string' || data['originalPrincipal'] instanceof String)) {
            throw new Error("Expected the field `originalPrincipal` to be a primitive type in the JSON string but got " + data['originalPrincipal']);
        }
        if (data['serviceMetadata']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['serviceMetadata'])) {
                throw new Error("Expected the field `serviceMetadata` to be an array in the JSON data but got " + data['serviceMetadata']);
            }
            // validate the optional field `serviceMetadata` (array)
            for (const item of data['serviceMetadata']) {
                ServiceMetadata.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The original end user who initiated the request to GCP.
 * @member {String} originalPrincipal
 */
ServiceDelegationHistory.prototype['originalPrincipal'] = undefined;

/**
 * Data identifying the service specific jobs or units of work that were involved in a chain of service calls.
 * @member {Array.<module:model/ServiceMetadata>} serviceMetadata
 */
ServiceDelegationHistory.prototype['serviceMetadata'] = undefined;






export default ServiceDelegationHistory;

