/**
 * Service Control API
 * Provides admission control and telemetry reporting for services integrated with Service Infrastructure. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ConsumerInfo model module.
 * @module model/ConsumerInfo
 * @version v1
 */
class ConsumerInfo {
    /**
     * Constructs a new <code>ConsumerInfo</code>.
     * &#x60;ConsumerInfo&#x60; provides information about the consumer.
     * @alias module:model/ConsumerInfo
     */
    constructor() { 
        
        ConsumerInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ConsumerInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ConsumerInfo} obj Optional instance to populate.
     * @return {module:model/ConsumerInfo} The populated <code>ConsumerInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ConsumerInfo();

            if (data.hasOwnProperty('consumerNumber')) {
                obj['consumerNumber'] = ApiClient.convertToType(data['consumerNumber'], 'String');
            }
            if (data.hasOwnProperty('projectNumber')) {
                obj['projectNumber'] = ApiClient.convertToType(data['projectNumber'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ConsumerInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ConsumerInfo</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['consumerNumber'] && !(typeof data['consumerNumber'] === 'string' || data['consumerNumber'] instanceof String)) {
            throw new Error("Expected the field `consumerNumber` to be a primitive type in the JSON string but got " + data['consumerNumber']);
        }
        // ensure the json data is a string
        if (data['projectNumber'] && !(typeof data['projectNumber'] === 'string' || data['projectNumber'] instanceof String)) {
            throw new Error("Expected the field `projectNumber` to be a primitive type in the JSON string but got " + data['projectNumber']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * The consumer identity number, can be Google cloud project number, folder number or organization number e.g. 1234567890. A value of 0 indicates no consumer number is found.
 * @member {String} consumerNumber
 */
ConsumerInfo.prototype['consumerNumber'] = undefined;

/**
 * The Google cloud project number, e.g. 1234567890. A value of 0 indicates no project number is found. NOTE: This field is deprecated after Chemist support flexible consumer id. New code should not depend on this field anymore.
 * @member {String} projectNumber
 */
ConsumerInfo.prototype['projectNumber'] = undefined;

/**
 * The type of the consumer which should have been defined in [Google Resource Manager](https://cloud.google.com/resource-manager/).
 * @member {module:model/ConsumerInfo.TypeEnum} type
 */
ConsumerInfo.prototype['type'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
ConsumerInfo['TypeEnum'] = {

    /**
     * value: "CONSUMER_TYPE_UNSPECIFIED"
     * @const
     */
    "CONSUMER_TYPE_UNSPECIFIED": "CONSUMER_TYPE_UNSPECIFIED",

    /**
     * value: "PROJECT"
     * @const
     */
    "PROJECT": "PROJECT",

    /**
     * value: "FOLDER"
     * @const
     */
    "FOLDER": "FOLDER",

    /**
     * value: "ORGANIZATION"
     * @const
     */
    "ORGANIZATION": "ORGANIZATION",

    /**
     * value: "SERVICE_SPECIFIC"
     * @const
     */
    "SERVICE_SPECIFIC": "SERVICE_SPECIFIC"
};



export default ConsumerInfo;

