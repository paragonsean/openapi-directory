/**
 * Service Control API
 * Provides admission control and telemetry reporting for services integrated with Service Infrastructure. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import QuotaOperation from './QuotaOperation';

/**
 * The AllocateQuotaRequest model module.
 * @module model/AllocateQuotaRequest
 * @version v1
 */
class AllocateQuotaRequest {
    /**
     * Constructs a new <code>AllocateQuotaRequest</code>.
     * Request message for the AllocateQuota method.
     * @alias module:model/AllocateQuotaRequest
     */
    constructor() { 
        
        AllocateQuotaRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AllocateQuotaRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AllocateQuotaRequest} obj Optional instance to populate.
     * @return {module:model/AllocateQuotaRequest} The populated <code>AllocateQuotaRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AllocateQuotaRequest();

            if (data.hasOwnProperty('allocateOperation')) {
                obj['allocateOperation'] = QuotaOperation.constructFromObject(data['allocateOperation']);
            }
            if (data.hasOwnProperty('serviceConfigId')) {
                obj['serviceConfigId'] = ApiClient.convertToType(data['serviceConfigId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AllocateQuotaRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AllocateQuotaRequest</code>.
     */
    static validateJSON(data) {
        // validate the optional field `allocateOperation`
        if (data['allocateOperation']) { // data not null
          QuotaOperation.validateJSON(data['allocateOperation']);
        }
        // ensure the json data is a string
        if (data['serviceConfigId'] && !(typeof data['serviceConfigId'] === 'string' || data['serviceConfigId'] instanceof String)) {
            throw new Error("Expected the field `serviceConfigId` to be a primitive type in the JSON string but got " + data['serviceConfigId']);
        }

        return true;
    }


}



/**
 * @member {module:model/QuotaOperation} allocateOperation
 */
AllocateQuotaRequest.prototype['allocateOperation'] = undefined;

/**
 * Specifies which version of service configuration should be used to process the request. If unspecified or no matching version can be found, the latest one will be used.
 * @member {String} serviceConfigId
 */
AllocateQuotaRequest.prototype['serviceConfigId'] = undefined;






export default AllocateQuotaRequest;

