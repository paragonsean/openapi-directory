/**
 * Service Control API
 * Provides admission control and telemetry reporting for services integrated with Service Infrastructure. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Peer from './Peer';
import Request from './Request';

/**
 * The RequestMetadata model module.
 * @module model/RequestMetadata
 * @version v1
 */
class RequestMetadata {
    /**
     * Constructs a new <code>RequestMetadata</code>.
     * Metadata about the request.
     * @alias module:model/RequestMetadata
     */
    constructor() { 
        
        RequestMetadata.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RequestMetadata</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RequestMetadata} obj Optional instance to populate.
     * @return {module:model/RequestMetadata} The populated <code>RequestMetadata</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RequestMetadata();

            if (data.hasOwnProperty('callerIp')) {
                obj['callerIp'] = ApiClient.convertToType(data['callerIp'], 'String');
            }
            if (data.hasOwnProperty('callerNetwork')) {
                obj['callerNetwork'] = ApiClient.convertToType(data['callerNetwork'], 'String');
            }
            if (data.hasOwnProperty('callerSuppliedUserAgent')) {
                obj['callerSuppliedUserAgent'] = ApiClient.convertToType(data['callerSuppliedUserAgent'], 'String');
            }
            if (data.hasOwnProperty('destinationAttributes')) {
                obj['destinationAttributes'] = Peer.constructFromObject(data['destinationAttributes']);
            }
            if (data.hasOwnProperty('requestAttributes')) {
                obj['requestAttributes'] = Request.constructFromObject(data['requestAttributes']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RequestMetadata</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RequestMetadata</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['callerIp'] && !(typeof data['callerIp'] === 'string' || data['callerIp'] instanceof String)) {
            throw new Error("Expected the field `callerIp` to be a primitive type in the JSON string but got " + data['callerIp']);
        }
        // ensure the json data is a string
        if (data['callerNetwork'] && !(typeof data['callerNetwork'] === 'string' || data['callerNetwork'] instanceof String)) {
            throw new Error("Expected the field `callerNetwork` to be a primitive type in the JSON string but got " + data['callerNetwork']);
        }
        // ensure the json data is a string
        if (data['callerSuppliedUserAgent'] && !(typeof data['callerSuppliedUserAgent'] === 'string' || data['callerSuppliedUserAgent'] instanceof String)) {
            throw new Error("Expected the field `callerSuppliedUserAgent` to be a primitive type in the JSON string but got " + data['callerSuppliedUserAgent']);
        }
        // validate the optional field `destinationAttributes`
        if (data['destinationAttributes']) { // data not null
          Peer.validateJSON(data['destinationAttributes']);
        }
        // validate the optional field `requestAttributes`
        if (data['requestAttributes']) { // data not null
          Request.validateJSON(data['requestAttributes']);
        }

        return true;
    }


}



/**
 * The IP address of the caller. For a caller from the internet, this will be the public IPv4 or IPv6 address. For calls made from inside Google's internal production network from one GCP service to another, `caller_ip` will be redacted to \"private\". For a caller from a Compute Engine VM with a external IP address, `caller_ip` will be the VM's external IP address. For a caller from a Compute Engine VM without a external IP address, if the VM is in the same organization (or project) as the accessed resource, `caller_ip` will be the VM's internal IPv4 address, otherwise `caller_ip` will be redacted to \"gce-internal-ip\". See https://cloud.google.com/compute/docs/vpc/ for more information.
 * @member {String} callerIp
 */
RequestMetadata.prototype['callerIp'] = undefined;

/**
 * The network of the caller. Set only if the network host project is part of the same GCP organization (or project) as the accessed resource. See https://cloud.google.com/compute/docs/vpc/ for more information. This is a scheme-less URI full resource name. For example: \"//compute.googleapis.com/projects/PROJECT_ID/global/networks/NETWORK_ID\"
 * @member {String} callerNetwork
 */
RequestMetadata.prototype['callerNetwork'] = undefined;

/**
 * The user agent of the caller. This information is not authenticated and should be treated accordingly. For example: + `google-api-python-client/1.4.0`: The request was made by the Google API client for Python. + `Cloud SDK Command Line Tool apitools-client/1.0 gcloud/0.9.62`: The request was made by the Google Cloud SDK CLI (gcloud). + `AppEngine-Google; (+http://code.google.com/appengine; appid: s~my-project`: The request was made from the `my-project` App Engine app.
 * @member {String} callerSuppliedUserAgent
 */
RequestMetadata.prototype['callerSuppliedUserAgent'] = undefined;

/**
 * @member {module:model/Peer} destinationAttributes
 */
RequestMetadata.prototype['destinationAttributes'] = undefined;

/**
 * @member {module:model/Request} requestAttributes
 */
RequestMetadata.prototype['requestAttributes'] = undefined;






export default RequestMetadata;

