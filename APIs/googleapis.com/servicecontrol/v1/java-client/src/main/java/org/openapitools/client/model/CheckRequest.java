/*
 * Service Control API
 * Provides admission control and telemetry reporting for services integrated with Service Infrastructure. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.Operation;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Request message for the Check method.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:39:21.369626-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CheckRequest {
  public static final String SERIALIZED_NAME_OPERATION = "operation";
  @SerializedName(SERIALIZED_NAME_OPERATION)
  private Operation operation;

  public static final String SERIALIZED_NAME_REQUEST_PROJECT_SETTINGS = "requestProjectSettings";
  @SerializedName(SERIALIZED_NAME_REQUEST_PROJECT_SETTINGS)
  private Boolean requestProjectSettings;

  public static final String SERIALIZED_NAME_SERVICE_CONFIG_ID = "serviceConfigId";
  @SerializedName(SERIALIZED_NAME_SERVICE_CONFIG_ID)
  private String serviceConfigId;

  public static final String SERIALIZED_NAME_SKIP_ACTIVATION_CHECK = "skipActivationCheck";
  @SerializedName(SERIALIZED_NAME_SKIP_ACTIVATION_CHECK)
  private Boolean skipActivationCheck;

  public CheckRequest() {
  }

  public CheckRequest operation(Operation operation) {
    this.operation = operation;
    return this;
  }

  /**
   * Get operation
   * @return operation
   */
  @javax.annotation.Nullable
  public Operation getOperation() {
    return operation;
  }

  public void setOperation(Operation operation) {
    this.operation = operation;
  }


  public CheckRequest requestProjectSettings(Boolean requestProjectSettings) {
    this.requestProjectSettings = requestProjectSettings;
    return this;
  }

  /**
   * Requests the project settings to be returned as part of the check response.
   * @return requestProjectSettings
   */
  @javax.annotation.Nullable
  public Boolean getRequestProjectSettings() {
    return requestProjectSettings;
  }

  public void setRequestProjectSettings(Boolean requestProjectSettings) {
    this.requestProjectSettings = requestProjectSettings;
  }


  public CheckRequest serviceConfigId(String serviceConfigId) {
    this.serviceConfigId = serviceConfigId;
    return this;
  }

  /**
   * Specifies which version of service configuration should be used to process the request. If unspecified or no matching version can be found, the latest one will be used.
   * @return serviceConfigId
   */
  @javax.annotation.Nullable
  public String getServiceConfigId() {
    return serviceConfigId;
  }

  public void setServiceConfigId(String serviceConfigId) {
    this.serviceConfigId = serviceConfigId;
  }


  public CheckRequest skipActivationCheck(Boolean skipActivationCheck) {
    this.skipActivationCheck = skipActivationCheck;
    return this;
  }

  /**
   * Indicates if service activation check should be skipped for this request. Default behavior is to perform the check and apply relevant quota. WARNING: Setting this flag to \&quot;true\&quot; will disable quota enforcement.
   * @return skipActivationCheck
   */
  @javax.annotation.Nullable
  public Boolean getSkipActivationCheck() {
    return skipActivationCheck;
  }

  public void setSkipActivationCheck(Boolean skipActivationCheck) {
    this.skipActivationCheck = skipActivationCheck;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CheckRequest checkRequest = (CheckRequest) o;
    return Objects.equals(this.operation, checkRequest.operation) &&
        Objects.equals(this.requestProjectSettings, checkRequest.requestProjectSettings) &&
        Objects.equals(this.serviceConfigId, checkRequest.serviceConfigId) &&
        Objects.equals(this.skipActivationCheck, checkRequest.skipActivationCheck);
  }

  @Override
  public int hashCode() {
    return Objects.hash(operation, requestProjectSettings, serviceConfigId, skipActivationCheck);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CheckRequest {\n");
    sb.append("    operation: ").append(toIndentedString(operation)).append("\n");
    sb.append("    requestProjectSettings: ").append(toIndentedString(requestProjectSettings)).append("\n");
    sb.append("    serviceConfigId: ").append(toIndentedString(serviceConfigId)).append("\n");
    sb.append("    skipActivationCheck: ").append(toIndentedString(skipActivationCheck)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("operation");
    openapiFields.add("requestProjectSettings");
    openapiFields.add("serviceConfigId");
    openapiFields.add("skipActivationCheck");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CheckRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CheckRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CheckRequest is not found in the empty JSON string", CheckRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CheckRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CheckRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `operation`
      if (jsonObj.get("operation") != null && !jsonObj.get("operation").isJsonNull()) {
        Operation.validateJsonElement(jsonObj.get("operation"));
      }
      if ((jsonObj.get("serviceConfigId") != null && !jsonObj.get("serviceConfigId").isJsonNull()) && !jsonObj.get("serviceConfigId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `serviceConfigId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("serviceConfigId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CheckRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CheckRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CheckRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CheckRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<CheckRequest>() {
           @Override
           public void write(JsonWriter out, CheckRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CheckRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CheckRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CheckRequest
   * @throws IOException if the JSON string is invalid with respect to CheckRequest
   */
  public static CheckRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CheckRequest.class);
  }

  /**
   * Convert an instance of CheckRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

