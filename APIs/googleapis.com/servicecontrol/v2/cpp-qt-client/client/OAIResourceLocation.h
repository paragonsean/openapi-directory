/**
 * Service Control API
 * Provides admission control and telemetry reporting for services integrated with Service Infrastructure. 
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIResourceLocation.h
 *
 * Location information about a resource.
 */

#ifndef OAIResourceLocation_H
#define OAIResourceLocation_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIResourceLocation : public OAIObject {
public:
    OAIResourceLocation();
    OAIResourceLocation(QString json);
    ~OAIResourceLocation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getCurrentLocations() const;
    void setCurrentLocations(const QList<QString> &current_locations);
    bool is_current_locations_Set() const;
    bool is_current_locations_Valid() const;

    QList<QString> getOriginalLocations() const;
    void setOriginalLocations(const QList<QString> &original_locations);
    bool is_original_locations_Set() const;
    bool is_original_locations_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_current_locations;
    bool m_current_locations_isSet;
    bool m_current_locations_isValid;

    QList<QString> m_original_locations;
    bool m_original_locations_isSet;
    bool m_original_locations_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIResourceLocation)

#endif // OAIResourceLocation_H
