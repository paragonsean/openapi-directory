/**
 * Service Control API
 * Provides admission control and telemetry reporting for services integrated with Service Infrastructure. 
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIV2LogEntrySourceLocation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIV2LogEntrySourceLocation::OAIV2LogEntrySourceLocation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIV2LogEntrySourceLocation::OAIV2LogEntrySourceLocation() {
    this->initializeModel();
}

OAIV2LogEntrySourceLocation::~OAIV2LogEntrySourceLocation() {}

void OAIV2LogEntrySourceLocation::initializeModel() {

    m_file_isSet = false;
    m_file_isValid = false;

    m_function_isSet = false;
    m_function_isValid = false;

    m_line_isSet = false;
    m_line_isValid = false;
}

void OAIV2LogEntrySourceLocation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIV2LogEntrySourceLocation::fromJsonObject(QJsonObject json) {

    m_file_isValid = ::OpenAPI::fromJsonValue(m_file, json[QString("file")]);
    m_file_isSet = !json[QString("file")].isNull() && m_file_isValid;

    m_function_isValid = ::OpenAPI::fromJsonValue(m_function, json[QString("function")]);
    m_function_isSet = !json[QString("function")].isNull() && m_function_isValid;

    m_line_isValid = ::OpenAPI::fromJsonValue(m_line, json[QString("line")]);
    m_line_isSet = !json[QString("line")].isNull() && m_line_isValid;
}

QString OAIV2LogEntrySourceLocation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIV2LogEntrySourceLocation::asJsonObject() const {
    QJsonObject obj;
    if (m_file_isSet) {
        obj.insert(QString("file"), ::OpenAPI::toJsonValue(m_file));
    }
    if (m_function_isSet) {
        obj.insert(QString("function"), ::OpenAPI::toJsonValue(m_function));
    }
    if (m_line_isSet) {
        obj.insert(QString("line"), ::OpenAPI::toJsonValue(m_line));
    }
    return obj;
}

QString OAIV2LogEntrySourceLocation::getFile() const {
    return m_file;
}
void OAIV2LogEntrySourceLocation::setFile(const QString &file) {
    m_file = file;
    m_file_isSet = true;
}

bool OAIV2LogEntrySourceLocation::is_file_Set() const{
    return m_file_isSet;
}

bool OAIV2LogEntrySourceLocation::is_file_Valid() const{
    return m_file_isValid;
}

QString OAIV2LogEntrySourceLocation::getFunction() const {
    return m_function;
}
void OAIV2LogEntrySourceLocation::setFunction(const QString &function) {
    m_function = function;
    m_function_isSet = true;
}

bool OAIV2LogEntrySourceLocation::is_function_Set() const{
    return m_function_isSet;
}

bool OAIV2LogEntrySourceLocation::is_function_Valid() const{
    return m_function_isValid;
}

QString OAIV2LogEntrySourceLocation::getLine() const {
    return m_line;
}
void OAIV2LogEntrySourceLocation::setLine(const QString &line) {
    m_line = line;
    m_line_isSet = true;
}

bool OAIV2LogEntrySourceLocation::is_line_Set() const{
    return m_line_isSet;
}

bool OAIV2LogEntrySourceLocation::is_line_Valid() const{
    return m_line_isValid;
}

bool OAIV2LogEntrySourceLocation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_file_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_function_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_line_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIV2LogEntrySourceLocation::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
