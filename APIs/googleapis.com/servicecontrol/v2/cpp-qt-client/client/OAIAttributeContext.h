/**
 * Service Control API
 * Provides admission control and telemetry reporting for services integrated with Service Infrastructure. 
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAttributeContext.h
 *
 * This message defines the standard attribute vocabulary for Google APIs. An attribute is a piece of metadata that describes an activity on a network service. For example, the size of an HTTP request, or the status code of an HTTP response. Each attribute has a type and a name, which is logically defined as a proto message field in &#x60;AttributeContext&#x60;. The field type becomes the attribute type, and the field path becomes the attribute name. For example, the attribute &#x60;source.ip&#x60; maps to field &#x60;AttributeContext.source.ip&#x60;. This message definition is guaranteed not to have any wire breaking change. So you can use it directly for passing attributes across different systems. NOTE: Different system may generate different subset of attributes. Please verify the system specification before relying on an attribute generated a system.
 */

#ifndef OAIAttributeContext_H
#define OAIAttributeContext_H

#include <QJsonObject>

#include "OAIApi.h"
#include "OAIPeer.h"
#include "OAIRequest.h"
#include "OAIResource.h"
#include "OAIResponse.h"
#include <QJsonValue>
#include <QList>
#include <QMap>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIApi;
class OAIPeer;
class OAIRequest;
class OAIResource;
class OAIResponse;

class OAIAttributeContext : public OAIObject {
public:
    OAIAttributeContext();
    OAIAttributeContext(QString json);
    ~OAIAttributeContext() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIApi getApi() const;
    void setApi(const OAIApi &api);
    bool is_api_Set() const;
    bool is_api_Valid() const;

    OAIPeer getDestination() const;
    void setDestination(const OAIPeer &destination);
    bool is_destination_Set() const;
    bool is_destination_Valid() const;

    QList<QMap<QString, QJsonValue>> getExtensions() const;
    void setExtensions(const QList<QMap<QString, QJsonValue>> &extensions);
    bool is_extensions_Set() const;
    bool is_extensions_Valid() const;

    OAIPeer getOrigin() const;
    void setOrigin(const OAIPeer &origin);
    bool is_origin_Set() const;
    bool is_origin_Valid() const;

    OAIRequest getRequest() const;
    void setRequest(const OAIRequest &request);
    bool is_request_Set() const;
    bool is_request_Valid() const;

    OAIResource getResource() const;
    void setResource(const OAIResource &resource);
    bool is_resource_Set() const;
    bool is_resource_Valid() const;

    OAIResponse getResponse() const;
    void setResponse(const OAIResponse &response);
    bool is_response_Set() const;
    bool is_response_Valid() const;

    OAIPeer getSource() const;
    void setSource(const OAIPeer &source);
    bool is_source_Set() const;
    bool is_source_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIApi m_api;
    bool m_api_isSet;
    bool m_api_isValid;

    OAIPeer m_destination;
    bool m_destination_isSet;
    bool m_destination_isValid;

    QList<QMap<QString, QJsonValue>> m_extensions;
    bool m_extensions_isSet;
    bool m_extensions_isValid;

    OAIPeer m_origin;
    bool m_origin_isSet;
    bool m_origin_isValid;

    OAIRequest m_request;
    bool m_request_isSet;
    bool m_request_isValid;

    OAIResource m_resource;
    bool m_resource_isSet;
    bool m_resource_isValid;

    OAIResponse m_response;
    bool m_response_isSet;
    bool m_response_isValid;

    OAIPeer m_source;
    bool m_source_isSet;
    bool m_source_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAttributeContext)

#endif // OAIAttributeContext_H
