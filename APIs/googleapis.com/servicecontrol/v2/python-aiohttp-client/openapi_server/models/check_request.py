# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.attribute_context import AttributeContext
from openapi_server.models.resource_info import ResourceInfo
from openapi_server import util


class CheckRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, attributes: AttributeContext=None, flags: str=None, resources: List[ResourceInfo]=None, service_config_id: str=None):
        """CheckRequest - a model defined in OpenAPI

        :param attributes: The attributes of this CheckRequest.
        :param flags: The flags of this CheckRequest.
        :param resources: The resources of this CheckRequest.
        :param service_config_id: The service_config_id of this CheckRequest.
        """
        self.openapi_types = {
            'attributes': AttributeContext,
            'flags': str,
            'resources': List[ResourceInfo],
            'service_config_id': str
        }

        self.attribute_map = {
            'attributes': 'attributes',
            'flags': 'flags',
            'resources': 'resources',
            'service_config_id': 'serviceConfigId'
        }

        self._attributes = attributes
        self._flags = flags
        self._resources = resources
        self._service_config_id = service_config_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CheckRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CheckRequest of this CheckRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def attributes(self):
        """Gets the attributes of this CheckRequest.


        :return: The attributes of this CheckRequest.
        :rtype: AttributeContext
        """
        return self._attributes

    @attributes.setter
    def attributes(self, attributes):
        """Sets the attributes of this CheckRequest.


        :param attributes: The attributes of this CheckRequest.
        :type attributes: AttributeContext
        """

        self._attributes = attributes

    @property
    def flags(self):
        """Gets the flags of this CheckRequest.

        Optional. Contains a comma-separated list of flags.

        :return: The flags of this CheckRequest.
        :rtype: str
        """
        return self._flags

    @flags.setter
    def flags(self, flags):
        """Sets the flags of this CheckRequest.

        Optional. Contains a comma-separated list of flags.

        :param flags: The flags of this CheckRequest.
        :type flags: str
        """

        self._flags = flags

    @property
    def resources(self):
        """Gets the resources of this CheckRequest.

        Describes the resources and the policies applied to each resource.

        :return: The resources of this CheckRequest.
        :rtype: List[ResourceInfo]
        """
        return self._resources

    @resources.setter
    def resources(self, resources):
        """Sets the resources of this CheckRequest.

        Describes the resources and the policies applied to each resource.

        :param resources: The resources of this CheckRequest.
        :type resources: List[ResourceInfo]
        """

        self._resources = resources

    @property
    def service_config_id(self):
        """Gets the service_config_id of this CheckRequest.

        Specifies the version of the service configuration that should be used to process the request. Must not be empty. Set this field to 'latest' to specify using the latest configuration.

        :return: The service_config_id of this CheckRequest.
        :rtype: str
        """
        return self._service_config_id

    @service_config_id.setter
    def service_config_id(self, service_config_id):
        """Sets the service_config_id of this CheckRequest.

        Specifies the version of the service configuration that should be used to process the request. Must not be empty. Set this field to 'latest' to specify using the latest configuration.

        :param service_config_id: The service_config_id of this CheckRequest.
        :type service_config_id: str
        """

        self._service_config_id = service_config_id
