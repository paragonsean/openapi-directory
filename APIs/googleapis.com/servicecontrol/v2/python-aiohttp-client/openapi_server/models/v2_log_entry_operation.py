# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class V2LogEntryOperation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, first: bool=None, id: str=None, last: bool=None, producer: str=None):
        """V2LogEntryOperation - a model defined in OpenAPI

        :param first: The first of this V2LogEntryOperation.
        :param id: The id of this V2LogEntryOperation.
        :param last: The last of this V2LogEntryOperation.
        :param producer: The producer of this V2LogEntryOperation.
        """
        self.openapi_types = {
            'first': bool,
            'id': str,
            'last': bool,
            'producer': str
        }

        self.attribute_map = {
            'first': 'first',
            'id': 'id',
            'last': 'last',
            'producer': 'producer'
        }

        self._first = first
        self._id = id
        self._last = last
        self._producer = producer

    @classmethod
    def from_dict(cls, dikt: dict) -> 'V2LogEntryOperation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The V2LogEntryOperation of this V2LogEntryOperation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def first(self):
        """Gets the first of this V2LogEntryOperation.

        Optional. Set this to True if this is the first log entry in the operation.

        :return: The first of this V2LogEntryOperation.
        :rtype: bool
        """
        return self._first

    @first.setter
    def first(self, first):
        """Sets the first of this V2LogEntryOperation.

        Optional. Set this to True if this is the first log entry in the operation.

        :param first: The first of this V2LogEntryOperation.
        :type first: bool
        """

        self._first = first

    @property
    def id(self):
        """Gets the id of this V2LogEntryOperation.

        Optional. An arbitrary operation identifier. Log entries with the same identifier are assumed to be part of the same operation.

        :return: The id of this V2LogEntryOperation.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this V2LogEntryOperation.

        Optional. An arbitrary operation identifier. Log entries with the same identifier are assumed to be part of the same operation.

        :param id: The id of this V2LogEntryOperation.
        :type id: str
        """

        self._id = id

    @property
    def last(self):
        """Gets the last of this V2LogEntryOperation.

        Optional. Set this to True if this is the last log entry in the operation.

        :return: The last of this V2LogEntryOperation.
        :rtype: bool
        """
        return self._last

    @last.setter
    def last(self, last):
        """Sets the last of this V2LogEntryOperation.

        Optional. Set this to True if this is the last log entry in the operation.

        :param last: The last of this V2LogEntryOperation.
        :type last: bool
        """

        self._last = last

    @property
    def producer(self):
        """Gets the producer of this V2LogEntryOperation.

        Optional. An arbitrary producer identifier. The combination of `id` and `producer` must be globally unique. Examples for `producer`: `\"MyDivision.MyBigCompany.com\"`, `\"github.com/MyProject/MyApplication\"`.

        :return: The producer of this V2LogEntryOperation.
        :rtype: str
        """
        return self._producer

    @producer.setter
    def producer(self, producer):
        """Sets the producer of this V2LogEntryOperation.

        Optional. An arbitrary producer identifier. The combination of `id` and `producer` must be globally unique. Examples for `producer`: `\"MyDivision.MyBigCompany.com\"`, `\"github.com/MyProject/MyApplication\"`.

        :param producer: The producer of this V2LogEntryOperation.
        :type producer: str
        """

        self._producer = producer
