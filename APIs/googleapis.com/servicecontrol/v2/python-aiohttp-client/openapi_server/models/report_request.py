# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.attribute_context import AttributeContext
from openapi_server import util


class ReportRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, operations: List[AttributeContext]=None, service_config_id: str=None):
        """ReportRequest - a model defined in OpenAPI

        :param operations: The operations of this ReportRequest.
        :param service_config_id: The service_config_id of this ReportRequest.
        """
        self.openapi_types = {
            'operations': List[AttributeContext],
            'service_config_id': str
        }

        self.attribute_map = {
            'operations': 'operations',
            'service_config_id': 'serviceConfigId'
        }

        self._operations = operations
        self._service_config_id = service_config_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReportRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReportRequest of this ReportRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def operations(self):
        """Gets the operations of this ReportRequest.

        Describes the list of operations to be reported. Each operation is represented as an AttributeContext, and contains all attributes around an API access.

        :return: The operations of this ReportRequest.
        :rtype: List[AttributeContext]
        """
        return self._operations

    @operations.setter
    def operations(self, operations):
        """Sets the operations of this ReportRequest.

        Describes the list of operations to be reported. Each operation is represented as an AttributeContext, and contains all attributes around an API access.

        :param operations: The operations of this ReportRequest.
        :type operations: List[AttributeContext]
        """

        self._operations = operations

    @property
    def service_config_id(self):
        """Gets the service_config_id of this ReportRequest.

        Specifies the version of the service configuration that should be used to process the request. Must not be empty. Set this field to 'latest' to specify using the latest configuration.

        :return: The service_config_id of this ReportRequest.
        :rtype: str
        """
        return self._service_config_id

    @service_config_id.setter
    def service_config_id(self, service_config_id):
        """Sets the service_config_id of this ReportRequest.

        Specifies the version of the service configuration that should be used to process the request. Must not be empty. Set this field to 'latest' to specify using the latest configuration.

        :param service_config_id: The service_config_id of this ReportRequest.
        :type service_config_id: str
        """

        self._service_config_id = service_config_id
