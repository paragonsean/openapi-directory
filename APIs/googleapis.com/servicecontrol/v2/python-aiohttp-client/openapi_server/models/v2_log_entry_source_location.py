# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class V2LogEntrySourceLocation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, file: str=None, function: str=None, line: str=None):
        """V2LogEntrySourceLocation - a model defined in OpenAPI

        :param file: The file of this V2LogEntrySourceLocation.
        :param function: The function of this V2LogEntrySourceLocation.
        :param line: The line of this V2LogEntrySourceLocation.
        """
        self.openapi_types = {
            'file': str,
            'function': str,
            'line': str
        }

        self.attribute_map = {
            'file': 'file',
            'function': 'function',
            'line': 'line'
        }

        self._file = file
        self._function = function
        self._line = line

    @classmethod
    def from_dict(cls, dikt: dict) -> 'V2LogEntrySourceLocation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The V2LogEntrySourceLocation of this V2LogEntrySourceLocation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def file(self):
        """Gets the file of this V2LogEntrySourceLocation.

        Optional. Source file name. Depending on the runtime environment, this might be a simple name or a fully-qualified name.

        :return: The file of this V2LogEntrySourceLocation.
        :rtype: str
        """
        return self._file

    @file.setter
    def file(self, file):
        """Sets the file of this V2LogEntrySourceLocation.

        Optional. Source file name. Depending on the runtime environment, this might be a simple name or a fully-qualified name.

        :param file: The file of this V2LogEntrySourceLocation.
        :type file: str
        """

        self._file = file

    @property
    def function(self):
        """Gets the function of this V2LogEntrySourceLocation.

        Optional. Human-readable name of the function or method being invoked, with optional context such as the class or package name. This information may be used in contexts such as the logs viewer, where a file and line number are less meaningful. The format can vary by language. For example: `qual.if.ied.Class.method` (Java), `dir/package.func` (Go), `function` (Python).

        :return: The function of this V2LogEntrySourceLocation.
        :rtype: str
        """
        return self._function

    @function.setter
    def function(self, function):
        """Sets the function of this V2LogEntrySourceLocation.

        Optional. Human-readable name of the function or method being invoked, with optional context such as the class or package name. This information may be used in contexts such as the logs viewer, where a file and line number are less meaningful. The format can vary by language. For example: `qual.if.ied.Class.method` (Java), `dir/package.func` (Go), `function` (Python).

        :param function: The function of this V2LogEntrySourceLocation.
        :type function: str
        """

        self._function = function

    @property
    def line(self):
        """Gets the line of this V2LogEntrySourceLocation.

        Optional. Line within the source file. 1-based; 0 indicates no line number available.

        :return: The line of this V2LogEntrySourceLocation.
        :rtype: str
        """
        return self._line

    @line.setter
    def line(self, line):
        """Sets the line of this V2LogEntrySourceLocation.

        Optional. Line within the source file. 1-based; 0 indicates no line number available.

        :param line: The line of this V2LogEntrySourceLocation.
        :type line: str
        """

        self._line = line
