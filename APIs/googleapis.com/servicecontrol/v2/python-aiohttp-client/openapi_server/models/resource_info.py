# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ResourceInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, container: str=None, location: str=None, name: str=None, permission: str=None, type: str=None):
        """ResourceInfo - a model defined in OpenAPI

        :param container: The container of this ResourceInfo.
        :param location: The location of this ResourceInfo.
        :param name: The name of this ResourceInfo.
        :param permission: The permission of this ResourceInfo.
        :param type: The type of this ResourceInfo.
        """
        self.openapi_types = {
            'container': str,
            'location': str,
            'name': str,
            'permission': str,
            'type': str
        }

        self.attribute_map = {
            'container': 'container',
            'location': 'location',
            'name': 'name',
            'permission': 'permission',
            'type': 'type'
        }

        self._container = container
        self._location = location
        self._name = name
        self._permission = permission
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ResourceInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ResourceInfo of this ResourceInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def container(self):
        """Gets the container of this ResourceInfo.

        Optional. The identifier of the container of this resource. For Google Cloud APIs, the resource container must be one of the following formats: - `projects/` - `folders/` - `organizations/` Required for the policy enforcement on the container level (e.g. VPCSC, Location Policy check, Org Policy check).

        :return: The container of this ResourceInfo.
        :rtype: str
        """
        return self._container

    @container.setter
    def container(self, container):
        """Sets the container of this ResourceInfo.

        Optional. The identifier of the container of this resource. For Google Cloud APIs, the resource container must be one of the following formats: - `projects/` - `folders/` - `organizations/` Required for the policy enforcement on the container level (e.g. VPCSC, Location Policy check, Org Policy check).

        :param container: The container of this ResourceInfo.
        :type container: str
        """

        self._container = container

    @property
    def location(self):
        """Gets the location of this ResourceInfo.

        Optional. The location of the resource, it must be a valid zone, region or multiregion, for example: \"europe-west4\", \"northamerica-northeast1-a\". Required for location policy check.

        :return: The location of this ResourceInfo.
        :rtype: str
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this ResourceInfo.

        Optional. The location of the resource, it must be a valid zone, region or multiregion, for example: \"europe-west4\", \"northamerica-northeast1-a\". Required for location policy check.

        :param location: The location of this ResourceInfo.
        :type location: str
        """

        self._location = location

    @property
    def name(self):
        """Gets the name of this ResourceInfo.

        The name of the resource referenced in the request.

        :return: The name of this ResourceInfo.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ResourceInfo.

        The name of the resource referenced in the request.

        :param name: The name of this ResourceInfo.
        :type name: str
        """

        self._name = name

    @property
    def permission(self):
        """Gets the permission of this ResourceInfo.

        The resource permission needed for this request. The format must be \"{service}/{plural}.{verb}\".

        :return: The permission of this ResourceInfo.
        :rtype: str
        """
        return self._permission

    @permission.setter
    def permission(self, permission):
        """Sets the permission of this ResourceInfo.

        The resource permission needed for this request. The format must be \"{service}/{plural}.{verb}\".

        :param permission: The permission of this ResourceInfo.
        :type permission: str
        """

        self._permission = permission

    @property
    def type(self):
        """Gets the type of this ResourceInfo.

        The resource type in the format of \"{service}/{kind}\".

        :return: The type of this ResourceInfo.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this ResourceInfo.

        The resource type in the format of \"{service}/{kind}\".

        :param type: The type of this ResourceInfo.
        :type type: str
        """

        self._type = type
