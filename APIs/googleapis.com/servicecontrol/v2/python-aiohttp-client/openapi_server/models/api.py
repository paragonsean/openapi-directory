# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Api(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, operation: str=None, protocol: str=None, service: str=None, version: str=None):
        """Api - a model defined in OpenAPI

        :param operation: The operation of this Api.
        :param protocol: The protocol of this Api.
        :param service: The service of this Api.
        :param version: The version of this Api.
        """
        self.openapi_types = {
            'operation': str,
            'protocol': str,
            'service': str,
            'version': str
        }

        self.attribute_map = {
            'operation': 'operation',
            'protocol': 'protocol',
            'service': 'service',
            'version': 'version'
        }

        self._operation = operation
        self._protocol = protocol
        self._service = service
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Api':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Api of this Api.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def operation(self):
        """Gets the operation of this Api.

        The API operation name. For gRPC requests, it is the fully qualified API method name, such as \"google.pubsub.v1.Publisher.Publish\". For OpenAPI requests, it is the `operationId`, such as \"getPet\".

        :return: The operation of this Api.
        :rtype: str
        """
        return self._operation

    @operation.setter
    def operation(self, operation):
        """Sets the operation of this Api.

        The API operation name. For gRPC requests, it is the fully qualified API method name, such as \"google.pubsub.v1.Publisher.Publish\". For OpenAPI requests, it is the `operationId`, such as \"getPet\".

        :param operation: The operation of this Api.
        :type operation: str
        """

        self._operation = operation

    @property
    def protocol(self):
        """Gets the protocol of this Api.

        The API protocol used for sending the request, such as \"http\", \"https\", \"grpc\", or \"internal\".

        :return: The protocol of this Api.
        :rtype: str
        """
        return self._protocol

    @protocol.setter
    def protocol(self, protocol):
        """Sets the protocol of this Api.

        The API protocol used for sending the request, such as \"http\", \"https\", \"grpc\", or \"internal\".

        :param protocol: The protocol of this Api.
        :type protocol: str
        """

        self._protocol = protocol

    @property
    def service(self):
        """Gets the service of this Api.

        The API service name. It is a logical identifier for a networked API, such as \"pubsub.googleapis.com\". The naming syntax depends on the API management system being used for handling the request.

        :return: The service of this Api.
        :rtype: str
        """
        return self._service

    @service.setter
    def service(self, service):
        """Sets the service of this Api.

        The API service name. It is a logical identifier for a networked API, such as \"pubsub.googleapis.com\". The naming syntax depends on the API management system being used for handling the request.

        :param service: The service of this Api.
        :type service: str
        """

        self._service = service

    @property
    def version(self):
        """Gets the version of this Api.

        The API version associated with the API operation above, such as \"v1\" or \"v1alpha1\".

        :return: The version of this Api.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this Api.

        The API version associated with the API operation above, such as \"v1\" or \"v1alpha1\".

        :param version: The version of this Api.
        :type version: str
        """

        self._version = version
