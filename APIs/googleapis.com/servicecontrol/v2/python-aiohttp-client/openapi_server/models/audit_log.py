# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.authentication_info import AuthenticationInfo
from openapi_server.models.authorization_info import AuthorizationInfo
from openapi_server.models.policy_violation_info import PolicyViolationInfo
from openapi_server.models.request_metadata import RequestMetadata
from openapi_server.models.resource_location import ResourceLocation
from openapi_server.models.status import Status
from openapi_server import util


class AuditLog(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, authentication_info: AuthenticationInfo=None, authorization_info: List[AuthorizationInfo]=None, metadata: Dict[str, object]=None, method_name: str=None, num_response_items: str=None, policy_violation_info: PolicyViolationInfo=None, request: Dict[str, object]=None, request_metadata: RequestMetadata=None, resource_location: ResourceLocation=None, resource_name: str=None, resource_original_state: Dict[str, object]=None, response: Dict[str, object]=None, service_data: Dict[str, object]=None, service_name: str=None, status: Status=None):
        """AuditLog - a model defined in OpenAPI

        :param authentication_info: The authentication_info of this AuditLog.
        :param authorization_info: The authorization_info of this AuditLog.
        :param metadata: The metadata of this AuditLog.
        :param method_name: The method_name of this AuditLog.
        :param num_response_items: The num_response_items of this AuditLog.
        :param policy_violation_info: The policy_violation_info of this AuditLog.
        :param request: The request of this AuditLog.
        :param request_metadata: The request_metadata of this AuditLog.
        :param resource_location: The resource_location of this AuditLog.
        :param resource_name: The resource_name of this AuditLog.
        :param resource_original_state: The resource_original_state of this AuditLog.
        :param response: The response of this AuditLog.
        :param service_data: The service_data of this AuditLog.
        :param service_name: The service_name of this AuditLog.
        :param status: The status of this AuditLog.
        """
        self.openapi_types = {
            'authentication_info': AuthenticationInfo,
            'authorization_info': List[AuthorizationInfo],
            'metadata': Dict[str, object],
            'method_name': str,
            'num_response_items': str,
            'policy_violation_info': PolicyViolationInfo,
            'request': Dict[str, object],
            'request_metadata': RequestMetadata,
            'resource_location': ResourceLocation,
            'resource_name': str,
            'resource_original_state': Dict[str, object],
            'response': Dict[str, object],
            'service_data': Dict[str, object],
            'service_name': str,
            'status': Status
        }

        self.attribute_map = {
            'authentication_info': 'authenticationInfo',
            'authorization_info': 'authorizationInfo',
            'metadata': 'metadata',
            'method_name': 'methodName',
            'num_response_items': 'numResponseItems',
            'policy_violation_info': 'policyViolationInfo',
            'request': 'request',
            'request_metadata': 'requestMetadata',
            'resource_location': 'resourceLocation',
            'resource_name': 'resourceName',
            'resource_original_state': 'resourceOriginalState',
            'response': 'response',
            'service_data': 'serviceData',
            'service_name': 'serviceName',
            'status': 'status'
        }

        self._authentication_info = authentication_info
        self._authorization_info = authorization_info
        self._metadata = metadata
        self._method_name = method_name
        self._num_response_items = num_response_items
        self._policy_violation_info = policy_violation_info
        self._request = request
        self._request_metadata = request_metadata
        self._resource_location = resource_location
        self._resource_name = resource_name
        self._resource_original_state = resource_original_state
        self._response = response
        self._service_data = service_data
        self._service_name = service_name
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AuditLog':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AuditLog of this AuditLog.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def authentication_info(self):
        """Gets the authentication_info of this AuditLog.


        :return: The authentication_info of this AuditLog.
        :rtype: AuthenticationInfo
        """
        return self._authentication_info

    @authentication_info.setter
    def authentication_info(self, authentication_info):
        """Sets the authentication_info of this AuditLog.


        :param authentication_info: The authentication_info of this AuditLog.
        :type authentication_info: AuthenticationInfo
        """

        self._authentication_info = authentication_info

    @property
    def authorization_info(self):
        """Gets the authorization_info of this AuditLog.

        Authorization information. If there are multiple resources or permissions involved, then there is one AuthorizationInfo element for each {resource, permission} tuple.

        :return: The authorization_info of this AuditLog.
        :rtype: List[AuthorizationInfo]
        """
        return self._authorization_info

    @authorization_info.setter
    def authorization_info(self, authorization_info):
        """Sets the authorization_info of this AuditLog.

        Authorization information. If there are multiple resources or permissions involved, then there is one AuthorizationInfo element for each {resource, permission} tuple.

        :param authorization_info: The authorization_info of this AuditLog.
        :type authorization_info: List[AuthorizationInfo]
        """

        self._authorization_info = authorization_info

    @property
    def metadata(self):
        """Gets the metadata of this AuditLog.

        Other service-specific data about the request, response, and other information associated with the current audited event.

        :return: The metadata of this AuditLog.
        :rtype: Dict[str, object]
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this AuditLog.

        Other service-specific data about the request, response, and other information associated with the current audited event.

        :param metadata: The metadata of this AuditLog.
        :type metadata: Dict[str, object]
        """

        self._metadata = metadata

    @property
    def method_name(self):
        """Gets the method_name of this AuditLog.

        The name of the service method or operation. For API calls, this should be the name of the API method. For example, \"google.cloud.bigquery.v2.TableService.InsertTable\" \"google.logging.v2.ConfigServiceV2.CreateSink\"

        :return: The method_name of this AuditLog.
        :rtype: str
        """
        return self._method_name

    @method_name.setter
    def method_name(self, method_name):
        """Sets the method_name of this AuditLog.

        The name of the service method or operation. For API calls, this should be the name of the API method. For example, \"google.cloud.bigquery.v2.TableService.InsertTable\" \"google.logging.v2.ConfigServiceV2.CreateSink\"

        :param method_name: The method_name of this AuditLog.
        :type method_name: str
        """

        self._method_name = method_name

    @property
    def num_response_items(self):
        """Gets the num_response_items of this AuditLog.

        The number of items returned from a List or Query API method, if applicable.

        :return: The num_response_items of this AuditLog.
        :rtype: str
        """
        return self._num_response_items

    @num_response_items.setter
    def num_response_items(self, num_response_items):
        """Sets the num_response_items of this AuditLog.

        The number of items returned from a List or Query API method, if applicable.

        :param num_response_items: The num_response_items of this AuditLog.
        :type num_response_items: str
        """

        self._num_response_items = num_response_items

    @property
    def policy_violation_info(self):
        """Gets the policy_violation_info of this AuditLog.


        :return: The policy_violation_info of this AuditLog.
        :rtype: PolicyViolationInfo
        """
        return self._policy_violation_info

    @policy_violation_info.setter
    def policy_violation_info(self, policy_violation_info):
        """Sets the policy_violation_info of this AuditLog.


        :param policy_violation_info: The policy_violation_info of this AuditLog.
        :type policy_violation_info: PolicyViolationInfo
        """

        self._policy_violation_info = policy_violation_info

    @property
    def request(self):
        """Gets the request of this AuditLog.

        The operation request. This may not include all request parameters, such as those that are too large, privacy-sensitive, or duplicated elsewhere in the log record. It should never include user-generated data, such as file contents. When the JSON object represented here has a proto equivalent, the proto name will be indicated in the `@type` property.

        :return: The request of this AuditLog.
        :rtype: Dict[str, object]
        """
        return self._request

    @request.setter
    def request(self, request):
        """Sets the request of this AuditLog.

        The operation request. This may not include all request parameters, such as those that are too large, privacy-sensitive, or duplicated elsewhere in the log record. It should never include user-generated data, such as file contents. When the JSON object represented here has a proto equivalent, the proto name will be indicated in the `@type` property.

        :param request: The request of this AuditLog.
        :type request: Dict[str, object]
        """

        self._request = request

    @property
    def request_metadata(self):
        """Gets the request_metadata of this AuditLog.


        :return: The request_metadata of this AuditLog.
        :rtype: RequestMetadata
        """
        return self._request_metadata

    @request_metadata.setter
    def request_metadata(self, request_metadata):
        """Sets the request_metadata of this AuditLog.


        :param request_metadata: The request_metadata of this AuditLog.
        :type request_metadata: RequestMetadata
        """

        self._request_metadata = request_metadata

    @property
    def resource_location(self):
        """Gets the resource_location of this AuditLog.


        :return: The resource_location of this AuditLog.
        :rtype: ResourceLocation
        """
        return self._resource_location

    @resource_location.setter
    def resource_location(self, resource_location):
        """Sets the resource_location of this AuditLog.


        :param resource_location: The resource_location of this AuditLog.
        :type resource_location: ResourceLocation
        """

        self._resource_location = resource_location

    @property
    def resource_name(self):
        """Gets the resource_name of this AuditLog.

        The resource or collection that is the target of the operation. The name is a scheme-less URI, not including the API service name. For example: \"projects/PROJECT_ID/zones/us-central1-a/instances\" \"projects/PROJECT_ID/datasets/DATASET_ID\"

        :return: The resource_name of this AuditLog.
        :rtype: str
        """
        return self._resource_name

    @resource_name.setter
    def resource_name(self, resource_name):
        """Sets the resource_name of this AuditLog.

        The resource or collection that is the target of the operation. The name is a scheme-less URI, not including the API service name. For example: \"projects/PROJECT_ID/zones/us-central1-a/instances\" \"projects/PROJECT_ID/datasets/DATASET_ID\"

        :param resource_name: The resource_name of this AuditLog.
        :type resource_name: str
        """

        self._resource_name = resource_name

    @property
    def resource_original_state(self):
        """Gets the resource_original_state of this AuditLog.

        The resource's original state before mutation. Present only for operations which have successfully modified the targeted resource(s). In general, this field should contain all changed fields, except those that are already been included in `request`, `response`, `metadata` or `service_data` fields. When the JSON object represented here has a proto equivalent, the proto name will be indicated in the `@type` property.

        :return: The resource_original_state of this AuditLog.
        :rtype: Dict[str, object]
        """
        return self._resource_original_state

    @resource_original_state.setter
    def resource_original_state(self, resource_original_state):
        """Sets the resource_original_state of this AuditLog.

        The resource's original state before mutation. Present only for operations which have successfully modified the targeted resource(s). In general, this field should contain all changed fields, except those that are already been included in `request`, `response`, `metadata` or `service_data` fields. When the JSON object represented here has a proto equivalent, the proto name will be indicated in the `@type` property.

        :param resource_original_state: The resource_original_state of this AuditLog.
        :type resource_original_state: Dict[str, object]
        """

        self._resource_original_state = resource_original_state

    @property
    def response(self):
        """Gets the response of this AuditLog.

        The operation response. This may not include all response elements, such as those that are too large, privacy-sensitive, or duplicated elsewhere in the log record. It should never include user-generated data, such as file contents. When the JSON object represented here has a proto equivalent, the proto name will be indicated in the `@type` property.

        :return: The response of this AuditLog.
        :rtype: Dict[str, object]
        """
        return self._response

    @response.setter
    def response(self, response):
        """Sets the response of this AuditLog.

        The operation response. This may not include all response elements, such as those that are too large, privacy-sensitive, or duplicated elsewhere in the log record. It should never include user-generated data, such as file contents. When the JSON object represented here has a proto equivalent, the proto name will be indicated in the `@type` property.

        :param response: The response of this AuditLog.
        :type response: Dict[str, object]
        """

        self._response = response

    @property
    def service_data(self):
        """Gets the service_data of this AuditLog.

        Deprecated. Use the `metadata` field instead. Other service-specific data about the request, response, and other activities.

        :return: The service_data of this AuditLog.
        :rtype: Dict[str, object]
        """
        return self._service_data

    @service_data.setter
    def service_data(self, service_data):
        """Sets the service_data of this AuditLog.

        Deprecated. Use the `metadata` field instead. Other service-specific data about the request, response, and other activities.

        :param service_data: The service_data of this AuditLog.
        :type service_data: Dict[str, object]
        """

        self._service_data = service_data

    @property
    def service_name(self):
        """Gets the service_name of this AuditLog.

        The name of the API service performing the operation. For example, `\"compute.googleapis.com\"`.

        :return: The service_name of this AuditLog.
        :rtype: str
        """
        return self._service_name

    @service_name.setter
    def service_name(self, service_name):
        """Sets the service_name of this AuditLog.

        The name of the API service performing the operation. For example, `\"compute.googleapis.com\"`.

        :param service_name: The service_name of this AuditLog.
        :type service_name: str
        """

        self._service_name = service_name

    @property
    def status(self):
        """Gets the status of this AuditLog.


        :return: The status of this AuditLog.
        :rtype: Status
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this AuditLog.


        :param status: The status of this AuditLog.
        :type status: Status
        """

        self._status = status
