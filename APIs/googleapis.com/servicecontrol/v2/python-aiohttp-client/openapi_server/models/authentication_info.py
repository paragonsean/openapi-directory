# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.service_account_delegation_info import ServiceAccountDelegationInfo
from openapi_server.models.service_delegation_history import ServiceDelegationHistory
from openapi_server import util


class AuthenticationInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, authority_selector: str=None, principal_email: str=None, principal_subject: str=None, service_account_delegation_info: List[ServiceAccountDelegationInfo]=None, service_account_key_name: str=None, service_delegation_history: ServiceDelegationHistory=None, third_party_principal: Dict[str, object]=None):
        """AuthenticationInfo - a model defined in OpenAPI

        :param authority_selector: The authority_selector of this AuthenticationInfo.
        :param principal_email: The principal_email of this AuthenticationInfo.
        :param principal_subject: The principal_subject of this AuthenticationInfo.
        :param service_account_delegation_info: The service_account_delegation_info of this AuthenticationInfo.
        :param service_account_key_name: The service_account_key_name of this AuthenticationInfo.
        :param service_delegation_history: The service_delegation_history of this AuthenticationInfo.
        :param third_party_principal: The third_party_principal of this AuthenticationInfo.
        """
        self.openapi_types = {
            'authority_selector': str,
            'principal_email': str,
            'principal_subject': str,
            'service_account_delegation_info': List[ServiceAccountDelegationInfo],
            'service_account_key_name': str,
            'service_delegation_history': ServiceDelegationHistory,
            'third_party_principal': Dict[str, object]
        }

        self.attribute_map = {
            'authority_selector': 'authoritySelector',
            'principal_email': 'principalEmail',
            'principal_subject': 'principalSubject',
            'service_account_delegation_info': 'serviceAccountDelegationInfo',
            'service_account_key_name': 'serviceAccountKeyName',
            'service_delegation_history': 'serviceDelegationHistory',
            'third_party_principal': 'thirdPartyPrincipal'
        }

        self._authority_selector = authority_selector
        self._principal_email = principal_email
        self._principal_subject = principal_subject
        self._service_account_delegation_info = service_account_delegation_info
        self._service_account_key_name = service_account_key_name
        self._service_delegation_history = service_delegation_history
        self._third_party_principal = third_party_principal

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AuthenticationInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AuthenticationInfo of this AuthenticationInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def authority_selector(self):
        """Gets the authority_selector of this AuthenticationInfo.

        The authority selector specified by the requestor, if any. It is not guaranteed that the principal was allowed to use this authority.

        :return: The authority_selector of this AuthenticationInfo.
        :rtype: str
        """
        return self._authority_selector

    @authority_selector.setter
    def authority_selector(self, authority_selector):
        """Sets the authority_selector of this AuthenticationInfo.

        The authority selector specified by the requestor, if any. It is not guaranteed that the principal was allowed to use this authority.

        :param authority_selector: The authority_selector of this AuthenticationInfo.
        :type authority_selector: str
        """

        self._authority_selector = authority_selector

    @property
    def principal_email(self):
        """Gets the principal_email of this AuthenticationInfo.

        The email address of the authenticated user (or service account on behalf of third party principal) making the request. For third party identity callers, the `principal_subject` field is populated instead of this field. For privacy reasons, the principal email address is sometimes redacted. For more information, see [Caller identities in audit logs](https://cloud.google.com/logging/docs/audit#user-id).

        :return: The principal_email of this AuthenticationInfo.
        :rtype: str
        """
        return self._principal_email

    @principal_email.setter
    def principal_email(self, principal_email):
        """Sets the principal_email of this AuthenticationInfo.

        The email address of the authenticated user (or service account on behalf of third party principal) making the request. For third party identity callers, the `principal_subject` field is populated instead of this field. For privacy reasons, the principal email address is sometimes redacted. For more information, see [Caller identities in audit logs](https://cloud.google.com/logging/docs/audit#user-id).

        :param principal_email: The principal_email of this AuthenticationInfo.
        :type principal_email: str
        """

        self._principal_email = principal_email

    @property
    def principal_subject(self):
        """Gets the principal_subject of this AuthenticationInfo.

        String representation of identity of requesting party. Populated for both first and third party identities.

        :return: The principal_subject of this AuthenticationInfo.
        :rtype: str
        """
        return self._principal_subject

    @principal_subject.setter
    def principal_subject(self, principal_subject):
        """Sets the principal_subject of this AuthenticationInfo.

        String representation of identity of requesting party. Populated for both first and third party identities.

        :param principal_subject: The principal_subject of this AuthenticationInfo.
        :type principal_subject: str
        """

        self._principal_subject = principal_subject

    @property
    def service_account_delegation_info(self):
        """Gets the service_account_delegation_info of this AuthenticationInfo.

        Identity delegation history of an authenticated service account that makes the request. It contains information on the real authorities that try to access GCP resources by delegating on a service account. When multiple authorities present, they are guaranteed to be sorted based on the original ordering of the identity delegation events.

        :return: The service_account_delegation_info of this AuthenticationInfo.
        :rtype: List[ServiceAccountDelegationInfo]
        """
        return self._service_account_delegation_info

    @service_account_delegation_info.setter
    def service_account_delegation_info(self, service_account_delegation_info):
        """Sets the service_account_delegation_info of this AuthenticationInfo.

        Identity delegation history of an authenticated service account that makes the request. It contains information on the real authorities that try to access GCP resources by delegating on a service account. When multiple authorities present, they are guaranteed to be sorted based on the original ordering of the identity delegation events.

        :param service_account_delegation_info: The service_account_delegation_info of this AuthenticationInfo.
        :type service_account_delegation_info: List[ServiceAccountDelegationInfo]
        """

        self._service_account_delegation_info = service_account_delegation_info

    @property
    def service_account_key_name(self):
        """Gets the service_account_key_name of this AuthenticationInfo.

        The name of the service account key used to create or exchange credentials for authenticating the service account making the request. This is a scheme-less URI full resource name. For example: \"//iam.googleapis.com/projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}/keys/{key}\"

        :return: The service_account_key_name of this AuthenticationInfo.
        :rtype: str
        """
        return self._service_account_key_name

    @service_account_key_name.setter
    def service_account_key_name(self, service_account_key_name):
        """Sets the service_account_key_name of this AuthenticationInfo.

        The name of the service account key used to create or exchange credentials for authenticating the service account making the request. This is a scheme-less URI full resource name. For example: \"//iam.googleapis.com/projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}/keys/{key}\"

        :param service_account_key_name: The service_account_key_name of this AuthenticationInfo.
        :type service_account_key_name: str
        """

        self._service_account_key_name = service_account_key_name

    @property
    def service_delegation_history(self):
        """Gets the service_delegation_history of this AuthenticationInfo.


        :return: The service_delegation_history of this AuthenticationInfo.
        :rtype: ServiceDelegationHistory
        """
        return self._service_delegation_history

    @service_delegation_history.setter
    def service_delegation_history(self, service_delegation_history):
        """Sets the service_delegation_history of this AuthenticationInfo.


        :param service_delegation_history: The service_delegation_history of this AuthenticationInfo.
        :type service_delegation_history: ServiceDelegationHistory
        """

        self._service_delegation_history = service_delegation_history

    @property
    def third_party_principal(self):
        """Gets the third_party_principal of this AuthenticationInfo.

        The third party identification (if any) of the authenticated user making the request. When the JSON object represented here has a proto equivalent, the proto name will be indicated in the `@type` property.

        :return: The third_party_principal of this AuthenticationInfo.
        :rtype: Dict[str, object]
        """
        return self._third_party_principal

    @third_party_principal.setter
    def third_party_principal(self, third_party_principal):
        """Sets the third_party_principal of this AuthenticationInfo.

        The third party identification (if any) of the authenticated user making the request. When the JSON object represented here has a proto equivalent, the proto name will be indicated in the `@type` property.

        :param third_party_principal: The third_party_principal of this AuthenticationInfo.
        :type third_party_principal: Dict[str, object]
        """

        self._third_party_principal = third_party_principal
