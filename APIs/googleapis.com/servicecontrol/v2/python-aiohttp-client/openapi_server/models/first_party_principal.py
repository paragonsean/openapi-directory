# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FirstPartyPrincipal(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, principal_email: str=None, service_metadata: Dict[str, object]=None):
        """FirstPartyPrincipal - a model defined in OpenAPI

        :param principal_email: The principal_email of this FirstPartyPrincipal.
        :param service_metadata: The service_metadata of this FirstPartyPrincipal.
        """
        self.openapi_types = {
            'principal_email': str,
            'service_metadata': Dict[str, object]
        }

        self.attribute_map = {
            'principal_email': 'principalEmail',
            'service_metadata': 'serviceMetadata'
        }

        self._principal_email = principal_email
        self._service_metadata = service_metadata

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FirstPartyPrincipal':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FirstPartyPrincipal of this FirstPartyPrincipal.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def principal_email(self):
        """Gets the principal_email of this FirstPartyPrincipal.

        The email address of a Google account. .

        :return: The principal_email of this FirstPartyPrincipal.
        :rtype: str
        """
        return self._principal_email

    @principal_email.setter
    def principal_email(self, principal_email):
        """Sets the principal_email of this FirstPartyPrincipal.

        The email address of a Google account. .

        :param principal_email: The principal_email of this FirstPartyPrincipal.
        :type principal_email: str
        """

        self._principal_email = principal_email

    @property
    def service_metadata(self):
        """Gets the service_metadata of this FirstPartyPrincipal.

        Metadata about the service that uses the service account. .

        :return: The service_metadata of this FirstPartyPrincipal.
        :rtype: Dict[str, object]
        """
        return self._service_metadata

    @service_metadata.setter
    def service_metadata(self, service_metadata):
        """Sets the service_metadata of this FirstPartyPrincipal.

        Metadata about the service that uses the service account. .

        :param service_metadata: The service_metadata of this FirstPartyPrincipal.
        :type service_metadata: Dict[str, object]
        """

        self._service_metadata = service_metadata
