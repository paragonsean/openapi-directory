/**
 * Service Control API
 * Provides admission control and telemetry reporting for services integrated with Service Infrastructure. 
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ServiceMetadata model module.
 * @module model/ServiceMetadata
 * @version v2
 */
class ServiceMetadata {
    /**
     * Constructs a new <code>ServiceMetadata</code>.
     * Metadata describing the service and additional service specific information used to identify the job or unit of work at hand.
     * @alias module:model/ServiceMetadata
     */
    constructor() { 
        
        ServiceMetadata.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ServiceMetadata</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ServiceMetadata} obj Optional instance to populate.
     * @return {module:model/ServiceMetadata} The populated <code>ServiceMetadata</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ServiceMetadata();

            if (data.hasOwnProperty('jobMetadata')) {
                obj['jobMetadata'] = ApiClient.convertToType(data['jobMetadata'], {'String': Object});
            }
            if (data.hasOwnProperty('principalSubject')) {
                obj['principalSubject'] = ApiClient.convertToType(data['principalSubject'], 'String');
            }
            if (data.hasOwnProperty('serviceDomain')) {
                obj['serviceDomain'] = ApiClient.convertToType(data['serviceDomain'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ServiceMetadata</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ServiceMetadata</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['principalSubject'] && !(typeof data['principalSubject'] === 'string' || data['principalSubject'] instanceof String)) {
            throw new Error("Expected the field `principalSubject` to be a primitive type in the JSON string but got " + data['principalSubject']);
        }
        // ensure the json data is a string
        if (data['serviceDomain'] && !(typeof data['serviceDomain'] === 'string' || data['serviceDomain'] instanceof String)) {
            throw new Error("Expected the field `serviceDomain` to be a primitive type in the JSON string but got " + data['serviceDomain']);
        }

        return true;
    }


}



/**
 * Additional metadata provided by service teams to describe service specific job information that was triggered by the original principal.
 * @member {Object.<String, Object>} jobMetadata
 */
ServiceMetadata.prototype['jobMetadata'] = undefined;

/**
 * A string representing the principal_subject associated with the identity. For most identities, the format will be `principal://iam.googleapis.com/{identity pool name}/subject/{subject)` except for some GKE identities (GKE_WORKLOAD, FREEFORM, GKE_HUB_WORKLOAD) that are still in the legacy format `serviceAccount:{identity pool name}[{subject}]` If the identity is a Google account (e.g. workspace user account or service account), this will be the email of the prefixed by `serviceAccount:`. For example: `serviceAccount:my-service-account@project-1.iam.gserviceaccount.com`. If the identity is an individual user, the identity will be formatted as: `user:user_ABC@email.com`.
 * @member {String} principalSubject
 */
ServiceMetadata.prototype['principalSubject'] = undefined;

/**
 * The service's fully qualified domain name, e.g. \"dataproc.googleapis.com\".
 * @member {String} serviceDomain
 */
ServiceMetadata.prototype['serviceDomain'] = undefined;






export default ServiceMetadata;

