/**
 * Service Control API
 * Provides admission control and telemetry reporting for services integrated with Service Infrastructure. 
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AuthenticationInfo from './AuthenticationInfo';
import AuthorizationInfo from './AuthorizationInfo';
import PolicyViolationInfo from './PolicyViolationInfo';
import RequestMetadata from './RequestMetadata';
import ResourceLocation from './ResourceLocation';
import Status from './Status';

/**
 * The AuditLog model module.
 * @module model/AuditLog
 * @version v2
 */
class AuditLog {
    /**
     * Constructs a new <code>AuditLog</code>.
     * Common audit log format for Google Cloud Platform API operations. 
     * @alias module:model/AuditLog
     */
    constructor() { 
        
        AuditLog.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AuditLog</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AuditLog} obj Optional instance to populate.
     * @return {module:model/AuditLog} The populated <code>AuditLog</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AuditLog();

            if (data.hasOwnProperty('authenticationInfo')) {
                obj['authenticationInfo'] = AuthenticationInfo.constructFromObject(data['authenticationInfo']);
            }
            if (data.hasOwnProperty('authorizationInfo')) {
                obj['authorizationInfo'] = ApiClient.convertToType(data['authorizationInfo'], [AuthorizationInfo]);
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ApiClient.convertToType(data['metadata'], {'String': Object});
            }
            if (data.hasOwnProperty('methodName')) {
                obj['methodName'] = ApiClient.convertToType(data['methodName'], 'String');
            }
            if (data.hasOwnProperty('numResponseItems')) {
                obj['numResponseItems'] = ApiClient.convertToType(data['numResponseItems'], 'String');
            }
            if (data.hasOwnProperty('policyViolationInfo')) {
                obj['policyViolationInfo'] = PolicyViolationInfo.constructFromObject(data['policyViolationInfo']);
            }
            if (data.hasOwnProperty('request')) {
                obj['request'] = ApiClient.convertToType(data['request'], {'String': Object});
            }
            if (data.hasOwnProperty('requestMetadata')) {
                obj['requestMetadata'] = RequestMetadata.constructFromObject(data['requestMetadata']);
            }
            if (data.hasOwnProperty('resourceLocation')) {
                obj['resourceLocation'] = ResourceLocation.constructFromObject(data['resourceLocation']);
            }
            if (data.hasOwnProperty('resourceName')) {
                obj['resourceName'] = ApiClient.convertToType(data['resourceName'], 'String');
            }
            if (data.hasOwnProperty('resourceOriginalState')) {
                obj['resourceOriginalState'] = ApiClient.convertToType(data['resourceOriginalState'], {'String': Object});
            }
            if (data.hasOwnProperty('response')) {
                obj['response'] = ApiClient.convertToType(data['response'], {'String': Object});
            }
            if (data.hasOwnProperty('serviceData')) {
                obj['serviceData'] = ApiClient.convertToType(data['serviceData'], {'String': Object});
            }
            if (data.hasOwnProperty('serviceName')) {
                obj['serviceName'] = ApiClient.convertToType(data['serviceName'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = Status.constructFromObject(data['status']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AuditLog</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AuditLog</code>.
     */
    static validateJSON(data) {
        // validate the optional field `authenticationInfo`
        if (data['authenticationInfo']) { // data not null
          AuthenticationInfo.validateJSON(data['authenticationInfo']);
        }
        if (data['authorizationInfo']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['authorizationInfo'])) {
                throw new Error("Expected the field `authorizationInfo` to be an array in the JSON data but got " + data['authorizationInfo']);
            }
            // validate the optional field `authorizationInfo` (array)
            for (const item of data['authorizationInfo']) {
                AuthorizationInfo.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['methodName'] && !(typeof data['methodName'] === 'string' || data['methodName'] instanceof String)) {
            throw new Error("Expected the field `methodName` to be a primitive type in the JSON string but got " + data['methodName']);
        }
        // ensure the json data is a string
        if (data['numResponseItems'] && !(typeof data['numResponseItems'] === 'string' || data['numResponseItems'] instanceof String)) {
            throw new Error("Expected the field `numResponseItems` to be a primitive type in the JSON string but got " + data['numResponseItems']);
        }
        // validate the optional field `policyViolationInfo`
        if (data['policyViolationInfo']) { // data not null
          PolicyViolationInfo.validateJSON(data['policyViolationInfo']);
        }
        // validate the optional field `requestMetadata`
        if (data['requestMetadata']) { // data not null
          RequestMetadata.validateJSON(data['requestMetadata']);
        }
        // validate the optional field `resourceLocation`
        if (data['resourceLocation']) { // data not null
          ResourceLocation.validateJSON(data['resourceLocation']);
        }
        // ensure the json data is a string
        if (data['resourceName'] && !(typeof data['resourceName'] === 'string' || data['resourceName'] instanceof String)) {
            throw new Error("Expected the field `resourceName` to be a primitive type in the JSON string but got " + data['resourceName']);
        }
        // ensure the json data is a string
        if (data['serviceName'] && !(typeof data['serviceName'] === 'string' || data['serviceName'] instanceof String)) {
            throw new Error("Expected the field `serviceName` to be a primitive type in the JSON string but got " + data['serviceName']);
        }
        // validate the optional field `status`
        if (data['status']) { // data not null
          Status.validateJSON(data['status']);
        }

        return true;
    }


}



/**
 * @member {module:model/AuthenticationInfo} authenticationInfo
 */
AuditLog.prototype['authenticationInfo'] = undefined;

/**
 * Authorization information. If there are multiple resources or permissions involved, then there is one AuthorizationInfo element for each {resource, permission} tuple.
 * @member {Array.<module:model/AuthorizationInfo>} authorizationInfo
 */
AuditLog.prototype['authorizationInfo'] = undefined;

/**
 * Other service-specific data about the request, response, and other information associated with the current audited event.
 * @member {Object.<String, Object>} metadata
 */
AuditLog.prototype['metadata'] = undefined;

/**
 * The name of the service method or operation. For API calls, this should be the name of the API method. For example, \"google.cloud.bigquery.v2.TableService.InsertTable\" \"google.logging.v2.ConfigServiceV2.CreateSink\"
 * @member {String} methodName
 */
AuditLog.prototype['methodName'] = undefined;

/**
 * The number of items returned from a List or Query API method, if applicable.
 * @member {String} numResponseItems
 */
AuditLog.prototype['numResponseItems'] = undefined;

/**
 * @member {module:model/PolicyViolationInfo} policyViolationInfo
 */
AuditLog.prototype['policyViolationInfo'] = undefined;

/**
 * The operation request. This may not include all request parameters, such as those that are too large, privacy-sensitive, or duplicated elsewhere in the log record. It should never include user-generated data, such as file contents. When the JSON object represented here has a proto equivalent, the proto name will be indicated in the `@type` property.
 * @member {Object.<String, Object>} request
 */
AuditLog.prototype['request'] = undefined;

/**
 * @member {module:model/RequestMetadata} requestMetadata
 */
AuditLog.prototype['requestMetadata'] = undefined;

/**
 * @member {module:model/ResourceLocation} resourceLocation
 */
AuditLog.prototype['resourceLocation'] = undefined;

/**
 * The resource or collection that is the target of the operation. The name is a scheme-less URI, not including the API service name. For example: \"projects/PROJECT_ID/zones/us-central1-a/instances\" \"projects/PROJECT_ID/datasets/DATASET_ID\"
 * @member {String} resourceName
 */
AuditLog.prototype['resourceName'] = undefined;

/**
 * The resource's original state before mutation. Present only for operations which have successfully modified the targeted resource(s). In general, this field should contain all changed fields, except those that are already been included in `request`, `response`, `metadata` or `service_data` fields. When the JSON object represented here has a proto equivalent, the proto name will be indicated in the `@type` property.
 * @member {Object.<String, Object>} resourceOriginalState
 */
AuditLog.prototype['resourceOriginalState'] = undefined;

/**
 * The operation response. This may not include all response elements, such as those that are too large, privacy-sensitive, or duplicated elsewhere in the log record. It should never include user-generated data, such as file contents. When the JSON object represented here has a proto equivalent, the proto name will be indicated in the `@type` property.
 * @member {Object.<String, Object>} response
 */
AuditLog.prototype['response'] = undefined;

/**
 * Deprecated. Use the `metadata` field instead. Other service-specific data about the request, response, and other activities.
 * @member {Object.<String, Object>} serviceData
 */
AuditLog.prototype['serviceData'] = undefined;

/**
 * The name of the API service performing the operation. For example, `\"compute.googleapis.com\"`.
 * @member {String} serviceName
 */
AuditLog.prototype['serviceName'] = undefined;

/**
 * @member {module:model/Status} status
 */
AuditLog.prototype['status'] = undefined;






export default AuditLog;

