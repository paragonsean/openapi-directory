/**
 * Service Control API
 * Provides admission control and telemetry reporting for services integrated with Service Infrastructure. 
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The V2LogEntryOperation model module.
 * @module model/V2LogEntryOperation
 * @version v2
 */
class V2LogEntryOperation {
    /**
     * Constructs a new <code>V2LogEntryOperation</code>.
     * Additional information about a potentially long-running operation with which a log entry is associated.
     * @alias module:model/V2LogEntryOperation
     */
    constructor() { 
        
        V2LogEntryOperation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>V2LogEntryOperation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/V2LogEntryOperation} obj Optional instance to populate.
     * @return {module:model/V2LogEntryOperation} The populated <code>V2LogEntryOperation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new V2LogEntryOperation();

            if (data.hasOwnProperty('first')) {
                obj['first'] = ApiClient.convertToType(data['first'], 'Boolean');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('last')) {
                obj['last'] = ApiClient.convertToType(data['last'], 'Boolean');
            }
            if (data.hasOwnProperty('producer')) {
                obj['producer'] = ApiClient.convertToType(data['producer'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>V2LogEntryOperation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>V2LogEntryOperation</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['producer'] && !(typeof data['producer'] === 'string' || data['producer'] instanceof String)) {
            throw new Error("Expected the field `producer` to be a primitive type in the JSON string but got " + data['producer']);
        }

        return true;
    }


}



/**
 * Optional. Set this to True if this is the first log entry in the operation.
 * @member {Boolean} first
 */
V2LogEntryOperation.prototype['first'] = undefined;

/**
 * Optional. An arbitrary operation identifier. Log entries with the same identifier are assumed to be part of the same operation.
 * @member {String} id
 */
V2LogEntryOperation.prototype['id'] = undefined;

/**
 * Optional. Set this to True if this is the last log entry in the operation.
 * @member {Boolean} last
 */
V2LogEntryOperation.prototype['last'] = undefined;

/**
 * Optional. An arbitrary producer identifier. The combination of `id` and `producer` must be globally unique. Examples for `producer`: `\"MyDivision.MyBigCompany.com\"`, `\"github.com/MyProject/MyApplication\"`.
 * @member {String} producer
 */
V2LogEntryOperation.prototype['producer'] = undefined;






export default V2LogEntryOperation;

