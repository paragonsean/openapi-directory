# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.data_type import DataType
from openapi_server import util


class StructType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, fields: Dict[str, DataType]=None):
        """StructType - a model defined in OpenAPI

        :param fields: The fields of this StructType.
        """
        self.openapi_types = {
            'fields': Dict[str, DataType]
        }

        self.attribute_map = {
            'fields': 'fields'
        }

        self._fields = fields

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StructType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StructType of this StructType.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def fields(self):
        """Gets the fields of this StructType.

        Unordered map of struct field names to their data types. Fields cannot be added or removed via Update. Their names and data types are still mutable.

        :return: The fields of this StructType.
        :rtype: Dict[str, DataType]
        """
        return self._fields

    @fields.setter
    def fields(self, fields):
        """Sets the fields of this StructType.

        Unordered map of struct field names to their data types. Fields cannot be added or removed via Update. Their names and data types are still mutable.

        :param fields: The fields of this StructType.
        :type fields: Dict[str, DataType]
        """

        self._fields = fields
