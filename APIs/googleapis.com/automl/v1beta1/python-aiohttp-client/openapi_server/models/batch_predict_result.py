# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BatchPredictResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, metadata: Dict[str, str]=None):
        """BatchPredictResult - a model defined in OpenAPI

        :param metadata: The metadata of this BatchPredictResult.
        """
        self.openapi_types = {
            'metadata': Dict[str, str]
        }

        self.attribute_map = {
            'metadata': 'metadata'
        }

        self._metadata = metadata

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BatchPredictResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BatchPredictResult of this BatchPredictResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def metadata(self):
        """Gets the metadata of this BatchPredictResult.

        Additional domain-specific prediction response metadata. * For Image Object Detection: `max_bounding_box_count` - (int64) At most that many bounding boxes per image could have been returned. * For Video Object Tracking: `max_bounding_box_count` - (int64) At most that many bounding boxes per frame could have been returned.

        :return: The metadata of this BatchPredictResult.
        :rtype: Dict[str, str]
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this BatchPredictResult.

        Additional domain-specific prediction response metadata. * For Image Object Detection: `max_bounding_box_count` - (int64) At most that many bounding boxes per image could have been returned. * For Video Object Tracking: `max_bounding_box_count` - (int64) At most that many bounding boxes per frame could have been returned.

        :param metadata: The metadata of this BatchPredictResult.
        :type metadata: Dict[str, str]
        """

        self._metadata = metadata
