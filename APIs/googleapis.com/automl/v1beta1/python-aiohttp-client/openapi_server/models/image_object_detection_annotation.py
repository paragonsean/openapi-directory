# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.bounding_poly import BoundingPoly
from openapi_server import util


class ImageObjectDetectionAnnotation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bounding_box: BoundingPoly=None, score: float=None):
        """ImageObjectDetectionAnnotation - a model defined in OpenAPI

        :param bounding_box: The bounding_box of this ImageObjectDetectionAnnotation.
        :param score: The score of this ImageObjectDetectionAnnotation.
        """
        self.openapi_types = {
            'bounding_box': BoundingPoly,
            'score': float
        }

        self.attribute_map = {
            'bounding_box': 'boundingBox',
            'score': 'score'
        }

        self._bounding_box = bounding_box
        self._score = score

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ImageObjectDetectionAnnotation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ImageObjectDetectionAnnotation of this ImageObjectDetectionAnnotation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bounding_box(self):
        """Gets the bounding_box of this ImageObjectDetectionAnnotation.


        :return: The bounding_box of this ImageObjectDetectionAnnotation.
        :rtype: BoundingPoly
        """
        return self._bounding_box

    @bounding_box.setter
    def bounding_box(self, bounding_box):
        """Sets the bounding_box of this ImageObjectDetectionAnnotation.


        :param bounding_box: The bounding_box of this ImageObjectDetectionAnnotation.
        :type bounding_box: BoundingPoly
        """

        self._bounding_box = bounding_box

    @property
    def score(self):
        """Gets the score of this ImageObjectDetectionAnnotation.

        Output only. The confidence that this annotation is positive for the parent example, value in [0, 1], higher means higher positivity confidence.

        :return: The score of this ImageObjectDetectionAnnotation.
        :rtype: float
        """
        return self._score

    @score.setter
    def score(self, score):
        """Sets the score of this ImageObjectDetectionAnnotation.

        Output only. The confidence that this annotation is positive for the parent example, value in [0, 1], higher means higher positivity confidence.

        :param score: The score of this ImageObjectDetectionAnnotation.
        :type score: float
        """

        self._score = score
