# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.big_query_destination import BigQueryDestination
from openapi_server import util


class ExportEvaluatedExamplesOutputConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bigquery_destination: BigQueryDestination=None):
        """ExportEvaluatedExamplesOutputConfig - a model defined in OpenAPI

        :param bigquery_destination: The bigquery_destination of this ExportEvaluatedExamplesOutputConfig.
        """
        self.openapi_types = {
            'bigquery_destination': BigQueryDestination
        }

        self.attribute_map = {
            'bigquery_destination': 'bigqueryDestination'
        }

        self._bigquery_destination = bigquery_destination

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExportEvaluatedExamplesOutputConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ExportEvaluatedExamplesOutputConfig of this ExportEvaluatedExamplesOutputConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bigquery_destination(self):
        """Gets the bigquery_destination of this ExportEvaluatedExamplesOutputConfig.


        :return: The bigquery_destination of this ExportEvaluatedExamplesOutputConfig.
        :rtype: BigQueryDestination
        """
        return self._bigquery_destination

    @bigquery_destination.setter
    def bigquery_destination(self, bigquery_destination):
        """Sets the bigquery_destination of this ExportEvaluatedExamplesOutputConfig.


        :param bigquery_destination: The bigquery_destination of this ExportEvaluatedExamplesOutputConfig.
        :type bigquery_destination: BigQueryDestination
        """

        self._bigquery_destination = bigquery_destination
