# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.data_stats import DataStats
from openapi_server import util


class StructStats(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, field_stats: Dict[str, DataStats]=None):
        """StructStats - a model defined in OpenAPI

        :param field_stats: The field_stats of this StructStats.
        """
        self.openapi_types = {
            'field_stats': Dict[str, DataStats]
        }

        self.attribute_map = {
            'field_stats': 'fieldStats'
        }

        self._field_stats = field_stats

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StructStats':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StructStats of this StructStats.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def field_stats(self):
        """Gets the field_stats of this StructStats.

        Map from a field name of the struct to data stats aggregated over series of all data in that field across all the structs.

        :return: The field_stats of this StructStats.
        :rtype: Dict[str, DataStats]
        """
        return self._field_stats

    @field_stats.setter
    def field_stats(self, field_stats):
        """Sets the field_stats of this StructStats.

        Map from a field name of the struct to data stats aggregated over series of all data in that field across all the structs.

        :param field_stats: The field_stats of this StructStats.
        :type field_stats: Dict[str, DataStats]
        """

        self._field_stats = field_stats
