# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.text_snippet import TextSnippet
from openapi_server import util


class TranslationAnnotation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, translated_content: TextSnippet=None):
        """TranslationAnnotation - a model defined in OpenAPI

        :param translated_content: The translated_content of this TranslationAnnotation.
        """
        self.openapi_types = {
            'translated_content': TextSnippet
        }

        self.attribute_map = {
            'translated_content': 'translatedContent'
        }

        self._translated_content = translated_content

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TranslationAnnotation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TranslationAnnotation of this TranslationAnnotation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def translated_content(self):
        """Gets the translated_content of this TranslationAnnotation.


        :return: The translated_content of this TranslationAnnotation.
        :rtype: TextSnippet
        """
        return self._translated_content

    @translated_content.setter
    def translated_content(self, translated_content):
        """Sets the translated_content of this TranslationAnnotation.


        :param translated_content: The translated_content of this TranslationAnnotation.
        :type translated_content: TextSnippet
        """

        self._translated_content = translated_content
