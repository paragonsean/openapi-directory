# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GcsSource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, input_uris: List[str]=None):
        """GcsSource - a model defined in OpenAPI

        :param input_uris: The input_uris of this GcsSource.
        """
        self.openapi_types = {
            'input_uris': List[str]
        }

        self.attribute_map = {
            'input_uris': 'inputUris'
        }

        self._input_uris = input_uris

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GcsSource':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GcsSource of this GcsSource.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def input_uris(self):
        """Gets the input_uris of this GcsSource.

        Required. Google Cloud Storage URIs to input files, up to 2000 characters long. Accepted forms: * Full object path, e.g. gs://bucket/directory/object.csv

        :return: The input_uris of this GcsSource.
        :rtype: List[str]
        """
        return self._input_uris

    @input_uris.setter
    def input_uris(self, input_uris):
        """Sets the input_uris of this GcsSource.

        Required. Google Cloud Storage URIs to input files, up to 2000 characters long. Accepted forms: * Full object path, e.g. gs://bucket/directory/object.csv

        :param input_uris: The input_uris of this GcsSource.
        :type input_uris: List[str]
        """

        self._input_uris = input_uris
