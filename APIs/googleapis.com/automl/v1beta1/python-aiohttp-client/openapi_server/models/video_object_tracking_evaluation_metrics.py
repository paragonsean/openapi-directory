# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.bounding_box_metrics_entry import BoundingBoxMetricsEntry
from openapi_server import util


class VideoObjectTrackingEvaluationMetrics(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bounding_box_mean_average_precision: float=None, bounding_box_metrics_entries: List[BoundingBoxMetricsEntry]=None, evaluated_bounding_box_count: int=None, evaluated_frame_count: int=None):
        """VideoObjectTrackingEvaluationMetrics - a model defined in OpenAPI

        :param bounding_box_mean_average_precision: The bounding_box_mean_average_precision of this VideoObjectTrackingEvaluationMetrics.
        :param bounding_box_metrics_entries: The bounding_box_metrics_entries of this VideoObjectTrackingEvaluationMetrics.
        :param evaluated_bounding_box_count: The evaluated_bounding_box_count of this VideoObjectTrackingEvaluationMetrics.
        :param evaluated_frame_count: The evaluated_frame_count of this VideoObjectTrackingEvaluationMetrics.
        """
        self.openapi_types = {
            'bounding_box_mean_average_precision': float,
            'bounding_box_metrics_entries': List[BoundingBoxMetricsEntry],
            'evaluated_bounding_box_count': int,
            'evaluated_frame_count': int
        }

        self.attribute_map = {
            'bounding_box_mean_average_precision': 'boundingBoxMeanAveragePrecision',
            'bounding_box_metrics_entries': 'boundingBoxMetricsEntries',
            'evaluated_bounding_box_count': 'evaluatedBoundingBoxCount',
            'evaluated_frame_count': 'evaluatedFrameCount'
        }

        self._bounding_box_mean_average_precision = bounding_box_mean_average_precision
        self._bounding_box_metrics_entries = bounding_box_metrics_entries
        self._evaluated_bounding_box_count = evaluated_bounding_box_count
        self._evaluated_frame_count = evaluated_frame_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VideoObjectTrackingEvaluationMetrics':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VideoObjectTrackingEvaluationMetrics of this VideoObjectTrackingEvaluationMetrics.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bounding_box_mean_average_precision(self):
        """Gets the bounding_box_mean_average_precision of this VideoObjectTrackingEvaluationMetrics.

        Output only. The single metric for bounding boxes evaluation: the mean_average_precision averaged over all bounding_box_metrics_entries.

        :return: The bounding_box_mean_average_precision of this VideoObjectTrackingEvaluationMetrics.
        :rtype: float
        """
        return self._bounding_box_mean_average_precision

    @bounding_box_mean_average_precision.setter
    def bounding_box_mean_average_precision(self, bounding_box_mean_average_precision):
        """Sets the bounding_box_mean_average_precision of this VideoObjectTrackingEvaluationMetrics.

        Output only. The single metric for bounding boxes evaluation: the mean_average_precision averaged over all bounding_box_metrics_entries.

        :param bounding_box_mean_average_precision: The bounding_box_mean_average_precision of this VideoObjectTrackingEvaluationMetrics.
        :type bounding_box_mean_average_precision: float
        """

        self._bounding_box_mean_average_precision = bounding_box_mean_average_precision

    @property
    def bounding_box_metrics_entries(self):
        """Gets the bounding_box_metrics_entries of this VideoObjectTrackingEvaluationMetrics.

        Output only. The bounding boxes match metrics for each Intersection-over-union threshold 0.05,0.10,...,0.95,0.96,0.97,0.98,0.99 and each label confidence threshold 0.05,0.10,...,0.95,0.96,0.97,0.98,0.99 pair.

        :return: The bounding_box_metrics_entries of this VideoObjectTrackingEvaluationMetrics.
        :rtype: List[BoundingBoxMetricsEntry]
        """
        return self._bounding_box_metrics_entries

    @bounding_box_metrics_entries.setter
    def bounding_box_metrics_entries(self, bounding_box_metrics_entries):
        """Sets the bounding_box_metrics_entries of this VideoObjectTrackingEvaluationMetrics.

        Output only. The bounding boxes match metrics for each Intersection-over-union threshold 0.05,0.10,...,0.95,0.96,0.97,0.98,0.99 and each label confidence threshold 0.05,0.10,...,0.95,0.96,0.97,0.98,0.99 pair.

        :param bounding_box_metrics_entries: The bounding_box_metrics_entries of this VideoObjectTrackingEvaluationMetrics.
        :type bounding_box_metrics_entries: List[BoundingBoxMetricsEntry]
        """

        self._bounding_box_metrics_entries = bounding_box_metrics_entries

    @property
    def evaluated_bounding_box_count(self):
        """Gets the evaluated_bounding_box_count of this VideoObjectTrackingEvaluationMetrics.

        Output only. The total number of bounding boxes (i.e. summed over all frames) the ground truth used to create this evaluation had.

        :return: The evaluated_bounding_box_count of this VideoObjectTrackingEvaluationMetrics.
        :rtype: int
        """
        return self._evaluated_bounding_box_count

    @evaluated_bounding_box_count.setter
    def evaluated_bounding_box_count(self, evaluated_bounding_box_count):
        """Sets the evaluated_bounding_box_count of this VideoObjectTrackingEvaluationMetrics.

        Output only. The total number of bounding boxes (i.e. summed over all frames) the ground truth used to create this evaluation had.

        :param evaluated_bounding_box_count: The evaluated_bounding_box_count of this VideoObjectTrackingEvaluationMetrics.
        :type evaluated_bounding_box_count: int
        """

        self._evaluated_bounding_box_count = evaluated_bounding_box_count

    @property
    def evaluated_frame_count(self):
        """Gets the evaluated_frame_count of this VideoObjectTrackingEvaluationMetrics.

        Output only. The number of video frames used to create this evaluation.

        :return: The evaluated_frame_count of this VideoObjectTrackingEvaluationMetrics.
        :rtype: int
        """
        return self._evaluated_frame_count

    @evaluated_frame_count.setter
    def evaluated_frame_count(self, evaluated_frame_count):
        """Sets the evaluated_frame_count of this VideoObjectTrackingEvaluationMetrics.

        Output only. The number of video frames used to create this evaluation.

        :param evaluated_frame_count: The evaluated_frame_count of this VideoObjectTrackingEvaluationMetrics.
        :type evaluated_frame_count: int
        """

        self._evaluated_frame_count = evaluated_frame_count
