# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TablesModelColumnInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, column_display_name: str=None, column_spec_name: str=None, feature_importance: float=None):
        """TablesModelColumnInfo - a model defined in OpenAPI

        :param column_display_name: The column_display_name of this TablesModelColumnInfo.
        :param column_spec_name: The column_spec_name of this TablesModelColumnInfo.
        :param feature_importance: The feature_importance of this TablesModelColumnInfo.
        """
        self.openapi_types = {
            'column_display_name': str,
            'column_spec_name': str,
            'feature_importance': float
        }

        self.attribute_map = {
            'column_display_name': 'columnDisplayName',
            'column_spec_name': 'columnSpecName',
            'feature_importance': 'featureImportance'
        }

        self._column_display_name = column_display_name
        self._column_spec_name = column_spec_name
        self._feature_importance = feature_importance

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TablesModelColumnInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TablesModelColumnInfo of this TablesModelColumnInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def column_display_name(self):
        """Gets the column_display_name of this TablesModelColumnInfo.

        Output only. The display name of the column (same as the display_name of its ColumnSpec).

        :return: The column_display_name of this TablesModelColumnInfo.
        :rtype: str
        """
        return self._column_display_name

    @column_display_name.setter
    def column_display_name(self, column_display_name):
        """Sets the column_display_name of this TablesModelColumnInfo.

        Output only. The display name of the column (same as the display_name of its ColumnSpec).

        :param column_display_name: The column_display_name of this TablesModelColumnInfo.
        :type column_display_name: str
        """

        self._column_display_name = column_display_name

    @property
    def column_spec_name(self):
        """Gets the column_spec_name of this TablesModelColumnInfo.

        Output only. The name of the ColumnSpec describing the column. Not populated when this proto is outputted to BigQuery.

        :return: The column_spec_name of this TablesModelColumnInfo.
        :rtype: str
        """
        return self._column_spec_name

    @column_spec_name.setter
    def column_spec_name(self, column_spec_name):
        """Sets the column_spec_name of this TablesModelColumnInfo.

        Output only. The name of the ColumnSpec describing the column. Not populated when this proto is outputted to BigQuery.

        :param column_spec_name: The column_spec_name of this TablesModelColumnInfo.
        :type column_spec_name: str
        """

        self._column_spec_name = column_spec_name

    @property
    def feature_importance(self):
        """Gets the feature_importance of this TablesModelColumnInfo.

        Output only. When given as part of a Model (always populated): Measurement of how much model predictions correctness on the TEST data depend on values in this column. A value between 0 and 1, higher means higher influence. These values are normalized - for all input feature columns of a given model they add to 1. When given back by Predict (populated iff feature_importance param is set) or Batch Predict (populated iff feature_importance param is set): Measurement of how impactful for the prediction returned for the given row the value in this column was. Specifically, the feature importance specifies the marginal contribution that the feature made to the prediction score compared to the baseline score. These values are computed using the Sampled Shapley method.

        :return: The feature_importance of this TablesModelColumnInfo.
        :rtype: float
        """
        return self._feature_importance

    @feature_importance.setter
    def feature_importance(self, feature_importance):
        """Sets the feature_importance of this TablesModelColumnInfo.

        Output only. When given as part of a Model (always populated): Measurement of how much model predictions correctness on the TEST data depend on values in this column. A value between 0 and 1, higher means higher influence. These values are normalized - for all input feature columns of a given model they add to 1. When given back by Predict (populated iff feature_importance param is set) or Batch Predict (populated iff feature_importance param is set): Measurement of how impactful for the prediction returned for the given row the value in this column was. Specifically, the feature importance specifies the marginal contribution that the feature made to the prediction score compared to the baseline score. These values are computed using the Sampled Shapley method.

        :param feature_importance: The feature_importance of this TablesModelColumnInfo.
        :type feature_importance: float
        """

        self._feature_importance = feature_importance
