# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.classification_evaluation_metrics import ClassificationEvaluationMetrics
from openapi_server.models.image_object_detection_evaluation_metrics import ImageObjectDetectionEvaluationMetrics
from openapi_server.models.regression_evaluation_metrics import RegressionEvaluationMetrics
from openapi_server.models.text_extraction_evaluation_metrics import TextExtractionEvaluationMetrics
from openapi_server.models.text_sentiment_evaluation_metrics import TextSentimentEvaluationMetrics
from openapi_server.models.translation_evaluation_metrics import TranslationEvaluationMetrics
from openapi_server.models.video_object_tracking_evaluation_metrics import VideoObjectTrackingEvaluationMetrics
from openapi_server import util


class ModelEvaluation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, annotation_spec_id: str=None, classification_evaluation_metrics: ClassificationEvaluationMetrics=None, create_time: str=None, display_name: str=None, evaluated_example_count: int=None, image_object_detection_evaluation_metrics: ImageObjectDetectionEvaluationMetrics=None, name: str=None, regression_evaluation_metrics: RegressionEvaluationMetrics=None, text_extraction_evaluation_metrics: TextExtractionEvaluationMetrics=None, text_sentiment_evaluation_metrics: TextSentimentEvaluationMetrics=None, translation_evaluation_metrics: TranslationEvaluationMetrics=None, video_object_tracking_evaluation_metrics: VideoObjectTrackingEvaluationMetrics=None):
        """ModelEvaluation - a model defined in OpenAPI

        :param annotation_spec_id: The annotation_spec_id of this ModelEvaluation.
        :param classification_evaluation_metrics: The classification_evaluation_metrics of this ModelEvaluation.
        :param create_time: The create_time of this ModelEvaluation.
        :param display_name: The display_name of this ModelEvaluation.
        :param evaluated_example_count: The evaluated_example_count of this ModelEvaluation.
        :param image_object_detection_evaluation_metrics: The image_object_detection_evaluation_metrics of this ModelEvaluation.
        :param name: The name of this ModelEvaluation.
        :param regression_evaluation_metrics: The regression_evaluation_metrics of this ModelEvaluation.
        :param text_extraction_evaluation_metrics: The text_extraction_evaluation_metrics of this ModelEvaluation.
        :param text_sentiment_evaluation_metrics: The text_sentiment_evaluation_metrics of this ModelEvaluation.
        :param translation_evaluation_metrics: The translation_evaluation_metrics of this ModelEvaluation.
        :param video_object_tracking_evaluation_metrics: The video_object_tracking_evaluation_metrics of this ModelEvaluation.
        """
        self.openapi_types = {
            'annotation_spec_id': str,
            'classification_evaluation_metrics': ClassificationEvaluationMetrics,
            'create_time': str,
            'display_name': str,
            'evaluated_example_count': int,
            'image_object_detection_evaluation_metrics': ImageObjectDetectionEvaluationMetrics,
            'name': str,
            'regression_evaluation_metrics': RegressionEvaluationMetrics,
            'text_extraction_evaluation_metrics': TextExtractionEvaluationMetrics,
            'text_sentiment_evaluation_metrics': TextSentimentEvaluationMetrics,
            'translation_evaluation_metrics': TranslationEvaluationMetrics,
            'video_object_tracking_evaluation_metrics': VideoObjectTrackingEvaluationMetrics
        }

        self.attribute_map = {
            'annotation_spec_id': 'annotationSpecId',
            'classification_evaluation_metrics': 'classificationEvaluationMetrics',
            'create_time': 'createTime',
            'display_name': 'displayName',
            'evaluated_example_count': 'evaluatedExampleCount',
            'image_object_detection_evaluation_metrics': 'imageObjectDetectionEvaluationMetrics',
            'name': 'name',
            'regression_evaluation_metrics': 'regressionEvaluationMetrics',
            'text_extraction_evaluation_metrics': 'textExtractionEvaluationMetrics',
            'text_sentiment_evaluation_metrics': 'textSentimentEvaluationMetrics',
            'translation_evaluation_metrics': 'translationEvaluationMetrics',
            'video_object_tracking_evaluation_metrics': 'videoObjectTrackingEvaluationMetrics'
        }

        self._annotation_spec_id = annotation_spec_id
        self._classification_evaluation_metrics = classification_evaluation_metrics
        self._create_time = create_time
        self._display_name = display_name
        self._evaluated_example_count = evaluated_example_count
        self._image_object_detection_evaluation_metrics = image_object_detection_evaluation_metrics
        self._name = name
        self._regression_evaluation_metrics = regression_evaluation_metrics
        self._text_extraction_evaluation_metrics = text_extraction_evaluation_metrics
        self._text_sentiment_evaluation_metrics = text_sentiment_evaluation_metrics
        self._translation_evaluation_metrics = translation_evaluation_metrics
        self._video_object_tracking_evaluation_metrics = video_object_tracking_evaluation_metrics

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ModelEvaluation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ModelEvaluation of this ModelEvaluation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def annotation_spec_id(self):
        """Gets the annotation_spec_id of this ModelEvaluation.

        Output only. The ID of the annotation spec that the model evaluation applies to. The The ID is empty for the overall model evaluation. For Tables annotation specs in the dataset do not exist and this ID is always not set, but for CLASSIFICATION prediction_type-s the display_name field is used.

        :return: The annotation_spec_id of this ModelEvaluation.
        :rtype: str
        """
        return self._annotation_spec_id

    @annotation_spec_id.setter
    def annotation_spec_id(self, annotation_spec_id):
        """Sets the annotation_spec_id of this ModelEvaluation.

        Output only. The ID of the annotation spec that the model evaluation applies to. The The ID is empty for the overall model evaluation. For Tables annotation specs in the dataset do not exist and this ID is always not set, but for CLASSIFICATION prediction_type-s the display_name field is used.

        :param annotation_spec_id: The annotation_spec_id of this ModelEvaluation.
        :type annotation_spec_id: str
        """

        self._annotation_spec_id = annotation_spec_id

    @property
    def classification_evaluation_metrics(self):
        """Gets the classification_evaluation_metrics of this ModelEvaluation.


        :return: The classification_evaluation_metrics of this ModelEvaluation.
        :rtype: ClassificationEvaluationMetrics
        """
        return self._classification_evaluation_metrics

    @classification_evaluation_metrics.setter
    def classification_evaluation_metrics(self, classification_evaluation_metrics):
        """Sets the classification_evaluation_metrics of this ModelEvaluation.


        :param classification_evaluation_metrics: The classification_evaluation_metrics of this ModelEvaluation.
        :type classification_evaluation_metrics: ClassificationEvaluationMetrics
        """

        self._classification_evaluation_metrics = classification_evaluation_metrics

    @property
    def create_time(self):
        """Gets the create_time of this ModelEvaluation.

        Output only. Timestamp when this model evaluation was created.

        :return: The create_time of this ModelEvaluation.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this ModelEvaluation.

        Output only. Timestamp when this model evaluation was created.

        :param create_time: The create_time of this ModelEvaluation.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def display_name(self):
        """Gets the display_name of this ModelEvaluation.

        Output only. The value of display_name at the moment when the model was trained. Because this field returns a value at model training time, for different models trained from the same dataset, the values may differ, since display names could had been changed between the two model's trainings. For Tables CLASSIFICATION prediction_type-s distinct values of the target column at the moment of the model evaluation are populated here. The display_name is empty for the overall model evaluation.

        :return: The display_name of this ModelEvaluation.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this ModelEvaluation.

        Output only. The value of display_name at the moment when the model was trained. Because this field returns a value at model training time, for different models trained from the same dataset, the values may differ, since display names could had been changed between the two model's trainings. For Tables CLASSIFICATION prediction_type-s distinct values of the target column at the moment of the model evaluation are populated here. The display_name is empty for the overall model evaluation.

        :param display_name: The display_name of this ModelEvaluation.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def evaluated_example_count(self):
        """Gets the evaluated_example_count of this ModelEvaluation.

        Output only. The number of examples used for model evaluation, i.e. for which ground truth from time of model creation is compared against the predicted annotations created by the model. For overall ModelEvaluation (i.e. with annotation_spec_id not set) this is the total number of all examples used for evaluation. Otherwise, this is the count of examples that according to the ground truth were annotated by the annotation_spec_id.

        :return: The evaluated_example_count of this ModelEvaluation.
        :rtype: int
        """
        return self._evaluated_example_count

    @evaluated_example_count.setter
    def evaluated_example_count(self, evaluated_example_count):
        """Sets the evaluated_example_count of this ModelEvaluation.

        Output only. The number of examples used for model evaluation, i.e. for which ground truth from time of model creation is compared against the predicted annotations created by the model. For overall ModelEvaluation (i.e. with annotation_spec_id not set) this is the total number of all examples used for evaluation. Otherwise, this is the count of examples that according to the ground truth were annotated by the annotation_spec_id.

        :param evaluated_example_count: The evaluated_example_count of this ModelEvaluation.
        :type evaluated_example_count: int
        """

        self._evaluated_example_count = evaluated_example_count

    @property
    def image_object_detection_evaluation_metrics(self):
        """Gets the image_object_detection_evaluation_metrics of this ModelEvaluation.


        :return: The image_object_detection_evaluation_metrics of this ModelEvaluation.
        :rtype: ImageObjectDetectionEvaluationMetrics
        """
        return self._image_object_detection_evaluation_metrics

    @image_object_detection_evaluation_metrics.setter
    def image_object_detection_evaluation_metrics(self, image_object_detection_evaluation_metrics):
        """Sets the image_object_detection_evaluation_metrics of this ModelEvaluation.


        :param image_object_detection_evaluation_metrics: The image_object_detection_evaluation_metrics of this ModelEvaluation.
        :type image_object_detection_evaluation_metrics: ImageObjectDetectionEvaluationMetrics
        """

        self._image_object_detection_evaluation_metrics = image_object_detection_evaluation_metrics

    @property
    def name(self):
        """Gets the name of this ModelEvaluation.

        Output only. Resource name of the model evaluation. Format: `projects/{project_id}/locations/{location_id}/models/{model_id}/modelEvaluations/{model_evaluation_id}`

        :return: The name of this ModelEvaluation.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ModelEvaluation.

        Output only. Resource name of the model evaluation. Format: `projects/{project_id}/locations/{location_id}/models/{model_id}/modelEvaluations/{model_evaluation_id}`

        :param name: The name of this ModelEvaluation.
        :type name: str
        """

        self._name = name

    @property
    def regression_evaluation_metrics(self):
        """Gets the regression_evaluation_metrics of this ModelEvaluation.


        :return: The regression_evaluation_metrics of this ModelEvaluation.
        :rtype: RegressionEvaluationMetrics
        """
        return self._regression_evaluation_metrics

    @regression_evaluation_metrics.setter
    def regression_evaluation_metrics(self, regression_evaluation_metrics):
        """Sets the regression_evaluation_metrics of this ModelEvaluation.


        :param regression_evaluation_metrics: The regression_evaluation_metrics of this ModelEvaluation.
        :type regression_evaluation_metrics: RegressionEvaluationMetrics
        """

        self._regression_evaluation_metrics = regression_evaluation_metrics

    @property
    def text_extraction_evaluation_metrics(self):
        """Gets the text_extraction_evaluation_metrics of this ModelEvaluation.


        :return: The text_extraction_evaluation_metrics of this ModelEvaluation.
        :rtype: TextExtractionEvaluationMetrics
        """
        return self._text_extraction_evaluation_metrics

    @text_extraction_evaluation_metrics.setter
    def text_extraction_evaluation_metrics(self, text_extraction_evaluation_metrics):
        """Sets the text_extraction_evaluation_metrics of this ModelEvaluation.


        :param text_extraction_evaluation_metrics: The text_extraction_evaluation_metrics of this ModelEvaluation.
        :type text_extraction_evaluation_metrics: TextExtractionEvaluationMetrics
        """

        self._text_extraction_evaluation_metrics = text_extraction_evaluation_metrics

    @property
    def text_sentiment_evaluation_metrics(self):
        """Gets the text_sentiment_evaluation_metrics of this ModelEvaluation.


        :return: The text_sentiment_evaluation_metrics of this ModelEvaluation.
        :rtype: TextSentimentEvaluationMetrics
        """
        return self._text_sentiment_evaluation_metrics

    @text_sentiment_evaluation_metrics.setter
    def text_sentiment_evaluation_metrics(self, text_sentiment_evaluation_metrics):
        """Sets the text_sentiment_evaluation_metrics of this ModelEvaluation.


        :param text_sentiment_evaluation_metrics: The text_sentiment_evaluation_metrics of this ModelEvaluation.
        :type text_sentiment_evaluation_metrics: TextSentimentEvaluationMetrics
        """

        self._text_sentiment_evaluation_metrics = text_sentiment_evaluation_metrics

    @property
    def translation_evaluation_metrics(self):
        """Gets the translation_evaluation_metrics of this ModelEvaluation.


        :return: The translation_evaluation_metrics of this ModelEvaluation.
        :rtype: TranslationEvaluationMetrics
        """
        return self._translation_evaluation_metrics

    @translation_evaluation_metrics.setter
    def translation_evaluation_metrics(self, translation_evaluation_metrics):
        """Sets the translation_evaluation_metrics of this ModelEvaluation.


        :param translation_evaluation_metrics: The translation_evaluation_metrics of this ModelEvaluation.
        :type translation_evaluation_metrics: TranslationEvaluationMetrics
        """

        self._translation_evaluation_metrics = translation_evaluation_metrics

    @property
    def video_object_tracking_evaluation_metrics(self):
        """Gets the video_object_tracking_evaluation_metrics of this ModelEvaluation.


        :return: The video_object_tracking_evaluation_metrics of this ModelEvaluation.
        :rtype: VideoObjectTrackingEvaluationMetrics
        """
        return self._video_object_tracking_evaluation_metrics

    @video_object_tracking_evaluation_metrics.setter
    def video_object_tracking_evaluation_metrics(self, video_object_tracking_evaluation_metrics):
        """Sets the video_object_tracking_evaluation_metrics of this ModelEvaluation.


        :param video_object_tracking_evaluation_metrics: The video_object_tracking_evaluation_metrics of this ModelEvaluation.
        :type video_object_tracking_evaluation_metrics: VideoObjectTrackingEvaluationMetrics
        """

        self._video_object_tracking_evaluation_metrics = video_object_tracking_evaluation_metrics
