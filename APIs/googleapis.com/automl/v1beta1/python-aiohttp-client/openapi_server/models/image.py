# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.input_config import InputConfig
from openapi_server import util


class Image(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, image_bytes: str=None, input_config: InputConfig=None, thumbnail_uri: str=None):
        """Image - a model defined in OpenAPI

        :param image_bytes: The image_bytes of this Image.
        :param input_config: The input_config of this Image.
        :param thumbnail_uri: The thumbnail_uri of this Image.
        """
        self.openapi_types = {
            'image_bytes': str,
            'input_config': InputConfig,
            'thumbnail_uri': str
        }

        self.attribute_map = {
            'image_bytes': 'imageBytes',
            'input_config': 'inputConfig',
            'thumbnail_uri': 'thumbnailUri'
        }

        self._image_bytes = image_bytes
        self._input_config = input_config
        self._thumbnail_uri = thumbnail_uri

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Image':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Image of this Image.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def image_bytes(self):
        """Gets the image_bytes of this Image.

        Image content represented as a stream of bytes. Note: As with all `bytes` fields, protobuffers use a pure binary representation, whereas JSON representations use base64.

        :return: The image_bytes of this Image.
        :rtype: str
        """
        return self._image_bytes

    @image_bytes.setter
    def image_bytes(self, image_bytes):
        """Sets the image_bytes of this Image.

        Image content represented as a stream of bytes. Note: As with all `bytes` fields, protobuffers use a pure binary representation, whereas JSON representations use base64.

        :param image_bytes: The image_bytes of this Image.
        :type image_bytes: str
        """

        self._image_bytes = image_bytes

    @property
    def input_config(self):
        """Gets the input_config of this Image.


        :return: The input_config of this Image.
        :rtype: InputConfig
        """
        return self._input_config

    @input_config.setter
    def input_config(self, input_config):
        """Sets the input_config of this Image.


        :param input_config: The input_config of this Image.
        :type input_config: InputConfig
        """

        self._input_config = input_config

    @property
    def thumbnail_uri(self):
        """Gets the thumbnail_uri of this Image.

        Output only. HTTP URI to the thumbnail image.

        :return: The thumbnail_uri of this Image.
        :rtype: str
        """
        return self._thumbnail_uri

    @thumbnail_uri.setter
    def thumbnail_uri(self, thumbnail_uri):
        """Sets the thumbnail_uri of this Image.

        Output only. HTTP URI to the thumbnail image.

        :param thumbnail_uri: The thumbnail_uri of this Image.
        :type thumbnail_uri: str
        """

        self._thumbnail_uri = thumbnail_uri
