/**
 * Cloud AutoML API
 * Train high-quality custom machine learning models with minimum effort and machine learning expertise.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIImageObjectDetectionEvaluationMetrics.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIImageObjectDetectionEvaluationMetrics::OAIImageObjectDetectionEvaluationMetrics(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIImageObjectDetectionEvaluationMetrics::OAIImageObjectDetectionEvaluationMetrics() {
    this->initializeModel();
}

OAIImageObjectDetectionEvaluationMetrics::~OAIImageObjectDetectionEvaluationMetrics() {}

void OAIImageObjectDetectionEvaluationMetrics::initializeModel() {

    m_bounding_box_mean_average_precision_isSet = false;
    m_bounding_box_mean_average_precision_isValid = false;

    m_bounding_box_metrics_entries_isSet = false;
    m_bounding_box_metrics_entries_isValid = false;

    m_evaluated_bounding_box_count_isSet = false;
    m_evaluated_bounding_box_count_isValid = false;
}

void OAIImageObjectDetectionEvaluationMetrics::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIImageObjectDetectionEvaluationMetrics::fromJsonObject(QJsonObject json) {

    m_bounding_box_mean_average_precision_isValid = ::OpenAPI::fromJsonValue(m_bounding_box_mean_average_precision, json[QString("boundingBoxMeanAveragePrecision")]);
    m_bounding_box_mean_average_precision_isSet = !json[QString("boundingBoxMeanAveragePrecision")].isNull() && m_bounding_box_mean_average_precision_isValid;

    m_bounding_box_metrics_entries_isValid = ::OpenAPI::fromJsonValue(m_bounding_box_metrics_entries, json[QString("boundingBoxMetricsEntries")]);
    m_bounding_box_metrics_entries_isSet = !json[QString("boundingBoxMetricsEntries")].isNull() && m_bounding_box_metrics_entries_isValid;

    m_evaluated_bounding_box_count_isValid = ::OpenAPI::fromJsonValue(m_evaluated_bounding_box_count, json[QString("evaluatedBoundingBoxCount")]);
    m_evaluated_bounding_box_count_isSet = !json[QString("evaluatedBoundingBoxCount")].isNull() && m_evaluated_bounding_box_count_isValid;
}

QString OAIImageObjectDetectionEvaluationMetrics::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIImageObjectDetectionEvaluationMetrics::asJsonObject() const {
    QJsonObject obj;
    if (m_bounding_box_mean_average_precision_isSet) {
        obj.insert(QString("boundingBoxMeanAveragePrecision"), ::OpenAPI::toJsonValue(m_bounding_box_mean_average_precision));
    }
    if (m_bounding_box_metrics_entries.size() > 0) {
        obj.insert(QString("boundingBoxMetricsEntries"), ::OpenAPI::toJsonValue(m_bounding_box_metrics_entries));
    }
    if (m_evaluated_bounding_box_count_isSet) {
        obj.insert(QString("evaluatedBoundingBoxCount"), ::OpenAPI::toJsonValue(m_evaluated_bounding_box_count));
    }
    return obj;
}

float OAIImageObjectDetectionEvaluationMetrics::getBoundingBoxMeanAveragePrecision() const {
    return m_bounding_box_mean_average_precision;
}
void OAIImageObjectDetectionEvaluationMetrics::setBoundingBoxMeanAveragePrecision(const float &bounding_box_mean_average_precision) {
    m_bounding_box_mean_average_precision = bounding_box_mean_average_precision;
    m_bounding_box_mean_average_precision_isSet = true;
}

bool OAIImageObjectDetectionEvaluationMetrics::is_bounding_box_mean_average_precision_Set() const{
    return m_bounding_box_mean_average_precision_isSet;
}

bool OAIImageObjectDetectionEvaluationMetrics::is_bounding_box_mean_average_precision_Valid() const{
    return m_bounding_box_mean_average_precision_isValid;
}

QList<OAIBoundingBoxMetricsEntry> OAIImageObjectDetectionEvaluationMetrics::getBoundingBoxMetricsEntries() const {
    return m_bounding_box_metrics_entries;
}
void OAIImageObjectDetectionEvaluationMetrics::setBoundingBoxMetricsEntries(const QList<OAIBoundingBoxMetricsEntry> &bounding_box_metrics_entries) {
    m_bounding_box_metrics_entries = bounding_box_metrics_entries;
    m_bounding_box_metrics_entries_isSet = true;
}

bool OAIImageObjectDetectionEvaluationMetrics::is_bounding_box_metrics_entries_Set() const{
    return m_bounding_box_metrics_entries_isSet;
}

bool OAIImageObjectDetectionEvaluationMetrics::is_bounding_box_metrics_entries_Valid() const{
    return m_bounding_box_metrics_entries_isValid;
}

qint32 OAIImageObjectDetectionEvaluationMetrics::getEvaluatedBoundingBoxCount() const {
    return m_evaluated_bounding_box_count;
}
void OAIImageObjectDetectionEvaluationMetrics::setEvaluatedBoundingBoxCount(const qint32 &evaluated_bounding_box_count) {
    m_evaluated_bounding_box_count = evaluated_bounding_box_count;
    m_evaluated_bounding_box_count_isSet = true;
}

bool OAIImageObjectDetectionEvaluationMetrics::is_evaluated_bounding_box_count_Set() const{
    return m_evaluated_bounding_box_count_isSet;
}

bool OAIImageObjectDetectionEvaluationMetrics::is_evaluated_bounding_box_count_Valid() const{
    return m_evaluated_bounding_box_count_isValid;
}

bool OAIImageObjectDetectionEvaluationMetrics::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bounding_box_mean_average_precision_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bounding_box_metrics_entries.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_evaluated_bounding_box_count_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIImageObjectDetectionEvaluationMetrics::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
