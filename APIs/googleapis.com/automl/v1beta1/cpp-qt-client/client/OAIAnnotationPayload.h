/**
 * Cloud AutoML API
 * Train high-quality custom machine learning models with minimum effort and machine learning expertise.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAnnotationPayload.h
 *
 * Contains annotation information that is relevant to AutoML.
 */

#ifndef OAIAnnotationPayload_H
#define OAIAnnotationPayload_H

#include <QJsonObject>

#include "OAIClassificationAnnotation.h"
#include "OAIImageObjectDetectionAnnotation.h"
#include "OAITablesAnnotation.h"
#include "OAITextExtractionAnnotation.h"
#include "OAITextSentimentAnnotation.h"
#include "OAITranslationAnnotation.h"
#include "OAIVideoClassificationAnnotation.h"
#include "OAIVideoObjectTrackingAnnotation.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIClassificationAnnotation;
class OAIImageObjectDetectionAnnotation;
class OAITablesAnnotation;
class OAITextExtractionAnnotation;
class OAITextSentimentAnnotation;
class OAITranslationAnnotation;
class OAIVideoClassificationAnnotation;
class OAIVideoObjectTrackingAnnotation;

class OAIAnnotationPayload : public OAIObject {
public:
    OAIAnnotationPayload();
    OAIAnnotationPayload(QString json);
    ~OAIAnnotationPayload() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAnnotationSpecId() const;
    void setAnnotationSpecId(const QString &annotation_spec_id);
    bool is_annotation_spec_id_Set() const;
    bool is_annotation_spec_id_Valid() const;

    OAIClassificationAnnotation getClassification() const;
    void setClassification(const OAIClassificationAnnotation &classification);
    bool is_classification_Set() const;
    bool is_classification_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    OAIImageObjectDetectionAnnotation getImageObjectDetection() const;
    void setImageObjectDetection(const OAIImageObjectDetectionAnnotation &image_object_detection);
    bool is_image_object_detection_Set() const;
    bool is_image_object_detection_Valid() const;

    OAITablesAnnotation getTables() const;
    void setTables(const OAITablesAnnotation &tables);
    bool is_tables_Set() const;
    bool is_tables_Valid() const;

    OAITextExtractionAnnotation getTextExtraction() const;
    void setTextExtraction(const OAITextExtractionAnnotation &text_extraction);
    bool is_text_extraction_Set() const;
    bool is_text_extraction_Valid() const;

    OAITextSentimentAnnotation getTextSentiment() const;
    void setTextSentiment(const OAITextSentimentAnnotation &text_sentiment);
    bool is_text_sentiment_Set() const;
    bool is_text_sentiment_Valid() const;

    OAITranslationAnnotation getTranslation() const;
    void setTranslation(const OAITranslationAnnotation &translation);
    bool is_translation_Set() const;
    bool is_translation_Valid() const;

    OAIVideoClassificationAnnotation getVideoClassification() const;
    void setVideoClassification(const OAIVideoClassificationAnnotation &video_classification);
    bool is_video_classification_Set() const;
    bool is_video_classification_Valid() const;

    OAIVideoObjectTrackingAnnotation getVideoObjectTracking() const;
    void setVideoObjectTracking(const OAIVideoObjectTrackingAnnotation &video_object_tracking);
    bool is_video_object_tracking_Set() const;
    bool is_video_object_tracking_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_annotation_spec_id;
    bool m_annotation_spec_id_isSet;
    bool m_annotation_spec_id_isValid;

    OAIClassificationAnnotation m_classification;
    bool m_classification_isSet;
    bool m_classification_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    OAIImageObjectDetectionAnnotation m_image_object_detection;
    bool m_image_object_detection_isSet;
    bool m_image_object_detection_isValid;

    OAITablesAnnotation m_tables;
    bool m_tables_isSet;
    bool m_tables_isValid;

    OAITextExtractionAnnotation m_text_extraction;
    bool m_text_extraction_isSet;
    bool m_text_extraction_isValid;

    OAITextSentimentAnnotation m_text_sentiment;
    bool m_text_sentiment_isSet;
    bool m_text_sentiment_isValid;

    OAITranslationAnnotation m_translation;
    bool m_translation_isSet;
    bool m_translation_isValid;

    OAIVideoClassificationAnnotation m_video_classification;
    bool m_video_classification_isSet;
    bool m_video_classification_isValid;

    OAIVideoObjectTrackingAnnotation m_video_object_tracking;
    bool m_video_object_tracking_isSet;
    bool m_video_object_tracking_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAnnotationPayload)

#endif // OAIAnnotationPayload_H
