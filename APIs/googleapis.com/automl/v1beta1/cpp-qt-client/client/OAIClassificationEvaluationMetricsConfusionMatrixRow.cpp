/**
 * Cloud AutoML API
 * Train high-quality custom machine learning models with minimum effort and machine learning expertise.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIClassificationEvaluationMetricsConfusionMatrixRow.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIClassificationEvaluationMetricsConfusionMatrixRow::OAIClassificationEvaluationMetricsConfusionMatrixRow(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIClassificationEvaluationMetricsConfusionMatrixRow::OAIClassificationEvaluationMetricsConfusionMatrixRow() {
    this->initializeModel();
}

OAIClassificationEvaluationMetricsConfusionMatrixRow::~OAIClassificationEvaluationMetricsConfusionMatrixRow() {}

void OAIClassificationEvaluationMetricsConfusionMatrixRow::initializeModel() {

    m_example_count_isSet = false;
    m_example_count_isValid = false;
}

void OAIClassificationEvaluationMetricsConfusionMatrixRow::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIClassificationEvaluationMetricsConfusionMatrixRow::fromJsonObject(QJsonObject json) {

    m_example_count_isValid = ::OpenAPI::fromJsonValue(m_example_count, json[QString("exampleCount")]);
    m_example_count_isSet = !json[QString("exampleCount")].isNull() && m_example_count_isValid;
}

QString OAIClassificationEvaluationMetricsConfusionMatrixRow::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIClassificationEvaluationMetricsConfusionMatrixRow::asJsonObject() const {
    QJsonObject obj;
    if (m_example_count.size() > 0) {
        obj.insert(QString("exampleCount"), ::OpenAPI::toJsonValue(m_example_count));
    }
    return obj;
}

QList<qint32> OAIClassificationEvaluationMetricsConfusionMatrixRow::getExampleCount() const {
    return m_example_count;
}
void OAIClassificationEvaluationMetricsConfusionMatrixRow::setExampleCount(const QList<qint32> &example_count) {
    m_example_count = example_count;
    m_example_count_isSet = true;
}

bool OAIClassificationEvaluationMetricsConfusionMatrixRow::is_example_count_Set() const{
    return m_example_count_isSet;
}

bool OAIClassificationEvaluationMetricsConfusionMatrixRow::is_example_count_Valid() const{
    return m_example_count_isValid;
}

bool OAIClassificationEvaluationMetricsConfusionMatrixRow::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_example_count.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIClassificationEvaluationMetricsConfusionMatrixRow::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
