/**
 * Cloud AutoML API
 * Train high-quality custom machine learning models with minimum effort and machine learning expertise.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIExamplePayload.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIExamplePayload::OAIExamplePayload(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIExamplePayload::OAIExamplePayload() {
    this->initializeModel();
}

OAIExamplePayload::~OAIExamplePayload() {}

void OAIExamplePayload::initializeModel() {

    m_document_isSet = false;
    m_document_isValid = false;

    m_image_isSet = false;
    m_image_isValid = false;

    m_row_isSet = false;
    m_row_isValid = false;

    m_text_snippet_isSet = false;
    m_text_snippet_isValid = false;
}

void OAIExamplePayload::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIExamplePayload::fromJsonObject(QJsonObject json) {

    m_document_isValid = ::OpenAPI::fromJsonValue(m_document, json[QString("document")]);
    m_document_isSet = !json[QString("document")].isNull() && m_document_isValid;

    m_image_isValid = ::OpenAPI::fromJsonValue(m_image, json[QString("image")]);
    m_image_isSet = !json[QString("image")].isNull() && m_image_isValid;

    m_row_isValid = ::OpenAPI::fromJsonValue(m_row, json[QString("row")]);
    m_row_isSet = !json[QString("row")].isNull() && m_row_isValid;

    m_text_snippet_isValid = ::OpenAPI::fromJsonValue(m_text_snippet, json[QString("textSnippet")]);
    m_text_snippet_isSet = !json[QString("textSnippet")].isNull() && m_text_snippet_isValid;
}

QString OAIExamplePayload::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIExamplePayload::asJsonObject() const {
    QJsonObject obj;
    if (m_document.isSet()) {
        obj.insert(QString("document"), ::OpenAPI::toJsonValue(m_document));
    }
    if (m_image.isSet()) {
        obj.insert(QString("image"), ::OpenAPI::toJsonValue(m_image));
    }
    if (m_row.isSet()) {
        obj.insert(QString("row"), ::OpenAPI::toJsonValue(m_row));
    }
    if (m_text_snippet.isSet()) {
        obj.insert(QString("textSnippet"), ::OpenAPI::toJsonValue(m_text_snippet));
    }
    return obj;
}

OAIDocument OAIExamplePayload::getDocument() const {
    return m_document;
}
void OAIExamplePayload::setDocument(const OAIDocument &document) {
    m_document = document;
    m_document_isSet = true;
}

bool OAIExamplePayload::is_document_Set() const{
    return m_document_isSet;
}

bool OAIExamplePayload::is_document_Valid() const{
    return m_document_isValid;
}

OAIImage OAIExamplePayload::getImage() const {
    return m_image;
}
void OAIExamplePayload::setImage(const OAIImage &image) {
    m_image = image;
    m_image_isSet = true;
}

bool OAIExamplePayload::is_image_Set() const{
    return m_image_isSet;
}

bool OAIExamplePayload::is_image_Valid() const{
    return m_image_isValid;
}

OAIRow OAIExamplePayload::getRow() const {
    return m_row;
}
void OAIExamplePayload::setRow(const OAIRow &row) {
    m_row = row;
    m_row_isSet = true;
}

bool OAIExamplePayload::is_row_Set() const{
    return m_row_isSet;
}

bool OAIExamplePayload::is_row_Valid() const{
    return m_row_isValid;
}

OAITextSnippet OAIExamplePayload::getTextSnippet() const {
    return m_text_snippet;
}
void OAIExamplePayload::setTextSnippet(const OAITextSnippet &text_snippet) {
    m_text_snippet = text_snippet;
    m_text_snippet_isSet = true;
}

bool OAIExamplePayload::is_text_snippet_Set() const{
    return m_text_snippet_isSet;
}

bool OAIExamplePayload::is_text_snippet_Valid() const{
    return m_text_snippet_isValid;
}

bool OAIExamplePayload::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_document.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_image.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_row.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_text_snippet.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIExamplePayload::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
