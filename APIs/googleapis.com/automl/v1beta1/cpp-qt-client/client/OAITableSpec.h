/**
 * Cloud AutoML API
 * Train high-quality custom machine learning models with minimum effort and machine learning expertise.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITableSpec.h
 *
 * A specification of a relational table. The table&#39;s schema is represented via its child column specs. It is pre-populated as part of ImportData by schema inference algorithm, the version of which is a required parameter of ImportData InputConfig. Note: While working with a table, at times the schema may be inconsistent with the data in the table (e.g. string in a FLOAT64 column). The consistency validation is done upon creation of a model. Used by: * Tables
 */

#ifndef OAITableSpec_H
#define OAITableSpec_H

#include <QJsonObject>

#include "OAIInputConfig.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIInputConfig;

class OAITableSpec : public OAIObject {
public:
    OAITableSpec();
    OAITableSpec(QString json);
    ~OAITableSpec() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getColumnCount() const;
    void setColumnCount(const QString &column_count);
    bool is_column_count_Set() const;
    bool is_column_count_Valid() const;

    QString getEtag() const;
    void setEtag(const QString &etag);
    bool is_etag_Set() const;
    bool is_etag_Valid() const;

    QList<OAIInputConfig> getInputConfigs() const;
    void setInputConfigs(const QList<OAIInputConfig> &input_configs);
    bool is_input_configs_Set() const;
    bool is_input_configs_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getRowCount() const;
    void setRowCount(const QString &row_count);
    bool is_row_count_Set() const;
    bool is_row_count_Valid() const;

    QString getTimeColumnSpecId() const;
    void setTimeColumnSpecId(const QString &time_column_spec_id);
    bool is_time_column_spec_id_Set() const;
    bool is_time_column_spec_id_Valid() const;

    QString getValidRowCount() const;
    void setValidRowCount(const QString &valid_row_count);
    bool is_valid_row_count_Set() const;
    bool is_valid_row_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_column_count;
    bool m_column_count_isSet;
    bool m_column_count_isValid;

    QString m_etag;
    bool m_etag_isSet;
    bool m_etag_isValid;

    QList<OAIInputConfig> m_input_configs;
    bool m_input_configs_isSet;
    bool m_input_configs_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_row_count;
    bool m_row_count_isSet;
    bool m_row_count_isValid;

    QString m_time_column_spec_id;
    bool m_time_column_spec_id_isSet;
    bool m_time_column_spec_id_isValid;

    QString m_valid_row_count;
    bool m_valid_row_count_isSet;
    bool m_valid_row_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITableSpec)

#endif // OAITableSpec_H
