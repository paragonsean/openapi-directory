/**
 * Cloud AutoML API
 * Train high-quality custom machine learning models with minimum effort and machine learning expertise.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITablesModelColumnInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITablesModelColumnInfo::OAITablesModelColumnInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITablesModelColumnInfo::OAITablesModelColumnInfo() {
    this->initializeModel();
}

OAITablesModelColumnInfo::~OAITablesModelColumnInfo() {}

void OAITablesModelColumnInfo::initializeModel() {

    m_column_display_name_isSet = false;
    m_column_display_name_isValid = false;

    m_column_spec_name_isSet = false;
    m_column_spec_name_isValid = false;

    m_feature_importance_isSet = false;
    m_feature_importance_isValid = false;
}

void OAITablesModelColumnInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITablesModelColumnInfo::fromJsonObject(QJsonObject json) {

    m_column_display_name_isValid = ::OpenAPI::fromJsonValue(m_column_display_name, json[QString("columnDisplayName")]);
    m_column_display_name_isSet = !json[QString("columnDisplayName")].isNull() && m_column_display_name_isValid;

    m_column_spec_name_isValid = ::OpenAPI::fromJsonValue(m_column_spec_name, json[QString("columnSpecName")]);
    m_column_spec_name_isSet = !json[QString("columnSpecName")].isNull() && m_column_spec_name_isValid;

    m_feature_importance_isValid = ::OpenAPI::fromJsonValue(m_feature_importance, json[QString("featureImportance")]);
    m_feature_importance_isSet = !json[QString("featureImportance")].isNull() && m_feature_importance_isValid;
}

QString OAITablesModelColumnInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITablesModelColumnInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_column_display_name_isSet) {
        obj.insert(QString("columnDisplayName"), ::OpenAPI::toJsonValue(m_column_display_name));
    }
    if (m_column_spec_name_isSet) {
        obj.insert(QString("columnSpecName"), ::OpenAPI::toJsonValue(m_column_spec_name));
    }
    if (m_feature_importance_isSet) {
        obj.insert(QString("featureImportance"), ::OpenAPI::toJsonValue(m_feature_importance));
    }
    return obj;
}

QString OAITablesModelColumnInfo::getColumnDisplayName() const {
    return m_column_display_name;
}
void OAITablesModelColumnInfo::setColumnDisplayName(const QString &column_display_name) {
    m_column_display_name = column_display_name;
    m_column_display_name_isSet = true;
}

bool OAITablesModelColumnInfo::is_column_display_name_Set() const{
    return m_column_display_name_isSet;
}

bool OAITablesModelColumnInfo::is_column_display_name_Valid() const{
    return m_column_display_name_isValid;
}

QString OAITablesModelColumnInfo::getColumnSpecName() const {
    return m_column_spec_name;
}
void OAITablesModelColumnInfo::setColumnSpecName(const QString &column_spec_name) {
    m_column_spec_name = column_spec_name;
    m_column_spec_name_isSet = true;
}

bool OAITablesModelColumnInfo::is_column_spec_name_Set() const{
    return m_column_spec_name_isSet;
}

bool OAITablesModelColumnInfo::is_column_spec_name_Valid() const{
    return m_column_spec_name_isValid;
}

float OAITablesModelColumnInfo::getFeatureImportance() const {
    return m_feature_importance;
}
void OAITablesModelColumnInfo::setFeatureImportance(const float &feature_importance) {
    m_feature_importance = feature_importance;
    m_feature_importance_isSet = true;
}

bool OAITablesModelColumnInfo::is_feature_importance_Set() const{
    return m_feature_importance_isSet;
}

bool OAITablesModelColumnInfo::is_feature_importance_Valid() const{
    return m_feature_importance_isValid;
}

bool OAITablesModelColumnInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_column_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_column_spec_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_feature_importance_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITablesModelColumnInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
