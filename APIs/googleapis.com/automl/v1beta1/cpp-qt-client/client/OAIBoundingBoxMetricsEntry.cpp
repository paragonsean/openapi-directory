/**
 * Cloud AutoML API
 * Train high-quality custom machine learning models with minimum effort and machine learning expertise.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBoundingBoxMetricsEntry.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBoundingBoxMetricsEntry::OAIBoundingBoxMetricsEntry(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBoundingBoxMetricsEntry::OAIBoundingBoxMetricsEntry() {
    this->initializeModel();
}

OAIBoundingBoxMetricsEntry::~OAIBoundingBoxMetricsEntry() {}

void OAIBoundingBoxMetricsEntry::initializeModel() {

    m_confidence_metrics_entries_isSet = false;
    m_confidence_metrics_entries_isValid = false;

    m_iou_threshold_isSet = false;
    m_iou_threshold_isValid = false;

    m_mean_average_precision_isSet = false;
    m_mean_average_precision_isValid = false;
}

void OAIBoundingBoxMetricsEntry::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBoundingBoxMetricsEntry::fromJsonObject(QJsonObject json) {

    m_confidence_metrics_entries_isValid = ::OpenAPI::fromJsonValue(m_confidence_metrics_entries, json[QString("confidenceMetricsEntries")]);
    m_confidence_metrics_entries_isSet = !json[QString("confidenceMetricsEntries")].isNull() && m_confidence_metrics_entries_isValid;

    m_iou_threshold_isValid = ::OpenAPI::fromJsonValue(m_iou_threshold, json[QString("iouThreshold")]);
    m_iou_threshold_isSet = !json[QString("iouThreshold")].isNull() && m_iou_threshold_isValid;

    m_mean_average_precision_isValid = ::OpenAPI::fromJsonValue(m_mean_average_precision, json[QString("meanAveragePrecision")]);
    m_mean_average_precision_isSet = !json[QString("meanAveragePrecision")].isNull() && m_mean_average_precision_isValid;
}

QString OAIBoundingBoxMetricsEntry::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBoundingBoxMetricsEntry::asJsonObject() const {
    QJsonObject obj;
    if (m_confidence_metrics_entries.size() > 0) {
        obj.insert(QString("confidenceMetricsEntries"), ::OpenAPI::toJsonValue(m_confidence_metrics_entries));
    }
    if (m_iou_threshold_isSet) {
        obj.insert(QString("iouThreshold"), ::OpenAPI::toJsonValue(m_iou_threshold));
    }
    if (m_mean_average_precision_isSet) {
        obj.insert(QString("meanAveragePrecision"), ::OpenAPI::toJsonValue(m_mean_average_precision));
    }
    return obj;
}

QList<OAIBoundingBoxMetricsEntryConfidenceMetricsEntry> OAIBoundingBoxMetricsEntry::getConfidenceMetricsEntries() const {
    return m_confidence_metrics_entries;
}
void OAIBoundingBoxMetricsEntry::setConfidenceMetricsEntries(const QList<OAIBoundingBoxMetricsEntryConfidenceMetricsEntry> &confidence_metrics_entries) {
    m_confidence_metrics_entries = confidence_metrics_entries;
    m_confidence_metrics_entries_isSet = true;
}

bool OAIBoundingBoxMetricsEntry::is_confidence_metrics_entries_Set() const{
    return m_confidence_metrics_entries_isSet;
}

bool OAIBoundingBoxMetricsEntry::is_confidence_metrics_entries_Valid() const{
    return m_confidence_metrics_entries_isValid;
}

float OAIBoundingBoxMetricsEntry::getIouThreshold() const {
    return m_iou_threshold;
}
void OAIBoundingBoxMetricsEntry::setIouThreshold(const float &iou_threshold) {
    m_iou_threshold = iou_threshold;
    m_iou_threshold_isSet = true;
}

bool OAIBoundingBoxMetricsEntry::is_iou_threshold_Set() const{
    return m_iou_threshold_isSet;
}

bool OAIBoundingBoxMetricsEntry::is_iou_threshold_Valid() const{
    return m_iou_threshold_isValid;
}

float OAIBoundingBoxMetricsEntry::getMeanAveragePrecision() const {
    return m_mean_average_precision;
}
void OAIBoundingBoxMetricsEntry::setMeanAveragePrecision(const float &mean_average_precision) {
    m_mean_average_precision = mean_average_precision;
    m_mean_average_precision_isSet = true;
}

bool OAIBoundingBoxMetricsEntry::is_mean_average_precision_Set() const{
    return m_mean_average_precision_isSet;
}

bool OAIBoundingBoxMetricsEntry::is_mean_average_precision_Valid() const{
    return m_mean_average_precision_isValid;
}

bool OAIBoundingBoxMetricsEntry::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_confidence_metrics_entries.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_iou_threshold_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mean_average_precision_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBoundingBoxMetricsEntry::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
