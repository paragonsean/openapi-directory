/**
 * Cloud AutoML API
 * Train high-quality custom machine learning models with minimum effort and machine learning expertise.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBatchPredictRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBatchPredictRequest::OAIBatchPredictRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBatchPredictRequest::OAIBatchPredictRequest() {
    this->initializeModel();
}

OAIBatchPredictRequest::~OAIBatchPredictRequest() {}

void OAIBatchPredictRequest::initializeModel() {

    m_input_config_isSet = false;
    m_input_config_isValid = false;

    m_output_config_isSet = false;
    m_output_config_isValid = false;

    m_params_isSet = false;
    m_params_isValid = false;
}

void OAIBatchPredictRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBatchPredictRequest::fromJsonObject(QJsonObject json) {

    m_input_config_isValid = ::OpenAPI::fromJsonValue(m_input_config, json[QString("inputConfig")]);
    m_input_config_isSet = !json[QString("inputConfig")].isNull() && m_input_config_isValid;

    m_output_config_isValid = ::OpenAPI::fromJsonValue(m_output_config, json[QString("outputConfig")]);
    m_output_config_isSet = !json[QString("outputConfig")].isNull() && m_output_config_isValid;

    m_params_isValid = ::OpenAPI::fromJsonValue(m_params, json[QString("params")]);
    m_params_isSet = !json[QString("params")].isNull() && m_params_isValid;
}

QString OAIBatchPredictRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBatchPredictRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_input_config.isSet()) {
        obj.insert(QString("inputConfig"), ::OpenAPI::toJsonValue(m_input_config));
    }
    if (m_output_config.isSet()) {
        obj.insert(QString("outputConfig"), ::OpenAPI::toJsonValue(m_output_config));
    }
    if (m_params.size() > 0) {
        obj.insert(QString("params"), ::OpenAPI::toJsonValue(m_params));
    }
    return obj;
}

OAIBatchPredictInputConfig OAIBatchPredictRequest::getInputConfig() const {
    return m_input_config;
}
void OAIBatchPredictRequest::setInputConfig(const OAIBatchPredictInputConfig &input_config) {
    m_input_config = input_config;
    m_input_config_isSet = true;
}

bool OAIBatchPredictRequest::is_input_config_Set() const{
    return m_input_config_isSet;
}

bool OAIBatchPredictRequest::is_input_config_Valid() const{
    return m_input_config_isValid;
}

OAIBatchPredictOutputConfig OAIBatchPredictRequest::getOutputConfig() const {
    return m_output_config;
}
void OAIBatchPredictRequest::setOutputConfig(const OAIBatchPredictOutputConfig &output_config) {
    m_output_config = output_config;
    m_output_config_isSet = true;
}

bool OAIBatchPredictRequest::is_output_config_Set() const{
    return m_output_config_isSet;
}

bool OAIBatchPredictRequest::is_output_config_Valid() const{
    return m_output_config_isValid;
}

QMap<QString, QString> OAIBatchPredictRequest::getParams() const {
    return m_params;
}
void OAIBatchPredictRequest::setParams(const QMap<QString, QString> &params) {
    m_params = params;
    m_params_isSet = true;
}

bool OAIBatchPredictRequest::is_params_Set() const{
    return m_params_isSet;
}

bool OAIBatchPredictRequest::is_params_Valid() const{
    return m_params_isValid;
}

bool OAIBatchPredictRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_input_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_output_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_params.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBatchPredictRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
