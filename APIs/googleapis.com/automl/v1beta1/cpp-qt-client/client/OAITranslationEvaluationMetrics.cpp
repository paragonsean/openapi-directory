/**
 * Cloud AutoML API
 * Train high-quality custom machine learning models with minimum effort and machine learning expertise.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITranslationEvaluationMetrics.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITranslationEvaluationMetrics::OAITranslationEvaluationMetrics(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITranslationEvaluationMetrics::OAITranslationEvaluationMetrics() {
    this->initializeModel();
}

OAITranslationEvaluationMetrics::~OAITranslationEvaluationMetrics() {}

void OAITranslationEvaluationMetrics::initializeModel() {

    m_base_bleu_score_isSet = false;
    m_base_bleu_score_isValid = false;

    m_bleu_score_isSet = false;
    m_bleu_score_isValid = false;
}

void OAITranslationEvaluationMetrics::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITranslationEvaluationMetrics::fromJsonObject(QJsonObject json) {

    m_base_bleu_score_isValid = ::OpenAPI::fromJsonValue(m_base_bleu_score, json[QString("baseBleuScore")]);
    m_base_bleu_score_isSet = !json[QString("baseBleuScore")].isNull() && m_base_bleu_score_isValid;

    m_bleu_score_isValid = ::OpenAPI::fromJsonValue(m_bleu_score, json[QString("bleuScore")]);
    m_bleu_score_isSet = !json[QString("bleuScore")].isNull() && m_bleu_score_isValid;
}

QString OAITranslationEvaluationMetrics::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITranslationEvaluationMetrics::asJsonObject() const {
    QJsonObject obj;
    if (m_base_bleu_score_isSet) {
        obj.insert(QString("baseBleuScore"), ::OpenAPI::toJsonValue(m_base_bleu_score));
    }
    if (m_bleu_score_isSet) {
        obj.insert(QString("bleuScore"), ::OpenAPI::toJsonValue(m_bleu_score));
    }
    return obj;
}

double OAITranslationEvaluationMetrics::getBaseBleuScore() const {
    return m_base_bleu_score;
}
void OAITranslationEvaluationMetrics::setBaseBleuScore(const double &base_bleu_score) {
    m_base_bleu_score = base_bleu_score;
    m_base_bleu_score_isSet = true;
}

bool OAITranslationEvaluationMetrics::is_base_bleu_score_Set() const{
    return m_base_bleu_score_isSet;
}

bool OAITranslationEvaluationMetrics::is_base_bleu_score_Valid() const{
    return m_base_bleu_score_isValid;
}

double OAITranslationEvaluationMetrics::getBleuScore() const {
    return m_bleu_score;
}
void OAITranslationEvaluationMetrics::setBleuScore(const double &bleu_score) {
    m_bleu_score = bleu_score;
    m_bleu_score_isSet = true;
}

bool OAITranslationEvaluationMetrics::is_bleu_score_Set() const{
    return m_bleu_score_isSet;
}

bool OAITranslationEvaluationMetrics::is_bleu_score_Valid() const{
    return m_bleu_score_isValid;
}

bool OAITranslationEvaluationMetrics::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_base_bleu_score_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bleu_score_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITranslationEvaluationMetrics::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
