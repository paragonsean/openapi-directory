/**
 * Cloud AutoML API
 * Train high-quality custom machine learning models with minimum effort and machine learning expertise.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIModelEvaluation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIModelEvaluation::OAIModelEvaluation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIModelEvaluation::OAIModelEvaluation() {
    this->initializeModel();
}

OAIModelEvaluation::~OAIModelEvaluation() {}

void OAIModelEvaluation::initializeModel() {

    m_annotation_spec_id_isSet = false;
    m_annotation_spec_id_isValid = false;

    m_classification_evaluation_metrics_isSet = false;
    m_classification_evaluation_metrics_isValid = false;

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_evaluated_example_count_isSet = false;
    m_evaluated_example_count_isValid = false;

    m_image_object_detection_evaluation_metrics_isSet = false;
    m_image_object_detection_evaluation_metrics_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_regression_evaluation_metrics_isSet = false;
    m_regression_evaluation_metrics_isValid = false;

    m_text_extraction_evaluation_metrics_isSet = false;
    m_text_extraction_evaluation_metrics_isValid = false;

    m_text_sentiment_evaluation_metrics_isSet = false;
    m_text_sentiment_evaluation_metrics_isValid = false;

    m_translation_evaluation_metrics_isSet = false;
    m_translation_evaluation_metrics_isValid = false;

    m_video_object_tracking_evaluation_metrics_isSet = false;
    m_video_object_tracking_evaluation_metrics_isValid = false;
}

void OAIModelEvaluation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIModelEvaluation::fromJsonObject(QJsonObject json) {

    m_annotation_spec_id_isValid = ::OpenAPI::fromJsonValue(m_annotation_spec_id, json[QString("annotationSpecId")]);
    m_annotation_spec_id_isSet = !json[QString("annotationSpecId")].isNull() && m_annotation_spec_id_isValid;

    m_classification_evaluation_metrics_isValid = ::OpenAPI::fromJsonValue(m_classification_evaluation_metrics, json[QString("classificationEvaluationMetrics")]);
    m_classification_evaluation_metrics_isSet = !json[QString("classificationEvaluationMetrics")].isNull() && m_classification_evaluation_metrics_isValid;

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_evaluated_example_count_isValid = ::OpenAPI::fromJsonValue(m_evaluated_example_count, json[QString("evaluatedExampleCount")]);
    m_evaluated_example_count_isSet = !json[QString("evaluatedExampleCount")].isNull() && m_evaluated_example_count_isValid;

    m_image_object_detection_evaluation_metrics_isValid = ::OpenAPI::fromJsonValue(m_image_object_detection_evaluation_metrics, json[QString("imageObjectDetectionEvaluationMetrics")]);
    m_image_object_detection_evaluation_metrics_isSet = !json[QString("imageObjectDetectionEvaluationMetrics")].isNull() && m_image_object_detection_evaluation_metrics_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_regression_evaluation_metrics_isValid = ::OpenAPI::fromJsonValue(m_regression_evaluation_metrics, json[QString("regressionEvaluationMetrics")]);
    m_regression_evaluation_metrics_isSet = !json[QString("regressionEvaluationMetrics")].isNull() && m_regression_evaluation_metrics_isValid;

    m_text_extraction_evaluation_metrics_isValid = ::OpenAPI::fromJsonValue(m_text_extraction_evaluation_metrics, json[QString("textExtractionEvaluationMetrics")]);
    m_text_extraction_evaluation_metrics_isSet = !json[QString("textExtractionEvaluationMetrics")].isNull() && m_text_extraction_evaluation_metrics_isValid;

    m_text_sentiment_evaluation_metrics_isValid = ::OpenAPI::fromJsonValue(m_text_sentiment_evaluation_metrics, json[QString("textSentimentEvaluationMetrics")]);
    m_text_sentiment_evaluation_metrics_isSet = !json[QString("textSentimentEvaluationMetrics")].isNull() && m_text_sentiment_evaluation_metrics_isValid;

    m_translation_evaluation_metrics_isValid = ::OpenAPI::fromJsonValue(m_translation_evaluation_metrics, json[QString("translationEvaluationMetrics")]);
    m_translation_evaluation_metrics_isSet = !json[QString("translationEvaluationMetrics")].isNull() && m_translation_evaluation_metrics_isValid;

    m_video_object_tracking_evaluation_metrics_isValid = ::OpenAPI::fromJsonValue(m_video_object_tracking_evaluation_metrics, json[QString("videoObjectTrackingEvaluationMetrics")]);
    m_video_object_tracking_evaluation_metrics_isSet = !json[QString("videoObjectTrackingEvaluationMetrics")].isNull() && m_video_object_tracking_evaluation_metrics_isValid;
}

QString OAIModelEvaluation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIModelEvaluation::asJsonObject() const {
    QJsonObject obj;
    if (m_annotation_spec_id_isSet) {
        obj.insert(QString("annotationSpecId"), ::OpenAPI::toJsonValue(m_annotation_spec_id));
    }
    if (m_classification_evaluation_metrics.isSet()) {
        obj.insert(QString("classificationEvaluationMetrics"), ::OpenAPI::toJsonValue(m_classification_evaluation_metrics));
    }
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_evaluated_example_count_isSet) {
        obj.insert(QString("evaluatedExampleCount"), ::OpenAPI::toJsonValue(m_evaluated_example_count));
    }
    if (m_image_object_detection_evaluation_metrics.isSet()) {
        obj.insert(QString("imageObjectDetectionEvaluationMetrics"), ::OpenAPI::toJsonValue(m_image_object_detection_evaluation_metrics));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_regression_evaluation_metrics.isSet()) {
        obj.insert(QString("regressionEvaluationMetrics"), ::OpenAPI::toJsonValue(m_regression_evaluation_metrics));
    }
    if (m_text_extraction_evaluation_metrics.isSet()) {
        obj.insert(QString("textExtractionEvaluationMetrics"), ::OpenAPI::toJsonValue(m_text_extraction_evaluation_metrics));
    }
    if (m_text_sentiment_evaluation_metrics.isSet()) {
        obj.insert(QString("textSentimentEvaluationMetrics"), ::OpenAPI::toJsonValue(m_text_sentiment_evaluation_metrics));
    }
    if (m_translation_evaluation_metrics.isSet()) {
        obj.insert(QString("translationEvaluationMetrics"), ::OpenAPI::toJsonValue(m_translation_evaluation_metrics));
    }
    if (m_video_object_tracking_evaluation_metrics.isSet()) {
        obj.insert(QString("videoObjectTrackingEvaluationMetrics"), ::OpenAPI::toJsonValue(m_video_object_tracking_evaluation_metrics));
    }
    return obj;
}

QString OAIModelEvaluation::getAnnotationSpecId() const {
    return m_annotation_spec_id;
}
void OAIModelEvaluation::setAnnotationSpecId(const QString &annotation_spec_id) {
    m_annotation_spec_id = annotation_spec_id;
    m_annotation_spec_id_isSet = true;
}

bool OAIModelEvaluation::is_annotation_spec_id_Set() const{
    return m_annotation_spec_id_isSet;
}

bool OAIModelEvaluation::is_annotation_spec_id_Valid() const{
    return m_annotation_spec_id_isValid;
}

OAIClassificationEvaluationMetrics OAIModelEvaluation::getClassificationEvaluationMetrics() const {
    return m_classification_evaluation_metrics;
}
void OAIModelEvaluation::setClassificationEvaluationMetrics(const OAIClassificationEvaluationMetrics &classification_evaluation_metrics) {
    m_classification_evaluation_metrics = classification_evaluation_metrics;
    m_classification_evaluation_metrics_isSet = true;
}

bool OAIModelEvaluation::is_classification_evaluation_metrics_Set() const{
    return m_classification_evaluation_metrics_isSet;
}

bool OAIModelEvaluation::is_classification_evaluation_metrics_Valid() const{
    return m_classification_evaluation_metrics_isValid;
}

QString OAIModelEvaluation::getCreateTime() const {
    return m_create_time;
}
void OAIModelEvaluation::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIModelEvaluation::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIModelEvaluation::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QString OAIModelEvaluation::getDisplayName() const {
    return m_display_name;
}
void OAIModelEvaluation::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIModelEvaluation::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIModelEvaluation::is_display_name_Valid() const{
    return m_display_name_isValid;
}

qint32 OAIModelEvaluation::getEvaluatedExampleCount() const {
    return m_evaluated_example_count;
}
void OAIModelEvaluation::setEvaluatedExampleCount(const qint32 &evaluated_example_count) {
    m_evaluated_example_count = evaluated_example_count;
    m_evaluated_example_count_isSet = true;
}

bool OAIModelEvaluation::is_evaluated_example_count_Set() const{
    return m_evaluated_example_count_isSet;
}

bool OAIModelEvaluation::is_evaluated_example_count_Valid() const{
    return m_evaluated_example_count_isValid;
}

OAIImageObjectDetectionEvaluationMetrics OAIModelEvaluation::getImageObjectDetectionEvaluationMetrics() const {
    return m_image_object_detection_evaluation_metrics;
}
void OAIModelEvaluation::setImageObjectDetectionEvaluationMetrics(const OAIImageObjectDetectionEvaluationMetrics &image_object_detection_evaluation_metrics) {
    m_image_object_detection_evaluation_metrics = image_object_detection_evaluation_metrics;
    m_image_object_detection_evaluation_metrics_isSet = true;
}

bool OAIModelEvaluation::is_image_object_detection_evaluation_metrics_Set() const{
    return m_image_object_detection_evaluation_metrics_isSet;
}

bool OAIModelEvaluation::is_image_object_detection_evaluation_metrics_Valid() const{
    return m_image_object_detection_evaluation_metrics_isValid;
}

QString OAIModelEvaluation::getName() const {
    return m_name;
}
void OAIModelEvaluation::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIModelEvaluation::is_name_Set() const{
    return m_name_isSet;
}

bool OAIModelEvaluation::is_name_Valid() const{
    return m_name_isValid;
}

OAIRegressionEvaluationMetrics OAIModelEvaluation::getRegressionEvaluationMetrics() const {
    return m_regression_evaluation_metrics;
}
void OAIModelEvaluation::setRegressionEvaluationMetrics(const OAIRegressionEvaluationMetrics &regression_evaluation_metrics) {
    m_regression_evaluation_metrics = regression_evaluation_metrics;
    m_regression_evaluation_metrics_isSet = true;
}

bool OAIModelEvaluation::is_regression_evaluation_metrics_Set() const{
    return m_regression_evaluation_metrics_isSet;
}

bool OAIModelEvaluation::is_regression_evaluation_metrics_Valid() const{
    return m_regression_evaluation_metrics_isValid;
}

OAITextExtractionEvaluationMetrics OAIModelEvaluation::getTextExtractionEvaluationMetrics() const {
    return m_text_extraction_evaluation_metrics;
}
void OAIModelEvaluation::setTextExtractionEvaluationMetrics(const OAITextExtractionEvaluationMetrics &text_extraction_evaluation_metrics) {
    m_text_extraction_evaluation_metrics = text_extraction_evaluation_metrics;
    m_text_extraction_evaluation_metrics_isSet = true;
}

bool OAIModelEvaluation::is_text_extraction_evaluation_metrics_Set() const{
    return m_text_extraction_evaluation_metrics_isSet;
}

bool OAIModelEvaluation::is_text_extraction_evaluation_metrics_Valid() const{
    return m_text_extraction_evaluation_metrics_isValid;
}

OAITextSentimentEvaluationMetrics OAIModelEvaluation::getTextSentimentEvaluationMetrics() const {
    return m_text_sentiment_evaluation_metrics;
}
void OAIModelEvaluation::setTextSentimentEvaluationMetrics(const OAITextSentimentEvaluationMetrics &text_sentiment_evaluation_metrics) {
    m_text_sentiment_evaluation_metrics = text_sentiment_evaluation_metrics;
    m_text_sentiment_evaluation_metrics_isSet = true;
}

bool OAIModelEvaluation::is_text_sentiment_evaluation_metrics_Set() const{
    return m_text_sentiment_evaluation_metrics_isSet;
}

bool OAIModelEvaluation::is_text_sentiment_evaluation_metrics_Valid() const{
    return m_text_sentiment_evaluation_metrics_isValid;
}

OAITranslationEvaluationMetrics OAIModelEvaluation::getTranslationEvaluationMetrics() const {
    return m_translation_evaluation_metrics;
}
void OAIModelEvaluation::setTranslationEvaluationMetrics(const OAITranslationEvaluationMetrics &translation_evaluation_metrics) {
    m_translation_evaluation_metrics = translation_evaluation_metrics;
    m_translation_evaluation_metrics_isSet = true;
}

bool OAIModelEvaluation::is_translation_evaluation_metrics_Set() const{
    return m_translation_evaluation_metrics_isSet;
}

bool OAIModelEvaluation::is_translation_evaluation_metrics_Valid() const{
    return m_translation_evaluation_metrics_isValid;
}

OAIVideoObjectTrackingEvaluationMetrics OAIModelEvaluation::getVideoObjectTrackingEvaluationMetrics() const {
    return m_video_object_tracking_evaluation_metrics;
}
void OAIModelEvaluation::setVideoObjectTrackingEvaluationMetrics(const OAIVideoObjectTrackingEvaluationMetrics &video_object_tracking_evaluation_metrics) {
    m_video_object_tracking_evaluation_metrics = video_object_tracking_evaluation_metrics;
    m_video_object_tracking_evaluation_metrics_isSet = true;
}

bool OAIModelEvaluation::is_video_object_tracking_evaluation_metrics_Set() const{
    return m_video_object_tracking_evaluation_metrics_isSet;
}

bool OAIModelEvaluation::is_video_object_tracking_evaluation_metrics_Valid() const{
    return m_video_object_tracking_evaluation_metrics_isValid;
}

bool OAIModelEvaluation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_annotation_spec_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_classification_evaluation_metrics.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_evaluated_example_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_image_object_detection_evaluation_metrics.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_regression_evaluation_metrics.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_text_extraction_evaluation_metrics.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_text_sentiment_evaluation_metrics.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_translation_evaluation_metrics.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_video_object_tracking_evaluation_metrics.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIModelEvaluation::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
