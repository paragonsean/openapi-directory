/**
 * Cloud AutoML API
 * Train high-quality custom machine learning models with minimum effort and machine learning expertise.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITableSpec.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITableSpec::OAITableSpec(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITableSpec::OAITableSpec() {
    this->initializeModel();
}

OAITableSpec::~OAITableSpec() {}

void OAITableSpec::initializeModel() {

    m_column_count_isSet = false;
    m_column_count_isValid = false;

    m_etag_isSet = false;
    m_etag_isValid = false;

    m_input_configs_isSet = false;
    m_input_configs_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_row_count_isSet = false;
    m_row_count_isValid = false;

    m_time_column_spec_id_isSet = false;
    m_time_column_spec_id_isValid = false;

    m_valid_row_count_isSet = false;
    m_valid_row_count_isValid = false;
}

void OAITableSpec::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITableSpec::fromJsonObject(QJsonObject json) {

    m_column_count_isValid = ::OpenAPI::fromJsonValue(m_column_count, json[QString("columnCount")]);
    m_column_count_isSet = !json[QString("columnCount")].isNull() && m_column_count_isValid;

    m_etag_isValid = ::OpenAPI::fromJsonValue(m_etag, json[QString("etag")]);
    m_etag_isSet = !json[QString("etag")].isNull() && m_etag_isValid;

    m_input_configs_isValid = ::OpenAPI::fromJsonValue(m_input_configs, json[QString("inputConfigs")]);
    m_input_configs_isSet = !json[QString("inputConfigs")].isNull() && m_input_configs_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_row_count_isValid = ::OpenAPI::fromJsonValue(m_row_count, json[QString("rowCount")]);
    m_row_count_isSet = !json[QString("rowCount")].isNull() && m_row_count_isValid;

    m_time_column_spec_id_isValid = ::OpenAPI::fromJsonValue(m_time_column_spec_id, json[QString("timeColumnSpecId")]);
    m_time_column_spec_id_isSet = !json[QString("timeColumnSpecId")].isNull() && m_time_column_spec_id_isValid;

    m_valid_row_count_isValid = ::OpenAPI::fromJsonValue(m_valid_row_count, json[QString("validRowCount")]);
    m_valid_row_count_isSet = !json[QString("validRowCount")].isNull() && m_valid_row_count_isValid;
}

QString OAITableSpec::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITableSpec::asJsonObject() const {
    QJsonObject obj;
    if (m_column_count_isSet) {
        obj.insert(QString("columnCount"), ::OpenAPI::toJsonValue(m_column_count));
    }
    if (m_etag_isSet) {
        obj.insert(QString("etag"), ::OpenAPI::toJsonValue(m_etag));
    }
    if (m_input_configs.size() > 0) {
        obj.insert(QString("inputConfigs"), ::OpenAPI::toJsonValue(m_input_configs));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_row_count_isSet) {
        obj.insert(QString("rowCount"), ::OpenAPI::toJsonValue(m_row_count));
    }
    if (m_time_column_spec_id_isSet) {
        obj.insert(QString("timeColumnSpecId"), ::OpenAPI::toJsonValue(m_time_column_spec_id));
    }
    if (m_valid_row_count_isSet) {
        obj.insert(QString("validRowCount"), ::OpenAPI::toJsonValue(m_valid_row_count));
    }
    return obj;
}

QString OAITableSpec::getColumnCount() const {
    return m_column_count;
}
void OAITableSpec::setColumnCount(const QString &column_count) {
    m_column_count = column_count;
    m_column_count_isSet = true;
}

bool OAITableSpec::is_column_count_Set() const{
    return m_column_count_isSet;
}

bool OAITableSpec::is_column_count_Valid() const{
    return m_column_count_isValid;
}

QString OAITableSpec::getEtag() const {
    return m_etag;
}
void OAITableSpec::setEtag(const QString &etag) {
    m_etag = etag;
    m_etag_isSet = true;
}

bool OAITableSpec::is_etag_Set() const{
    return m_etag_isSet;
}

bool OAITableSpec::is_etag_Valid() const{
    return m_etag_isValid;
}

QList<OAIInputConfig> OAITableSpec::getInputConfigs() const {
    return m_input_configs;
}
void OAITableSpec::setInputConfigs(const QList<OAIInputConfig> &input_configs) {
    m_input_configs = input_configs;
    m_input_configs_isSet = true;
}

bool OAITableSpec::is_input_configs_Set() const{
    return m_input_configs_isSet;
}

bool OAITableSpec::is_input_configs_Valid() const{
    return m_input_configs_isValid;
}

QString OAITableSpec::getName() const {
    return m_name;
}
void OAITableSpec::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAITableSpec::is_name_Set() const{
    return m_name_isSet;
}

bool OAITableSpec::is_name_Valid() const{
    return m_name_isValid;
}

QString OAITableSpec::getRowCount() const {
    return m_row_count;
}
void OAITableSpec::setRowCount(const QString &row_count) {
    m_row_count = row_count;
    m_row_count_isSet = true;
}

bool OAITableSpec::is_row_count_Set() const{
    return m_row_count_isSet;
}

bool OAITableSpec::is_row_count_Valid() const{
    return m_row_count_isValid;
}

QString OAITableSpec::getTimeColumnSpecId() const {
    return m_time_column_spec_id;
}
void OAITableSpec::setTimeColumnSpecId(const QString &time_column_spec_id) {
    m_time_column_spec_id = time_column_spec_id;
    m_time_column_spec_id_isSet = true;
}

bool OAITableSpec::is_time_column_spec_id_Set() const{
    return m_time_column_spec_id_isSet;
}

bool OAITableSpec::is_time_column_spec_id_Valid() const{
    return m_time_column_spec_id_isValid;
}

QString OAITableSpec::getValidRowCount() const {
    return m_valid_row_count;
}
void OAITableSpec::setValidRowCount(const QString &valid_row_count) {
    m_valid_row_count = valid_row_count;
    m_valid_row_count_isSet = true;
}

bool OAITableSpec::is_valid_row_count_Set() const{
    return m_valid_row_count_isSet;
}

bool OAITableSpec::is_valid_row_count_Valid() const{
    return m_valid_row_count_isValid;
}

bool OAITableSpec::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_column_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_etag_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_input_configs.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_row_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_time_column_spec_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_valid_row_count_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITableSpec::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
