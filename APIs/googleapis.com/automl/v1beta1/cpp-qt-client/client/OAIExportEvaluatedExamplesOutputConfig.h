/**
 * Cloud AutoML API
 * Train high-quality custom machine learning models with minimum effort and machine learning expertise.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIExportEvaluatedExamplesOutputConfig.h
 *
 * Output configuration for ExportEvaluatedExamples Action. Note that this call is available only for 30 days since the moment the model was evaluated. The output depends on the domain, as follows (note that only examples from the TEST set are exported): * For Tables: bigquery_destination pointing to a BigQuery project must be set. In the given project a new dataset will be created with name &#x60;export_evaluated_examples__&#x60; where will be made BigQuery-dataset-name compatible (e.g. most special characters will become underscores), and timestamp will be in YYYY_MM_DDThh_mm_ss_sssZ \&quot;based on ISO-8601\&quot; format. In the dataset an &#x60;evaluated_examples&#x60; table will be created. It will have all the same columns as the primary_table of the dataset from which the model was created, as they were at the moment of model&#39;s evaluation (this includes the target column with its ground truth), followed by a column called \&quot;predicted_\&quot;. That last column will contain the model&#39;s prediction result for each respective row, given as ARRAY of AnnotationPayloads, represented as STRUCT-s, containing TablesAnnotation.
 */

#ifndef OAIExportEvaluatedExamplesOutputConfig_H
#define OAIExportEvaluatedExamplesOutputConfig_H

#include <QJsonObject>

#include "OAIBigQueryDestination.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBigQueryDestination;

class OAIExportEvaluatedExamplesOutputConfig : public OAIObject {
public:
    OAIExportEvaluatedExamplesOutputConfig();
    OAIExportEvaluatedExamplesOutputConfig(QString json);
    ~OAIExportEvaluatedExamplesOutputConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIBigQueryDestination getBigqueryDestination() const;
    void setBigqueryDestination(const OAIBigQueryDestination &bigquery_destination);
    bool is_bigquery_destination_Set() const;
    bool is_bigquery_destination_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIBigQueryDestination m_bigquery_destination;
    bool m_bigquery_destination_isSet;
    bool m_bigquery_destination_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIExportEvaluatedExamplesOutputConfig)

#endif // OAIExportEvaluatedExamplesOutputConfig_H
