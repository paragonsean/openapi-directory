/**
 * Cloud AutoML API
 * Train high-quality custom machine learning models with minimum effort and machine learning expertise.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUnigramStats.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUnigramStats::OAIUnigramStats(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUnigramStats::OAIUnigramStats() {
    this->initializeModel();
}

OAIUnigramStats::~OAIUnigramStats() {}

void OAIUnigramStats::initializeModel() {

    m_count_isSet = false;
    m_count_isValid = false;

    m_value_isSet = false;
    m_value_isValid = false;
}

void OAIUnigramStats::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUnigramStats::fromJsonObject(QJsonObject json) {

    m_count_isValid = ::OpenAPI::fromJsonValue(m_count, json[QString("count")]);
    m_count_isSet = !json[QString("count")].isNull() && m_count_isValid;

    m_value_isValid = ::OpenAPI::fromJsonValue(m_value, json[QString("value")]);
    m_value_isSet = !json[QString("value")].isNull() && m_value_isValid;
}

QString OAIUnigramStats::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUnigramStats::asJsonObject() const {
    QJsonObject obj;
    if (m_count_isSet) {
        obj.insert(QString("count"), ::OpenAPI::toJsonValue(m_count));
    }
    if (m_value_isSet) {
        obj.insert(QString("value"), ::OpenAPI::toJsonValue(m_value));
    }
    return obj;
}

QString OAIUnigramStats::getCount() const {
    return m_count;
}
void OAIUnigramStats::setCount(const QString &count) {
    m_count = count;
    m_count_isSet = true;
}

bool OAIUnigramStats::is_count_Set() const{
    return m_count_isSet;
}

bool OAIUnigramStats::is_count_Valid() const{
    return m_count_isValid;
}

QString OAIUnigramStats::getValue() const {
    return m_value;
}
void OAIUnigramStats::setValue(const QString &value) {
    m_value = value;
    m_value_isSet = true;
}

bool OAIUnigramStats::is_value_Set() const{
    return m_value_isSet;
}

bool OAIUnigramStats::is_value_Valid() const{
    return m_value_isValid;
}

bool OAIUnigramStats::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUnigramStats::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
