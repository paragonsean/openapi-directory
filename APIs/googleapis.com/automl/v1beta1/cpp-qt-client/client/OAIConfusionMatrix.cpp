/**
 * Cloud AutoML API
 * Train high-quality custom machine learning models with minimum effort and machine learning expertise.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIConfusionMatrix.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIConfusionMatrix::OAIConfusionMatrix(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIConfusionMatrix::OAIConfusionMatrix() {
    this->initializeModel();
}

OAIConfusionMatrix::~OAIConfusionMatrix() {}

void OAIConfusionMatrix::initializeModel() {

    m_annotation_spec_id_isSet = false;
    m_annotation_spec_id_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_row_isSet = false;
    m_row_isValid = false;
}

void OAIConfusionMatrix::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIConfusionMatrix::fromJsonObject(QJsonObject json) {

    m_annotation_spec_id_isValid = ::OpenAPI::fromJsonValue(m_annotation_spec_id, json[QString("annotationSpecId")]);
    m_annotation_spec_id_isSet = !json[QString("annotationSpecId")].isNull() && m_annotation_spec_id_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_row_isValid = ::OpenAPI::fromJsonValue(m_row, json[QString("row")]);
    m_row_isSet = !json[QString("row")].isNull() && m_row_isValid;
}

QString OAIConfusionMatrix::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIConfusionMatrix::asJsonObject() const {
    QJsonObject obj;
    if (m_annotation_spec_id.size() > 0) {
        obj.insert(QString("annotationSpecId"), ::OpenAPI::toJsonValue(m_annotation_spec_id));
    }
    if (m_display_name.size() > 0) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_row.size() > 0) {
        obj.insert(QString("row"), ::OpenAPI::toJsonValue(m_row));
    }
    return obj;
}

QList<QString> OAIConfusionMatrix::getAnnotationSpecId() const {
    return m_annotation_spec_id;
}
void OAIConfusionMatrix::setAnnotationSpecId(const QList<QString> &annotation_spec_id) {
    m_annotation_spec_id = annotation_spec_id;
    m_annotation_spec_id_isSet = true;
}

bool OAIConfusionMatrix::is_annotation_spec_id_Set() const{
    return m_annotation_spec_id_isSet;
}

bool OAIConfusionMatrix::is_annotation_spec_id_Valid() const{
    return m_annotation_spec_id_isValid;
}

QList<QString> OAIConfusionMatrix::getDisplayName() const {
    return m_display_name;
}
void OAIConfusionMatrix::setDisplayName(const QList<QString> &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIConfusionMatrix::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIConfusionMatrix::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QList<OAIClassificationEvaluationMetricsConfusionMatrixRow> OAIConfusionMatrix::getRow() const {
    return m_row;
}
void OAIConfusionMatrix::setRow(const QList<OAIClassificationEvaluationMetricsConfusionMatrixRow> &row) {
    m_row = row;
    m_row_isSet = true;
}

bool OAIConfusionMatrix::is_row_Set() const{
    return m_row_isSet;
}

bool OAIConfusionMatrix::is_row_Valid() const{
    return m_row_isValid;
}

bool OAIConfusionMatrix::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_annotation_spec_id.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_row.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIConfusionMatrix::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
