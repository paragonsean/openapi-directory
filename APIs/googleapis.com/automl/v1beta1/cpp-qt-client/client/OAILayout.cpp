/**
 * Cloud AutoML API
 * Train high-quality custom machine learning models with minimum effort and machine learning expertise.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILayout.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILayout::OAILayout(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILayout::OAILayout() {
    this->initializeModel();
}

OAILayout::~OAILayout() {}

void OAILayout::initializeModel() {

    m_bounding_poly_isSet = false;
    m_bounding_poly_isValid = false;

    m_page_number_isSet = false;
    m_page_number_isValid = false;

    m_text_segment_isSet = false;
    m_text_segment_isValid = false;

    m_text_segment_type_isSet = false;
    m_text_segment_type_isValid = false;
}

void OAILayout::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILayout::fromJsonObject(QJsonObject json) {

    m_bounding_poly_isValid = ::OpenAPI::fromJsonValue(m_bounding_poly, json[QString("boundingPoly")]);
    m_bounding_poly_isSet = !json[QString("boundingPoly")].isNull() && m_bounding_poly_isValid;

    m_page_number_isValid = ::OpenAPI::fromJsonValue(m_page_number, json[QString("pageNumber")]);
    m_page_number_isSet = !json[QString("pageNumber")].isNull() && m_page_number_isValid;

    m_text_segment_isValid = ::OpenAPI::fromJsonValue(m_text_segment, json[QString("textSegment")]);
    m_text_segment_isSet = !json[QString("textSegment")].isNull() && m_text_segment_isValid;

    m_text_segment_type_isValid = ::OpenAPI::fromJsonValue(m_text_segment_type, json[QString("textSegmentType")]);
    m_text_segment_type_isSet = !json[QString("textSegmentType")].isNull() && m_text_segment_type_isValid;
}

QString OAILayout::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILayout::asJsonObject() const {
    QJsonObject obj;
    if (m_bounding_poly.isSet()) {
        obj.insert(QString("boundingPoly"), ::OpenAPI::toJsonValue(m_bounding_poly));
    }
    if (m_page_number_isSet) {
        obj.insert(QString("pageNumber"), ::OpenAPI::toJsonValue(m_page_number));
    }
    if (m_text_segment.isSet()) {
        obj.insert(QString("textSegment"), ::OpenAPI::toJsonValue(m_text_segment));
    }
    if (m_text_segment_type_isSet) {
        obj.insert(QString("textSegmentType"), ::OpenAPI::toJsonValue(m_text_segment_type));
    }
    return obj;
}

OAIBoundingPoly OAILayout::getBoundingPoly() const {
    return m_bounding_poly;
}
void OAILayout::setBoundingPoly(const OAIBoundingPoly &bounding_poly) {
    m_bounding_poly = bounding_poly;
    m_bounding_poly_isSet = true;
}

bool OAILayout::is_bounding_poly_Set() const{
    return m_bounding_poly_isSet;
}

bool OAILayout::is_bounding_poly_Valid() const{
    return m_bounding_poly_isValid;
}

qint32 OAILayout::getPageNumber() const {
    return m_page_number;
}
void OAILayout::setPageNumber(const qint32 &page_number) {
    m_page_number = page_number;
    m_page_number_isSet = true;
}

bool OAILayout::is_page_number_Set() const{
    return m_page_number_isSet;
}

bool OAILayout::is_page_number_Valid() const{
    return m_page_number_isValid;
}

OAITextSegment OAILayout::getTextSegment() const {
    return m_text_segment;
}
void OAILayout::setTextSegment(const OAITextSegment &text_segment) {
    m_text_segment = text_segment;
    m_text_segment_isSet = true;
}

bool OAILayout::is_text_segment_Set() const{
    return m_text_segment_isSet;
}

bool OAILayout::is_text_segment_Valid() const{
    return m_text_segment_isValid;
}

QString OAILayout::getTextSegmentType() const {
    return m_text_segment_type;
}
void OAILayout::setTextSegmentType(const QString &text_segment_type) {
    m_text_segment_type = text_segment_type;
    m_text_segment_type_isSet = true;
}

bool OAILayout::is_text_segment_type_Set() const{
    return m_text_segment_type_isSet;
}

bool OAILayout::is_text_segment_type_Valid() const{
    return m_text_segment_type_isValid;
}

bool OAILayout::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bounding_poly.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_page_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_text_segment.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_text_segment_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILayout::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
