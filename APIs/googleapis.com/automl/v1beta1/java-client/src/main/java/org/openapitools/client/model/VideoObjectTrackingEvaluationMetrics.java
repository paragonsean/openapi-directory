/*
 * Cloud AutoML API
 * Train high-quality custom machine learning models with minimum effort and machine learning expertise.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.BoundingBoxMetricsEntry;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Model evaluation metrics for video object tracking problems. Evaluates prediction quality of both labeled bounding boxes and labeled tracks (i.e. series of bounding boxes sharing same label and instance ID).
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:48:50.092187-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class VideoObjectTrackingEvaluationMetrics {
  public static final String SERIALIZED_NAME_BOUNDING_BOX_MEAN_AVERAGE_PRECISION = "boundingBoxMeanAveragePrecision";
  @SerializedName(SERIALIZED_NAME_BOUNDING_BOX_MEAN_AVERAGE_PRECISION)
  private Float boundingBoxMeanAveragePrecision;

  public static final String SERIALIZED_NAME_BOUNDING_BOX_METRICS_ENTRIES = "boundingBoxMetricsEntries";
  @SerializedName(SERIALIZED_NAME_BOUNDING_BOX_METRICS_ENTRIES)
  private List<BoundingBoxMetricsEntry> boundingBoxMetricsEntries = new ArrayList<>();

  public static final String SERIALIZED_NAME_EVALUATED_BOUNDING_BOX_COUNT = "evaluatedBoundingBoxCount";
  @SerializedName(SERIALIZED_NAME_EVALUATED_BOUNDING_BOX_COUNT)
  private Integer evaluatedBoundingBoxCount;

  public static final String SERIALIZED_NAME_EVALUATED_FRAME_COUNT = "evaluatedFrameCount";
  @SerializedName(SERIALIZED_NAME_EVALUATED_FRAME_COUNT)
  private Integer evaluatedFrameCount;

  public VideoObjectTrackingEvaluationMetrics() {
  }

  public VideoObjectTrackingEvaluationMetrics boundingBoxMeanAveragePrecision(Float boundingBoxMeanAveragePrecision) {
    this.boundingBoxMeanAveragePrecision = boundingBoxMeanAveragePrecision;
    return this;
  }

  /**
   * Output only. The single metric for bounding boxes evaluation: the mean_average_precision averaged over all bounding_box_metrics_entries.
   * @return boundingBoxMeanAveragePrecision
   */
  @javax.annotation.Nullable
  public Float getBoundingBoxMeanAveragePrecision() {
    return boundingBoxMeanAveragePrecision;
  }

  public void setBoundingBoxMeanAveragePrecision(Float boundingBoxMeanAveragePrecision) {
    this.boundingBoxMeanAveragePrecision = boundingBoxMeanAveragePrecision;
  }


  public VideoObjectTrackingEvaluationMetrics boundingBoxMetricsEntries(List<BoundingBoxMetricsEntry> boundingBoxMetricsEntries) {
    this.boundingBoxMetricsEntries = boundingBoxMetricsEntries;
    return this;
  }

  public VideoObjectTrackingEvaluationMetrics addBoundingBoxMetricsEntriesItem(BoundingBoxMetricsEntry boundingBoxMetricsEntriesItem) {
    if (this.boundingBoxMetricsEntries == null) {
      this.boundingBoxMetricsEntries = new ArrayList<>();
    }
    this.boundingBoxMetricsEntries.add(boundingBoxMetricsEntriesItem);
    return this;
  }

  /**
   * Output only. The bounding boxes match metrics for each Intersection-over-union threshold 0.05,0.10,...,0.95,0.96,0.97,0.98,0.99 and each label confidence threshold 0.05,0.10,...,0.95,0.96,0.97,0.98,0.99 pair.
   * @return boundingBoxMetricsEntries
   */
  @javax.annotation.Nullable
  public List<BoundingBoxMetricsEntry> getBoundingBoxMetricsEntries() {
    return boundingBoxMetricsEntries;
  }

  public void setBoundingBoxMetricsEntries(List<BoundingBoxMetricsEntry> boundingBoxMetricsEntries) {
    this.boundingBoxMetricsEntries = boundingBoxMetricsEntries;
  }


  public VideoObjectTrackingEvaluationMetrics evaluatedBoundingBoxCount(Integer evaluatedBoundingBoxCount) {
    this.evaluatedBoundingBoxCount = evaluatedBoundingBoxCount;
    return this;
  }

  /**
   * Output only. The total number of bounding boxes (i.e. summed over all frames) the ground truth used to create this evaluation had.
   * @return evaluatedBoundingBoxCount
   */
  @javax.annotation.Nullable
  public Integer getEvaluatedBoundingBoxCount() {
    return evaluatedBoundingBoxCount;
  }

  public void setEvaluatedBoundingBoxCount(Integer evaluatedBoundingBoxCount) {
    this.evaluatedBoundingBoxCount = evaluatedBoundingBoxCount;
  }


  public VideoObjectTrackingEvaluationMetrics evaluatedFrameCount(Integer evaluatedFrameCount) {
    this.evaluatedFrameCount = evaluatedFrameCount;
    return this;
  }

  /**
   * Output only. The number of video frames used to create this evaluation.
   * @return evaluatedFrameCount
   */
  @javax.annotation.Nullable
  public Integer getEvaluatedFrameCount() {
    return evaluatedFrameCount;
  }

  public void setEvaluatedFrameCount(Integer evaluatedFrameCount) {
    this.evaluatedFrameCount = evaluatedFrameCount;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VideoObjectTrackingEvaluationMetrics videoObjectTrackingEvaluationMetrics = (VideoObjectTrackingEvaluationMetrics) o;
    return Objects.equals(this.boundingBoxMeanAveragePrecision, videoObjectTrackingEvaluationMetrics.boundingBoxMeanAveragePrecision) &&
        Objects.equals(this.boundingBoxMetricsEntries, videoObjectTrackingEvaluationMetrics.boundingBoxMetricsEntries) &&
        Objects.equals(this.evaluatedBoundingBoxCount, videoObjectTrackingEvaluationMetrics.evaluatedBoundingBoxCount) &&
        Objects.equals(this.evaluatedFrameCount, videoObjectTrackingEvaluationMetrics.evaluatedFrameCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(boundingBoxMeanAveragePrecision, boundingBoxMetricsEntries, evaluatedBoundingBoxCount, evaluatedFrameCount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VideoObjectTrackingEvaluationMetrics {\n");
    sb.append("    boundingBoxMeanAveragePrecision: ").append(toIndentedString(boundingBoxMeanAveragePrecision)).append("\n");
    sb.append("    boundingBoxMetricsEntries: ").append(toIndentedString(boundingBoxMetricsEntries)).append("\n");
    sb.append("    evaluatedBoundingBoxCount: ").append(toIndentedString(evaluatedBoundingBoxCount)).append("\n");
    sb.append("    evaluatedFrameCount: ").append(toIndentedString(evaluatedFrameCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("boundingBoxMeanAveragePrecision");
    openapiFields.add("boundingBoxMetricsEntries");
    openapiFields.add("evaluatedBoundingBoxCount");
    openapiFields.add("evaluatedFrameCount");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to VideoObjectTrackingEvaluationMetrics
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!VideoObjectTrackingEvaluationMetrics.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in VideoObjectTrackingEvaluationMetrics is not found in the empty JSON string", VideoObjectTrackingEvaluationMetrics.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!VideoObjectTrackingEvaluationMetrics.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `VideoObjectTrackingEvaluationMetrics` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("boundingBoxMetricsEntries") != null && !jsonObj.get("boundingBoxMetricsEntries").isJsonNull()) {
        JsonArray jsonArrayboundingBoxMetricsEntries = jsonObj.getAsJsonArray("boundingBoxMetricsEntries");
        if (jsonArrayboundingBoxMetricsEntries != null) {
          // ensure the json data is an array
          if (!jsonObj.get("boundingBoxMetricsEntries").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `boundingBoxMetricsEntries` to be an array in the JSON string but got `%s`", jsonObj.get("boundingBoxMetricsEntries").toString()));
          }

          // validate the optional field `boundingBoxMetricsEntries` (array)
          for (int i = 0; i < jsonArrayboundingBoxMetricsEntries.size(); i++) {
            BoundingBoxMetricsEntry.validateJsonElement(jsonArrayboundingBoxMetricsEntries.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!VideoObjectTrackingEvaluationMetrics.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'VideoObjectTrackingEvaluationMetrics' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<VideoObjectTrackingEvaluationMetrics> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(VideoObjectTrackingEvaluationMetrics.class));

       return (TypeAdapter<T>) new TypeAdapter<VideoObjectTrackingEvaluationMetrics>() {
           @Override
           public void write(JsonWriter out, VideoObjectTrackingEvaluationMetrics value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public VideoObjectTrackingEvaluationMetrics read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of VideoObjectTrackingEvaluationMetrics given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of VideoObjectTrackingEvaluationMetrics
   * @throws IOException if the JSON string is invalid with respect to VideoObjectTrackingEvaluationMetrics
   */
  public static VideoObjectTrackingEvaluationMetrics fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, VideoObjectTrackingEvaluationMetrics.class);
  }

  /**
   * Convert an instance of VideoObjectTrackingEvaluationMetrics to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

