/*
 * Cloud AutoML API
 * Train high-quality custom machine learning models with minimum effort and machine learning expertise.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.BatchPredictOperationMetadata;
import org.openapitools.client.model.ExportDataOperationMetadata;
import org.openapitools.client.model.ExportEvaluatedExamplesOperationMetadata;
import org.openapitools.client.model.ExportModelOperationMetadata;
import org.openapitools.client.model.Status;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Metadata used across all long running operations returned by AutoML API.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:48:50.092187-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class OperationMetadata {
  public static final String SERIALIZED_NAME_BATCH_PREDICT_DETAILS = "batchPredictDetails";
  @SerializedName(SERIALIZED_NAME_BATCH_PREDICT_DETAILS)
  private BatchPredictOperationMetadata batchPredictDetails;

  public static final String SERIALIZED_NAME_CREATE_MODEL_DETAILS = "createModelDetails";
  @SerializedName(SERIALIZED_NAME_CREATE_MODEL_DETAILS)
  private Object createModelDetails;

  public static final String SERIALIZED_NAME_CREATE_TIME = "createTime";
  @SerializedName(SERIALIZED_NAME_CREATE_TIME)
  private String createTime;

  public static final String SERIALIZED_NAME_DELETE_DETAILS = "deleteDetails";
  @SerializedName(SERIALIZED_NAME_DELETE_DETAILS)
  private Object deleteDetails;

  public static final String SERIALIZED_NAME_DEPLOY_MODEL_DETAILS = "deployModelDetails";
  @SerializedName(SERIALIZED_NAME_DEPLOY_MODEL_DETAILS)
  private Object deployModelDetails;

  public static final String SERIALIZED_NAME_EXPORT_DATA_DETAILS = "exportDataDetails";
  @SerializedName(SERIALIZED_NAME_EXPORT_DATA_DETAILS)
  private ExportDataOperationMetadata exportDataDetails;

  public static final String SERIALIZED_NAME_EXPORT_EVALUATED_EXAMPLES_DETAILS = "exportEvaluatedExamplesDetails";
  @SerializedName(SERIALIZED_NAME_EXPORT_EVALUATED_EXAMPLES_DETAILS)
  private ExportEvaluatedExamplesOperationMetadata exportEvaluatedExamplesDetails;

  public static final String SERIALIZED_NAME_EXPORT_MODEL_DETAILS = "exportModelDetails";
  @SerializedName(SERIALIZED_NAME_EXPORT_MODEL_DETAILS)
  private ExportModelOperationMetadata exportModelDetails;

  public static final String SERIALIZED_NAME_IMPORT_DATA_DETAILS = "importDataDetails";
  @SerializedName(SERIALIZED_NAME_IMPORT_DATA_DETAILS)
  private Object importDataDetails;

  public static final String SERIALIZED_NAME_PARTIAL_FAILURES = "partialFailures";
  @SerializedName(SERIALIZED_NAME_PARTIAL_FAILURES)
  private List<Status> partialFailures = new ArrayList<>();

  public static final String SERIALIZED_NAME_PROGRESS_PERCENT = "progressPercent";
  @SerializedName(SERIALIZED_NAME_PROGRESS_PERCENT)
  private Integer progressPercent;

  public static final String SERIALIZED_NAME_UNDEPLOY_MODEL_DETAILS = "undeployModelDetails";
  @SerializedName(SERIALIZED_NAME_UNDEPLOY_MODEL_DETAILS)
  private Object undeployModelDetails;

  public static final String SERIALIZED_NAME_UPDATE_TIME = "updateTime";
  @SerializedName(SERIALIZED_NAME_UPDATE_TIME)
  private String updateTime;

  public OperationMetadata() {
  }

  public OperationMetadata batchPredictDetails(BatchPredictOperationMetadata batchPredictDetails) {
    this.batchPredictDetails = batchPredictDetails;
    return this;
  }

  /**
   * Get batchPredictDetails
   * @return batchPredictDetails
   */
  @javax.annotation.Nullable
  public BatchPredictOperationMetadata getBatchPredictDetails() {
    return batchPredictDetails;
  }

  public void setBatchPredictDetails(BatchPredictOperationMetadata batchPredictDetails) {
    this.batchPredictDetails = batchPredictDetails;
  }


  public OperationMetadata createModelDetails(Object createModelDetails) {
    this.createModelDetails = createModelDetails;
    return this;
  }

  /**
   * Details of CreateModel operation.
   * @return createModelDetails
   */
  @javax.annotation.Nullable
  public Object getCreateModelDetails() {
    return createModelDetails;
  }

  public void setCreateModelDetails(Object createModelDetails) {
    this.createModelDetails = createModelDetails;
  }


  public OperationMetadata createTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Output only. Time when the operation was created.
   * @return createTime
   */
  @javax.annotation.Nullable
  public String getCreateTime() {
    return createTime;
  }

  public void setCreateTime(String createTime) {
    this.createTime = createTime;
  }


  public OperationMetadata deleteDetails(Object deleteDetails) {
    this.deleteDetails = deleteDetails;
    return this;
  }

  /**
   * Details of operations that perform deletes of any entities.
   * @return deleteDetails
   */
  @javax.annotation.Nullable
  public Object getDeleteDetails() {
    return deleteDetails;
  }

  public void setDeleteDetails(Object deleteDetails) {
    this.deleteDetails = deleteDetails;
  }


  public OperationMetadata deployModelDetails(Object deployModelDetails) {
    this.deployModelDetails = deployModelDetails;
    return this;
  }

  /**
   * Details of DeployModel operation.
   * @return deployModelDetails
   */
  @javax.annotation.Nullable
  public Object getDeployModelDetails() {
    return deployModelDetails;
  }

  public void setDeployModelDetails(Object deployModelDetails) {
    this.deployModelDetails = deployModelDetails;
  }


  public OperationMetadata exportDataDetails(ExportDataOperationMetadata exportDataDetails) {
    this.exportDataDetails = exportDataDetails;
    return this;
  }

  /**
   * Get exportDataDetails
   * @return exportDataDetails
   */
  @javax.annotation.Nullable
  public ExportDataOperationMetadata getExportDataDetails() {
    return exportDataDetails;
  }

  public void setExportDataDetails(ExportDataOperationMetadata exportDataDetails) {
    this.exportDataDetails = exportDataDetails;
  }


  public OperationMetadata exportEvaluatedExamplesDetails(ExportEvaluatedExamplesOperationMetadata exportEvaluatedExamplesDetails) {
    this.exportEvaluatedExamplesDetails = exportEvaluatedExamplesDetails;
    return this;
  }

  /**
   * Get exportEvaluatedExamplesDetails
   * @return exportEvaluatedExamplesDetails
   */
  @javax.annotation.Nullable
  public ExportEvaluatedExamplesOperationMetadata getExportEvaluatedExamplesDetails() {
    return exportEvaluatedExamplesDetails;
  }

  public void setExportEvaluatedExamplesDetails(ExportEvaluatedExamplesOperationMetadata exportEvaluatedExamplesDetails) {
    this.exportEvaluatedExamplesDetails = exportEvaluatedExamplesDetails;
  }


  public OperationMetadata exportModelDetails(ExportModelOperationMetadata exportModelDetails) {
    this.exportModelDetails = exportModelDetails;
    return this;
  }

  /**
   * Get exportModelDetails
   * @return exportModelDetails
   */
  @javax.annotation.Nullable
  public ExportModelOperationMetadata getExportModelDetails() {
    return exportModelDetails;
  }

  public void setExportModelDetails(ExportModelOperationMetadata exportModelDetails) {
    this.exportModelDetails = exportModelDetails;
  }


  public OperationMetadata importDataDetails(Object importDataDetails) {
    this.importDataDetails = importDataDetails;
    return this;
  }

  /**
   * Details of ImportData operation.
   * @return importDataDetails
   */
  @javax.annotation.Nullable
  public Object getImportDataDetails() {
    return importDataDetails;
  }

  public void setImportDataDetails(Object importDataDetails) {
    this.importDataDetails = importDataDetails;
  }


  public OperationMetadata partialFailures(List<Status> partialFailures) {
    this.partialFailures = partialFailures;
    return this;
  }

  public OperationMetadata addPartialFailuresItem(Status partialFailuresItem) {
    if (this.partialFailures == null) {
      this.partialFailures = new ArrayList<>();
    }
    this.partialFailures.add(partialFailuresItem);
    return this;
  }

  /**
   * Output only. Partial failures encountered. E.g. single files that couldn&#39;t be read. This field should never exceed 20 entries. Status details field will contain standard GCP error details.
   * @return partialFailures
   */
  @javax.annotation.Nullable
  public List<Status> getPartialFailures() {
    return partialFailures;
  }

  public void setPartialFailures(List<Status> partialFailures) {
    this.partialFailures = partialFailures;
  }


  public OperationMetadata progressPercent(Integer progressPercent) {
    this.progressPercent = progressPercent;
    return this;
  }

  /**
   * Output only. Progress of operation. Range: [0, 100]. Not used currently.
   * @return progressPercent
   */
  @javax.annotation.Nullable
  public Integer getProgressPercent() {
    return progressPercent;
  }

  public void setProgressPercent(Integer progressPercent) {
    this.progressPercent = progressPercent;
  }


  public OperationMetadata undeployModelDetails(Object undeployModelDetails) {
    this.undeployModelDetails = undeployModelDetails;
    return this;
  }

  /**
   * Details of UndeployModel operation.
   * @return undeployModelDetails
   */
  @javax.annotation.Nullable
  public Object getUndeployModelDetails() {
    return undeployModelDetails;
  }

  public void setUndeployModelDetails(Object undeployModelDetails) {
    this.undeployModelDetails = undeployModelDetails;
  }


  public OperationMetadata updateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  /**
   * Output only. Time when the operation was updated for the last time.
   * @return updateTime
   */
  @javax.annotation.Nullable
  public String getUpdateTime() {
    return updateTime;
  }

  public void setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OperationMetadata operationMetadata = (OperationMetadata) o;
    return Objects.equals(this.batchPredictDetails, operationMetadata.batchPredictDetails) &&
        Objects.equals(this.createModelDetails, operationMetadata.createModelDetails) &&
        Objects.equals(this.createTime, operationMetadata.createTime) &&
        Objects.equals(this.deleteDetails, operationMetadata.deleteDetails) &&
        Objects.equals(this.deployModelDetails, operationMetadata.deployModelDetails) &&
        Objects.equals(this.exportDataDetails, operationMetadata.exportDataDetails) &&
        Objects.equals(this.exportEvaluatedExamplesDetails, operationMetadata.exportEvaluatedExamplesDetails) &&
        Objects.equals(this.exportModelDetails, operationMetadata.exportModelDetails) &&
        Objects.equals(this.importDataDetails, operationMetadata.importDataDetails) &&
        Objects.equals(this.partialFailures, operationMetadata.partialFailures) &&
        Objects.equals(this.progressPercent, operationMetadata.progressPercent) &&
        Objects.equals(this.undeployModelDetails, operationMetadata.undeployModelDetails) &&
        Objects.equals(this.updateTime, operationMetadata.updateTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(batchPredictDetails, createModelDetails, createTime, deleteDetails, deployModelDetails, exportDataDetails, exportEvaluatedExamplesDetails, exportModelDetails, importDataDetails, partialFailures, progressPercent, undeployModelDetails, updateTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OperationMetadata {\n");
    sb.append("    batchPredictDetails: ").append(toIndentedString(batchPredictDetails)).append("\n");
    sb.append("    createModelDetails: ").append(toIndentedString(createModelDetails)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    deleteDetails: ").append(toIndentedString(deleteDetails)).append("\n");
    sb.append("    deployModelDetails: ").append(toIndentedString(deployModelDetails)).append("\n");
    sb.append("    exportDataDetails: ").append(toIndentedString(exportDataDetails)).append("\n");
    sb.append("    exportEvaluatedExamplesDetails: ").append(toIndentedString(exportEvaluatedExamplesDetails)).append("\n");
    sb.append("    exportModelDetails: ").append(toIndentedString(exportModelDetails)).append("\n");
    sb.append("    importDataDetails: ").append(toIndentedString(importDataDetails)).append("\n");
    sb.append("    partialFailures: ").append(toIndentedString(partialFailures)).append("\n");
    sb.append("    progressPercent: ").append(toIndentedString(progressPercent)).append("\n");
    sb.append("    undeployModelDetails: ").append(toIndentedString(undeployModelDetails)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("batchPredictDetails");
    openapiFields.add("createModelDetails");
    openapiFields.add("createTime");
    openapiFields.add("deleteDetails");
    openapiFields.add("deployModelDetails");
    openapiFields.add("exportDataDetails");
    openapiFields.add("exportEvaluatedExamplesDetails");
    openapiFields.add("exportModelDetails");
    openapiFields.add("importDataDetails");
    openapiFields.add("partialFailures");
    openapiFields.add("progressPercent");
    openapiFields.add("undeployModelDetails");
    openapiFields.add("updateTime");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to OperationMetadata
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!OperationMetadata.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in OperationMetadata is not found in the empty JSON string", OperationMetadata.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!OperationMetadata.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `OperationMetadata` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `batchPredictDetails`
      if (jsonObj.get("batchPredictDetails") != null && !jsonObj.get("batchPredictDetails").isJsonNull()) {
        BatchPredictOperationMetadata.validateJsonElement(jsonObj.get("batchPredictDetails"));
      }
      if ((jsonObj.get("createTime") != null && !jsonObj.get("createTime").isJsonNull()) && !jsonObj.get("createTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createTime").toString()));
      }
      // validate the optional field `exportDataDetails`
      if (jsonObj.get("exportDataDetails") != null && !jsonObj.get("exportDataDetails").isJsonNull()) {
        ExportDataOperationMetadata.validateJsonElement(jsonObj.get("exportDataDetails"));
      }
      // validate the optional field `exportEvaluatedExamplesDetails`
      if (jsonObj.get("exportEvaluatedExamplesDetails") != null && !jsonObj.get("exportEvaluatedExamplesDetails").isJsonNull()) {
        ExportEvaluatedExamplesOperationMetadata.validateJsonElement(jsonObj.get("exportEvaluatedExamplesDetails"));
      }
      // validate the optional field `exportModelDetails`
      if (jsonObj.get("exportModelDetails") != null && !jsonObj.get("exportModelDetails").isJsonNull()) {
        ExportModelOperationMetadata.validateJsonElement(jsonObj.get("exportModelDetails"));
      }
      if (jsonObj.get("partialFailures") != null && !jsonObj.get("partialFailures").isJsonNull()) {
        JsonArray jsonArraypartialFailures = jsonObj.getAsJsonArray("partialFailures");
        if (jsonArraypartialFailures != null) {
          // ensure the json data is an array
          if (!jsonObj.get("partialFailures").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `partialFailures` to be an array in the JSON string but got `%s`", jsonObj.get("partialFailures").toString()));
          }

          // validate the optional field `partialFailures` (array)
          for (int i = 0; i < jsonArraypartialFailures.size(); i++) {
            Status.validateJsonElement(jsonArraypartialFailures.get(i));
          };
        }
      }
      if ((jsonObj.get("updateTime") != null && !jsonObj.get("updateTime").isJsonNull()) && !jsonObj.get("updateTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updateTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updateTime").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OperationMetadata.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OperationMetadata' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OperationMetadata> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OperationMetadata.class));

       return (TypeAdapter<T>) new TypeAdapter<OperationMetadata>() {
           @Override
           public void write(JsonWriter out, OperationMetadata value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public OperationMetadata read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of OperationMetadata given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of OperationMetadata
   * @throws IOException if the JSON string is invalid with respect to OperationMetadata
   */
  public static OperationMetadata fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OperationMetadata.class);
  }

  /**
   * Convert an instance of OperationMetadata to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

