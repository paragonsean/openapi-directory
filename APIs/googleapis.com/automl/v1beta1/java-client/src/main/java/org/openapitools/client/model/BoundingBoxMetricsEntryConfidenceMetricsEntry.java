/*
 * Cloud AutoML API
 * Train high-quality custom machine learning models with minimum effort and machine learning expertise.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Metrics for a single confidence threshold.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:48:50.092187-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class BoundingBoxMetricsEntryConfidenceMetricsEntry {
  public static final String SERIALIZED_NAME_CONFIDENCE_THRESHOLD = "confidenceThreshold";
  @SerializedName(SERIALIZED_NAME_CONFIDENCE_THRESHOLD)
  private Float confidenceThreshold;

  public static final String SERIALIZED_NAME_F1_SCORE = "f1Score";
  @SerializedName(SERIALIZED_NAME_F1_SCORE)
  private Float f1Score;

  public static final String SERIALIZED_NAME_PRECISION = "precision";
  @SerializedName(SERIALIZED_NAME_PRECISION)
  private Float precision;

  public static final String SERIALIZED_NAME_RECALL = "recall";
  @SerializedName(SERIALIZED_NAME_RECALL)
  private Float recall;

  public BoundingBoxMetricsEntryConfidenceMetricsEntry() {
  }

  public BoundingBoxMetricsEntryConfidenceMetricsEntry confidenceThreshold(Float confidenceThreshold) {
    this.confidenceThreshold = confidenceThreshold;
    return this;
  }

  /**
   * Output only. The confidence threshold value used to compute the metrics.
   * @return confidenceThreshold
   */
  @javax.annotation.Nullable
  public Float getConfidenceThreshold() {
    return confidenceThreshold;
  }

  public void setConfidenceThreshold(Float confidenceThreshold) {
    this.confidenceThreshold = confidenceThreshold;
  }


  public BoundingBoxMetricsEntryConfidenceMetricsEntry f1Score(Float f1Score) {
    this.f1Score = f1Score;
    return this;
  }

  /**
   * Output only. The harmonic mean of recall and precision.
   * @return f1Score
   */
  @javax.annotation.Nullable
  public Float getF1Score() {
    return f1Score;
  }

  public void setF1Score(Float f1Score) {
    this.f1Score = f1Score;
  }


  public BoundingBoxMetricsEntryConfidenceMetricsEntry precision(Float precision) {
    this.precision = precision;
    return this;
  }

  /**
   * Output only. Precision under the given confidence threshold.
   * @return precision
   */
  @javax.annotation.Nullable
  public Float getPrecision() {
    return precision;
  }

  public void setPrecision(Float precision) {
    this.precision = precision;
  }


  public BoundingBoxMetricsEntryConfidenceMetricsEntry recall(Float recall) {
    this.recall = recall;
    return this;
  }

  /**
   * Output only. Recall under the given confidence threshold.
   * @return recall
   */
  @javax.annotation.Nullable
  public Float getRecall() {
    return recall;
  }

  public void setRecall(Float recall) {
    this.recall = recall;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BoundingBoxMetricsEntryConfidenceMetricsEntry boundingBoxMetricsEntryConfidenceMetricsEntry = (BoundingBoxMetricsEntryConfidenceMetricsEntry) o;
    return Objects.equals(this.confidenceThreshold, boundingBoxMetricsEntryConfidenceMetricsEntry.confidenceThreshold) &&
        Objects.equals(this.f1Score, boundingBoxMetricsEntryConfidenceMetricsEntry.f1Score) &&
        Objects.equals(this.precision, boundingBoxMetricsEntryConfidenceMetricsEntry.precision) &&
        Objects.equals(this.recall, boundingBoxMetricsEntryConfidenceMetricsEntry.recall);
  }

  @Override
  public int hashCode() {
    return Objects.hash(confidenceThreshold, f1Score, precision, recall);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BoundingBoxMetricsEntryConfidenceMetricsEntry {\n");
    sb.append("    confidenceThreshold: ").append(toIndentedString(confidenceThreshold)).append("\n");
    sb.append("    f1Score: ").append(toIndentedString(f1Score)).append("\n");
    sb.append("    precision: ").append(toIndentedString(precision)).append("\n");
    sb.append("    recall: ").append(toIndentedString(recall)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("confidenceThreshold");
    openapiFields.add("f1Score");
    openapiFields.add("precision");
    openapiFields.add("recall");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to BoundingBoxMetricsEntryConfidenceMetricsEntry
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!BoundingBoxMetricsEntryConfidenceMetricsEntry.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BoundingBoxMetricsEntryConfidenceMetricsEntry is not found in the empty JSON string", BoundingBoxMetricsEntryConfidenceMetricsEntry.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!BoundingBoxMetricsEntryConfidenceMetricsEntry.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `BoundingBoxMetricsEntryConfidenceMetricsEntry` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BoundingBoxMetricsEntryConfidenceMetricsEntry.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BoundingBoxMetricsEntryConfidenceMetricsEntry' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BoundingBoxMetricsEntryConfidenceMetricsEntry> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BoundingBoxMetricsEntryConfidenceMetricsEntry.class));

       return (TypeAdapter<T>) new TypeAdapter<BoundingBoxMetricsEntryConfidenceMetricsEntry>() {
           @Override
           public void write(JsonWriter out, BoundingBoxMetricsEntryConfidenceMetricsEntry value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public BoundingBoxMetricsEntryConfidenceMetricsEntry read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of BoundingBoxMetricsEntryConfidenceMetricsEntry given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of BoundingBoxMetricsEntryConfidenceMetricsEntry
   * @throws IOException if the JSON string is invalid with respect to BoundingBoxMetricsEntryConfidenceMetricsEntry
   */
  public static BoundingBoxMetricsEntryConfidenceMetricsEntry fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BoundingBoxMetricsEntryConfidenceMetricsEntry.class);
  }

  /**
   * Convert an instance of BoundingBoxMetricsEntryConfidenceMetricsEntry to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

