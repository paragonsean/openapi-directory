/*
 * Cloud AutoML API
 * Train high-quality custom machine learning models with minimum effort and machine learning expertise.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.BoundingBoxMetricsEntryConfidenceMetricsEntry;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Bounding box matching model metrics for a single intersection-over-union threshold and multiple label match confidence thresholds.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:48:50.092187-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class BoundingBoxMetricsEntry {
  public static final String SERIALIZED_NAME_CONFIDENCE_METRICS_ENTRIES = "confidenceMetricsEntries";
  @SerializedName(SERIALIZED_NAME_CONFIDENCE_METRICS_ENTRIES)
  private List<BoundingBoxMetricsEntryConfidenceMetricsEntry> confidenceMetricsEntries = new ArrayList<>();

  public static final String SERIALIZED_NAME_IOU_THRESHOLD = "iouThreshold";
  @SerializedName(SERIALIZED_NAME_IOU_THRESHOLD)
  private Float iouThreshold;

  public static final String SERIALIZED_NAME_MEAN_AVERAGE_PRECISION = "meanAveragePrecision";
  @SerializedName(SERIALIZED_NAME_MEAN_AVERAGE_PRECISION)
  private Float meanAveragePrecision;

  public BoundingBoxMetricsEntry() {
  }

  public BoundingBoxMetricsEntry confidenceMetricsEntries(List<BoundingBoxMetricsEntryConfidenceMetricsEntry> confidenceMetricsEntries) {
    this.confidenceMetricsEntries = confidenceMetricsEntries;
    return this;
  }

  public BoundingBoxMetricsEntry addConfidenceMetricsEntriesItem(BoundingBoxMetricsEntryConfidenceMetricsEntry confidenceMetricsEntriesItem) {
    if (this.confidenceMetricsEntries == null) {
      this.confidenceMetricsEntries = new ArrayList<>();
    }
    this.confidenceMetricsEntries.add(confidenceMetricsEntriesItem);
    return this;
  }

  /**
   * Output only. Metrics for each label-match confidence_threshold from 0.05,0.10,...,0.95,0.96,0.97,0.98,0.99. Precision-recall curve is derived from them.
   * @return confidenceMetricsEntries
   */
  @javax.annotation.Nullable
  public List<BoundingBoxMetricsEntryConfidenceMetricsEntry> getConfidenceMetricsEntries() {
    return confidenceMetricsEntries;
  }

  public void setConfidenceMetricsEntries(List<BoundingBoxMetricsEntryConfidenceMetricsEntry> confidenceMetricsEntries) {
    this.confidenceMetricsEntries = confidenceMetricsEntries;
  }


  public BoundingBoxMetricsEntry iouThreshold(Float iouThreshold) {
    this.iouThreshold = iouThreshold;
    return this;
  }

  /**
   * Output only. The intersection-over-union threshold value used to compute this metrics entry.
   * @return iouThreshold
   */
  @javax.annotation.Nullable
  public Float getIouThreshold() {
    return iouThreshold;
  }

  public void setIouThreshold(Float iouThreshold) {
    this.iouThreshold = iouThreshold;
  }


  public BoundingBoxMetricsEntry meanAveragePrecision(Float meanAveragePrecision) {
    this.meanAveragePrecision = meanAveragePrecision;
    return this;
  }

  /**
   * Output only. The mean average precision, most often close to au_prc.
   * @return meanAveragePrecision
   */
  @javax.annotation.Nullable
  public Float getMeanAveragePrecision() {
    return meanAveragePrecision;
  }

  public void setMeanAveragePrecision(Float meanAveragePrecision) {
    this.meanAveragePrecision = meanAveragePrecision;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BoundingBoxMetricsEntry boundingBoxMetricsEntry = (BoundingBoxMetricsEntry) o;
    return Objects.equals(this.confidenceMetricsEntries, boundingBoxMetricsEntry.confidenceMetricsEntries) &&
        Objects.equals(this.iouThreshold, boundingBoxMetricsEntry.iouThreshold) &&
        Objects.equals(this.meanAveragePrecision, boundingBoxMetricsEntry.meanAveragePrecision);
  }

  @Override
  public int hashCode() {
    return Objects.hash(confidenceMetricsEntries, iouThreshold, meanAveragePrecision);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BoundingBoxMetricsEntry {\n");
    sb.append("    confidenceMetricsEntries: ").append(toIndentedString(confidenceMetricsEntries)).append("\n");
    sb.append("    iouThreshold: ").append(toIndentedString(iouThreshold)).append("\n");
    sb.append("    meanAveragePrecision: ").append(toIndentedString(meanAveragePrecision)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("confidenceMetricsEntries");
    openapiFields.add("iouThreshold");
    openapiFields.add("meanAveragePrecision");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to BoundingBoxMetricsEntry
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!BoundingBoxMetricsEntry.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BoundingBoxMetricsEntry is not found in the empty JSON string", BoundingBoxMetricsEntry.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!BoundingBoxMetricsEntry.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `BoundingBoxMetricsEntry` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("confidenceMetricsEntries") != null && !jsonObj.get("confidenceMetricsEntries").isJsonNull()) {
        JsonArray jsonArrayconfidenceMetricsEntries = jsonObj.getAsJsonArray("confidenceMetricsEntries");
        if (jsonArrayconfidenceMetricsEntries != null) {
          // ensure the json data is an array
          if (!jsonObj.get("confidenceMetricsEntries").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `confidenceMetricsEntries` to be an array in the JSON string but got `%s`", jsonObj.get("confidenceMetricsEntries").toString()));
          }

          // validate the optional field `confidenceMetricsEntries` (array)
          for (int i = 0; i < jsonArrayconfidenceMetricsEntries.size(); i++) {
            BoundingBoxMetricsEntryConfidenceMetricsEntry.validateJsonElement(jsonArrayconfidenceMetricsEntries.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BoundingBoxMetricsEntry.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BoundingBoxMetricsEntry' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BoundingBoxMetricsEntry> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BoundingBoxMetricsEntry.class));

       return (TypeAdapter<T>) new TypeAdapter<BoundingBoxMetricsEntry>() {
           @Override
           public void write(JsonWriter out, BoundingBoxMetricsEntry value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public BoundingBoxMetricsEntry read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of BoundingBoxMetricsEntry given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of BoundingBoxMetricsEntry
   * @throws IOException if the JSON string is invalid with respect to BoundingBoxMetricsEntry
   */
  public static BoundingBoxMetricsEntry fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BoundingBoxMetricsEntry.class);
  }

  /**
   * Convert an instance of BoundingBoxMetricsEntry to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

