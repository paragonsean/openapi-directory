/*
 * Cloud AutoML API
 * Train high-quality custom machine learning models with minimum effort and machine learning expertise.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ClassificationEvaluationMetricsConfidenceMetricsEntry;
import org.openapitools.client.model.ConfusionMatrix;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Model evaluation metrics for classification problems. Note: For Video Classification this metrics only describe quality of the Video Classification predictions of \&quot;segment_classification\&quot; type.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:48:50.092187-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ClassificationEvaluationMetrics {
  public static final String SERIALIZED_NAME_ANNOTATION_SPEC_ID = "annotationSpecId";
  @SerializedName(SERIALIZED_NAME_ANNOTATION_SPEC_ID)
  private List<String> annotationSpecId = new ArrayList<>();

  public static final String SERIALIZED_NAME_AU_PRC = "auPrc";
  @SerializedName(SERIALIZED_NAME_AU_PRC)
  private Float auPrc;

  public static final String SERIALIZED_NAME_AU_ROC = "auRoc";
  @SerializedName(SERIALIZED_NAME_AU_ROC)
  private Float auRoc;

  public static final String SERIALIZED_NAME_BASE_AU_PRC = "baseAuPrc";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_BASE_AU_PRC)
  private Float baseAuPrc;

  public static final String SERIALIZED_NAME_CONFIDENCE_METRICS_ENTRY = "confidenceMetricsEntry";
  @SerializedName(SERIALIZED_NAME_CONFIDENCE_METRICS_ENTRY)
  private List<ClassificationEvaluationMetricsConfidenceMetricsEntry> confidenceMetricsEntry = new ArrayList<>();

  public static final String SERIALIZED_NAME_CONFUSION_MATRIX = "confusionMatrix";
  @SerializedName(SERIALIZED_NAME_CONFUSION_MATRIX)
  private ConfusionMatrix confusionMatrix;

  public static final String SERIALIZED_NAME_LOG_LOSS = "logLoss";
  @SerializedName(SERIALIZED_NAME_LOG_LOSS)
  private Float logLoss;

  public ClassificationEvaluationMetrics() {
  }

  public ClassificationEvaluationMetrics annotationSpecId(List<String> annotationSpecId) {
    this.annotationSpecId = annotationSpecId;
    return this;
  }

  public ClassificationEvaluationMetrics addAnnotationSpecIdItem(String annotationSpecIdItem) {
    if (this.annotationSpecId == null) {
      this.annotationSpecId = new ArrayList<>();
    }
    this.annotationSpecId.add(annotationSpecIdItem);
    return this;
  }

  /**
   * Output only. The annotation spec ids used for this evaluation.
   * @return annotationSpecId
   */
  @javax.annotation.Nullable
  public List<String> getAnnotationSpecId() {
    return annotationSpecId;
  }

  public void setAnnotationSpecId(List<String> annotationSpecId) {
    this.annotationSpecId = annotationSpecId;
  }


  public ClassificationEvaluationMetrics auPrc(Float auPrc) {
    this.auPrc = auPrc;
    return this;
  }

  /**
   * Output only. The Area Under Precision-Recall Curve metric. Micro-averaged for the overall evaluation.
   * @return auPrc
   */
  @javax.annotation.Nullable
  public Float getAuPrc() {
    return auPrc;
  }

  public void setAuPrc(Float auPrc) {
    this.auPrc = auPrc;
  }


  public ClassificationEvaluationMetrics auRoc(Float auRoc) {
    this.auRoc = auRoc;
    return this;
  }

  /**
   * Output only. The Area Under Receiver Operating Characteristic curve metric. Micro-averaged for the overall evaluation.
   * @return auRoc
   */
  @javax.annotation.Nullable
  public Float getAuRoc() {
    return auRoc;
  }

  public void setAuRoc(Float auRoc) {
    this.auRoc = auRoc;
  }


  @Deprecated
  public ClassificationEvaluationMetrics baseAuPrc(Float baseAuPrc) {
    this.baseAuPrc = baseAuPrc;
    return this;
  }

  /**
   * Output only. The Area Under Precision-Recall Curve metric based on priors. Micro-averaged for the overall evaluation. Deprecated.
   * @return baseAuPrc
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public Float getBaseAuPrc() {
    return baseAuPrc;
  }

  @Deprecated
  public void setBaseAuPrc(Float baseAuPrc) {
    this.baseAuPrc = baseAuPrc;
  }


  public ClassificationEvaluationMetrics confidenceMetricsEntry(List<ClassificationEvaluationMetricsConfidenceMetricsEntry> confidenceMetricsEntry) {
    this.confidenceMetricsEntry = confidenceMetricsEntry;
    return this;
  }

  public ClassificationEvaluationMetrics addConfidenceMetricsEntryItem(ClassificationEvaluationMetricsConfidenceMetricsEntry confidenceMetricsEntryItem) {
    if (this.confidenceMetricsEntry == null) {
      this.confidenceMetricsEntry = new ArrayList<>();
    }
    this.confidenceMetricsEntry.add(confidenceMetricsEntryItem);
    return this;
  }

  /**
   * Output only. Metrics for each confidence_threshold in 0.00,0.05,0.10,...,0.95,0.96,0.97,0.98,0.99 and position_threshold &#x3D; INT32_MAX_VALUE. ROC and precision-recall curves, and other aggregated metrics are derived from them. The confidence metrics entries may also be supplied for additional values of position_threshold, but from these no aggregated metrics are computed.
   * @return confidenceMetricsEntry
   */
  @javax.annotation.Nullable
  public List<ClassificationEvaluationMetricsConfidenceMetricsEntry> getConfidenceMetricsEntry() {
    return confidenceMetricsEntry;
  }

  public void setConfidenceMetricsEntry(List<ClassificationEvaluationMetricsConfidenceMetricsEntry> confidenceMetricsEntry) {
    this.confidenceMetricsEntry = confidenceMetricsEntry;
  }


  public ClassificationEvaluationMetrics confusionMatrix(ConfusionMatrix confusionMatrix) {
    this.confusionMatrix = confusionMatrix;
    return this;
  }

  /**
   * Get confusionMatrix
   * @return confusionMatrix
   */
  @javax.annotation.Nullable
  public ConfusionMatrix getConfusionMatrix() {
    return confusionMatrix;
  }

  public void setConfusionMatrix(ConfusionMatrix confusionMatrix) {
    this.confusionMatrix = confusionMatrix;
  }


  public ClassificationEvaluationMetrics logLoss(Float logLoss) {
    this.logLoss = logLoss;
    return this;
  }

  /**
   * Output only. The Log Loss metric.
   * @return logLoss
   */
  @javax.annotation.Nullable
  public Float getLogLoss() {
    return logLoss;
  }

  public void setLogLoss(Float logLoss) {
    this.logLoss = logLoss;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ClassificationEvaluationMetrics classificationEvaluationMetrics = (ClassificationEvaluationMetrics) o;
    return Objects.equals(this.annotationSpecId, classificationEvaluationMetrics.annotationSpecId) &&
        Objects.equals(this.auPrc, classificationEvaluationMetrics.auPrc) &&
        Objects.equals(this.auRoc, classificationEvaluationMetrics.auRoc) &&
        Objects.equals(this.baseAuPrc, classificationEvaluationMetrics.baseAuPrc) &&
        Objects.equals(this.confidenceMetricsEntry, classificationEvaluationMetrics.confidenceMetricsEntry) &&
        Objects.equals(this.confusionMatrix, classificationEvaluationMetrics.confusionMatrix) &&
        Objects.equals(this.logLoss, classificationEvaluationMetrics.logLoss);
  }

  @Override
  public int hashCode() {
    return Objects.hash(annotationSpecId, auPrc, auRoc, baseAuPrc, confidenceMetricsEntry, confusionMatrix, logLoss);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ClassificationEvaluationMetrics {\n");
    sb.append("    annotationSpecId: ").append(toIndentedString(annotationSpecId)).append("\n");
    sb.append("    auPrc: ").append(toIndentedString(auPrc)).append("\n");
    sb.append("    auRoc: ").append(toIndentedString(auRoc)).append("\n");
    sb.append("    baseAuPrc: ").append(toIndentedString(baseAuPrc)).append("\n");
    sb.append("    confidenceMetricsEntry: ").append(toIndentedString(confidenceMetricsEntry)).append("\n");
    sb.append("    confusionMatrix: ").append(toIndentedString(confusionMatrix)).append("\n");
    sb.append("    logLoss: ").append(toIndentedString(logLoss)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("annotationSpecId");
    openapiFields.add("auPrc");
    openapiFields.add("auRoc");
    openapiFields.add("baseAuPrc");
    openapiFields.add("confidenceMetricsEntry");
    openapiFields.add("confusionMatrix");
    openapiFields.add("logLoss");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ClassificationEvaluationMetrics
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ClassificationEvaluationMetrics.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ClassificationEvaluationMetrics is not found in the empty JSON string", ClassificationEvaluationMetrics.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ClassificationEvaluationMetrics.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ClassificationEvaluationMetrics` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("annotationSpecId") != null && !jsonObj.get("annotationSpecId").isJsonNull() && !jsonObj.get("annotationSpecId").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `annotationSpecId` to be an array in the JSON string but got `%s`", jsonObj.get("annotationSpecId").toString()));
      }
      if (jsonObj.get("confidenceMetricsEntry") != null && !jsonObj.get("confidenceMetricsEntry").isJsonNull()) {
        JsonArray jsonArrayconfidenceMetricsEntry = jsonObj.getAsJsonArray("confidenceMetricsEntry");
        if (jsonArrayconfidenceMetricsEntry != null) {
          // ensure the json data is an array
          if (!jsonObj.get("confidenceMetricsEntry").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `confidenceMetricsEntry` to be an array in the JSON string but got `%s`", jsonObj.get("confidenceMetricsEntry").toString()));
          }

          // validate the optional field `confidenceMetricsEntry` (array)
          for (int i = 0; i < jsonArrayconfidenceMetricsEntry.size(); i++) {
            ClassificationEvaluationMetricsConfidenceMetricsEntry.validateJsonElement(jsonArrayconfidenceMetricsEntry.get(i));
          };
        }
      }
      // validate the optional field `confusionMatrix`
      if (jsonObj.get("confusionMatrix") != null && !jsonObj.get("confusionMatrix").isJsonNull()) {
        ConfusionMatrix.validateJsonElement(jsonObj.get("confusionMatrix"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ClassificationEvaluationMetrics.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ClassificationEvaluationMetrics' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ClassificationEvaluationMetrics> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ClassificationEvaluationMetrics.class));

       return (TypeAdapter<T>) new TypeAdapter<ClassificationEvaluationMetrics>() {
           @Override
           public void write(JsonWriter out, ClassificationEvaluationMetrics value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ClassificationEvaluationMetrics read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ClassificationEvaluationMetrics given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ClassificationEvaluationMetrics
   * @throws IOException if the JSON string is invalid with respect to ClassificationEvaluationMetrics
   */
  public static ClassificationEvaluationMetrics fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ClassificationEvaluationMetrics.class);
  }

  /**
   * Convert an instance of ClassificationEvaluationMetrics to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

