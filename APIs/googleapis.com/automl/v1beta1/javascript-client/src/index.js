/**
 * Cloud AutoML API
 * Train high-quality custom machine learning models with minimum effort and machine learning expertise.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AnnotationPayload from './model/AnnotationPayload';
import AnnotationSpec from './model/AnnotationSpec';
import ArrayStats from './model/ArrayStats';
import BatchPredictInputConfig from './model/BatchPredictInputConfig';
import BatchPredictOperationMetadata from './model/BatchPredictOperationMetadata';
import BatchPredictOutputConfig from './model/BatchPredictOutputConfig';
import BatchPredictOutputInfo from './model/BatchPredictOutputInfo';
import BatchPredictRequest from './model/BatchPredictRequest';
import BatchPredictResult from './model/BatchPredictResult';
import BigQueryDestination from './model/BigQueryDestination';
import BigQuerySource from './model/BigQuerySource';
import Binding from './model/Binding';
import BoundingBoxMetricsEntry from './model/BoundingBoxMetricsEntry';
import BoundingBoxMetricsEntryConfidenceMetricsEntry from './model/BoundingBoxMetricsEntryConfidenceMetricsEntry';
import BoundingPoly from './model/BoundingPoly';
import CategoryStats from './model/CategoryStats';
import ClassificationAnnotation from './model/ClassificationAnnotation';
import ClassificationEvaluationMetrics from './model/ClassificationEvaluationMetrics';
import ClassificationEvaluationMetricsConfidenceMetricsEntry from './model/ClassificationEvaluationMetricsConfidenceMetricsEntry';
import ClassificationEvaluationMetricsConfusionMatrixRow from './model/ClassificationEvaluationMetricsConfusionMatrixRow';
import ColumnSpec from './model/ColumnSpec';
import ConfusionMatrix from './model/ConfusionMatrix';
import CorrelatedColumn from './model/CorrelatedColumn';
import CorrelationStats from './model/CorrelationStats';
import DataStats from './model/DataStats';
import DataType from './model/DataType';
import Dataset from './model/Dataset';
import DeployModelRequest from './model/DeployModelRequest';
import Document from './model/Document';
import DocumentDimensions from './model/DocumentDimensions';
import DocumentInputConfig from './model/DocumentInputConfig';
import DoubleRange from './model/DoubleRange';
import ExamplePayload from './model/ExamplePayload';
import ExportDataOperationMetadata from './model/ExportDataOperationMetadata';
import ExportDataOutputInfo from './model/ExportDataOutputInfo';
import ExportDataRequest from './model/ExportDataRequest';
import ExportEvaluatedExamplesOperationMetadata from './model/ExportEvaluatedExamplesOperationMetadata';
import ExportEvaluatedExamplesOutputConfig from './model/ExportEvaluatedExamplesOutputConfig';
import ExportEvaluatedExamplesOutputInfo from './model/ExportEvaluatedExamplesOutputInfo';
import ExportEvaluatedExamplesRequest from './model/ExportEvaluatedExamplesRequest';
import ExportModelOperationMetadata from './model/ExportModelOperationMetadata';
import ExportModelOutputInfo from './model/ExportModelOutputInfo';
import ExportModelRequest from './model/ExportModelRequest';
import Expr from './model/Expr';
import Float64Stats from './model/Float64Stats';
import GcrDestination from './model/GcrDestination';
import GcsDestination from './model/GcsDestination';
import GcsSource from './model/GcsSource';
import GranularStats from './model/GranularStats';
import HistogramBucket from './model/HistogramBucket';
import Image from './model/Image';
import ImageClassificationDatasetMetadata from './model/ImageClassificationDatasetMetadata';
import ImageClassificationModelDeploymentMetadata from './model/ImageClassificationModelDeploymentMetadata';
import ImageClassificationModelMetadata from './model/ImageClassificationModelMetadata';
import ImageObjectDetectionAnnotation from './model/ImageObjectDetectionAnnotation';
import ImageObjectDetectionEvaluationMetrics from './model/ImageObjectDetectionEvaluationMetrics';
import ImageObjectDetectionModelDeploymentMetadata from './model/ImageObjectDetectionModelDeploymentMetadata';
import ImageObjectDetectionModelMetadata from './model/ImageObjectDetectionModelMetadata';
import ImportDataRequest from './model/ImportDataRequest';
import InputConfig from './model/InputConfig';
import Layout from './model/Layout';
import ListColumnSpecsResponse from './model/ListColumnSpecsResponse';
import ListDatasetsResponse from './model/ListDatasetsResponse';
import ListLocationsResponse from './model/ListLocationsResponse';
import ListModelEvaluationsResponse from './model/ListModelEvaluationsResponse';
import ListModelsResponse from './model/ListModelsResponse';
import ListOperationsResponse from './model/ListOperationsResponse';
import ListTableSpecsResponse from './model/ListTableSpecsResponse';
import Location from './model/Location';
import Model from './model/Model';
import ModelEvaluation from './model/ModelEvaluation';
import ModelExportOutputConfig from './model/ModelExportOutputConfig';
import NormalizedVertex from './model/NormalizedVertex';
import Operation from './model/Operation';
import OperationMetadata from './model/OperationMetadata';
import OutputConfig from './model/OutputConfig';
import Policy from './model/Policy';
import PredictRequest from './model/PredictRequest';
import PredictResponse from './model/PredictResponse';
import RegressionEvaluationMetrics from './model/RegressionEvaluationMetrics';
import Row from './model/Row';
import SetIamPolicyRequest from './model/SetIamPolicyRequest';
import SingleCategoryStats from './model/SingleCategoryStats';
import Status from './model/Status';
import StringStats from './model/StringStats';
import StructStats from './model/StructStats';
import StructType from './model/StructType';
import TableSpec from './model/TableSpec';
import TablesAnnotation from './model/TablesAnnotation';
import TablesDatasetMetadata from './model/TablesDatasetMetadata';
import TablesModelColumnInfo from './model/TablesModelColumnInfo';
import TablesModelMetadata from './model/TablesModelMetadata';
import TestIamPermissionsRequest from './model/TestIamPermissionsRequest';
import TestIamPermissionsResponse from './model/TestIamPermissionsResponse';
import TextClassificationDatasetMetadata from './model/TextClassificationDatasetMetadata';
import TextClassificationModelMetadata from './model/TextClassificationModelMetadata';
import TextExtractionAnnotation from './model/TextExtractionAnnotation';
import TextExtractionEvaluationMetrics from './model/TextExtractionEvaluationMetrics';
import TextExtractionEvaluationMetricsConfidenceMetricsEntry from './model/TextExtractionEvaluationMetricsConfidenceMetricsEntry';
import TextExtractionModelMetadata from './model/TextExtractionModelMetadata';
import TextSegment from './model/TextSegment';
import TextSentimentAnnotation from './model/TextSentimentAnnotation';
import TextSentimentDatasetMetadata from './model/TextSentimentDatasetMetadata';
import TextSentimentEvaluationMetrics from './model/TextSentimentEvaluationMetrics';
import TextSnippet from './model/TextSnippet';
import TimeSegment from './model/TimeSegment';
import TimestampStats from './model/TimestampStats';
import TranslationAnnotation from './model/TranslationAnnotation';
import TranslationDatasetMetadata from './model/TranslationDatasetMetadata';
import TranslationEvaluationMetrics from './model/TranslationEvaluationMetrics';
import TranslationModelMetadata from './model/TranslationModelMetadata';
import UnigramStats from './model/UnigramStats';
import VideoClassificationAnnotation from './model/VideoClassificationAnnotation';
import VideoObjectTrackingAnnotation from './model/VideoObjectTrackingAnnotation';
import VideoObjectTrackingEvaluationMetrics from './model/VideoObjectTrackingEvaluationMetrics';
import WaitOperationRequest from './model/WaitOperationRequest';
import ProjectsApi from './api/ProjectsApi';


/**
* Train high-quality custom machine learning models with minimum effort and machine learning expertise..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var CloudAutoMlApi = require('index'); // See note below*.
* var xxxSvc = new CloudAutoMlApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new CloudAutoMlApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new CloudAutoMlApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new CloudAutoMlApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v1beta1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AnnotationPayload model constructor.
     * @property {module:model/AnnotationPayload}
     */
    AnnotationPayload,

    /**
     * The AnnotationSpec model constructor.
     * @property {module:model/AnnotationSpec}
     */
    AnnotationSpec,

    /**
     * The ArrayStats model constructor.
     * @property {module:model/ArrayStats}
     */
    ArrayStats,

    /**
     * The BatchPredictInputConfig model constructor.
     * @property {module:model/BatchPredictInputConfig}
     */
    BatchPredictInputConfig,

    /**
     * The BatchPredictOperationMetadata model constructor.
     * @property {module:model/BatchPredictOperationMetadata}
     */
    BatchPredictOperationMetadata,

    /**
     * The BatchPredictOutputConfig model constructor.
     * @property {module:model/BatchPredictOutputConfig}
     */
    BatchPredictOutputConfig,

    /**
     * The BatchPredictOutputInfo model constructor.
     * @property {module:model/BatchPredictOutputInfo}
     */
    BatchPredictOutputInfo,

    /**
     * The BatchPredictRequest model constructor.
     * @property {module:model/BatchPredictRequest}
     */
    BatchPredictRequest,

    /**
     * The BatchPredictResult model constructor.
     * @property {module:model/BatchPredictResult}
     */
    BatchPredictResult,

    /**
     * The BigQueryDestination model constructor.
     * @property {module:model/BigQueryDestination}
     */
    BigQueryDestination,

    /**
     * The BigQuerySource model constructor.
     * @property {module:model/BigQuerySource}
     */
    BigQuerySource,

    /**
     * The Binding model constructor.
     * @property {module:model/Binding}
     */
    Binding,

    /**
     * The BoundingBoxMetricsEntry model constructor.
     * @property {module:model/BoundingBoxMetricsEntry}
     */
    BoundingBoxMetricsEntry,

    /**
     * The BoundingBoxMetricsEntryConfidenceMetricsEntry model constructor.
     * @property {module:model/BoundingBoxMetricsEntryConfidenceMetricsEntry}
     */
    BoundingBoxMetricsEntryConfidenceMetricsEntry,

    /**
     * The BoundingPoly model constructor.
     * @property {module:model/BoundingPoly}
     */
    BoundingPoly,

    /**
     * The CategoryStats model constructor.
     * @property {module:model/CategoryStats}
     */
    CategoryStats,

    /**
     * The ClassificationAnnotation model constructor.
     * @property {module:model/ClassificationAnnotation}
     */
    ClassificationAnnotation,

    /**
     * The ClassificationEvaluationMetrics model constructor.
     * @property {module:model/ClassificationEvaluationMetrics}
     */
    ClassificationEvaluationMetrics,

    /**
     * The ClassificationEvaluationMetricsConfidenceMetricsEntry model constructor.
     * @property {module:model/ClassificationEvaluationMetricsConfidenceMetricsEntry}
     */
    ClassificationEvaluationMetricsConfidenceMetricsEntry,

    /**
     * The ClassificationEvaluationMetricsConfusionMatrixRow model constructor.
     * @property {module:model/ClassificationEvaluationMetricsConfusionMatrixRow}
     */
    ClassificationEvaluationMetricsConfusionMatrixRow,

    /**
     * The ColumnSpec model constructor.
     * @property {module:model/ColumnSpec}
     */
    ColumnSpec,

    /**
     * The ConfusionMatrix model constructor.
     * @property {module:model/ConfusionMatrix}
     */
    ConfusionMatrix,

    /**
     * The CorrelatedColumn model constructor.
     * @property {module:model/CorrelatedColumn}
     */
    CorrelatedColumn,

    /**
     * The CorrelationStats model constructor.
     * @property {module:model/CorrelationStats}
     */
    CorrelationStats,

    /**
     * The DataStats model constructor.
     * @property {module:model/DataStats}
     */
    DataStats,

    /**
     * The DataType model constructor.
     * @property {module:model/DataType}
     */
    DataType,

    /**
     * The Dataset model constructor.
     * @property {module:model/Dataset}
     */
    Dataset,

    /**
     * The DeployModelRequest model constructor.
     * @property {module:model/DeployModelRequest}
     */
    DeployModelRequest,

    /**
     * The Document model constructor.
     * @property {module:model/Document}
     */
    Document,

    /**
     * The DocumentDimensions model constructor.
     * @property {module:model/DocumentDimensions}
     */
    DocumentDimensions,

    /**
     * The DocumentInputConfig model constructor.
     * @property {module:model/DocumentInputConfig}
     */
    DocumentInputConfig,

    /**
     * The DoubleRange model constructor.
     * @property {module:model/DoubleRange}
     */
    DoubleRange,

    /**
     * The ExamplePayload model constructor.
     * @property {module:model/ExamplePayload}
     */
    ExamplePayload,

    /**
     * The ExportDataOperationMetadata model constructor.
     * @property {module:model/ExportDataOperationMetadata}
     */
    ExportDataOperationMetadata,

    /**
     * The ExportDataOutputInfo model constructor.
     * @property {module:model/ExportDataOutputInfo}
     */
    ExportDataOutputInfo,

    /**
     * The ExportDataRequest model constructor.
     * @property {module:model/ExportDataRequest}
     */
    ExportDataRequest,

    /**
     * The ExportEvaluatedExamplesOperationMetadata model constructor.
     * @property {module:model/ExportEvaluatedExamplesOperationMetadata}
     */
    ExportEvaluatedExamplesOperationMetadata,

    /**
     * The ExportEvaluatedExamplesOutputConfig model constructor.
     * @property {module:model/ExportEvaluatedExamplesOutputConfig}
     */
    ExportEvaluatedExamplesOutputConfig,

    /**
     * The ExportEvaluatedExamplesOutputInfo model constructor.
     * @property {module:model/ExportEvaluatedExamplesOutputInfo}
     */
    ExportEvaluatedExamplesOutputInfo,

    /**
     * The ExportEvaluatedExamplesRequest model constructor.
     * @property {module:model/ExportEvaluatedExamplesRequest}
     */
    ExportEvaluatedExamplesRequest,

    /**
     * The ExportModelOperationMetadata model constructor.
     * @property {module:model/ExportModelOperationMetadata}
     */
    ExportModelOperationMetadata,

    /**
     * The ExportModelOutputInfo model constructor.
     * @property {module:model/ExportModelOutputInfo}
     */
    ExportModelOutputInfo,

    /**
     * The ExportModelRequest model constructor.
     * @property {module:model/ExportModelRequest}
     */
    ExportModelRequest,

    /**
     * The Expr model constructor.
     * @property {module:model/Expr}
     */
    Expr,

    /**
     * The Float64Stats model constructor.
     * @property {module:model/Float64Stats}
     */
    Float64Stats,

    /**
     * The GcrDestination model constructor.
     * @property {module:model/GcrDestination}
     */
    GcrDestination,

    /**
     * The GcsDestination model constructor.
     * @property {module:model/GcsDestination}
     */
    GcsDestination,

    /**
     * The GcsSource model constructor.
     * @property {module:model/GcsSource}
     */
    GcsSource,

    /**
     * The GranularStats model constructor.
     * @property {module:model/GranularStats}
     */
    GranularStats,

    /**
     * The HistogramBucket model constructor.
     * @property {module:model/HistogramBucket}
     */
    HistogramBucket,

    /**
     * The Image model constructor.
     * @property {module:model/Image}
     */
    Image,

    /**
     * The ImageClassificationDatasetMetadata model constructor.
     * @property {module:model/ImageClassificationDatasetMetadata}
     */
    ImageClassificationDatasetMetadata,

    /**
     * The ImageClassificationModelDeploymentMetadata model constructor.
     * @property {module:model/ImageClassificationModelDeploymentMetadata}
     */
    ImageClassificationModelDeploymentMetadata,

    /**
     * The ImageClassificationModelMetadata model constructor.
     * @property {module:model/ImageClassificationModelMetadata}
     */
    ImageClassificationModelMetadata,

    /**
     * The ImageObjectDetectionAnnotation model constructor.
     * @property {module:model/ImageObjectDetectionAnnotation}
     */
    ImageObjectDetectionAnnotation,

    /**
     * The ImageObjectDetectionEvaluationMetrics model constructor.
     * @property {module:model/ImageObjectDetectionEvaluationMetrics}
     */
    ImageObjectDetectionEvaluationMetrics,

    /**
     * The ImageObjectDetectionModelDeploymentMetadata model constructor.
     * @property {module:model/ImageObjectDetectionModelDeploymentMetadata}
     */
    ImageObjectDetectionModelDeploymentMetadata,

    /**
     * The ImageObjectDetectionModelMetadata model constructor.
     * @property {module:model/ImageObjectDetectionModelMetadata}
     */
    ImageObjectDetectionModelMetadata,

    /**
     * The ImportDataRequest model constructor.
     * @property {module:model/ImportDataRequest}
     */
    ImportDataRequest,

    /**
     * The InputConfig model constructor.
     * @property {module:model/InputConfig}
     */
    InputConfig,

    /**
     * The Layout model constructor.
     * @property {module:model/Layout}
     */
    Layout,

    /**
     * The ListColumnSpecsResponse model constructor.
     * @property {module:model/ListColumnSpecsResponse}
     */
    ListColumnSpecsResponse,

    /**
     * The ListDatasetsResponse model constructor.
     * @property {module:model/ListDatasetsResponse}
     */
    ListDatasetsResponse,

    /**
     * The ListLocationsResponse model constructor.
     * @property {module:model/ListLocationsResponse}
     */
    ListLocationsResponse,

    /**
     * The ListModelEvaluationsResponse model constructor.
     * @property {module:model/ListModelEvaluationsResponse}
     */
    ListModelEvaluationsResponse,

    /**
     * The ListModelsResponse model constructor.
     * @property {module:model/ListModelsResponse}
     */
    ListModelsResponse,

    /**
     * The ListOperationsResponse model constructor.
     * @property {module:model/ListOperationsResponse}
     */
    ListOperationsResponse,

    /**
     * The ListTableSpecsResponse model constructor.
     * @property {module:model/ListTableSpecsResponse}
     */
    ListTableSpecsResponse,

    /**
     * The Location model constructor.
     * @property {module:model/Location}
     */
    Location,

    /**
     * The Model model constructor.
     * @property {module:model/Model}
     */
    Model,

    /**
     * The ModelEvaluation model constructor.
     * @property {module:model/ModelEvaluation}
     */
    ModelEvaluation,

    /**
     * The ModelExportOutputConfig model constructor.
     * @property {module:model/ModelExportOutputConfig}
     */
    ModelExportOutputConfig,

    /**
     * The NormalizedVertex model constructor.
     * @property {module:model/NormalizedVertex}
     */
    NormalizedVertex,

    /**
     * The Operation model constructor.
     * @property {module:model/Operation}
     */
    Operation,

    /**
     * The OperationMetadata model constructor.
     * @property {module:model/OperationMetadata}
     */
    OperationMetadata,

    /**
     * The OutputConfig model constructor.
     * @property {module:model/OutputConfig}
     */
    OutputConfig,

    /**
     * The Policy model constructor.
     * @property {module:model/Policy}
     */
    Policy,

    /**
     * The PredictRequest model constructor.
     * @property {module:model/PredictRequest}
     */
    PredictRequest,

    /**
     * The PredictResponse model constructor.
     * @property {module:model/PredictResponse}
     */
    PredictResponse,

    /**
     * The RegressionEvaluationMetrics model constructor.
     * @property {module:model/RegressionEvaluationMetrics}
     */
    RegressionEvaluationMetrics,

    /**
     * The Row model constructor.
     * @property {module:model/Row}
     */
    Row,

    /**
     * The SetIamPolicyRequest model constructor.
     * @property {module:model/SetIamPolicyRequest}
     */
    SetIamPolicyRequest,

    /**
     * The SingleCategoryStats model constructor.
     * @property {module:model/SingleCategoryStats}
     */
    SingleCategoryStats,

    /**
     * The Status model constructor.
     * @property {module:model/Status}
     */
    Status,

    /**
     * The StringStats model constructor.
     * @property {module:model/StringStats}
     */
    StringStats,

    /**
     * The StructStats model constructor.
     * @property {module:model/StructStats}
     */
    StructStats,

    /**
     * The StructType model constructor.
     * @property {module:model/StructType}
     */
    StructType,

    /**
     * The TableSpec model constructor.
     * @property {module:model/TableSpec}
     */
    TableSpec,

    /**
     * The TablesAnnotation model constructor.
     * @property {module:model/TablesAnnotation}
     */
    TablesAnnotation,

    /**
     * The TablesDatasetMetadata model constructor.
     * @property {module:model/TablesDatasetMetadata}
     */
    TablesDatasetMetadata,

    /**
     * The TablesModelColumnInfo model constructor.
     * @property {module:model/TablesModelColumnInfo}
     */
    TablesModelColumnInfo,

    /**
     * The TablesModelMetadata model constructor.
     * @property {module:model/TablesModelMetadata}
     */
    TablesModelMetadata,

    /**
     * The TestIamPermissionsRequest model constructor.
     * @property {module:model/TestIamPermissionsRequest}
     */
    TestIamPermissionsRequest,

    /**
     * The TestIamPermissionsResponse model constructor.
     * @property {module:model/TestIamPermissionsResponse}
     */
    TestIamPermissionsResponse,

    /**
     * The TextClassificationDatasetMetadata model constructor.
     * @property {module:model/TextClassificationDatasetMetadata}
     */
    TextClassificationDatasetMetadata,

    /**
     * The TextClassificationModelMetadata model constructor.
     * @property {module:model/TextClassificationModelMetadata}
     */
    TextClassificationModelMetadata,

    /**
     * The TextExtractionAnnotation model constructor.
     * @property {module:model/TextExtractionAnnotation}
     */
    TextExtractionAnnotation,

    /**
     * The TextExtractionEvaluationMetrics model constructor.
     * @property {module:model/TextExtractionEvaluationMetrics}
     */
    TextExtractionEvaluationMetrics,

    /**
     * The TextExtractionEvaluationMetricsConfidenceMetricsEntry model constructor.
     * @property {module:model/TextExtractionEvaluationMetricsConfidenceMetricsEntry}
     */
    TextExtractionEvaluationMetricsConfidenceMetricsEntry,

    /**
     * The TextExtractionModelMetadata model constructor.
     * @property {module:model/TextExtractionModelMetadata}
     */
    TextExtractionModelMetadata,

    /**
     * The TextSegment model constructor.
     * @property {module:model/TextSegment}
     */
    TextSegment,

    /**
     * The TextSentimentAnnotation model constructor.
     * @property {module:model/TextSentimentAnnotation}
     */
    TextSentimentAnnotation,

    /**
     * The TextSentimentDatasetMetadata model constructor.
     * @property {module:model/TextSentimentDatasetMetadata}
     */
    TextSentimentDatasetMetadata,

    /**
     * The TextSentimentEvaluationMetrics model constructor.
     * @property {module:model/TextSentimentEvaluationMetrics}
     */
    TextSentimentEvaluationMetrics,

    /**
     * The TextSnippet model constructor.
     * @property {module:model/TextSnippet}
     */
    TextSnippet,

    /**
     * The TimeSegment model constructor.
     * @property {module:model/TimeSegment}
     */
    TimeSegment,

    /**
     * The TimestampStats model constructor.
     * @property {module:model/TimestampStats}
     */
    TimestampStats,

    /**
     * The TranslationAnnotation model constructor.
     * @property {module:model/TranslationAnnotation}
     */
    TranslationAnnotation,

    /**
     * The TranslationDatasetMetadata model constructor.
     * @property {module:model/TranslationDatasetMetadata}
     */
    TranslationDatasetMetadata,

    /**
     * The TranslationEvaluationMetrics model constructor.
     * @property {module:model/TranslationEvaluationMetrics}
     */
    TranslationEvaluationMetrics,

    /**
     * The TranslationModelMetadata model constructor.
     * @property {module:model/TranslationModelMetadata}
     */
    TranslationModelMetadata,

    /**
     * The UnigramStats model constructor.
     * @property {module:model/UnigramStats}
     */
    UnigramStats,

    /**
     * The VideoClassificationAnnotation model constructor.
     * @property {module:model/VideoClassificationAnnotation}
     */
    VideoClassificationAnnotation,

    /**
     * The VideoObjectTrackingAnnotation model constructor.
     * @property {module:model/VideoObjectTrackingAnnotation}
     */
    VideoObjectTrackingAnnotation,

    /**
     * The VideoObjectTrackingEvaluationMetrics model constructor.
     * @property {module:model/VideoObjectTrackingEvaluationMetrics}
     */
    VideoObjectTrackingEvaluationMetrics,

    /**
     * The WaitOperationRequest model constructor.
     * @property {module:model/WaitOperationRequest}
     */
    WaitOperationRequest,

    /**
    * The ProjectsApi service constructor.
    * @property {module:api/ProjectsApi}
    */
    ProjectsApi
};
