/**
 * Cloud AutoML API
 * Train high-quality custom machine learning models with minimum effort and machine learning expertise.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BatchPredictInputConfig from './BatchPredictInputConfig';
import BatchPredictOutputConfig from './BatchPredictOutputConfig';

/**
 * The BatchPredictRequest model module.
 * @module model/BatchPredictRequest
 * @version v1beta1
 */
class BatchPredictRequest {
    /**
     * Constructs a new <code>BatchPredictRequest</code>.
     * Request message for PredictionService.BatchPredict.
     * @alias module:model/BatchPredictRequest
     */
    constructor() { 
        
        BatchPredictRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BatchPredictRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BatchPredictRequest} obj Optional instance to populate.
     * @return {module:model/BatchPredictRequest} The populated <code>BatchPredictRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BatchPredictRequest();

            if (data.hasOwnProperty('inputConfig')) {
                obj['inputConfig'] = BatchPredictInputConfig.constructFromObject(data['inputConfig']);
            }
            if (data.hasOwnProperty('outputConfig')) {
                obj['outputConfig'] = BatchPredictOutputConfig.constructFromObject(data['outputConfig']);
            }
            if (data.hasOwnProperty('params')) {
                obj['params'] = ApiClient.convertToType(data['params'], {'String': 'String'});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BatchPredictRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BatchPredictRequest</code>.
     */
    static validateJSON(data) {
        // validate the optional field `inputConfig`
        if (data['inputConfig']) { // data not null
          BatchPredictInputConfig.validateJSON(data['inputConfig']);
        }
        // validate the optional field `outputConfig`
        if (data['outputConfig']) { // data not null
          BatchPredictOutputConfig.validateJSON(data['outputConfig']);
        }

        return true;
    }


}



/**
 * @member {module:model/BatchPredictInputConfig} inputConfig
 */
BatchPredictRequest.prototype['inputConfig'] = undefined;

/**
 * @member {module:model/BatchPredictOutputConfig} outputConfig
 */
BatchPredictRequest.prototype['outputConfig'] = undefined;

/**
 * Required. Additional domain-specific parameters for the predictions, any string must be up to 25000 characters long. * For Text Classification: `score_threshold` - (float) A value from 0.0 to 1.0. When the model makes predictions for a text snippet, it will only produce results that have at least this confidence score. The default is 0.5. * For Image Classification: `score_threshold` - (float) A value from 0.0 to 1.0. When the model makes predictions for an image, it will only produce results that have at least this confidence score. The default is 0.5. * For Image Object Detection: `score_threshold` - (float) When Model detects objects on the image, it will only produce bounding boxes which have at least this confidence score. Value in 0 to 1 range, default is 0.5. `max_bounding_box_count` - (int64) No more than this number of bounding boxes will be produced per image. Default is 100, the requested value may be limited by server. * For Video Classification : `score_threshold` - (float) A value from 0.0 to 1.0. When the model makes predictions for a video, it will only produce results that have at least this confidence score. The default is 0.5. `segment_classification` - (boolean) Set to true to request segment-level classification. AutoML Video Intelligence returns labels and their confidence scores for the entire segment of the video that user specified in the request configuration. The default is \"true\". `shot_classification` - (boolean) Set to true to request shot-level classification. AutoML Video Intelligence determines the boundaries for each camera shot in the entire segment of the video that user specified in the request configuration. AutoML Video Intelligence then returns labels and their confidence scores for each detected shot, along with the start and end time of the shot. WARNING: Model evaluation is not done for this classification type, the quality of it depends on training data, but there are no metrics provided to describe that quality. The default is \"false\". `1s_interval_classification` - (boolean) Set to true to request classification for a video at one-second intervals. AutoML Video Intelligence returns labels and their confidence scores for each second of the entire segment of the video that user specified in the request configuration. WARNING: Model evaluation is not done for this classification type, the quality of it depends on training data, but there are no metrics provided to describe that quality. The default is \"false\". * For Tables: feature_importance - (boolean) Whether feature importance should be populated in the returned TablesAnnotations. The default is false. * For Video Object Tracking: `score_threshold` - (float) When Model detects objects on video frames, it will only produce bounding boxes which have at least this confidence score. Value in 0 to 1 range, default is 0.5. `max_bounding_box_count` - (int64) No more than this number of bounding boxes will be returned per frame. Default is 100, the requested value may be limited by server. `min_bounding_box_size` - (float) Only bounding boxes with shortest edge at least that long as a relative value of video frame size will be returned. Value in 0 to 1 range. Default is 0.
 * @member {Object.<String, String>} params
 */
BatchPredictRequest.prototype['params'] = undefined;






export default BatchPredictRequest;

