/**
 * Cloud AutoML API
 * Train high-quality custom machine learning models with minimum effort and machine learning expertise.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BoundingPoly from './BoundingPoly';

/**
 * The VideoObjectTrackingAnnotation model module.
 * @module model/VideoObjectTrackingAnnotation
 * @version v1beta1
 */
class VideoObjectTrackingAnnotation {
    /**
     * Constructs a new <code>VideoObjectTrackingAnnotation</code>.
     * Annotation details for video object tracking.
     * @alias module:model/VideoObjectTrackingAnnotation
     */
    constructor() { 
        
        VideoObjectTrackingAnnotation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VideoObjectTrackingAnnotation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VideoObjectTrackingAnnotation} obj Optional instance to populate.
     * @return {module:model/VideoObjectTrackingAnnotation} The populated <code>VideoObjectTrackingAnnotation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VideoObjectTrackingAnnotation();

            if (data.hasOwnProperty('boundingBox')) {
                obj['boundingBox'] = BoundingPoly.constructFromObject(data['boundingBox']);
            }
            if (data.hasOwnProperty('instanceId')) {
                obj['instanceId'] = ApiClient.convertToType(data['instanceId'], 'String');
            }
            if (data.hasOwnProperty('score')) {
                obj['score'] = ApiClient.convertToType(data['score'], 'Number');
            }
            if (data.hasOwnProperty('timeOffset')) {
                obj['timeOffset'] = ApiClient.convertToType(data['timeOffset'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VideoObjectTrackingAnnotation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VideoObjectTrackingAnnotation</code>.
     */
    static validateJSON(data) {
        // validate the optional field `boundingBox`
        if (data['boundingBox']) { // data not null
          BoundingPoly.validateJSON(data['boundingBox']);
        }
        // ensure the json data is a string
        if (data['instanceId'] && !(typeof data['instanceId'] === 'string' || data['instanceId'] instanceof String)) {
            throw new Error("Expected the field `instanceId` to be a primitive type in the JSON string but got " + data['instanceId']);
        }
        // ensure the json data is a string
        if (data['timeOffset'] && !(typeof data['timeOffset'] === 'string' || data['timeOffset'] instanceof String)) {
            throw new Error("Expected the field `timeOffset` to be a primitive type in the JSON string but got " + data['timeOffset']);
        }

        return true;
    }


}



/**
 * @member {module:model/BoundingPoly} boundingBox
 */
VideoObjectTrackingAnnotation.prototype['boundingBox'] = undefined;

/**
 * Optional. The instance of the object, expressed as a positive integer. Used to tell apart objects of the same type (i.e. AnnotationSpec) when multiple are present on a single example. NOTE: Instance ID prediction quality is not a part of model evaluation and is done as best effort. Especially in cases when an entity goes off-screen for a longer time (minutes), when it comes back it may be given a new instance ID.
 * @member {String} instanceId
 */
VideoObjectTrackingAnnotation.prototype['instanceId'] = undefined;

/**
 * Output only. The confidence that this annotation is positive for the video at the time_offset, value in [0, 1], higher means higher positivity confidence. For annotations created by the user the score is 1. When user approves an annotation, the original float score is kept (and not changed to 1).
 * @member {Number} score
 */
VideoObjectTrackingAnnotation.prototype['score'] = undefined;

/**
 * Required. A time (frame) of a video to which this annotation pertains. Represented as the duration since the video's start.
 * @member {String} timeOffset
 */
VideoObjectTrackingAnnotation.prototype['timeOffset'] = undefined;






export default VideoObjectTrackingAnnotation;

