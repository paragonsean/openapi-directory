/**
 * Cloud AutoML API
 * Train high-quality custom machine learning models with minimum effort and machine learning expertise.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ArrayStats from './ArrayStats';
import CategoryStats from './CategoryStats';
import Float64Stats from './Float64Stats';
import StringStats from './StringStats';
import StructStats from './StructStats';
import TimestampStats from './TimestampStats';

/**
 * The DataStats model module.
 * @module model/DataStats
 * @version v1beta1
 */
class DataStats {
    /**
     * Constructs a new <code>DataStats</code>.
     * The data statistics of a series of values that share the same DataType.
     * @alias module:model/DataStats
     */
    constructor() { 
        
        DataStats.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DataStats</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DataStats} obj Optional instance to populate.
     * @return {module:model/DataStats} The populated <code>DataStats</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DataStats();

            if (data.hasOwnProperty('arrayStats')) {
                obj['arrayStats'] = ArrayStats.constructFromObject(data['arrayStats']);
            }
            if (data.hasOwnProperty('categoryStats')) {
                obj['categoryStats'] = CategoryStats.constructFromObject(data['categoryStats']);
            }
            if (data.hasOwnProperty('distinctValueCount')) {
                obj['distinctValueCount'] = ApiClient.convertToType(data['distinctValueCount'], 'String');
            }
            if (data.hasOwnProperty('float64Stats')) {
                obj['float64Stats'] = Float64Stats.constructFromObject(data['float64Stats']);
            }
            if (data.hasOwnProperty('nullValueCount')) {
                obj['nullValueCount'] = ApiClient.convertToType(data['nullValueCount'], 'String');
            }
            if (data.hasOwnProperty('stringStats')) {
                obj['stringStats'] = StringStats.constructFromObject(data['stringStats']);
            }
            if (data.hasOwnProperty('structStats')) {
                obj['structStats'] = StructStats.constructFromObject(data['structStats']);
            }
            if (data.hasOwnProperty('timestampStats')) {
                obj['timestampStats'] = TimestampStats.constructFromObject(data['timestampStats']);
            }
            if (data.hasOwnProperty('validValueCount')) {
                obj['validValueCount'] = ApiClient.convertToType(data['validValueCount'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DataStats</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DataStats</code>.
     */
    static validateJSON(data) {
        // validate the optional field `arrayStats`
        if (data['arrayStats']) { // data not null
          ArrayStats.validateJSON(data['arrayStats']);
        }
        // validate the optional field `categoryStats`
        if (data['categoryStats']) { // data not null
          CategoryStats.validateJSON(data['categoryStats']);
        }
        // ensure the json data is a string
        if (data['distinctValueCount'] && !(typeof data['distinctValueCount'] === 'string' || data['distinctValueCount'] instanceof String)) {
            throw new Error("Expected the field `distinctValueCount` to be a primitive type in the JSON string but got " + data['distinctValueCount']);
        }
        // validate the optional field `float64Stats`
        if (data['float64Stats']) { // data not null
          Float64Stats.validateJSON(data['float64Stats']);
        }
        // ensure the json data is a string
        if (data['nullValueCount'] && !(typeof data['nullValueCount'] === 'string' || data['nullValueCount'] instanceof String)) {
            throw new Error("Expected the field `nullValueCount` to be a primitive type in the JSON string but got " + data['nullValueCount']);
        }
        // validate the optional field `stringStats`
        if (data['stringStats']) { // data not null
          StringStats.validateJSON(data['stringStats']);
        }
        // validate the optional field `structStats`
        if (data['structStats']) { // data not null
          StructStats.validateJSON(data['structStats']);
        }
        // validate the optional field `timestampStats`
        if (data['timestampStats']) { // data not null
          TimestampStats.validateJSON(data['timestampStats']);
        }
        // ensure the json data is a string
        if (data['validValueCount'] && !(typeof data['validValueCount'] === 'string' || data['validValueCount'] instanceof String)) {
            throw new Error("Expected the field `validValueCount` to be a primitive type in the JSON string but got " + data['validValueCount']);
        }

        return true;
    }


}



/**
 * @member {module:model/ArrayStats} arrayStats
 */
DataStats.prototype['arrayStats'] = undefined;

/**
 * @member {module:model/CategoryStats} categoryStats
 */
DataStats.prototype['categoryStats'] = undefined;

/**
 * The number of distinct values.
 * @member {String} distinctValueCount
 */
DataStats.prototype['distinctValueCount'] = undefined;

/**
 * @member {module:model/Float64Stats} float64Stats
 */
DataStats.prototype['float64Stats'] = undefined;

/**
 * The number of values that are null.
 * @member {String} nullValueCount
 */
DataStats.prototype['nullValueCount'] = undefined;

/**
 * @member {module:model/StringStats} stringStats
 */
DataStats.prototype['stringStats'] = undefined;

/**
 * @member {module:model/StructStats} structStats
 */
DataStats.prototype['structStats'] = undefined;

/**
 * @member {module:model/TimestampStats} timestampStats
 */
DataStats.prototype['timestampStats'] = undefined;

/**
 * The number of values that are valid.
 * @member {String} validValueCount
 */
DataStats.prototype['validValueCount'] = undefined;






export default DataStats;

