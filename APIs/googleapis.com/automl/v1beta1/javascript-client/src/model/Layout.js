/**
 * Cloud AutoML API
 * Train high-quality custom machine learning models with minimum effort and machine learning expertise.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BoundingPoly from './BoundingPoly';
import TextSegment from './TextSegment';

/**
 * The Layout model module.
 * @module model/Layout
 * @version v1beta1
 */
class Layout {
    /**
     * Constructs a new <code>Layout</code>.
     * Describes the layout information of a text_segment in the document.
     * @alias module:model/Layout
     */
    constructor() { 
        
        Layout.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Layout</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Layout} obj Optional instance to populate.
     * @return {module:model/Layout} The populated <code>Layout</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Layout();

            if (data.hasOwnProperty('boundingPoly')) {
                obj['boundingPoly'] = BoundingPoly.constructFromObject(data['boundingPoly']);
            }
            if (data.hasOwnProperty('pageNumber')) {
                obj['pageNumber'] = ApiClient.convertToType(data['pageNumber'], 'Number');
            }
            if (data.hasOwnProperty('textSegment')) {
                obj['textSegment'] = TextSegment.constructFromObject(data['textSegment']);
            }
            if (data.hasOwnProperty('textSegmentType')) {
                obj['textSegmentType'] = ApiClient.convertToType(data['textSegmentType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Layout</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Layout</code>.
     */
    static validateJSON(data) {
        // validate the optional field `boundingPoly`
        if (data['boundingPoly']) { // data not null
          BoundingPoly.validateJSON(data['boundingPoly']);
        }
        // validate the optional field `textSegment`
        if (data['textSegment']) { // data not null
          TextSegment.validateJSON(data['textSegment']);
        }
        // ensure the json data is a string
        if (data['textSegmentType'] && !(typeof data['textSegmentType'] === 'string' || data['textSegmentType'] instanceof String)) {
            throw new Error("Expected the field `textSegmentType` to be a primitive type in the JSON string but got " + data['textSegmentType']);
        }

        return true;
    }


}



/**
 * @member {module:model/BoundingPoly} boundingPoly
 */
Layout.prototype['boundingPoly'] = undefined;

/**
 * Page number of the text_segment in the original document, starts from 1.
 * @member {Number} pageNumber
 */
Layout.prototype['pageNumber'] = undefined;

/**
 * @member {module:model/TextSegment} textSegment
 */
Layout.prototype['textSegment'] = undefined;

/**
 * The type of the text_segment in document.
 * @member {module:model/Layout.TextSegmentTypeEnum} textSegmentType
 */
Layout.prototype['textSegmentType'] = undefined;





/**
 * Allowed values for the <code>textSegmentType</code> property.
 * @enum {String}
 * @readonly
 */
Layout['TextSegmentTypeEnum'] = {

    /**
     * value: "TEXT_SEGMENT_TYPE_UNSPECIFIED"
     * @const
     */
    "TEXT_SEGMENT_TYPE_UNSPECIFIED": "TEXT_SEGMENT_TYPE_UNSPECIFIED",

    /**
     * value: "TOKEN"
     * @const
     */
    "TOKEN": "TOKEN",

    /**
     * value: "PARAGRAPH"
     * @const
     */
    "PARAGRAPH": "PARAGRAPH",

    /**
     * value: "FORM_FIELD"
     * @const
     */
    "FORM_FIELD": "FORM_FIELD",

    /**
     * value: "FORM_FIELD_NAME"
     * @const
     */
    "FORM_FIELD_NAME": "FORM_FIELD_NAME",

    /**
     * value: "FORM_FIELD_CONTENTS"
     * @const
     */
    "FORM_FIELD_CONTENTS": "FORM_FIELD_CONTENTS",

    /**
     * value: "TABLE"
     * @const
     */
    "TABLE": "TABLE",

    /**
     * value: "TABLE_HEADER"
     * @const
     */
    "TABLE_HEADER": "TABLE_HEADER",

    /**
     * value: "TABLE_ROW"
     * @const
     */
    "TABLE_ROW": "TABLE_ROW",

    /**
     * value: "TABLE_CELL"
     * @const
     */
    "TABLE_CELL": "TABLE_CELL"
};



export default Layout;

