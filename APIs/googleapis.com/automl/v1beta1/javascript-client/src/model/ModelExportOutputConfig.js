/**
 * Cloud AutoML API
 * Train high-quality custom machine learning models with minimum effort and machine learning expertise.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GcrDestination from './GcrDestination';
import GcsDestination from './GcsDestination';

/**
 * The ModelExportOutputConfig model module.
 * @module model/ModelExportOutputConfig
 * @version v1beta1
 */
class ModelExportOutputConfig {
    /**
     * Constructs a new <code>ModelExportOutputConfig</code>.
     * Output configuration for ModelExport Action.
     * @alias module:model/ModelExportOutputConfig
     */
    constructor() { 
        
        ModelExportOutputConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ModelExportOutputConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ModelExportOutputConfig} obj Optional instance to populate.
     * @return {module:model/ModelExportOutputConfig} The populated <code>ModelExportOutputConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ModelExportOutputConfig();

            if (data.hasOwnProperty('gcrDestination')) {
                obj['gcrDestination'] = GcrDestination.constructFromObject(data['gcrDestination']);
            }
            if (data.hasOwnProperty('gcsDestination')) {
                obj['gcsDestination'] = GcsDestination.constructFromObject(data['gcsDestination']);
            }
            if (data.hasOwnProperty('modelFormat')) {
                obj['modelFormat'] = ApiClient.convertToType(data['modelFormat'], 'String');
            }
            if (data.hasOwnProperty('params')) {
                obj['params'] = ApiClient.convertToType(data['params'], {'String': 'String'});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ModelExportOutputConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ModelExportOutputConfig</code>.
     */
    static validateJSON(data) {
        // validate the optional field `gcrDestination`
        if (data['gcrDestination']) { // data not null
          GcrDestination.validateJSON(data['gcrDestination']);
        }
        // validate the optional field `gcsDestination`
        if (data['gcsDestination']) { // data not null
          GcsDestination.validateJSON(data['gcsDestination']);
        }
        // ensure the json data is a string
        if (data['modelFormat'] && !(typeof data['modelFormat'] === 'string' || data['modelFormat'] instanceof String)) {
            throw new Error("Expected the field `modelFormat` to be a primitive type in the JSON string but got " + data['modelFormat']);
        }

        return true;
    }


}



/**
 * @member {module:model/GcrDestination} gcrDestination
 */
ModelExportOutputConfig.prototype['gcrDestination'] = undefined;

/**
 * @member {module:model/GcsDestination} gcsDestination
 */
ModelExportOutputConfig.prototype['gcsDestination'] = undefined;

/**
 * The format in which the model must be exported. The available, and default, formats depend on the problem and model type (if given problem and type combination doesn't have a format listed, it means its models are not exportable): * For Image Classification mobile-low-latency-1, mobile-versatile-1, mobile-high-accuracy-1: \"tflite\" (default), \"edgetpu_tflite\", \"tf_saved_model\", \"tf_js\", \"docker\". * For Image Classification mobile-core-ml-low-latency-1, mobile-core-ml-versatile-1, mobile-core-ml-high-accuracy-1: \"core_ml\" (default). * For Image Object Detection mobile-low-latency-1, mobile-versatile-1, mobile-high-accuracy-1: \"tflite\", \"tf_saved_model\", \"tf_js\". * For Video Classification cloud, \"tf_saved_model\". * For Video Object Tracking cloud, \"tf_saved_model\". * For Video Object Tracking mobile-versatile-1: \"tflite\", \"edgetpu_tflite\", \"tf_saved_model\", \"docker\". * For Video Object Tracking mobile-coral-versatile-1: \"tflite\", \"edgetpu_tflite\", \"docker\". * For Video Object Tracking mobile-coral-low-latency-1: \"tflite\", \"edgetpu_tflite\", \"docker\". * For Video Object Tracking mobile-jetson-versatile-1: \"tf_saved_model\", \"docker\". * For Tables: \"docker\". Formats description: * tflite - Used for Android mobile devices. * edgetpu_tflite - Used for [Edge TPU](https://cloud.google.com/edge-tpu/) devices. * tf_saved_model - A tensorflow model in SavedModel format. * tf_js - A [TensorFlow.js](https://www.tensorflow.org/js) model that can be used in the browser and in Node.js using JavaScript. * docker - Used for Docker containers. Use the params field to customize the container. The container is verified to work correctly on ubuntu 16.04 operating system. See more at [containers quickstart](https: //cloud.google.com/vision/automl/docs/containers-gcs-quickstart) * core_ml - Used for iOS mobile devices.
 * @member {String} modelFormat
 */
ModelExportOutputConfig.prototype['modelFormat'] = undefined;

/**
 * Additional model-type and format specific parameters describing the requirements for the to be exported model files, any string must be up to 25000 characters long. * For `docker` format: `cpu_architecture` - (string) \"x86_64\" (default). `gpu_architecture` - (string) \"none\" (default), \"nvidia\".
 * @member {Object.<String, String>} params
 */
ModelExportOutputConfig.prototype['params'] = undefined;






export default ModelExportOutputConfig;

