/**
 * Cloud AutoML API
 * Train high-quality custom machine learning models with minimum effort and machine learning expertise.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ExamplePayload from './ExamplePayload';

/**
 * The PredictRequest model module.
 * @module model/PredictRequest
 * @version v1beta1
 */
class PredictRequest {
    /**
     * Constructs a new <code>PredictRequest</code>.
     * Request message for PredictionService.Predict.
     * @alias module:model/PredictRequest
     */
    constructor() { 
        
        PredictRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PredictRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PredictRequest} obj Optional instance to populate.
     * @return {module:model/PredictRequest} The populated <code>PredictRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PredictRequest();

            if (data.hasOwnProperty('params')) {
                obj['params'] = ApiClient.convertToType(data['params'], {'String': 'String'});
            }
            if (data.hasOwnProperty('payload')) {
                obj['payload'] = ExamplePayload.constructFromObject(data['payload']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PredictRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PredictRequest</code>.
     */
    static validateJSON(data) {
        // validate the optional field `payload`
        if (data['payload']) { // data not null
          ExamplePayload.validateJSON(data['payload']);
        }

        return true;
    }


}



/**
 * Additional domain-specific parameters, any string must be up to 25000 characters long. * For Image Classification: `score_threshold` - (float) A value from 0.0 to 1.0. When the model makes predictions for an image, it will only produce results that have at least this confidence score. The default is 0.5. * For Image Object Detection: `score_threshold` - (float) When Model detects objects on the image, it will only produce bounding boxes which have at least this confidence score. Value in 0 to 1 range, default is 0.5. `max_bounding_box_count` - (int64) No more than this number of bounding boxes will be returned in the response. Default is 100, the requested value may be limited by server. * For Tables: feature_importance - (boolean) Whether feature importance should be populated in the returned TablesAnnotation. The default is false.
 * @member {Object.<String, String>} params
 */
PredictRequest.prototype['params'] = undefined;

/**
 * @member {module:model/ExamplePayload} payload
 */
PredictRequest.prototype['payload'] = undefined;






export default PredictRequest;

