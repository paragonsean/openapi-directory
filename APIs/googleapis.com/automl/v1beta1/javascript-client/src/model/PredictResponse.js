/**
 * Cloud AutoML API
 * Train high-quality custom machine learning models with minimum effort and machine learning expertise.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AnnotationPayload from './AnnotationPayload';
import ExamplePayload from './ExamplePayload';

/**
 * The PredictResponse model module.
 * @module model/PredictResponse
 * @version v1beta1
 */
class PredictResponse {
    /**
     * Constructs a new <code>PredictResponse</code>.
     * Response message for PredictionService.Predict.
     * @alias module:model/PredictResponse
     */
    constructor() { 
        
        PredictResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PredictResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PredictResponse} obj Optional instance to populate.
     * @return {module:model/PredictResponse} The populated <code>PredictResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PredictResponse();

            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ApiClient.convertToType(data['metadata'], {'String': 'String'});
            }
            if (data.hasOwnProperty('payload')) {
                obj['payload'] = ApiClient.convertToType(data['payload'], [AnnotationPayload]);
            }
            if (data.hasOwnProperty('preprocessedInput')) {
                obj['preprocessedInput'] = ExamplePayload.constructFromObject(data['preprocessedInput']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PredictResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PredictResponse</code>.
     */
    static validateJSON(data) {
        if (data['payload']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['payload'])) {
                throw new Error("Expected the field `payload` to be an array in the JSON data but got " + data['payload']);
            }
            // validate the optional field `payload` (array)
            for (const item of data['payload']) {
                AnnotationPayload.validateJSON(item);
            };
        }
        // validate the optional field `preprocessedInput`
        if (data['preprocessedInput']) { // data not null
          ExamplePayload.validateJSON(data['preprocessedInput']);
        }

        return true;
    }


}



/**
 * Additional domain-specific prediction response metadata. * For Image Object Detection: `max_bounding_box_count` - (int64) At most that many bounding boxes per image could have been returned. * For Text Sentiment: `sentiment_score` - (float, deprecated) A value between -1 and 1, -1 maps to least positive sentiment, while 1 maps to the most positive one and the higher the score, the more positive the sentiment in the document is. Yet these values are relative to the training data, so e.g. if all data was positive then -1 will be also positive (though the least). The sentiment_score shouldn't be confused with \"score\" or \"magnitude\" from the previous Natural Language Sentiment Analysis API.
 * @member {Object.<String, String>} metadata
 */
PredictResponse.prototype['metadata'] = undefined;

/**
 * Prediction result. Translation and Text Sentiment will return precisely one payload.
 * @member {Array.<module:model/AnnotationPayload>} payload
 */
PredictResponse.prototype['payload'] = undefined;

/**
 * @member {module:model/ExamplePayload} preprocessedInput
 */
PredictResponse.prototype['preprocessedInput'] = undefined;






export default PredictResponse;

