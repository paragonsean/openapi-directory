/**
 * Cloud AutoML API
 * Train high-quality custom machine learning models with minimum effort and machine learning expertise.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ImageObjectDetectionModelMetadata model module.
 * @module model/ImageObjectDetectionModelMetadata
 * @version v1beta1
 */
class ImageObjectDetectionModelMetadata {
    /**
     * Constructs a new <code>ImageObjectDetectionModelMetadata</code>.
     * Model metadata specific to image object detection.
     * @alias module:model/ImageObjectDetectionModelMetadata
     */
    constructor() { 
        
        ImageObjectDetectionModelMetadata.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ImageObjectDetectionModelMetadata</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ImageObjectDetectionModelMetadata} obj Optional instance to populate.
     * @return {module:model/ImageObjectDetectionModelMetadata} The populated <code>ImageObjectDetectionModelMetadata</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ImageObjectDetectionModelMetadata();

            if (data.hasOwnProperty('modelType')) {
                obj['modelType'] = ApiClient.convertToType(data['modelType'], 'String');
            }
            if (data.hasOwnProperty('nodeCount')) {
                obj['nodeCount'] = ApiClient.convertToType(data['nodeCount'], 'String');
            }
            if (data.hasOwnProperty('nodeQps')) {
                obj['nodeQps'] = ApiClient.convertToType(data['nodeQps'], 'Number');
            }
            if (data.hasOwnProperty('stopReason')) {
                obj['stopReason'] = ApiClient.convertToType(data['stopReason'], 'String');
            }
            if (data.hasOwnProperty('trainBudgetMilliNodeHours')) {
                obj['trainBudgetMilliNodeHours'] = ApiClient.convertToType(data['trainBudgetMilliNodeHours'], 'String');
            }
            if (data.hasOwnProperty('trainCostMilliNodeHours')) {
                obj['trainCostMilliNodeHours'] = ApiClient.convertToType(data['trainCostMilliNodeHours'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ImageObjectDetectionModelMetadata</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ImageObjectDetectionModelMetadata</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['modelType'] && !(typeof data['modelType'] === 'string' || data['modelType'] instanceof String)) {
            throw new Error("Expected the field `modelType` to be a primitive type in the JSON string but got " + data['modelType']);
        }
        // ensure the json data is a string
        if (data['nodeCount'] && !(typeof data['nodeCount'] === 'string' || data['nodeCount'] instanceof String)) {
            throw new Error("Expected the field `nodeCount` to be a primitive type in the JSON string but got " + data['nodeCount']);
        }
        // ensure the json data is a string
        if (data['stopReason'] && !(typeof data['stopReason'] === 'string' || data['stopReason'] instanceof String)) {
            throw new Error("Expected the field `stopReason` to be a primitive type in the JSON string but got " + data['stopReason']);
        }
        // ensure the json data is a string
        if (data['trainBudgetMilliNodeHours'] && !(typeof data['trainBudgetMilliNodeHours'] === 'string' || data['trainBudgetMilliNodeHours'] instanceof String)) {
            throw new Error("Expected the field `trainBudgetMilliNodeHours` to be a primitive type in the JSON string but got " + data['trainBudgetMilliNodeHours']);
        }
        // ensure the json data is a string
        if (data['trainCostMilliNodeHours'] && !(typeof data['trainCostMilliNodeHours'] === 'string' || data['trainCostMilliNodeHours'] instanceof String)) {
            throw new Error("Expected the field `trainCostMilliNodeHours` to be a primitive type in the JSON string but got " + data['trainCostMilliNodeHours']);
        }

        return true;
    }


}



/**
 * Optional. Type of the model. The available values are: * `cloud-high-accuracy-1` - (default) A model to be used via prediction calls to AutoML API. Expected to have a higher latency, but should also have a higher prediction quality than other models. * `cloud-low-latency-1` - A model to be used via prediction calls to AutoML API. Expected to have low latency, but may have lower prediction quality than other models. * `mobile-low-latency-1` - A model that, in addition to providing prediction via AutoML API, can also be exported (see AutoMl.ExportModel) and used on a mobile or edge device with TensorFlow afterwards. Expected to have low latency, but may have lower prediction quality than other models. * `mobile-versatile-1` - A model that, in addition to providing prediction via AutoML API, can also be exported (see AutoMl.ExportModel) and used on a mobile or edge device with TensorFlow afterwards. * `mobile-high-accuracy-1` - A model that, in addition to providing prediction via AutoML API, can also be exported (see AutoMl.ExportModel) and used on a mobile or edge device with TensorFlow afterwards. Expected to have a higher latency, but should also have a higher prediction quality than other models.
 * @member {String} modelType
 */
ImageObjectDetectionModelMetadata.prototype['modelType'] = undefined;

/**
 * Output only. The number of nodes this model is deployed on. A node is an abstraction of a machine resource, which can handle online prediction QPS as given in the qps_per_node field.
 * @member {String} nodeCount
 */
ImageObjectDetectionModelMetadata.prototype['nodeCount'] = undefined;

/**
 * Output only. An approximate number of online prediction QPS that can be supported by this model per each node on which it is deployed.
 * @member {Number} nodeQps
 */
ImageObjectDetectionModelMetadata.prototype['nodeQps'] = undefined;

/**
 * Output only. The reason that this create model operation stopped, e.g. `BUDGET_REACHED`, `MODEL_CONVERGED`.
 * @member {String} stopReason
 */
ImageObjectDetectionModelMetadata.prototype['stopReason'] = undefined;

/**
 * The train budget of creating this model, expressed in milli node hours i.e. 1,000 value in this field means 1 node hour. The actual `train_cost` will be equal or less than this value. If further model training ceases to provide any improvements, it will stop without using full budget and the stop_reason will be `MODEL_CONVERGED`. Note, node_hour = actual_hour * number_of_nodes_invovled. For model type `cloud-high-accuracy-1`(default) and `cloud-low-latency-1`, the train budget must be between 20,000 and 900,000 milli node hours, inclusive. The default value is 216, 000 which represents one day in wall time. For model type `mobile-low-latency-1`, `mobile-versatile-1`, `mobile-high-accuracy-1`, `mobile-core-ml-low-latency-1`, `mobile-core-ml-versatile-1`, `mobile-core-ml-high-accuracy-1`, the train budget must be between 1,000 and 100,000 milli node hours, inclusive. The default value is 24, 000 which represents one day in wall time.
 * @member {String} trainBudgetMilliNodeHours
 */
ImageObjectDetectionModelMetadata.prototype['trainBudgetMilliNodeHours'] = undefined;

/**
 * Output only. The actual train cost of creating this model, expressed in milli node hours, i.e. 1,000 value in this field means 1 node hour. Guaranteed to not exceed the train budget.
 * @member {String} trainCostMilliNodeHours
 */
ImageObjectDetectionModelMetadata.prototype['trainCostMilliNodeHours'] = undefined;






export default ImageObjectDetectionModelMetadata;

