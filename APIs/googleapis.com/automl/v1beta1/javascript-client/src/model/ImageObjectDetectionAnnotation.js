/**
 * Cloud AutoML API
 * Train high-quality custom machine learning models with minimum effort and machine learning expertise.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BoundingPoly from './BoundingPoly';

/**
 * The ImageObjectDetectionAnnotation model module.
 * @module model/ImageObjectDetectionAnnotation
 * @version v1beta1
 */
class ImageObjectDetectionAnnotation {
    /**
     * Constructs a new <code>ImageObjectDetectionAnnotation</code>.
     * Annotation details for image object detection.
     * @alias module:model/ImageObjectDetectionAnnotation
     */
    constructor() { 
        
        ImageObjectDetectionAnnotation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ImageObjectDetectionAnnotation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ImageObjectDetectionAnnotation} obj Optional instance to populate.
     * @return {module:model/ImageObjectDetectionAnnotation} The populated <code>ImageObjectDetectionAnnotation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ImageObjectDetectionAnnotation();

            if (data.hasOwnProperty('boundingBox')) {
                obj['boundingBox'] = BoundingPoly.constructFromObject(data['boundingBox']);
            }
            if (data.hasOwnProperty('score')) {
                obj['score'] = ApiClient.convertToType(data['score'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ImageObjectDetectionAnnotation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ImageObjectDetectionAnnotation</code>.
     */
    static validateJSON(data) {
        // validate the optional field `boundingBox`
        if (data['boundingBox']) { // data not null
          BoundingPoly.validateJSON(data['boundingBox']);
        }

        return true;
    }


}



/**
 * @member {module:model/BoundingPoly} boundingBox
 */
ImageObjectDetectionAnnotation.prototype['boundingBox'] = undefined;

/**
 * Output only. The confidence that this annotation is positive for the parent example, value in [0, 1], higher means higher positivity confidence.
 * @member {Number} score
 */
ImageObjectDetectionAnnotation.prototype['score'] = undefined;






export default ImageObjectDetectionAnnotation;

