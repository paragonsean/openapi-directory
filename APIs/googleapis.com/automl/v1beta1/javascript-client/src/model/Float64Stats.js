/**
 * Cloud AutoML API
 * Train high-quality custom machine learning models with minimum effort and machine learning expertise.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import HistogramBucket from './HistogramBucket';

/**
 * The Float64Stats model module.
 * @module model/Float64Stats
 * @version v1beta1
 */
class Float64Stats {
    /**
     * Constructs a new <code>Float64Stats</code>.
     * The data statistics of a series of FLOAT64 values.
     * @alias module:model/Float64Stats
     */
    constructor() { 
        
        Float64Stats.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Float64Stats</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Float64Stats} obj Optional instance to populate.
     * @return {module:model/Float64Stats} The populated <code>Float64Stats</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Float64Stats();

            if (data.hasOwnProperty('histogramBuckets')) {
                obj['histogramBuckets'] = ApiClient.convertToType(data['histogramBuckets'], [HistogramBucket]);
            }
            if (data.hasOwnProperty('mean')) {
                obj['mean'] = ApiClient.convertToType(data['mean'], 'Number');
            }
            if (data.hasOwnProperty('quantiles')) {
                obj['quantiles'] = ApiClient.convertToType(data['quantiles'], ['Number']);
            }
            if (data.hasOwnProperty('standardDeviation')) {
                obj['standardDeviation'] = ApiClient.convertToType(data['standardDeviation'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Float64Stats</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Float64Stats</code>.
     */
    static validateJSON(data) {
        if (data['histogramBuckets']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['histogramBuckets'])) {
                throw new Error("Expected the field `histogramBuckets` to be an array in the JSON data but got " + data['histogramBuckets']);
            }
            // validate the optional field `histogramBuckets` (array)
            for (const item of data['histogramBuckets']) {
                HistogramBucket.validateJSON(item);
            };
        }
        // ensure the json data is an array
        if (!Array.isArray(data['quantiles'])) {
            throw new Error("Expected the field `quantiles` to be an array in the JSON data but got " + data['quantiles']);
        }

        return true;
    }


}



/**
 * Histogram buckets of the data series. Sorted by the min value of the bucket, ascendingly, and the number of the buckets is dynamically generated. The buckets are non-overlapping and completely cover whole FLOAT64 range with min of first bucket being `\"-Infinity\"`, and max of the last one being `\"Infinity\"`.
 * @member {Array.<module:model/HistogramBucket>} histogramBuckets
 */
Float64Stats.prototype['histogramBuckets'] = undefined;

/**
 * The mean of the series.
 * @member {Number} mean
 */
Float64Stats.prototype['mean'] = undefined;

/**
 * Ordered from 0 to k k-quantile values of the data series of n values. The value at index i is, approximately, the i*n/k-th smallest value in the series; for i = 0 and i = k these are, respectively, the min and max values.
 * @member {Array.<Number>} quantiles
 */
Float64Stats.prototype['quantiles'] = undefined;

/**
 * The standard deviation of the series.
 * @member {Number} standardDeviation
 */
Float64Stats.prototype['standardDeviation'] = undefined;






export default Float64Stats;

