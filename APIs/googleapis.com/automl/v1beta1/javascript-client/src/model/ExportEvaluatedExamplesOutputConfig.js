/**
 * Cloud AutoML API
 * Train high-quality custom machine learning models with minimum effort and machine learning expertise.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BigQueryDestination from './BigQueryDestination';

/**
 * The ExportEvaluatedExamplesOutputConfig model module.
 * @module model/ExportEvaluatedExamplesOutputConfig
 * @version v1beta1
 */
class ExportEvaluatedExamplesOutputConfig {
    /**
     * Constructs a new <code>ExportEvaluatedExamplesOutputConfig</code>.
     * Output configuration for ExportEvaluatedExamples Action. Note that this call is available only for 30 days since the moment the model was evaluated. The output depends on the domain, as follows (note that only examples from the TEST set are exported): * For Tables: bigquery_destination pointing to a BigQuery project must be set. In the given project a new dataset will be created with name &#x60;export_evaluated_examples__&#x60; where will be made BigQuery-dataset-name compatible (e.g. most special characters will become underscores), and timestamp will be in YYYY_MM_DDThh_mm_ss_sssZ \&quot;based on ISO-8601\&quot; format. In the dataset an &#x60;evaluated_examples&#x60; table will be created. It will have all the same columns as the primary_table of the dataset from which the model was created, as they were at the moment of model&#39;s evaluation (this includes the target column with its ground truth), followed by a column called \&quot;predicted_\&quot;. That last column will contain the model&#39;s prediction result for each respective row, given as ARRAY of AnnotationPayloads, represented as STRUCT-s, containing TablesAnnotation.
     * @alias module:model/ExportEvaluatedExamplesOutputConfig
     */
    constructor() { 
        
        ExportEvaluatedExamplesOutputConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ExportEvaluatedExamplesOutputConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ExportEvaluatedExamplesOutputConfig} obj Optional instance to populate.
     * @return {module:model/ExportEvaluatedExamplesOutputConfig} The populated <code>ExportEvaluatedExamplesOutputConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ExportEvaluatedExamplesOutputConfig();

            if (data.hasOwnProperty('bigqueryDestination')) {
                obj['bigqueryDestination'] = BigQueryDestination.constructFromObject(data['bigqueryDestination']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ExportEvaluatedExamplesOutputConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ExportEvaluatedExamplesOutputConfig</code>.
     */
    static validateJSON(data) {
        // validate the optional field `bigqueryDestination`
        if (data['bigqueryDestination']) { // data not null
          BigQueryDestination.validateJSON(data['bigqueryDestination']);
        }

        return true;
    }


}



/**
 * @member {module:model/BigQueryDestination} bigqueryDestination
 */
ExportEvaluatedExamplesOutputConfig.prototype['bigqueryDestination'] = undefined;






export default ExportEvaluatedExamplesOutputConfig;

