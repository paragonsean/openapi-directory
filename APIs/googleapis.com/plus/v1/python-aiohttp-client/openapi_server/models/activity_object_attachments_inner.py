# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.activity_object_attachments_inner_embed import ActivityObjectAttachmentsInnerEmbed
from openapi_server.models.activity_object_attachments_inner_full_image import ActivityObjectAttachmentsInnerFullImage
from openapi_server.models.activity_object_attachments_inner_image import ActivityObjectAttachmentsInnerImage
from openapi_server.models.activity_object_attachments_inner_thumbnails_inner import ActivityObjectAttachmentsInnerThumbnailsInner
from openapi_server import util


class ActivityObjectAttachmentsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, content: str=None, display_name: str=None, embed: ActivityObjectAttachmentsInnerEmbed=None, full_image: ActivityObjectAttachmentsInnerFullImage=None, id: str=None, image: ActivityObjectAttachmentsInnerImage=None, object_type: str=None, thumbnails: List[ActivityObjectAttachmentsInnerThumbnailsInner]=None, url: str=None):
        """ActivityObjectAttachmentsInner - a model defined in OpenAPI

        :param content: The content of this ActivityObjectAttachmentsInner.
        :param display_name: The display_name of this ActivityObjectAttachmentsInner.
        :param embed: The embed of this ActivityObjectAttachmentsInner.
        :param full_image: The full_image of this ActivityObjectAttachmentsInner.
        :param id: The id of this ActivityObjectAttachmentsInner.
        :param image: The image of this ActivityObjectAttachmentsInner.
        :param object_type: The object_type of this ActivityObjectAttachmentsInner.
        :param thumbnails: The thumbnails of this ActivityObjectAttachmentsInner.
        :param url: The url of this ActivityObjectAttachmentsInner.
        """
        self.openapi_types = {
            'content': str,
            'display_name': str,
            'embed': ActivityObjectAttachmentsInnerEmbed,
            'full_image': ActivityObjectAttachmentsInnerFullImage,
            'id': str,
            'image': ActivityObjectAttachmentsInnerImage,
            'object_type': str,
            'thumbnails': List[ActivityObjectAttachmentsInnerThumbnailsInner],
            'url': str
        }

        self.attribute_map = {
            'content': 'content',
            'display_name': 'displayName',
            'embed': 'embed',
            'full_image': 'fullImage',
            'id': 'id',
            'image': 'image',
            'object_type': 'objectType',
            'thumbnails': 'thumbnails',
            'url': 'url'
        }

        self._content = content
        self._display_name = display_name
        self._embed = embed
        self._full_image = full_image
        self._id = id
        self._image = image
        self._object_type = object_type
        self._thumbnails = thumbnails
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ActivityObjectAttachmentsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Activity_object_attachments_inner of this ActivityObjectAttachmentsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def content(self):
        """Gets the content of this ActivityObjectAttachmentsInner.

        If the attachment is an article, this property contains a snippet of text from the article. It can also include descriptions for other types.

        :return: The content of this ActivityObjectAttachmentsInner.
        :rtype: str
        """
        return self._content

    @content.setter
    def content(self, content):
        """Sets the content of this ActivityObjectAttachmentsInner.

        If the attachment is an article, this property contains a snippet of text from the article. It can also include descriptions for other types.

        :param content: The content of this ActivityObjectAttachmentsInner.
        :type content: str
        """

        self._content = content

    @property
    def display_name(self):
        """Gets the display_name of this ActivityObjectAttachmentsInner.

        The title of the attachment, such as a photo caption or an article title.

        :return: The display_name of this ActivityObjectAttachmentsInner.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this ActivityObjectAttachmentsInner.

        The title of the attachment, such as a photo caption or an article title.

        :param display_name: The display_name of this ActivityObjectAttachmentsInner.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def embed(self):
        """Gets the embed of this ActivityObjectAttachmentsInner.


        :return: The embed of this ActivityObjectAttachmentsInner.
        :rtype: ActivityObjectAttachmentsInnerEmbed
        """
        return self._embed

    @embed.setter
    def embed(self, embed):
        """Sets the embed of this ActivityObjectAttachmentsInner.


        :param embed: The embed of this ActivityObjectAttachmentsInner.
        :type embed: ActivityObjectAttachmentsInnerEmbed
        """

        self._embed = embed

    @property
    def full_image(self):
        """Gets the full_image of this ActivityObjectAttachmentsInner.


        :return: The full_image of this ActivityObjectAttachmentsInner.
        :rtype: ActivityObjectAttachmentsInnerFullImage
        """
        return self._full_image

    @full_image.setter
    def full_image(self, full_image):
        """Sets the full_image of this ActivityObjectAttachmentsInner.


        :param full_image: The full_image of this ActivityObjectAttachmentsInner.
        :type full_image: ActivityObjectAttachmentsInnerFullImage
        """

        self._full_image = full_image

    @property
    def id(self):
        """Gets the id of this ActivityObjectAttachmentsInner.

        The ID of the attachment.

        :return: The id of this ActivityObjectAttachmentsInner.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ActivityObjectAttachmentsInner.

        The ID of the attachment.

        :param id: The id of this ActivityObjectAttachmentsInner.
        :type id: str
        """

        self._id = id

    @property
    def image(self):
        """Gets the image of this ActivityObjectAttachmentsInner.


        :return: The image of this ActivityObjectAttachmentsInner.
        :rtype: ActivityObjectAttachmentsInnerImage
        """
        return self._image

    @image.setter
    def image(self, image):
        """Sets the image of this ActivityObjectAttachmentsInner.


        :param image: The image of this ActivityObjectAttachmentsInner.
        :type image: ActivityObjectAttachmentsInnerImage
        """

        self._image = image

    @property
    def object_type(self):
        """Gets the object_type of this ActivityObjectAttachmentsInner.

        The type of media object. Possible values include, but are not limited to, the following values:   - \"photo\" - A photo.  - \"album\" - A photo album.  - \"video\" - A video.  - \"article\" - An article, specified by a link.

        :return: The object_type of this ActivityObjectAttachmentsInner.
        :rtype: str
        """
        return self._object_type

    @object_type.setter
    def object_type(self, object_type):
        """Sets the object_type of this ActivityObjectAttachmentsInner.

        The type of media object. Possible values include, but are not limited to, the following values:   - \"photo\" - A photo.  - \"album\" - A photo album.  - \"video\" - A video.  - \"article\" - An article, specified by a link.

        :param object_type: The object_type of this ActivityObjectAttachmentsInner.
        :type object_type: str
        """

        self._object_type = object_type

    @property
    def thumbnails(self):
        """Gets the thumbnails of this ActivityObjectAttachmentsInner.

        If the attachment is an album, this property is a list of potential additional thumbnails from the album.

        :return: The thumbnails of this ActivityObjectAttachmentsInner.
        :rtype: List[ActivityObjectAttachmentsInnerThumbnailsInner]
        """
        return self._thumbnails

    @thumbnails.setter
    def thumbnails(self, thumbnails):
        """Sets the thumbnails of this ActivityObjectAttachmentsInner.

        If the attachment is an album, this property is a list of potential additional thumbnails from the album.

        :param thumbnails: The thumbnails of this ActivityObjectAttachmentsInner.
        :type thumbnails: List[ActivityObjectAttachmentsInnerThumbnailsInner]
        """

        self._thumbnails = thumbnails

    @property
    def url(self):
        """Gets the url of this ActivityObjectAttachmentsInner.

        The link to the attachment, which should be of type text/html.

        :return: The url of this ActivityObjectAttachmentsInner.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this ActivityObjectAttachmentsInner.

        The link to the attachment, which should be of type text/html.

        :param url: The url of this ActivityObjectAttachmentsInner.
        :type url: str
        """

        self._url = url
