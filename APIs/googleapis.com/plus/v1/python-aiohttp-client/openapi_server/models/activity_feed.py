# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.activity import Activity
from openapi_server import util


class ActivityFeed(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, etag: str=None, id: str=None, items: List[Activity]=None, kind: str='plus#activityFeed', next_link: str=None, next_page_token: str=None, self_link: str=None, title: str=None, updated: datetime=None):
        """ActivityFeed - a model defined in OpenAPI

        :param etag: The etag of this ActivityFeed.
        :param id: The id of this ActivityFeed.
        :param items: The items of this ActivityFeed.
        :param kind: The kind of this ActivityFeed.
        :param next_link: The next_link of this ActivityFeed.
        :param next_page_token: The next_page_token of this ActivityFeed.
        :param self_link: The self_link of this ActivityFeed.
        :param title: The title of this ActivityFeed.
        :param updated: The updated of this ActivityFeed.
        """
        self.openapi_types = {
            'etag': str,
            'id': str,
            'items': List[Activity],
            'kind': str,
            'next_link': str,
            'next_page_token': str,
            'self_link': str,
            'title': str,
            'updated': datetime
        }

        self.attribute_map = {
            'etag': 'etag',
            'id': 'id',
            'items': 'items',
            'kind': 'kind',
            'next_link': 'nextLink',
            'next_page_token': 'nextPageToken',
            'self_link': 'selfLink',
            'title': 'title',
            'updated': 'updated'
        }

        self._etag = etag
        self._id = id
        self._items = items
        self._kind = kind
        self._next_link = next_link
        self._next_page_token = next_page_token
        self._self_link = self_link
        self._title = title
        self._updated = updated

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ActivityFeed':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ActivityFeed of this ActivityFeed.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def etag(self):
        """Gets the etag of this ActivityFeed.

        ETag of this response for caching purposes.

        :return: The etag of this ActivityFeed.
        :rtype: str
        """
        return self._etag

    @etag.setter
    def etag(self, etag):
        """Sets the etag of this ActivityFeed.

        ETag of this response for caching purposes.

        :param etag: The etag of this ActivityFeed.
        :type etag: str
        """

        self._etag = etag

    @property
    def id(self):
        """Gets the id of this ActivityFeed.

        The ID of this collection of activities. Deprecated.

        :return: The id of this ActivityFeed.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ActivityFeed.

        The ID of this collection of activities. Deprecated.

        :param id: The id of this ActivityFeed.
        :type id: str
        """

        self._id = id

    @property
    def items(self):
        """Gets the items of this ActivityFeed.

        The activities in this page of results.

        :return: The items of this ActivityFeed.
        :rtype: List[Activity]
        """
        return self._items

    @items.setter
    def items(self, items):
        """Sets the items of this ActivityFeed.

        The activities in this page of results.

        :param items: The items of this ActivityFeed.
        :type items: List[Activity]
        """

        self._items = items

    @property
    def kind(self):
        """Gets the kind of this ActivityFeed.

        Identifies this resource as a collection of activities. Value: \"plus#activityFeed\".

        :return: The kind of this ActivityFeed.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this ActivityFeed.

        Identifies this resource as a collection of activities. Value: \"plus#activityFeed\".

        :param kind: The kind of this ActivityFeed.
        :type kind: str
        """

        self._kind = kind

    @property
    def next_link(self):
        """Gets the next_link of this ActivityFeed.

        Link to the next page of activities.

        :return: The next_link of this ActivityFeed.
        :rtype: str
        """
        return self._next_link

    @next_link.setter
    def next_link(self, next_link):
        """Sets the next_link of this ActivityFeed.

        Link to the next page of activities.

        :param next_link: The next_link of this ActivityFeed.
        :type next_link: str
        """

        self._next_link = next_link

    @property
    def next_page_token(self):
        """Gets the next_page_token of this ActivityFeed.

        The continuation token, which is used to page through large result sets. Provide this value in a subsequent request to return the next page of results.

        :return: The next_page_token of this ActivityFeed.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this ActivityFeed.

        The continuation token, which is used to page through large result sets. Provide this value in a subsequent request to return the next page of results.

        :param next_page_token: The next_page_token of this ActivityFeed.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token

    @property
    def self_link(self):
        """Gets the self_link of this ActivityFeed.

        Link to this activity resource.

        :return: The self_link of this ActivityFeed.
        :rtype: str
        """
        return self._self_link

    @self_link.setter
    def self_link(self, self_link):
        """Sets the self_link of this ActivityFeed.

        Link to this activity resource.

        :param self_link: The self_link of this ActivityFeed.
        :type self_link: str
        """

        self._self_link = self_link

    @property
    def title(self):
        """Gets the title of this ActivityFeed.

        The title of this collection of activities, which is a truncated portion of the content.

        :return: The title of this ActivityFeed.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this ActivityFeed.

        The title of this collection of activities, which is a truncated portion of the content.

        :param title: The title of this ActivityFeed.
        :type title: str
        """

        self._title = title

    @property
    def updated(self):
        """Gets the updated of this ActivityFeed.

        The time at which this collection of activities was last updated. Formatted as an RFC 3339 timestamp.

        :return: The updated of this ActivityFeed.
        :rtype: datetime
        """
        return self._updated

    @updated.setter
    def updated(self, updated):
        """Sets the updated of this ActivityFeed.

        The time at which this collection of activities was last updated. Formatted as an RFC 3339 timestamp.

        :param updated: The updated of this ActivityFeed.
        :type updated: datetime
        """

        self._updated = updated
