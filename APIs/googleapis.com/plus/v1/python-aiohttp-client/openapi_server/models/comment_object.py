# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CommentObject(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, content: str=None, object_type: str='comment', original_content: str=None):
        """CommentObject - a model defined in OpenAPI

        :param content: The content of this CommentObject.
        :param object_type: The object_type of this CommentObject.
        :param original_content: The original_content of this CommentObject.
        """
        self.openapi_types = {
            'content': str,
            'object_type': str,
            'original_content': str
        }

        self.attribute_map = {
            'content': 'content',
            'object_type': 'objectType',
            'original_content': 'originalContent'
        }

        self._content = content
        self._object_type = object_type
        self._original_content = original_content

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CommentObject':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Comment_object of this CommentObject.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def content(self):
        """Gets the content of this CommentObject.

        The HTML-formatted content, suitable for display.

        :return: The content of this CommentObject.
        :rtype: str
        """
        return self._content

    @content.setter
    def content(self, content):
        """Sets the content of this CommentObject.

        The HTML-formatted content, suitable for display.

        :param content: The content of this CommentObject.
        :type content: str
        """

        self._content = content

    @property
    def object_type(self):
        """Gets the object_type of this CommentObject.

        The object type of this comment. Possible values are:   - \"comment\" - A comment in reply to an activity.

        :return: The object_type of this CommentObject.
        :rtype: str
        """
        return self._object_type

    @object_type.setter
    def object_type(self, object_type):
        """Sets the object_type of this CommentObject.

        The object type of this comment. Possible values are:   - \"comment\" - A comment in reply to an activity.

        :param object_type: The object_type of this CommentObject.
        :type object_type: str
        """

        self._object_type = object_type

    @property
    def original_content(self):
        """Gets the original_content of this CommentObject.

        The content (text) as provided by the author, stored without any HTML formatting. When creating or updating a comment, this value must be supplied as plain text in the request.

        :return: The original_content of this CommentObject.
        :rtype: str
        """
        return self._original_content

    @original_content.setter
    def original_content(self, original_content):
        """Sets the original_content of this CommentObject.

        The content (text) as provided by the author, stored without any HTML formatting. When creating or updating a comment, this value must be supplied as plain text in the request.

        :param original_content: The original_content of this CommentObject.
        :type original_content: str
        """

        self._original_content = original_content
