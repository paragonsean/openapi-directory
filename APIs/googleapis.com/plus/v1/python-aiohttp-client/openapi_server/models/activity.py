# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.acl import Acl
from openapi_server.models.activity_actor import ActivityActor
from openapi_server.models.activity_object import ActivityObject
from openapi_server.models.activity_provider import ActivityProvider
from openapi_server.models.place import Place
from openapi_server import util


class Activity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, access: Acl=None, actor: ActivityActor=None, address: str=None, annotation: str=None, crosspost_source: str=None, etag: str=None, geocode: str=None, id: str=None, kind: str='plus#activity', location: Place=None, object: ActivityObject=None, place_id: str=None, place_name: str=None, provider: ActivityProvider=None, published: datetime=None, radius: str=None, title: str=None, updated: datetime=None, url: str=None, verb: str=None):
        """Activity - a model defined in OpenAPI

        :param access: The access of this Activity.
        :param actor: The actor of this Activity.
        :param address: The address of this Activity.
        :param annotation: The annotation of this Activity.
        :param crosspost_source: The crosspost_source of this Activity.
        :param etag: The etag of this Activity.
        :param geocode: The geocode of this Activity.
        :param id: The id of this Activity.
        :param kind: The kind of this Activity.
        :param location: The location of this Activity.
        :param object: The object of this Activity.
        :param place_id: The place_id of this Activity.
        :param place_name: The place_name of this Activity.
        :param provider: The provider of this Activity.
        :param published: The published of this Activity.
        :param radius: The radius of this Activity.
        :param title: The title of this Activity.
        :param updated: The updated of this Activity.
        :param url: The url of this Activity.
        :param verb: The verb of this Activity.
        """
        self.openapi_types = {
            'access': Acl,
            'actor': ActivityActor,
            'address': str,
            'annotation': str,
            'crosspost_source': str,
            'etag': str,
            'geocode': str,
            'id': str,
            'kind': str,
            'location': Place,
            'object': ActivityObject,
            'place_id': str,
            'place_name': str,
            'provider': ActivityProvider,
            'published': datetime,
            'radius': str,
            'title': str,
            'updated': datetime,
            'url': str,
            'verb': str
        }

        self.attribute_map = {
            'access': 'access',
            'actor': 'actor',
            'address': 'address',
            'annotation': 'annotation',
            'crosspost_source': 'crosspostSource',
            'etag': 'etag',
            'geocode': 'geocode',
            'id': 'id',
            'kind': 'kind',
            'location': 'location',
            'object': 'object',
            'place_id': 'placeId',
            'place_name': 'placeName',
            'provider': 'provider',
            'published': 'published',
            'radius': 'radius',
            'title': 'title',
            'updated': 'updated',
            'url': 'url',
            'verb': 'verb'
        }

        self._access = access
        self._actor = actor
        self._address = address
        self._annotation = annotation
        self._crosspost_source = crosspost_source
        self._etag = etag
        self._geocode = geocode
        self._id = id
        self._kind = kind
        self._location = location
        self._object = object
        self._place_id = place_id
        self._place_name = place_name
        self._provider = provider
        self._published = published
        self._radius = radius
        self._title = title
        self._updated = updated
        self._url = url
        self._verb = verb

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Activity':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Activity of this Activity.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def access(self):
        """Gets the access of this Activity.


        :return: The access of this Activity.
        :rtype: Acl
        """
        return self._access

    @access.setter
    def access(self, access):
        """Sets the access of this Activity.


        :param access: The access of this Activity.
        :type access: Acl
        """

        self._access = access

    @property
    def actor(self):
        """Gets the actor of this Activity.


        :return: The actor of this Activity.
        :rtype: ActivityActor
        """
        return self._actor

    @actor.setter
    def actor(self, actor):
        """Sets the actor of this Activity.


        :param actor: The actor of this Activity.
        :type actor: ActivityActor
        """

        self._actor = actor

    @property
    def address(self):
        """Gets the address of this Activity.

        Street address where this activity occurred.

        :return: The address of this Activity.
        :rtype: str
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this Activity.

        Street address where this activity occurred.

        :param address: The address of this Activity.
        :type address: str
        """

        self._address = address

    @property
    def annotation(self):
        """Gets the annotation of this Activity.

        Additional content added by the person who shared this activity, applicable only when resharing an activity.

        :return: The annotation of this Activity.
        :rtype: str
        """
        return self._annotation

    @annotation.setter
    def annotation(self, annotation):
        """Sets the annotation of this Activity.

        Additional content added by the person who shared this activity, applicable only when resharing an activity.

        :param annotation: The annotation of this Activity.
        :type annotation: str
        """

        self._annotation = annotation

    @property
    def crosspost_source(self):
        """Gets the crosspost_source of this Activity.

        If this activity is a crosspost from another system, this property specifies the ID of the original activity.

        :return: The crosspost_source of this Activity.
        :rtype: str
        """
        return self._crosspost_source

    @crosspost_source.setter
    def crosspost_source(self, crosspost_source):
        """Sets the crosspost_source of this Activity.

        If this activity is a crosspost from another system, this property specifies the ID of the original activity.

        :param crosspost_source: The crosspost_source of this Activity.
        :type crosspost_source: str
        """

        self._crosspost_source = crosspost_source

    @property
    def etag(self):
        """Gets the etag of this Activity.

        ETag of this response for caching purposes.

        :return: The etag of this Activity.
        :rtype: str
        """
        return self._etag

    @etag.setter
    def etag(self, etag):
        """Sets the etag of this Activity.

        ETag of this response for caching purposes.

        :param etag: The etag of this Activity.
        :type etag: str
        """

        self._etag = etag

    @property
    def geocode(self):
        """Gets the geocode of this Activity.

        Latitude and longitude where this activity occurred. Format is latitude followed by longitude, space separated.

        :return: The geocode of this Activity.
        :rtype: str
        """
        return self._geocode

    @geocode.setter
    def geocode(self, geocode):
        """Sets the geocode of this Activity.

        Latitude and longitude where this activity occurred. Format is latitude followed by longitude, space separated.

        :param geocode: The geocode of this Activity.
        :type geocode: str
        """

        self._geocode = geocode

    @property
    def id(self):
        """Gets the id of this Activity.

        The ID of this activity.

        :return: The id of this Activity.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Activity.

        The ID of this activity.

        :param id: The id of this Activity.
        :type id: str
        """

        self._id = id

    @property
    def kind(self):
        """Gets the kind of this Activity.

        Identifies this resource as an activity. Value: \"plus#activity\".

        :return: The kind of this Activity.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this Activity.

        Identifies this resource as an activity. Value: \"plus#activity\".

        :param kind: The kind of this Activity.
        :type kind: str
        """

        self._kind = kind

    @property
    def location(self):
        """Gets the location of this Activity.


        :return: The location of this Activity.
        :rtype: Place
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this Activity.


        :param location: The location of this Activity.
        :type location: Place
        """

        self._location = location

    @property
    def object(self):
        """Gets the object of this Activity.


        :return: The object of this Activity.
        :rtype: ActivityObject
        """
        return self._object

    @object.setter
    def object(self, object):
        """Sets the object of this Activity.


        :param object: The object of this Activity.
        :type object: ActivityObject
        """

        self._object = object

    @property
    def place_id(self):
        """Gets the place_id of this Activity.

        ID of the place where this activity occurred.

        :return: The place_id of this Activity.
        :rtype: str
        """
        return self._place_id

    @place_id.setter
    def place_id(self, place_id):
        """Sets the place_id of this Activity.

        ID of the place where this activity occurred.

        :param place_id: The place_id of this Activity.
        :type place_id: str
        """

        self._place_id = place_id

    @property
    def place_name(self):
        """Gets the place_name of this Activity.

        Name of the place where this activity occurred.

        :return: The place_name of this Activity.
        :rtype: str
        """
        return self._place_name

    @place_name.setter
    def place_name(self, place_name):
        """Sets the place_name of this Activity.

        Name of the place where this activity occurred.

        :param place_name: The place_name of this Activity.
        :type place_name: str
        """

        self._place_name = place_name

    @property
    def provider(self):
        """Gets the provider of this Activity.


        :return: The provider of this Activity.
        :rtype: ActivityProvider
        """
        return self._provider

    @provider.setter
    def provider(self, provider):
        """Sets the provider of this Activity.


        :param provider: The provider of this Activity.
        :type provider: ActivityProvider
        """

        self._provider = provider

    @property
    def published(self):
        """Gets the published of this Activity.

        The time at which this activity was initially published. Formatted as an RFC 3339 timestamp.

        :return: The published of this Activity.
        :rtype: datetime
        """
        return self._published

    @published.setter
    def published(self, published):
        """Sets the published of this Activity.

        The time at which this activity was initially published. Formatted as an RFC 3339 timestamp.

        :param published: The published of this Activity.
        :type published: datetime
        """

        self._published = published

    @property
    def radius(self):
        """Gets the radius of this Activity.

        Radius, in meters, of the region where this activity occurred, centered at the latitude and longitude identified in geocode.

        :return: The radius of this Activity.
        :rtype: str
        """
        return self._radius

    @radius.setter
    def radius(self, radius):
        """Sets the radius of this Activity.

        Radius, in meters, of the region where this activity occurred, centered at the latitude and longitude identified in geocode.

        :param radius: The radius of this Activity.
        :type radius: str
        """

        self._radius = radius

    @property
    def title(self):
        """Gets the title of this Activity.

        Title of this activity.

        :return: The title of this Activity.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this Activity.

        Title of this activity.

        :param title: The title of this Activity.
        :type title: str
        """

        self._title = title

    @property
    def updated(self):
        """Gets the updated of this Activity.

        The time at which this activity was last updated. Formatted as an RFC 3339 timestamp.

        :return: The updated of this Activity.
        :rtype: datetime
        """
        return self._updated

    @updated.setter
    def updated(self, updated):
        """Sets the updated of this Activity.

        The time at which this activity was last updated. Formatted as an RFC 3339 timestamp.

        :param updated: The updated of this Activity.
        :type updated: datetime
        """

        self._updated = updated

    @property
    def url(self):
        """Gets the url of this Activity.

        The link to this activity.

        :return: The url of this Activity.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this Activity.

        The link to this activity.

        :param url: The url of this Activity.
        :type url: str
        """

        self._url = url

    @property
    def verb(self):
        """Gets the verb of this Activity.

        This activity's verb, which indicates the action that was performed. Possible values include, but are not limited to, the following values:   - \"post\" - Publish content to the stream.  - \"share\" - Reshare an activity.

        :return: The verb of this Activity.
        :rtype: str
        """
        return self._verb

    @verb.setter
    def verb(self, verb):
        """Sets the verb of this Activity.

        This activity's verb, which indicates the action that was performed. Possible values include, but are not limited to, the following values:   - \"post\" - Publish content to the stream.  - \"share\" - Reshare an activity.

        :param verb: The verb of this Activity.
        :type verb: str
        """

        self._verb = verb
