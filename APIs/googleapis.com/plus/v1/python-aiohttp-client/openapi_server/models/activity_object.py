# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.activity_object_actor import ActivityObjectActor
from openapi_server.models.activity_object_attachments_inner import ActivityObjectAttachmentsInner
from openapi_server.models.activity_object_plusoners import ActivityObjectPlusoners
from openapi_server.models.activity_object_replies import ActivityObjectReplies
from openapi_server.models.activity_object_resharers import ActivityObjectResharers
from openapi_server import util


class ActivityObject(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, actor: ActivityObjectActor=None, attachments: List[ActivityObjectAttachmentsInner]=None, content: str=None, id: str=None, object_type: str=None, original_content: str=None, plusoners: ActivityObjectPlusoners=None, replies: ActivityObjectReplies=None, resharers: ActivityObjectResharers=None, url: str=None):
        """ActivityObject - a model defined in OpenAPI

        :param actor: The actor of this ActivityObject.
        :param attachments: The attachments of this ActivityObject.
        :param content: The content of this ActivityObject.
        :param id: The id of this ActivityObject.
        :param object_type: The object_type of this ActivityObject.
        :param original_content: The original_content of this ActivityObject.
        :param plusoners: The plusoners of this ActivityObject.
        :param replies: The replies of this ActivityObject.
        :param resharers: The resharers of this ActivityObject.
        :param url: The url of this ActivityObject.
        """
        self.openapi_types = {
            'actor': ActivityObjectActor,
            'attachments': List[ActivityObjectAttachmentsInner],
            'content': str,
            'id': str,
            'object_type': str,
            'original_content': str,
            'plusoners': ActivityObjectPlusoners,
            'replies': ActivityObjectReplies,
            'resharers': ActivityObjectResharers,
            'url': str
        }

        self.attribute_map = {
            'actor': 'actor',
            'attachments': 'attachments',
            'content': 'content',
            'id': 'id',
            'object_type': 'objectType',
            'original_content': 'originalContent',
            'plusoners': 'plusoners',
            'replies': 'replies',
            'resharers': 'resharers',
            'url': 'url'
        }

        self._actor = actor
        self._attachments = attachments
        self._content = content
        self._id = id
        self._object_type = object_type
        self._original_content = original_content
        self._plusoners = plusoners
        self._replies = replies
        self._resharers = resharers
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ActivityObject':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Activity_object of this ActivityObject.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def actor(self):
        """Gets the actor of this ActivityObject.


        :return: The actor of this ActivityObject.
        :rtype: ActivityObjectActor
        """
        return self._actor

    @actor.setter
    def actor(self, actor):
        """Sets the actor of this ActivityObject.


        :param actor: The actor of this ActivityObject.
        :type actor: ActivityObjectActor
        """

        self._actor = actor

    @property
    def attachments(self):
        """Gets the attachments of this ActivityObject.

        The media objects attached to this activity.

        :return: The attachments of this ActivityObject.
        :rtype: List[ActivityObjectAttachmentsInner]
        """
        return self._attachments

    @attachments.setter
    def attachments(self, attachments):
        """Sets the attachments of this ActivityObject.

        The media objects attached to this activity.

        :param attachments: The attachments of this ActivityObject.
        :type attachments: List[ActivityObjectAttachmentsInner]
        """

        self._attachments = attachments

    @property
    def content(self):
        """Gets the content of this ActivityObject.

        The HTML-formatted content, which is suitable for display.

        :return: The content of this ActivityObject.
        :rtype: str
        """
        return self._content

    @content.setter
    def content(self, content):
        """Sets the content of this ActivityObject.

        The HTML-formatted content, which is suitable for display.

        :param content: The content of this ActivityObject.
        :type content: str
        """

        self._content = content

    @property
    def id(self):
        """Gets the id of this ActivityObject.

        The ID of the object. When resharing an activity, this is the ID of the activity that is being reshared.

        :return: The id of this ActivityObject.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ActivityObject.

        The ID of the object. When resharing an activity, this is the ID of the activity that is being reshared.

        :param id: The id of this ActivityObject.
        :type id: str
        """

        self._id = id

    @property
    def object_type(self):
        """Gets the object_type of this ActivityObject.

        The type of the object. Possible values include, but are not limited to, the following values:   - \"note\" - Textual content.  - \"activity\" - A Google+ activity.

        :return: The object_type of this ActivityObject.
        :rtype: str
        """
        return self._object_type

    @object_type.setter
    def object_type(self, object_type):
        """Sets the object_type of this ActivityObject.

        The type of the object. Possible values include, but are not limited to, the following values:   - \"note\" - Textual content.  - \"activity\" - A Google+ activity.

        :param object_type: The object_type of this ActivityObject.
        :type object_type: str
        """

        self._object_type = object_type

    @property
    def original_content(self):
        """Gets the original_content of this ActivityObject.

        The content (text) as provided by the author, which is stored without any HTML formatting. When creating or updating an activity, this value must be supplied as plain text in the request.

        :return: The original_content of this ActivityObject.
        :rtype: str
        """
        return self._original_content

    @original_content.setter
    def original_content(self, original_content):
        """Sets the original_content of this ActivityObject.

        The content (text) as provided by the author, which is stored without any HTML formatting. When creating or updating an activity, this value must be supplied as plain text in the request.

        :param original_content: The original_content of this ActivityObject.
        :type original_content: str
        """

        self._original_content = original_content

    @property
    def plusoners(self):
        """Gets the plusoners of this ActivityObject.


        :return: The plusoners of this ActivityObject.
        :rtype: ActivityObjectPlusoners
        """
        return self._plusoners

    @plusoners.setter
    def plusoners(self, plusoners):
        """Sets the plusoners of this ActivityObject.


        :param plusoners: The plusoners of this ActivityObject.
        :type plusoners: ActivityObjectPlusoners
        """

        self._plusoners = plusoners

    @property
    def replies(self):
        """Gets the replies of this ActivityObject.


        :return: The replies of this ActivityObject.
        :rtype: ActivityObjectReplies
        """
        return self._replies

    @replies.setter
    def replies(self, replies):
        """Sets the replies of this ActivityObject.


        :param replies: The replies of this ActivityObject.
        :type replies: ActivityObjectReplies
        """

        self._replies = replies

    @property
    def resharers(self):
        """Gets the resharers of this ActivityObject.


        :return: The resharers of this ActivityObject.
        :rtype: ActivityObjectResharers
        """
        return self._resharers

    @resharers.setter
    def resharers(self, resharers):
        """Sets the resharers of this ActivityObject.


        :param resharers: The resharers of this ActivityObject.
        :type resharers: ActivityObjectResharers
        """

        self._resharers = resharers

    @property
    def url(self):
        """Gets the url of this ActivityObject.

        The URL that points to the linked resource.

        :return: The url of this ActivityObject.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this ActivityObject.

        The URL that points to the linked resource.

        :param url: The url of this ActivityObject.
        :type url: str
        """

        self._url = url
