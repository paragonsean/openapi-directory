# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PersonImage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, is_default: bool=None, url: str=None):
        """PersonImage - a model defined in OpenAPI

        :param is_default: The is_default of this PersonImage.
        :param url: The url of this PersonImage.
        """
        self.openapi_types = {
            'is_default': bool,
            'url': str
        }

        self.attribute_map = {
            'is_default': 'isDefault',
            'url': 'url'
        }

        self._is_default = is_default
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PersonImage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Person_image of this PersonImage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def is_default(self):
        """Gets the is_default of this PersonImage.

        Whether the person's profile photo is the default one

        :return: The is_default of this PersonImage.
        :rtype: bool
        """
        return self._is_default

    @is_default.setter
    def is_default(self, is_default):
        """Sets the is_default of this PersonImage.

        Whether the person's profile photo is the default one

        :param is_default: The is_default of this PersonImage.
        :type is_default: bool
        """

        self._is_default = is_default

    @property
    def url(self):
        """Gets the url of this PersonImage.

        The URL of the person's profile photo. To resize the image and crop it to a square, append the query string ?sz=x, where x is the dimension in pixels of each side.

        :return: The url of this PersonImage.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this PersonImage.

        The URL of the person's profile photo. To resize the image and crop it to a square, append the query string ?sz=x, where x is the dimension in pixels of each side.

        :param url: The url of this PersonImage.
        :type url: str
        """

        self._url = url
