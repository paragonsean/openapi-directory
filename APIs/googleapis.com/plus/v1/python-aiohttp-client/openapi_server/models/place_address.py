# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PlaceAddress(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, formatted: str=None):
        """PlaceAddress - a model defined in OpenAPI

        :param formatted: The formatted of this PlaceAddress.
        """
        self.openapi_types = {
            'formatted': str
        }

        self.attribute_map = {
            'formatted': 'formatted'
        }

        self._formatted = formatted

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PlaceAddress':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Place_address of this PlaceAddress.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def formatted(self):
        """Gets the formatted of this PlaceAddress.

        The formatted address for display.

        :return: The formatted of this PlaceAddress.
        :rtype: str
        """
        return self._formatted

    @formatted.setter
    def formatted(self, formatted):
        """Sets the formatted of this PlaceAddress.

        The formatted address for display.

        :param formatted: The formatted of this PlaceAddress.
        :type formatted: str
        """

        self._formatted = formatted
