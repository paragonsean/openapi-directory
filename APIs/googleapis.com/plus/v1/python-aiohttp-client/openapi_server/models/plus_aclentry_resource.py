# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PlusAclentryResource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, display_name: str=None, id: str=None, type: str=None):
        """PlusAclentryResource - a model defined in OpenAPI

        :param display_name: The display_name of this PlusAclentryResource.
        :param id: The id of this PlusAclentryResource.
        :param type: The type of this PlusAclentryResource.
        """
        self.openapi_types = {
            'display_name': str,
            'id': str,
            'type': str
        }

        self.attribute_map = {
            'display_name': 'displayName',
            'id': 'id',
            'type': 'type'
        }

        self._display_name = display_name
        self._id = id
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PlusAclentryResource':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PlusAclentryResource of this PlusAclentryResource.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def display_name(self):
        """Gets the display_name of this PlusAclentryResource.

        A descriptive name for this entry. Suitable for display.

        :return: The display_name of this PlusAclentryResource.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this PlusAclentryResource.

        A descriptive name for this entry. Suitable for display.

        :param display_name: The display_name of this PlusAclentryResource.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def id(self):
        """Gets the id of this PlusAclentryResource.

        The ID of the entry. For entries of type \"person\" or \"circle\", this is the ID of the resource. For other types, this property is not set.

        :return: The id of this PlusAclentryResource.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this PlusAclentryResource.

        The ID of the entry. For entries of type \"person\" or \"circle\", this is the ID of the resource. For other types, this property is not set.

        :param id: The id of this PlusAclentryResource.
        :type id: str
        """

        self._id = id

    @property
    def type(self):
        """Gets the type of this PlusAclentryResource.

        The type of entry describing to whom access is granted. Possible values are:   - \"person\" - Access to an individual.  - \"circle\" - Access to members of a circle.  - \"myCircles\" - Access to members of all the person's circles.  - \"extendedCircles\" - Access to members of all the person's circles, plus all of the people in their circles.  - \"domain\" - Access to members of the person's Google Apps domain.  - \"public\" - Access to anyone on the web.

        :return: The type of this PlusAclentryResource.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this PlusAclentryResource.

        The type of entry describing to whom access is granted. Possible values are:   - \"person\" - Access to an individual.  - \"circle\" - Access to members of a circle.  - \"myCircles\" - Access to members of all the person's circles.  - \"extendedCircles\" - Access to members of all the person's circles, plus all of the people in their circles.  - \"domain\" - Access to members of the person's Google Apps domain.  - \"public\" - Access to anyone on the web.

        :param type: The type of this PlusAclentryResource.
        :type type: str
        """

        self._type = type
