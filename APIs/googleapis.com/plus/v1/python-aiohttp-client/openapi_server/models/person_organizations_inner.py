# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PersonOrganizationsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, department: str=None, description: str=None, end_date: str=None, location: str=None, name: str=None, primary: bool=None, start_date: str=None, title: str=None, type: str=None):
        """PersonOrganizationsInner - a model defined in OpenAPI

        :param department: The department of this PersonOrganizationsInner.
        :param description: The description of this PersonOrganizationsInner.
        :param end_date: The end_date of this PersonOrganizationsInner.
        :param location: The location of this PersonOrganizationsInner.
        :param name: The name of this PersonOrganizationsInner.
        :param primary: The primary of this PersonOrganizationsInner.
        :param start_date: The start_date of this PersonOrganizationsInner.
        :param title: The title of this PersonOrganizationsInner.
        :param type: The type of this PersonOrganizationsInner.
        """
        self.openapi_types = {
            'department': str,
            'description': str,
            'end_date': str,
            'location': str,
            'name': str,
            'primary': bool,
            'start_date': str,
            'title': str,
            'type': str
        }

        self.attribute_map = {
            'department': 'department',
            'description': 'description',
            'end_date': 'endDate',
            'location': 'location',
            'name': 'name',
            'primary': 'primary',
            'start_date': 'startDate',
            'title': 'title',
            'type': 'type'
        }

        self._department = department
        self._description = description
        self._end_date = end_date
        self._location = location
        self._name = name
        self._primary = primary
        self._start_date = start_date
        self._title = title
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PersonOrganizationsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Person_organizations_inner of this PersonOrganizationsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def department(self):
        """Gets the department of this PersonOrganizationsInner.

        The department within the organization. Deprecated.

        :return: The department of this PersonOrganizationsInner.
        :rtype: str
        """
        return self._department

    @department.setter
    def department(self, department):
        """Sets the department of this PersonOrganizationsInner.

        The department within the organization. Deprecated.

        :param department: The department of this PersonOrganizationsInner.
        :type department: str
        """

        self._department = department

    @property
    def description(self):
        """Gets the description of this PersonOrganizationsInner.

        A short description of the person's role in this organization. Deprecated.

        :return: The description of this PersonOrganizationsInner.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this PersonOrganizationsInner.

        A short description of the person's role in this organization. Deprecated.

        :param description: The description of this PersonOrganizationsInner.
        :type description: str
        """

        self._description = description

    @property
    def end_date(self):
        """Gets the end_date of this PersonOrganizationsInner.

        The date that the person left this organization.

        :return: The end_date of this PersonOrganizationsInner.
        :rtype: str
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date):
        """Sets the end_date of this PersonOrganizationsInner.

        The date that the person left this organization.

        :param end_date: The end_date of this PersonOrganizationsInner.
        :type end_date: str
        """

        self._end_date = end_date

    @property
    def location(self):
        """Gets the location of this PersonOrganizationsInner.

        The location of this organization. Deprecated.

        :return: The location of this PersonOrganizationsInner.
        :rtype: str
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this PersonOrganizationsInner.

        The location of this organization. Deprecated.

        :param location: The location of this PersonOrganizationsInner.
        :type location: str
        """

        self._location = location

    @property
    def name(self):
        """Gets the name of this PersonOrganizationsInner.

        The name of the organization.

        :return: The name of this PersonOrganizationsInner.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this PersonOrganizationsInner.

        The name of the organization.

        :param name: The name of this PersonOrganizationsInner.
        :type name: str
        """

        self._name = name

    @property
    def primary(self):
        """Gets the primary of this PersonOrganizationsInner.

        If \"true\", indicates this organization is the person's primary one, which is typically interpreted as the current one.

        :return: The primary of this PersonOrganizationsInner.
        :rtype: bool
        """
        return self._primary

    @primary.setter
    def primary(self, primary):
        """Sets the primary of this PersonOrganizationsInner.

        If \"true\", indicates this organization is the person's primary one, which is typically interpreted as the current one.

        :param primary: The primary of this PersonOrganizationsInner.
        :type primary: bool
        """

        self._primary = primary

    @property
    def start_date(self):
        """Gets the start_date of this PersonOrganizationsInner.

        The date that the person joined this organization.

        :return: The start_date of this PersonOrganizationsInner.
        :rtype: str
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """Sets the start_date of this PersonOrganizationsInner.

        The date that the person joined this organization.

        :param start_date: The start_date of this PersonOrganizationsInner.
        :type start_date: str
        """

        self._start_date = start_date

    @property
    def title(self):
        """Gets the title of this PersonOrganizationsInner.

        The person's job title or role within the organization.

        :return: The title of this PersonOrganizationsInner.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this PersonOrganizationsInner.

        The person's job title or role within the organization.

        :param title: The title of this PersonOrganizationsInner.
        :type title: str
        """

        self._title = title

    @property
    def type(self):
        """Gets the type of this PersonOrganizationsInner.

        The type of organization. Possible values include, but are not limited to, the following values:   - \"work\" - Work.  - \"school\" - School.

        :return: The type of this PersonOrganizationsInner.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this PersonOrganizationsInner.

        The type of organization. Possible values include, but are not limited to, the following values:   - \"work\" - Work.  - \"school\" - School.

        :param type: The type of this PersonOrganizationsInner.
        :type type: str
        """

        self._type = type
