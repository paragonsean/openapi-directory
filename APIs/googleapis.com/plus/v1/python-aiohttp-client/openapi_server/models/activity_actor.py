# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.activity_actor_client_specific_actor_info import ActivityActorClientSpecificActorInfo
from openapi_server.models.activity_actor_image import ActivityActorImage
from openapi_server.models.activity_actor_name import ActivityActorName
from openapi_server.models.activity_actor_verification import ActivityActorVerification
from openapi_server import util


class ActivityActor(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, client_specific_actor_info: ActivityActorClientSpecificActorInfo=None, display_name: str=None, id: str=None, image: ActivityActorImage=None, name: ActivityActorName=None, url: str=None, verification: ActivityActorVerification=None):
        """ActivityActor - a model defined in OpenAPI

        :param client_specific_actor_info: The client_specific_actor_info of this ActivityActor.
        :param display_name: The display_name of this ActivityActor.
        :param id: The id of this ActivityActor.
        :param image: The image of this ActivityActor.
        :param name: The name of this ActivityActor.
        :param url: The url of this ActivityActor.
        :param verification: The verification of this ActivityActor.
        """
        self.openapi_types = {
            'client_specific_actor_info': ActivityActorClientSpecificActorInfo,
            'display_name': str,
            'id': str,
            'image': ActivityActorImage,
            'name': ActivityActorName,
            'url': str,
            'verification': ActivityActorVerification
        }

        self.attribute_map = {
            'client_specific_actor_info': 'clientSpecificActorInfo',
            'display_name': 'displayName',
            'id': 'id',
            'image': 'image',
            'name': 'name',
            'url': 'url',
            'verification': 'verification'
        }

        self._client_specific_actor_info = client_specific_actor_info
        self._display_name = display_name
        self._id = id
        self._image = image
        self._name = name
        self._url = url
        self._verification = verification

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ActivityActor':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Activity_actor of this ActivityActor.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def client_specific_actor_info(self):
        """Gets the client_specific_actor_info of this ActivityActor.


        :return: The client_specific_actor_info of this ActivityActor.
        :rtype: ActivityActorClientSpecificActorInfo
        """
        return self._client_specific_actor_info

    @client_specific_actor_info.setter
    def client_specific_actor_info(self, client_specific_actor_info):
        """Sets the client_specific_actor_info of this ActivityActor.


        :param client_specific_actor_info: The client_specific_actor_info of this ActivityActor.
        :type client_specific_actor_info: ActivityActorClientSpecificActorInfo
        """

        self._client_specific_actor_info = client_specific_actor_info

    @property
    def display_name(self):
        """Gets the display_name of this ActivityActor.

        The name of the actor, suitable for display.

        :return: The display_name of this ActivityActor.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this ActivityActor.

        The name of the actor, suitable for display.

        :param display_name: The display_name of this ActivityActor.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def id(self):
        """Gets the id of this ActivityActor.

        The ID of the actor's Person resource.

        :return: The id of this ActivityActor.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ActivityActor.

        The ID of the actor's Person resource.

        :param id: The id of this ActivityActor.
        :type id: str
        """

        self._id = id

    @property
    def image(self):
        """Gets the image of this ActivityActor.


        :return: The image of this ActivityActor.
        :rtype: ActivityActorImage
        """
        return self._image

    @image.setter
    def image(self, image):
        """Sets the image of this ActivityActor.


        :param image: The image of this ActivityActor.
        :type image: ActivityActorImage
        """

        self._image = image

    @property
    def name(self):
        """Gets the name of this ActivityActor.


        :return: The name of this ActivityActor.
        :rtype: ActivityActorName
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ActivityActor.


        :param name: The name of this ActivityActor.
        :type name: ActivityActorName
        """

        self._name = name

    @property
    def url(self):
        """Gets the url of this ActivityActor.

        The link to the actor's Google profile.

        :return: The url of this ActivityActor.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this ActivityActor.

        The link to the actor's Google profile.

        :param url: The url of this ActivityActor.
        :type url: str
        """

        self._url = url

    @property
    def verification(self):
        """Gets the verification of this ActivityActor.


        :return: The verification of this ActivityActor.
        :rtype: ActivityActorVerification
        """
        return self._verification

    @verification.setter
    def verification(self, verification):
        """Sets the verification of this ActivityActor.


        :param verification: The verification of this ActivityActor.
        :type verification: ActivityActorVerification
        """

        self._verification = verification
