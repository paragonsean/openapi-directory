# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.activity_object_attachments_inner_thumbnails_inner_image import ActivityObjectAttachmentsInnerThumbnailsInnerImage
from openapi_server import util


class ActivityObjectAttachmentsInnerThumbnailsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, image: ActivityObjectAttachmentsInnerThumbnailsInnerImage=None, url: str=None):
        """ActivityObjectAttachmentsInnerThumbnailsInner - a model defined in OpenAPI

        :param description: The description of this ActivityObjectAttachmentsInnerThumbnailsInner.
        :param image: The image of this ActivityObjectAttachmentsInnerThumbnailsInner.
        :param url: The url of this ActivityObjectAttachmentsInnerThumbnailsInner.
        """
        self.openapi_types = {
            'description': str,
            'image': ActivityObjectAttachmentsInnerThumbnailsInnerImage,
            'url': str
        }

        self.attribute_map = {
            'description': 'description',
            'image': 'image',
            'url': 'url'
        }

        self._description = description
        self._image = image
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ActivityObjectAttachmentsInnerThumbnailsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Activity_object_attachments_inner_thumbnails_inner of this ActivityObjectAttachmentsInnerThumbnailsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this ActivityObjectAttachmentsInnerThumbnailsInner.

        Potential name of the thumbnail.

        :return: The description of this ActivityObjectAttachmentsInnerThumbnailsInner.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ActivityObjectAttachmentsInnerThumbnailsInner.

        Potential name of the thumbnail.

        :param description: The description of this ActivityObjectAttachmentsInnerThumbnailsInner.
        :type description: str
        """

        self._description = description

    @property
    def image(self):
        """Gets the image of this ActivityObjectAttachmentsInnerThumbnailsInner.


        :return: The image of this ActivityObjectAttachmentsInnerThumbnailsInner.
        :rtype: ActivityObjectAttachmentsInnerThumbnailsInnerImage
        """
        return self._image

    @image.setter
    def image(self, image):
        """Sets the image of this ActivityObjectAttachmentsInnerThumbnailsInner.


        :param image: The image of this ActivityObjectAttachmentsInnerThumbnailsInner.
        :type image: ActivityObjectAttachmentsInnerThumbnailsInnerImage
        """

        self._image = image

    @property
    def url(self):
        """Gets the url of this ActivityObjectAttachmentsInnerThumbnailsInner.

        URL of the webpage containing the image.

        :return: The url of this ActivityObjectAttachmentsInnerThumbnailsInner.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this ActivityObjectAttachmentsInnerThumbnailsInner.

        URL of the webpage containing the image.

        :param url: The url of this ActivityObjectAttachmentsInnerThumbnailsInner.
        :type url: str
        """

        self._url = url
