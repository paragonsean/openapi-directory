/**
 * Google+ API
 * Builds on top of the Google+ platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIComment_plusoners.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIComment_plusoners::OAIComment_plusoners(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIComment_plusoners::OAIComment_plusoners() {
    this->initializeModel();
}

OAIComment_plusoners::~OAIComment_plusoners() {}

void OAIComment_plusoners::initializeModel() {

    m_total_items_isSet = false;
    m_total_items_isValid = false;
}

void OAIComment_plusoners::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIComment_plusoners::fromJsonObject(QJsonObject json) {

    m_total_items_isValid = ::OpenAPI::fromJsonValue(m_total_items, json[QString("totalItems")]);
    m_total_items_isSet = !json[QString("totalItems")].isNull() && m_total_items_isValid;
}

QString OAIComment_plusoners::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIComment_plusoners::asJsonObject() const {
    QJsonObject obj;
    if (m_total_items_isSet) {
        obj.insert(QString("totalItems"), ::OpenAPI::toJsonValue(m_total_items));
    }
    return obj;
}

qint32 OAIComment_plusoners::getTotalItems() const {
    return m_total_items;
}
void OAIComment_plusoners::setTotalItems(const qint32 &total_items) {
    m_total_items = total_items;
    m_total_items_isSet = true;
}

bool OAIComment_plusoners::is_total_items_Set() const{
    return m_total_items_isSet;
}

bool OAIComment_plusoners::is_total_items_Valid() const{
    return m_total_items_isValid;
}

bool OAIComment_plusoners::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_total_items_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIComment_plusoners::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
