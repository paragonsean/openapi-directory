/**
 * Google+ API
 * Builds on top of the Google+ platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIActivity.h
 *
 * 
 */

#ifndef OAIActivity_H
#define OAIActivity_H

#include <QJsonObject>

#include "OAIAcl.h"
#include "OAIActivity_actor.h"
#include "OAIActivity_object.h"
#include "OAIActivity_provider.h"
#include "OAIPlace.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAcl;
class OAIActivity_actor;
class OAIPlace;
class OAIActivity_object;
class OAIActivity_provider;

class OAIActivity : public OAIObject {
public:
    OAIActivity();
    OAIActivity(QString json);
    ~OAIActivity() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAcl getAccess() const;
    void setAccess(const OAIAcl &access);
    bool is_access_Set() const;
    bool is_access_Valid() const;

    OAIActivity_actor getActor() const;
    void setActor(const OAIActivity_actor &actor);
    bool is_actor_Set() const;
    bool is_actor_Valid() const;

    QString getAddress() const;
    void setAddress(const QString &address);
    bool is_address_Set() const;
    bool is_address_Valid() const;

    QString getAnnotation() const;
    void setAnnotation(const QString &annotation);
    bool is_annotation_Set() const;
    bool is_annotation_Valid() const;

    QString getCrosspostSource() const;
    void setCrosspostSource(const QString &crosspost_source);
    bool is_crosspost_source_Set() const;
    bool is_crosspost_source_Valid() const;

    QString getEtag() const;
    void setEtag(const QString &etag);
    bool is_etag_Set() const;
    bool is_etag_Valid() const;

    QString getGeocode() const;
    void setGeocode(const QString &geocode);
    bool is_geocode_Set() const;
    bool is_geocode_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    OAIPlace getLocation() const;
    void setLocation(const OAIPlace &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    OAIActivity_object getObject() const;
    void setObject(const OAIActivity_object &object);
    bool is_object_Set() const;
    bool is_object_Valid() const;

    QString getPlaceId() const;
    void setPlaceId(const QString &place_id);
    bool is_place_id_Set() const;
    bool is_place_id_Valid() const;

    QString getPlaceName() const;
    void setPlaceName(const QString &place_name);
    bool is_place_name_Set() const;
    bool is_place_name_Valid() const;

    OAIActivity_provider getProvider() const;
    void setProvider(const OAIActivity_provider &provider);
    bool is_provider_Set() const;
    bool is_provider_Valid() const;

    QDateTime getPublished() const;
    void setPublished(const QDateTime &published);
    bool is_published_Set() const;
    bool is_published_Valid() const;

    QString getRadius() const;
    void setRadius(const QString &radius);
    bool is_radius_Set() const;
    bool is_radius_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QDateTime getUpdated() const;
    void setUpdated(const QDateTime &updated);
    bool is_updated_Set() const;
    bool is_updated_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    QString getVerb() const;
    void setVerb(const QString &verb);
    bool is_verb_Set() const;
    bool is_verb_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAcl m_access;
    bool m_access_isSet;
    bool m_access_isValid;

    OAIActivity_actor m_actor;
    bool m_actor_isSet;
    bool m_actor_isValid;

    QString m_address;
    bool m_address_isSet;
    bool m_address_isValid;

    QString m_annotation;
    bool m_annotation_isSet;
    bool m_annotation_isValid;

    QString m_crosspost_source;
    bool m_crosspost_source_isSet;
    bool m_crosspost_source_isValid;

    QString m_etag;
    bool m_etag_isSet;
    bool m_etag_isValid;

    QString m_geocode;
    bool m_geocode_isSet;
    bool m_geocode_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    OAIPlace m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    OAIActivity_object m_object;
    bool m_object_isSet;
    bool m_object_isValid;

    QString m_place_id;
    bool m_place_id_isSet;
    bool m_place_id_isValid;

    QString m_place_name;
    bool m_place_name_isSet;
    bool m_place_name_isValid;

    OAIActivity_provider m_provider;
    bool m_provider_isSet;
    bool m_provider_isValid;

    QDateTime m_published;
    bool m_published_isSet;
    bool m_published_isValid;

    QString m_radius;
    bool m_radius_isSet;
    bool m_radius_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QDateTime m_updated;
    bool m_updated_isSet;
    bool m_updated_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;

    QString m_verb;
    bool m_verb_isSet;
    bool m_verb_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIActivity)

#endif // OAIActivity_H
