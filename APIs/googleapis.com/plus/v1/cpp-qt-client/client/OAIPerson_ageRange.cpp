/**
 * Google+ API
 * Builds on top of the Google+ platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPerson_ageRange.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPerson_ageRange::OAIPerson_ageRange(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPerson_ageRange::OAIPerson_ageRange() {
    this->initializeModel();
}

OAIPerson_ageRange::~OAIPerson_ageRange() {}

void OAIPerson_ageRange::initializeModel() {

    m_max_isSet = false;
    m_max_isValid = false;

    m_min_isSet = false;
    m_min_isValid = false;
}

void OAIPerson_ageRange::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPerson_ageRange::fromJsonObject(QJsonObject json) {

    m_max_isValid = ::OpenAPI::fromJsonValue(m_max, json[QString("max")]);
    m_max_isSet = !json[QString("max")].isNull() && m_max_isValid;

    m_min_isValid = ::OpenAPI::fromJsonValue(m_min, json[QString("min")]);
    m_min_isSet = !json[QString("min")].isNull() && m_min_isValid;
}

QString OAIPerson_ageRange::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPerson_ageRange::asJsonObject() const {
    QJsonObject obj;
    if (m_max_isSet) {
        obj.insert(QString("max"), ::OpenAPI::toJsonValue(m_max));
    }
    if (m_min_isSet) {
        obj.insert(QString("min"), ::OpenAPI::toJsonValue(m_min));
    }
    return obj;
}

qint32 OAIPerson_ageRange::getMax() const {
    return m_max;
}
void OAIPerson_ageRange::setMax(const qint32 &max) {
    m_max = max;
    m_max_isSet = true;
}

bool OAIPerson_ageRange::is_max_Set() const{
    return m_max_isSet;
}

bool OAIPerson_ageRange::is_max_Valid() const{
    return m_max_isValid;
}

qint32 OAIPerson_ageRange::getMin() const {
    return m_min;
}
void OAIPerson_ageRange::setMin(const qint32 &min) {
    m_min = min;
    m_min_isSet = true;
}

bool OAIPerson_ageRange::is_min_Set() const{
    return m_min_isSet;
}

bool OAIPerson_ageRange::is_min_Valid() const{
    return m_min_isValid;
}

bool OAIPerson_ageRange::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_max_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_min_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPerson_ageRange::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
