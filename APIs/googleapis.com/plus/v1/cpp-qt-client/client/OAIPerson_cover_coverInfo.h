/**
 * Google+ API
 * Builds on top of the Google+ platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPerson_cover_coverInfo.h
 *
 * Extra information about the cover photo.
 */

#ifndef OAIPerson_cover_coverInfo_H
#define OAIPerson_cover_coverInfo_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPerson_cover_coverInfo : public OAIObject {
public:
    OAIPerson_cover_coverInfo();
    OAIPerson_cover_coverInfo(QString json);
    ~OAIPerson_cover_coverInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getLeftImageOffset() const;
    void setLeftImageOffset(const qint32 &left_image_offset);
    bool is_left_image_offset_Set() const;
    bool is_left_image_offset_Valid() const;

    qint32 getTopImageOffset() const;
    void setTopImageOffset(const qint32 &top_image_offset);
    bool is_top_image_offset_Set() const;
    bool is_top_image_offset_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_left_image_offset;
    bool m_left_image_offset_isSet;
    bool m_left_image_offset_isValid;

    qint32 m_top_image_offset;
    bool m_top_image_offset_isSet;
    bool m_top_image_offset_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPerson_cover_coverInfo)

#endif // OAIPerson_cover_coverInfo_H
