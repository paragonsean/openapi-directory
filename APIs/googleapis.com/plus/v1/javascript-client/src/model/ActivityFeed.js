/**
 * Google+ API
 * Builds on top of the Google+ platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Activity from './Activity';

/**
 * The ActivityFeed model module.
 * @module model/ActivityFeed
 * @version v1
 */
class ActivityFeed {
    /**
     * Constructs a new <code>ActivityFeed</code>.
     * @alias module:model/ActivityFeed
     */
    constructor() { 
        
        ActivityFeed.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['kind'] = 'plus#activityFeed';
    }

    /**
     * Constructs a <code>ActivityFeed</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ActivityFeed} obj Optional instance to populate.
     * @return {module:model/ActivityFeed} The populated <code>ActivityFeed</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ActivityFeed();

            if (data.hasOwnProperty('etag')) {
                obj['etag'] = ApiClient.convertToType(data['etag'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('items')) {
                obj['items'] = ApiClient.convertToType(data['items'], [Activity]);
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('nextLink')) {
                obj['nextLink'] = ApiClient.convertToType(data['nextLink'], 'String');
            }
            if (data.hasOwnProperty('nextPageToken')) {
                obj['nextPageToken'] = ApiClient.convertToType(data['nextPageToken'], 'String');
            }
            if (data.hasOwnProperty('selfLink')) {
                obj['selfLink'] = ApiClient.convertToType(data['selfLink'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('updated')) {
                obj['updated'] = ApiClient.convertToType(data['updated'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ActivityFeed</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ActivityFeed</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['etag'] && !(typeof data['etag'] === 'string' || data['etag'] instanceof String)) {
            throw new Error("Expected the field `etag` to be a primitive type in the JSON string but got " + data['etag']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        if (data['items']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['items'])) {
                throw new Error("Expected the field `items` to be an array in the JSON data but got " + data['items']);
            }
            // validate the optional field `items` (array)
            for (const item of data['items']) {
                Activity.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }
        // ensure the json data is a string
        if (data['nextLink'] && !(typeof data['nextLink'] === 'string' || data['nextLink'] instanceof String)) {
            throw new Error("Expected the field `nextLink` to be a primitive type in the JSON string but got " + data['nextLink']);
        }
        // ensure the json data is a string
        if (data['nextPageToken'] && !(typeof data['nextPageToken'] === 'string' || data['nextPageToken'] instanceof String)) {
            throw new Error("Expected the field `nextPageToken` to be a primitive type in the JSON string but got " + data['nextPageToken']);
        }
        // ensure the json data is a string
        if (data['selfLink'] && !(typeof data['selfLink'] === 'string' || data['selfLink'] instanceof String)) {
            throw new Error("Expected the field `selfLink` to be a primitive type in the JSON string but got " + data['selfLink']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }

        return true;
    }


}



/**
 * ETag of this response for caching purposes.
 * @member {String} etag
 */
ActivityFeed.prototype['etag'] = undefined;

/**
 * The ID of this collection of activities. Deprecated.
 * @member {String} id
 */
ActivityFeed.prototype['id'] = undefined;

/**
 * The activities in this page of results.
 * @member {Array.<module:model/Activity>} items
 */
ActivityFeed.prototype['items'] = undefined;

/**
 * Identifies this resource as a collection of activities. Value: \"plus#activityFeed\".
 * @member {String} kind
 * @default 'plus#activityFeed'
 */
ActivityFeed.prototype['kind'] = 'plus#activityFeed';

/**
 * Link to the next page of activities.
 * @member {String} nextLink
 */
ActivityFeed.prototype['nextLink'] = undefined;

/**
 * The continuation token, which is used to page through large result sets. Provide this value in a subsequent request to return the next page of results.
 * @member {String} nextPageToken
 */
ActivityFeed.prototype['nextPageToken'] = undefined;

/**
 * Link to this activity resource.
 * @member {String} selfLink
 */
ActivityFeed.prototype['selfLink'] = undefined;

/**
 * The title of this collection of activities, which is a truncated portion of the content.
 * @member {String} title
 */
ActivityFeed.prototype['title'] = undefined;

/**
 * The time at which this collection of activities was last updated. Formatted as an RFC 3339 timestamp.
 * @member {Date} updated
 */
ActivityFeed.prototype['updated'] = undefined;






export default ActivityFeed;

