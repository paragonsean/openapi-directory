/**
 * Google+ API
 * Builds on top of the Google+ platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ActivityActorClientSpecificActorInfo from './ActivityActorClientSpecificActorInfo';
import ActivityActorVerification from './ActivityActorVerification';
import ActivityObjectActorImage from './ActivityObjectActorImage';

/**
 * The ActivityObjectActor model module.
 * @module model/ActivityObjectActor
 * @version v1
 */
class ActivityObjectActor {
    /**
     * Constructs a new <code>ActivityObjectActor</code>.
     * If this activity&#39;s object is itself another activity, such as when a person reshares an activity, this property specifies the original activity&#39;s actor.
     * @alias module:model/ActivityObjectActor
     */
    constructor() { 
        
        ActivityObjectActor.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ActivityObjectActor</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ActivityObjectActor} obj Optional instance to populate.
     * @return {module:model/ActivityObjectActor} The populated <code>ActivityObjectActor</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ActivityObjectActor();

            if (data.hasOwnProperty('clientSpecificActorInfo')) {
                obj['clientSpecificActorInfo'] = ActivityActorClientSpecificActorInfo.constructFromObject(data['clientSpecificActorInfo']);
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('image')) {
                obj['image'] = ActivityObjectActorImage.constructFromObject(data['image']);
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
            if (data.hasOwnProperty('verification')) {
                obj['verification'] = ActivityActorVerification.constructFromObject(data['verification']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ActivityObjectActor</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ActivityObjectActor</code>.
     */
    static validateJSON(data) {
        // validate the optional field `clientSpecificActorInfo`
        if (data['clientSpecificActorInfo']) { // data not null
          ActivityActorClientSpecificActorInfo.validateJSON(data['clientSpecificActorInfo']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // validate the optional field `image`
        if (data['image']) { // data not null
          ActivityObjectActorImage.validateJSON(data['image']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }
        // validate the optional field `verification`
        if (data['verification']) { // data not null
          ActivityActorVerification.validateJSON(data['verification']);
        }

        return true;
    }


}



/**
 * @member {module:model/ActivityActorClientSpecificActorInfo} clientSpecificActorInfo
 */
ActivityObjectActor.prototype['clientSpecificActorInfo'] = undefined;

/**
 * The original actor's name, which is suitable for display.
 * @member {String} displayName
 */
ActivityObjectActor.prototype['displayName'] = undefined;

/**
 * ID of the original actor.
 * @member {String} id
 */
ActivityObjectActor.prototype['id'] = undefined;

/**
 * @member {module:model/ActivityObjectActorImage} image
 */
ActivityObjectActor.prototype['image'] = undefined;

/**
 * A link to the original actor's Google profile.
 * @member {String} url
 */
ActivityObjectActor.prototype['url'] = undefined;

/**
 * @member {module:model/ActivityActorVerification} verification
 */
ActivityObjectActor.prototype['verification'] = undefined;






export default ActivityObjectActor;

