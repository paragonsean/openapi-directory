/**
 * Google+ API
 * Builds on top of the Google+ platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PersonCoverCoverInfo model module.
 * @module model/PersonCoverCoverInfo
 * @version v1
 */
class PersonCoverCoverInfo {
    /**
     * Constructs a new <code>PersonCoverCoverInfo</code>.
     * Extra information about the cover photo.
     * @alias module:model/PersonCoverCoverInfo
     */
    constructor() { 
        
        PersonCoverCoverInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PersonCoverCoverInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PersonCoverCoverInfo} obj Optional instance to populate.
     * @return {module:model/PersonCoverCoverInfo} The populated <code>PersonCoverCoverInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PersonCoverCoverInfo();

            if (data.hasOwnProperty('leftImageOffset')) {
                obj['leftImageOffset'] = ApiClient.convertToType(data['leftImageOffset'], 'Number');
            }
            if (data.hasOwnProperty('topImageOffset')) {
                obj['topImageOffset'] = ApiClient.convertToType(data['topImageOffset'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PersonCoverCoverInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PersonCoverCoverInfo</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * The difference between the left position of the cover image and the actual displayed cover image. Only valid for banner layout.
 * @member {Number} leftImageOffset
 */
PersonCoverCoverInfo.prototype['leftImageOffset'] = undefined;

/**
 * The difference between the top position of the cover image and the actual displayed cover image. Only valid for banner layout.
 * @member {Number} topImageOffset
 */
PersonCoverCoverInfo.prototype['topImageOffset'] = undefined;






export default PersonCoverCoverInfo;

