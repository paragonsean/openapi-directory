/**
 * Google+ API
 * Builds on top of the Google+ platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GoogleApi);
  }
}(this, function(expect, GoogleApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GoogleApi.Activity();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Activity', function() {
    it('should create an instance of Activity', function() {
      // uncomment below and update the code to test Activity
      //var instance = new GoogleApi.Activity();
      //expect(instance).to.be.a(GoogleApi.Activity);
    });

    it('should have the property access (base name: "access")', function() {
      // uncomment below and update the code to test the property access
      //var instance = new GoogleApi.Activity();
      //expect(instance).to.be();
    });

    it('should have the property actor (base name: "actor")', function() {
      // uncomment below and update the code to test the property actor
      //var instance = new GoogleApi.Activity();
      //expect(instance).to.be();
    });

    it('should have the property address (base name: "address")', function() {
      // uncomment below and update the code to test the property address
      //var instance = new GoogleApi.Activity();
      //expect(instance).to.be();
    });

    it('should have the property annotation (base name: "annotation")', function() {
      // uncomment below and update the code to test the property annotation
      //var instance = new GoogleApi.Activity();
      //expect(instance).to.be();
    });

    it('should have the property crosspostSource (base name: "crosspostSource")', function() {
      // uncomment below and update the code to test the property crosspostSource
      //var instance = new GoogleApi.Activity();
      //expect(instance).to.be();
    });

    it('should have the property etag (base name: "etag")', function() {
      // uncomment below and update the code to test the property etag
      //var instance = new GoogleApi.Activity();
      //expect(instance).to.be();
    });

    it('should have the property geocode (base name: "geocode")', function() {
      // uncomment below and update the code to test the property geocode
      //var instance = new GoogleApi.Activity();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new GoogleApi.Activity();
      //expect(instance).to.be();
    });

    it('should have the property kind (base name: "kind")', function() {
      // uncomment below and update the code to test the property kind
      //var instance = new GoogleApi.Activity();
      //expect(instance).to.be();
    });

    it('should have the property location (base name: "location")', function() {
      // uncomment below and update the code to test the property location
      //var instance = new GoogleApi.Activity();
      //expect(instance).to.be();
    });

    it('should have the property object (base name: "object")', function() {
      // uncomment below and update the code to test the property object
      //var instance = new GoogleApi.Activity();
      //expect(instance).to.be();
    });

    it('should have the property placeId (base name: "placeId")', function() {
      // uncomment below and update the code to test the property placeId
      //var instance = new GoogleApi.Activity();
      //expect(instance).to.be();
    });

    it('should have the property placeName (base name: "placeName")', function() {
      // uncomment below and update the code to test the property placeName
      //var instance = new GoogleApi.Activity();
      //expect(instance).to.be();
    });

    it('should have the property provider (base name: "provider")', function() {
      // uncomment below and update the code to test the property provider
      //var instance = new GoogleApi.Activity();
      //expect(instance).to.be();
    });

    it('should have the property published (base name: "published")', function() {
      // uncomment below and update the code to test the property published
      //var instance = new GoogleApi.Activity();
      //expect(instance).to.be();
    });

    it('should have the property radius (base name: "radius")', function() {
      // uncomment below and update the code to test the property radius
      //var instance = new GoogleApi.Activity();
      //expect(instance).to.be();
    });

    it('should have the property title (base name: "title")', function() {
      // uncomment below and update the code to test the property title
      //var instance = new GoogleApi.Activity();
      //expect(instance).to.be();
    });

    it('should have the property updated (base name: "updated")', function() {
      // uncomment below and update the code to test the property updated
      //var instance = new GoogleApi.Activity();
      //expect(instance).to.be();
    });

    it('should have the property url (base name: "url")', function() {
      // uncomment below and update the code to test the property url
      //var instance = new GoogleApi.Activity();
      //expect(instance).to.be();
    });

    it('should have the property verb (base name: "verb")', function() {
      // uncomment below and update the code to test the property verb
      //var instance = new GoogleApi.Activity();
      //expect(instance).to.be();
    });

  });

}));
