/**
 * Google+ API
 * Builds on top of the Google+ platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GoogleApi);
  }
}(this, function(expect, GoogleApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GoogleApi.Person();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Person', function() {
    it('should create an instance of Person', function() {
      // uncomment below and update the code to test Person
      //var instance = new GoogleApi.Person();
      //expect(instance).to.be.a(GoogleApi.Person);
    });

    it('should have the property aboutMe (base name: "aboutMe")', function() {
      // uncomment below and update the code to test the property aboutMe
      //var instance = new GoogleApi.Person();
      //expect(instance).to.be();
    });

    it('should have the property ageRange (base name: "ageRange")', function() {
      // uncomment below and update the code to test the property ageRange
      //var instance = new GoogleApi.Person();
      //expect(instance).to.be();
    });

    it('should have the property birthday (base name: "birthday")', function() {
      // uncomment below and update the code to test the property birthday
      //var instance = new GoogleApi.Person();
      //expect(instance).to.be();
    });

    it('should have the property braggingRights (base name: "braggingRights")', function() {
      // uncomment below and update the code to test the property braggingRights
      //var instance = new GoogleApi.Person();
      //expect(instance).to.be();
    });

    it('should have the property circledByCount (base name: "circledByCount")', function() {
      // uncomment below and update the code to test the property circledByCount
      //var instance = new GoogleApi.Person();
      //expect(instance).to.be();
    });

    it('should have the property cover (base name: "cover")', function() {
      // uncomment below and update the code to test the property cover
      //var instance = new GoogleApi.Person();
      //expect(instance).to.be();
    });

    it('should have the property currentLocation (base name: "currentLocation")', function() {
      // uncomment below and update the code to test the property currentLocation
      //var instance = new GoogleApi.Person();
      //expect(instance).to.be();
    });

    it('should have the property displayName (base name: "displayName")', function() {
      // uncomment below and update the code to test the property displayName
      //var instance = new GoogleApi.Person();
      //expect(instance).to.be();
    });

    it('should have the property domain (base name: "domain")', function() {
      // uncomment below and update the code to test the property domain
      //var instance = new GoogleApi.Person();
      //expect(instance).to.be();
    });

    it('should have the property emails (base name: "emails")', function() {
      // uncomment below and update the code to test the property emails
      //var instance = new GoogleApi.Person();
      //expect(instance).to.be();
    });

    it('should have the property etag (base name: "etag")', function() {
      // uncomment below and update the code to test the property etag
      //var instance = new GoogleApi.Person();
      //expect(instance).to.be();
    });

    it('should have the property gender (base name: "gender")', function() {
      // uncomment below and update the code to test the property gender
      //var instance = new GoogleApi.Person();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new GoogleApi.Person();
      //expect(instance).to.be();
    });

    it('should have the property image (base name: "image")', function() {
      // uncomment below and update the code to test the property image
      //var instance = new GoogleApi.Person();
      //expect(instance).to.be();
    });

    it('should have the property isPlusUser (base name: "isPlusUser")', function() {
      // uncomment below and update the code to test the property isPlusUser
      //var instance = new GoogleApi.Person();
      //expect(instance).to.be();
    });

    it('should have the property kind (base name: "kind")', function() {
      // uncomment below and update the code to test the property kind
      //var instance = new GoogleApi.Person();
      //expect(instance).to.be();
    });

    it('should have the property language (base name: "language")', function() {
      // uncomment below and update the code to test the property language
      //var instance = new GoogleApi.Person();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new GoogleApi.Person();
      //expect(instance).to.be();
    });

    it('should have the property nickname (base name: "nickname")', function() {
      // uncomment below and update the code to test the property nickname
      //var instance = new GoogleApi.Person();
      //expect(instance).to.be();
    });

    it('should have the property objectType (base name: "objectType")', function() {
      // uncomment below and update the code to test the property objectType
      //var instance = new GoogleApi.Person();
      //expect(instance).to.be();
    });

    it('should have the property occupation (base name: "occupation")', function() {
      // uncomment below and update the code to test the property occupation
      //var instance = new GoogleApi.Person();
      //expect(instance).to.be();
    });

    it('should have the property organizations (base name: "organizations")', function() {
      // uncomment below and update the code to test the property organizations
      //var instance = new GoogleApi.Person();
      //expect(instance).to.be();
    });

    it('should have the property placesLived (base name: "placesLived")', function() {
      // uncomment below and update the code to test the property placesLived
      //var instance = new GoogleApi.Person();
      //expect(instance).to.be();
    });

    it('should have the property plusOneCount (base name: "plusOneCount")', function() {
      // uncomment below and update the code to test the property plusOneCount
      //var instance = new GoogleApi.Person();
      //expect(instance).to.be();
    });

    it('should have the property relationshipStatus (base name: "relationshipStatus")', function() {
      // uncomment below and update the code to test the property relationshipStatus
      //var instance = new GoogleApi.Person();
      //expect(instance).to.be();
    });

    it('should have the property skills (base name: "skills")', function() {
      // uncomment below and update the code to test the property skills
      //var instance = new GoogleApi.Person();
      //expect(instance).to.be();
    });

    it('should have the property tagline (base name: "tagline")', function() {
      // uncomment below and update the code to test the property tagline
      //var instance = new GoogleApi.Person();
      //expect(instance).to.be();
    });

    it('should have the property url (base name: "url")', function() {
      // uncomment below and update the code to test the property url
      //var instance = new GoogleApi.Person();
      //expect(instance).to.be();
    });

    it('should have the property urls (base name: "urls")', function() {
      // uncomment below and update the code to test the property urls
      //var instance = new GoogleApi.Person();
      //expect(instance).to.be();
    });

    it('should have the property verified (base name: "verified")', function() {
      // uncomment below and update the code to test the property verified
      //var instance = new GoogleApi.Person();
      //expect(instance).to.be();
    });

  });

}));
