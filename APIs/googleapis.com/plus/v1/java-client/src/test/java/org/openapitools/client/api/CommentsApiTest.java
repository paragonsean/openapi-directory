/*
 * Google+ API
 * Builds on top of the Google+ platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Comment;
import org.openapitools.client.model.CommentFeed;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CommentsApi
 */
@Disabled
public class CommentsApiTest {

    private final CommentsApi api = new CommentsApi();

    /**
     * Shut down. See https://developers.google.com/+/api-shutdown for more details.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void plusCommentsGetTest() throws ApiException {
        String commentId = null;
        String alt = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String userIp = null;
        Comment response = api.plusCommentsGet(commentId, alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp);
        // TODO: test validations
    }

    /**
     * Shut down. See https://developers.google.com/+/api-shutdown for more details.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void plusCommentsListTest() throws ApiException {
        String activityId = null;
        String alt = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String userIp = null;
        Integer maxResults = null;
        String pageToken = null;
        String sortOrder = null;
        CommentFeed response = api.plusCommentsList(activityId, alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp, maxResults, pageToken, sortOrder);
        // TODO: test validations
    }

}
