# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudVideointelligenceV1p1beta1LabelFrame(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, confidence: float=None, time_offset: str=None):
        """GoogleCloudVideointelligenceV1p1beta1LabelFrame - a model defined in OpenAPI

        :param confidence: The confidence of this GoogleCloudVideointelligenceV1p1beta1LabelFrame.
        :param time_offset: The time_offset of this GoogleCloudVideointelligenceV1p1beta1LabelFrame.
        """
        self.openapi_types = {
            'confidence': float,
            'time_offset': str
        }

        self.attribute_map = {
            'confidence': 'confidence',
            'time_offset': 'timeOffset'
        }

        self._confidence = confidence
        self._time_offset = time_offset

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudVideointelligenceV1p1beta1LabelFrame':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudVideointelligenceV1p1beta1_LabelFrame of this GoogleCloudVideointelligenceV1p1beta1LabelFrame.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def confidence(self):
        """Gets the confidence of this GoogleCloudVideointelligenceV1p1beta1LabelFrame.

        Confidence that the label is accurate. Range: [0, 1].

        :return: The confidence of this GoogleCloudVideointelligenceV1p1beta1LabelFrame.
        :rtype: float
        """
        return self._confidence

    @confidence.setter
    def confidence(self, confidence):
        """Sets the confidence of this GoogleCloudVideointelligenceV1p1beta1LabelFrame.

        Confidence that the label is accurate. Range: [0, 1].

        :param confidence: The confidence of this GoogleCloudVideointelligenceV1p1beta1LabelFrame.
        :type confidence: float
        """

        self._confidence = confidence

    @property
    def time_offset(self):
        """Gets the time_offset of this GoogleCloudVideointelligenceV1p1beta1LabelFrame.

        Time-offset, relative to the beginning of the video, corresponding to the video frame for this location.

        :return: The time_offset of this GoogleCloudVideointelligenceV1p1beta1LabelFrame.
        :rtype: str
        """
        return self._time_offset

    @time_offset.setter
    def time_offset(self, time_offset):
        """Sets the time_offset of this GoogleCloudVideointelligenceV1p1beta1LabelFrame.

        Time-offset, relative to the beginning of the video, corresponding to the video frame for this location.

        :param time_offset: The time_offset of this GoogleCloudVideointelligenceV1p1beta1LabelFrame.
        :type time_offset: str
        """

        self._time_offset = time_offset
