# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudVideointelligenceV1p2beta1LabelDetectionConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, frame_confidence_threshold: float=None, label_detection_mode: str=None, model: str=None, stationary_camera: bool=None, video_confidence_threshold: float=None):
        """GoogleCloudVideointelligenceV1p2beta1LabelDetectionConfig - a model defined in OpenAPI

        :param frame_confidence_threshold: The frame_confidence_threshold of this GoogleCloudVideointelligenceV1p2beta1LabelDetectionConfig.
        :param label_detection_mode: The label_detection_mode of this GoogleCloudVideointelligenceV1p2beta1LabelDetectionConfig.
        :param model: The model of this GoogleCloudVideointelligenceV1p2beta1LabelDetectionConfig.
        :param stationary_camera: The stationary_camera of this GoogleCloudVideointelligenceV1p2beta1LabelDetectionConfig.
        :param video_confidence_threshold: The video_confidence_threshold of this GoogleCloudVideointelligenceV1p2beta1LabelDetectionConfig.
        """
        self.openapi_types = {
            'frame_confidence_threshold': float,
            'label_detection_mode': str,
            'model': str,
            'stationary_camera': bool,
            'video_confidence_threshold': float
        }

        self.attribute_map = {
            'frame_confidence_threshold': 'frameConfidenceThreshold',
            'label_detection_mode': 'labelDetectionMode',
            'model': 'model',
            'stationary_camera': 'stationaryCamera',
            'video_confidence_threshold': 'videoConfidenceThreshold'
        }

        self._frame_confidence_threshold = frame_confidence_threshold
        self._label_detection_mode = label_detection_mode
        self._model = model
        self._stationary_camera = stationary_camera
        self._video_confidence_threshold = video_confidence_threshold

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudVideointelligenceV1p2beta1LabelDetectionConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudVideointelligenceV1p2beta1_LabelDetectionConfig of this GoogleCloudVideointelligenceV1p2beta1LabelDetectionConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def frame_confidence_threshold(self):
        """Gets the frame_confidence_threshold of this GoogleCloudVideointelligenceV1p2beta1LabelDetectionConfig.

        The confidence threshold we perform filtering on the labels from frame-level detection. If not set, it is set to 0.4 by default. The valid range for this threshold is [0.1, 0.9]. Any value set outside of this range will be clipped. Note: For best results, follow the default threshold. We will update the default threshold everytime when we release a new model.

        :return: The frame_confidence_threshold of this GoogleCloudVideointelligenceV1p2beta1LabelDetectionConfig.
        :rtype: float
        """
        return self._frame_confidence_threshold

    @frame_confidence_threshold.setter
    def frame_confidence_threshold(self, frame_confidence_threshold):
        """Sets the frame_confidence_threshold of this GoogleCloudVideointelligenceV1p2beta1LabelDetectionConfig.

        The confidence threshold we perform filtering on the labels from frame-level detection. If not set, it is set to 0.4 by default. The valid range for this threshold is [0.1, 0.9]. Any value set outside of this range will be clipped. Note: For best results, follow the default threshold. We will update the default threshold everytime when we release a new model.

        :param frame_confidence_threshold: The frame_confidence_threshold of this GoogleCloudVideointelligenceV1p2beta1LabelDetectionConfig.
        :type frame_confidence_threshold: float
        """

        self._frame_confidence_threshold = frame_confidence_threshold

    @property
    def label_detection_mode(self):
        """Gets the label_detection_mode of this GoogleCloudVideointelligenceV1p2beta1LabelDetectionConfig.

        What labels should be detected with LABEL_DETECTION, in addition to video-level labels or segment-level labels. If unspecified, defaults to `SHOT_MODE`.

        :return: The label_detection_mode of this GoogleCloudVideointelligenceV1p2beta1LabelDetectionConfig.
        :rtype: str
        """
        return self._label_detection_mode

    @label_detection_mode.setter
    def label_detection_mode(self, label_detection_mode):
        """Sets the label_detection_mode of this GoogleCloudVideointelligenceV1p2beta1LabelDetectionConfig.

        What labels should be detected with LABEL_DETECTION, in addition to video-level labels or segment-level labels. If unspecified, defaults to `SHOT_MODE`.

        :param label_detection_mode: The label_detection_mode of this GoogleCloudVideointelligenceV1p2beta1LabelDetectionConfig.
        :type label_detection_mode: str
        """
        allowed_values = ["LABEL_DETECTION_MODE_UNSPECIFIED", "SHOT_MODE", "FRAME_MODE", "SHOT_AND_FRAME_MODE"]  # noqa: E501
        if label_detection_mode not in allowed_values:
            raise ValueError(
                "Invalid value for `label_detection_mode` ({0}), must be one of {1}"
                .format(label_detection_mode, allowed_values)
            )

        self._label_detection_mode = label_detection_mode

    @property
    def model(self):
        """Gets the model of this GoogleCloudVideointelligenceV1p2beta1LabelDetectionConfig.

        Model to use for label detection. Supported values: \"builtin/stable\" (the default if unset) and \"builtin/latest\".

        :return: The model of this GoogleCloudVideointelligenceV1p2beta1LabelDetectionConfig.
        :rtype: str
        """
        return self._model

    @model.setter
    def model(self, model):
        """Sets the model of this GoogleCloudVideointelligenceV1p2beta1LabelDetectionConfig.

        Model to use for label detection. Supported values: \"builtin/stable\" (the default if unset) and \"builtin/latest\".

        :param model: The model of this GoogleCloudVideointelligenceV1p2beta1LabelDetectionConfig.
        :type model: str
        """

        self._model = model

    @property
    def stationary_camera(self):
        """Gets the stationary_camera of this GoogleCloudVideointelligenceV1p2beta1LabelDetectionConfig.

        Whether the video has been shot from a stationary (i.e., non-moving) camera. When set to true, might improve detection accuracy for moving objects. Should be used with `SHOT_AND_FRAME_MODE` enabled.

        :return: The stationary_camera of this GoogleCloudVideointelligenceV1p2beta1LabelDetectionConfig.
        :rtype: bool
        """
        return self._stationary_camera

    @stationary_camera.setter
    def stationary_camera(self, stationary_camera):
        """Sets the stationary_camera of this GoogleCloudVideointelligenceV1p2beta1LabelDetectionConfig.

        Whether the video has been shot from a stationary (i.e., non-moving) camera. When set to true, might improve detection accuracy for moving objects. Should be used with `SHOT_AND_FRAME_MODE` enabled.

        :param stationary_camera: The stationary_camera of this GoogleCloudVideointelligenceV1p2beta1LabelDetectionConfig.
        :type stationary_camera: bool
        """

        self._stationary_camera = stationary_camera

    @property
    def video_confidence_threshold(self):
        """Gets the video_confidence_threshold of this GoogleCloudVideointelligenceV1p2beta1LabelDetectionConfig.

        The confidence threshold we perform filtering on the labels from video-level and shot-level detections. If not set, it's set to 0.3 by default. The valid range for this threshold is [0.1, 0.9]. Any value set outside of this range will be clipped. Note: For best results, follow the default threshold. We will update the default threshold everytime when we release a new model.

        :return: The video_confidence_threshold of this GoogleCloudVideointelligenceV1p2beta1LabelDetectionConfig.
        :rtype: float
        """
        return self._video_confidence_threshold

    @video_confidence_threshold.setter
    def video_confidence_threshold(self, video_confidence_threshold):
        """Sets the video_confidence_threshold of this GoogleCloudVideointelligenceV1p2beta1LabelDetectionConfig.

        The confidence threshold we perform filtering on the labels from video-level and shot-level detections. If not set, it's set to 0.3 by default. The valid range for this threshold is [0.1, 0.9]. Any value set outside of this range will be clipped. Note: For best results, follow the default threshold. We will update the default threshold everytime when we release a new model.

        :param video_confidence_threshold: The video_confidence_threshold of this GoogleCloudVideointelligenceV1p2beta1LabelDetectionConfig.
        :type video_confidence_threshold: float
        """

        self._video_confidence_threshold = video_confidence_threshold
