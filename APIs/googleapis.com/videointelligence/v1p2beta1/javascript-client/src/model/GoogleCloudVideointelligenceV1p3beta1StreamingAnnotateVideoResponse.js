/**
 * Cloud Video Intelligence API
 * Detects objects, explicit content, and scene changes in videos. It also specifies the region for annotation and transcribes speech to text. Supports both asynchronous API and streaming API.
 *
 * The version of the OpenAPI document: v1p2beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudVideointelligenceV1p3beta1StreamingVideoAnnotationResults from './GoogleCloudVideointelligenceV1p3beta1StreamingVideoAnnotationResults';
import GoogleRpcStatus from './GoogleRpcStatus';

/**
 * The GoogleCloudVideointelligenceV1p3beta1StreamingAnnotateVideoResponse model module.
 * @module model/GoogleCloudVideointelligenceV1p3beta1StreamingAnnotateVideoResponse
 * @version v1p2beta1
 */
class GoogleCloudVideointelligenceV1p3beta1StreamingAnnotateVideoResponse {
    /**
     * Constructs a new <code>GoogleCloudVideointelligenceV1p3beta1StreamingAnnotateVideoResponse</code>.
     * &#x60;StreamingAnnotateVideoResponse&#x60; is the only message returned to the client by &#x60;StreamingAnnotateVideo&#x60;. A series of zero or more &#x60;StreamingAnnotateVideoResponse&#x60; messages are streamed back to the client.
     * @alias module:model/GoogleCloudVideointelligenceV1p3beta1StreamingAnnotateVideoResponse
     */
    constructor() { 
        
        GoogleCloudVideointelligenceV1p3beta1StreamingAnnotateVideoResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudVideointelligenceV1p3beta1StreamingAnnotateVideoResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudVideointelligenceV1p3beta1StreamingAnnotateVideoResponse} obj Optional instance to populate.
     * @return {module:model/GoogleCloudVideointelligenceV1p3beta1StreamingAnnotateVideoResponse} The populated <code>GoogleCloudVideointelligenceV1p3beta1StreamingAnnotateVideoResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudVideointelligenceV1p3beta1StreamingAnnotateVideoResponse();

            if (data.hasOwnProperty('annotationResults')) {
                obj['annotationResults'] = GoogleCloudVideointelligenceV1p3beta1StreamingVideoAnnotationResults.constructFromObject(data['annotationResults']);
            }
            if (data.hasOwnProperty('annotationResultsUri')) {
                obj['annotationResultsUri'] = ApiClient.convertToType(data['annotationResultsUri'], 'String');
            }
            if (data.hasOwnProperty('error')) {
                obj['error'] = GoogleRpcStatus.constructFromObject(data['error']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudVideointelligenceV1p3beta1StreamingAnnotateVideoResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudVideointelligenceV1p3beta1StreamingAnnotateVideoResponse</code>.
     */
    static validateJSON(data) {
        // validate the optional field `annotationResults`
        if (data['annotationResults']) { // data not null
          GoogleCloudVideointelligenceV1p3beta1StreamingVideoAnnotationResults.validateJSON(data['annotationResults']);
        }
        // ensure the json data is a string
        if (data['annotationResultsUri'] && !(typeof data['annotationResultsUri'] === 'string' || data['annotationResultsUri'] instanceof String)) {
            throw new Error("Expected the field `annotationResultsUri` to be a primitive type in the JSON string but got " + data['annotationResultsUri']);
        }
        // validate the optional field `error`
        if (data['error']) { // data not null
          GoogleRpcStatus.validateJSON(data['error']);
        }

        return true;
    }


}



/**
 * @member {module:model/GoogleCloudVideointelligenceV1p3beta1StreamingVideoAnnotationResults} annotationResults
 */
GoogleCloudVideointelligenceV1p3beta1StreamingAnnotateVideoResponse.prototype['annotationResults'] = undefined;

/**
 * Google Cloud Storage URI that stores annotation results of one streaming session in JSON format. It is the annotation_result_storage_directory from the request followed by '/cloud_project_number-session_id'.
 * @member {String} annotationResultsUri
 */
GoogleCloudVideointelligenceV1p3beta1StreamingAnnotateVideoResponse.prototype['annotationResultsUri'] = undefined;

/**
 * @member {module:model/GoogleRpcStatus} error
 */
GoogleCloudVideointelligenceV1p3beta1StreamingAnnotateVideoResponse.prototype['error'] = undefined;






export default GoogleCloudVideointelligenceV1p3beta1StreamingAnnotateVideoResponse;

