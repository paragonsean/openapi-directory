/**
 * Cloud Video Intelligence API
 * Detects objects, explicit content, and scene changes in videos. It also specifies the region for annotation and transcribes speech to text. Supports both asynchronous API and streaming API.
 *
 * The version of the OpenAPI document: v1p2beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudVideointelligenceV1NormalizedBoundingBox from './GoogleCloudVideointelligenceV1NormalizedBoundingBox';

/**
 * The GoogleCloudVideointelligenceV1FaceFrame model module.
 * @module model/GoogleCloudVideointelligenceV1FaceFrame
 * @version v1p2beta1
 */
class GoogleCloudVideointelligenceV1FaceFrame {
    /**
     * Constructs a new <code>GoogleCloudVideointelligenceV1FaceFrame</code>.
     * Deprecated. No effect.
     * @alias module:model/GoogleCloudVideointelligenceV1FaceFrame
     */
    constructor() { 
        
        GoogleCloudVideointelligenceV1FaceFrame.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudVideointelligenceV1FaceFrame</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudVideointelligenceV1FaceFrame} obj Optional instance to populate.
     * @return {module:model/GoogleCloudVideointelligenceV1FaceFrame} The populated <code>GoogleCloudVideointelligenceV1FaceFrame</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudVideointelligenceV1FaceFrame();

            if (data.hasOwnProperty('normalizedBoundingBoxes')) {
                obj['normalizedBoundingBoxes'] = ApiClient.convertToType(data['normalizedBoundingBoxes'], [GoogleCloudVideointelligenceV1NormalizedBoundingBox]);
            }
            if (data.hasOwnProperty('timeOffset')) {
                obj['timeOffset'] = ApiClient.convertToType(data['timeOffset'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudVideointelligenceV1FaceFrame</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudVideointelligenceV1FaceFrame</code>.
     */
    static validateJSON(data) {
        if (data['normalizedBoundingBoxes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['normalizedBoundingBoxes'])) {
                throw new Error("Expected the field `normalizedBoundingBoxes` to be an array in the JSON data but got " + data['normalizedBoundingBoxes']);
            }
            // validate the optional field `normalizedBoundingBoxes` (array)
            for (const item of data['normalizedBoundingBoxes']) {
                GoogleCloudVideointelligenceV1NormalizedBoundingBox.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['timeOffset'] && !(typeof data['timeOffset'] === 'string' || data['timeOffset'] instanceof String)) {
            throw new Error("Expected the field `timeOffset` to be a primitive type in the JSON string but got " + data['timeOffset']);
        }

        return true;
    }


}



/**
 * Normalized Bounding boxes in a frame. There can be more than one boxes if the same face is detected in multiple locations within the current frame.
 * @member {Array.<module:model/GoogleCloudVideointelligenceV1NormalizedBoundingBox>} normalizedBoundingBoxes
 */
GoogleCloudVideointelligenceV1FaceFrame.prototype['normalizedBoundingBoxes'] = undefined;

/**
 * Time-offset, relative to the beginning of the video, corresponding to the video frame for this location.
 * @member {String} timeOffset
 */
GoogleCloudVideointelligenceV1FaceFrame.prototype['timeOffset'] = undefined;






export default GoogleCloudVideointelligenceV1FaceFrame;

