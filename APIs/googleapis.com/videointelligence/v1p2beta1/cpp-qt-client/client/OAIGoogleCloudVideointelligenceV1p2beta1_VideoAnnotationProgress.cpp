/**
 * Cloud Video Intelligence API
 * Detects objects, explicit content, and scene changes in videos. It also specifies the region for annotation and transcribes speech to text. Supports both asynchronous API and streaming API.
 *
 * The version of the OpenAPI document: v1p2beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationProgress.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationProgress::OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationProgress(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationProgress::OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationProgress() {
    this->initializeModel();
}

OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationProgress::~OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationProgress() {}

void OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationProgress::initializeModel() {

    m_feature_isSet = false;
    m_feature_isValid = false;

    m_input_uri_isSet = false;
    m_input_uri_isValid = false;

    m_progress_percent_isSet = false;
    m_progress_percent_isValid = false;

    m_segment_isSet = false;
    m_segment_isValid = false;

    m_start_time_isSet = false;
    m_start_time_isValid = false;

    m_update_time_isSet = false;
    m_update_time_isValid = false;
}

void OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationProgress::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationProgress::fromJsonObject(QJsonObject json) {

    m_feature_isValid = ::OpenAPI::fromJsonValue(m_feature, json[QString("feature")]);
    m_feature_isSet = !json[QString("feature")].isNull() && m_feature_isValid;

    m_input_uri_isValid = ::OpenAPI::fromJsonValue(m_input_uri, json[QString("inputUri")]);
    m_input_uri_isSet = !json[QString("inputUri")].isNull() && m_input_uri_isValid;

    m_progress_percent_isValid = ::OpenAPI::fromJsonValue(m_progress_percent, json[QString("progressPercent")]);
    m_progress_percent_isSet = !json[QString("progressPercent")].isNull() && m_progress_percent_isValid;

    m_segment_isValid = ::OpenAPI::fromJsonValue(m_segment, json[QString("segment")]);
    m_segment_isSet = !json[QString("segment")].isNull() && m_segment_isValid;

    m_start_time_isValid = ::OpenAPI::fromJsonValue(m_start_time, json[QString("startTime")]);
    m_start_time_isSet = !json[QString("startTime")].isNull() && m_start_time_isValid;

    m_update_time_isValid = ::OpenAPI::fromJsonValue(m_update_time, json[QString("updateTime")]);
    m_update_time_isSet = !json[QString("updateTime")].isNull() && m_update_time_isValid;
}

QString OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationProgress::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationProgress::asJsonObject() const {
    QJsonObject obj;
    if (m_feature_isSet) {
        obj.insert(QString("feature"), ::OpenAPI::toJsonValue(m_feature));
    }
    if (m_input_uri_isSet) {
        obj.insert(QString("inputUri"), ::OpenAPI::toJsonValue(m_input_uri));
    }
    if (m_progress_percent_isSet) {
        obj.insert(QString("progressPercent"), ::OpenAPI::toJsonValue(m_progress_percent));
    }
    if (m_segment.isSet()) {
        obj.insert(QString("segment"), ::OpenAPI::toJsonValue(m_segment));
    }
    if (m_start_time_isSet) {
        obj.insert(QString("startTime"), ::OpenAPI::toJsonValue(m_start_time));
    }
    if (m_update_time_isSet) {
        obj.insert(QString("updateTime"), ::OpenAPI::toJsonValue(m_update_time));
    }
    return obj;
}

QString OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationProgress::getFeature() const {
    return m_feature;
}
void OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationProgress::setFeature(const QString &feature) {
    m_feature = feature;
    m_feature_isSet = true;
}

bool OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationProgress::is_feature_Set() const{
    return m_feature_isSet;
}

bool OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationProgress::is_feature_Valid() const{
    return m_feature_isValid;
}

QString OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationProgress::getInputUri() const {
    return m_input_uri;
}
void OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationProgress::setInputUri(const QString &input_uri) {
    m_input_uri = input_uri;
    m_input_uri_isSet = true;
}

bool OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationProgress::is_input_uri_Set() const{
    return m_input_uri_isSet;
}

bool OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationProgress::is_input_uri_Valid() const{
    return m_input_uri_isValid;
}

qint32 OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationProgress::getProgressPercent() const {
    return m_progress_percent;
}
void OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationProgress::setProgressPercent(const qint32 &progress_percent) {
    m_progress_percent = progress_percent;
    m_progress_percent_isSet = true;
}

bool OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationProgress::is_progress_percent_Set() const{
    return m_progress_percent_isSet;
}

bool OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationProgress::is_progress_percent_Valid() const{
    return m_progress_percent_isValid;
}

OAIGoogleCloudVideointelligenceV1p2beta1_VideoSegment OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationProgress::getSegment() const {
    return m_segment;
}
void OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationProgress::setSegment(const OAIGoogleCloudVideointelligenceV1p2beta1_VideoSegment &segment) {
    m_segment = segment;
    m_segment_isSet = true;
}

bool OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationProgress::is_segment_Set() const{
    return m_segment_isSet;
}

bool OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationProgress::is_segment_Valid() const{
    return m_segment_isValid;
}

QString OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationProgress::getStartTime() const {
    return m_start_time;
}
void OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationProgress::setStartTime(const QString &start_time) {
    m_start_time = start_time;
    m_start_time_isSet = true;
}

bool OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationProgress::is_start_time_Set() const{
    return m_start_time_isSet;
}

bool OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationProgress::is_start_time_Valid() const{
    return m_start_time_isValid;
}

QString OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationProgress::getUpdateTime() const {
    return m_update_time;
}
void OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationProgress::setUpdateTime(const QString &update_time) {
    m_update_time = update_time;
    m_update_time_isSet = true;
}

bool OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationProgress::is_update_time_Set() const{
    return m_update_time_isSet;
}

bool OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationProgress::is_update_time_Valid() const{
    return m_update_time_isValid;
}

bool OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationProgress::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_feature_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_input_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_progress_percent_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_segment.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationProgress::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
