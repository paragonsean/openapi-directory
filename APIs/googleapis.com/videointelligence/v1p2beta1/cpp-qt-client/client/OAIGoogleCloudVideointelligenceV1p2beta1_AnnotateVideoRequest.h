/**
 * Cloud Video Intelligence API
 * Detects objects, explicit content, and scene changes in videos. It also specifies the region for annotation and transcribes speech to text. Supports both asynchronous API and streaming API.
 *
 * The version of the OpenAPI document: v1p2beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudVideointelligenceV1p2beta1_AnnotateVideoRequest.h
 *
 * Video annotation request.
 */

#ifndef OAIGoogleCloudVideointelligenceV1p2beta1_AnnotateVideoRequest_H
#define OAIGoogleCloudVideointelligenceV1p2beta1_AnnotateVideoRequest_H

#include <QJsonObject>

#include "OAIGoogleCloudVideointelligenceV1p2beta1_VideoContext.h"
#include <QByteArray>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleCloudVideointelligenceV1p2beta1_VideoContext;

class OAIGoogleCloudVideointelligenceV1p2beta1_AnnotateVideoRequest : public OAIObject {
public:
    OAIGoogleCloudVideointelligenceV1p2beta1_AnnotateVideoRequest();
    OAIGoogleCloudVideointelligenceV1p2beta1_AnnotateVideoRequest(QString json);
    ~OAIGoogleCloudVideointelligenceV1p2beta1_AnnotateVideoRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getFeatures() const;
    void setFeatures(const QList<QString> &features);
    bool is_features_Set() const;
    bool is_features_Valid() const;

    QByteArray getInputContent() const;
    void setInputContent(const QByteArray &input_content);
    bool is_input_content_Set() const;
    bool is_input_content_Valid() const;

    QString getInputUri() const;
    void setInputUri(const QString &input_uri);
    bool is_input_uri_Set() const;
    bool is_input_uri_Valid() const;

    QString getLocationId() const;
    void setLocationId(const QString &location_id);
    bool is_location_id_Set() const;
    bool is_location_id_Valid() const;

    QString getOutputUri() const;
    void setOutputUri(const QString &output_uri);
    bool is_output_uri_Set() const;
    bool is_output_uri_Valid() const;

    OAIGoogleCloudVideointelligenceV1p2beta1_VideoContext getVideoContext() const;
    void setVideoContext(const OAIGoogleCloudVideointelligenceV1p2beta1_VideoContext &video_context);
    bool is_video_context_Set() const;
    bool is_video_context_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_features;
    bool m_features_isSet;
    bool m_features_isValid;

    QByteArray m_input_content;
    bool m_input_content_isSet;
    bool m_input_content_isValid;

    QString m_input_uri;
    bool m_input_uri_isSet;
    bool m_input_uri_isValid;

    QString m_location_id;
    bool m_location_id_isSet;
    bool m_location_id_isValid;

    QString m_output_uri;
    bool m_output_uri_isSet;
    bool m_output_uri_isValid;

    OAIGoogleCloudVideointelligenceV1p2beta1_VideoContext m_video_context;
    bool m_video_context_isSet;
    bool m_video_context_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudVideointelligenceV1p2beta1_AnnotateVideoRequest)

#endif // OAIGoogleCloudVideointelligenceV1p2beta1_AnnotateVideoRequest_H
