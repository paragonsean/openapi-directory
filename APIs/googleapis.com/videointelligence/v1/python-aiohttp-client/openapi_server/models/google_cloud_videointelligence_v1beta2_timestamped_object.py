# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_videointelligence_v1beta2_detected_attribute import GoogleCloudVideointelligenceV1beta2DetectedAttribute
from openapi_server.models.google_cloud_videointelligence_v1beta2_detected_landmark import GoogleCloudVideointelligenceV1beta2DetectedLandmark
from openapi_server.models.google_cloud_videointelligence_v1beta2_normalized_bounding_box import GoogleCloudVideointelligenceV1beta2NormalizedBoundingBox
from openapi_server import util


class GoogleCloudVideointelligenceV1beta2TimestampedObject(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, attributes: List[GoogleCloudVideointelligenceV1beta2DetectedAttribute]=None, landmarks: List[GoogleCloudVideointelligenceV1beta2DetectedLandmark]=None, normalized_bounding_box: GoogleCloudVideointelligenceV1beta2NormalizedBoundingBox=None, time_offset: str=None):
        """GoogleCloudVideointelligenceV1beta2TimestampedObject - a model defined in OpenAPI

        :param attributes: The attributes of this GoogleCloudVideointelligenceV1beta2TimestampedObject.
        :param landmarks: The landmarks of this GoogleCloudVideointelligenceV1beta2TimestampedObject.
        :param normalized_bounding_box: The normalized_bounding_box of this GoogleCloudVideointelligenceV1beta2TimestampedObject.
        :param time_offset: The time_offset of this GoogleCloudVideointelligenceV1beta2TimestampedObject.
        """
        self.openapi_types = {
            'attributes': List[GoogleCloudVideointelligenceV1beta2DetectedAttribute],
            'landmarks': List[GoogleCloudVideointelligenceV1beta2DetectedLandmark],
            'normalized_bounding_box': GoogleCloudVideointelligenceV1beta2NormalizedBoundingBox,
            'time_offset': str
        }

        self.attribute_map = {
            'attributes': 'attributes',
            'landmarks': 'landmarks',
            'normalized_bounding_box': 'normalizedBoundingBox',
            'time_offset': 'timeOffset'
        }

        self._attributes = attributes
        self._landmarks = landmarks
        self._normalized_bounding_box = normalized_bounding_box
        self._time_offset = time_offset

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudVideointelligenceV1beta2TimestampedObject':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudVideointelligenceV1beta2_TimestampedObject of this GoogleCloudVideointelligenceV1beta2TimestampedObject.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def attributes(self):
        """Gets the attributes of this GoogleCloudVideointelligenceV1beta2TimestampedObject.

        Optional. The attributes of the object in the bounding box.

        :return: The attributes of this GoogleCloudVideointelligenceV1beta2TimestampedObject.
        :rtype: List[GoogleCloudVideointelligenceV1beta2DetectedAttribute]
        """
        return self._attributes

    @attributes.setter
    def attributes(self, attributes):
        """Sets the attributes of this GoogleCloudVideointelligenceV1beta2TimestampedObject.

        Optional. The attributes of the object in the bounding box.

        :param attributes: The attributes of this GoogleCloudVideointelligenceV1beta2TimestampedObject.
        :type attributes: List[GoogleCloudVideointelligenceV1beta2DetectedAttribute]
        """

        self._attributes = attributes

    @property
    def landmarks(self):
        """Gets the landmarks of this GoogleCloudVideointelligenceV1beta2TimestampedObject.

        Optional. The detected landmarks.

        :return: The landmarks of this GoogleCloudVideointelligenceV1beta2TimestampedObject.
        :rtype: List[GoogleCloudVideointelligenceV1beta2DetectedLandmark]
        """
        return self._landmarks

    @landmarks.setter
    def landmarks(self, landmarks):
        """Sets the landmarks of this GoogleCloudVideointelligenceV1beta2TimestampedObject.

        Optional. The detected landmarks.

        :param landmarks: The landmarks of this GoogleCloudVideointelligenceV1beta2TimestampedObject.
        :type landmarks: List[GoogleCloudVideointelligenceV1beta2DetectedLandmark]
        """

        self._landmarks = landmarks

    @property
    def normalized_bounding_box(self):
        """Gets the normalized_bounding_box of this GoogleCloudVideointelligenceV1beta2TimestampedObject.


        :return: The normalized_bounding_box of this GoogleCloudVideointelligenceV1beta2TimestampedObject.
        :rtype: GoogleCloudVideointelligenceV1beta2NormalizedBoundingBox
        """
        return self._normalized_bounding_box

    @normalized_bounding_box.setter
    def normalized_bounding_box(self, normalized_bounding_box):
        """Sets the normalized_bounding_box of this GoogleCloudVideointelligenceV1beta2TimestampedObject.


        :param normalized_bounding_box: The normalized_bounding_box of this GoogleCloudVideointelligenceV1beta2TimestampedObject.
        :type normalized_bounding_box: GoogleCloudVideointelligenceV1beta2NormalizedBoundingBox
        """

        self._normalized_bounding_box = normalized_bounding_box

    @property
    def time_offset(self):
        """Gets the time_offset of this GoogleCloudVideointelligenceV1beta2TimestampedObject.

        Time-offset, relative to the beginning of the video, corresponding to the video frame for this object.

        :return: The time_offset of this GoogleCloudVideointelligenceV1beta2TimestampedObject.
        :rtype: str
        """
        return self._time_offset

    @time_offset.setter
    def time_offset(self, time_offset):
        """Sets the time_offset of this GoogleCloudVideointelligenceV1beta2TimestampedObject.

        Time-offset, relative to the beginning of the video, corresponding to the video frame for this object.

        :param time_offset: The time_offset of this GoogleCloudVideointelligenceV1beta2TimestampedObject.
        :type time_offset: str
        """

        self._time_offset = time_offset
