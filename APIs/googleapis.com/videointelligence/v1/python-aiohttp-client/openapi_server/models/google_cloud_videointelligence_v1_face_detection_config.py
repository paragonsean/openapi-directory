# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudVideointelligenceV1FaceDetectionConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, include_attributes: bool=None, include_bounding_boxes: bool=None, model: str=None):
        """GoogleCloudVideointelligenceV1FaceDetectionConfig - a model defined in OpenAPI

        :param include_attributes: The include_attributes of this GoogleCloudVideointelligenceV1FaceDetectionConfig.
        :param include_bounding_boxes: The include_bounding_boxes of this GoogleCloudVideointelligenceV1FaceDetectionConfig.
        :param model: The model of this GoogleCloudVideointelligenceV1FaceDetectionConfig.
        """
        self.openapi_types = {
            'include_attributes': bool,
            'include_bounding_boxes': bool,
            'model': str
        }

        self.attribute_map = {
            'include_attributes': 'includeAttributes',
            'include_bounding_boxes': 'includeBoundingBoxes',
            'model': 'model'
        }

        self._include_attributes = include_attributes
        self._include_bounding_boxes = include_bounding_boxes
        self._model = model

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudVideointelligenceV1FaceDetectionConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudVideointelligenceV1_FaceDetectionConfig of this GoogleCloudVideointelligenceV1FaceDetectionConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def include_attributes(self):
        """Gets the include_attributes of this GoogleCloudVideointelligenceV1FaceDetectionConfig.

        Whether to enable face attributes detection, such as glasses, dark_glasses, mouth_open etc. Ignored if 'include_bounding_boxes' is set to false.

        :return: The include_attributes of this GoogleCloudVideointelligenceV1FaceDetectionConfig.
        :rtype: bool
        """
        return self._include_attributes

    @include_attributes.setter
    def include_attributes(self, include_attributes):
        """Sets the include_attributes of this GoogleCloudVideointelligenceV1FaceDetectionConfig.

        Whether to enable face attributes detection, such as glasses, dark_glasses, mouth_open etc. Ignored if 'include_bounding_boxes' is set to false.

        :param include_attributes: The include_attributes of this GoogleCloudVideointelligenceV1FaceDetectionConfig.
        :type include_attributes: bool
        """

        self._include_attributes = include_attributes

    @property
    def include_bounding_boxes(self):
        """Gets the include_bounding_boxes of this GoogleCloudVideointelligenceV1FaceDetectionConfig.

        Whether bounding boxes are included in the face annotation output.

        :return: The include_bounding_boxes of this GoogleCloudVideointelligenceV1FaceDetectionConfig.
        :rtype: bool
        """
        return self._include_bounding_boxes

    @include_bounding_boxes.setter
    def include_bounding_boxes(self, include_bounding_boxes):
        """Sets the include_bounding_boxes of this GoogleCloudVideointelligenceV1FaceDetectionConfig.

        Whether bounding boxes are included in the face annotation output.

        :param include_bounding_boxes: The include_bounding_boxes of this GoogleCloudVideointelligenceV1FaceDetectionConfig.
        :type include_bounding_boxes: bool
        """

        self._include_bounding_boxes = include_bounding_boxes

    @property
    def model(self):
        """Gets the model of this GoogleCloudVideointelligenceV1FaceDetectionConfig.

        Model to use for face detection. Supported values: \"builtin/stable\" (the default if unset) and \"builtin/latest\".

        :return: The model of this GoogleCloudVideointelligenceV1FaceDetectionConfig.
        :rtype: str
        """
        return self._model

    @model.setter
    def model(self, model):
        """Sets the model of this GoogleCloudVideointelligenceV1FaceDetectionConfig.

        Model to use for face detection. Supported values: \"builtin/stable\" (the default if unset) and \"builtin/latest\".

        :param model: The model of this GoogleCloudVideointelligenceV1FaceDetectionConfig.
        :type model: str
        """

        self._model = model
