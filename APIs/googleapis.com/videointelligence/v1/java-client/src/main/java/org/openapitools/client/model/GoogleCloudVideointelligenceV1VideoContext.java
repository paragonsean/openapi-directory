/*
 * Cloud Video Intelligence API
 * Detects objects, explicit content, and scene changes in videos. It also specifies the region for annotation and transcribes speech to text. Supports both asynchronous API and streaming API.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudVideointelligenceV1ExplicitContentDetectionConfig;
import org.openapitools.client.model.GoogleCloudVideointelligenceV1FaceDetectionConfig;
import org.openapitools.client.model.GoogleCloudVideointelligenceV1LabelDetectionConfig;
import org.openapitools.client.model.GoogleCloudVideointelligenceV1ObjectTrackingConfig;
import org.openapitools.client.model.GoogleCloudVideointelligenceV1PersonDetectionConfig;
import org.openapitools.client.model.GoogleCloudVideointelligenceV1ShotChangeDetectionConfig;
import org.openapitools.client.model.GoogleCloudVideointelligenceV1SpeechTranscriptionConfig;
import org.openapitools.client.model.GoogleCloudVideointelligenceV1TextDetectionConfig;
import org.openapitools.client.model.GoogleCloudVideointelligenceV1VideoSegment;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Video context and/or feature-specific parameters.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:50:31.304366-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudVideointelligenceV1VideoContext {
  public static final String SERIALIZED_NAME_EXPLICIT_CONTENT_DETECTION_CONFIG = "explicitContentDetectionConfig";
  @SerializedName(SERIALIZED_NAME_EXPLICIT_CONTENT_DETECTION_CONFIG)
  private GoogleCloudVideointelligenceV1ExplicitContentDetectionConfig explicitContentDetectionConfig;

  public static final String SERIALIZED_NAME_FACE_DETECTION_CONFIG = "faceDetectionConfig";
  @SerializedName(SERIALIZED_NAME_FACE_DETECTION_CONFIG)
  private GoogleCloudVideointelligenceV1FaceDetectionConfig faceDetectionConfig;

  public static final String SERIALIZED_NAME_LABEL_DETECTION_CONFIG = "labelDetectionConfig";
  @SerializedName(SERIALIZED_NAME_LABEL_DETECTION_CONFIG)
  private GoogleCloudVideointelligenceV1LabelDetectionConfig labelDetectionConfig;

  public static final String SERIALIZED_NAME_OBJECT_TRACKING_CONFIG = "objectTrackingConfig";
  @SerializedName(SERIALIZED_NAME_OBJECT_TRACKING_CONFIG)
  private GoogleCloudVideointelligenceV1ObjectTrackingConfig objectTrackingConfig;

  public static final String SERIALIZED_NAME_PERSON_DETECTION_CONFIG = "personDetectionConfig";
  @SerializedName(SERIALIZED_NAME_PERSON_DETECTION_CONFIG)
  private GoogleCloudVideointelligenceV1PersonDetectionConfig personDetectionConfig;

  public static final String SERIALIZED_NAME_SEGMENTS = "segments";
  @SerializedName(SERIALIZED_NAME_SEGMENTS)
  private List<GoogleCloudVideointelligenceV1VideoSegment> segments = new ArrayList<>();

  public static final String SERIALIZED_NAME_SHOT_CHANGE_DETECTION_CONFIG = "shotChangeDetectionConfig";
  @SerializedName(SERIALIZED_NAME_SHOT_CHANGE_DETECTION_CONFIG)
  private GoogleCloudVideointelligenceV1ShotChangeDetectionConfig shotChangeDetectionConfig;

  public static final String SERIALIZED_NAME_SPEECH_TRANSCRIPTION_CONFIG = "speechTranscriptionConfig";
  @SerializedName(SERIALIZED_NAME_SPEECH_TRANSCRIPTION_CONFIG)
  private GoogleCloudVideointelligenceV1SpeechTranscriptionConfig speechTranscriptionConfig;

  public static final String SERIALIZED_NAME_TEXT_DETECTION_CONFIG = "textDetectionConfig";
  @SerializedName(SERIALIZED_NAME_TEXT_DETECTION_CONFIG)
  private GoogleCloudVideointelligenceV1TextDetectionConfig textDetectionConfig;

  public GoogleCloudVideointelligenceV1VideoContext() {
  }

  public GoogleCloudVideointelligenceV1VideoContext explicitContentDetectionConfig(GoogleCloudVideointelligenceV1ExplicitContentDetectionConfig explicitContentDetectionConfig) {
    this.explicitContentDetectionConfig = explicitContentDetectionConfig;
    return this;
  }

  /**
   * Get explicitContentDetectionConfig
   * @return explicitContentDetectionConfig
   */
  @javax.annotation.Nullable
  public GoogleCloudVideointelligenceV1ExplicitContentDetectionConfig getExplicitContentDetectionConfig() {
    return explicitContentDetectionConfig;
  }

  public void setExplicitContentDetectionConfig(GoogleCloudVideointelligenceV1ExplicitContentDetectionConfig explicitContentDetectionConfig) {
    this.explicitContentDetectionConfig = explicitContentDetectionConfig;
  }


  public GoogleCloudVideointelligenceV1VideoContext faceDetectionConfig(GoogleCloudVideointelligenceV1FaceDetectionConfig faceDetectionConfig) {
    this.faceDetectionConfig = faceDetectionConfig;
    return this;
  }

  /**
   * Get faceDetectionConfig
   * @return faceDetectionConfig
   */
  @javax.annotation.Nullable
  public GoogleCloudVideointelligenceV1FaceDetectionConfig getFaceDetectionConfig() {
    return faceDetectionConfig;
  }

  public void setFaceDetectionConfig(GoogleCloudVideointelligenceV1FaceDetectionConfig faceDetectionConfig) {
    this.faceDetectionConfig = faceDetectionConfig;
  }


  public GoogleCloudVideointelligenceV1VideoContext labelDetectionConfig(GoogleCloudVideointelligenceV1LabelDetectionConfig labelDetectionConfig) {
    this.labelDetectionConfig = labelDetectionConfig;
    return this;
  }

  /**
   * Get labelDetectionConfig
   * @return labelDetectionConfig
   */
  @javax.annotation.Nullable
  public GoogleCloudVideointelligenceV1LabelDetectionConfig getLabelDetectionConfig() {
    return labelDetectionConfig;
  }

  public void setLabelDetectionConfig(GoogleCloudVideointelligenceV1LabelDetectionConfig labelDetectionConfig) {
    this.labelDetectionConfig = labelDetectionConfig;
  }


  public GoogleCloudVideointelligenceV1VideoContext objectTrackingConfig(GoogleCloudVideointelligenceV1ObjectTrackingConfig objectTrackingConfig) {
    this.objectTrackingConfig = objectTrackingConfig;
    return this;
  }

  /**
   * Get objectTrackingConfig
   * @return objectTrackingConfig
   */
  @javax.annotation.Nullable
  public GoogleCloudVideointelligenceV1ObjectTrackingConfig getObjectTrackingConfig() {
    return objectTrackingConfig;
  }

  public void setObjectTrackingConfig(GoogleCloudVideointelligenceV1ObjectTrackingConfig objectTrackingConfig) {
    this.objectTrackingConfig = objectTrackingConfig;
  }


  public GoogleCloudVideointelligenceV1VideoContext personDetectionConfig(GoogleCloudVideointelligenceV1PersonDetectionConfig personDetectionConfig) {
    this.personDetectionConfig = personDetectionConfig;
    return this;
  }

  /**
   * Get personDetectionConfig
   * @return personDetectionConfig
   */
  @javax.annotation.Nullable
  public GoogleCloudVideointelligenceV1PersonDetectionConfig getPersonDetectionConfig() {
    return personDetectionConfig;
  }

  public void setPersonDetectionConfig(GoogleCloudVideointelligenceV1PersonDetectionConfig personDetectionConfig) {
    this.personDetectionConfig = personDetectionConfig;
  }


  public GoogleCloudVideointelligenceV1VideoContext segments(List<GoogleCloudVideointelligenceV1VideoSegment> segments) {
    this.segments = segments;
    return this;
  }

  public GoogleCloudVideointelligenceV1VideoContext addSegmentsItem(GoogleCloudVideointelligenceV1VideoSegment segmentsItem) {
    if (this.segments == null) {
      this.segments = new ArrayList<>();
    }
    this.segments.add(segmentsItem);
    return this;
  }

  /**
   * Video segments to annotate. The segments may overlap and are not required to be contiguous or span the whole video. If unspecified, each video is treated as a single segment.
   * @return segments
   */
  @javax.annotation.Nullable
  public List<GoogleCloudVideointelligenceV1VideoSegment> getSegments() {
    return segments;
  }

  public void setSegments(List<GoogleCloudVideointelligenceV1VideoSegment> segments) {
    this.segments = segments;
  }


  public GoogleCloudVideointelligenceV1VideoContext shotChangeDetectionConfig(GoogleCloudVideointelligenceV1ShotChangeDetectionConfig shotChangeDetectionConfig) {
    this.shotChangeDetectionConfig = shotChangeDetectionConfig;
    return this;
  }

  /**
   * Get shotChangeDetectionConfig
   * @return shotChangeDetectionConfig
   */
  @javax.annotation.Nullable
  public GoogleCloudVideointelligenceV1ShotChangeDetectionConfig getShotChangeDetectionConfig() {
    return shotChangeDetectionConfig;
  }

  public void setShotChangeDetectionConfig(GoogleCloudVideointelligenceV1ShotChangeDetectionConfig shotChangeDetectionConfig) {
    this.shotChangeDetectionConfig = shotChangeDetectionConfig;
  }


  public GoogleCloudVideointelligenceV1VideoContext speechTranscriptionConfig(GoogleCloudVideointelligenceV1SpeechTranscriptionConfig speechTranscriptionConfig) {
    this.speechTranscriptionConfig = speechTranscriptionConfig;
    return this;
  }

  /**
   * Get speechTranscriptionConfig
   * @return speechTranscriptionConfig
   */
  @javax.annotation.Nullable
  public GoogleCloudVideointelligenceV1SpeechTranscriptionConfig getSpeechTranscriptionConfig() {
    return speechTranscriptionConfig;
  }

  public void setSpeechTranscriptionConfig(GoogleCloudVideointelligenceV1SpeechTranscriptionConfig speechTranscriptionConfig) {
    this.speechTranscriptionConfig = speechTranscriptionConfig;
  }


  public GoogleCloudVideointelligenceV1VideoContext textDetectionConfig(GoogleCloudVideointelligenceV1TextDetectionConfig textDetectionConfig) {
    this.textDetectionConfig = textDetectionConfig;
    return this;
  }

  /**
   * Get textDetectionConfig
   * @return textDetectionConfig
   */
  @javax.annotation.Nullable
  public GoogleCloudVideointelligenceV1TextDetectionConfig getTextDetectionConfig() {
    return textDetectionConfig;
  }

  public void setTextDetectionConfig(GoogleCloudVideointelligenceV1TextDetectionConfig textDetectionConfig) {
    this.textDetectionConfig = textDetectionConfig;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudVideointelligenceV1VideoContext googleCloudVideointelligenceV1VideoContext = (GoogleCloudVideointelligenceV1VideoContext) o;
    return Objects.equals(this.explicitContentDetectionConfig, googleCloudVideointelligenceV1VideoContext.explicitContentDetectionConfig) &&
        Objects.equals(this.faceDetectionConfig, googleCloudVideointelligenceV1VideoContext.faceDetectionConfig) &&
        Objects.equals(this.labelDetectionConfig, googleCloudVideointelligenceV1VideoContext.labelDetectionConfig) &&
        Objects.equals(this.objectTrackingConfig, googleCloudVideointelligenceV1VideoContext.objectTrackingConfig) &&
        Objects.equals(this.personDetectionConfig, googleCloudVideointelligenceV1VideoContext.personDetectionConfig) &&
        Objects.equals(this.segments, googleCloudVideointelligenceV1VideoContext.segments) &&
        Objects.equals(this.shotChangeDetectionConfig, googleCloudVideointelligenceV1VideoContext.shotChangeDetectionConfig) &&
        Objects.equals(this.speechTranscriptionConfig, googleCloudVideointelligenceV1VideoContext.speechTranscriptionConfig) &&
        Objects.equals(this.textDetectionConfig, googleCloudVideointelligenceV1VideoContext.textDetectionConfig);
  }

  @Override
  public int hashCode() {
    return Objects.hash(explicitContentDetectionConfig, faceDetectionConfig, labelDetectionConfig, objectTrackingConfig, personDetectionConfig, segments, shotChangeDetectionConfig, speechTranscriptionConfig, textDetectionConfig);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudVideointelligenceV1VideoContext {\n");
    sb.append("    explicitContentDetectionConfig: ").append(toIndentedString(explicitContentDetectionConfig)).append("\n");
    sb.append("    faceDetectionConfig: ").append(toIndentedString(faceDetectionConfig)).append("\n");
    sb.append("    labelDetectionConfig: ").append(toIndentedString(labelDetectionConfig)).append("\n");
    sb.append("    objectTrackingConfig: ").append(toIndentedString(objectTrackingConfig)).append("\n");
    sb.append("    personDetectionConfig: ").append(toIndentedString(personDetectionConfig)).append("\n");
    sb.append("    segments: ").append(toIndentedString(segments)).append("\n");
    sb.append("    shotChangeDetectionConfig: ").append(toIndentedString(shotChangeDetectionConfig)).append("\n");
    sb.append("    speechTranscriptionConfig: ").append(toIndentedString(speechTranscriptionConfig)).append("\n");
    sb.append("    textDetectionConfig: ").append(toIndentedString(textDetectionConfig)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("explicitContentDetectionConfig");
    openapiFields.add("faceDetectionConfig");
    openapiFields.add("labelDetectionConfig");
    openapiFields.add("objectTrackingConfig");
    openapiFields.add("personDetectionConfig");
    openapiFields.add("segments");
    openapiFields.add("shotChangeDetectionConfig");
    openapiFields.add("speechTranscriptionConfig");
    openapiFields.add("textDetectionConfig");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudVideointelligenceV1VideoContext
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudVideointelligenceV1VideoContext.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudVideointelligenceV1VideoContext is not found in the empty JSON string", GoogleCloudVideointelligenceV1VideoContext.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudVideointelligenceV1VideoContext.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudVideointelligenceV1VideoContext` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `explicitContentDetectionConfig`
      if (jsonObj.get("explicitContentDetectionConfig") != null && !jsonObj.get("explicitContentDetectionConfig").isJsonNull()) {
        GoogleCloudVideointelligenceV1ExplicitContentDetectionConfig.validateJsonElement(jsonObj.get("explicitContentDetectionConfig"));
      }
      // validate the optional field `faceDetectionConfig`
      if (jsonObj.get("faceDetectionConfig") != null && !jsonObj.get("faceDetectionConfig").isJsonNull()) {
        GoogleCloudVideointelligenceV1FaceDetectionConfig.validateJsonElement(jsonObj.get("faceDetectionConfig"));
      }
      // validate the optional field `labelDetectionConfig`
      if (jsonObj.get("labelDetectionConfig") != null && !jsonObj.get("labelDetectionConfig").isJsonNull()) {
        GoogleCloudVideointelligenceV1LabelDetectionConfig.validateJsonElement(jsonObj.get("labelDetectionConfig"));
      }
      // validate the optional field `objectTrackingConfig`
      if (jsonObj.get("objectTrackingConfig") != null && !jsonObj.get("objectTrackingConfig").isJsonNull()) {
        GoogleCloudVideointelligenceV1ObjectTrackingConfig.validateJsonElement(jsonObj.get("objectTrackingConfig"));
      }
      // validate the optional field `personDetectionConfig`
      if (jsonObj.get("personDetectionConfig") != null && !jsonObj.get("personDetectionConfig").isJsonNull()) {
        GoogleCloudVideointelligenceV1PersonDetectionConfig.validateJsonElement(jsonObj.get("personDetectionConfig"));
      }
      if (jsonObj.get("segments") != null && !jsonObj.get("segments").isJsonNull()) {
        JsonArray jsonArraysegments = jsonObj.getAsJsonArray("segments");
        if (jsonArraysegments != null) {
          // ensure the json data is an array
          if (!jsonObj.get("segments").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `segments` to be an array in the JSON string but got `%s`", jsonObj.get("segments").toString()));
          }

          // validate the optional field `segments` (array)
          for (int i = 0; i < jsonArraysegments.size(); i++) {
            GoogleCloudVideointelligenceV1VideoSegment.validateJsonElement(jsonArraysegments.get(i));
          };
        }
      }
      // validate the optional field `shotChangeDetectionConfig`
      if (jsonObj.get("shotChangeDetectionConfig") != null && !jsonObj.get("shotChangeDetectionConfig").isJsonNull()) {
        GoogleCloudVideointelligenceV1ShotChangeDetectionConfig.validateJsonElement(jsonObj.get("shotChangeDetectionConfig"));
      }
      // validate the optional field `speechTranscriptionConfig`
      if (jsonObj.get("speechTranscriptionConfig") != null && !jsonObj.get("speechTranscriptionConfig").isJsonNull()) {
        GoogleCloudVideointelligenceV1SpeechTranscriptionConfig.validateJsonElement(jsonObj.get("speechTranscriptionConfig"));
      }
      // validate the optional field `textDetectionConfig`
      if (jsonObj.get("textDetectionConfig") != null && !jsonObj.get("textDetectionConfig").isJsonNull()) {
        GoogleCloudVideointelligenceV1TextDetectionConfig.validateJsonElement(jsonObj.get("textDetectionConfig"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudVideointelligenceV1VideoContext.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudVideointelligenceV1VideoContext' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudVideointelligenceV1VideoContext> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudVideointelligenceV1VideoContext.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudVideointelligenceV1VideoContext>() {
           @Override
           public void write(JsonWriter out, GoogleCloudVideointelligenceV1VideoContext value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudVideointelligenceV1VideoContext read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudVideointelligenceV1VideoContext given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudVideointelligenceV1VideoContext
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudVideointelligenceV1VideoContext
   */
  public static GoogleCloudVideointelligenceV1VideoContext fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudVideointelligenceV1VideoContext.class);
  }

  /**
   * Convert an instance of GoogleCloudVideointelligenceV1VideoContext to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

