/*
 * Cloud Video Intelligence API
 * Detects objects, explicit content, and scene changes in videos. It also specifies the region for annotation and transcribes speech to text. Supports both asynchronous API and streaming API.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudVideointelligenceV1p3beta1StreamingVideoAnnotationResults;
import org.openapitools.client.model.GoogleRpcStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * &#x60;StreamingAnnotateVideoResponse&#x60; is the only message returned to the client by &#x60;StreamingAnnotateVideo&#x60;. A series of zero or more &#x60;StreamingAnnotateVideoResponse&#x60; messages are streamed back to the client.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:50:31.304366-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudVideointelligenceV1p3beta1StreamingAnnotateVideoResponse {
  public static final String SERIALIZED_NAME_ANNOTATION_RESULTS = "annotationResults";
  @SerializedName(SERIALIZED_NAME_ANNOTATION_RESULTS)
  private GoogleCloudVideointelligenceV1p3beta1StreamingVideoAnnotationResults annotationResults;

  public static final String SERIALIZED_NAME_ANNOTATION_RESULTS_URI = "annotationResultsUri";
  @SerializedName(SERIALIZED_NAME_ANNOTATION_RESULTS_URI)
  private String annotationResultsUri;

  public static final String SERIALIZED_NAME_ERROR = "error";
  @SerializedName(SERIALIZED_NAME_ERROR)
  private GoogleRpcStatus error;

  public GoogleCloudVideointelligenceV1p3beta1StreamingAnnotateVideoResponse() {
  }

  public GoogleCloudVideointelligenceV1p3beta1StreamingAnnotateVideoResponse annotationResults(GoogleCloudVideointelligenceV1p3beta1StreamingVideoAnnotationResults annotationResults) {
    this.annotationResults = annotationResults;
    return this;
  }

  /**
   * Get annotationResults
   * @return annotationResults
   */
  @javax.annotation.Nullable
  public GoogleCloudVideointelligenceV1p3beta1StreamingVideoAnnotationResults getAnnotationResults() {
    return annotationResults;
  }

  public void setAnnotationResults(GoogleCloudVideointelligenceV1p3beta1StreamingVideoAnnotationResults annotationResults) {
    this.annotationResults = annotationResults;
  }


  public GoogleCloudVideointelligenceV1p3beta1StreamingAnnotateVideoResponse annotationResultsUri(String annotationResultsUri) {
    this.annotationResultsUri = annotationResultsUri;
    return this;
  }

  /**
   * Google Cloud Storage URI that stores annotation results of one streaming session in JSON format. It is the annotation_result_storage_directory from the request followed by &#39;/cloud_project_number-session_id&#39;.
   * @return annotationResultsUri
   */
  @javax.annotation.Nullable
  public String getAnnotationResultsUri() {
    return annotationResultsUri;
  }

  public void setAnnotationResultsUri(String annotationResultsUri) {
    this.annotationResultsUri = annotationResultsUri;
  }


  public GoogleCloudVideointelligenceV1p3beta1StreamingAnnotateVideoResponse error(GoogleRpcStatus error) {
    this.error = error;
    return this;
  }

  /**
   * Get error
   * @return error
   */
  @javax.annotation.Nullable
  public GoogleRpcStatus getError() {
    return error;
  }

  public void setError(GoogleRpcStatus error) {
    this.error = error;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudVideointelligenceV1p3beta1StreamingAnnotateVideoResponse googleCloudVideointelligenceV1p3beta1StreamingAnnotateVideoResponse = (GoogleCloudVideointelligenceV1p3beta1StreamingAnnotateVideoResponse) o;
    return Objects.equals(this.annotationResults, googleCloudVideointelligenceV1p3beta1StreamingAnnotateVideoResponse.annotationResults) &&
        Objects.equals(this.annotationResultsUri, googleCloudVideointelligenceV1p3beta1StreamingAnnotateVideoResponse.annotationResultsUri) &&
        Objects.equals(this.error, googleCloudVideointelligenceV1p3beta1StreamingAnnotateVideoResponse.error);
  }

  @Override
  public int hashCode() {
    return Objects.hash(annotationResults, annotationResultsUri, error);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudVideointelligenceV1p3beta1StreamingAnnotateVideoResponse {\n");
    sb.append("    annotationResults: ").append(toIndentedString(annotationResults)).append("\n");
    sb.append("    annotationResultsUri: ").append(toIndentedString(annotationResultsUri)).append("\n");
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("annotationResults");
    openapiFields.add("annotationResultsUri");
    openapiFields.add("error");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudVideointelligenceV1p3beta1StreamingAnnotateVideoResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudVideointelligenceV1p3beta1StreamingAnnotateVideoResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudVideointelligenceV1p3beta1StreamingAnnotateVideoResponse is not found in the empty JSON string", GoogleCloudVideointelligenceV1p3beta1StreamingAnnotateVideoResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudVideointelligenceV1p3beta1StreamingAnnotateVideoResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudVideointelligenceV1p3beta1StreamingAnnotateVideoResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `annotationResults`
      if (jsonObj.get("annotationResults") != null && !jsonObj.get("annotationResults").isJsonNull()) {
        GoogleCloudVideointelligenceV1p3beta1StreamingVideoAnnotationResults.validateJsonElement(jsonObj.get("annotationResults"));
      }
      if ((jsonObj.get("annotationResultsUri") != null && !jsonObj.get("annotationResultsUri").isJsonNull()) && !jsonObj.get("annotationResultsUri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `annotationResultsUri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("annotationResultsUri").toString()));
      }
      // validate the optional field `error`
      if (jsonObj.get("error") != null && !jsonObj.get("error").isJsonNull()) {
        GoogleRpcStatus.validateJsonElement(jsonObj.get("error"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudVideointelligenceV1p3beta1StreamingAnnotateVideoResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudVideointelligenceV1p3beta1StreamingAnnotateVideoResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudVideointelligenceV1p3beta1StreamingAnnotateVideoResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudVideointelligenceV1p3beta1StreamingAnnotateVideoResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudVideointelligenceV1p3beta1StreamingAnnotateVideoResponse>() {
           @Override
           public void write(JsonWriter out, GoogleCloudVideointelligenceV1p3beta1StreamingAnnotateVideoResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudVideointelligenceV1p3beta1StreamingAnnotateVideoResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudVideointelligenceV1p3beta1StreamingAnnotateVideoResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudVideointelligenceV1p3beta1StreamingAnnotateVideoResponse
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudVideointelligenceV1p3beta1StreamingAnnotateVideoResponse
   */
  public static GoogleCloudVideointelligenceV1p3beta1StreamingAnnotateVideoResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudVideointelligenceV1p3beta1StreamingAnnotateVideoResponse.class);
  }

  /**
   * Convert an instance of GoogleCloudVideointelligenceV1p3beta1StreamingAnnotateVideoResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

