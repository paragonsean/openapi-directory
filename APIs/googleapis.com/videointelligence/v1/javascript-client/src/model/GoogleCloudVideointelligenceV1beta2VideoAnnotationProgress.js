/**
 * Cloud Video Intelligence API
 * Detects objects, explicit content, and scene changes in videos. It also specifies the region for annotation and transcribes speech to text. Supports both asynchronous API and streaming API.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudVideointelligenceV1beta2VideoSegment from './GoogleCloudVideointelligenceV1beta2VideoSegment';

/**
 * The GoogleCloudVideointelligenceV1beta2VideoAnnotationProgress model module.
 * @module model/GoogleCloudVideointelligenceV1beta2VideoAnnotationProgress
 * @version v1
 */
class GoogleCloudVideointelligenceV1beta2VideoAnnotationProgress {
    /**
     * Constructs a new <code>GoogleCloudVideointelligenceV1beta2VideoAnnotationProgress</code>.
     * Annotation progress for a single video.
     * @alias module:model/GoogleCloudVideointelligenceV1beta2VideoAnnotationProgress
     */
    constructor() { 
        
        GoogleCloudVideointelligenceV1beta2VideoAnnotationProgress.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudVideointelligenceV1beta2VideoAnnotationProgress</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudVideointelligenceV1beta2VideoAnnotationProgress} obj Optional instance to populate.
     * @return {module:model/GoogleCloudVideointelligenceV1beta2VideoAnnotationProgress} The populated <code>GoogleCloudVideointelligenceV1beta2VideoAnnotationProgress</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudVideointelligenceV1beta2VideoAnnotationProgress();

            if (data.hasOwnProperty('feature')) {
                obj['feature'] = ApiClient.convertToType(data['feature'], 'String');
            }
            if (data.hasOwnProperty('inputUri')) {
                obj['inputUri'] = ApiClient.convertToType(data['inputUri'], 'String');
            }
            if (data.hasOwnProperty('progressPercent')) {
                obj['progressPercent'] = ApiClient.convertToType(data['progressPercent'], 'Number');
            }
            if (data.hasOwnProperty('segment')) {
                obj['segment'] = GoogleCloudVideointelligenceV1beta2VideoSegment.constructFromObject(data['segment']);
            }
            if (data.hasOwnProperty('startTime')) {
                obj['startTime'] = ApiClient.convertToType(data['startTime'], 'String');
            }
            if (data.hasOwnProperty('updateTime')) {
                obj['updateTime'] = ApiClient.convertToType(data['updateTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudVideointelligenceV1beta2VideoAnnotationProgress</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudVideointelligenceV1beta2VideoAnnotationProgress</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['feature'] && !(typeof data['feature'] === 'string' || data['feature'] instanceof String)) {
            throw new Error("Expected the field `feature` to be a primitive type in the JSON string but got " + data['feature']);
        }
        // ensure the json data is a string
        if (data['inputUri'] && !(typeof data['inputUri'] === 'string' || data['inputUri'] instanceof String)) {
            throw new Error("Expected the field `inputUri` to be a primitive type in the JSON string but got " + data['inputUri']);
        }
        // validate the optional field `segment`
        if (data['segment']) { // data not null
          GoogleCloudVideointelligenceV1beta2VideoSegment.validateJSON(data['segment']);
        }
        // ensure the json data is a string
        if (data['startTime'] && !(typeof data['startTime'] === 'string' || data['startTime'] instanceof String)) {
            throw new Error("Expected the field `startTime` to be a primitive type in the JSON string but got " + data['startTime']);
        }
        // ensure the json data is a string
        if (data['updateTime'] && !(typeof data['updateTime'] === 'string' || data['updateTime'] instanceof String)) {
            throw new Error("Expected the field `updateTime` to be a primitive type in the JSON string but got " + data['updateTime']);
        }

        return true;
    }


}



/**
 * Specifies which feature is being tracked if the request contains more than one feature.
 * @member {module:model/GoogleCloudVideointelligenceV1beta2VideoAnnotationProgress.FeatureEnum} feature
 */
GoogleCloudVideointelligenceV1beta2VideoAnnotationProgress.prototype['feature'] = undefined;

/**
 * Video file location in [Cloud Storage](https://cloud.google.com/storage/).
 * @member {String} inputUri
 */
GoogleCloudVideointelligenceV1beta2VideoAnnotationProgress.prototype['inputUri'] = undefined;

/**
 * Approximate percentage processed thus far. Guaranteed to be 100 when fully processed.
 * @member {Number} progressPercent
 */
GoogleCloudVideointelligenceV1beta2VideoAnnotationProgress.prototype['progressPercent'] = undefined;

/**
 * @member {module:model/GoogleCloudVideointelligenceV1beta2VideoSegment} segment
 */
GoogleCloudVideointelligenceV1beta2VideoAnnotationProgress.prototype['segment'] = undefined;

/**
 * Time when the request was received.
 * @member {String} startTime
 */
GoogleCloudVideointelligenceV1beta2VideoAnnotationProgress.prototype['startTime'] = undefined;

/**
 * Time of the most recent update.
 * @member {String} updateTime
 */
GoogleCloudVideointelligenceV1beta2VideoAnnotationProgress.prototype['updateTime'] = undefined;





/**
 * Allowed values for the <code>feature</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudVideointelligenceV1beta2VideoAnnotationProgress['FeatureEnum'] = {

    /**
     * value: "FEATURE_UNSPECIFIED"
     * @const
     */
    "FEATURE_UNSPECIFIED": "FEATURE_UNSPECIFIED",

    /**
     * value: "LABEL_DETECTION"
     * @const
     */
    "LABEL_DETECTION": "LABEL_DETECTION",

    /**
     * value: "SHOT_CHANGE_DETECTION"
     * @const
     */
    "SHOT_CHANGE_DETECTION": "SHOT_CHANGE_DETECTION",

    /**
     * value: "EXPLICIT_CONTENT_DETECTION"
     * @const
     */
    "EXPLICIT_CONTENT_DETECTION": "EXPLICIT_CONTENT_DETECTION",

    /**
     * value: "FACE_DETECTION"
     * @const
     */
    "FACE_DETECTION": "FACE_DETECTION",

    /**
     * value: "SPEECH_TRANSCRIPTION"
     * @const
     */
    "SPEECH_TRANSCRIPTION": "SPEECH_TRANSCRIPTION",

    /**
     * value: "TEXT_DETECTION"
     * @const
     */
    "TEXT_DETECTION": "TEXT_DETECTION",

    /**
     * value: "OBJECT_TRACKING"
     * @const
     */
    "OBJECT_TRACKING": "OBJECT_TRACKING",

    /**
     * value: "LOGO_RECOGNITION"
     * @const
     */
    "LOGO_RECOGNITION": "LOGO_RECOGNITION",

    /**
     * value: "PERSON_DETECTION"
     * @const
     */
    "PERSON_DETECTION": "PERSON_DETECTION"
};



export default GoogleCloudVideointelligenceV1beta2VideoAnnotationProgress;

