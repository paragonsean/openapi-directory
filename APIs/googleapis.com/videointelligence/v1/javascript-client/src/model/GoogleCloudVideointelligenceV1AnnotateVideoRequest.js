/**
 * Cloud Video Intelligence API
 * Detects objects, explicit content, and scene changes in videos. It also specifies the region for annotation and transcribes speech to text. Supports both asynchronous API and streaming API.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudVideointelligenceV1VideoContext from './GoogleCloudVideointelligenceV1VideoContext';

/**
 * The GoogleCloudVideointelligenceV1AnnotateVideoRequest model module.
 * @module model/GoogleCloudVideointelligenceV1AnnotateVideoRequest
 * @version v1
 */
class GoogleCloudVideointelligenceV1AnnotateVideoRequest {
    /**
     * Constructs a new <code>GoogleCloudVideointelligenceV1AnnotateVideoRequest</code>.
     * Video annotation request.
     * @alias module:model/GoogleCloudVideointelligenceV1AnnotateVideoRequest
     */
    constructor() { 
        
        GoogleCloudVideointelligenceV1AnnotateVideoRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudVideointelligenceV1AnnotateVideoRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudVideointelligenceV1AnnotateVideoRequest} obj Optional instance to populate.
     * @return {module:model/GoogleCloudVideointelligenceV1AnnotateVideoRequest} The populated <code>GoogleCloudVideointelligenceV1AnnotateVideoRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudVideointelligenceV1AnnotateVideoRequest();

            if (data.hasOwnProperty('features')) {
                obj['features'] = ApiClient.convertToType(data['features'], ['String']);
            }
            if (data.hasOwnProperty('inputContent')) {
                obj['inputContent'] = ApiClient.convertToType(data['inputContent'], 'Blob');
            }
            if (data.hasOwnProperty('inputUri')) {
                obj['inputUri'] = ApiClient.convertToType(data['inputUri'], 'String');
            }
            if (data.hasOwnProperty('locationId')) {
                obj['locationId'] = ApiClient.convertToType(data['locationId'], 'String');
            }
            if (data.hasOwnProperty('outputUri')) {
                obj['outputUri'] = ApiClient.convertToType(data['outputUri'], 'String');
            }
            if (data.hasOwnProperty('videoContext')) {
                obj['videoContext'] = GoogleCloudVideointelligenceV1VideoContext.constructFromObject(data['videoContext']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudVideointelligenceV1AnnotateVideoRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudVideointelligenceV1AnnotateVideoRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['features'])) {
            throw new Error("Expected the field `features` to be an array in the JSON data but got " + data['features']);
        }
        // ensure the json data is a string
        if (data['inputUri'] && !(typeof data['inputUri'] === 'string' || data['inputUri'] instanceof String)) {
            throw new Error("Expected the field `inputUri` to be a primitive type in the JSON string but got " + data['inputUri']);
        }
        // ensure the json data is a string
        if (data['locationId'] && !(typeof data['locationId'] === 'string' || data['locationId'] instanceof String)) {
            throw new Error("Expected the field `locationId` to be a primitive type in the JSON string but got " + data['locationId']);
        }
        // ensure the json data is a string
        if (data['outputUri'] && !(typeof data['outputUri'] === 'string' || data['outputUri'] instanceof String)) {
            throw new Error("Expected the field `outputUri` to be a primitive type in the JSON string but got " + data['outputUri']);
        }
        // validate the optional field `videoContext`
        if (data['videoContext']) { // data not null
          GoogleCloudVideointelligenceV1VideoContext.validateJSON(data['videoContext']);
        }

        return true;
    }


}



/**
 * Required. Requested video annotation features.
 * @member {Array.<module:model/GoogleCloudVideointelligenceV1AnnotateVideoRequest.FeaturesEnum>} features
 */
GoogleCloudVideointelligenceV1AnnotateVideoRequest.prototype['features'] = undefined;

/**
 * The video data bytes. If unset, the input video(s) should be specified via the `input_uri`. If set, `input_uri` must be unset.
 * @member {Blob} inputContent
 */
GoogleCloudVideointelligenceV1AnnotateVideoRequest.prototype['inputContent'] = undefined;

/**
 * Input video location. Currently, only [Cloud Storage](https://cloud.google.com/storage/) URIs are supported. URIs must be specified in the following format: `gs://bucket-id/object-id` (other URI formats return google.rpc.Code.INVALID_ARGUMENT). For more information, see [Request URIs](https://cloud.google.com/storage/docs/request-endpoints). To identify multiple videos, a video URI may include wildcards in the `object-id`. Supported wildcards: '*' to match 0 or more characters; '?' to match 1 character. If unset, the input video should be embedded in the request as `input_content`. If set, `input_content` must be unset.
 * @member {String} inputUri
 */
GoogleCloudVideointelligenceV1AnnotateVideoRequest.prototype['inputUri'] = undefined;

/**
 * Optional. Cloud region where annotation should take place. Supported cloud regions are: `us-east1`, `us-west1`, `europe-west1`, `asia-east1`. If no region is specified, the region will be determined based on video file location.
 * @member {String} locationId
 */
GoogleCloudVideointelligenceV1AnnotateVideoRequest.prototype['locationId'] = undefined;

/**
 * Optional. Location where the output (in JSON format) should be stored. Currently, only [Cloud Storage](https://cloud.google.com/storage/) URIs are supported. These must be specified in the following format: `gs://bucket-id/object-id` (other URI formats return google.rpc.Code.INVALID_ARGUMENT). For more information, see [Request URIs](https://cloud.google.com/storage/docs/request-endpoints).
 * @member {String} outputUri
 */
GoogleCloudVideointelligenceV1AnnotateVideoRequest.prototype['outputUri'] = undefined;

/**
 * @member {module:model/GoogleCloudVideointelligenceV1VideoContext} videoContext
 */
GoogleCloudVideointelligenceV1AnnotateVideoRequest.prototype['videoContext'] = undefined;





/**
 * Allowed values for the <code>features</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudVideointelligenceV1AnnotateVideoRequest['FeaturesEnum'] = {

    /**
     * value: "FEATURE_UNSPECIFIED"
     * @const
     */
    "FEATURE_UNSPECIFIED": "FEATURE_UNSPECIFIED",

    /**
     * value: "LABEL_DETECTION"
     * @const
     */
    "LABEL_DETECTION": "LABEL_DETECTION",

    /**
     * value: "SHOT_CHANGE_DETECTION"
     * @const
     */
    "SHOT_CHANGE_DETECTION": "SHOT_CHANGE_DETECTION",

    /**
     * value: "EXPLICIT_CONTENT_DETECTION"
     * @const
     */
    "EXPLICIT_CONTENT_DETECTION": "EXPLICIT_CONTENT_DETECTION",

    /**
     * value: "FACE_DETECTION"
     * @const
     */
    "FACE_DETECTION": "FACE_DETECTION",

    /**
     * value: "SPEECH_TRANSCRIPTION"
     * @const
     */
    "SPEECH_TRANSCRIPTION": "SPEECH_TRANSCRIPTION",

    /**
     * value: "TEXT_DETECTION"
     * @const
     */
    "TEXT_DETECTION": "TEXT_DETECTION",

    /**
     * value: "OBJECT_TRACKING"
     * @const
     */
    "OBJECT_TRACKING": "OBJECT_TRACKING",

    /**
     * value: "LOGO_RECOGNITION"
     * @const
     */
    "LOGO_RECOGNITION": "LOGO_RECOGNITION",

    /**
     * value: "PERSON_DETECTION"
     * @const
     */
    "PERSON_DETECTION": "PERSON_DETECTION"
};



export default GoogleCloudVideointelligenceV1AnnotateVideoRequest;

