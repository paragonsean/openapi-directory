/*
 * Cloud Video Intelligence API
 * Detects objects, explicit content, and scene changes in videos. It also specifies the region for annotation and transcribes speech to text. Supports both asynchronous API and streaming API.
 *
 * The version of the OpenAPI document: v1beta2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudVideointelligenceV1beta2VideoSegment;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Annotation progress for a single video.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:50:28.469226-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudVideointelligenceV1beta2VideoAnnotationProgress {
  /**
   * Specifies which feature is being tracked if the request contains more than one feature.
   */
  @JsonAdapter(FeatureEnum.Adapter.class)
  public enum FeatureEnum {
    FEATURE_UNSPECIFIED("FEATURE_UNSPECIFIED"),
    
    LABEL_DETECTION("LABEL_DETECTION"),
    
    SHOT_CHANGE_DETECTION("SHOT_CHANGE_DETECTION"),
    
    EXPLICIT_CONTENT_DETECTION("EXPLICIT_CONTENT_DETECTION"),
    
    FACE_DETECTION("FACE_DETECTION"),
    
    SPEECH_TRANSCRIPTION("SPEECH_TRANSCRIPTION"),
    
    TEXT_DETECTION("TEXT_DETECTION"),
    
    OBJECT_TRACKING("OBJECT_TRACKING"),
    
    LOGO_RECOGNITION("LOGO_RECOGNITION"),
    
    PERSON_DETECTION("PERSON_DETECTION");

    private String value;

    FeatureEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static FeatureEnum fromValue(String value) {
      for (FeatureEnum b : FeatureEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<FeatureEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final FeatureEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public FeatureEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return FeatureEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      FeatureEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_FEATURE = "feature";
  @SerializedName(SERIALIZED_NAME_FEATURE)
  private FeatureEnum feature;

  public static final String SERIALIZED_NAME_INPUT_URI = "inputUri";
  @SerializedName(SERIALIZED_NAME_INPUT_URI)
  private String inputUri;

  public static final String SERIALIZED_NAME_PROGRESS_PERCENT = "progressPercent";
  @SerializedName(SERIALIZED_NAME_PROGRESS_PERCENT)
  private Integer progressPercent;

  public static final String SERIALIZED_NAME_SEGMENT = "segment";
  @SerializedName(SERIALIZED_NAME_SEGMENT)
  private GoogleCloudVideointelligenceV1beta2VideoSegment segment;

  public static final String SERIALIZED_NAME_START_TIME = "startTime";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private String startTime;

  public static final String SERIALIZED_NAME_UPDATE_TIME = "updateTime";
  @SerializedName(SERIALIZED_NAME_UPDATE_TIME)
  private String updateTime;

  public GoogleCloudVideointelligenceV1beta2VideoAnnotationProgress() {
  }

  public GoogleCloudVideointelligenceV1beta2VideoAnnotationProgress feature(FeatureEnum feature) {
    this.feature = feature;
    return this;
  }

  /**
   * Specifies which feature is being tracked if the request contains more than one feature.
   * @return feature
   */
  @javax.annotation.Nullable
  public FeatureEnum getFeature() {
    return feature;
  }

  public void setFeature(FeatureEnum feature) {
    this.feature = feature;
  }


  public GoogleCloudVideointelligenceV1beta2VideoAnnotationProgress inputUri(String inputUri) {
    this.inputUri = inputUri;
    return this;
  }

  /**
   * Video file location in [Cloud Storage](https://cloud.google.com/storage/).
   * @return inputUri
   */
  @javax.annotation.Nullable
  public String getInputUri() {
    return inputUri;
  }

  public void setInputUri(String inputUri) {
    this.inputUri = inputUri;
  }


  public GoogleCloudVideointelligenceV1beta2VideoAnnotationProgress progressPercent(Integer progressPercent) {
    this.progressPercent = progressPercent;
    return this;
  }

  /**
   * Approximate percentage processed thus far. Guaranteed to be 100 when fully processed.
   * @return progressPercent
   */
  @javax.annotation.Nullable
  public Integer getProgressPercent() {
    return progressPercent;
  }

  public void setProgressPercent(Integer progressPercent) {
    this.progressPercent = progressPercent;
  }


  public GoogleCloudVideointelligenceV1beta2VideoAnnotationProgress segment(GoogleCloudVideointelligenceV1beta2VideoSegment segment) {
    this.segment = segment;
    return this;
  }

  /**
   * Get segment
   * @return segment
   */
  @javax.annotation.Nullable
  public GoogleCloudVideointelligenceV1beta2VideoSegment getSegment() {
    return segment;
  }

  public void setSegment(GoogleCloudVideointelligenceV1beta2VideoSegment segment) {
    this.segment = segment;
  }


  public GoogleCloudVideointelligenceV1beta2VideoAnnotationProgress startTime(String startTime) {
    this.startTime = startTime;
    return this;
  }

  /**
   * Time when the request was received.
   * @return startTime
   */
  @javax.annotation.Nullable
  public String getStartTime() {
    return startTime;
  }

  public void setStartTime(String startTime) {
    this.startTime = startTime;
  }


  public GoogleCloudVideointelligenceV1beta2VideoAnnotationProgress updateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  /**
   * Time of the most recent update.
   * @return updateTime
   */
  @javax.annotation.Nullable
  public String getUpdateTime() {
    return updateTime;
  }

  public void setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudVideointelligenceV1beta2VideoAnnotationProgress googleCloudVideointelligenceV1beta2VideoAnnotationProgress = (GoogleCloudVideointelligenceV1beta2VideoAnnotationProgress) o;
    return Objects.equals(this.feature, googleCloudVideointelligenceV1beta2VideoAnnotationProgress.feature) &&
        Objects.equals(this.inputUri, googleCloudVideointelligenceV1beta2VideoAnnotationProgress.inputUri) &&
        Objects.equals(this.progressPercent, googleCloudVideointelligenceV1beta2VideoAnnotationProgress.progressPercent) &&
        Objects.equals(this.segment, googleCloudVideointelligenceV1beta2VideoAnnotationProgress.segment) &&
        Objects.equals(this.startTime, googleCloudVideointelligenceV1beta2VideoAnnotationProgress.startTime) &&
        Objects.equals(this.updateTime, googleCloudVideointelligenceV1beta2VideoAnnotationProgress.updateTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(feature, inputUri, progressPercent, segment, startTime, updateTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudVideointelligenceV1beta2VideoAnnotationProgress {\n");
    sb.append("    feature: ").append(toIndentedString(feature)).append("\n");
    sb.append("    inputUri: ").append(toIndentedString(inputUri)).append("\n");
    sb.append("    progressPercent: ").append(toIndentedString(progressPercent)).append("\n");
    sb.append("    segment: ").append(toIndentedString(segment)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("feature");
    openapiFields.add("inputUri");
    openapiFields.add("progressPercent");
    openapiFields.add("segment");
    openapiFields.add("startTime");
    openapiFields.add("updateTime");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudVideointelligenceV1beta2VideoAnnotationProgress
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudVideointelligenceV1beta2VideoAnnotationProgress.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudVideointelligenceV1beta2VideoAnnotationProgress is not found in the empty JSON string", GoogleCloudVideointelligenceV1beta2VideoAnnotationProgress.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudVideointelligenceV1beta2VideoAnnotationProgress.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudVideointelligenceV1beta2VideoAnnotationProgress` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("feature") != null && !jsonObj.get("feature").isJsonNull()) && !jsonObj.get("feature").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `feature` to be a primitive type in the JSON string but got `%s`", jsonObj.get("feature").toString()));
      }
      // validate the optional field `feature`
      if (jsonObj.get("feature") != null && !jsonObj.get("feature").isJsonNull()) {
        FeatureEnum.validateJsonElement(jsonObj.get("feature"));
      }
      if ((jsonObj.get("inputUri") != null && !jsonObj.get("inputUri").isJsonNull()) && !jsonObj.get("inputUri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `inputUri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("inputUri").toString()));
      }
      // validate the optional field `segment`
      if (jsonObj.get("segment") != null && !jsonObj.get("segment").isJsonNull()) {
        GoogleCloudVideointelligenceV1beta2VideoSegment.validateJsonElement(jsonObj.get("segment"));
      }
      if ((jsonObj.get("startTime") != null && !jsonObj.get("startTime").isJsonNull()) && !jsonObj.get("startTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `startTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("startTime").toString()));
      }
      if ((jsonObj.get("updateTime") != null && !jsonObj.get("updateTime").isJsonNull()) && !jsonObj.get("updateTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updateTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updateTime").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudVideointelligenceV1beta2VideoAnnotationProgress.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudVideointelligenceV1beta2VideoAnnotationProgress' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudVideointelligenceV1beta2VideoAnnotationProgress> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudVideointelligenceV1beta2VideoAnnotationProgress.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudVideointelligenceV1beta2VideoAnnotationProgress>() {
           @Override
           public void write(JsonWriter out, GoogleCloudVideointelligenceV1beta2VideoAnnotationProgress value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudVideointelligenceV1beta2VideoAnnotationProgress read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudVideointelligenceV1beta2VideoAnnotationProgress given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudVideointelligenceV1beta2VideoAnnotationProgress
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudVideointelligenceV1beta2VideoAnnotationProgress
   */
  public static GoogleCloudVideointelligenceV1beta2VideoAnnotationProgress fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudVideointelligenceV1beta2VideoAnnotationProgress.class);
  }

  /**
   * Convert an instance of GoogleCloudVideointelligenceV1beta2VideoAnnotationProgress to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

