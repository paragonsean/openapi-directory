/**
 * Cloud Video Intelligence API
 * Detects objects, explicit content, and scene changes in videos. It also specifies the region for annotation and transcribes speech to text. Supports both asynchronous API and streaming API.
 *
 * The version of the OpenAPI document: v1beta2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudVideointelligenceV1_ObjectTrackingFrame.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudVideointelligenceV1_ObjectTrackingFrame::OAIGoogleCloudVideointelligenceV1_ObjectTrackingFrame(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudVideointelligenceV1_ObjectTrackingFrame::OAIGoogleCloudVideointelligenceV1_ObjectTrackingFrame() {
    this->initializeModel();
}

OAIGoogleCloudVideointelligenceV1_ObjectTrackingFrame::~OAIGoogleCloudVideointelligenceV1_ObjectTrackingFrame() {}

void OAIGoogleCloudVideointelligenceV1_ObjectTrackingFrame::initializeModel() {

    m_normalized_bounding_box_isSet = false;
    m_normalized_bounding_box_isValid = false;

    m_time_offset_isSet = false;
    m_time_offset_isValid = false;
}

void OAIGoogleCloudVideointelligenceV1_ObjectTrackingFrame::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudVideointelligenceV1_ObjectTrackingFrame::fromJsonObject(QJsonObject json) {

    m_normalized_bounding_box_isValid = ::OpenAPI::fromJsonValue(m_normalized_bounding_box, json[QString("normalizedBoundingBox")]);
    m_normalized_bounding_box_isSet = !json[QString("normalizedBoundingBox")].isNull() && m_normalized_bounding_box_isValid;

    m_time_offset_isValid = ::OpenAPI::fromJsonValue(m_time_offset, json[QString("timeOffset")]);
    m_time_offset_isSet = !json[QString("timeOffset")].isNull() && m_time_offset_isValid;
}

QString OAIGoogleCloudVideointelligenceV1_ObjectTrackingFrame::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudVideointelligenceV1_ObjectTrackingFrame::asJsonObject() const {
    QJsonObject obj;
    if (m_normalized_bounding_box.isSet()) {
        obj.insert(QString("normalizedBoundingBox"), ::OpenAPI::toJsonValue(m_normalized_bounding_box));
    }
    if (m_time_offset_isSet) {
        obj.insert(QString("timeOffset"), ::OpenAPI::toJsonValue(m_time_offset));
    }
    return obj;
}

OAIGoogleCloudVideointelligenceV1_NormalizedBoundingBox OAIGoogleCloudVideointelligenceV1_ObjectTrackingFrame::getNormalizedBoundingBox() const {
    return m_normalized_bounding_box;
}
void OAIGoogleCloudVideointelligenceV1_ObjectTrackingFrame::setNormalizedBoundingBox(const OAIGoogleCloudVideointelligenceV1_NormalizedBoundingBox &normalized_bounding_box) {
    m_normalized_bounding_box = normalized_bounding_box;
    m_normalized_bounding_box_isSet = true;
}

bool OAIGoogleCloudVideointelligenceV1_ObjectTrackingFrame::is_normalized_bounding_box_Set() const{
    return m_normalized_bounding_box_isSet;
}

bool OAIGoogleCloudVideointelligenceV1_ObjectTrackingFrame::is_normalized_bounding_box_Valid() const{
    return m_normalized_bounding_box_isValid;
}

QString OAIGoogleCloudVideointelligenceV1_ObjectTrackingFrame::getTimeOffset() const {
    return m_time_offset;
}
void OAIGoogleCloudVideointelligenceV1_ObjectTrackingFrame::setTimeOffset(const QString &time_offset) {
    m_time_offset = time_offset;
    m_time_offset_isSet = true;
}

bool OAIGoogleCloudVideointelligenceV1_ObjectTrackingFrame::is_time_offset_Set() const{
    return m_time_offset_isSet;
}

bool OAIGoogleCloudVideointelligenceV1_ObjectTrackingFrame::is_time_offset_Valid() const{
    return m_time_offset_isValid;
}

bool OAIGoogleCloudVideointelligenceV1_ObjectTrackingFrame::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_normalized_bounding_box.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_time_offset_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudVideointelligenceV1_ObjectTrackingFrame::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
