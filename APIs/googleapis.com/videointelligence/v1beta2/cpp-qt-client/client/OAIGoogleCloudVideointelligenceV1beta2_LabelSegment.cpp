/**
 * Cloud Video Intelligence API
 * Detects objects, explicit content, and scene changes in videos. It also specifies the region for annotation and transcribes speech to text. Supports both asynchronous API and streaming API.
 *
 * The version of the OpenAPI document: v1beta2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudVideointelligenceV1beta2_LabelSegment.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudVideointelligenceV1beta2_LabelSegment::OAIGoogleCloudVideointelligenceV1beta2_LabelSegment(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudVideointelligenceV1beta2_LabelSegment::OAIGoogleCloudVideointelligenceV1beta2_LabelSegment() {
    this->initializeModel();
}

OAIGoogleCloudVideointelligenceV1beta2_LabelSegment::~OAIGoogleCloudVideointelligenceV1beta2_LabelSegment() {}

void OAIGoogleCloudVideointelligenceV1beta2_LabelSegment::initializeModel() {

    m_confidence_isSet = false;
    m_confidence_isValid = false;

    m_segment_isSet = false;
    m_segment_isValid = false;
}

void OAIGoogleCloudVideointelligenceV1beta2_LabelSegment::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudVideointelligenceV1beta2_LabelSegment::fromJsonObject(QJsonObject json) {

    m_confidence_isValid = ::OpenAPI::fromJsonValue(m_confidence, json[QString("confidence")]);
    m_confidence_isSet = !json[QString("confidence")].isNull() && m_confidence_isValid;

    m_segment_isValid = ::OpenAPI::fromJsonValue(m_segment, json[QString("segment")]);
    m_segment_isSet = !json[QString("segment")].isNull() && m_segment_isValid;
}

QString OAIGoogleCloudVideointelligenceV1beta2_LabelSegment::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudVideointelligenceV1beta2_LabelSegment::asJsonObject() const {
    QJsonObject obj;
    if (m_confidence_isSet) {
        obj.insert(QString("confidence"), ::OpenAPI::toJsonValue(m_confidence));
    }
    if (m_segment.isSet()) {
        obj.insert(QString("segment"), ::OpenAPI::toJsonValue(m_segment));
    }
    return obj;
}

float OAIGoogleCloudVideointelligenceV1beta2_LabelSegment::getConfidence() const {
    return m_confidence;
}
void OAIGoogleCloudVideointelligenceV1beta2_LabelSegment::setConfidence(const float &confidence) {
    m_confidence = confidence;
    m_confidence_isSet = true;
}

bool OAIGoogleCloudVideointelligenceV1beta2_LabelSegment::is_confidence_Set() const{
    return m_confidence_isSet;
}

bool OAIGoogleCloudVideointelligenceV1beta2_LabelSegment::is_confidence_Valid() const{
    return m_confidence_isValid;
}

OAIGoogleCloudVideointelligenceV1beta2_VideoSegment OAIGoogleCloudVideointelligenceV1beta2_LabelSegment::getSegment() const {
    return m_segment;
}
void OAIGoogleCloudVideointelligenceV1beta2_LabelSegment::setSegment(const OAIGoogleCloudVideointelligenceV1beta2_VideoSegment &segment) {
    m_segment = segment;
    m_segment_isSet = true;
}

bool OAIGoogleCloudVideointelligenceV1beta2_LabelSegment::is_segment_Set() const{
    return m_segment_isSet;
}

bool OAIGoogleCloudVideointelligenceV1beta2_LabelSegment::is_segment_Valid() const{
    return m_segment_isValid;
}

bool OAIGoogleCloudVideointelligenceV1beta2_LabelSegment::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_confidence_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_segment.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudVideointelligenceV1beta2_LabelSegment::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
