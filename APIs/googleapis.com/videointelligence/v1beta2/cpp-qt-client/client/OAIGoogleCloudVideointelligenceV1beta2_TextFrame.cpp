/**
 * Cloud Video Intelligence API
 * Detects objects, explicit content, and scene changes in videos. It also specifies the region for annotation and transcribes speech to text. Supports both asynchronous API and streaming API.
 *
 * The version of the OpenAPI document: v1beta2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudVideointelligenceV1beta2_TextFrame.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudVideointelligenceV1beta2_TextFrame::OAIGoogleCloudVideointelligenceV1beta2_TextFrame(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudVideointelligenceV1beta2_TextFrame::OAIGoogleCloudVideointelligenceV1beta2_TextFrame() {
    this->initializeModel();
}

OAIGoogleCloudVideointelligenceV1beta2_TextFrame::~OAIGoogleCloudVideointelligenceV1beta2_TextFrame() {}

void OAIGoogleCloudVideointelligenceV1beta2_TextFrame::initializeModel() {

    m_rotated_bounding_box_isSet = false;
    m_rotated_bounding_box_isValid = false;

    m_time_offset_isSet = false;
    m_time_offset_isValid = false;
}

void OAIGoogleCloudVideointelligenceV1beta2_TextFrame::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudVideointelligenceV1beta2_TextFrame::fromJsonObject(QJsonObject json) {

    m_rotated_bounding_box_isValid = ::OpenAPI::fromJsonValue(m_rotated_bounding_box, json[QString("rotatedBoundingBox")]);
    m_rotated_bounding_box_isSet = !json[QString("rotatedBoundingBox")].isNull() && m_rotated_bounding_box_isValid;

    m_time_offset_isValid = ::OpenAPI::fromJsonValue(m_time_offset, json[QString("timeOffset")]);
    m_time_offset_isSet = !json[QString("timeOffset")].isNull() && m_time_offset_isValid;
}

QString OAIGoogleCloudVideointelligenceV1beta2_TextFrame::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudVideointelligenceV1beta2_TextFrame::asJsonObject() const {
    QJsonObject obj;
    if (m_rotated_bounding_box.isSet()) {
        obj.insert(QString("rotatedBoundingBox"), ::OpenAPI::toJsonValue(m_rotated_bounding_box));
    }
    if (m_time_offset_isSet) {
        obj.insert(QString("timeOffset"), ::OpenAPI::toJsonValue(m_time_offset));
    }
    return obj;
}

OAIGoogleCloudVideointelligenceV1beta2_NormalizedBoundingPoly OAIGoogleCloudVideointelligenceV1beta2_TextFrame::getRotatedBoundingBox() const {
    return m_rotated_bounding_box;
}
void OAIGoogleCloudVideointelligenceV1beta2_TextFrame::setRotatedBoundingBox(const OAIGoogleCloudVideointelligenceV1beta2_NormalizedBoundingPoly &rotated_bounding_box) {
    m_rotated_bounding_box = rotated_bounding_box;
    m_rotated_bounding_box_isSet = true;
}

bool OAIGoogleCloudVideointelligenceV1beta2_TextFrame::is_rotated_bounding_box_Set() const{
    return m_rotated_bounding_box_isSet;
}

bool OAIGoogleCloudVideointelligenceV1beta2_TextFrame::is_rotated_bounding_box_Valid() const{
    return m_rotated_bounding_box_isValid;
}

QString OAIGoogleCloudVideointelligenceV1beta2_TextFrame::getTimeOffset() const {
    return m_time_offset;
}
void OAIGoogleCloudVideointelligenceV1beta2_TextFrame::setTimeOffset(const QString &time_offset) {
    m_time_offset = time_offset;
    m_time_offset_isSet = true;
}

bool OAIGoogleCloudVideointelligenceV1beta2_TextFrame::is_time_offset_Set() const{
    return m_time_offset_isSet;
}

bool OAIGoogleCloudVideointelligenceV1beta2_TextFrame::is_time_offset_Valid() const{
    return m_time_offset_isValid;
}

bool OAIGoogleCloudVideointelligenceV1beta2_TextFrame::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_rotated_bounding_box.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_time_offset_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudVideointelligenceV1beta2_TextFrame::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
