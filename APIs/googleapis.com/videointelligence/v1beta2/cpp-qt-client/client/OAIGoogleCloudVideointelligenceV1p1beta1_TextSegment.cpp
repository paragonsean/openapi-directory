/**
 * Cloud Video Intelligence API
 * Detects objects, explicit content, and scene changes in videos. It also specifies the region for annotation and transcribes speech to text. Supports both asynchronous API and streaming API.
 *
 * The version of the OpenAPI document: v1beta2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudVideointelligenceV1p1beta1_TextSegment.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudVideointelligenceV1p1beta1_TextSegment::OAIGoogleCloudVideointelligenceV1p1beta1_TextSegment(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudVideointelligenceV1p1beta1_TextSegment::OAIGoogleCloudVideointelligenceV1p1beta1_TextSegment() {
    this->initializeModel();
}

OAIGoogleCloudVideointelligenceV1p1beta1_TextSegment::~OAIGoogleCloudVideointelligenceV1p1beta1_TextSegment() {}

void OAIGoogleCloudVideointelligenceV1p1beta1_TextSegment::initializeModel() {

    m_confidence_isSet = false;
    m_confidence_isValid = false;

    m_frames_isSet = false;
    m_frames_isValid = false;

    m_segment_isSet = false;
    m_segment_isValid = false;
}

void OAIGoogleCloudVideointelligenceV1p1beta1_TextSegment::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudVideointelligenceV1p1beta1_TextSegment::fromJsonObject(QJsonObject json) {

    m_confidence_isValid = ::OpenAPI::fromJsonValue(m_confidence, json[QString("confidence")]);
    m_confidence_isSet = !json[QString("confidence")].isNull() && m_confidence_isValid;

    m_frames_isValid = ::OpenAPI::fromJsonValue(m_frames, json[QString("frames")]);
    m_frames_isSet = !json[QString("frames")].isNull() && m_frames_isValid;

    m_segment_isValid = ::OpenAPI::fromJsonValue(m_segment, json[QString("segment")]);
    m_segment_isSet = !json[QString("segment")].isNull() && m_segment_isValid;
}

QString OAIGoogleCloudVideointelligenceV1p1beta1_TextSegment::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudVideointelligenceV1p1beta1_TextSegment::asJsonObject() const {
    QJsonObject obj;
    if (m_confidence_isSet) {
        obj.insert(QString("confidence"), ::OpenAPI::toJsonValue(m_confidence));
    }
    if (m_frames.size() > 0) {
        obj.insert(QString("frames"), ::OpenAPI::toJsonValue(m_frames));
    }
    if (m_segment.isSet()) {
        obj.insert(QString("segment"), ::OpenAPI::toJsonValue(m_segment));
    }
    return obj;
}

float OAIGoogleCloudVideointelligenceV1p1beta1_TextSegment::getConfidence() const {
    return m_confidence;
}
void OAIGoogleCloudVideointelligenceV1p1beta1_TextSegment::setConfidence(const float &confidence) {
    m_confidence = confidence;
    m_confidence_isSet = true;
}

bool OAIGoogleCloudVideointelligenceV1p1beta1_TextSegment::is_confidence_Set() const{
    return m_confidence_isSet;
}

bool OAIGoogleCloudVideointelligenceV1p1beta1_TextSegment::is_confidence_Valid() const{
    return m_confidence_isValid;
}

QList<OAIGoogleCloudVideointelligenceV1p1beta1_TextFrame> OAIGoogleCloudVideointelligenceV1p1beta1_TextSegment::getFrames() const {
    return m_frames;
}
void OAIGoogleCloudVideointelligenceV1p1beta1_TextSegment::setFrames(const QList<OAIGoogleCloudVideointelligenceV1p1beta1_TextFrame> &frames) {
    m_frames = frames;
    m_frames_isSet = true;
}

bool OAIGoogleCloudVideointelligenceV1p1beta1_TextSegment::is_frames_Set() const{
    return m_frames_isSet;
}

bool OAIGoogleCloudVideointelligenceV1p1beta1_TextSegment::is_frames_Valid() const{
    return m_frames_isValid;
}

OAIGoogleCloudVideointelligenceV1p1beta1_VideoSegment OAIGoogleCloudVideointelligenceV1p1beta1_TextSegment::getSegment() const {
    return m_segment;
}
void OAIGoogleCloudVideointelligenceV1p1beta1_TextSegment::setSegment(const OAIGoogleCloudVideointelligenceV1p1beta1_VideoSegment &segment) {
    m_segment = segment;
    m_segment_isSet = true;
}

bool OAIGoogleCloudVideointelligenceV1p1beta1_TextSegment::is_segment_Set() const{
    return m_segment_isSet;
}

bool OAIGoogleCloudVideointelligenceV1p1beta1_TextSegment::is_segment_Valid() const{
    return m_segment_isValid;
}

bool OAIGoogleCloudVideointelligenceV1p1beta1_TextSegment::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_confidence_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_frames.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_segment.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudVideointelligenceV1p1beta1_TextSegment::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
