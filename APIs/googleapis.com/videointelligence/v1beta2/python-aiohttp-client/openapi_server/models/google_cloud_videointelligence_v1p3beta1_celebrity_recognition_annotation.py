# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_videointelligence_v1p3beta1_celebrity_track import GoogleCloudVideointelligenceV1p3beta1CelebrityTrack
from openapi_server import util


class GoogleCloudVideointelligenceV1p3beta1CelebrityRecognitionAnnotation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, celebrity_tracks: List[GoogleCloudVideointelligenceV1p3beta1CelebrityTrack]=None, version: str=None):
        """GoogleCloudVideointelligenceV1p3beta1CelebrityRecognitionAnnotation - a model defined in OpenAPI

        :param celebrity_tracks: The celebrity_tracks of this GoogleCloudVideointelligenceV1p3beta1CelebrityRecognitionAnnotation.
        :param version: The version of this GoogleCloudVideointelligenceV1p3beta1CelebrityRecognitionAnnotation.
        """
        self.openapi_types = {
            'celebrity_tracks': List[GoogleCloudVideointelligenceV1p3beta1CelebrityTrack],
            'version': str
        }

        self.attribute_map = {
            'celebrity_tracks': 'celebrityTracks',
            'version': 'version'
        }

        self._celebrity_tracks = celebrity_tracks
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudVideointelligenceV1p3beta1CelebrityRecognitionAnnotation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudVideointelligenceV1p3beta1_CelebrityRecognitionAnnotation of this GoogleCloudVideointelligenceV1p3beta1CelebrityRecognitionAnnotation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def celebrity_tracks(self):
        """Gets the celebrity_tracks of this GoogleCloudVideointelligenceV1p3beta1CelebrityRecognitionAnnotation.

        The tracks detected from the input video, including recognized celebrities and other detected faces in the video.

        :return: The celebrity_tracks of this GoogleCloudVideointelligenceV1p3beta1CelebrityRecognitionAnnotation.
        :rtype: List[GoogleCloudVideointelligenceV1p3beta1CelebrityTrack]
        """
        return self._celebrity_tracks

    @celebrity_tracks.setter
    def celebrity_tracks(self, celebrity_tracks):
        """Sets the celebrity_tracks of this GoogleCloudVideointelligenceV1p3beta1CelebrityRecognitionAnnotation.

        The tracks detected from the input video, including recognized celebrities and other detected faces in the video.

        :param celebrity_tracks: The celebrity_tracks of this GoogleCloudVideointelligenceV1p3beta1CelebrityRecognitionAnnotation.
        :type celebrity_tracks: List[GoogleCloudVideointelligenceV1p3beta1CelebrityTrack]
        """

        self._celebrity_tracks = celebrity_tracks

    @property
    def version(self):
        """Gets the version of this GoogleCloudVideointelligenceV1p3beta1CelebrityRecognitionAnnotation.

        Feature version.

        :return: The version of this GoogleCloudVideointelligenceV1p3beta1CelebrityRecognitionAnnotation.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this GoogleCloudVideointelligenceV1p3beta1CelebrityRecognitionAnnotation.

        Feature version.

        :param version: The version of this GoogleCloudVideointelligenceV1p3beta1CelebrityRecognitionAnnotation.
        :type version: str
        """

        self._version = version
