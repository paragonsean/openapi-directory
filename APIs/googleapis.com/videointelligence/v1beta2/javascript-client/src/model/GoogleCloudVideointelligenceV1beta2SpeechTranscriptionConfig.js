/**
 * Cloud Video Intelligence API
 * Detects objects, explicit content, and scene changes in videos. It also specifies the region for annotation and transcribes speech to text. Supports both asynchronous API and streaming API.
 *
 * The version of the OpenAPI document: v1beta2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudVideointelligenceV1beta2SpeechContext from './GoogleCloudVideointelligenceV1beta2SpeechContext';

/**
 * The GoogleCloudVideointelligenceV1beta2SpeechTranscriptionConfig model module.
 * @module model/GoogleCloudVideointelligenceV1beta2SpeechTranscriptionConfig
 * @version v1beta2
 */
class GoogleCloudVideointelligenceV1beta2SpeechTranscriptionConfig {
    /**
     * Constructs a new <code>GoogleCloudVideointelligenceV1beta2SpeechTranscriptionConfig</code>.
     * Config for SPEECH_TRANSCRIPTION.
     * @alias module:model/GoogleCloudVideointelligenceV1beta2SpeechTranscriptionConfig
     */
    constructor() { 
        
        GoogleCloudVideointelligenceV1beta2SpeechTranscriptionConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudVideointelligenceV1beta2SpeechTranscriptionConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudVideointelligenceV1beta2SpeechTranscriptionConfig} obj Optional instance to populate.
     * @return {module:model/GoogleCloudVideointelligenceV1beta2SpeechTranscriptionConfig} The populated <code>GoogleCloudVideointelligenceV1beta2SpeechTranscriptionConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudVideointelligenceV1beta2SpeechTranscriptionConfig();

            if (data.hasOwnProperty('audioTracks')) {
                obj['audioTracks'] = ApiClient.convertToType(data['audioTracks'], ['Number']);
            }
            if (data.hasOwnProperty('diarizationSpeakerCount')) {
                obj['diarizationSpeakerCount'] = ApiClient.convertToType(data['diarizationSpeakerCount'], 'Number');
            }
            if (data.hasOwnProperty('enableAutomaticPunctuation')) {
                obj['enableAutomaticPunctuation'] = ApiClient.convertToType(data['enableAutomaticPunctuation'], 'Boolean');
            }
            if (data.hasOwnProperty('enableSpeakerDiarization')) {
                obj['enableSpeakerDiarization'] = ApiClient.convertToType(data['enableSpeakerDiarization'], 'Boolean');
            }
            if (data.hasOwnProperty('enableWordConfidence')) {
                obj['enableWordConfidence'] = ApiClient.convertToType(data['enableWordConfidence'], 'Boolean');
            }
            if (data.hasOwnProperty('filterProfanity')) {
                obj['filterProfanity'] = ApiClient.convertToType(data['filterProfanity'], 'Boolean');
            }
            if (data.hasOwnProperty('languageCode')) {
                obj['languageCode'] = ApiClient.convertToType(data['languageCode'], 'String');
            }
            if (data.hasOwnProperty('maxAlternatives')) {
                obj['maxAlternatives'] = ApiClient.convertToType(data['maxAlternatives'], 'Number');
            }
            if (data.hasOwnProperty('speechContexts')) {
                obj['speechContexts'] = ApiClient.convertToType(data['speechContexts'], [GoogleCloudVideointelligenceV1beta2SpeechContext]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudVideointelligenceV1beta2SpeechTranscriptionConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudVideointelligenceV1beta2SpeechTranscriptionConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['audioTracks'])) {
            throw new Error("Expected the field `audioTracks` to be an array in the JSON data but got " + data['audioTracks']);
        }
        // ensure the json data is a string
        if (data['languageCode'] && !(typeof data['languageCode'] === 'string' || data['languageCode'] instanceof String)) {
            throw new Error("Expected the field `languageCode` to be a primitive type in the JSON string but got " + data['languageCode']);
        }
        if (data['speechContexts']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['speechContexts'])) {
                throw new Error("Expected the field `speechContexts` to be an array in the JSON data but got " + data['speechContexts']);
            }
            // validate the optional field `speechContexts` (array)
            for (const item of data['speechContexts']) {
                GoogleCloudVideointelligenceV1beta2SpeechContext.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Optional. For file formats, such as MXF or MKV, supporting multiple audio tracks, specify up to two tracks. Default: track 0.
 * @member {Array.<Number>} audioTracks
 */
GoogleCloudVideointelligenceV1beta2SpeechTranscriptionConfig.prototype['audioTracks'] = undefined;

/**
 * Optional. If set, specifies the estimated number of speakers in the conversation. If not set, defaults to '2'. Ignored unless enable_speaker_diarization is set to true.
 * @member {Number} diarizationSpeakerCount
 */
GoogleCloudVideointelligenceV1beta2SpeechTranscriptionConfig.prototype['diarizationSpeakerCount'] = undefined;

/**
 * Optional. If 'true', adds punctuation to recognition result hypotheses. This feature is only available in select languages. Setting this for requests in other languages has no effect at all. The default 'false' value does not add punctuation to result hypotheses. NOTE: \"This is currently offered as an experimental service, complimentary to all users. In the future this may be exclusively available as a premium feature.\"
 * @member {Boolean} enableAutomaticPunctuation
 */
GoogleCloudVideointelligenceV1beta2SpeechTranscriptionConfig.prototype['enableAutomaticPunctuation'] = undefined;

/**
 * Optional. If 'true', enables speaker detection for each recognized word in the top alternative of the recognition result using a speaker_tag provided in the WordInfo. Note: When this is true, we send all the words from the beginning of the audio for the top alternative in every consecutive response. This is done in order to improve our speaker tags as our models learn to identify the speakers in the conversation over time.
 * @member {Boolean} enableSpeakerDiarization
 */
GoogleCloudVideointelligenceV1beta2SpeechTranscriptionConfig.prototype['enableSpeakerDiarization'] = undefined;

/**
 * Optional. If `true`, the top result includes a list of words and the confidence for those words. If `false`, no word-level confidence information is returned. The default is `false`.
 * @member {Boolean} enableWordConfidence
 */
GoogleCloudVideointelligenceV1beta2SpeechTranscriptionConfig.prototype['enableWordConfidence'] = undefined;

/**
 * Optional. If set to `true`, the server will attempt to filter out profanities, replacing all but the initial character in each filtered word with asterisks, e.g. \"f***\". If set to `false` or omitted, profanities won't be filtered out.
 * @member {Boolean} filterProfanity
 */
GoogleCloudVideointelligenceV1beta2SpeechTranscriptionConfig.prototype['filterProfanity'] = undefined;

/**
 * Required. *Required* The language of the supplied audio as a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: \"en-US\". See [Language Support](https://cloud.google.com/speech/docs/languages) for a list of the currently supported language codes.
 * @member {String} languageCode
 */
GoogleCloudVideointelligenceV1beta2SpeechTranscriptionConfig.prototype['languageCode'] = undefined;

/**
 * Optional. Maximum number of recognition hypotheses to be returned. Specifically, the maximum number of `SpeechRecognitionAlternative` messages within each `SpeechTranscription`. The server may return fewer than `max_alternatives`. Valid values are `0`-`30`. A value of `0` or `1` will return a maximum of one. If omitted, will return a maximum of one.
 * @member {Number} maxAlternatives
 */
GoogleCloudVideointelligenceV1beta2SpeechTranscriptionConfig.prototype['maxAlternatives'] = undefined;

/**
 * Optional. A means to provide context to assist the speech recognition.
 * @member {Array.<module:model/GoogleCloudVideointelligenceV1beta2SpeechContext>} speechContexts
 */
GoogleCloudVideointelligenceV1beta2SpeechTranscriptionConfig.prototype['speechContexts'] = undefined;






export default GoogleCloudVideointelligenceV1beta2SpeechTranscriptionConfig;

