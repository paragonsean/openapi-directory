/**
 * Cloud Video Intelligence API
 * Detects objects, explicit content, and scene changes in videos. It also specifies the region for annotation and transcribes speech to text. Supports both asynchronous API and streaming API.
 *
 * The version of the OpenAPI document: v1beta2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudVideointelligenceV1beta2Entity from './GoogleCloudVideointelligenceV1beta2Entity';
import GoogleCloudVideointelligenceV1beta2LabelFrame from './GoogleCloudVideointelligenceV1beta2LabelFrame';
import GoogleCloudVideointelligenceV1beta2LabelSegment from './GoogleCloudVideointelligenceV1beta2LabelSegment';

/**
 * The GoogleCloudVideointelligenceV1beta2LabelAnnotation model module.
 * @module model/GoogleCloudVideointelligenceV1beta2LabelAnnotation
 * @version v1beta2
 */
class GoogleCloudVideointelligenceV1beta2LabelAnnotation {
    /**
     * Constructs a new <code>GoogleCloudVideointelligenceV1beta2LabelAnnotation</code>.
     * Label annotation.
     * @alias module:model/GoogleCloudVideointelligenceV1beta2LabelAnnotation
     */
    constructor() { 
        
        GoogleCloudVideointelligenceV1beta2LabelAnnotation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudVideointelligenceV1beta2LabelAnnotation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudVideointelligenceV1beta2LabelAnnotation} obj Optional instance to populate.
     * @return {module:model/GoogleCloudVideointelligenceV1beta2LabelAnnotation} The populated <code>GoogleCloudVideointelligenceV1beta2LabelAnnotation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudVideointelligenceV1beta2LabelAnnotation();

            if (data.hasOwnProperty('categoryEntities')) {
                obj['categoryEntities'] = ApiClient.convertToType(data['categoryEntities'], [GoogleCloudVideointelligenceV1beta2Entity]);
            }
            if (data.hasOwnProperty('entity')) {
                obj['entity'] = GoogleCloudVideointelligenceV1beta2Entity.constructFromObject(data['entity']);
            }
            if (data.hasOwnProperty('frames')) {
                obj['frames'] = ApiClient.convertToType(data['frames'], [GoogleCloudVideointelligenceV1beta2LabelFrame]);
            }
            if (data.hasOwnProperty('segments')) {
                obj['segments'] = ApiClient.convertToType(data['segments'], [GoogleCloudVideointelligenceV1beta2LabelSegment]);
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudVideointelligenceV1beta2LabelAnnotation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudVideointelligenceV1beta2LabelAnnotation</code>.
     */
    static validateJSON(data) {
        if (data['categoryEntities']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['categoryEntities'])) {
                throw new Error("Expected the field `categoryEntities` to be an array in the JSON data but got " + data['categoryEntities']);
            }
            // validate the optional field `categoryEntities` (array)
            for (const item of data['categoryEntities']) {
                GoogleCloudVideointelligenceV1beta2Entity.validateJSON(item);
            };
        }
        // validate the optional field `entity`
        if (data['entity']) { // data not null
          GoogleCloudVideointelligenceV1beta2Entity.validateJSON(data['entity']);
        }
        if (data['frames']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['frames'])) {
                throw new Error("Expected the field `frames` to be an array in the JSON data but got " + data['frames']);
            }
            // validate the optional field `frames` (array)
            for (const item of data['frames']) {
                GoogleCloudVideointelligenceV1beta2LabelFrame.validateJSON(item);
            };
        }
        if (data['segments']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['segments'])) {
                throw new Error("Expected the field `segments` to be an array in the JSON data but got " + data['segments']);
            }
            // validate the optional field `segments` (array)
            for (const item of data['segments']) {
                GoogleCloudVideointelligenceV1beta2LabelSegment.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['version'] && !(typeof data['version'] === 'string' || data['version'] instanceof String)) {
            throw new Error("Expected the field `version` to be a primitive type in the JSON string but got " + data['version']);
        }

        return true;
    }


}



/**
 * Common categories for the detected entity. For example, when the label is `Terrier`, the category is likely `dog`. And in some cases there might be more than one categories e.g., `Terrier` could also be a `pet`.
 * @member {Array.<module:model/GoogleCloudVideointelligenceV1beta2Entity>} categoryEntities
 */
GoogleCloudVideointelligenceV1beta2LabelAnnotation.prototype['categoryEntities'] = undefined;

/**
 * @member {module:model/GoogleCloudVideointelligenceV1beta2Entity} entity
 */
GoogleCloudVideointelligenceV1beta2LabelAnnotation.prototype['entity'] = undefined;

/**
 * All video frames where a label was detected.
 * @member {Array.<module:model/GoogleCloudVideointelligenceV1beta2LabelFrame>} frames
 */
GoogleCloudVideointelligenceV1beta2LabelAnnotation.prototype['frames'] = undefined;

/**
 * All video segments where a label was detected.
 * @member {Array.<module:model/GoogleCloudVideointelligenceV1beta2LabelSegment>} segments
 */
GoogleCloudVideointelligenceV1beta2LabelAnnotation.prototype['segments'] = undefined;

/**
 * Feature version.
 * @member {String} version
 */
GoogleCloudVideointelligenceV1beta2LabelAnnotation.prototype['version'] = undefined;






export default GoogleCloudVideointelligenceV1beta2LabelAnnotation;

