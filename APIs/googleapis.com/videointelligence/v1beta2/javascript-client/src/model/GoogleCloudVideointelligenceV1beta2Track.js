/**
 * Cloud Video Intelligence API
 * Detects objects, explicit content, and scene changes in videos. It also specifies the region for annotation and transcribes speech to text. Supports both asynchronous API and streaming API.
 *
 * The version of the OpenAPI document: v1beta2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudVideointelligenceV1beta2DetectedAttribute from './GoogleCloudVideointelligenceV1beta2DetectedAttribute';
import GoogleCloudVideointelligenceV1beta2TimestampedObject from './GoogleCloudVideointelligenceV1beta2TimestampedObject';
import GoogleCloudVideointelligenceV1beta2VideoSegment from './GoogleCloudVideointelligenceV1beta2VideoSegment';

/**
 * The GoogleCloudVideointelligenceV1beta2Track model module.
 * @module model/GoogleCloudVideointelligenceV1beta2Track
 * @version v1beta2
 */
class GoogleCloudVideointelligenceV1beta2Track {
    /**
     * Constructs a new <code>GoogleCloudVideointelligenceV1beta2Track</code>.
     * A track of an object instance.
     * @alias module:model/GoogleCloudVideointelligenceV1beta2Track
     */
    constructor() { 
        
        GoogleCloudVideointelligenceV1beta2Track.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudVideointelligenceV1beta2Track</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudVideointelligenceV1beta2Track} obj Optional instance to populate.
     * @return {module:model/GoogleCloudVideointelligenceV1beta2Track} The populated <code>GoogleCloudVideointelligenceV1beta2Track</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudVideointelligenceV1beta2Track();

            if (data.hasOwnProperty('attributes')) {
                obj['attributes'] = ApiClient.convertToType(data['attributes'], [GoogleCloudVideointelligenceV1beta2DetectedAttribute]);
            }
            if (data.hasOwnProperty('confidence')) {
                obj['confidence'] = ApiClient.convertToType(data['confidence'], 'Number');
            }
            if (data.hasOwnProperty('segment')) {
                obj['segment'] = GoogleCloudVideointelligenceV1beta2VideoSegment.constructFromObject(data['segment']);
            }
            if (data.hasOwnProperty('timestampedObjects')) {
                obj['timestampedObjects'] = ApiClient.convertToType(data['timestampedObjects'], [GoogleCloudVideointelligenceV1beta2TimestampedObject]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudVideointelligenceV1beta2Track</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudVideointelligenceV1beta2Track</code>.
     */
    static validateJSON(data) {
        if (data['attributes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['attributes'])) {
                throw new Error("Expected the field `attributes` to be an array in the JSON data but got " + data['attributes']);
            }
            // validate the optional field `attributes` (array)
            for (const item of data['attributes']) {
                GoogleCloudVideointelligenceV1beta2DetectedAttribute.validateJSON(item);
            };
        }
        // validate the optional field `segment`
        if (data['segment']) { // data not null
          GoogleCloudVideointelligenceV1beta2VideoSegment.validateJSON(data['segment']);
        }
        if (data['timestampedObjects']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['timestampedObjects'])) {
                throw new Error("Expected the field `timestampedObjects` to be an array in the JSON data but got " + data['timestampedObjects']);
            }
            // validate the optional field `timestampedObjects` (array)
            for (const item of data['timestampedObjects']) {
                GoogleCloudVideointelligenceV1beta2TimestampedObject.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Optional. Attributes in the track level.
 * @member {Array.<module:model/GoogleCloudVideointelligenceV1beta2DetectedAttribute>} attributes
 */
GoogleCloudVideointelligenceV1beta2Track.prototype['attributes'] = undefined;

/**
 * Optional. The confidence score of the tracked object.
 * @member {Number} confidence
 */
GoogleCloudVideointelligenceV1beta2Track.prototype['confidence'] = undefined;

/**
 * @member {module:model/GoogleCloudVideointelligenceV1beta2VideoSegment} segment
 */
GoogleCloudVideointelligenceV1beta2Track.prototype['segment'] = undefined;

/**
 * The object with timestamp and attributes per frame in the track.
 * @member {Array.<module:model/GoogleCloudVideointelligenceV1beta2TimestampedObject>} timestampedObjects
 */
GoogleCloudVideointelligenceV1beta2Track.prototype['timestampedObjects'] = undefined;






export default GoogleCloudVideointelligenceV1beta2Track;

