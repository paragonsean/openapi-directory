# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_videointelligence_v1p3beta1_entity import GoogleCloudVideointelligenceV1p3beta1Entity
from openapi_server.models.google_cloud_videointelligence_v1p3beta1_label_frame import GoogleCloudVideointelligenceV1p3beta1LabelFrame
from openapi_server.models.google_cloud_videointelligence_v1p3beta1_label_segment import GoogleCloudVideointelligenceV1p3beta1LabelSegment
from openapi_server import util


class GoogleCloudVideointelligenceV1p3beta1LabelAnnotation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, category_entities: List[GoogleCloudVideointelligenceV1p3beta1Entity]=None, entity: GoogleCloudVideointelligenceV1p3beta1Entity=None, frames: List[GoogleCloudVideointelligenceV1p3beta1LabelFrame]=None, segments: List[GoogleCloudVideointelligenceV1p3beta1LabelSegment]=None, version: str=None):
        """GoogleCloudVideointelligenceV1p3beta1LabelAnnotation - a model defined in OpenAPI

        :param category_entities: The category_entities of this GoogleCloudVideointelligenceV1p3beta1LabelAnnotation.
        :param entity: The entity of this GoogleCloudVideointelligenceV1p3beta1LabelAnnotation.
        :param frames: The frames of this GoogleCloudVideointelligenceV1p3beta1LabelAnnotation.
        :param segments: The segments of this GoogleCloudVideointelligenceV1p3beta1LabelAnnotation.
        :param version: The version of this GoogleCloudVideointelligenceV1p3beta1LabelAnnotation.
        """
        self.openapi_types = {
            'category_entities': List[GoogleCloudVideointelligenceV1p3beta1Entity],
            'entity': GoogleCloudVideointelligenceV1p3beta1Entity,
            'frames': List[GoogleCloudVideointelligenceV1p3beta1LabelFrame],
            'segments': List[GoogleCloudVideointelligenceV1p3beta1LabelSegment],
            'version': str
        }

        self.attribute_map = {
            'category_entities': 'categoryEntities',
            'entity': 'entity',
            'frames': 'frames',
            'segments': 'segments',
            'version': 'version'
        }

        self._category_entities = category_entities
        self._entity = entity
        self._frames = frames
        self._segments = segments
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudVideointelligenceV1p3beta1LabelAnnotation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudVideointelligenceV1p3beta1_LabelAnnotation of this GoogleCloudVideointelligenceV1p3beta1LabelAnnotation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def category_entities(self):
        """Gets the category_entities of this GoogleCloudVideointelligenceV1p3beta1LabelAnnotation.

        Common categories for the detected entity. For example, when the label is `Terrier`, the category is likely `dog`. And in some cases there might be more than one categories e.g., `Terrier` could also be a `pet`.

        :return: The category_entities of this GoogleCloudVideointelligenceV1p3beta1LabelAnnotation.
        :rtype: List[GoogleCloudVideointelligenceV1p3beta1Entity]
        """
        return self._category_entities

    @category_entities.setter
    def category_entities(self, category_entities):
        """Sets the category_entities of this GoogleCloudVideointelligenceV1p3beta1LabelAnnotation.

        Common categories for the detected entity. For example, when the label is `Terrier`, the category is likely `dog`. And in some cases there might be more than one categories e.g., `Terrier` could also be a `pet`.

        :param category_entities: The category_entities of this GoogleCloudVideointelligenceV1p3beta1LabelAnnotation.
        :type category_entities: List[GoogleCloudVideointelligenceV1p3beta1Entity]
        """

        self._category_entities = category_entities

    @property
    def entity(self):
        """Gets the entity of this GoogleCloudVideointelligenceV1p3beta1LabelAnnotation.


        :return: The entity of this GoogleCloudVideointelligenceV1p3beta1LabelAnnotation.
        :rtype: GoogleCloudVideointelligenceV1p3beta1Entity
        """
        return self._entity

    @entity.setter
    def entity(self, entity):
        """Sets the entity of this GoogleCloudVideointelligenceV1p3beta1LabelAnnotation.


        :param entity: The entity of this GoogleCloudVideointelligenceV1p3beta1LabelAnnotation.
        :type entity: GoogleCloudVideointelligenceV1p3beta1Entity
        """

        self._entity = entity

    @property
    def frames(self):
        """Gets the frames of this GoogleCloudVideointelligenceV1p3beta1LabelAnnotation.

        All video frames where a label was detected.

        :return: The frames of this GoogleCloudVideointelligenceV1p3beta1LabelAnnotation.
        :rtype: List[GoogleCloudVideointelligenceV1p3beta1LabelFrame]
        """
        return self._frames

    @frames.setter
    def frames(self, frames):
        """Sets the frames of this GoogleCloudVideointelligenceV1p3beta1LabelAnnotation.

        All video frames where a label was detected.

        :param frames: The frames of this GoogleCloudVideointelligenceV1p3beta1LabelAnnotation.
        :type frames: List[GoogleCloudVideointelligenceV1p3beta1LabelFrame]
        """

        self._frames = frames

    @property
    def segments(self):
        """Gets the segments of this GoogleCloudVideointelligenceV1p3beta1LabelAnnotation.

        All video segments where a label was detected.

        :return: The segments of this GoogleCloudVideointelligenceV1p3beta1LabelAnnotation.
        :rtype: List[GoogleCloudVideointelligenceV1p3beta1LabelSegment]
        """
        return self._segments

    @segments.setter
    def segments(self, segments):
        """Sets the segments of this GoogleCloudVideointelligenceV1p3beta1LabelAnnotation.

        All video segments where a label was detected.

        :param segments: The segments of this GoogleCloudVideointelligenceV1p3beta1LabelAnnotation.
        :type segments: List[GoogleCloudVideointelligenceV1p3beta1LabelSegment]
        """

        self._segments = segments

    @property
    def version(self):
        """Gets the version of this GoogleCloudVideointelligenceV1p3beta1LabelAnnotation.

        Feature version.

        :return: The version of this GoogleCloudVideointelligenceV1p3beta1LabelAnnotation.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this GoogleCloudVideointelligenceV1p3beta1LabelAnnotation.

        Feature version.

        :param version: The version of this GoogleCloudVideointelligenceV1p3beta1LabelAnnotation.
        :type version: str
        """

        self._version = version
