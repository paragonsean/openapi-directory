# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_videointelligence_v1p2beta1_video_segment import GoogleCloudVideointelligenceV1p2beta1VideoSegment
from openapi_server import util


class GoogleCloudVideointelligenceV1p2beta1VideoAnnotationProgress(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, feature: str=None, input_uri: str=None, progress_percent: int=None, segment: GoogleCloudVideointelligenceV1p2beta1VideoSegment=None, start_time: str=None, update_time: str=None):
        """GoogleCloudVideointelligenceV1p2beta1VideoAnnotationProgress - a model defined in OpenAPI

        :param feature: The feature of this GoogleCloudVideointelligenceV1p2beta1VideoAnnotationProgress.
        :param input_uri: The input_uri of this GoogleCloudVideointelligenceV1p2beta1VideoAnnotationProgress.
        :param progress_percent: The progress_percent of this GoogleCloudVideointelligenceV1p2beta1VideoAnnotationProgress.
        :param segment: The segment of this GoogleCloudVideointelligenceV1p2beta1VideoAnnotationProgress.
        :param start_time: The start_time of this GoogleCloudVideointelligenceV1p2beta1VideoAnnotationProgress.
        :param update_time: The update_time of this GoogleCloudVideointelligenceV1p2beta1VideoAnnotationProgress.
        """
        self.openapi_types = {
            'feature': str,
            'input_uri': str,
            'progress_percent': int,
            'segment': GoogleCloudVideointelligenceV1p2beta1VideoSegment,
            'start_time': str,
            'update_time': str
        }

        self.attribute_map = {
            'feature': 'feature',
            'input_uri': 'inputUri',
            'progress_percent': 'progressPercent',
            'segment': 'segment',
            'start_time': 'startTime',
            'update_time': 'updateTime'
        }

        self._feature = feature
        self._input_uri = input_uri
        self._progress_percent = progress_percent
        self._segment = segment
        self._start_time = start_time
        self._update_time = update_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudVideointelligenceV1p2beta1VideoAnnotationProgress':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudVideointelligenceV1p2beta1_VideoAnnotationProgress of this GoogleCloudVideointelligenceV1p2beta1VideoAnnotationProgress.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def feature(self):
        """Gets the feature of this GoogleCloudVideointelligenceV1p2beta1VideoAnnotationProgress.

        Specifies which feature is being tracked if the request contains more than one feature.

        :return: The feature of this GoogleCloudVideointelligenceV1p2beta1VideoAnnotationProgress.
        :rtype: str
        """
        return self._feature

    @feature.setter
    def feature(self, feature):
        """Sets the feature of this GoogleCloudVideointelligenceV1p2beta1VideoAnnotationProgress.

        Specifies which feature is being tracked if the request contains more than one feature.

        :param feature: The feature of this GoogleCloudVideointelligenceV1p2beta1VideoAnnotationProgress.
        :type feature: str
        """
        allowed_values = ["FEATURE_UNSPECIFIED", "LABEL_DETECTION", "SHOT_CHANGE_DETECTION", "EXPLICIT_CONTENT_DETECTION", "FACE_DETECTION", "SPEECH_TRANSCRIPTION", "TEXT_DETECTION", "OBJECT_TRACKING", "LOGO_RECOGNITION", "PERSON_DETECTION"]  # noqa: E501
        if feature not in allowed_values:
            raise ValueError(
                "Invalid value for `feature` ({0}), must be one of {1}"
                .format(feature, allowed_values)
            )

        self._feature = feature

    @property
    def input_uri(self):
        """Gets the input_uri of this GoogleCloudVideointelligenceV1p2beta1VideoAnnotationProgress.

        Video file location in [Cloud Storage](https://cloud.google.com/storage/).

        :return: The input_uri of this GoogleCloudVideointelligenceV1p2beta1VideoAnnotationProgress.
        :rtype: str
        """
        return self._input_uri

    @input_uri.setter
    def input_uri(self, input_uri):
        """Sets the input_uri of this GoogleCloudVideointelligenceV1p2beta1VideoAnnotationProgress.

        Video file location in [Cloud Storage](https://cloud.google.com/storage/).

        :param input_uri: The input_uri of this GoogleCloudVideointelligenceV1p2beta1VideoAnnotationProgress.
        :type input_uri: str
        """

        self._input_uri = input_uri

    @property
    def progress_percent(self):
        """Gets the progress_percent of this GoogleCloudVideointelligenceV1p2beta1VideoAnnotationProgress.

        Approximate percentage processed thus far. Guaranteed to be 100 when fully processed.

        :return: The progress_percent of this GoogleCloudVideointelligenceV1p2beta1VideoAnnotationProgress.
        :rtype: int
        """
        return self._progress_percent

    @progress_percent.setter
    def progress_percent(self, progress_percent):
        """Sets the progress_percent of this GoogleCloudVideointelligenceV1p2beta1VideoAnnotationProgress.

        Approximate percentage processed thus far. Guaranteed to be 100 when fully processed.

        :param progress_percent: The progress_percent of this GoogleCloudVideointelligenceV1p2beta1VideoAnnotationProgress.
        :type progress_percent: int
        """

        self._progress_percent = progress_percent

    @property
    def segment(self):
        """Gets the segment of this GoogleCloudVideointelligenceV1p2beta1VideoAnnotationProgress.


        :return: The segment of this GoogleCloudVideointelligenceV1p2beta1VideoAnnotationProgress.
        :rtype: GoogleCloudVideointelligenceV1p2beta1VideoSegment
        """
        return self._segment

    @segment.setter
    def segment(self, segment):
        """Sets the segment of this GoogleCloudVideointelligenceV1p2beta1VideoAnnotationProgress.


        :param segment: The segment of this GoogleCloudVideointelligenceV1p2beta1VideoAnnotationProgress.
        :type segment: GoogleCloudVideointelligenceV1p2beta1VideoSegment
        """

        self._segment = segment

    @property
    def start_time(self):
        """Gets the start_time of this GoogleCloudVideointelligenceV1p2beta1VideoAnnotationProgress.

        Time when the request was received.

        :return: The start_time of this GoogleCloudVideointelligenceV1p2beta1VideoAnnotationProgress.
        :rtype: str
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this GoogleCloudVideointelligenceV1p2beta1VideoAnnotationProgress.

        Time when the request was received.

        :param start_time: The start_time of this GoogleCloudVideointelligenceV1p2beta1VideoAnnotationProgress.
        :type start_time: str
        """

        self._start_time = start_time

    @property
    def update_time(self):
        """Gets the update_time of this GoogleCloudVideointelligenceV1p2beta1VideoAnnotationProgress.

        Time of the most recent update.

        :return: The update_time of this GoogleCloudVideointelligenceV1p2beta1VideoAnnotationProgress.
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this GoogleCloudVideointelligenceV1p2beta1VideoAnnotationProgress.

        Time of the most recent update.

        :param update_time: The update_time of this GoogleCloudVideointelligenceV1p2beta1VideoAnnotationProgress.
        :type update_time: str
        """

        self._update_time = update_time
