/**
 * Cloud Video Intelligence API
 * Detects objects, explicit content, and scene changes in videos. It also specifies the region for annotation and transcribes speech to text. Supports both asynchronous API and streaming API.
 *
 * The version of the OpenAPI document: v1p1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults() {
    this->initializeModel();
}

OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::~OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults() {}

void OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::initializeModel() {

    m_error_isSet = false;
    m_error_isValid = false;

    m_explicit_annotation_isSet = false;
    m_explicit_annotation_isValid = false;

    m_face_annotations_isSet = false;
    m_face_annotations_isValid = false;

    m_face_detection_annotations_isSet = false;
    m_face_detection_annotations_isValid = false;

    m_frame_label_annotations_isSet = false;
    m_frame_label_annotations_isValid = false;

    m_input_uri_isSet = false;
    m_input_uri_isValid = false;

    m_logo_recognition_annotations_isSet = false;
    m_logo_recognition_annotations_isValid = false;

    m_object_annotations_isSet = false;
    m_object_annotations_isValid = false;

    m_person_detection_annotations_isSet = false;
    m_person_detection_annotations_isValid = false;

    m_segment_isSet = false;
    m_segment_isValid = false;

    m_segment_label_annotations_isSet = false;
    m_segment_label_annotations_isValid = false;

    m_segment_presence_label_annotations_isSet = false;
    m_segment_presence_label_annotations_isValid = false;

    m_shot_annotations_isSet = false;
    m_shot_annotations_isValid = false;

    m_shot_label_annotations_isSet = false;
    m_shot_label_annotations_isValid = false;

    m_shot_presence_label_annotations_isSet = false;
    m_shot_presence_label_annotations_isValid = false;

    m_speech_transcriptions_isSet = false;
    m_speech_transcriptions_isValid = false;

    m_text_annotations_isSet = false;
    m_text_annotations_isValid = false;
}

void OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::fromJsonObject(QJsonObject json) {

    m_error_isValid = ::OpenAPI::fromJsonValue(m_error, json[QString("error")]);
    m_error_isSet = !json[QString("error")].isNull() && m_error_isValid;

    m_explicit_annotation_isValid = ::OpenAPI::fromJsonValue(m_explicit_annotation, json[QString("explicitAnnotation")]);
    m_explicit_annotation_isSet = !json[QString("explicitAnnotation")].isNull() && m_explicit_annotation_isValid;

    m_face_annotations_isValid = ::OpenAPI::fromJsonValue(m_face_annotations, json[QString("faceAnnotations")]);
    m_face_annotations_isSet = !json[QString("faceAnnotations")].isNull() && m_face_annotations_isValid;

    m_face_detection_annotations_isValid = ::OpenAPI::fromJsonValue(m_face_detection_annotations, json[QString("faceDetectionAnnotations")]);
    m_face_detection_annotations_isSet = !json[QString("faceDetectionAnnotations")].isNull() && m_face_detection_annotations_isValid;

    m_frame_label_annotations_isValid = ::OpenAPI::fromJsonValue(m_frame_label_annotations, json[QString("frameLabelAnnotations")]);
    m_frame_label_annotations_isSet = !json[QString("frameLabelAnnotations")].isNull() && m_frame_label_annotations_isValid;

    m_input_uri_isValid = ::OpenAPI::fromJsonValue(m_input_uri, json[QString("inputUri")]);
    m_input_uri_isSet = !json[QString("inputUri")].isNull() && m_input_uri_isValid;

    m_logo_recognition_annotations_isValid = ::OpenAPI::fromJsonValue(m_logo_recognition_annotations, json[QString("logoRecognitionAnnotations")]);
    m_logo_recognition_annotations_isSet = !json[QString("logoRecognitionAnnotations")].isNull() && m_logo_recognition_annotations_isValid;

    m_object_annotations_isValid = ::OpenAPI::fromJsonValue(m_object_annotations, json[QString("objectAnnotations")]);
    m_object_annotations_isSet = !json[QString("objectAnnotations")].isNull() && m_object_annotations_isValid;

    m_person_detection_annotations_isValid = ::OpenAPI::fromJsonValue(m_person_detection_annotations, json[QString("personDetectionAnnotations")]);
    m_person_detection_annotations_isSet = !json[QString("personDetectionAnnotations")].isNull() && m_person_detection_annotations_isValid;

    m_segment_isValid = ::OpenAPI::fromJsonValue(m_segment, json[QString("segment")]);
    m_segment_isSet = !json[QString("segment")].isNull() && m_segment_isValid;

    m_segment_label_annotations_isValid = ::OpenAPI::fromJsonValue(m_segment_label_annotations, json[QString("segmentLabelAnnotations")]);
    m_segment_label_annotations_isSet = !json[QString("segmentLabelAnnotations")].isNull() && m_segment_label_annotations_isValid;

    m_segment_presence_label_annotations_isValid = ::OpenAPI::fromJsonValue(m_segment_presence_label_annotations, json[QString("segmentPresenceLabelAnnotations")]);
    m_segment_presence_label_annotations_isSet = !json[QString("segmentPresenceLabelAnnotations")].isNull() && m_segment_presence_label_annotations_isValid;

    m_shot_annotations_isValid = ::OpenAPI::fromJsonValue(m_shot_annotations, json[QString("shotAnnotations")]);
    m_shot_annotations_isSet = !json[QString("shotAnnotations")].isNull() && m_shot_annotations_isValid;

    m_shot_label_annotations_isValid = ::OpenAPI::fromJsonValue(m_shot_label_annotations, json[QString("shotLabelAnnotations")]);
    m_shot_label_annotations_isSet = !json[QString("shotLabelAnnotations")].isNull() && m_shot_label_annotations_isValid;

    m_shot_presence_label_annotations_isValid = ::OpenAPI::fromJsonValue(m_shot_presence_label_annotations, json[QString("shotPresenceLabelAnnotations")]);
    m_shot_presence_label_annotations_isSet = !json[QString("shotPresenceLabelAnnotations")].isNull() && m_shot_presence_label_annotations_isValid;

    m_speech_transcriptions_isValid = ::OpenAPI::fromJsonValue(m_speech_transcriptions, json[QString("speechTranscriptions")]);
    m_speech_transcriptions_isSet = !json[QString("speechTranscriptions")].isNull() && m_speech_transcriptions_isValid;

    m_text_annotations_isValid = ::OpenAPI::fromJsonValue(m_text_annotations, json[QString("textAnnotations")]);
    m_text_annotations_isSet = !json[QString("textAnnotations")].isNull() && m_text_annotations_isValid;
}

QString OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::asJsonObject() const {
    QJsonObject obj;
    if (m_error.isSet()) {
        obj.insert(QString("error"), ::OpenAPI::toJsonValue(m_error));
    }
    if (m_explicit_annotation.isSet()) {
        obj.insert(QString("explicitAnnotation"), ::OpenAPI::toJsonValue(m_explicit_annotation));
    }
    if (m_face_annotations.size() > 0) {
        obj.insert(QString("faceAnnotations"), ::OpenAPI::toJsonValue(m_face_annotations));
    }
    if (m_face_detection_annotations.size() > 0) {
        obj.insert(QString("faceDetectionAnnotations"), ::OpenAPI::toJsonValue(m_face_detection_annotations));
    }
    if (m_frame_label_annotations.size() > 0) {
        obj.insert(QString("frameLabelAnnotations"), ::OpenAPI::toJsonValue(m_frame_label_annotations));
    }
    if (m_input_uri_isSet) {
        obj.insert(QString("inputUri"), ::OpenAPI::toJsonValue(m_input_uri));
    }
    if (m_logo_recognition_annotations.size() > 0) {
        obj.insert(QString("logoRecognitionAnnotations"), ::OpenAPI::toJsonValue(m_logo_recognition_annotations));
    }
    if (m_object_annotations.size() > 0) {
        obj.insert(QString("objectAnnotations"), ::OpenAPI::toJsonValue(m_object_annotations));
    }
    if (m_person_detection_annotations.size() > 0) {
        obj.insert(QString("personDetectionAnnotations"), ::OpenAPI::toJsonValue(m_person_detection_annotations));
    }
    if (m_segment.isSet()) {
        obj.insert(QString("segment"), ::OpenAPI::toJsonValue(m_segment));
    }
    if (m_segment_label_annotations.size() > 0) {
        obj.insert(QString("segmentLabelAnnotations"), ::OpenAPI::toJsonValue(m_segment_label_annotations));
    }
    if (m_segment_presence_label_annotations.size() > 0) {
        obj.insert(QString("segmentPresenceLabelAnnotations"), ::OpenAPI::toJsonValue(m_segment_presence_label_annotations));
    }
    if (m_shot_annotations.size() > 0) {
        obj.insert(QString("shotAnnotations"), ::OpenAPI::toJsonValue(m_shot_annotations));
    }
    if (m_shot_label_annotations.size() > 0) {
        obj.insert(QString("shotLabelAnnotations"), ::OpenAPI::toJsonValue(m_shot_label_annotations));
    }
    if (m_shot_presence_label_annotations.size() > 0) {
        obj.insert(QString("shotPresenceLabelAnnotations"), ::OpenAPI::toJsonValue(m_shot_presence_label_annotations));
    }
    if (m_speech_transcriptions.size() > 0) {
        obj.insert(QString("speechTranscriptions"), ::OpenAPI::toJsonValue(m_speech_transcriptions));
    }
    if (m_text_annotations.size() > 0) {
        obj.insert(QString("textAnnotations"), ::OpenAPI::toJsonValue(m_text_annotations));
    }
    return obj;
}

OAIGoogleRpc_Status OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::getError() const {
    return m_error;
}
void OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::setError(const OAIGoogleRpc_Status &error) {
    m_error = error;
    m_error_isSet = true;
}

bool OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::is_error_Set() const{
    return m_error_isSet;
}

bool OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::is_error_Valid() const{
    return m_error_isValid;
}

OAIGoogleCloudVideointelligenceV1p2beta1_ExplicitContentAnnotation OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::getExplicitAnnotation() const {
    return m_explicit_annotation;
}
void OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::setExplicitAnnotation(const OAIGoogleCloudVideointelligenceV1p2beta1_ExplicitContentAnnotation &explicit_annotation) {
    m_explicit_annotation = explicit_annotation;
    m_explicit_annotation_isSet = true;
}

bool OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::is_explicit_annotation_Set() const{
    return m_explicit_annotation_isSet;
}

bool OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::is_explicit_annotation_Valid() const{
    return m_explicit_annotation_isValid;
}

QList<OAIGoogleCloudVideointelligenceV1p2beta1_FaceAnnotation> OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::getFaceAnnotations() const {
    return m_face_annotations;
}
void OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::setFaceAnnotations(const QList<OAIGoogleCloudVideointelligenceV1p2beta1_FaceAnnotation> &face_annotations) {
    m_face_annotations = face_annotations;
    m_face_annotations_isSet = true;
}

bool OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::is_face_annotations_Set() const{
    return m_face_annotations_isSet;
}

bool OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::is_face_annotations_Valid() const{
    return m_face_annotations_isValid;
}

QList<OAIGoogleCloudVideointelligenceV1p2beta1_FaceDetectionAnnotation> OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::getFaceDetectionAnnotations() const {
    return m_face_detection_annotations;
}
void OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::setFaceDetectionAnnotations(const QList<OAIGoogleCloudVideointelligenceV1p2beta1_FaceDetectionAnnotation> &face_detection_annotations) {
    m_face_detection_annotations = face_detection_annotations;
    m_face_detection_annotations_isSet = true;
}

bool OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::is_face_detection_annotations_Set() const{
    return m_face_detection_annotations_isSet;
}

bool OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::is_face_detection_annotations_Valid() const{
    return m_face_detection_annotations_isValid;
}

QList<OAIGoogleCloudVideointelligenceV1p2beta1_LabelAnnotation> OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::getFrameLabelAnnotations() const {
    return m_frame_label_annotations;
}
void OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::setFrameLabelAnnotations(const QList<OAIGoogleCloudVideointelligenceV1p2beta1_LabelAnnotation> &frame_label_annotations) {
    m_frame_label_annotations = frame_label_annotations;
    m_frame_label_annotations_isSet = true;
}

bool OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::is_frame_label_annotations_Set() const{
    return m_frame_label_annotations_isSet;
}

bool OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::is_frame_label_annotations_Valid() const{
    return m_frame_label_annotations_isValid;
}

QString OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::getInputUri() const {
    return m_input_uri;
}
void OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::setInputUri(const QString &input_uri) {
    m_input_uri = input_uri;
    m_input_uri_isSet = true;
}

bool OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::is_input_uri_Set() const{
    return m_input_uri_isSet;
}

bool OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::is_input_uri_Valid() const{
    return m_input_uri_isValid;
}

QList<OAIGoogleCloudVideointelligenceV1p2beta1_LogoRecognitionAnnotation> OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::getLogoRecognitionAnnotations() const {
    return m_logo_recognition_annotations;
}
void OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::setLogoRecognitionAnnotations(const QList<OAIGoogleCloudVideointelligenceV1p2beta1_LogoRecognitionAnnotation> &logo_recognition_annotations) {
    m_logo_recognition_annotations = logo_recognition_annotations;
    m_logo_recognition_annotations_isSet = true;
}

bool OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::is_logo_recognition_annotations_Set() const{
    return m_logo_recognition_annotations_isSet;
}

bool OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::is_logo_recognition_annotations_Valid() const{
    return m_logo_recognition_annotations_isValid;
}

QList<OAIGoogleCloudVideointelligenceV1p2beta1_ObjectTrackingAnnotation> OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::getObjectAnnotations() const {
    return m_object_annotations;
}
void OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::setObjectAnnotations(const QList<OAIGoogleCloudVideointelligenceV1p2beta1_ObjectTrackingAnnotation> &object_annotations) {
    m_object_annotations = object_annotations;
    m_object_annotations_isSet = true;
}

bool OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::is_object_annotations_Set() const{
    return m_object_annotations_isSet;
}

bool OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::is_object_annotations_Valid() const{
    return m_object_annotations_isValid;
}

QList<OAIGoogleCloudVideointelligenceV1p2beta1_PersonDetectionAnnotation> OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::getPersonDetectionAnnotations() const {
    return m_person_detection_annotations;
}
void OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::setPersonDetectionAnnotations(const QList<OAIGoogleCloudVideointelligenceV1p2beta1_PersonDetectionAnnotation> &person_detection_annotations) {
    m_person_detection_annotations = person_detection_annotations;
    m_person_detection_annotations_isSet = true;
}

bool OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::is_person_detection_annotations_Set() const{
    return m_person_detection_annotations_isSet;
}

bool OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::is_person_detection_annotations_Valid() const{
    return m_person_detection_annotations_isValid;
}

OAIGoogleCloudVideointelligenceV1p2beta1_VideoSegment OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::getSegment() const {
    return m_segment;
}
void OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::setSegment(const OAIGoogleCloudVideointelligenceV1p2beta1_VideoSegment &segment) {
    m_segment = segment;
    m_segment_isSet = true;
}

bool OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::is_segment_Set() const{
    return m_segment_isSet;
}

bool OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::is_segment_Valid() const{
    return m_segment_isValid;
}

QList<OAIGoogleCloudVideointelligenceV1p2beta1_LabelAnnotation> OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::getSegmentLabelAnnotations() const {
    return m_segment_label_annotations;
}
void OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::setSegmentLabelAnnotations(const QList<OAIGoogleCloudVideointelligenceV1p2beta1_LabelAnnotation> &segment_label_annotations) {
    m_segment_label_annotations = segment_label_annotations;
    m_segment_label_annotations_isSet = true;
}

bool OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::is_segment_label_annotations_Set() const{
    return m_segment_label_annotations_isSet;
}

bool OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::is_segment_label_annotations_Valid() const{
    return m_segment_label_annotations_isValid;
}

QList<OAIGoogleCloudVideointelligenceV1p2beta1_LabelAnnotation> OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::getSegmentPresenceLabelAnnotations() const {
    return m_segment_presence_label_annotations;
}
void OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::setSegmentPresenceLabelAnnotations(const QList<OAIGoogleCloudVideointelligenceV1p2beta1_LabelAnnotation> &segment_presence_label_annotations) {
    m_segment_presence_label_annotations = segment_presence_label_annotations;
    m_segment_presence_label_annotations_isSet = true;
}

bool OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::is_segment_presence_label_annotations_Set() const{
    return m_segment_presence_label_annotations_isSet;
}

bool OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::is_segment_presence_label_annotations_Valid() const{
    return m_segment_presence_label_annotations_isValid;
}

QList<OAIGoogleCloudVideointelligenceV1p2beta1_VideoSegment> OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::getShotAnnotations() const {
    return m_shot_annotations;
}
void OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::setShotAnnotations(const QList<OAIGoogleCloudVideointelligenceV1p2beta1_VideoSegment> &shot_annotations) {
    m_shot_annotations = shot_annotations;
    m_shot_annotations_isSet = true;
}

bool OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::is_shot_annotations_Set() const{
    return m_shot_annotations_isSet;
}

bool OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::is_shot_annotations_Valid() const{
    return m_shot_annotations_isValid;
}

QList<OAIGoogleCloudVideointelligenceV1p2beta1_LabelAnnotation> OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::getShotLabelAnnotations() const {
    return m_shot_label_annotations;
}
void OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::setShotLabelAnnotations(const QList<OAIGoogleCloudVideointelligenceV1p2beta1_LabelAnnotation> &shot_label_annotations) {
    m_shot_label_annotations = shot_label_annotations;
    m_shot_label_annotations_isSet = true;
}

bool OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::is_shot_label_annotations_Set() const{
    return m_shot_label_annotations_isSet;
}

bool OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::is_shot_label_annotations_Valid() const{
    return m_shot_label_annotations_isValid;
}

QList<OAIGoogleCloudVideointelligenceV1p2beta1_LabelAnnotation> OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::getShotPresenceLabelAnnotations() const {
    return m_shot_presence_label_annotations;
}
void OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::setShotPresenceLabelAnnotations(const QList<OAIGoogleCloudVideointelligenceV1p2beta1_LabelAnnotation> &shot_presence_label_annotations) {
    m_shot_presence_label_annotations = shot_presence_label_annotations;
    m_shot_presence_label_annotations_isSet = true;
}

bool OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::is_shot_presence_label_annotations_Set() const{
    return m_shot_presence_label_annotations_isSet;
}

bool OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::is_shot_presence_label_annotations_Valid() const{
    return m_shot_presence_label_annotations_isValid;
}

QList<OAIGoogleCloudVideointelligenceV1p2beta1_SpeechTranscription> OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::getSpeechTranscriptions() const {
    return m_speech_transcriptions;
}
void OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::setSpeechTranscriptions(const QList<OAIGoogleCloudVideointelligenceV1p2beta1_SpeechTranscription> &speech_transcriptions) {
    m_speech_transcriptions = speech_transcriptions;
    m_speech_transcriptions_isSet = true;
}

bool OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::is_speech_transcriptions_Set() const{
    return m_speech_transcriptions_isSet;
}

bool OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::is_speech_transcriptions_Valid() const{
    return m_speech_transcriptions_isValid;
}

QList<OAIGoogleCloudVideointelligenceV1p2beta1_TextAnnotation> OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::getTextAnnotations() const {
    return m_text_annotations;
}
void OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::setTextAnnotations(const QList<OAIGoogleCloudVideointelligenceV1p2beta1_TextAnnotation> &text_annotations) {
    m_text_annotations = text_annotations;
    m_text_annotations_isSet = true;
}

bool OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::is_text_annotations_Set() const{
    return m_text_annotations_isSet;
}

bool OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::is_text_annotations_Valid() const{
    return m_text_annotations_isValid;
}

bool OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_error.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_explicit_annotation.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_face_annotations.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_face_detection_annotations.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_frame_label_annotations.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_input_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_logo_recognition_annotations.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_object_annotations.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_person_detection_annotations.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_segment.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_segment_label_annotations.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_segment_presence_label_annotations.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_shot_annotations.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_shot_label_annotations.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_shot_presence_label_annotations.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_speech_transcriptions.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_text_annotations.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
