/**
 * Cloud Video Intelligence API
 * Detects objects, explicit content, and scene changes in videos. It also specifies the region for annotation and transcribes speech to text. Supports both asynchronous API and streaming API.
 *
 * The version of the OpenAPI document: v1p1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudVideointelligenceV1p3beta1_StreamingAnnotateVideoResponse.h
 *
 * &#x60;StreamingAnnotateVideoResponse&#x60; is the only message returned to the client by &#x60;StreamingAnnotateVideo&#x60;. A series of zero or more &#x60;StreamingAnnotateVideoResponse&#x60; messages are streamed back to the client.
 */

#ifndef OAIGoogleCloudVideointelligenceV1p3beta1_StreamingAnnotateVideoResponse_H
#define OAIGoogleCloudVideointelligenceV1p3beta1_StreamingAnnotateVideoResponse_H

#include <QJsonObject>

#include "OAIGoogleCloudVideointelligenceV1p3beta1_StreamingVideoAnnotationResults.h"
#include "OAIGoogleRpc_Status.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleCloudVideointelligenceV1p3beta1_StreamingVideoAnnotationResults;
class OAIGoogleRpc_Status;

class OAIGoogleCloudVideointelligenceV1p3beta1_StreamingAnnotateVideoResponse : public OAIObject {
public:
    OAIGoogleCloudVideointelligenceV1p3beta1_StreamingAnnotateVideoResponse();
    OAIGoogleCloudVideointelligenceV1p3beta1_StreamingAnnotateVideoResponse(QString json);
    ~OAIGoogleCloudVideointelligenceV1p3beta1_StreamingAnnotateVideoResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGoogleCloudVideointelligenceV1p3beta1_StreamingVideoAnnotationResults getAnnotationResults() const;
    void setAnnotationResults(const OAIGoogleCloudVideointelligenceV1p3beta1_StreamingVideoAnnotationResults &annotation_results);
    bool is_annotation_results_Set() const;
    bool is_annotation_results_Valid() const;

    QString getAnnotationResultsUri() const;
    void setAnnotationResultsUri(const QString &annotation_results_uri);
    bool is_annotation_results_uri_Set() const;
    bool is_annotation_results_uri_Valid() const;

    OAIGoogleRpc_Status getError() const;
    void setError(const OAIGoogleRpc_Status &error);
    bool is_error_Set() const;
    bool is_error_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGoogleCloudVideointelligenceV1p3beta1_StreamingVideoAnnotationResults m_annotation_results;
    bool m_annotation_results_isSet;
    bool m_annotation_results_isValid;

    QString m_annotation_results_uri;
    bool m_annotation_results_uri_isSet;
    bool m_annotation_results_uri_isValid;

    OAIGoogleRpc_Status m_error;
    bool m_error_isSet;
    bool m_error_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudVideointelligenceV1p3beta1_StreamingAnnotateVideoResponse)

#endif // OAIGoogleCloudVideointelligenceV1p3beta1_StreamingAnnotateVideoResponse_H
