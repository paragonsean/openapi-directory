/**
 * Cloud Video Intelligence API
 * Detects objects, explicit content, and scene changes in videos. It also specifies the region for annotation and transcribes speech to text. Supports both asynchronous API and streaming API.
 *
 * The version of the OpenAPI document: v1p1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudVideointelligenceV1p1beta1_LabelDetectionConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudVideointelligenceV1p1beta1_LabelDetectionConfig::OAIGoogleCloudVideointelligenceV1p1beta1_LabelDetectionConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudVideointelligenceV1p1beta1_LabelDetectionConfig::OAIGoogleCloudVideointelligenceV1p1beta1_LabelDetectionConfig() {
    this->initializeModel();
}

OAIGoogleCloudVideointelligenceV1p1beta1_LabelDetectionConfig::~OAIGoogleCloudVideointelligenceV1p1beta1_LabelDetectionConfig() {}

void OAIGoogleCloudVideointelligenceV1p1beta1_LabelDetectionConfig::initializeModel() {

    m_frame_confidence_threshold_isSet = false;
    m_frame_confidence_threshold_isValid = false;

    m_label_detection_mode_isSet = false;
    m_label_detection_mode_isValid = false;

    m_model_isSet = false;
    m_model_isValid = false;

    m_stationary_camera_isSet = false;
    m_stationary_camera_isValid = false;

    m_video_confidence_threshold_isSet = false;
    m_video_confidence_threshold_isValid = false;
}

void OAIGoogleCloudVideointelligenceV1p1beta1_LabelDetectionConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudVideointelligenceV1p1beta1_LabelDetectionConfig::fromJsonObject(QJsonObject json) {

    m_frame_confidence_threshold_isValid = ::OpenAPI::fromJsonValue(m_frame_confidence_threshold, json[QString("frameConfidenceThreshold")]);
    m_frame_confidence_threshold_isSet = !json[QString("frameConfidenceThreshold")].isNull() && m_frame_confidence_threshold_isValid;

    m_label_detection_mode_isValid = ::OpenAPI::fromJsonValue(m_label_detection_mode, json[QString("labelDetectionMode")]);
    m_label_detection_mode_isSet = !json[QString("labelDetectionMode")].isNull() && m_label_detection_mode_isValid;

    m_model_isValid = ::OpenAPI::fromJsonValue(m_model, json[QString("model")]);
    m_model_isSet = !json[QString("model")].isNull() && m_model_isValid;

    m_stationary_camera_isValid = ::OpenAPI::fromJsonValue(m_stationary_camera, json[QString("stationaryCamera")]);
    m_stationary_camera_isSet = !json[QString("stationaryCamera")].isNull() && m_stationary_camera_isValid;

    m_video_confidence_threshold_isValid = ::OpenAPI::fromJsonValue(m_video_confidence_threshold, json[QString("videoConfidenceThreshold")]);
    m_video_confidence_threshold_isSet = !json[QString("videoConfidenceThreshold")].isNull() && m_video_confidence_threshold_isValid;
}

QString OAIGoogleCloudVideointelligenceV1p1beta1_LabelDetectionConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudVideointelligenceV1p1beta1_LabelDetectionConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_frame_confidence_threshold_isSet) {
        obj.insert(QString("frameConfidenceThreshold"), ::OpenAPI::toJsonValue(m_frame_confidence_threshold));
    }
    if (m_label_detection_mode_isSet) {
        obj.insert(QString("labelDetectionMode"), ::OpenAPI::toJsonValue(m_label_detection_mode));
    }
    if (m_model_isSet) {
        obj.insert(QString("model"), ::OpenAPI::toJsonValue(m_model));
    }
    if (m_stationary_camera_isSet) {
        obj.insert(QString("stationaryCamera"), ::OpenAPI::toJsonValue(m_stationary_camera));
    }
    if (m_video_confidence_threshold_isSet) {
        obj.insert(QString("videoConfidenceThreshold"), ::OpenAPI::toJsonValue(m_video_confidence_threshold));
    }
    return obj;
}

float OAIGoogleCloudVideointelligenceV1p1beta1_LabelDetectionConfig::getFrameConfidenceThreshold() const {
    return m_frame_confidence_threshold;
}
void OAIGoogleCloudVideointelligenceV1p1beta1_LabelDetectionConfig::setFrameConfidenceThreshold(const float &frame_confidence_threshold) {
    m_frame_confidence_threshold = frame_confidence_threshold;
    m_frame_confidence_threshold_isSet = true;
}

bool OAIGoogleCloudVideointelligenceV1p1beta1_LabelDetectionConfig::is_frame_confidence_threshold_Set() const{
    return m_frame_confidence_threshold_isSet;
}

bool OAIGoogleCloudVideointelligenceV1p1beta1_LabelDetectionConfig::is_frame_confidence_threshold_Valid() const{
    return m_frame_confidence_threshold_isValid;
}

QString OAIGoogleCloudVideointelligenceV1p1beta1_LabelDetectionConfig::getLabelDetectionMode() const {
    return m_label_detection_mode;
}
void OAIGoogleCloudVideointelligenceV1p1beta1_LabelDetectionConfig::setLabelDetectionMode(const QString &label_detection_mode) {
    m_label_detection_mode = label_detection_mode;
    m_label_detection_mode_isSet = true;
}

bool OAIGoogleCloudVideointelligenceV1p1beta1_LabelDetectionConfig::is_label_detection_mode_Set() const{
    return m_label_detection_mode_isSet;
}

bool OAIGoogleCloudVideointelligenceV1p1beta1_LabelDetectionConfig::is_label_detection_mode_Valid() const{
    return m_label_detection_mode_isValid;
}

QString OAIGoogleCloudVideointelligenceV1p1beta1_LabelDetectionConfig::getModel() const {
    return m_model;
}
void OAIGoogleCloudVideointelligenceV1p1beta1_LabelDetectionConfig::setModel(const QString &model) {
    m_model = model;
    m_model_isSet = true;
}

bool OAIGoogleCloudVideointelligenceV1p1beta1_LabelDetectionConfig::is_model_Set() const{
    return m_model_isSet;
}

bool OAIGoogleCloudVideointelligenceV1p1beta1_LabelDetectionConfig::is_model_Valid() const{
    return m_model_isValid;
}

bool OAIGoogleCloudVideointelligenceV1p1beta1_LabelDetectionConfig::isStationaryCamera() const {
    return m_stationary_camera;
}
void OAIGoogleCloudVideointelligenceV1p1beta1_LabelDetectionConfig::setStationaryCamera(const bool &stationary_camera) {
    m_stationary_camera = stationary_camera;
    m_stationary_camera_isSet = true;
}

bool OAIGoogleCloudVideointelligenceV1p1beta1_LabelDetectionConfig::is_stationary_camera_Set() const{
    return m_stationary_camera_isSet;
}

bool OAIGoogleCloudVideointelligenceV1p1beta1_LabelDetectionConfig::is_stationary_camera_Valid() const{
    return m_stationary_camera_isValid;
}

float OAIGoogleCloudVideointelligenceV1p1beta1_LabelDetectionConfig::getVideoConfidenceThreshold() const {
    return m_video_confidence_threshold;
}
void OAIGoogleCloudVideointelligenceV1p1beta1_LabelDetectionConfig::setVideoConfidenceThreshold(const float &video_confidence_threshold) {
    m_video_confidence_threshold = video_confidence_threshold;
    m_video_confidence_threshold_isSet = true;
}

bool OAIGoogleCloudVideointelligenceV1p1beta1_LabelDetectionConfig::is_video_confidence_threshold_Set() const{
    return m_video_confidence_threshold_isSet;
}

bool OAIGoogleCloudVideointelligenceV1p1beta1_LabelDetectionConfig::is_video_confidence_threshold_Valid() const{
    return m_video_confidence_threshold_isValid;
}

bool OAIGoogleCloudVideointelligenceV1p1beta1_LabelDetectionConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_frame_confidence_threshold_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_label_detection_mode_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_model_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_stationary_camera_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_video_confidence_threshold_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudVideointelligenceV1p1beta1_LabelDetectionConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
