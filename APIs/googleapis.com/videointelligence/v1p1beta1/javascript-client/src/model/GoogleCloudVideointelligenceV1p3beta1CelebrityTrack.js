/**
 * Cloud Video Intelligence API
 * Detects objects, explicit content, and scene changes in videos. It also specifies the region for annotation and transcribes speech to text. Supports both asynchronous API and streaming API.
 *
 * The version of the OpenAPI document: v1p1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudVideointelligenceV1p3beta1RecognizedCelebrity from './GoogleCloudVideointelligenceV1p3beta1RecognizedCelebrity';
import GoogleCloudVideointelligenceV1p3beta1Track from './GoogleCloudVideointelligenceV1p3beta1Track';

/**
 * The GoogleCloudVideointelligenceV1p3beta1CelebrityTrack model module.
 * @module model/GoogleCloudVideointelligenceV1p3beta1CelebrityTrack
 * @version v1p1beta1
 */
class GoogleCloudVideointelligenceV1p3beta1CelebrityTrack {
    /**
     * Constructs a new <code>GoogleCloudVideointelligenceV1p3beta1CelebrityTrack</code>.
     * The annotation result of a celebrity face track. RecognizedCelebrity field could be empty if the face track does not have any matched celebrities.
     * @alias module:model/GoogleCloudVideointelligenceV1p3beta1CelebrityTrack
     */
    constructor() { 
        
        GoogleCloudVideointelligenceV1p3beta1CelebrityTrack.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudVideointelligenceV1p3beta1CelebrityTrack</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudVideointelligenceV1p3beta1CelebrityTrack} obj Optional instance to populate.
     * @return {module:model/GoogleCloudVideointelligenceV1p3beta1CelebrityTrack} The populated <code>GoogleCloudVideointelligenceV1p3beta1CelebrityTrack</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudVideointelligenceV1p3beta1CelebrityTrack();

            if (data.hasOwnProperty('celebrities')) {
                obj['celebrities'] = ApiClient.convertToType(data['celebrities'], [GoogleCloudVideointelligenceV1p3beta1RecognizedCelebrity]);
            }
            if (data.hasOwnProperty('faceTrack')) {
                obj['faceTrack'] = GoogleCloudVideointelligenceV1p3beta1Track.constructFromObject(data['faceTrack']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudVideointelligenceV1p3beta1CelebrityTrack</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudVideointelligenceV1p3beta1CelebrityTrack</code>.
     */
    static validateJSON(data) {
        if (data['celebrities']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['celebrities'])) {
                throw new Error("Expected the field `celebrities` to be an array in the JSON data but got " + data['celebrities']);
            }
            // validate the optional field `celebrities` (array)
            for (const item of data['celebrities']) {
                GoogleCloudVideointelligenceV1p3beta1RecognizedCelebrity.validateJSON(item);
            };
        }
        // validate the optional field `faceTrack`
        if (data['faceTrack']) { // data not null
          GoogleCloudVideointelligenceV1p3beta1Track.validateJSON(data['faceTrack']);
        }

        return true;
    }


}



/**
 * Top N match of the celebrities for the face in this track.
 * @member {Array.<module:model/GoogleCloudVideointelligenceV1p3beta1RecognizedCelebrity>} celebrities
 */
GoogleCloudVideointelligenceV1p3beta1CelebrityTrack.prototype['celebrities'] = undefined;

/**
 * @member {module:model/GoogleCloudVideointelligenceV1p3beta1Track} faceTrack
 */
GoogleCloudVideointelligenceV1p3beta1CelebrityTrack.prototype['faceTrack'] = undefined;






export default GoogleCloudVideointelligenceV1p3beta1CelebrityTrack;

