/*
 * Cloud Video Intelligence API
 * Detects objects, explicit content, and scene changes in videos. It also specifies the region for annotation and transcribes speech to text. Supports both asynchronous API and streaming API.
 *
 * The version of the OpenAPI document: v1p1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudVideointelligenceV1p1beta1SpeechContext;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Config for SPEECH_TRANSCRIPTION.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:50:35.281755-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudVideointelligenceV1p1beta1SpeechTranscriptionConfig {
  public static final String SERIALIZED_NAME_AUDIO_TRACKS = "audioTracks";
  @SerializedName(SERIALIZED_NAME_AUDIO_TRACKS)
  private List<Integer> audioTracks = new ArrayList<>();

  public static final String SERIALIZED_NAME_DIARIZATION_SPEAKER_COUNT = "diarizationSpeakerCount";
  @SerializedName(SERIALIZED_NAME_DIARIZATION_SPEAKER_COUNT)
  private Integer diarizationSpeakerCount;

  public static final String SERIALIZED_NAME_ENABLE_AUTOMATIC_PUNCTUATION = "enableAutomaticPunctuation";
  @SerializedName(SERIALIZED_NAME_ENABLE_AUTOMATIC_PUNCTUATION)
  private Boolean enableAutomaticPunctuation;

  public static final String SERIALIZED_NAME_ENABLE_SPEAKER_DIARIZATION = "enableSpeakerDiarization";
  @SerializedName(SERIALIZED_NAME_ENABLE_SPEAKER_DIARIZATION)
  private Boolean enableSpeakerDiarization;

  public static final String SERIALIZED_NAME_ENABLE_WORD_CONFIDENCE = "enableWordConfidence";
  @SerializedName(SERIALIZED_NAME_ENABLE_WORD_CONFIDENCE)
  private Boolean enableWordConfidence;

  public static final String SERIALIZED_NAME_FILTER_PROFANITY = "filterProfanity";
  @SerializedName(SERIALIZED_NAME_FILTER_PROFANITY)
  private Boolean filterProfanity;

  public static final String SERIALIZED_NAME_LANGUAGE_CODE = "languageCode";
  @SerializedName(SERIALIZED_NAME_LANGUAGE_CODE)
  private String languageCode;

  public static final String SERIALIZED_NAME_MAX_ALTERNATIVES = "maxAlternatives";
  @SerializedName(SERIALIZED_NAME_MAX_ALTERNATIVES)
  private Integer maxAlternatives;

  public static final String SERIALIZED_NAME_SPEECH_CONTEXTS = "speechContexts";
  @SerializedName(SERIALIZED_NAME_SPEECH_CONTEXTS)
  private List<GoogleCloudVideointelligenceV1p1beta1SpeechContext> speechContexts = new ArrayList<>();

  public GoogleCloudVideointelligenceV1p1beta1SpeechTranscriptionConfig() {
  }

  public GoogleCloudVideointelligenceV1p1beta1SpeechTranscriptionConfig audioTracks(List<Integer> audioTracks) {
    this.audioTracks = audioTracks;
    return this;
  }

  public GoogleCloudVideointelligenceV1p1beta1SpeechTranscriptionConfig addAudioTracksItem(Integer audioTracksItem) {
    if (this.audioTracks == null) {
      this.audioTracks = new ArrayList<>();
    }
    this.audioTracks.add(audioTracksItem);
    return this;
  }

  /**
   * Optional. For file formats, such as MXF or MKV, supporting multiple audio tracks, specify up to two tracks. Default: track 0.
   * @return audioTracks
   */
  @javax.annotation.Nullable
  public List<Integer> getAudioTracks() {
    return audioTracks;
  }

  public void setAudioTracks(List<Integer> audioTracks) {
    this.audioTracks = audioTracks;
  }


  public GoogleCloudVideointelligenceV1p1beta1SpeechTranscriptionConfig diarizationSpeakerCount(Integer diarizationSpeakerCount) {
    this.diarizationSpeakerCount = diarizationSpeakerCount;
    return this;
  }

  /**
   * Optional. If set, specifies the estimated number of speakers in the conversation. If not set, defaults to &#39;2&#39;. Ignored unless enable_speaker_diarization is set to true.
   * @return diarizationSpeakerCount
   */
  @javax.annotation.Nullable
  public Integer getDiarizationSpeakerCount() {
    return diarizationSpeakerCount;
  }

  public void setDiarizationSpeakerCount(Integer diarizationSpeakerCount) {
    this.diarizationSpeakerCount = diarizationSpeakerCount;
  }


  public GoogleCloudVideointelligenceV1p1beta1SpeechTranscriptionConfig enableAutomaticPunctuation(Boolean enableAutomaticPunctuation) {
    this.enableAutomaticPunctuation = enableAutomaticPunctuation;
    return this;
  }

  /**
   * Optional. If &#39;true&#39;, adds punctuation to recognition result hypotheses. This feature is only available in select languages. Setting this for requests in other languages has no effect at all. The default &#39;false&#39; value does not add punctuation to result hypotheses. NOTE: \&quot;This is currently offered as an experimental service, complimentary to all users. In the future this may be exclusively available as a premium feature.\&quot;
   * @return enableAutomaticPunctuation
   */
  @javax.annotation.Nullable
  public Boolean getEnableAutomaticPunctuation() {
    return enableAutomaticPunctuation;
  }

  public void setEnableAutomaticPunctuation(Boolean enableAutomaticPunctuation) {
    this.enableAutomaticPunctuation = enableAutomaticPunctuation;
  }


  public GoogleCloudVideointelligenceV1p1beta1SpeechTranscriptionConfig enableSpeakerDiarization(Boolean enableSpeakerDiarization) {
    this.enableSpeakerDiarization = enableSpeakerDiarization;
    return this;
  }

  /**
   * Optional. If &#39;true&#39;, enables speaker detection for each recognized word in the top alternative of the recognition result using a speaker_tag provided in the WordInfo. Note: When this is true, we send all the words from the beginning of the audio for the top alternative in every consecutive response. This is done in order to improve our speaker tags as our models learn to identify the speakers in the conversation over time.
   * @return enableSpeakerDiarization
   */
  @javax.annotation.Nullable
  public Boolean getEnableSpeakerDiarization() {
    return enableSpeakerDiarization;
  }

  public void setEnableSpeakerDiarization(Boolean enableSpeakerDiarization) {
    this.enableSpeakerDiarization = enableSpeakerDiarization;
  }


  public GoogleCloudVideointelligenceV1p1beta1SpeechTranscriptionConfig enableWordConfidence(Boolean enableWordConfidence) {
    this.enableWordConfidence = enableWordConfidence;
    return this;
  }

  /**
   * Optional. If &#x60;true&#x60;, the top result includes a list of words and the confidence for those words. If &#x60;false&#x60;, no word-level confidence information is returned. The default is &#x60;false&#x60;.
   * @return enableWordConfidence
   */
  @javax.annotation.Nullable
  public Boolean getEnableWordConfidence() {
    return enableWordConfidence;
  }

  public void setEnableWordConfidence(Boolean enableWordConfidence) {
    this.enableWordConfidence = enableWordConfidence;
  }


  public GoogleCloudVideointelligenceV1p1beta1SpeechTranscriptionConfig filterProfanity(Boolean filterProfanity) {
    this.filterProfanity = filterProfanity;
    return this;
  }

  /**
   * Optional. If set to &#x60;true&#x60;, the server will attempt to filter out profanities, replacing all but the initial character in each filtered word with asterisks, e.g. \&quot;f***\&quot;. If set to &#x60;false&#x60; or omitted, profanities won&#39;t be filtered out.
   * @return filterProfanity
   */
  @javax.annotation.Nullable
  public Boolean getFilterProfanity() {
    return filterProfanity;
  }

  public void setFilterProfanity(Boolean filterProfanity) {
    this.filterProfanity = filterProfanity;
  }


  public GoogleCloudVideointelligenceV1p1beta1SpeechTranscriptionConfig languageCode(String languageCode) {
    this.languageCode = languageCode;
    return this;
  }

  /**
   * Required. *Required* The language of the supplied audio as a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: \&quot;en-US\&quot;. See [Language Support](https://cloud.google.com/speech/docs/languages) for a list of the currently supported language codes.
   * @return languageCode
   */
  @javax.annotation.Nullable
  public String getLanguageCode() {
    return languageCode;
  }

  public void setLanguageCode(String languageCode) {
    this.languageCode = languageCode;
  }


  public GoogleCloudVideointelligenceV1p1beta1SpeechTranscriptionConfig maxAlternatives(Integer maxAlternatives) {
    this.maxAlternatives = maxAlternatives;
    return this;
  }

  /**
   * Optional. Maximum number of recognition hypotheses to be returned. Specifically, the maximum number of &#x60;SpeechRecognitionAlternative&#x60; messages within each &#x60;SpeechTranscription&#x60;. The server may return fewer than &#x60;max_alternatives&#x60;. Valid values are &#x60;0&#x60;-&#x60;30&#x60;. A value of &#x60;0&#x60; or &#x60;1&#x60; will return a maximum of one. If omitted, will return a maximum of one.
   * @return maxAlternatives
   */
  @javax.annotation.Nullable
  public Integer getMaxAlternatives() {
    return maxAlternatives;
  }

  public void setMaxAlternatives(Integer maxAlternatives) {
    this.maxAlternatives = maxAlternatives;
  }


  public GoogleCloudVideointelligenceV1p1beta1SpeechTranscriptionConfig speechContexts(List<GoogleCloudVideointelligenceV1p1beta1SpeechContext> speechContexts) {
    this.speechContexts = speechContexts;
    return this;
  }

  public GoogleCloudVideointelligenceV1p1beta1SpeechTranscriptionConfig addSpeechContextsItem(GoogleCloudVideointelligenceV1p1beta1SpeechContext speechContextsItem) {
    if (this.speechContexts == null) {
      this.speechContexts = new ArrayList<>();
    }
    this.speechContexts.add(speechContextsItem);
    return this;
  }

  /**
   * Optional. A means to provide context to assist the speech recognition.
   * @return speechContexts
   */
  @javax.annotation.Nullable
  public List<GoogleCloudVideointelligenceV1p1beta1SpeechContext> getSpeechContexts() {
    return speechContexts;
  }

  public void setSpeechContexts(List<GoogleCloudVideointelligenceV1p1beta1SpeechContext> speechContexts) {
    this.speechContexts = speechContexts;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudVideointelligenceV1p1beta1SpeechTranscriptionConfig googleCloudVideointelligenceV1p1beta1SpeechTranscriptionConfig = (GoogleCloudVideointelligenceV1p1beta1SpeechTranscriptionConfig) o;
    return Objects.equals(this.audioTracks, googleCloudVideointelligenceV1p1beta1SpeechTranscriptionConfig.audioTracks) &&
        Objects.equals(this.diarizationSpeakerCount, googleCloudVideointelligenceV1p1beta1SpeechTranscriptionConfig.diarizationSpeakerCount) &&
        Objects.equals(this.enableAutomaticPunctuation, googleCloudVideointelligenceV1p1beta1SpeechTranscriptionConfig.enableAutomaticPunctuation) &&
        Objects.equals(this.enableSpeakerDiarization, googleCloudVideointelligenceV1p1beta1SpeechTranscriptionConfig.enableSpeakerDiarization) &&
        Objects.equals(this.enableWordConfidence, googleCloudVideointelligenceV1p1beta1SpeechTranscriptionConfig.enableWordConfidence) &&
        Objects.equals(this.filterProfanity, googleCloudVideointelligenceV1p1beta1SpeechTranscriptionConfig.filterProfanity) &&
        Objects.equals(this.languageCode, googleCloudVideointelligenceV1p1beta1SpeechTranscriptionConfig.languageCode) &&
        Objects.equals(this.maxAlternatives, googleCloudVideointelligenceV1p1beta1SpeechTranscriptionConfig.maxAlternatives) &&
        Objects.equals(this.speechContexts, googleCloudVideointelligenceV1p1beta1SpeechTranscriptionConfig.speechContexts);
  }

  @Override
  public int hashCode() {
    return Objects.hash(audioTracks, diarizationSpeakerCount, enableAutomaticPunctuation, enableSpeakerDiarization, enableWordConfidence, filterProfanity, languageCode, maxAlternatives, speechContexts);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudVideointelligenceV1p1beta1SpeechTranscriptionConfig {\n");
    sb.append("    audioTracks: ").append(toIndentedString(audioTracks)).append("\n");
    sb.append("    diarizationSpeakerCount: ").append(toIndentedString(diarizationSpeakerCount)).append("\n");
    sb.append("    enableAutomaticPunctuation: ").append(toIndentedString(enableAutomaticPunctuation)).append("\n");
    sb.append("    enableSpeakerDiarization: ").append(toIndentedString(enableSpeakerDiarization)).append("\n");
    sb.append("    enableWordConfidence: ").append(toIndentedString(enableWordConfidence)).append("\n");
    sb.append("    filterProfanity: ").append(toIndentedString(filterProfanity)).append("\n");
    sb.append("    languageCode: ").append(toIndentedString(languageCode)).append("\n");
    sb.append("    maxAlternatives: ").append(toIndentedString(maxAlternatives)).append("\n");
    sb.append("    speechContexts: ").append(toIndentedString(speechContexts)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("audioTracks");
    openapiFields.add("diarizationSpeakerCount");
    openapiFields.add("enableAutomaticPunctuation");
    openapiFields.add("enableSpeakerDiarization");
    openapiFields.add("enableWordConfidence");
    openapiFields.add("filterProfanity");
    openapiFields.add("languageCode");
    openapiFields.add("maxAlternatives");
    openapiFields.add("speechContexts");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudVideointelligenceV1p1beta1SpeechTranscriptionConfig
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudVideointelligenceV1p1beta1SpeechTranscriptionConfig.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudVideointelligenceV1p1beta1SpeechTranscriptionConfig is not found in the empty JSON string", GoogleCloudVideointelligenceV1p1beta1SpeechTranscriptionConfig.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudVideointelligenceV1p1beta1SpeechTranscriptionConfig.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudVideointelligenceV1p1beta1SpeechTranscriptionConfig` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("audioTracks") != null && !jsonObj.get("audioTracks").isJsonNull() && !jsonObj.get("audioTracks").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `audioTracks` to be an array in the JSON string but got `%s`", jsonObj.get("audioTracks").toString()));
      }
      if ((jsonObj.get("languageCode") != null && !jsonObj.get("languageCode").isJsonNull()) && !jsonObj.get("languageCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `languageCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("languageCode").toString()));
      }
      if (jsonObj.get("speechContexts") != null && !jsonObj.get("speechContexts").isJsonNull()) {
        JsonArray jsonArrayspeechContexts = jsonObj.getAsJsonArray("speechContexts");
        if (jsonArrayspeechContexts != null) {
          // ensure the json data is an array
          if (!jsonObj.get("speechContexts").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `speechContexts` to be an array in the JSON string but got `%s`", jsonObj.get("speechContexts").toString()));
          }

          // validate the optional field `speechContexts` (array)
          for (int i = 0; i < jsonArrayspeechContexts.size(); i++) {
            GoogleCloudVideointelligenceV1p1beta1SpeechContext.validateJsonElement(jsonArrayspeechContexts.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudVideointelligenceV1p1beta1SpeechTranscriptionConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudVideointelligenceV1p1beta1SpeechTranscriptionConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudVideointelligenceV1p1beta1SpeechTranscriptionConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudVideointelligenceV1p1beta1SpeechTranscriptionConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudVideointelligenceV1p1beta1SpeechTranscriptionConfig>() {
           @Override
           public void write(JsonWriter out, GoogleCloudVideointelligenceV1p1beta1SpeechTranscriptionConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudVideointelligenceV1p1beta1SpeechTranscriptionConfig read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudVideointelligenceV1p1beta1SpeechTranscriptionConfig given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudVideointelligenceV1p1beta1SpeechTranscriptionConfig
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudVideointelligenceV1p1beta1SpeechTranscriptionConfig
   */
  public static GoogleCloudVideointelligenceV1p1beta1SpeechTranscriptionConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudVideointelligenceV1p1beta1SpeechTranscriptionConfig.class);
  }

  /**
   * Convert an instance of GoogleCloudVideointelligenceV1p1beta1SpeechTranscriptionConfig to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

