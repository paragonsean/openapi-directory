/*
 * Cloud Video Intelligence API
 * Detects objects, explicit content, and scene changes in videos. It also specifies the region for annotation and transcribes speech to text. Supports both asynchronous API and streaming API.
 *
 * The version of the OpenAPI document: v1p1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudVideointelligenceV1p2beta1WordInfo;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Alternative hypotheses (a.k.a. n-best list).
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:50:35.281755-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudVideointelligenceV1p2beta1SpeechRecognitionAlternative {
  public static final String SERIALIZED_NAME_CONFIDENCE = "confidence";
  @SerializedName(SERIALIZED_NAME_CONFIDENCE)
  private Float confidence;

  public static final String SERIALIZED_NAME_TRANSCRIPT = "transcript";
  @SerializedName(SERIALIZED_NAME_TRANSCRIPT)
  private String transcript;

  public static final String SERIALIZED_NAME_WORDS = "words";
  @SerializedName(SERIALIZED_NAME_WORDS)
  private List<GoogleCloudVideointelligenceV1p2beta1WordInfo> words = new ArrayList<>();

  public GoogleCloudVideointelligenceV1p2beta1SpeechRecognitionAlternative() {
  }

  public GoogleCloudVideointelligenceV1p2beta1SpeechRecognitionAlternative(
     Float confidence, 
     List<GoogleCloudVideointelligenceV1p2beta1WordInfo> words
  ) {
    this();
    this.confidence = confidence;
    this.words = words;
  }

  /**
   * Output only. The confidence estimate between 0.0 and 1.0. A higher number indicates an estimated greater likelihood that the recognized words are correct. This field is set only for the top alternative. This field is not guaranteed to be accurate and users should not rely on it to be always provided. The default of 0.0 is a sentinel value indicating &#x60;confidence&#x60; was not set.
   * @return confidence
   */
  @javax.annotation.Nullable
  public Float getConfidence() {
    return confidence;
  }



  public GoogleCloudVideointelligenceV1p2beta1SpeechRecognitionAlternative transcript(String transcript) {
    this.transcript = transcript;
    return this;
  }

  /**
   * Transcript text representing the words that the user spoke.
   * @return transcript
   */
  @javax.annotation.Nullable
  public String getTranscript() {
    return transcript;
  }

  public void setTranscript(String transcript) {
    this.transcript = transcript;
  }


  /**
   * Output only. A list of word-specific information for each recognized word. Note: When &#x60;enable_speaker_diarization&#x60; is set to true, you will see all the words from the beginning of the audio.
   * @return words
   */
  @javax.annotation.Nullable
  public List<GoogleCloudVideointelligenceV1p2beta1WordInfo> getWords() {
    return words;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudVideointelligenceV1p2beta1SpeechRecognitionAlternative googleCloudVideointelligenceV1p2beta1SpeechRecognitionAlternative = (GoogleCloudVideointelligenceV1p2beta1SpeechRecognitionAlternative) o;
    return Objects.equals(this.confidence, googleCloudVideointelligenceV1p2beta1SpeechRecognitionAlternative.confidence) &&
        Objects.equals(this.transcript, googleCloudVideointelligenceV1p2beta1SpeechRecognitionAlternative.transcript) &&
        Objects.equals(this.words, googleCloudVideointelligenceV1p2beta1SpeechRecognitionAlternative.words);
  }

  @Override
  public int hashCode() {
    return Objects.hash(confidence, transcript, words);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudVideointelligenceV1p2beta1SpeechRecognitionAlternative {\n");
    sb.append("    confidence: ").append(toIndentedString(confidence)).append("\n");
    sb.append("    transcript: ").append(toIndentedString(transcript)).append("\n");
    sb.append("    words: ").append(toIndentedString(words)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("confidence");
    openapiFields.add("transcript");
    openapiFields.add("words");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudVideointelligenceV1p2beta1SpeechRecognitionAlternative
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudVideointelligenceV1p2beta1SpeechRecognitionAlternative.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudVideointelligenceV1p2beta1SpeechRecognitionAlternative is not found in the empty JSON string", GoogleCloudVideointelligenceV1p2beta1SpeechRecognitionAlternative.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudVideointelligenceV1p2beta1SpeechRecognitionAlternative.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudVideointelligenceV1p2beta1SpeechRecognitionAlternative` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("transcript") != null && !jsonObj.get("transcript").isJsonNull()) && !jsonObj.get("transcript").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `transcript` to be a primitive type in the JSON string but got `%s`", jsonObj.get("transcript").toString()));
      }
      if (jsonObj.get("words") != null && !jsonObj.get("words").isJsonNull()) {
        JsonArray jsonArraywords = jsonObj.getAsJsonArray("words");
        if (jsonArraywords != null) {
          // ensure the json data is an array
          if (!jsonObj.get("words").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `words` to be an array in the JSON string but got `%s`", jsonObj.get("words").toString()));
          }

          // validate the optional field `words` (array)
          for (int i = 0; i < jsonArraywords.size(); i++) {
            GoogleCloudVideointelligenceV1p2beta1WordInfo.validateJsonElement(jsonArraywords.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudVideointelligenceV1p2beta1SpeechRecognitionAlternative.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudVideointelligenceV1p2beta1SpeechRecognitionAlternative' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudVideointelligenceV1p2beta1SpeechRecognitionAlternative> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudVideointelligenceV1p2beta1SpeechRecognitionAlternative.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudVideointelligenceV1p2beta1SpeechRecognitionAlternative>() {
           @Override
           public void write(JsonWriter out, GoogleCloudVideointelligenceV1p2beta1SpeechRecognitionAlternative value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudVideointelligenceV1p2beta1SpeechRecognitionAlternative read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudVideointelligenceV1p2beta1SpeechRecognitionAlternative given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudVideointelligenceV1p2beta1SpeechRecognitionAlternative
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudVideointelligenceV1p2beta1SpeechRecognitionAlternative
   */
  public static GoogleCloudVideointelligenceV1p2beta1SpeechRecognitionAlternative fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudVideointelligenceV1p2beta1SpeechRecognitionAlternative.class);
  }

  /**
   * Convert an instance of GoogleCloudVideointelligenceV1p2beta1SpeechRecognitionAlternative to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

