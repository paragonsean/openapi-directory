/*
 * Cloud Video Intelligence API
 * Detects objects, explicit content, and scene changes in videos. It also specifies the region for annotation and transcribes speech to text. Supports both asynchronous API and streaming API.
 *
 * The version of the OpenAPI document: v1p3beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudVideointelligenceV1p3beta1VideoAnnotationProgress;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Video annotation progress. Included in the &#x60;metadata&#x60; field of the &#x60;Operation&#x60; returned by the &#x60;GetOperation&#x60; call of the &#x60;google::longrunning::Operations&#x60; service.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:50:38.853834-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudVideointelligenceV1p3beta1AnnotateVideoProgress {
  public static final String SERIALIZED_NAME_ANNOTATION_PROGRESS = "annotationProgress";
  @SerializedName(SERIALIZED_NAME_ANNOTATION_PROGRESS)
  private List<GoogleCloudVideointelligenceV1p3beta1VideoAnnotationProgress> annotationProgress = new ArrayList<>();

  public GoogleCloudVideointelligenceV1p3beta1AnnotateVideoProgress() {
  }

  public GoogleCloudVideointelligenceV1p3beta1AnnotateVideoProgress annotationProgress(List<GoogleCloudVideointelligenceV1p3beta1VideoAnnotationProgress> annotationProgress) {
    this.annotationProgress = annotationProgress;
    return this;
  }

  public GoogleCloudVideointelligenceV1p3beta1AnnotateVideoProgress addAnnotationProgressItem(GoogleCloudVideointelligenceV1p3beta1VideoAnnotationProgress annotationProgressItem) {
    if (this.annotationProgress == null) {
      this.annotationProgress = new ArrayList<>();
    }
    this.annotationProgress.add(annotationProgressItem);
    return this;
  }

  /**
   * Progress metadata for all videos specified in &#x60;AnnotateVideoRequest&#x60;.
   * @return annotationProgress
   */
  @javax.annotation.Nullable
  public List<GoogleCloudVideointelligenceV1p3beta1VideoAnnotationProgress> getAnnotationProgress() {
    return annotationProgress;
  }

  public void setAnnotationProgress(List<GoogleCloudVideointelligenceV1p3beta1VideoAnnotationProgress> annotationProgress) {
    this.annotationProgress = annotationProgress;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudVideointelligenceV1p3beta1AnnotateVideoProgress googleCloudVideointelligenceV1p3beta1AnnotateVideoProgress = (GoogleCloudVideointelligenceV1p3beta1AnnotateVideoProgress) o;
    return Objects.equals(this.annotationProgress, googleCloudVideointelligenceV1p3beta1AnnotateVideoProgress.annotationProgress);
  }

  @Override
  public int hashCode() {
    return Objects.hash(annotationProgress);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudVideointelligenceV1p3beta1AnnotateVideoProgress {\n");
    sb.append("    annotationProgress: ").append(toIndentedString(annotationProgress)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("annotationProgress");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudVideointelligenceV1p3beta1AnnotateVideoProgress
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudVideointelligenceV1p3beta1AnnotateVideoProgress.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudVideointelligenceV1p3beta1AnnotateVideoProgress is not found in the empty JSON string", GoogleCloudVideointelligenceV1p3beta1AnnotateVideoProgress.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudVideointelligenceV1p3beta1AnnotateVideoProgress.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudVideointelligenceV1p3beta1AnnotateVideoProgress` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("annotationProgress") != null && !jsonObj.get("annotationProgress").isJsonNull()) {
        JsonArray jsonArrayannotationProgress = jsonObj.getAsJsonArray("annotationProgress");
        if (jsonArrayannotationProgress != null) {
          // ensure the json data is an array
          if (!jsonObj.get("annotationProgress").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `annotationProgress` to be an array in the JSON string but got `%s`", jsonObj.get("annotationProgress").toString()));
          }

          // validate the optional field `annotationProgress` (array)
          for (int i = 0; i < jsonArrayannotationProgress.size(); i++) {
            GoogleCloudVideointelligenceV1p3beta1VideoAnnotationProgress.validateJsonElement(jsonArrayannotationProgress.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudVideointelligenceV1p3beta1AnnotateVideoProgress.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudVideointelligenceV1p3beta1AnnotateVideoProgress' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudVideointelligenceV1p3beta1AnnotateVideoProgress> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudVideointelligenceV1p3beta1AnnotateVideoProgress.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudVideointelligenceV1p3beta1AnnotateVideoProgress>() {
           @Override
           public void write(JsonWriter out, GoogleCloudVideointelligenceV1p3beta1AnnotateVideoProgress value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudVideointelligenceV1p3beta1AnnotateVideoProgress read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudVideointelligenceV1p3beta1AnnotateVideoProgress given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudVideointelligenceV1p3beta1AnnotateVideoProgress
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudVideointelligenceV1p3beta1AnnotateVideoProgress
   */
  public static GoogleCloudVideointelligenceV1p3beta1AnnotateVideoProgress fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudVideointelligenceV1p3beta1AnnotateVideoProgress.class);
  }

  /**
   * Convert an instance of GoogleCloudVideointelligenceV1p3beta1AnnotateVideoProgress to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

