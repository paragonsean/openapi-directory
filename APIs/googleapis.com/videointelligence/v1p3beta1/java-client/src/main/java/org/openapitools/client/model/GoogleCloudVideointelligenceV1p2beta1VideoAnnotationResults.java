/*
 * Cloud Video Intelligence API
 * Detects objects, explicit content, and scene changes in videos. It also specifies the region for annotation and transcribes speech to text. Supports both asynchronous API and streaming API.
 *
 * The version of the OpenAPI document: v1p3beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudVideointelligenceV1p2beta1ExplicitContentAnnotation;
import org.openapitools.client.model.GoogleCloudVideointelligenceV1p2beta1FaceAnnotation;
import org.openapitools.client.model.GoogleCloudVideointelligenceV1p2beta1FaceDetectionAnnotation;
import org.openapitools.client.model.GoogleCloudVideointelligenceV1p2beta1LabelAnnotation;
import org.openapitools.client.model.GoogleCloudVideointelligenceV1p2beta1LogoRecognitionAnnotation;
import org.openapitools.client.model.GoogleCloudVideointelligenceV1p2beta1ObjectTrackingAnnotation;
import org.openapitools.client.model.GoogleCloudVideointelligenceV1p2beta1PersonDetectionAnnotation;
import org.openapitools.client.model.GoogleCloudVideointelligenceV1p2beta1SpeechTranscription;
import org.openapitools.client.model.GoogleCloudVideointelligenceV1p2beta1TextAnnotation;
import org.openapitools.client.model.GoogleCloudVideointelligenceV1p2beta1VideoSegment;
import org.openapitools.client.model.GoogleRpcStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Annotation results for a single video.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:50:38.853834-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudVideointelligenceV1p2beta1VideoAnnotationResults {
  public static final String SERIALIZED_NAME_ERROR = "error";
  @SerializedName(SERIALIZED_NAME_ERROR)
  private GoogleRpcStatus error;

  public static final String SERIALIZED_NAME_EXPLICIT_ANNOTATION = "explicitAnnotation";
  @SerializedName(SERIALIZED_NAME_EXPLICIT_ANNOTATION)
  private GoogleCloudVideointelligenceV1p2beta1ExplicitContentAnnotation explicitAnnotation;

  public static final String SERIALIZED_NAME_FACE_ANNOTATIONS = "faceAnnotations";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_FACE_ANNOTATIONS)
  private List<GoogleCloudVideointelligenceV1p2beta1FaceAnnotation> faceAnnotations = new ArrayList<>();

  public static final String SERIALIZED_NAME_FACE_DETECTION_ANNOTATIONS = "faceDetectionAnnotations";
  @SerializedName(SERIALIZED_NAME_FACE_DETECTION_ANNOTATIONS)
  private List<GoogleCloudVideointelligenceV1p2beta1FaceDetectionAnnotation> faceDetectionAnnotations = new ArrayList<>();

  public static final String SERIALIZED_NAME_FRAME_LABEL_ANNOTATIONS = "frameLabelAnnotations";
  @SerializedName(SERIALIZED_NAME_FRAME_LABEL_ANNOTATIONS)
  private List<GoogleCloudVideointelligenceV1p2beta1LabelAnnotation> frameLabelAnnotations = new ArrayList<>();

  public static final String SERIALIZED_NAME_INPUT_URI = "inputUri";
  @SerializedName(SERIALIZED_NAME_INPUT_URI)
  private String inputUri;

  public static final String SERIALIZED_NAME_LOGO_RECOGNITION_ANNOTATIONS = "logoRecognitionAnnotations";
  @SerializedName(SERIALIZED_NAME_LOGO_RECOGNITION_ANNOTATIONS)
  private List<GoogleCloudVideointelligenceV1p2beta1LogoRecognitionAnnotation> logoRecognitionAnnotations = new ArrayList<>();

  public static final String SERIALIZED_NAME_OBJECT_ANNOTATIONS = "objectAnnotations";
  @SerializedName(SERIALIZED_NAME_OBJECT_ANNOTATIONS)
  private List<GoogleCloudVideointelligenceV1p2beta1ObjectTrackingAnnotation> objectAnnotations = new ArrayList<>();

  public static final String SERIALIZED_NAME_PERSON_DETECTION_ANNOTATIONS = "personDetectionAnnotations";
  @SerializedName(SERIALIZED_NAME_PERSON_DETECTION_ANNOTATIONS)
  private List<GoogleCloudVideointelligenceV1p2beta1PersonDetectionAnnotation> personDetectionAnnotations = new ArrayList<>();

  public static final String SERIALIZED_NAME_SEGMENT = "segment";
  @SerializedName(SERIALIZED_NAME_SEGMENT)
  private GoogleCloudVideointelligenceV1p2beta1VideoSegment segment;

  public static final String SERIALIZED_NAME_SEGMENT_LABEL_ANNOTATIONS = "segmentLabelAnnotations";
  @SerializedName(SERIALIZED_NAME_SEGMENT_LABEL_ANNOTATIONS)
  private List<GoogleCloudVideointelligenceV1p2beta1LabelAnnotation> segmentLabelAnnotations = new ArrayList<>();

  public static final String SERIALIZED_NAME_SEGMENT_PRESENCE_LABEL_ANNOTATIONS = "segmentPresenceLabelAnnotations";
  @SerializedName(SERIALIZED_NAME_SEGMENT_PRESENCE_LABEL_ANNOTATIONS)
  private List<GoogleCloudVideointelligenceV1p2beta1LabelAnnotation> segmentPresenceLabelAnnotations = new ArrayList<>();

  public static final String SERIALIZED_NAME_SHOT_ANNOTATIONS = "shotAnnotations";
  @SerializedName(SERIALIZED_NAME_SHOT_ANNOTATIONS)
  private List<GoogleCloudVideointelligenceV1p2beta1VideoSegment> shotAnnotations = new ArrayList<>();

  public static final String SERIALIZED_NAME_SHOT_LABEL_ANNOTATIONS = "shotLabelAnnotations";
  @SerializedName(SERIALIZED_NAME_SHOT_LABEL_ANNOTATIONS)
  private List<GoogleCloudVideointelligenceV1p2beta1LabelAnnotation> shotLabelAnnotations = new ArrayList<>();

  public static final String SERIALIZED_NAME_SHOT_PRESENCE_LABEL_ANNOTATIONS = "shotPresenceLabelAnnotations";
  @SerializedName(SERIALIZED_NAME_SHOT_PRESENCE_LABEL_ANNOTATIONS)
  private List<GoogleCloudVideointelligenceV1p2beta1LabelAnnotation> shotPresenceLabelAnnotations = new ArrayList<>();

  public static final String SERIALIZED_NAME_SPEECH_TRANSCRIPTIONS = "speechTranscriptions";
  @SerializedName(SERIALIZED_NAME_SPEECH_TRANSCRIPTIONS)
  private List<GoogleCloudVideointelligenceV1p2beta1SpeechTranscription> speechTranscriptions = new ArrayList<>();

  public static final String SERIALIZED_NAME_TEXT_ANNOTATIONS = "textAnnotations";
  @SerializedName(SERIALIZED_NAME_TEXT_ANNOTATIONS)
  private List<GoogleCloudVideointelligenceV1p2beta1TextAnnotation> textAnnotations = new ArrayList<>();

  public GoogleCloudVideointelligenceV1p2beta1VideoAnnotationResults() {
  }

  public GoogleCloudVideointelligenceV1p2beta1VideoAnnotationResults error(GoogleRpcStatus error) {
    this.error = error;
    return this;
  }

  /**
   * Get error
   * @return error
   */
  @javax.annotation.Nullable
  public GoogleRpcStatus getError() {
    return error;
  }

  public void setError(GoogleRpcStatus error) {
    this.error = error;
  }


  public GoogleCloudVideointelligenceV1p2beta1VideoAnnotationResults explicitAnnotation(GoogleCloudVideointelligenceV1p2beta1ExplicitContentAnnotation explicitAnnotation) {
    this.explicitAnnotation = explicitAnnotation;
    return this;
  }

  /**
   * Get explicitAnnotation
   * @return explicitAnnotation
   */
  @javax.annotation.Nullable
  public GoogleCloudVideointelligenceV1p2beta1ExplicitContentAnnotation getExplicitAnnotation() {
    return explicitAnnotation;
  }

  public void setExplicitAnnotation(GoogleCloudVideointelligenceV1p2beta1ExplicitContentAnnotation explicitAnnotation) {
    this.explicitAnnotation = explicitAnnotation;
  }


  @Deprecated
  public GoogleCloudVideointelligenceV1p2beta1VideoAnnotationResults faceAnnotations(List<GoogleCloudVideointelligenceV1p2beta1FaceAnnotation> faceAnnotations) {
    this.faceAnnotations = faceAnnotations;
    return this;
  }

  public GoogleCloudVideointelligenceV1p2beta1VideoAnnotationResults addFaceAnnotationsItem(GoogleCloudVideointelligenceV1p2beta1FaceAnnotation faceAnnotationsItem) {
    if (this.faceAnnotations == null) {
      this.faceAnnotations = new ArrayList<>();
    }
    this.faceAnnotations.add(faceAnnotationsItem);
    return this;
  }

  /**
   * Deprecated. Please use &#x60;face_detection_annotations&#x60; instead.
   * @return faceAnnotations
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public List<GoogleCloudVideointelligenceV1p2beta1FaceAnnotation> getFaceAnnotations() {
    return faceAnnotations;
  }

  @Deprecated
  public void setFaceAnnotations(List<GoogleCloudVideointelligenceV1p2beta1FaceAnnotation> faceAnnotations) {
    this.faceAnnotations = faceAnnotations;
  }


  public GoogleCloudVideointelligenceV1p2beta1VideoAnnotationResults faceDetectionAnnotations(List<GoogleCloudVideointelligenceV1p2beta1FaceDetectionAnnotation> faceDetectionAnnotations) {
    this.faceDetectionAnnotations = faceDetectionAnnotations;
    return this;
  }

  public GoogleCloudVideointelligenceV1p2beta1VideoAnnotationResults addFaceDetectionAnnotationsItem(GoogleCloudVideointelligenceV1p2beta1FaceDetectionAnnotation faceDetectionAnnotationsItem) {
    if (this.faceDetectionAnnotations == null) {
      this.faceDetectionAnnotations = new ArrayList<>();
    }
    this.faceDetectionAnnotations.add(faceDetectionAnnotationsItem);
    return this;
  }

  /**
   * Face detection annotations.
   * @return faceDetectionAnnotations
   */
  @javax.annotation.Nullable
  public List<GoogleCloudVideointelligenceV1p2beta1FaceDetectionAnnotation> getFaceDetectionAnnotations() {
    return faceDetectionAnnotations;
  }

  public void setFaceDetectionAnnotations(List<GoogleCloudVideointelligenceV1p2beta1FaceDetectionAnnotation> faceDetectionAnnotations) {
    this.faceDetectionAnnotations = faceDetectionAnnotations;
  }


  public GoogleCloudVideointelligenceV1p2beta1VideoAnnotationResults frameLabelAnnotations(List<GoogleCloudVideointelligenceV1p2beta1LabelAnnotation> frameLabelAnnotations) {
    this.frameLabelAnnotations = frameLabelAnnotations;
    return this;
  }

  public GoogleCloudVideointelligenceV1p2beta1VideoAnnotationResults addFrameLabelAnnotationsItem(GoogleCloudVideointelligenceV1p2beta1LabelAnnotation frameLabelAnnotationsItem) {
    if (this.frameLabelAnnotations == null) {
      this.frameLabelAnnotations = new ArrayList<>();
    }
    this.frameLabelAnnotations.add(frameLabelAnnotationsItem);
    return this;
  }

  /**
   * Label annotations on frame level. There is exactly one element for each unique label.
   * @return frameLabelAnnotations
   */
  @javax.annotation.Nullable
  public List<GoogleCloudVideointelligenceV1p2beta1LabelAnnotation> getFrameLabelAnnotations() {
    return frameLabelAnnotations;
  }

  public void setFrameLabelAnnotations(List<GoogleCloudVideointelligenceV1p2beta1LabelAnnotation> frameLabelAnnotations) {
    this.frameLabelAnnotations = frameLabelAnnotations;
  }


  public GoogleCloudVideointelligenceV1p2beta1VideoAnnotationResults inputUri(String inputUri) {
    this.inputUri = inputUri;
    return this;
  }

  /**
   * Video file location in [Cloud Storage](https://cloud.google.com/storage/).
   * @return inputUri
   */
  @javax.annotation.Nullable
  public String getInputUri() {
    return inputUri;
  }

  public void setInputUri(String inputUri) {
    this.inputUri = inputUri;
  }


  public GoogleCloudVideointelligenceV1p2beta1VideoAnnotationResults logoRecognitionAnnotations(List<GoogleCloudVideointelligenceV1p2beta1LogoRecognitionAnnotation> logoRecognitionAnnotations) {
    this.logoRecognitionAnnotations = logoRecognitionAnnotations;
    return this;
  }

  public GoogleCloudVideointelligenceV1p2beta1VideoAnnotationResults addLogoRecognitionAnnotationsItem(GoogleCloudVideointelligenceV1p2beta1LogoRecognitionAnnotation logoRecognitionAnnotationsItem) {
    if (this.logoRecognitionAnnotations == null) {
      this.logoRecognitionAnnotations = new ArrayList<>();
    }
    this.logoRecognitionAnnotations.add(logoRecognitionAnnotationsItem);
    return this;
  }

  /**
   * Annotations for list of logos detected, tracked and recognized in video.
   * @return logoRecognitionAnnotations
   */
  @javax.annotation.Nullable
  public List<GoogleCloudVideointelligenceV1p2beta1LogoRecognitionAnnotation> getLogoRecognitionAnnotations() {
    return logoRecognitionAnnotations;
  }

  public void setLogoRecognitionAnnotations(List<GoogleCloudVideointelligenceV1p2beta1LogoRecognitionAnnotation> logoRecognitionAnnotations) {
    this.logoRecognitionAnnotations = logoRecognitionAnnotations;
  }


  public GoogleCloudVideointelligenceV1p2beta1VideoAnnotationResults objectAnnotations(List<GoogleCloudVideointelligenceV1p2beta1ObjectTrackingAnnotation> objectAnnotations) {
    this.objectAnnotations = objectAnnotations;
    return this;
  }

  public GoogleCloudVideointelligenceV1p2beta1VideoAnnotationResults addObjectAnnotationsItem(GoogleCloudVideointelligenceV1p2beta1ObjectTrackingAnnotation objectAnnotationsItem) {
    if (this.objectAnnotations == null) {
      this.objectAnnotations = new ArrayList<>();
    }
    this.objectAnnotations.add(objectAnnotationsItem);
    return this;
  }

  /**
   * Annotations for list of objects detected and tracked in video.
   * @return objectAnnotations
   */
  @javax.annotation.Nullable
  public List<GoogleCloudVideointelligenceV1p2beta1ObjectTrackingAnnotation> getObjectAnnotations() {
    return objectAnnotations;
  }

  public void setObjectAnnotations(List<GoogleCloudVideointelligenceV1p2beta1ObjectTrackingAnnotation> objectAnnotations) {
    this.objectAnnotations = objectAnnotations;
  }


  public GoogleCloudVideointelligenceV1p2beta1VideoAnnotationResults personDetectionAnnotations(List<GoogleCloudVideointelligenceV1p2beta1PersonDetectionAnnotation> personDetectionAnnotations) {
    this.personDetectionAnnotations = personDetectionAnnotations;
    return this;
  }

  public GoogleCloudVideointelligenceV1p2beta1VideoAnnotationResults addPersonDetectionAnnotationsItem(GoogleCloudVideointelligenceV1p2beta1PersonDetectionAnnotation personDetectionAnnotationsItem) {
    if (this.personDetectionAnnotations == null) {
      this.personDetectionAnnotations = new ArrayList<>();
    }
    this.personDetectionAnnotations.add(personDetectionAnnotationsItem);
    return this;
  }

  /**
   * Person detection annotations.
   * @return personDetectionAnnotations
   */
  @javax.annotation.Nullable
  public List<GoogleCloudVideointelligenceV1p2beta1PersonDetectionAnnotation> getPersonDetectionAnnotations() {
    return personDetectionAnnotations;
  }

  public void setPersonDetectionAnnotations(List<GoogleCloudVideointelligenceV1p2beta1PersonDetectionAnnotation> personDetectionAnnotations) {
    this.personDetectionAnnotations = personDetectionAnnotations;
  }


  public GoogleCloudVideointelligenceV1p2beta1VideoAnnotationResults segment(GoogleCloudVideointelligenceV1p2beta1VideoSegment segment) {
    this.segment = segment;
    return this;
  }

  /**
   * Get segment
   * @return segment
   */
  @javax.annotation.Nullable
  public GoogleCloudVideointelligenceV1p2beta1VideoSegment getSegment() {
    return segment;
  }

  public void setSegment(GoogleCloudVideointelligenceV1p2beta1VideoSegment segment) {
    this.segment = segment;
  }


  public GoogleCloudVideointelligenceV1p2beta1VideoAnnotationResults segmentLabelAnnotations(List<GoogleCloudVideointelligenceV1p2beta1LabelAnnotation> segmentLabelAnnotations) {
    this.segmentLabelAnnotations = segmentLabelAnnotations;
    return this;
  }

  public GoogleCloudVideointelligenceV1p2beta1VideoAnnotationResults addSegmentLabelAnnotationsItem(GoogleCloudVideointelligenceV1p2beta1LabelAnnotation segmentLabelAnnotationsItem) {
    if (this.segmentLabelAnnotations == null) {
      this.segmentLabelAnnotations = new ArrayList<>();
    }
    this.segmentLabelAnnotations.add(segmentLabelAnnotationsItem);
    return this;
  }

  /**
   * Topical label annotations on video level or user-specified segment level. There is exactly one element for each unique label.
   * @return segmentLabelAnnotations
   */
  @javax.annotation.Nullable
  public List<GoogleCloudVideointelligenceV1p2beta1LabelAnnotation> getSegmentLabelAnnotations() {
    return segmentLabelAnnotations;
  }

  public void setSegmentLabelAnnotations(List<GoogleCloudVideointelligenceV1p2beta1LabelAnnotation> segmentLabelAnnotations) {
    this.segmentLabelAnnotations = segmentLabelAnnotations;
  }


  public GoogleCloudVideointelligenceV1p2beta1VideoAnnotationResults segmentPresenceLabelAnnotations(List<GoogleCloudVideointelligenceV1p2beta1LabelAnnotation> segmentPresenceLabelAnnotations) {
    this.segmentPresenceLabelAnnotations = segmentPresenceLabelAnnotations;
    return this;
  }

  public GoogleCloudVideointelligenceV1p2beta1VideoAnnotationResults addSegmentPresenceLabelAnnotationsItem(GoogleCloudVideointelligenceV1p2beta1LabelAnnotation segmentPresenceLabelAnnotationsItem) {
    if (this.segmentPresenceLabelAnnotations == null) {
      this.segmentPresenceLabelAnnotations = new ArrayList<>();
    }
    this.segmentPresenceLabelAnnotations.add(segmentPresenceLabelAnnotationsItem);
    return this;
  }

  /**
   * Presence label annotations on video level or user-specified segment level. There is exactly one element for each unique label. Compared to the existing topical &#x60;segment_label_annotations&#x60;, this field presents more fine-grained, segment-level labels detected in video content and is made available only when the client sets &#x60;LabelDetectionConfig.model&#x60; to \&quot;builtin/latest\&quot; in the request.
   * @return segmentPresenceLabelAnnotations
   */
  @javax.annotation.Nullable
  public List<GoogleCloudVideointelligenceV1p2beta1LabelAnnotation> getSegmentPresenceLabelAnnotations() {
    return segmentPresenceLabelAnnotations;
  }

  public void setSegmentPresenceLabelAnnotations(List<GoogleCloudVideointelligenceV1p2beta1LabelAnnotation> segmentPresenceLabelAnnotations) {
    this.segmentPresenceLabelAnnotations = segmentPresenceLabelAnnotations;
  }


  public GoogleCloudVideointelligenceV1p2beta1VideoAnnotationResults shotAnnotations(List<GoogleCloudVideointelligenceV1p2beta1VideoSegment> shotAnnotations) {
    this.shotAnnotations = shotAnnotations;
    return this;
  }

  public GoogleCloudVideointelligenceV1p2beta1VideoAnnotationResults addShotAnnotationsItem(GoogleCloudVideointelligenceV1p2beta1VideoSegment shotAnnotationsItem) {
    if (this.shotAnnotations == null) {
      this.shotAnnotations = new ArrayList<>();
    }
    this.shotAnnotations.add(shotAnnotationsItem);
    return this;
  }

  /**
   * Shot annotations. Each shot is represented as a video segment.
   * @return shotAnnotations
   */
  @javax.annotation.Nullable
  public List<GoogleCloudVideointelligenceV1p2beta1VideoSegment> getShotAnnotations() {
    return shotAnnotations;
  }

  public void setShotAnnotations(List<GoogleCloudVideointelligenceV1p2beta1VideoSegment> shotAnnotations) {
    this.shotAnnotations = shotAnnotations;
  }


  public GoogleCloudVideointelligenceV1p2beta1VideoAnnotationResults shotLabelAnnotations(List<GoogleCloudVideointelligenceV1p2beta1LabelAnnotation> shotLabelAnnotations) {
    this.shotLabelAnnotations = shotLabelAnnotations;
    return this;
  }

  public GoogleCloudVideointelligenceV1p2beta1VideoAnnotationResults addShotLabelAnnotationsItem(GoogleCloudVideointelligenceV1p2beta1LabelAnnotation shotLabelAnnotationsItem) {
    if (this.shotLabelAnnotations == null) {
      this.shotLabelAnnotations = new ArrayList<>();
    }
    this.shotLabelAnnotations.add(shotLabelAnnotationsItem);
    return this;
  }

  /**
   * Topical label annotations on shot level. There is exactly one element for each unique label.
   * @return shotLabelAnnotations
   */
  @javax.annotation.Nullable
  public List<GoogleCloudVideointelligenceV1p2beta1LabelAnnotation> getShotLabelAnnotations() {
    return shotLabelAnnotations;
  }

  public void setShotLabelAnnotations(List<GoogleCloudVideointelligenceV1p2beta1LabelAnnotation> shotLabelAnnotations) {
    this.shotLabelAnnotations = shotLabelAnnotations;
  }


  public GoogleCloudVideointelligenceV1p2beta1VideoAnnotationResults shotPresenceLabelAnnotations(List<GoogleCloudVideointelligenceV1p2beta1LabelAnnotation> shotPresenceLabelAnnotations) {
    this.shotPresenceLabelAnnotations = shotPresenceLabelAnnotations;
    return this;
  }

  public GoogleCloudVideointelligenceV1p2beta1VideoAnnotationResults addShotPresenceLabelAnnotationsItem(GoogleCloudVideointelligenceV1p2beta1LabelAnnotation shotPresenceLabelAnnotationsItem) {
    if (this.shotPresenceLabelAnnotations == null) {
      this.shotPresenceLabelAnnotations = new ArrayList<>();
    }
    this.shotPresenceLabelAnnotations.add(shotPresenceLabelAnnotationsItem);
    return this;
  }

  /**
   * Presence label annotations on shot level. There is exactly one element for each unique label. Compared to the existing topical &#x60;shot_label_annotations&#x60;, this field presents more fine-grained, shot-level labels detected in video content and is made available only when the client sets &#x60;LabelDetectionConfig.model&#x60; to \&quot;builtin/latest\&quot; in the request.
   * @return shotPresenceLabelAnnotations
   */
  @javax.annotation.Nullable
  public List<GoogleCloudVideointelligenceV1p2beta1LabelAnnotation> getShotPresenceLabelAnnotations() {
    return shotPresenceLabelAnnotations;
  }

  public void setShotPresenceLabelAnnotations(List<GoogleCloudVideointelligenceV1p2beta1LabelAnnotation> shotPresenceLabelAnnotations) {
    this.shotPresenceLabelAnnotations = shotPresenceLabelAnnotations;
  }


  public GoogleCloudVideointelligenceV1p2beta1VideoAnnotationResults speechTranscriptions(List<GoogleCloudVideointelligenceV1p2beta1SpeechTranscription> speechTranscriptions) {
    this.speechTranscriptions = speechTranscriptions;
    return this;
  }

  public GoogleCloudVideointelligenceV1p2beta1VideoAnnotationResults addSpeechTranscriptionsItem(GoogleCloudVideointelligenceV1p2beta1SpeechTranscription speechTranscriptionsItem) {
    if (this.speechTranscriptions == null) {
      this.speechTranscriptions = new ArrayList<>();
    }
    this.speechTranscriptions.add(speechTranscriptionsItem);
    return this;
  }

  /**
   * Speech transcription.
   * @return speechTranscriptions
   */
  @javax.annotation.Nullable
  public List<GoogleCloudVideointelligenceV1p2beta1SpeechTranscription> getSpeechTranscriptions() {
    return speechTranscriptions;
  }

  public void setSpeechTranscriptions(List<GoogleCloudVideointelligenceV1p2beta1SpeechTranscription> speechTranscriptions) {
    this.speechTranscriptions = speechTranscriptions;
  }


  public GoogleCloudVideointelligenceV1p2beta1VideoAnnotationResults textAnnotations(List<GoogleCloudVideointelligenceV1p2beta1TextAnnotation> textAnnotations) {
    this.textAnnotations = textAnnotations;
    return this;
  }

  public GoogleCloudVideointelligenceV1p2beta1VideoAnnotationResults addTextAnnotationsItem(GoogleCloudVideointelligenceV1p2beta1TextAnnotation textAnnotationsItem) {
    if (this.textAnnotations == null) {
      this.textAnnotations = new ArrayList<>();
    }
    this.textAnnotations.add(textAnnotationsItem);
    return this;
  }

  /**
   * OCR text detection and tracking. Annotations for list of detected text snippets. Each will have list of frame information associated with it.
   * @return textAnnotations
   */
  @javax.annotation.Nullable
  public List<GoogleCloudVideointelligenceV1p2beta1TextAnnotation> getTextAnnotations() {
    return textAnnotations;
  }

  public void setTextAnnotations(List<GoogleCloudVideointelligenceV1p2beta1TextAnnotation> textAnnotations) {
    this.textAnnotations = textAnnotations;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudVideointelligenceV1p2beta1VideoAnnotationResults googleCloudVideointelligenceV1p2beta1VideoAnnotationResults = (GoogleCloudVideointelligenceV1p2beta1VideoAnnotationResults) o;
    return Objects.equals(this.error, googleCloudVideointelligenceV1p2beta1VideoAnnotationResults.error) &&
        Objects.equals(this.explicitAnnotation, googleCloudVideointelligenceV1p2beta1VideoAnnotationResults.explicitAnnotation) &&
        Objects.equals(this.faceAnnotations, googleCloudVideointelligenceV1p2beta1VideoAnnotationResults.faceAnnotations) &&
        Objects.equals(this.faceDetectionAnnotations, googleCloudVideointelligenceV1p2beta1VideoAnnotationResults.faceDetectionAnnotations) &&
        Objects.equals(this.frameLabelAnnotations, googleCloudVideointelligenceV1p2beta1VideoAnnotationResults.frameLabelAnnotations) &&
        Objects.equals(this.inputUri, googleCloudVideointelligenceV1p2beta1VideoAnnotationResults.inputUri) &&
        Objects.equals(this.logoRecognitionAnnotations, googleCloudVideointelligenceV1p2beta1VideoAnnotationResults.logoRecognitionAnnotations) &&
        Objects.equals(this.objectAnnotations, googleCloudVideointelligenceV1p2beta1VideoAnnotationResults.objectAnnotations) &&
        Objects.equals(this.personDetectionAnnotations, googleCloudVideointelligenceV1p2beta1VideoAnnotationResults.personDetectionAnnotations) &&
        Objects.equals(this.segment, googleCloudVideointelligenceV1p2beta1VideoAnnotationResults.segment) &&
        Objects.equals(this.segmentLabelAnnotations, googleCloudVideointelligenceV1p2beta1VideoAnnotationResults.segmentLabelAnnotations) &&
        Objects.equals(this.segmentPresenceLabelAnnotations, googleCloudVideointelligenceV1p2beta1VideoAnnotationResults.segmentPresenceLabelAnnotations) &&
        Objects.equals(this.shotAnnotations, googleCloudVideointelligenceV1p2beta1VideoAnnotationResults.shotAnnotations) &&
        Objects.equals(this.shotLabelAnnotations, googleCloudVideointelligenceV1p2beta1VideoAnnotationResults.shotLabelAnnotations) &&
        Objects.equals(this.shotPresenceLabelAnnotations, googleCloudVideointelligenceV1p2beta1VideoAnnotationResults.shotPresenceLabelAnnotations) &&
        Objects.equals(this.speechTranscriptions, googleCloudVideointelligenceV1p2beta1VideoAnnotationResults.speechTranscriptions) &&
        Objects.equals(this.textAnnotations, googleCloudVideointelligenceV1p2beta1VideoAnnotationResults.textAnnotations);
  }

  @Override
  public int hashCode() {
    return Objects.hash(error, explicitAnnotation, faceAnnotations, faceDetectionAnnotations, frameLabelAnnotations, inputUri, logoRecognitionAnnotations, objectAnnotations, personDetectionAnnotations, segment, segmentLabelAnnotations, segmentPresenceLabelAnnotations, shotAnnotations, shotLabelAnnotations, shotPresenceLabelAnnotations, speechTranscriptions, textAnnotations);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudVideointelligenceV1p2beta1VideoAnnotationResults {\n");
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("    explicitAnnotation: ").append(toIndentedString(explicitAnnotation)).append("\n");
    sb.append("    faceAnnotations: ").append(toIndentedString(faceAnnotations)).append("\n");
    sb.append("    faceDetectionAnnotations: ").append(toIndentedString(faceDetectionAnnotations)).append("\n");
    sb.append("    frameLabelAnnotations: ").append(toIndentedString(frameLabelAnnotations)).append("\n");
    sb.append("    inputUri: ").append(toIndentedString(inputUri)).append("\n");
    sb.append("    logoRecognitionAnnotations: ").append(toIndentedString(logoRecognitionAnnotations)).append("\n");
    sb.append("    objectAnnotations: ").append(toIndentedString(objectAnnotations)).append("\n");
    sb.append("    personDetectionAnnotations: ").append(toIndentedString(personDetectionAnnotations)).append("\n");
    sb.append("    segment: ").append(toIndentedString(segment)).append("\n");
    sb.append("    segmentLabelAnnotations: ").append(toIndentedString(segmentLabelAnnotations)).append("\n");
    sb.append("    segmentPresenceLabelAnnotations: ").append(toIndentedString(segmentPresenceLabelAnnotations)).append("\n");
    sb.append("    shotAnnotations: ").append(toIndentedString(shotAnnotations)).append("\n");
    sb.append("    shotLabelAnnotations: ").append(toIndentedString(shotLabelAnnotations)).append("\n");
    sb.append("    shotPresenceLabelAnnotations: ").append(toIndentedString(shotPresenceLabelAnnotations)).append("\n");
    sb.append("    speechTranscriptions: ").append(toIndentedString(speechTranscriptions)).append("\n");
    sb.append("    textAnnotations: ").append(toIndentedString(textAnnotations)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("error");
    openapiFields.add("explicitAnnotation");
    openapiFields.add("faceAnnotations");
    openapiFields.add("faceDetectionAnnotations");
    openapiFields.add("frameLabelAnnotations");
    openapiFields.add("inputUri");
    openapiFields.add("logoRecognitionAnnotations");
    openapiFields.add("objectAnnotations");
    openapiFields.add("personDetectionAnnotations");
    openapiFields.add("segment");
    openapiFields.add("segmentLabelAnnotations");
    openapiFields.add("segmentPresenceLabelAnnotations");
    openapiFields.add("shotAnnotations");
    openapiFields.add("shotLabelAnnotations");
    openapiFields.add("shotPresenceLabelAnnotations");
    openapiFields.add("speechTranscriptions");
    openapiFields.add("textAnnotations");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudVideointelligenceV1p2beta1VideoAnnotationResults
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudVideointelligenceV1p2beta1VideoAnnotationResults.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudVideointelligenceV1p2beta1VideoAnnotationResults is not found in the empty JSON string", GoogleCloudVideointelligenceV1p2beta1VideoAnnotationResults.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudVideointelligenceV1p2beta1VideoAnnotationResults.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudVideointelligenceV1p2beta1VideoAnnotationResults` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `error`
      if (jsonObj.get("error") != null && !jsonObj.get("error").isJsonNull()) {
        GoogleRpcStatus.validateJsonElement(jsonObj.get("error"));
      }
      // validate the optional field `explicitAnnotation`
      if (jsonObj.get("explicitAnnotation") != null && !jsonObj.get("explicitAnnotation").isJsonNull()) {
        GoogleCloudVideointelligenceV1p2beta1ExplicitContentAnnotation.validateJsonElement(jsonObj.get("explicitAnnotation"));
      }
      if (jsonObj.get("faceAnnotations") != null && !jsonObj.get("faceAnnotations").isJsonNull()) {
        JsonArray jsonArrayfaceAnnotations = jsonObj.getAsJsonArray("faceAnnotations");
        if (jsonArrayfaceAnnotations != null) {
          // ensure the json data is an array
          if (!jsonObj.get("faceAnnotations").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `faceAnnotations` to be an array in the JSON string but got `%s`", jsonObj.get("faceAnnotations").toString()));
          }

          // validate the optional field `faceAnnotations` (array)
          for (int i = 0; i < jsonArrayfaceAnnotations.size(); i++) {
            GoogleCloudVideointelligenceV1p2beta1FaceAnnotation.validateJsonElement(jsonArrayfaceAnnotations.get(i));
          };
        }
      }
      if (jsonObj.get("faceDetectionAnnotations") != null && !jsonObj.get("faceDetectionAnnotations").isJsonNull()) {
        JsonArray jsonArrayfaceDetectionAnnotations = jsonObj.getAsJsonArray("faceDetectionAnnotations");
        if (jsonArrayfaceDetectionAnnotations != null) {
          // ensure the json data is an array
          if (!jsonObj.get("faceDetectionAnnotations").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `faceDetectionAnnotations` to be an array in the JSON string but got `%s`", jsonObj.get("faceDetectionAnnotations").toString()));
          }

          // validate the optional field `faceDetectionAnnotations` (array)
          for (int i = 0; i < jsonArrayfaceDetectionAnnotations.size(); i++) {
            GoogleCloudVideointelligenceV1p2beta1FaceDetectionAnnotation.validateJsonElement(jsonArrayfaceDetectionAnnotations.get(i));
          };
        }
      }
      if (jsonObj.get("frameLabelAnnotations") != null && !jsonObj.get("frameLabelAnnotations").isJsonNull()) {
        JsonArray jsonArrayframeLabelAnnotations = jsonObj.getAsJsonArray("frameLabelAnnotations");
        if (jsonArrayframeLabelAnnotations != null) {
          // ensure the json data is an array
          if (!jsonObj.get("frameLabelAnnotations").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `frameLabelAnnotations` to be an array in the JSON string but got `%s`", jsonObj.get("frameLabelAnnotations").toString()));
          }

          // validate the optional field `frameLabelAnnotations` (array)
          for (int i = 0; i < jsonArrayframeLabelAnnotations.size(); i++) {
            GoogleCloudVideointelligenceV1p2beta1LabelAnnotation.validateJsonElement(jsonArrayframeLabelAnnotations.get(i));
          };
        }
      }
      if ((jsonObj.get("inputUri") != null && !jsonObj.get("inputUri").isJsonNull()) && !jsonObj.get("inputUri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `inputUri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("inputUri").toString()));
      }
      if (jsonObj.get("logoRecognitionAnnotations") != null && !jsonObj.get("logoRecognitionAnnotations").isJsonNull()) {
        JsonArray jsonArraylogoRecognitionAnnotations = jsonObj.getAsJsonArray("logoRecognitionAnnotations");
        if (jsonArraylogoRecognitionAnnotations != null) {
          // ensure the json data is an array
          if (!jsonObj.get("logoRecognitionAnnotations").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `logoRecognitionAnnotations` to be an array in the JSON string but got `%s`", jsonObj.get("logoRecognitionAnnotations").toString()));
          }

          // validate the optional field `logoRecognitionAnnotations` (array)
          for (int i = 0; i < jsonArraylogoRecognitionAnnotations.size(); i++) {
            GoogleCloudVideointelligenceV1p2beta1LogoRecognitionAnnotation.validateJsonElement(jsonArraylogoRecognitionAnnotations.get(i));
          };
        }
      }
      if (jsonObj.get("objectAnnotations") != null && !jsonObj.get("objectAnnotations").isJsonNull()) {
        JsonArray jsonArrayobjectAnnotations = jsonObj.getAsJsonArray("objectAnnotations");
        if (jsonArrayobjectAnnotations != null) {
          // ensure the json data is an array
          if (!jsonObj.get("objectAnnotations").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `objectAnnotations` to be an array in the JSON string but got `%s`", jsonObj.get("objectAnnotations").toString()));
          }

          // validate the optional field `objectAnnotations` (array)
          for (int i = 0; i < jsonArrayobjectAnnotations.size(); i++) {
            GoogleCloudVideointelligenceV1p2beta1ObjectTrackingAnnotation.validateJsonElement(jsonArrayobjectAnnotations.get(i));
          };
        }
      }
      if (jsonObj.get("personDetectionAnnotations") != null && !jsonObj.get("personDetectionAnnotations").isJsonNull()) {
        JsonArray jsonArraypersonDetectionAnnotations = jsonObj.getAsJsonArray("personDetectionAnnotations");
        if (jsonArraypersonDetectionAnnotations != null) {
          // ensure the json data is an array
          if (!jsonObj.get("personDetectionAnnotations").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `personDetectionAnnotations` to be an array in the JSON string but got `%s`", jsonObj.get("personDetectionAnnotations").toString()));
          }

          // validate the optional field `personDetectionAnnotations` (array)
          for (int i = 0; i < jsonArraypersonDetectionAnnotations.size(); i++) {
            GoogleCloudVideointelligenceV1p2beta1PersonDetectionAnnotation.validateJsonElement(jsonArraypersonDetectionAnnotations.get(i));
          };
        }
      }
      // validate the optional field `segment`
      if (jsonObj.get("segment") != null && !jsonObj.get("segment").isJsonNull()) {
        GoogleCloudVideointelligenceV1p2beta1VideoSegment.validateJsonElement(jsonObj.get("segment"));
      }
      if (jsonObj.get("segmentLabelAnnotations") != null && !jsonObj.get("segmentLabelAnnotations").isJsonNull()) {
        JsonArray jsonArraysegmentLabelAnnotations = jsonObj.getAsJsonArray("segmentLabelAnnotations");
        if (jsonArraysegmentLabelAnnotations != null) {
          // ensure the json data is an array
          if (!jsonObj.get("segmentLabelAnnotations").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `segmentLabelAnnotations` to be an array in the JSON string but got `%s`", jsonObj.get("segmentLabelAnnotations").toString()));
          }

          // validate the optional field `segmentLabelAnnotations` (array)
          for (int i = 0; i < jsonArraysegmentLabelAnnotations.size(); i++) {
            GoogleCloudVideointelligenceV1p2beta1LabelAnnotation.validateJsonElement(jsonArraysegmentLabelAnnotations.get(i));
          };
        }
      }
      if (jsonObj.get("segmentPresenceLabelAnnotations") != null && !jsonObj.get("segmentPresenceLabelAnnotations").isJsonNull()) {
        JsonArray jsonArraysegmentPresenceLabelAnnotations = jsonObj.getAsJsonArray("segmentPresenceLabelAnnotations");
        if (jsonArraysegmentPresenceLabelAnnotations != null) {
          // ensure the json data is an array
          if (!jsonObj.get("segmentPresenceLabelAnnotations").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `segmentPresenceLabelAnnotations` to be an array in the JSON string but got `%s`", jsonObj.get("segmentPresenceLabelAnnotations").toString()));
          }

          // validate the optional field `segmentPresenceLabelAnnotations` (array)
          for (int i = 0; i < jsonArraysegmentPresenceLabelAnnotations.size(); i++) {
            GoogleCloudVideointelligenceV1p2beta1LabelAnnotation.validateJsonElement(jsonArraysegmentPresenceLabelAnnotations.get(i));
          };
        }
      }
      if (jsonObj.get("shotAnnotations") != null && !jsonObj.get("shotAnnotations").isJsonNull()) {
        JsonArray jsonArrayshotAnnotations = jsonObj.getAsJsonArray("shotAnnotations");
        if (jsonArrayshotAnnotations != null) {
          // ensure the json data is an array
          if (!jsonObj.get("shotAnnotations").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `shotAnnotations` to be an array in the JSON string but got `%s`", jsonObj.get("shotAnnotations").toString()));
          }

          // validate the optional field `shotAnnotations` (array)
          for (int i = 0; i < jsonArrayshotAnnotations.size(); i++) {
            GoogleCloudVideointelligenceV1p2beta1VideoSegment.validateJsonElement(jsonArrayshotAnnotations.get(i));
          };
        }
      }
      if (jsonObj.get("shotLabelAnnotations") != null && !jsonObj.get("shotLabelAnnotations").isJsonNull()) {
        JsonArray jsonArrayshotLabelAnnotations = jsonObj.getAsJsonArray("shotLabelAnnotations");
        if (jsonArrayshotLabelAnnotations != null) {
          // ensure the json data is an array
          if (!jsonObj.get("shotLabelAnnotations").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `shotLabelAnnotations` to be an array in the JSON string but got `%s`", jsonObj.get("shotLabelAnnotations").toString()));
          }

          // validate the optional field `shotLabelAnnotations` (array)
          for (int i = 0; i < jsonArrayshotLabelAnnotations.size(); i++) {
            GoogleCloudVideointelligenceV1p2beta1LabelAnnotation.validateJsonElement(jsonArrayshotLabelAnnotations.get(i));
          };
        }
      }
      if (jsonObj.get("shotPresenceLabelAnnotations") != null && !jsonObj.get("shotPresenceLabelAnnotations").isJsonNull()) {
        JsonArray jsonArrayshotPresenceLabelAnnotations = jsonObj.getAsJsonArray("shotPresenceLabelAnnotations");
        if (jsonArrayshotPresenceLabelAnnotations != null) {
          // ensure the json data is an array
          if (!jsonObj.get("shotPresenceLabelAnnotations").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `shotPresenceLabelAnnotations` to be an array in the JSON string but got `%s`", jsonObj.get("shotPresenceLabelAnnotations").toString()));
          }

          // validate the optional field `shotPresenceLabelAnnotations` (array)
          for (int i = 0; i < jsonArrayshotPresenceLabelAnnotations.size(); i++) {
            GoogleCloudVideointelligenceV1p2beta1LabelAnnotation.validateJsonElement(jsonArrayshotPresenceLabelAnnotations.get(i));
          };
        }
      }
      if (jsonObj.get("speechTranscriptions") != null && !jsonObj.get("speechTranscriptions").isJsonNull()) {
        JsonArray jsonArrayspeechTranscriptions = jsonObj.getAsJsonArray("speechTranscriptions");
        if (jsonArrayspeechTranscriptions != null) {
          // ensure the json data is an array
          if (!jsonObj.get("speechTranscriptions").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `speechTranscriptions` to be an array in the JSON string but got `%s`", jsonObj.get("speechTranscriptions").toString()));
          }

          // validate the optional field `speechTranscriptions` (array)
          for (int i = 0; i < jsonArrayspeechTranscriptions.size(); i++) {
            GoogleCloudVideointelligenceV1p2beta1SpeechTranscription.validateJsonElement(jsonArrayspeechTranscriptions.get(i));
          };
        }
      }
      if (jsonObj.get("textAnnotations") != null && !jsonObj.get("textAnnotations").isJsonNull()) {
        JsonArray jsonArraytextAnnotations = jsonObj.getAsJsonArray("textAnnotations");
        if (jsonArraytextAnnotations != null) {
          // ensure the json data is an array
          if (!jsonObj.get("textAnnotations").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `textAnnotations` to be an array in the JSON string but got `%s`", jsonObj.get("textAnnotations").toString()));
          }

          // validate the optional field `textAnnotations` (array)
          for (int i = 0; i < jsonArraytextAnnotations.size(); i++) {
            GoogleCloudVideointelligenceV1p2beta1TextAnnotation.validateJsonElement(jsonArraytextAnnotations.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudVideointelligenceV1p2beta1VideoAnnotationResults.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudVideointelligenceV1p2beta1VideoAnnotationResults' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudVideointelligenceV1p2beta1VideoAnnotationResults> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudVideointelligenceV1p2beta1VideoAnnotationResults.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudVideointelligenceV1p2beta1VideoAnnotationResults>() {
           @Override
           public void write(JsonWriter out, GoogleCloudVideointelligenceV1p2beta1VideoAnnotationResults value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudVideointelligenceV1p2beta1VideoAnnotationResults read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudVideointelligenceV1p2beta1VideoAnnotationResults given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudVideointelligenceV1p2beta1VideoAnnotationResults
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudVideointelligenceV1p2beta1VideoAnnotationResults
   */
  public static GoogleCloudVideointelligenceV1p2beta1VideoAnnotationResults fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudVideointelligenceV1p2beta1VideoAnnotationResults.class);
  }

  /**
   * Convert an instance of GoogleCloudVideointelligenceV1p2beta1VideoAnnotationResults to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

