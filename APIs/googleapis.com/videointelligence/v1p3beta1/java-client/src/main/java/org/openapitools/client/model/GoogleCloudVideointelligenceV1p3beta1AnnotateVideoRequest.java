/*
 * Cloud Video Intelligence API
 * Detects objects, explicit content, and scene changes in videos. It also specifies the region for annotation and transcribes speech to text. Supports both asynchronous API and streaming API.
 *
 * The version of the OpenAPI document: v1p3beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudVideointelligenceV1p3beta1VideoContext;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Video annotation request.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:50:38.853834-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudVideointelligenceV1p3beta1AnnotateVideoRequest {
  /**
   * Gets or Sets features
   */
  @JsonAdapter(FeaturesEnum.Adapter.class)
  public enum FeaturesEnum {
    FEATURE_UNSPECIFIED("FEATURE_UNSPECIFIED"),
    
    LABEL_DETECTION("LABEL_DETECTION"),
    
    SHOT_CHANGE_DETECTION("SHOT_CHANGE_DETECTION"),
    
    EXPLICIT_CONTENT_DETECTION("EXPLICIT_CONTENT_DETECTION"),
    
    FACE_DETECTION("FACE_DETECTION"),
    
    SPEECH_TRANSCRIPTION("SPEECH_TRANSCRIPTION"),
    
    TEXT_DETECTION("TEXT_DETECTION"),
    
    OBJECT_TRACKING("OBJECT_TRACKING"),
    
    LOGO_RECOGNITION("LOGO_RECOGNITION"),
    
    CELEBRITY_RECOGNITION("CELEBRITY_RECOGNITION"),
    
    PERSON_DETECTION("PERSON_DETECTION");

    private String value;

    FeaturesEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static FeaturesEnum fromValue(String value) {
      for (FeaturesEnum b : FeaturesEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<FeaturesEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final FeaturesEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public FeaturesEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return FeaturesEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      FeaturesEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_FEATURES = "features";
  @SerializedName(SERIALIZED_NAME_FEATURES)
  private List<FeaturesEnum> features = new ArrayList<>();

  public static final String SERIALIZED_NAME_INPUT_CONTENT = "inputContent";
  @SerializedName(SERIALIZED_NAME_INPUT_CONTENT)
  private byte[] inputContent;

  public static final String SERIALIZED_NAME_INPUT_URI = "inputUri";
  @SerializedName(SERIALIZED_NAME_INPUT_URI)
  private String inputUri;

  public static final String SERIALIZED_NAME_LOCATION_ID = "locationId";
  @SerializedName(SERIALIZED_NAME_LOCATION_ID)
  private String locationId;

  public static final String SERIALIZED_NAME_OUTPUT_URI = "outputUri";
  @SerializedName(SERIALIZED_NAME_OUTPUT_URI)
  private String outputUri;

  public static final String SERIALIZED_NAME_VIDEO_CONTEXT = "videoContext";
  @SerializedName(SERIALIZED_NAME_VIDEO_CONTEXT)
  private GoogleCloudVideointelligenceV1p3beta1VideoContext videoContext;

  public GoogleCloudVideointelligenceV1p3beta1AnnotateVideoRequest() {
  }

  public GoogleCloudVideointelligenceV1p3beta1AnnotateVideoRequest features(List<FeaturesEnum> features) {
    this.features = features;
    return this;
  }

  public GoogleCloudVideointelligenceV1p3beta1AnnotateVideoRequest addFeaturesItem(FeaturesEnum featuresItem) {
    if (this.features == null) {
      this.features = new ArrayList<>();
    }
    this.features.add(featuresItem);
    return this;
  }

  /**
   * Required. Requested video annotation features.
   * @return features
   */
  @javax.annotation.Nullable
  public List<FeaturesEnum> getFeatures() {
    return features;
  }

  public void setFeatures(List<FeaturesEnum> features) {
    this.features = features;
  }


  public GoogleCloudVideointelligenceV1p3beta1AnnotateVideoRequest inputContent(byte[] inputContent) {
    this.inputContent = inputContent;
    return this;
  }

  /**
   * The video data bytes. If unset, the input video(s) should be specified via the &#x60;input_uri&#x60;. If set, &#x60;input_uri&#x60; must be unset.
   * @return inputContent
   */
  @javax.annotation.Nullable
  public byte[] getInputContent() {
    return inputContent;
  }

  public void setInputContent(byte[] inputContent) {
    this.inputContent = inputContent;
  }


  public GoogleCloudVideointelligenceV1p3beta1AnnotateVideoRequest inputUri(String inputUri) {
    this.inputUri = inputUri;
    return this;
  }

  /**
   * Input video location. Currently, only [Cloud Storage](https://cloud.google.com/storage/) URIs are supported. URIs must be specified in the following format: &#x60;gs://bucket-id/object-id&#x60; (other URI formats return google.rpc.Code.INVALID_ARGUMENT). For more information, see [Request URIs](https://cloud.google.com/storage/docs/request-endpoints). To identify multiple videos, a video URI may include wildcards in the &#x60;object-id&#x60;. Supported wildcards: &#39;*&#39; to match 0 or more characters; &#39;?&#39; to match 1 character. If unset, the input video should be embedded in the request as &#x60;input_content&#x60;. If set, &#x60;input_content&#x60; must be unset.
   * @return inputUri
   */
  @javax.annotation.Nullable
  public String getInputUri() {
    return inputUri;
  }

  public void setInputUri(String inputUri) {
    this.inputUri = inputUri;
  }


  public GoogleCloudVideointelligenceV1p3beta1AnnotateVideoRequest locationId(String locationId) {
    this.locationId = locationId;
    return this;
  }

  /**
   * Optional. Cloud region where annotation should take place. Supported cloud regions are: &#x60;us-east1&#x60;, &#x60;us-west1&#x60;, &#x60;europe-west1&#x60;, &#x60;asia-east1&#x60;. If no region is specified, the region will be determined based on video file location.
   * @return locationId
   */
  @javax.annotation.Nullable
  public String getLocationId() {
    return locationId;
  }

  public void setLocationId(String locationId) {
    this.locationId = locationId;
  }


  public GoogleCloudVideointelligenceV1p3beta1AnnotateVideoRequest outputUri(String outputUri) {
    this.outputUri = outputUri;
    return this;
  }

  /**
   * Optional. Location where the output (in JSON format) should be stored. Currently, only [Cloud Storage](https://cloud.google.com/storage/) URIs are supported. These must be specified in the following format: &#x60;gs://bucket-id/object-id&#x60; (other URI formats return google.rpc.Code.INVALID_ARGUMENT). For more information, see [Request URIs](https://cloud.google.com/storage/docs/request-endpoints).
   * @return outputUri
   */
  @javax.annotation.Nullable
  public String getOutputUri() {
    return outputUri;
  }

  public void setOutputUri(String outputUri) {
    this.outputUri = outputUri;
  }


  public GoogleCloudVideointelligenceV1p3beta1AnnotateVideoRequest videoContext(GoogleCloudVideointelligenceV1p3beta1VideoContext videoContext) {
    this.videoContext = videoContext;
    return this;
  }

  /**
   * Get videoContext
   * @return videoContext
   */
  @javax.annotation.Nullable
  public GoogleCloudVideointelligenceV1p3beta1VideoContext getVideoContext() {
    return videoContext;
  }

  public void setVideoContext(GoogleCloudVideointelligenceV1p3beta1VideoContext videoContext) {
    this.videoContext = videoContext;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudVideointelligenceV1p3beta1AnnotateVideoRequest googleCloudVideointelligenceV1p3beta1AnnotateVideoRequest = (GoogleCloudVideointelligenceV1p3beta1AnnotateVideoRequest) o;
    return Objects.equals(this.features, googleCloudVideointelligenceV1p3beta1AnnotateVideoRequest.features) &&
        Arrays.equals(this.inputContent, googleCloudVideointelligenceV1p3beta1AnnotateVideoRequest.inputContent) &&
        Objects.equals(this.inputUri, googleCloudVideointelligenceV1p3beta1AnnotateVideoRequest.inputUri) &&
        Objects.equals(this.locationId, googleCloudVideointelligenceV1p3beta1AnnotateVideoRequest.locationId) &&
        Objects.equals(this.outputUri, googleCloudVideointelligenceV1p3beta1AnnotateVideoRequest.outputUri) &&
        Objects.equals(this.videoContext, googleCloudVideointelligenceV1p3beta1AnnotateVideoRequest.videoContext);
  }

  @Override
  public int hashCode() {
    return Objects.hash(features, Arrays.hashCode(inputContent), inputUri, locationId, outputUri, videoContext);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudVideointelligenceV1p3beta1AnnotateVideoRequest {\n");
    sb.append("    features: ").append(toIndentedString(features)).append("\n");
    sb.append("    inputContent: ").append(toIndentedString(inputContent)).append("\n");
    sb.append("    inputUri: ").append(toIndentedString(inputUri)).append("\n");
    sb.append("    locationId: ").append(toIndentedString(locationId)).append("\n");
    sb.append("    outputUri: ").append(toIndentedString(outputUri)).append("\n");
    sb.append("    videoContext: ").append(toIndentedString(videoContext)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("features");
    openapiFields.add("inputContent");
    openapiFields.add("inputUri");
    openapiFields.add("locationId");
    openapiFields.add("outputUri");
    openapiFields.add("videoContext");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudVideointelligenceV1p3beta1AnnotateVideoRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudVideointelligenceV1p3beta1AnnotateVideoRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudVideointelligenceV1p3beta1AnnotateVideoRequest is not found in the empty JSON string", GoogleCloudVideointelligenceV1p3beta1AnnotateVideoRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudVideointelligenceV1p3beta1AnnotateVideoRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudVideointelligenceV1p3beta1AnnotateVideoRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("features") != null && !jsonObj.get("features").isJsonNull() && !jsonObj.get("features").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `features` to be an array in the JSON string but got `%s`", jsonObj.get("features").toString()));
      }
      if ((jsonObj.get("inputUri") != null && !jsonObj.get("inputUri").isJsonNull()) && !jsonObj.get("inputUri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `inputUri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("inputUri").toString()));
      }
      if ((jsonObj.get("locationId") != null && !jsonObj.get("locationId").isJsonNull()) && !jsonObj.get("locationId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `locationId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("locationId").toString()));
      }
      if ((jsonObj.get("outputUri") != null && !jsonObj.get("outputUri").isJsonNull()) && !jsonObj.get("outputUri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `outputUri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("outputUri").toString()));
      }
      // validate the optional field `videoContext`
      if (jsonObj.get("videoContext") != null && !jsonObj.get("videoContext").isJsonNull()) {
        GoogleCloudVideointelligenceV1p3beta1VideoContext.validateJsonElement(jsonObj.get("videoContext"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudVideointelligenceV1p3beta1AnnotateVideoRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudVideointelligenceV1p3beta1AnnotateVideoRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudVideointelligenceV1p3beta1AnnotateVideoRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudVideointelligenceV1p3beta1AnnotateVideoRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudVideointelligenceV1p3beta1AnnotateVideoRequest>() {
           @Override
           public void write(JsonWriter out, GoogleCloudVideointelligenceV1p3beta1AnnotateVideoRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudVideointelligenceV1p3beta1AnnotateVideoRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudVideointelligenceV1p3beta1AnnotateVideoRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudVideointelligenceV1p3beta1AnnotateVideoRequest
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudVideointelligenceV1p3beta1AnnotateVideoRequest
   */
  public static GoogleCloudVideointelligenceV1p3beta1AnnotateVideoRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudVideointelligenceV1p3beta1AnnotateVideoRequest.class);
  }

  /**
   * Convert an instance of GoogleCloudVideointelligenceV1p3beta1AnnotateVideoRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

