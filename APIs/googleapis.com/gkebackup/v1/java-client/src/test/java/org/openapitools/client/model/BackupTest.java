/*
 * Backup for GKE API
 * Backup for GKE is a managed Kubernetes workload backup and restore service for GKE clusters.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.ClusterMetadata;
import org.openapitools.client.model.EncryptionKey;
import org.openapitools.client.model.NamespacedNames;
import org.openapitools.client.model.Namespaces;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Backup
 */
public class BackupTest {
    private final Backup model = new Backup();

    /**
     * Model tests for Backup
     */
    @Test
    public void testBackup() {
        // TODO: test Backup
    }

    /**
     * Test the property 'allNamespaces'
     */
    @Test
    public void allNamespacesTest() {
        // TODO: test allNamespaces
    }

    /**
     * Test the property 'clusterMetadata'
     */
    @Test
    public void clusterMetadataTest() {
        // TODO: test clusterMetadata
    }

    /**
     * Test the property 'completeTime'
     */
    @Test
    public void completeTimeTest() {
        // TODO: test completeTime
    }

    /**
     * Test the property 'configBackupSizeBytes'
     */
    @Test
    public void configBackupSizeBytesTest() {
        // TODO: test configBackupSizeBytes
    }

    /**
     * Test the property 'containsSecrets'
     */
    @Test
    public void containsSecretsTest() {
        // TODO: test containsSecrets
    }

    /**
     * Test the property 'containsVolumeData'
     */
    @Test
    public void containsVolumeDataTest() {
        // TODO: test containsVolumeData
    }

    /**
     * Test the property 'createTime'
     */
    @Test
    public void createTimeTest() {
        // TODO: test createTime
    }

    /**
     * Test the property 'deleteLockDays'
     */
    @Test
    public void deleteLockDaysTest() {
        // TODO: test deleteLockDays
    }

    /**
     * Test the property 'deleteLockExpireTime'
     */
    @Test
    public void deleteLockExpireTimeTest() {
        // TODO: test deleteLockExpireTime
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'encryptionKey'
     */
    @Test
    public void encryptionKeyTest() {
        // TODO: test encryptionKey
    }

    /**
     * Test the property 'etag'
     */
    @Test
    public void etagTest() {
        // TODO: test etag
    }

    /**
     * Test the property 'labels'
     */
    @Test
    public void labelsTest() {
        // TODO: test labels
    }

    /**
     * Test the property 'manual'
     */
    @Test
    public void manualTest() {
        // TODO: test manual
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'podCount'
     */
    @Test
    public void podCountTest() {
        // TODO: test podCount
    }

    /**
     * Test the property 'resourceCount'
     */
    @Test
    public void resourceCountTest() {
        // TODO: test resourceCount
    }

    /**
     * Test the property 'retainDays'
     */
    @Test
    public void retainDaysTest() {
        // TODO: test retainDays
    }

    /**
     * Test the property 'retainExpireTime'
     */
    @Test
    public void retainExpireTimeTest() {
        // TODO: test retainExpireTime
    }

    /**
     * Test the property 'selectedApplications'
     */
    @Test
    public void selectedApplicationsTest() {
        // TODO: test selectedApplications
    }

    /**
     * Test the property 'selectedNamespaces'
     */
    @Test
    public void selectedNamespacesTest() {
        // TODO: test selectedNamespaces
    }

    /**
     * Test the property 'sizeBytes'
     */
    @Test
    public void sizeBytesTest() {
        // TODO: test sizeBytes
    }

    /**
     * Test the property 'state'
     */
    @Test
    public void stateTest() {
        // TODO: test state
    }

    /**
     * Test the property 'stateReason'
     */
    @Test
    public void stateReasonTest() {
        // TODO: test stateReason
    }

    /**
     * Test the property 'uid'
     */
    @Test
    public void uidTest() {
        // TODO: test uid
    }

    /**
     * Test the property 'updateTime'
     */
    @Test
    public void updateTimeTest() {
        // TODO: test updateTime
    }

    /**
     * Test the property 'volumeCount'
     */
    @Test
    public void volumeCountTest() {
        // TODO: test volumeCount
    }

}
