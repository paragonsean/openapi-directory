/*
 * Backup for GKE API
 * Backup for GKE is a managed Kubernetes workload backup and restore service for GKE clusters.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.NamespacedName;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for VolumeBackup
 */
public class VolumeBackupTest {
    private final VolumeBackup model = new VolumeBackup();

    /**
     * Model tests for VolumeBackup
     */
    @Test
    public void testVolumeBackup() {
        // TODO: test VolumeBackup
    }

    /**
     * Test the property 'completeTime'
     */
    @Test
    public void completeTimeTest() {
        // TODO: test completeTime
    }

    /**
     * Test the property 'createTime'
     */
    @Test
    public void createTimeTest() {
        // TODO: test createTime
    }

    /**
     * Test the property 'diskSizeBytes'
     */
    @Test
    public void diskSizeBytesTest() {
        // TODO: test diskSizeBytes
    }

    /**
     * Test the property 'etag'
     */
    @Test
    public void etagTest() {
        // TODO: test etag
    }

    /**
     * Test the property 'format'
     */
    @Test
    public void formatTest() {
        // TODO: test format
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'sourcePvc'
     */
    @Test
    public void sourcePvcTest() {
        // TODO: test sourcePvc
    }

    /**
     * Test the property 'state'
     */
    @Test
    public void stateTest() {
        // TODO: test state
    }

    /**
     * Test the property 'stateMessage'
     */
    @Test
    public void stateMessageTest() {
        // TODO: test stateMessage
    }

    /**
     * Test the property 'storageBytes'
     */
    @Test
    public void storageBytesTest() {
        // TODO: test storageBytes
    }

    /**
     * Test the property 'uid'
     */
    @Test
    public void uidTest() {
        // TODO: test uid
    }

    /**
     * Test the property 'updateTime'
     */
    @Test
    public void updateTimeTest() {
        // TODO: test updateTime
    }

    /**
     * Test the property 'volumeBackupHandle'
     */
    @Test
    public void volumeBackupHandleTest() {
        // TODO: test volumeBackupHandle
    }

}
