# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.namespaced_name import NamespacedName
from openapi_server import util


class NamespacedNames(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, namespaced_names: List[NamespacedName]=None):
        """NamespacedNames - a model defined in OpenAPI

        :param namespaced_names: The namespaced_names of this NamespacedNames.
        """
        self.openapi_types = {
            'namespaced_names': List[NamespacedName]
        }

        self.attribute_map = {
            'namespaced_names': 'namespacedNames'
        }

        self._namespaced_names = namespaced_names

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NamespacedNames':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NamespacedNames of this NamespacedNames.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def namespaced_names(self):
        """Gets the namespaced_names of this NamespacedNames.

        Optional. A list of namespaced Kubernetes resources.

        :return: The namespaced_names of this NamespacedNames.
        :rtype: List[NamespacedName]
        """
        return self._namespaced_names

    @namespaced_names.setter
    def namespaced_names(self, namespaced_names):
        """Sets the namespaced_names of this NamespacedNames.

        Optional. A list of namespaced Kubernetes resources.

        :param namespaced_names: The namespaced_names of this NamespacedNames.
        :type namespaced_names: List[NamespacedName]
        """

        self._namespaced_names = namespaced_names
