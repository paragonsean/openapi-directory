# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.group_kind import GroupKind
from openapi_server import util


class ClusterResourceRestoreScope(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, all_group_kinds: bool=None, excluded_group_kinds: List[GroupKind]=None, no_group_kinds: bool=None, selected_group_kinds: List[GroupKind]=None):
        """ClusterResourceRestoreScope - a model defined in OpenAPI

        :param all_group_kinds: The all_group_kinds of this ClusterResourceRestoreScope.
        :param excluded_group_kinds: The excluded_group_kinds of this ClusterResourceRestoreScope.
        :param no_group_kinds: The no_group_kinds of this ClusterResourceRestoreScope.
        :param selected_group_kinds: The selected_group_kinds of this ClusterResourceRestoreScope.
        """
        self.openapi_types = {
            'all_group_kinds': bool,
            'excluded_group_kinds': List[GroupKind],
            'no_group_kinds': bool,
            'selected_group_kinds': List[GroupKind]
        }

        self.attribute_map = {
            'all_group_kinds': 'allGroupKinds',
            'excluded_group_kinds': 'excludedGroupKinds',
            'no_group_kinds': 'noGroupKinds',
            'selected_group_kinds': 'selectedGroupKinds'
        }

        self._all_group_kinds = all_group_kinds
        self._excluded_group_kinds = excluded_group_kinds
        self._no_group_kinds = no_group_kinds
        self._selected_group_kinds = selected_group_kinds

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ClusterResourceRestoreScope':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ClusterResourceRestoreScope of this ClusterResourceRestoreScope.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def all_group_kinds(self):
        """Gets the all_group_kinds of this ClusterResourceRestoreScope.

        Optional. If True, all valid cluster-scoped resources will be restored. Mutually exclusive to any other field in the message.

        :return: The all_group_kinds of this ClusterResourceRestoreScope.
        :rtype: bool
        """
        return self._all_group_kinds

    @all_group_kinds.setter
    def all_group_kinds(self, all_group_kinds):
        """Sets the all_group_kinds of this ClusterResourceRestoreScope.

        Optional. If True, all valid cluster-scoped resources will be restored. Mutually exclusive to any other field in the message.

        :param all_group_kinds: The all_group_kinds of this ClusterResourceRestoreScope.
        :type all_group_kinds: bool
        """

        self._all_group_kinds = all_group_kinds

    @property
    def excluded_group_kinds(self):
        """Gets the excluded_group_kinds of this ClusterResourceRestoreScope.

        Optional. A list of cluster-scoped resource group kinds to NOT restore from the backup. If specified, all valid cluster-scoped resources will be restored except for those specified in the list. Mutually exclusive to any other field in the message.

        :return: The excluded_group_kinds of this ClusterResourceRestoreScope.
        :rtype: List[GroupKind]
        """
        return self._excluded_group_kinds

    @excluded_group_kinds.setter
    def excluded_group_kinds(self, excluded_group_kinds):
        """Sets the excluded_group_kinds of this ClusterResourceRestoreScope.

        Optional. A list of cluster-scoped resource group kinds to NOT restore from the backup. If specified, all valid cluster-scoped resources will be restored except for those specified in the list. Mutually exclusive to any other field in the message.

        :param excluded_group_kinds: The excluded_group_kinds of this ClusterResourceRestoreScope.
        :type excluded_group_kinds: List[GroupKind]
        """

        self._excluded_group_kinds = excluded_group_kinds

    @property
    def no_group_kinds(self):
        """Gets the no_group_kinds of this ClusterResourceRestoreScope.

        Optional. If True, no cluster-scoped resources will be restored. This has the same restore scope as if the message is not defined. Mutually exclusive to any other field in the message.

        :return: The no_group_kinds of this ClusterResourceRestoreScope.
        :rtype: bool
        """
        return self._no_group_kinds

    @no_group_kinds.setter
    def no_group_kinds(self, no_group_kinds):
        """Sets the no_group_kinds of this ClusterResourceRestoreScope.

        Optional. If True, no cluster-scoped resources will be restored. This has the same restore scope as if the message is not defined. Mutually exclusive to any other field in the message.

        :param no_group_kinds: The no_group_kinds of this ClusterResourceRestoreScope.
        :type no_group_kinds: bool
        """

        self._no_group_kinds = no_group_kinds

    @property
    def selected_group_kinds(self):
        """Gets the selected_group_kinds of this ClusterResourceRestoreScope.

        Optional. A list of cluster-scoped resource group kinds to restore from the backup. If specified, only the selected resources will be restored. Mutually exclusive to any other field in the message.

        :return: The selected_group_kinds of this ClusterResourceRestoreScope.
        :rtype: List[GroupKind]
        """
        return self._selected_group_kinds

    @selected_group_kinds.setter
    def selected_group_kinds(self, selected_group_kinds):
        """Sets the selected_group_kinds of this ClusterResourceRestoreScope.

        Optional. A list of cluster-scoped resource group kinds to restore from the backup. If specified, only the selected resources will be restored. Mutually exclusive to any other field in the message.

        :param selected_group_kinds: The selected_group_kinds of this ClusterResourceRestoreScope.
        :type selected_group_kinds: List[GroupKind]
        """

        self._selected_group_kinds = selected_group_kinds
