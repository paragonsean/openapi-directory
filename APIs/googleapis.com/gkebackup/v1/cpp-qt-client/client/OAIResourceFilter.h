/**
 * Backup for GKE API
 * Backup for GKE is a managed Kubernetes workload backup and restore service for GKE clusters.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIResourceFilter.h
 *
 * ResourceFilter specifies matching criteria to limit the scope of a change to a specific set of kubernetes resources that are selected for restoration from a backup.
 */

#ifndef OAIResourceFilter_H
#define OAIResourceFilter_H

#include <QJsonObject>

#include "OAIGroupKind.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGroupKind;

class OAIResourceFilter : public OAIObject {
public:
    OAIResourceFilter();
    OAIResourceFilter(QString json);
    ~OAIResourceFilter() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIGroupKind> getGroupKinds() const;
    void setGroupKinds(const QList<OAIGroupKind> &group_kinds);
    bool is_group_kinds_Set() const;
    bool is_group_kinds_Valid() const;

    QString getJsonPath() const;
    void setJsonPath(const QString &json_path);
    bool is_json_path_Set() const;
    bool is_json_path_Valid() const;

    QList<QString> getNamespaces() const;
    void setNamespaces(const QList<QString> &namespaces);
    bool is_namespaces_Set() const;
    bool is_namespaces_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIGroupKind> m_group_kinds;
    bool m_group_kinds_isSet;
    bool m_group_kinds_isValid;

    QString m_json_path;
    bool m_json_path_isSet;
    bool m_json_path_isValid;

    QList<QString> m_namespaces;
    bool m_namespaces_isSet;
    bool m_namespaces_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIResourceFilter)

#endif // OAIResourceFilter_H
