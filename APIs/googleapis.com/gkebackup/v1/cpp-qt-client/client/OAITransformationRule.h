/**
 * Backup for GKE API
 * Backup for GKE is a managed Kubernetes workload backup and restore service for GKE clusters.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITransformationRule.h
 *
 * A transformation rule to be applied against Kubernetes resources as they are selected for restoration from a Backup. A rule contains both filtering logic (which resources are subject to transform) and transformation logic.
 */

#ifndef OAITransformationRule_H
#define OAITransformationRule_H

#include <QJsonObject>

#include "OAIResourceFilter.h"
#include "OAITransformationRuleAction.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITransformationRuleAction;
class OAIResourceFilter;

class OAITransformationRule : public OAIObject {
public:
    OAITransformationRule();
    OAITransformationRule(QString json);
    ~OAITransformationRule() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QList<OAITransformationRuleAction> getFieldActions() const;
    void setFieldActions(const QList<OAITransformationRuleAction> &field_actions);
    bool is_field_actions_Set() const;
    bool is_field_actions_Valid() const;

    OAIResourceFilter getResourceFilter() const;
    void setResourceFilter(const OAIResourceFilter &resource_filter);
    bool is_resource_filter_Set() const;
    bool is_resource_filter_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QList<OAITransformationRuleAction> m_field_actions;
    bool m_field_actions_isSet;
    bool m_field_actions_isValid;

    OAIResourceFilter m_resource_filter;
    bool m_resource_filter_isSet;
    bool m_resource_filter_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITransformationRule)

#endif // OAITransformationRule_H
