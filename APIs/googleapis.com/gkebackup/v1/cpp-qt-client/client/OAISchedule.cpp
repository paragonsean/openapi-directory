/**
 * Backup for GKE API
 * Backup for GKE is a managed Kubernetes workload backup and restore service for GKE clusters.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISchedule.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISchedule::OAISchedule(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISchedule::OAISchedule() {
    this->initializeModel();
}

OAISchedule::~OAISchedule() {}

void OAISchedule::initializeModel() {

    m_cron_schedule_isSet = false;
    m_cron_schedule_isValid = false;

    m_paused_isSet = false;
    m_paused_isValid = false;
}

void OAISchedule::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISchedule::fromJsonObject(QJsonObject json) {

    m_cron_schedule_isValid = ::OpenAPI::fromJsonValue(m_cron_schedule, json[QString("cronSchedule")]);
    m_cron_schedule_isSet = !json[QString("cronSchedule")].isNull() && m_cron_schedule_isValid;

    m_paused_isValid = ::OpenAPI::fromJsonValue(m_paused, json[QString("paused")]);
    m_paused_isSet = !json[QString("paused")].isNull() && m_paused_isValid;
}

QString OAISchedule::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISchedule::asJsonObject() const {
    QJsonObject obj;
    if (m_cron_schedule_isSet) {
        obj.insert(QString("cronSchedule"), ::OpenAPI::toJsonValue(m_cron_schedule));
    }
    if (m_paused_isSet) {
        obj.insert(QString("paused"), ::OpenAPI::toJsonValue(m_paused));
    }
    return obj;
}

QString OAISchedule::getCronSchedule() const {
    return m_cron_schedule;
}
void OAISchedule::setCronSchedule(const QString &cron_schedule) {
    m_cron_schedule = cron_schedule;
    m_cron_schedule_isSet = true;
}

bool OAISchedule::is_cron_schedule_Set() const{
    return m_cron_schedule_isSet;
}

bool OAISchedule::is_cron_schedule_Valid() const{
    return m_cron_schedule_isValid;
}

bool OAISchedule::isPaused() const {
    return m_paused;
}
void OAISchedule::setPaused(const bool &paused) {
    m_paused = paused;
    m_paused_isSet = true;
}

bool OAISchedule::is_paused_Set() const{
    return m_paused_isSet;
}

bool OAISchedule::is_paused_Valid() const{
    return m_paused_isValid;
}

bool OAISchedule::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cron_schedule_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_paused_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISchedule::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
