/**
 * Backup for GKE API
 * Backup for GKE is a managed Kubernetes workload backup and restore service for GKE clusters.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISubstitutionRule.h
 *
 * A transformation rule to be applied against Kubernetes resources as they are selected for restoration from a Backup. A rule contains both filtering logic (which resources are subject to substitution) and substitution logic.
 */

#ifndef OAISubstitutionRule_H
#define OAISubstitutionRule_H

#include <QJsonObject>

#include "OAIGroupKind.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGroupKind;

class OAISubstitutionRule : public OAIObject {
public:
    OAISubstitutionRule();
    OAISubstitutionRule(QString json);
    ~OAISubstitutionRule() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getNewValue() const;
    void setNewValue(const QString &new_value);
    bool is_new_value_Set() const;
    bool is_new_value_Valid() const;

    QString getOriginalValuePattern() const;
    void setOriginalValuePattern(const QString &original_value_pattern);
    bool is_original_value_pattern_Set() const;
    bool is_original_value_pattern_Valid() const;

    QList<OAIGroupKind> getTargetGroupKinds() const;
    void setTargetGroupKinds(const QList<OAIGroupKind> &target_group_kinds);
    bool is_target_group_kinds_Set() const;
    bool is_target_group_kinds_Valid() const;

    QString getTargetJsonPath() const;
    void setTargetJsonPath(const QString &target_json_path);
    bool is_target_json_path_Set() const;
    bool is_target_json_path_Valid() const;

    QList<QString> getTargetNamespaces() const;
    void setTargetNamespaces(const QList<QString> &target_namespaces);
    bool is_target_namespaces_Set() const;
    bool is_target_namespaces_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_new_value;
    bool m_new_value_isSet;
    bool m_new_value_isValid;

    QString m_original_value_pattern;
    bool m_original_value_pattern_isSet;
    bool m_original_value_pattern_isValid;

    QList<OAIGroupKind> m_target_group_kinds;
    bool m_target_group_kinds_isSet;
    bool m_target_group_kinds_isValid;

    QString m_target_json_path;
    bool m_target_json_path_isSet;
    bool m_target_json_path_isValid;

    QList<QString> m_target_namespaces;
    bool m_target_namespaces_isSet;
    bool m_target_namespaces_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISubstitutionRule)

#endif // OAISubstitutionRule_H
