/**
 * Backup for GKE API
 * Backup for GKE is a managed Kubernetes workload backup and restore service for GKE clusters.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIClusterMetadata.h
 *
 * Information about the GKE cluster from which this Backup was created.
 */

#ifndef OAIClusterMetadata_H
#define OAIClusterMetadata_H

#include <QJsonObject>

#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIClusterMetadata : public OAIObject {
public:
    OAIClusterMetadata();
    OAIClusterMetadata(QString json);
    ~OAIClusterMetadata() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAnthosVersion() const;
    void setAnthosVersion(const QString &anthos_version);
    bool is_anthos_version_Set() const;
    bool is_anthos_version_Valid() const;

    QMap<QString, QString> getBackupCrdVersions() const;
    void setBackupCrdVersions(const QMap<QString, QString> &backup_crd_versions);
    bool is_backup_crd_versions_Set() const;
    bool is_backup_crd_versions_Valid() const;

    QString getCluster() const;
    void setCluster(const QString &cluster);
    bool is_cluster_Set() const;
    bool is_cluster_Valid() const;

    QString getGkeVersion() const;
    void setGkeVersion(const QString &gke_version);
    bool is_gke_version_Set() const;
    bool is_gke_version_Valid() const;

    QString getK8sVersion() const;
    void setK8sVersion(const QString &k8s_version);
    bool is_k8s_version_Set() const;
    bool is_k8s_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_anthos_version;
    bool m_anthos_version_isSet;
    bool m_anthos_version_isValid;

    QMap<QString, QString> m_backup_crd_versions;
    bool m_backup_crd_versions_isSet;
    bool m_backup_crd_versions_isValid;

    QString m_cluster;
    bool m_cluster_isSet;
    bool m_cluster_isValid;

    QString m_gke_version;
    bool m_gke_version_isSet;
    bool m_gke_version_isValid;

    QString m_k8s_version;
    bool m_k8s_version_isSet;
    bool m_k8s_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIClusterMetadata)

#endif // OAIClusterMetadata_H
