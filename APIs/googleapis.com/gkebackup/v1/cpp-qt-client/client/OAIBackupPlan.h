/**
 * Backup for GKE API
 * Backup for GKE is a managed Kubernetes workload backup and restore service for GKE clusters.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBackupPlan.h
 *
 * Defines the configuration and scheduling for a \&quot;line\&quot; of Backups.
 */

#ifndef OAIBackupPlan_H
#define OAIBackupPlan_H

#include <QJsonObject>

#include "OAIBackupConfig.h"
#include "OAIRetentionPolicy.h"
#include "OAISchedule.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBackupConfig;
class OAISchedule;
class OAIRetentionPolicy;

class OAIBackupPlan : public OAIObject {
public:
    OAIBackupPlan();
    OAIBackupPlan(QString json);
    ~OAIBackupPlan() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIBackupConfig getBackupConfig() const;
    void setBackupConfig(const OAIBackupConfig &backup_config);
    bool is_backup_config_Set() const;
    bool is_backup_config_Valid() const;

    OAISchedule getBackupSchedule() const;
    void setBackupSchedule(const OAISchedule &backup_schedule);
    bool is_backup_schedule_Set() const;
    bool is_backup_schedule_Valid() const;

    QString getCluster() const;
    void setCluster(const QString &cluster);
    bool is_cluster_Set() const;
    bool is_cluster_Valid() const;

    QString getCreateTime() const;
    void setCreateTime(const QString &create_time);
    bool is_create_time_Set() const;
    bool is_create_time_Valid() const;

    bool isDeactivated() const;
    void setDeactivated(const bool &deactivated);
    bool is_deactivated_Set() const;
    bool is_deactivated_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getEtag() const;
    void setEtag(const QString &etag);
    bool is_etag_Set() const;
    bool is_etag_Valid() const;

    QMap<QString, QString> getLabels() const;
    void setLabels(const QMap<QString, QString> &labels);
    bool is_labels_Set() const;
    bool is_labels_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint32 getProtectedPodCount() const;
    void setProtectedPodCount(const qint32 &protected_pod_count);
    bool is_protected_pod_count_Set() const;
    bool is_protected_pod_count_Valid() const;

    OAIRetentionPolicy getRetentionPolicy() const;
    void setRetentionPolicy(const OAIRetentionPolicy &retention_policy);
    bool is_retention_policy_Set() const;
    bool is_retention_policy_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QString getStateReason() const;
    void setStateReason(const QString &state_reason);
    bool is_state_reason_Set() const;
    bool is_state_reason_Valid() const;

    QString getUid() const;
    void setUid(const QString &uid);
    bool is_uid_Set() const;
    bool is_uid_Valid() const;

    QString getUpdateTime() const;
    void setUpdateTime(const QString &update_time);
    bool is_update_time_Set() const;
    bool is_update_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIBackupConfig m_backup_config;
    bool m_backup_config_isSet;
    bool m_backup_config_isValid;

    OAISchedule m_backup_schedule;
    bool m_backup_schedule_isSet;
    bool m_backup_schedule_isValid;

    QString m_cluster;
    bool m_cluster_isSet;
    bool m_cluster_isValid;

    QString m_create_time;
    bool m_create_time_isSet;
    bool m_create_time_isValid;

    bool m_deactivated;
    bool m_deactivated_isSet;
    bool m_deactivated_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_etag;
    bool m_etag_isSet;
    bool m_etag_isValid;

    QMap<QString, QString> m_labels;
    bool m_labels_isSet;
    bool m_labels_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint32 m_protected_pod_count;
    bool m_protected_pod_count_isSet;
    bool m_protected_pod_count_isValid;

    OAIRetentionPolicy m_retention_policy;
    bool m_retention_policy_isSet;
    bool m_retention_policy_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QString m_state_reason;
    bool m_state_reason_isSet;
    bool m_state_reason_isValid;

    QString m_uid;
    bool m_uid_isSet;
    bool m_uid_isValid;

    QString m_update_time;
    bool m_update_time_isSet;
    bool m_update_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBackupPlan)

#endif // OAIBackupPlan_H
