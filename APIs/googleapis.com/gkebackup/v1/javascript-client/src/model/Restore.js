/**
 * Backup for GKE API
 * Backup for GKE is a managed Kubernetes workload backup and restore service for GKE clusters.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RestoreConfig from './RestoreConfig';

/**
 * The Restore model module.
 * @module model/Restore
 * @version v1
 */
class Restore {
    /**
     * Constructs a new <code>Restore</code>.
     * Represents both a request to Restore some portion of a Backup into a target GKE cluster and a record of the restore operation itself. Next id: 20
     * @alias module:model/Restore
     */
    constructor() { 
        
        Restore.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Restore</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Restore} obj Optional instance to populate.
     * @return {module:model/Restore} The populated <code>Restore</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Restore();

            if (data.hasOwnProperty('backup')) {
                obj['backup'] = ApiClient.convertToType(data['backup'], 'String');
            }
            if (data.hasOwnProperty('cluster')) {
                obj['cluster'] = ApiClient.convertToType(data['cluster'], 'String');
            }
            if (data.hasOwnProperty('completeTime')) {
                obj['completeTime'] = ApiClient.convertToType(data['completeTime'], 'String');
            }
            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('etag')) {
                obj['etag'] = ApiClient.convertToType(data['etag'], 'String');
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ApiClient.convertToType(data['labels'], {'String': 'String'});
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('resourcesExcludedCount')) {
                obj['resourcesExcludedCount'] = ApiClient.convertToType(data['resourcesExcludedCount'], 'Number');
            }
            if (data.hasOwnProperty('resourcesFailedCount')) {
                obj['resourcesFailedCount'] = ApiClient.convertToType(data['resourcesFailedCount'], 'Number');
            }
            if (data.hasOwnProperty('resourcesRestoredCount')) {
                obj['resourcesRestoredCount'] = ApiClient.convertToType(data['resourcesRestoredCount'], 'Number');
            }
            if (data.hasOwnProperty('restoreConfig')) {
                obj['restoreConfig'] = RestoreConfig.constructFromObject(data['restoreConfig']);
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('stateReason')) {
                obj['stateReason'] = ApiClient.convertToType(data['stateReason'], 'String');
            }
            if (data.hasOwnProperty('uid')) {
                obj['uid'] = ApiClient.convertToType(data['uid'], 'String');
            }
            if (data.hasOwnProperty('updateTime')) {
                obj['updateTime'] = ApiClient.convertToType(data['updateTime'], 'String');
            }
            if (data.hasOwnProperty('volumesRestoredCount')) {
                obj['volumesRestoredCount'] = ApiClient.convertToType(data['volumesRestoredCount'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Restore</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Restore</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['backup'] && !(typeof data['backup'] === 'string' || data['backup'] instanceof String)) {
            throw new Error("Expected the field `backup` to be a primitive type in the JSON string but got " + data['backup']);
        }
        // ensure the json data is a string
        if (data['cluster'] && !(typeof data['cluster'] === 'string' || data['cluster'] instanceof String)) {
            throw new Error("Expected the field `cluster` to be a primitive type in the JSON string but got " + data['cluster']);
        }
        // ensure the json data is a string
        if (data['completeTime'] && !(typeof data['completeTime'] === 'string' || data['completeTime'] instanceof String)) {
            throw new Error("Expected the field `completeTime` to be a primitive type in the JSON string but got " + data['completeTime']);
        }
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['etag'] && !(typeof data['etag'] === 'string' || data['etag'] instanceof String)) {
            throw new Error("Expected the field `etag` to be a primitive type in the JSON string but got " + data['etag']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `restoreConfig`
        if (data['restoreConfig']) { // data not null
          RestoreConfig.validateJSON(data['restoreConfig']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // ensure the json data is a string
        if (data['stateReason'] && !(typeof data['stateReason'] === 'string' || data['stateReason'] instanceof String)) {
            throw new Error("Expected the field `stateReason` to be a primitive type in the JSON string but got " + data['stateReason']);
        }
        // ensure the json data is a string
        if (data['uid'] && !(typeof data['uid'] === 'string' || data['uid'] instanceof String)) {
            throw new Error("Expected the field `uid` to be a primitive type in the JSON string but got " + data['uid']);
        }
        // ensure the json data is a string
        if (data['updateTime'] && !(typeof data['updateTime'] === 'string' || data['updateTime'] instanceof String)) {
            throw new Error("Expected the field `updateTime` to be a primitive type in the JSON string but got " + data['updateTime']);
        }

        return true;
    }


}



/**
 * Required. Immutable. A reference to the Backup used as the source from which this Restore will restore. Note that this Backup must be a sub-resource of the RestorePlan's backup_plan. Format: `projects/_*_/locations/_*_/backupPlans/_*_/backups/_*`.
 * @member {String} backup
 */
Restore.prototype['backup'] = undefined;

/**
 * Output only. The target cluster into which this Restore will restore data. Valid formats: - `projects/_*_/locations/_*_/clusters/_*` - `projects/_*_/zones/_*_/clusters/_*` Inherited from parent RestorePlan's cluster value.
 * @member {String} cluster
 */
Restore.prototype['cluster'] = undefined;

/**
 * Output only. Timestamp of when the restore operation completed.
 * @member {String} completeTime
 */
Restore.prototype['completeTime'] = undefined;

/**
 * Output only. The timestamp when this Restore resource was created.
 * @member {String} createTime
 */
Restore.prototype['createTime'] = undefined;

/**
 * User specified descriptive string for this Restore.
 * @member {String} description
 */
Restore.prototype['description'] = undefined;

/**
 * Output only. `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a restore from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform restore updates in order to avoid race conditions: An `etag` is returned in the response to `GetRestore`, and systems are expected to put that etag in the request to `UpdateRestore` or `DeleteRestore` to ensure that their change will be applied to the same version of the resource.
 * @member {String} etag
 */
Restore.prototype['etag'] = undefined;

/**
 * A set of custom labels supplied by user.
 * @member {Object.<String, String>} labels
 */
Restore.prototype['labels'] = undefined;

/**
 * Output only. The full name of the Restore resource. Format: `projects/_*_/locations/_*_/restorePlans/_*_/restores/_*`
 * @member {String} name
 */
Restore.prototype['name'] = undefined;

/**
 * Output only. Number of resources excluded during the restore execution.
 * @member {Number} resourcesExcludedCount
 */
Restore.prototype['resourcesExcludedCount'] = undefined;

/**
 * Output only. Number of resources that failed to be restored during the restore execution.
 * @member {Number} resourcesFailedCount
 */
Restore.prototype['resourcesFailedCount'] = undefined;

/**
 * Output only. Number of resources restored during the restore execution.
 * @member {Number} resourcesRestoredCount
 */
Restore.prototype['resourcesRestoredCount'] = undefined;

/**
 * @member {module:model/RestoreConfig} restoreConfig
 */
Restore.prototype['restoreConfig'] = undefined;

/**
 * Output only. The current state of the Restore.
 * @member {module:model/Restore.StateEnum} state
 */
Restore.prototype['state'] = undefined;

/**
 * Output only. Human-readable description of why the Restore is in its current state.
 * @member {String} stateReason
 */
Restore.prototype['stateReason'] = undefined;

/**
 * Output only. Server generated global unique identifier of [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier) format.
 * @member {String} uid
 */
Restore.prototype['uid'] = undefined;

/**
 * Output only. The timestamp when this Restore resource was last updated.
 * @member {String} updateTime
 */
Restore.prototype['updateTime'] = undefined;

/**
 * Output only. Number of volumes restored during the restore execution.
 * @member {Number} volumesRestoredCount
 */
Restore.prototype['volumesRestoredCount'] = undefined;





/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
Restore['StateEnum'] = {

    /**
     * value: "STATE_UNSPECIFIED"
     * @const
     */
    "STATE_UNSPECIFIED": "STATE_UNSPECIFIED",

    /**
     * value: "CREATING"
     * @const
     */
    "CREATING": "CREATING",

    /**
     * value: "IN_PROGRESS"
     * @const
     */
    "IN_PROGRESS": "IN_PROGRESS",

    /**
     * value: "SUCCEEDED"
     * @const
     */
    "SUCCEEDED": "SUCCEEDED",

    /**
     * value: "FAILED"
     * @const
     */
    "FAILED": "FAILED",

    /**
     * value: "DELETING"
     * @const
     */
    "DELETING": "DELETING"
};



export default Restore;

