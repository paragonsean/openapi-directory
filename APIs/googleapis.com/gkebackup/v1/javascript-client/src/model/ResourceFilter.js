/**
 * Backup for GKE API
 * Backup for GKE is a managed Kubernetes workload backup and restore service for GKE clusters.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GroupKind from './GroupKind';

/**
 * The ResourceFilter model module.
 * @module model/ResourceFilter
 * @version v1
 */
class ResourceFilter {
    /**
     * Constructs a new <code>ResourceFilter</code>.
     * ResourceFilter specifies matching criteria to limit the scope of a change to a specific set of kubernetes resources that are selected for restoration from a backup.
     * @alias module:model/ResourceFilter
     */
    constructor() { 
        
        ResourceFilter.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ResourceFilter</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ResourceFilter} obj Optional instance to populate.
     * @return {module:model/ResourceFilter} The populated <code>ResourceFilter</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ResourceFilter();

            if (data.hasOwnProperty('groupKinds')) {
                obj['groupKinds'] = ApiClient.convertToType(data['groupKinds'], [GroupKind]);
            }
            if (data.hasOwnProperty('jsonPath')) {
                obj['jsonPath'] = ApiClient.convertToType(data['jsonPath'], 'String');
            }
            if (data.hasOwnProperty('namespaces')) {
                obj['namespaces'] = ApiClient.convertToType(data['namespaces'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ResourceFilter</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ResourceFilter</code>.
     */
    static validateJSON(data) {
        if (data['groupKinds']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['groupKinds'])) {
                throw new Error("Expected the field `groupKinds` to be an array in the JSON data but got " + data['groupKinds']);
            }
            // validate the optional field `groupKinds` (array)
            for (const item of data['groupKinds']) {
                GroupKind.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['jsonPath'] && !(typeof data['jsonPath'] === 'string' || data['jsonPath'] instanceof String)) {
            throw new Error("Expected the field `jsonPath` to be a primitive type in the JSON string but got " + data['jsonPath']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['namespaces'])) {
            throw new Error("Expected the field `namespaces` to be an array in the JSON data but got " + data['namespaces']);
        }

        return true;
    }


}



/**
 * Optional. (Filtering parameter) Any resource subject to transformation must belong to one of the listed \"types\". If this field is not provided, no type filtering will be performed (all resources of all types matching previous filtering parameters will be candidates for transformation).
 * @member {Array.<module:model/GroupKind>} groupKinds
 */
ResourceFilter.prototype['groupKinds'] = undefined;

/**
 * Optional. This is a [JSONPath] (https://github.com/json-path/JsonPath/blob/master/README.md) expression that matches specific fields of candidate resources and it operates as a filtering parameter (resources that are not matched with this expression will not be candidates for transformation).
 * @member {String} jsonPath
 */
ResourceFilter.prototype['jsonPath'] = undefined;

/**
 * Optional. (Filtering parameter) Any resource subject to transformation must be contained within one of the listed Kubernetes Namespace in the Backup. If this field is not provided, no namespace filtering will be performed (all resources in all Namespaces, including all cluster-scoped resources, will be candidates for transformation).
 * @member {Array.<String>} namespaces
 */
ResourceFilter.prototype['namespaces'] = undefined;






export default ResourceFilter;

