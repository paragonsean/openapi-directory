/**
 * Backup for GKE API
 * Backup for GKE is a managed Kubernetes workload backup and restore service for GKE clusters.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ClusterMetadata from './ClusterMetadata';
import EncryptionKey from './EncryptionKey';
import NamespacedNames from './NamespacedNames';
import Namespaces from './Namespaces';

/**
 * The Backup model module.
 * @module model/Backup
 * @version v1
 */
class Backup {
    /**
     * Constructs a new <code>Backup</code>.
     * Represents a request to perform a single point-in-time capture of some portion of the state of a GKE cluster, the record of the backup operation itself, and an anchor for the underlying artifacts that comprise the Backup (the config backup and VolumeBackups). Next id: 29
     * @alias module:model/Backup
     */
    constructor() { 
        
        Backup.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Backup</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Backup} obj Optional instance to populate.
     * @return {module:model/Backup} The populated <code>Backup</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Backup();

            if (data.hasOwnProperty('allNamespaces')) {
                obj['allNamespaces'] = ApiClient.convertToType(data['allNamespaces'], 'Boolean');
            }
            if (data.hasOwnProperty('clusterMetadata')) {
                obj['clusterMetadata'] = ClusterMetadata.constructFromObject(data['clusterMetadata']);
            }
            if (data.hasOwnProperty('completeTime')) {
                obj['completeTime'] = ApiClient.convertToType(data['completeTime'], 'String');
            }
            if (data.hasOwnProperty('configBackupSizeBytes')) {
                obj['configBackupSizeBytes'] = ApiClient.convertToType(data['configBackupSizeBytes'], 'String');
            }
            if (data.hasOwnProperty('containsSecrets')) {
                obj['containsSecrets'] = ApiClient.convertToType(data['containsSecrets'], 'Boolean');
            }
            if (data.hasOwnProperty('containsVolumeData')) {
                obj['containsVolumeData'] = ApiClient.convertToType(data['containsVolumeData'], 'Boolean');
            }
            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('deleteLockDays')) {
                obj['deleteLockDays'] = ApiClient.convertToType(data['deleteLockDays'], 'Number');
            }
            if (data.hasOwnProperty('deleteLockExpireTime')) {
                obj['deleteLockExpireTime'] = ApiClient.convertToType(data['deleteLockExpireTime'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('encryptionKey')) {
                obj['encryptionKey'] = EncryptionKey.constructFromObject(data['encryptionKey']);
            }
            if (data.hasOwnProperty('etag')) {
                obj['etag'] = ApiClient.convertToType(data['etag'], 'String');
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ApiClient.convertToType(data['labels'], {'String': 'String'});
            }
            if (data.hasOwnProperty('manual')) {
                obj['manual'] = ApiClient.convertToType(data['manual'], 'Boolean');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('podCount')) {
                obj['podCount'] = ApiClient.convertToType(data['podCount'], 'Number');
            }
            if (data.hasOwnProperty('resourceCount')) {
                obj['resourceCount'] = ApiClient.convertToType(data['resourceCount'], 'Number');
            }
            if (data.hasOwnProperty('retainDays')) {
                obj['retainDays'] = ApiClient.convertToType(data['retainDays'], 'Number');
            }
            if (data.hasOwnProperty('retainExpireTime')) {
                obj['retainExpireTime'] = ApiClient.convertToType(data['retainExpireTime'], 'String');
            }
            if (data.hasOwnProperty('selectedApplications')) {
                obj['selectedApplications'] = NamespacedNames.constructFromObject(data['selectedApplications']);
            }
            if (data.hasOwnProperty('selectedNamespaces')) {
                obj['selectedNamespaces'] = Namespaces.constructFromObject(data['selectedNamespaces']);
            }
            if (data.hasOwnProperty('sizeBytes')) {
                obj['sizeBytes'] = ApiClient.convertToType(data['sizeBytes'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('stateReason')) {
                obj['stateReason'] = ApiClient.convertToType(data['stateReason'], 'String');
            }
            if (data.hasOwnProperty('uid')) {
                obj['uid'] = ApiClient.convertToType(data['uid'], 'String');
            }
            if (data.hasOwnProperty('updateTime')) {
                obj['updateTime'] = ApiClient.convertToType(data['updateTime'], 'String');
            }
            if (data.hasOwnProperty('volumeCount')) {
                obj['volumeCount'] = ApiClient.convertToType(data['volumeCount'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Backup</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Backup</code>.
     */
    static validateJSON(data) {
        // validate the optional field `clusterMetadata`
        if (data['clusterMetadata']) { // data not null
          ClusterMetadata.validateJSON(data['clusterMetadata']);
        }
        // ensure the json data is a string
        if (data['completeTime'] && !(typeof data['completeTime'] === 'string' || data['completeTime'] instanceof String)) {
            throw new Error("Expected the field `completeTime` to be a primitive type in the JSON string but got " + data['completeTime']);
        }
        // ensure the json data is a string
        if (data['configBackupSizeBytes'] && !(typeof data['configBackupSizeBytes'] === 'string' || data['configBackupSizeBytes'] instanceof String)) {
            throw new Error("Expected the field `configBackupSizeBytes` to be a primitive type in the JSON string but got " + data['configBackupSizeBytes']);
        }
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // ensure the json data is a string
        if (data['deleteLockExpireTime'] && !(typeof data['deleteLockExpireTime'] === 'string' || data['deleteLockExpireTime'] instanceof String)) {
            throw new Error("Expected the field `deleteLockExpireTime` to be a primitive type in the JSON string but got " + data['deleteLockExpireTime']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // validate the optional field `encryptionKey`
        if (data['encryptionKey']) { // data not null
          EncryptionKey.validateJSON(data['encryptionKey']);
        }
        // ensure the json data is a string
        if (data['etag'] && !(typeof data['etag'] === 'string' || data['etag'] instanceof String)) {
            throw new Error("Expected the field `etag` to be a primitive type in the JSON string but got " + data['etag']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['retainExpireTime'] && !(typeof data['retainExpireTime'] === 'string' || data['retainExpireTime'] instanceof String)) {
            throw new Error("Expected the field `retainExpireTime` to be a primitive type in the JSON string but got " + data['retainExpireTime']);
        }
        // validate the optional field `selectedApplications`
        if (data['selectedApplications']) { // data not null
          NamespacedNames.validateJSON(data['selectedApplications']);
        }
        // validate the optional field `selectedNamespaces`
        if (data['selectedNamespaces']) { // data not null
          Namespaces.validateJSON(data['selectedNamespaces']);
        }
        // ensure the json data is a string
        if (data['sizeBytes'] && !(typeof data['sizeBytes'] === 'string' || data['sizeBytes'] instanceof String)) {
            throw new Error("Expected the field `sizeBytes` to be a primitive type in the JSON string but got " + data['sizeBytes']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // ensure the json data is a string
        if (data['stateReason'] && !(typeof data['stateReason'] === 'string' || data['stateReason'] instanceof String)) {
            throw new Error("Expected the field `stateReason` to be a primitive type in the JSON string but got " + data['stateReason']);
        }
        // ensure the json data is a string
        if (data['uid'] && !(typeof data['uid'] === 'string' || data['uid'] instanceof String)) {
            throw new Error("Expected the field `uid` to be a primitive type in the JSON string but got " + data['uid']);
        }
        // ensure the json data is a string
        if (data['updateTime'] && !(typeof data['updateTime'] === 'string' || data['updateTime'] instanceof String)) {
            throw new Error("Expected the field `updateTime` to be a primitive type in the JSON string but got " + data['updateTime']);
        }

        return true;
    }


}



/**
 * Output only. If True, all namespaces were included in the Backup.
 * @member {Boolean} allNamespaces
 */
Backup.prototype['allNamespaces'] = undefined;

/**
 * @member {module:model/ClusterMetadata} clusterMetadata
 */
Backup.prototype['clusterMetadata'] = undefined;

/**
 * Output only. Completion time of the Backup
 * @member {String} completeTime
 */
Backup.prototype['completeTime'] = undefined;

/**
 * Output only. The size of the config backup in bytes.
 * @member {String} configBackupSizeBytes
 */
Backup.prototype['configBackupSizeBytes'] = undefined;

/**
 * Output only. Whether or not the Backup contains Kubernetes Secrets. Controlled by the parent BackupPlan's include_secrets value.
 * @member {Boolean} containsSecrets
 */
Backup.prototype['containsSecrets'] = undefined;

/**
 * Output only. Whether or not the Backup contains volume data. Controlled by the parent BackupPlan's include_volume_data value.
 * @member {Boolean} containsVolumeData
 */
Backup.prototype['containsVolumeData'] = undefined;

/**
 * Output only. The timestamp when this Backup resource was created.
 * @member {String} createTime
 */
Backup.prototype['createTime'] = undefined;

/**
 * Optional. Minimum age for this Backup (in days). If this field is set to a non-zero value, the Backup will be \"locked\" against deletion (either manual or automatic deletion) for the number of days provided (measured from the creation time of the Backup). MUST be an integer value between 0-90 (inclusive). Defaults to parent BackupPlan's backup_delete_lock_days setting and may only be increased (either at creation time or in a subsequent update).
 * @member {Number} deleteLockDays
 */
Backup.prototype['deleteLockDays'] = undefined;

/**
 * Output only. The time at which an existing delete lock will expire for this backup (calculated from create_time + delete_lock_days).
 * @member {String} deleteLockExpireTime
 */
Backup.prototype['deleteLockExpireTime'] = undefined;

/**
 * Optional. User specified descriptive string for this Backup.
 * @member {String} description
 */
Backup.prototype['description'] = undefined;

/**
 * @member {module:model/EncryptionKey} encryptionKey
 */
Backup.prototype['encryptionKey'] = undefined;

/**
 * Output only. `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a backup from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform backup updates in order to avoid race conditions: An `etag` is returned in the response to `GetBackup`, and systems are expected to put that etag in the request to `UpdateBackup` or `DeleteBackup` to ensure that their change will be applied to the same version of the resource.
 * @member {String} etag
 */
Backup.prototype['etag'] = undefined;

/**
 * Optional. A set of custom labels supplied by user.
 * @member {Object.<String, String>} labels
 */
Backup.prototype['labels'] = undefined;

/**
 * Output only. This flag indicates whether this Backup resource was created manually by a user or via a schedule in the BackupPlan. A value of True means that the Backup was created manually.
 * @member {Boolean} manual
 */
Backup.prototype['manual'] = undefined;

/**
 * Output only. The fully qualified name of the Backup. `projects/_*_/locations/_*_/backupPlans/_*_/backups/_*`
 * @member {String} name
 */
Backup.prototype['name'] = undefined;

/**
 * Output only. The total number of Kubernetes Pods contained in the Backup.
 * @member {Number} podCount
 */
Backup.prototype['podCount'] = undefined;

/**
 * Output only. The total number of Kubernetes resources included in the Backup.
 * @member {Number} resourceCount
 */
Backup.prototype['resourceCount'] = undefined;

/**
 * Optional. The age (in days) after which this Backup will be automatically deleted. Must be an integer value >= 0: - If 0, no automatic deletion will occur for this Backup. - If not 0, this must be >= delete_lock_days and <= 365. Once a Backup is created, this value may only be increased. Defaults to the parent BackupPlan's backup_retain_days value.
 * @member {Number} retainDays
 */
Backup.prototype['retainDays'] = undefined;

/**
 * Output only. The time at which this Backup will be automatically deleted (calculated from create_time + retain_days).
 * @member {String} retainExpireTime
 */
Backup.prototype['retainExpireTime'] = undefined;

/**
 * @member {module:model/NamespacedNames} selectedApplications
 */
Backup.prototype['selectedApplications'] = undefined;

/**
 * @member {module:model/Namespaces} selectedNamespaces
 */
Backup.prototype['selectedNamespaces'] = undefined;

/**
 * Output only. The total size of the Backup in bytes = config backup size + sum(volume backup sizes)
 * @member {String} sizeBytes
 */
Backup.prototype['sizeBytes'] = undefined;

/**
 * Output only. Current state of the Backup
 * @member {module:model/Backup.StateEnum} state
 */
Backup.prototype['state'] = undefined;

/**
 * Output only. Human-readable description of why the backup is in the current `state`.
 * @member {String} stateReason
 */
Backup.prototype['stateReason'] = undefined;

/**
 * Output only. Server generated global unique identifier of [UUID4](https://en.wikipedia.org/wiki/Universally_unique_identifier)
 * @member {String} uid
 */
Backup.prototype['uid'] = undefined;

/**
 * Output only. The timestamp when this Backup resource was last updated.
 * @member {String} updateTime
 */
Backup.prototype['updateTime'] = undefined;

/**
 * Output only. The total number of volume backups contained in the Backup.
 * @member {Number} volumeCount
 */
Backup.prototype['volumeCount'] = undefined;





/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
Backup['StateEnum'] = {

    /**
     * value: "STATE_UNSPECIFIED"
     * @const
     */
    "STATE_UNSPECIFIED": "STATE_UNSPECIFIED",

    /**
     * value: "CREATING"
     * @const
     */
    "CREATING": "CREATING",

    /**
     * value: "IN_PROGRESS"
     * @const
     */
    "IN_PROGRESS": "IN_PROGRESS",

    /**
     * value: "SUCCEEDED"
     * @const
     */
    "SUCCEEDED": "SUCCEEDED",

    /**
     * value: "FAILED"
     * @const
     */
    "FAILED": "FAILED",

    /**
     * value: "DELETING"
     * @const
     */
    "DELETING": "DELETING"
};



export default Backup;

