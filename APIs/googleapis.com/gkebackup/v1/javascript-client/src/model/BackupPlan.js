/**
 * Backup for GKE API
 * Backup for GKE is a managed Kubernetes workload backup and restore service for GKE clusters.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BackupConfig from './BackupConfig';
import RetentionPolicy from './RetentionPolicy';
import Schedule from './Schedule';

/**
 * The BackupPlan model module.
 * @module model/BackupPlan
 * @version v1
 */
class BackupPlan {
    /**
     * Constructs a new <code>BackupPlan</code>.
     * Defines the configuration and scheduling for a \&quot;line\&quot; of Backups.
     * @alias module:model/BackupPlan
     */
    constructor() { 
        
        BackupPlan.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BackupPlan</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BackupPlan} obj Optional instance to populate.
     * @return {module:model/BackupPlan} The populated <code>BackupPlan</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BackupPlan();

            if (data.hasOwnProperty('backupConfig')) {
                obj['backupConfig'] = BackupConfig.constructFromObject(data['backupConfig']);
            }
            if (data.hasOwnProperty('backupSchedule')) {
                obj['backupSchedule'] = Schedule.constructFromObject(data['backupSchedule']);
            }
            if (data.hasOwnProperty('cluster')) {
                obj['cluster'] = ApiClient.convertToType(data['cluster'], 'String');
            }
            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('deactivated')) {
                obj['deactivated'] = ApiClient.convertToType(data['deactivated'], 'Boolean');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('etag')) {
                obj['etag'] = ApiClient.convertToType(data['etag'], 'String');
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ApiClient.convertToType(data['labels'], {'String': 'String'});
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('protectedPodCount')) {
                obj['protectedPodCount'] = ApiClient.convertToType(data['protectedPodCount'], 'Number');
            }
            if (data.hasOwnProperty('retentionPolicy')) {
                obj['retentionPolicy'] = RetentionPolicy.constructFromObject(data['retentionPolicy']);
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('stateReason')) {
                obj['stateReason'] = ApiClient.convertToType(data['stateReason'], 'String');
            }
            if (data.hasOwnProperty('uid')) {
                obj['uid'] = ApiClient.convertToType(data['uid'], 'String');
            }
            if (data.hasOwnProperty('updateTime')) {
                obj['updateTime'] = ApiClient.convertToType(data['updateTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BackupPlan</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BackupPlan</code>.
     */
    static validateJSON(data) {
        // validate the optional field `backupConfig`
        if (data['backupConfig']) { // data not null
          BackupConfig.validateJSON(data['backupConfig']);
        }
        // validate the optional field `backupSchedule`
        if (data['backupSchedule']) { // data not null
          Schedule.validateJSON(data['backupSchedule']);
        }
        // ensure the json data is a string
        if (data['cluster'] && !(typeof data['cluster'] === 'string' || data['cluster'] instanceof String)) {
            throw new Error("Expected the field `cluster` to be a primitive type in the JSON string but got " + data['cluster']);
        }
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['etag'] && !(typeof data['etag'] === 'string' || data['etag'] instanceof String)) {
            throw new Error("Expected the field `etag` to be a primitive type in the JSON string but got " + data['etag']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `retentionPolicy`
        if (data['retentionPolicy']) { // data not null
          RetentionPolicy.validateJSON(data['retentionPolicy']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // ensure the json data is a string
        if (data['stateReason'] && !(typeof data['stateReason'] === 'string' || data['stateReason'] instanceof String)) {
            throw new Error("Expected the field `stateReason` to be a primitive type in the JSON string but got " + data['stateReason']);
        }
        // ensure the json data is a string
        if (data['uid'] && !(typeof data['uid'] === 'string' || data['uid'] instanceof String)) {
            throw new Error("Expected the field `uid` to be a primitive type in the JSON string but got " + data['uid']);
        }
        // ensure the json data is a string
        if (data['updateTime'] && !(typeof data['updateTime'] === 'string' || data['updateTime'] instanceof String)) {
            throw new Error("Expected the field `updateTime` to be a primitive type in the JSON string but got " + data['updateTime']);
        }

        return true;
    }


}



/**
 * @member {module:model/BackupConfig} backupConfig
 */
BackupPlan.prototype['backupConfig'] = undefined;

/**
 * @member {module:model/Schedule} backupSchedule
 */
BackupPlan.prototype['backupSchedule'] = undefined;

/**
 * Required. Immutable. The source cluster from which Backups will be created via this BackupPlan. Valid formats: - `projects/_*_/locations/_*_/clusters/_*` - `projects/_*_/zones/_*_/clusters/_*`
 * @member {String} cluster
 */
BackupPlan.prototype['cluster'] = undefined;

/**
 * Output only. The timestamp when this BackupPlan resource was created.
 * @member {String} createTime
 */
BackupPlan.prototype['createTime'] = undefined;

/**
 * Optional. This flag indicates whether this BackupPlan has been deactivated. Setting this field to True locks the BackupPlan such that no further updates will be allowed (except deletes), including the deactivated field itself. It also prevents any new Backups from being created via this BackupPlan (including scheduled Backups). Default: False
 * @member {Boolean} deactivated
 */
BackupPlan.prototype['deactivated'] = undefined;

/**
 * Optional. User specified descriptive string for this BackupPlan.
 * @member {String} description
 */
BackupPlan.prototype['description'] = undefined;

/**
 * Output only. `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a backup plan from overwriting each other. It is strongly suggested that systems make use of the 'etag' in the read-modify-write cycle to perform BackupPlan updates in order to avoid race conditions: An `etag` is returned in the response to `GetBackupPlan`, and systems are expected to put that etag in the request to `UpdateBackupPlan` or `DeleteBackupPlan` to ensure that their change will be applied to the same version of the resource.
 * @member {String} etag
 */
BackupPlan.prototype['etag'] = undefined;

/**
 * Optional. A set of custom labels supplied by user.
 * @member {Object.<String, String>} labels
 */
BackupPlan.prototype['labels'] = undefined;

/**
 * Output only. The full name of the BackupPlan resource. Format: `projects/_*_/locations/_*_/backupPlans/_*`
 * @member {String} name
 */
BackupPlan.prototype['name'] = undefined;

/**
 * Output only. The number of Kubernetes Pods backed up in the last successful Backup created via this BackupPlan.
 * @member {Number} protectedPodCount
 */
BackupPlan.prototype['protectedPodCount'] = undefined;

/**
 * @member {module:model/RetentionPolicy} retentionPolicy
 */
BackupPlan.prototype['retentionPolicy'] = undefined;

/**
 * Output only. State of the BackupPlan. This State field reflects the various stages a BackupPlan can be in during the Create operation. It will be set to \"DEACTIVATED\" if the BackupPlan is deactivated on an Update
 * @member {module:model/BackupPlan.StateEnum} state
 */
BackupPlan.prototype['state'] = undefined;

/**
 * Output only. Human-readable description of why BackupPlan is in the current `state`
 * @member {String} stateReason
 */
BackupPlan.prototype['stateReason'] = undefined;

/**
 * Output only. Server generated global unique identifier of [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier) format.
 * @member {String} uid
 */
BackupPlan.prototype['uid'] = undefined;

/**
 * Output only. The timestamp when this BackupPlan resource was last updated.
 * @member {String} updateTime
 */
BackupPlan.prototype['updateTime'] = undefined;





/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
BackupPlan['StateEnum'] = {

    /**
     * value: "STATE_UNSPECIFIED"
     * @const
     */
    "STATE_UNSPECIFIED": "STATE_UNSPECIFIED",

    /**
     * value: "CLUSTER_PENDING"
     * @const
     */
    "CLUSTER_PENDING": "CLUSTER_PENDING",

    /**
     * value: "PROVISIONING"
     * @const
     */
    "PROVISIONING": "PROVISIONING",

    /**
     * value: "READY"
     * @const
     */
    "READY": "READY",

    /**
     * value: "FAILED"
     * @const
     */
    "FAILED": "FAILED",

    /**
     * value: "DEACTIVATED"
     * @const
     */
    "DEACTIVATED": "DEACTIVATED",

    /**
     * value: "DELETING"
     * @const
     */
    "DELETING": "DELETING"
};



export default BackupPlan;

