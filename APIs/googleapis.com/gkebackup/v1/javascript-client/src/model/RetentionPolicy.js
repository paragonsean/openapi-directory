/**
 * Backup for GKE API
 * Backup for GKE is a managed Kubernetes workload backup and restore service for GKE clusters.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RetentionPolicy model module.
 * @module model/RetentionPolicy
 * @version v1
 */
class RetentionPolicy {
    /**
     * Constructs a new <code>RetentionPolicy</code>.
     * RetentionPolicy defines a Backup retention policy for a BackupPlan.
     * @alias module:model/RetentionPolicy
     */
    constructor() { 
        
        RetentionPolicy.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RetentionPolicy</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RetentionPolicy} obj Optional instance to populate.
     * @return {module:model/RetentionPolicy} The populated <code>RetentionPolicy</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RetentionPolicy();

            if (data.hasOwnProperty('backupDeleteLockDays')) {
                obj['backupDeleteLockDays'] = ApiClient.convertToType(data['backupDeleteLockDays'], 'Number');
            }
            if (data.hasOwnProperty('backupRetainDays')) {
                obj['backupRetainDays'] = ApiClient.convertToType(data['backupRetainDays'], 'Number');
            }
            if (data.hasOwnProperty('locked')) {
                obj['locked'] = ApiClient.convertToType(data['locked'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RetentionPolicy</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RetentionPolicy</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * Optional. Minimum age for Backups created via this BackupPlan (in days). This field MUST be an integer value between 0-90 (inclusive). A Backup created under this BackupPlan will NOT be deletable until it reaches Backup's (create_time + backup_delete_lock_days). Updating this field of a BackupPlan does NOT affect existing Backups under it. Backups created AFTER a successful update will inherit the new value. Default: 0 (no delete blocking)
 * @member {Number} backupDeleteLockDays
 */
RetentionPolicy.prototype['backupDeleteLockDays'] = undefined;

/**
 * Optional. The default maximum age of a Backup created via this BackupPlan. This field MUST be an integer value >= 0 and <= 365. If specified, a Backup created under this BackupPlan will be automatically deleted after its age reaches (create_time + backup_retain_days). If not specified, Backups created under this BackupPlan will NOT be subject to automatic deletion. Updating this field does NOT affect existing Backups under it. Backups created AFTER a successful update will automatically pick up the new value. NOTE: backup_retain_days must be >= backup_delete_lock_days. If cron_schedule is defined, then this must be <= 360 * the creation interval. If rpo_config is defined, then this must be <= 360 * target_rpo_minutes / (1440minutes/day). Default: 0 (no automatic deletion)
 * @member {Number} backupRetainDays
 */
RetentionPolicy.prototype['backupRetainDays'] = undefined;

/**
 * Optional. This flag denotes whether the retention policy of this BackupPlan is locked. If set to True, no further update is allowed on this policy, including the `locked` field itself. Default: False
 * @member {Boolean} locked
 */
RetentionPolicy.prototype['locked'] = undefined;






export default RetentionPolicy;

