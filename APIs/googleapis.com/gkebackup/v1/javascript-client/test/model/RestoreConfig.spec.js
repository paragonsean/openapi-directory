/**
 * Backup for GKE API
 * Backup for GKE is a managed Kubernetes workload backup and restore service for GKE clusters.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BackupForGkeApi);
  }
}(this, function(expect, BackupForGkeApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new BackupForGkeApi.RestoreConfig();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('RestoreConfig', function() {
    it('should create an instance of RestoreConfig', function() {
      // uncomment below and update the code to test RestoreConfig
      //var instance = new BackupForGkeApi.RestoreConfig();
      //expect(instance).to.be.a(BackupForGkeApi.RestoreConfig);
    });

    it('should have the property allNamespaces (base name: "allNamespaces")', function() {
      // uncomment below and update the code to test the property allNamespaces
      //var instance = new BackupForGkeApi.RestoreConfig();
      //expect(instance).to.be();
    });

    it('should have the property clusterResourceConflictPolicy (base name: "clusterResourceConflictPolicy")', function() {
      // uncomment below and update the code to test the property clusterResourceConflictPolicy
      //var instance = new BackupForGkeApi.RestoreConfig();
      //expect(instance).to.be();
    });

    it('should have the property clusterResourceRestoreScope (base name: "clusterResourceRestoreScope")', function() {
      // uncomment below and update the code to test the property clusterResourceRestoreScope
      //var instance = new BackupForGkeApi.RestoreConfig();
      //expect(instance).to.be();
    });

    it('should have the property excludedNamespaces (base name: "excludedNamespaces")', function() {
      // uncomment below and update the code to test the property excludedNamespaces
      //var instance = new BackupForGkeApi.RestoreConfig();
      //expect(instance).to.be();
    });

    it('should have the property namespacedResourceRestoreMode (base name: "namespacedResourceRestoreMode")', function() {
      // uncomment below and update the code to test the property namespacedResourceRestoreMode
      //var instance = new BackupForGkeApi.RestoreConfig();
      //expect(instance).to.be();
    });

    it('should have the property noNamespaces (base name: "noNamespaces")', function() {
      // uncomment below and update the code to test the property noNamespaces
      //var instance = new BackupForGkeApi.RestoreConfig();
      //expect(instance).to.be();
    });

    it('should have the property selectedApplications (base name: "selectedApplications")', function() {
      // uncomment below and update the code to test the property selectedApplications
      //var instance = new BackupForGkeApi.RestoreConfig();
      //expect(instance).to.be();
    });

    it('should have the property selectedNamespaces (base name: "selectedNamespaces")', function() {
      // uncomment below and update the code to test the property selectedNamespaces
      //var instance = new BackupForGkeApi.RestoreConfig();
      //expect(instance).to.be();
    });

    it('should have the property substitutionRules (base name: "substitutionRules")', function() {
      // uncomment below and update the code to test the property substitutionRules
      //var instance = new BackupForGkeApi.RestoreConfig();
      //expect(instance).to.be();
    });

    it('should have the property transformationRules (base name: "transformationRules")', function() {
      // uncomment below and update the code to test the property transformationRules
      //var instance = new BackupForGkeApi.RestoreConfig();
      //expect(instance).to.be();
    });

    it('should have the property volumeDataRestorePolicy (base name: "volumeDataRestorePolicy")', function() {
      // uncomment below and update the code to test the property volumeDataRestorePolicy
      //var instance = new BackupForGkeApi.RestoreConfig();
      //expect(instance).to.be();
    });

  });

}));
