/**
 * Backup for GKE API
 * Backup for GKE is a managed Kubernetes workload backup and restore service for GKE clusters.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BackupForGkeApi);
  }
}(this, function(expect, BackupForGkeApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new BackupForGkeApi.ProjectsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ProjectsApi', function() {
    describe('gkebackupProjectsLocationsBackupPlansBackupsCreate', function() {
      it('should call gkebackupProjectsLocationsBackupPlansBackupsCreate successfully', function(done) {
        //uncomment below and update the code to test gkebackupProjectsLocationsBackupPlansBackupsCreate
        //instance.gkebackupProjectsLocationsBackupPlansBackupsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gkebackupProjectsLocationsBackupPlansBackupsList', function() {
      it('should call gkebackupProjectsLocationsBackupPlansBackupsList successfully', function(done) {
        //uncomment below and update the code to test gkebackupProjectsLocationsBackupPlansBackupsList
        //instance.gkebackupProjectsLocationsBackupPlansBackupsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gkebackupProjectsLocationsBackupPlansBackupsVolumeBackupsList', function() {
      it('should call gkebackupProjectsLocationsBackupPlansBackupsVolumeBackupsList successfully', function(done) {
        //uncomment below and update the code to test gkebackupProjectsLocationsBackupPlansBackupsVolumeBackupsList
        //instance.gkebackupProjectsLocationsBackupPlansBackupsVolumeBackupsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gkebackupProjectsLocationsBackupPlansCreate', function() {
      it('should call gkebackupProjectsLocationsBackupPlansCreate successfully', function(done) {
        //uncomment below and update the code to test gkebackupProjectsLocationsBackupPlansCreate
        //instance.gkebackupProjectsLocationsBackupPlansCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gkebackupProjectsLocationsBackupPlansList', function() {
      it('should call gkebackupProjectsLocationsBackupPlansList successfully', function(done) {
        //uncomment below and update the code to test gkebackupProjectsLocationsBackupPlansList
        //instance.gkebackupProjectsLocationsBackupPlansList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gkebackupProjectsLocationsList', function() {
      it('should call gkebackupProjectsLocationsList successfully', function(done) {
        //uncomment below and update the code to test gkebackupProjectsLocationsList
        //instance.gkebackupProjectsLocationsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gkebackupProjectsLocationsOperationsCancel', function() {
      it('should call gkebackupProjectsLocationsOperationsCancel successfully', function(done) {
        //uncomment below and update the code to test gkebackupProjectsLocationsOperationsCancel
        //instance.gkebackupProjectsLocationsOperationsCancel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gkebackupProjectsLocationsOperationsList', function() {
      it('should call gkebackupProjectsLocationsOperationsList successfully', function(done) {
        //uncomment below and update the code to test gkebackupProjectsLocationsOperationsList
        //instance.gkebackupProjectsLocationsOperationsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gkebackupProjectsLocationsRestorePlansCreate', function() {
      it('should call gkebackupProjectsLocationsRestorePlansCreate successfully', function(done) {
        //uncomment below and update the code to test gkebackupProjectsLocationsRestorePlansCreate
        //instance.gkebackupProjectsLocationsRestorePlansCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gkebackupProjectsLocationsRestorePlansList', function() {
      it('should call gkebackupProjectsLocationsRestorePlansList successfully', function(done) {
        //uncomment below and update the code to test gkebackupProjectsLocationsRestorePlansList
        //instance.gkebackupProjectsLocationsRestorePlansList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gkebackupProjectsLocationsRestorePlansRestoresCreate', function() {
      it('should call gkebackupProjectsLocationsRestorePlansRestoresCreate successfully', function(done) {
        //uncomment below and update the code to test gkebackupProjectsLocationsRestorePlansRestoresCreate
        //instance.gkebackupProjectsLocationsRestorePlansRestoresCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gkebackupProjectsLocationsRestorePlansRestoresDelete', function() {
      it('should call gkebackupProjectsLocationsRestorePlansRestoresDelete successfully', function(done) {
        //uncomment below and update the code to test gkebackupProjectsLocationsRestorePlansRestoresDelete
        //instance.gkebackupProjectsLocationsRestorePlansRestoresDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gkebackupProjectsLocationsRestorePlansRestoresList', function() {
      it('should call gkebackupProjectsLocationsRestorePlansRestoresList successfully', function(done) {
        //uncomment below and update the code to test gkebackupProjectsLocationsRestorePlansRestoresList
        //instance.gkebackupProjectsLocationsRestorePlansRestoresList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gkebackupProjectsLocationsRestorePlansRestoresPatch', function() {
      it('should call gkebackupProjectsLocationsRestorePlansRestoresPatch successfully', function(done) {
        //uncomment below and update the code to test gkebackupProjectsLocationsRestorePlansRestoresPatch
        //instance.gkebackupProjectsLocationsRestorePlansRestoresPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gkebackupProjectsLocationsRestorePlansRestoresVolumeRestoresGet', function() {
      it('should call gkebackupProjectsLocationsRestorePlansRestoresVolumeRestoresGet successfully', function(done) {
        //uncomment below and update the code to test gkebackupProjectsLocationsRestorePlansRestoresVolumeRestoresGet
        //instance.gkebackupProjectsLocationsRestorePlansRestoresVolumeRestoresGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gkebackupProjectsLocationsRestorePlansRestoresVolumeRestoresGetIamPolicy', function() {
      it('should call gkebackupProjectsLocationsRestorePlansRestoresVolumeRestoresGetIamPolicy successfully', function(done) {
        //uncomment below and update the code to test gkebackupProjectsLocationsRestorePlansRestoresVolumeRestoresGetIamPolicy
        //instance.gkebackupProjectsLocationsRestorePlansRestoresVolumeRestoresGetIamPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gkebackupProjectsLocationsRestorePlansRestoresVolumeRestoresList', function() {
      it('should call gkebackupProjectsLocationsRestorePlansRestoresVolumeRestoresList successfully', function(done) {
        //uncomment below and update the code to test gkebackupProjectsLocationsRestorePlansRestoresVolumeRestoresList
        //instance.gkebackupProjectsLocationsRestorePlansRestoresVolumeRestoresList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gkebackupProjectsLocationsRestorePlansRestoresVolumeRestoresSetIamPolicy', function() {
      it('should call gkebackupProjectsLocationsRestorePlansRestoresVolumeRestoresSetIamPolicy successfully', function(done) {
        //uncomment below and update the code to test gkebackupProjectsLocationsRestorePlansRestoresVolumeRestoresSetIamPolicy
        //instance.gkebackupProjectsLocationsRestorePlansRestoresVolumeRestoresSetIamPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gkebackupProjectsLocationsRestorePlansRestoresVolumeRestoresTestIamPermissions', function() {
      it('should call gkebackupProjectsLocationsRestorePlansRestoresVolumeRestoresTestIamPermissions successfully', function(done) {
        //uncomment below and update the code to test gkebackupProjectsLocationsRestorePlansRestoresVolumeRestoresTestIamPermissions
        //instance.gkebackupProjectsLocationsRestorePlansRestoresVolumeRestoresTestIamPermissions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
