# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_ads_searchads360_v0_common_value import GoogleAdsSearchads360V0CommonValue
from openapi_server import util


class GoogleAdsSearchads360V0CommonMetrics(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, absolute_top_impression_percentage: float=None, all_conversions: float=None, all_conversions_by_conversion_date: float=None, all_conversions_from_click_to_call: float=None, all_conversions_from_directions: float=None, all_conversions_from_interactions_rate: float=None, all_conversions_from_interactions_value_per_interaction: float=None, all_conversions_from_menu: float=None, all_conversions_from_order: float=None, all_conversions_from_other_engagement: float=None, all_conversions_from_store_visit: float=None, all_conversions_from_store_website: float=None, all_conversions_value: float=None, all_conversions_value_by_conversion_date: float=None, all_conversions_value_per_cost: float=None, average_cost: float=None, average_cpc: float=None, average_cpm: float=None, clicks: str=None, client_account_conversions: float=None, client_account_conversions_value: float=None, client_account_cross_sell_cost_of_goods_sold_micros: str=None, client_account_cross_sell_gross_profit_micros: str=None, client_account_cross_sell_revenue_micros: str=None, client_account_cross_sell_units_sold: float=None, client_account_lead_cost_of_goods_sold_micros: str=None, client_account_lead_gross_profit_micros: str=None, client_account_lead_revenue_micros: str=None, client_account_lead_units_sold: float=None, client_account_view_through_conversions: str=None, content_budget_lost_impression_share: float=None, content_impression_share: float=None, content_rank_lost_impression_share: float=None, conversion_custom_metrics: List[GoogleAdsSearchads360V0CommonValue]=None, conversions: float=None, conversions_by_conversion_date: float=None, conversions_from_interactions_rate: float=None, conversions_from_interactions_value_per_interaction: float=None, conversions_value: float=None, conversions_value_by_conversion_date: float=None, conversions_value_per_cost: float=None, cost_micros: str=None, cost_per_all_conversions: float=None, cost_per_conversion: float=None, cost_per_current_model_attributed_conversion: float=None, cross_device_conversions: float=None, cross_device_conversions_value: float=None, cross_sell_cost_of_goods_sold_micros: str=None, cross_sell_gross_profit_micros: str=None, cross_sell_revenue_micros: str=None, cross_sell_units_sold: float=None, ctr: float=None, historical_creative_quality_score: str=None, historical_landing_page_quality_score: str=None, historical_quality_score: str=None, historical_search_predicted_ctr: str=None, impressions: str=None, interaction_event_types: List[str]=None, interaction_rate: float=None, interactions: str=None, invalid_click_rate: float=None, invalid_clicks: str=None, lead_cost_of_goods_sold_micros: str=None, lead_gross_profit_micros: str=None, lead_revenue_micros: str=None, lead_units_sold: float=None, mobile_friendly_clicks_percentage: float=None, raw_event_conversion_metrics: List[GoogleAdsSearchads360V0CommonValue]=None, search_absolute_top_impression_share: float=None, search_budget_lost_absolute_top_impression_share: float=None, search_budget_lost_impression_share: float=None, search_budget_lost_top_impression_share: float=None, search_click_share: float=None, search_exact_match_impression_share: float=None, search_impression_share: float=None, search_rank_lost_absolute_top_impression_share: float=None, search_rank_lost_impression_share: float=None, search_rank_lost_top_impression_share: float=None, search_top_impression_share: float=None, top_impression_percentage: float=None, value_per_all_conversions: float=None, value_per_all_conversions_by_conversion_date: float=None, value_per_conversion: float=None, value_per_conversions_by_conversion_date: float=None, visits: float=None):
        """GoogleAdsSearchads360V0CommonMetrics - a model defined in OpenAPI

        :param absolute_top_impression_percentage: The absolute_top_impression_percentage of this GoogleAdsSearchads360V0CommonMetrics.
        :param all_conversions: The all_conversions of this GoogleAdsSearchads360V0CommonMetrics.
        :param all_conversions_by_conversion_date: The all_conversions_by_conversion_date of this GoogleAdsSearchads360V0CommonMetrics.
        :param all_conversions_from_click_to_call: The all_conversions_from_click_to_call of this GoogleAdsSearchads360V0CommonMetrics.
        :param all_conversions_from_directions: The all_conversions_from_directions of this GoogleAdsSearchads360V0CommonMetrics.
        :param all_conversions_from_interactions_rate: The all_conversions_from_interactions_rate of this GoogleAdsSearchads360V0CommonMetrics.
        :param all_conversions_from_interactions_value_per_interaction: The all_conversions_from_interactions_value_per_interaction of this GoogleAdsSearchads360V0CommonMetrics.
        :param all_conversions_from_menu: The all_conversions_from_menu of this GoogleAdsSearchads360V0CommonMetrics.
        :param all_conversions_from_order: The all_conversions_from_order of this GoogleAdsSearchads360V0CommonMetrics.
        :param all_conversions_from_other_engagement: The all_conversions_from_other_engagement of this GoogleAdsSearchads360V0CommonMetrics.
        :param all_conversions_from_store_visit: The all_conversions_from_store_visit of this GoogleAdsSearchads360V0CommonMetrics.
        :param all_conversions_from_store_website: The all_conversions_from_store_website of this GoogleAdsSearchads360V0CommonMetrics.
        :param all_conversions_value: The all_conversions_value of this GoogleAdsSearchads360V0CommonMetrics.
        :param all_conversions_value_by_conversion_date: The all_conversions_value_by_conversion_date of this GoogleAdsSearchads360V0CommonMetrics.
        :param all_conversions_value_per_cost: The all_conversions_value_per_cost of this GoogleAdsSearchads360V0CommonMetrics.
        :param average_cost: The average_cost of this GoogleAdsSearchads360V0CommonMetrics.
        :param average_cpc: The average_cpc of this GoogleAdsSearchads360V0CommonMetrics.
        :param average_cpm: The average_cpm of this GoogleAdsSearchads360V0CommonMetrics.
        :param clicks: The clicks of this GoogleAdsSearchads360V0CommonMetrics.
        :param client_account_conversions: The client_account_conversions of this GoogleAdsSearchads360V0CommonMetrics.
        :param client_account_conversions_value: The client_account_conversions_value of this GoogleAdsSearchads360V0CommonMetrics.
        :param client_account_cross_sell_cost_of_goods_sold_micros: The client_account_cross_sell_cost_of_goods_sold_micros of this GoogleAdsSearchads360V0CommonMetrics.
        :param client_account_cross_sell_gross_profit_micros: The client_account_cross_sell_gross_profit_micros of this GoogleAdsSearchads360V0CommonMetrics.
        :param client_account_cross_sell_revenue_micros: The client_account_cross_sell_revenue_micros of this GoogleAdsSearchads360V0CommonMetrics.
        :param client_account_cross_sell_units_sold: The client_account_cross_sell_units_sold of this GoogleAdsSearchads360V0CommonMetrics.
        :param client_account_lead_cost_of_goods_sold_micros: The client_account_lead_cost_of_goods_sold_micros of this GoogleAdsSearchads360V0CommonMetrics.
        :param client_account_lead_gross_profit_micros: The client_account_lead_gross_profit_micros of this GoogleAdsSearchads360V0CommonMetrics.
        :param client_account_lead_revenue_micros: The client_account_lead_revenue_micros of this GoogleAdsSearchads360V0CommonMetrics.
        :param client_account_lead_units_sold: The client_account_lead_units_sold of this GoogleAdsSearchads360V0CommonMetrics.
        :param client_account_view_through_conversions: The client_account_view_through_conversions of this GoogleAdsSearchads360V0CommonMetrics.
        :param content_budget_lost_impression_share: The content_budget_lost_impression_share of this GoogleAdsSearchads360V0CommonMetrics.
        :param content_impression_share: The content_impression_share of this GoogleAdsSearchads360V0CommonMetrics.
        :param content_rank_lost_impression_share: The content_rank_lost_impression_share of this GoogleAdsSearchads360V0CommonMetrics.
        :param conversion_custom_metrics: The conversion_custom_metrics of this GoogleAdsSearchads360V0CommonMetrics.
        :param conversions: The conversions of this GoogleAdsSearchads360V0CommonMetrics.
        :param conversions_by_conversion_date: The conversions_by_conversion_date of this GoogleAdsSearchads360V0CommonMetrics.
        :param conversions_from_interactions_rate: The conversions_from_interactions_rate of this GoogleAdsSearchads360V0CommonMetrics.
        :param conversions_from_interactions_value_per_interaction: The conversions_from_interactions_value_per_interaction of this GoogleAdsSearchads360V0CommonMetrics.
        :param conversions_value: The conversions_value of this GoogleAdsSearchads360V0CommonMetrics.
        :param conversions_value_by_conversion_date: The conversions_value_by_conversion_date of this GoogleAdsSearchads360V0CommonMetrics.
        :param conversions_value_per_cost: The conversions_value_per_cost of this GoogleAdsSearchads360V0CommonMetrics.
        :param cost_micros: The cost_micros of this GoogleAdsSearchads360V0CommonMetrics.
        :param cost_per_all_conversions: The cost_per_all_conversions of this GoogleAdsSearchads360V0CommonMetrics.
        :param cost_per_conversion: The cost_per_conversion of this GoogleAdsSearchads360V0CommonMetrics.
        :param cost_per_current_model_attributed_conversion: The cost_per_current_model_attributed_conversion of this GoogleAdsSearchads360V0CommonMetrics.
        :param cross_device_conversions: The cross_device_conversions of this GoogleAdsSearchads360V0CommonMetrics.
        :param cross_device_conversions_value: The cross_device_conversions_value of this GoogleAdsSearchads360V0CommonMetrics.
        :param cross_sell_cost_of_goods_sold_micros: The cross_sell_cost_of_goods_sold_micros of this GoogleAdsSearchads360V0CommonMetrics.
        :param cross_sell_gross_profit_micros: The cross_sell_gross_profit_micros of this GoogleAdsSearchads360V0CommonMetrics.
        :param cross_sell_revenue_micros: The cross_sell_revenue_micros of this GoogleAdsSearchads360V0CommonMetrics.
        :param cross_sell_units_sold: The cross_sell_units_sold of this GoogleAdsSearchads360V0CommonMetrics.
        :param ctr: The ctr of this GoogleAdsSearchads360V0CommonMetrics.
        :param historical_creative_quality_score: The historical_creative_quality_score of this GoogleAdsSearchads360V0CommonMetrics.
        :param historical_landing_page_quality_score: The historical_landing_page_quality_score of this GoogleAdsSearchads360V0CommonMetrics.
        :param historical_quality_score: The historical_quality_score of this GoogleAdsSearchads360V0CommonMetrics.
        :param historical_search_predicted_ctr: The historical_search_predicted_ctr of this GoogleAdsSearchads360V0CommonMetrics.
        :param impressions: The impressions of this GoogleAdsSearchads360V0CommonMetrics.
        :param interaction_event_types: The interaction_event_types of this GoogleAdsSearchads360V0CommonMetrics.
        :param interaction_rate: The interaction_rate of this GoogleAdsSearchads360V0CommonMetrics.
        :param interactions: The interactions of this GoogleAdsSearchads360V0CommonMetrics.
        :param invalid_click_rate: The invalid_click_rate of this GoogleAdsSearchads360V0CommonMetrics.
        :param invalid_clicks: The invalid_clicks of this GoogleAdsSearchads360V0CommonMetrics.
        :param lead_cost_of_goods_sold_micros: The lead_cost_of_goods_sold_micros of this GoogleAdsSearchads360V0CommonMetrics.
        :param lead_gross_profit_micros: The lead_gross_profit_micros of this GoogleAdsSearchads360V0CommonMetrics.
        :param lead_revenue_micros: The lead_revenue_micros of this GoogleAdsSearchads360V0CommonMetrics.
        :param lead_units_sold: The lead_units_sold of this GoogleAdsSearchads360V0CommonMetrics.
        :param mobile_friendly_clicks_percentage: The mobile_friendly_clicks_percentage of this GoogleAdsSearchads360V0CommonMetrics.
        :param raw_event_conversion_metrics: The raw_event_conversion_metrics of this GoogleAdsSearchads360V0CommonMetrics.
        :param search_absolute_top_impression_share: The search_absolute_top_impression_share of this GoogleAdsSearchads360V0CommonMetrics.
        :param search_budget_lost_absolute_top_impression_share: The search_budget_lost_absolute_top_impression_share of this GoogleAdsSearchads360V0CommonMetrics.
        :param search_budget_lost_impression_share: The search_budget_lost_impression_share of this GoogleAdsSearchads360V0CommonMetrics.
        :param search_budget_lost_top_impression_share: The search_budget_lost_top_impression_share of this GoogleAdsSearchads360V0CommonMetrics.
        :param search_click_share: The search_click_share of this GoogleAdsSearchads360V0CommonMetrics.
        :param search_exact_match_impression_share: The search_exact_match_impression_share of this GoogleAdsSearchads360V0CommonMetrics.
        :param search_impression_share: The search_impression_share of this GoogleAdsSearchads360V0CommonMetrics.
        :param search_rank_lost_absolute_top_impression_share: The search_rank_lost_absolute_top_impression_share of this GoogleAdsSearchads360V0CommonMetrics.
        :param search_rank_lost_impression_share: The search_rank_lost_impression_share of this GoogleAdsSearchads360V0CommonMetrics.
        :param search_rank_lost_top_impression_share: The search_rank_lost_top_impression_share of this GoogleAdsSearchads360V0CommonMetrics.
        :param search_top_impression_share: The search_top_impression_share of this GoogleAdsSearchads360V0CommonMetrics.
        :param top_impression_percentage: The top_impression_percentage of this GoogleAdsSearchads360V0CommonMetrics.
        :param value_per_all_conversions: The value_per_all_conversions of this GoogleAdsSearchads360V0CommonMetrics.
        :param value_per_all_conversions_by_conversion_date: The value_per_all_conversions_by_conversion_date of this GoogleAdsSearchads360V0CommonMetrics.
        :param value_per_conversion: The value_per_conversion of this GoogleAdsSearchads360V0CommonMetrics.
        :param value_per_conversions_by_conversion_date: The value_per_conversions_by_conversion_date of this GoogleAdsSearchads360V0CommonMetrics.
        :param visits: The visits of this GoogleAdsSearchads360V0CommonMetrics.
        """
        self.openapi_types = {
            'absolute_top_impression_percentage': float,
            'all_conversions': float,
            'all_conversions_by_conversion_date': float,
            'all_conversions_from_click_to_call': float,
            'all_conversions_from_directions': float,
            'all_conversions_from_interactions_rate': float,
            'all_conversions_from_interactions_value_per_interaction': float,
            'all_conversions_from_menu': float,
            'all_conversions_from_order': float,
            'all_conversions_from_other_engagement': float,
            'all_conversions_from_store_visit': float,
            'all_conversions_from_store_website': float,
            'all_conversions_value': float,
            'all_conversions_value_by_conversion_date': float,
            'all_conversions_value_per_cost': float,
            'average_cost': float,
            'average_cpc': float,
            'average_cpm': float,
            'clicks': str,
            'client_account_conversions': float,
            'client_account_conversions_value': float,
            'client_account_cross_sell_cost_of_goods_sold_micros': str,
            'client_account_cross_sell_gross_profit_micros': str,
            'client_account_cross_sell_revenue_micros': str,
            'client_account_cross_sell_units_sold': float,
            'client_account_lead_cost_of_goods_sold_micros': str,
            'client_account_lead_gross_profit_micros': str,
            'client_account_lead_revenue_micros': str,
            'client_account_lead_units_sold': float,
            'client_account_view_through_conversions': str,
            'content_budget_lost_impression_share': float,
            'content_impression_share': float,
            'content_rank_lost_impression_share': float,
            'conversion_custom_metrics': List[GoogleAdsSearchads360V0CommonValue],
            'conversions': float,
            'conversions_by_conversion_date': float,
            'conversions_from_interactions_rate': float,
            'conversions_from_interactions_value_per_interaction': float,
            'conversions_value': float,
            'conversions_value_by_conversion_date': float,
            'conversions_value_per_cost': float,
            'cost_micros': str,
            'cost_per_all_conversions': float,
            'cost_per_conversion': float,
            'cost_per_current_model_attributed_conversion': float,
            'cross_device_conversions': float,
            'cross_device_conversions_value': float,
            'cross_sell_cost_of_goods_sold_micros': str,
            'cross_sell_gross_profit_micros': str,
            'cross_sell_revenue_micros': str,
            'cross_sell_units_sold': float,
            'ctr': float,
            'historical_creative_quality_score': str,
            'historical_landing_page_quality_score': str,
            'historical_quality_score': str,
            'historical_search_predicted_ctr': str,
            'impressions': str,
            'interaction_event_types': List[str],
            'interaction_rate': float,
            'interactions': str,
            'invalid_click_rate': float,
            'invalid_clicks': str,
            'lead_cost_of_goods_sold_micros': str,
            'lead_gross_profit_micros': str,
            'lead_revenue_micros': str,
            'lead_units_sold': float,
            'mobile_friendly_clicks_percentage': float,
            'raw_event_conversion_metrics': List[GoogleAdsSearchads360V0CommonValue],
            'search_absolute_top_impression_share': float,
            'search_budget_lost_absolute_top_impression_share': float,
            'search_budget_lost_impression_share': float,
            'search_budget_lost_top_impression_share': float,
            'search_click_share': float,
            'search_exact_match_impression_share': float,
            'search_impression_share': float,
            'search_rank_lost_absolute_top_impression_share': float,
            'search_rank_lost_impression_share': float,
            'search_rank_lost_top_impression_share': float,
            'search_top_impression_share': float,
            'top_impression_percentage': float,
            'value_per_all_conversions': float,
            'value_per_all_conversions_by_conversion_date': float,
            'value_per_conversion': float,
            'value_per_conversions_by_conversion_date': float,
            'visits': float
        }

        self.attribute_map = {
            'absolute_top_impression_percentage': 'absoluteTopImpressionPercentage',
            'all_conversions': 'allConversions',
            'all_conversions_by_conversion_date': 'allConversionsByConversionDate',
            'all_conversions_from_click_to_call': 'allConversionsFromClickToCall',
            'all_conversions_from_directions': 'allConversionsFromDirections',
            'all_conversions_from_interactions_rate': 'allConversionsFromInteractionsRate',
            'all_conversions_from_interactions_value_per_interaction': 'allConversionsFromInteractionsValuePerInteraction',
            'all_conversions_from_menu': 'allConversionsFromMenu',
            'all_conversions_from_order': 'allConversionsFromOrder',
            'all_conversions_from_other_engagement': 'allConversionsFromOtherEngagement',
            'all_conversions_from_store_visit': 'allConversionsFromStoreVisit',
            'all_conversions_from_store_website': 'allConversionsFromStoreWebsite',
            'all_conversions_value': 'allConversionsValue',
            'all_conversions_value_by_conversion_date': 'allConversionsValueByConversionDate',
            'all_conversions_value_per_cost': 'allConversionsValuePerCost',
            'average_cost': 'averageCost',
            'average_cpc': 'averageCpc',
            'average_cpm': 'averageCpm',
            'clicks': 'clicks',
            'client_account_conversions': 'clientAccountConversions',
            'client_account_conversions_value': 'clientAccountConversionsValue',
            'client_account_cross_sell_cost_of_goods_sold_micros': 'clientAccountCrossSellCostOfGoodsSoldMicros',
            'client_account_cross_sell_gross_profit_micros': 'clientAccountCrossSellGrossProfitMicros',
            'client_account_cross_sell_revenue_micros': 'clientAccountCrossSellRevenueMicros',
            'client_account_cross_sell_units_sold': 'clientAccountCrossSellUnitsSold',
            'client_account_lead_cost_of_goods_sold_micros': 'clientAccountLeadCostOfGoodsSoldMicros',
            'client_account_lead_gross_profit_micros': 'clientAccountLeadGrossProfitMicros',
            'client_account_lead_revenue_micros': 'clientAccountLeadRevenueMicros',
            'client_account_lead_units_sold': 'clientAccountLeadUnitsSold',
            'client_account_view_through_conversions': 'clientAccountViewThroughConversions',
            'content_budget_lost_impression_share': 'contentBudgetLostImpressionShare',
            'content_impression_share': 'contentImpressionShare',
            'content_rank_lost_impression_share': 'contentRankLostImpressionShare',
            'conversion_custom_metrics': 'conversionCustomMetrics',
            'conversions': 'conversions',
            'conversions_by_conversion_date': 'conversionsByConversionDate',
            'conversions_from_interactions_rate': 'conversionsFromInteractionsRate',
            'conversions_from_interactions_value_per_interaction': 'conversionsFromInteractionsValuePerInteraction',
            'conversions_value': 'conversionsValue',
            'conversions_value_by_conversion_date': 'conversionsValueByConversionDate',
            'conversions_value_per_cost': 'conversionsValuePerCost',
            'cost_micros': 'costMicros',
            'cost_per_all_conversions': 'costPerAllConversions',
            'cost_per_conversion': 'costPerConversion',
            'cost_per_current_model_attributed_conversion': 'costPerCurrentModelAttributedConversion',
            'cross_device_conversions': 'crossDeviceConversions',
            'cross_device_conversions_value': 'crossDeviceConversionsValue',
            'cross_sell_cost_of_goods_sold_micros': 'crossSellCostOfGoodsSoldMicros',
            'cross_sell_gross_profit_micros': 'crossSellGrossProfitMicros',
            'cross_sell_revenue_micros': 'crossSellRevenueMicros',
            'cross_sell_units_sold': 'crossSellUnitsSold',
            'ctr': 'ctr',
            'historical_creative_quality_score': 'historicalCreativeQualityScore',
            'historical_landing_page_quality_score': 'historicalLandingPageQualityScore',
            'historical_quality_score': 'historicalQualityScore',
            'historical_search_predicted_ctr': 'historicalSearchPredictedCtr',
            'impressions': 'impressions',
            'interaction_event_types': 'interactionEventTypes',
            'interaction_rate': 'interactionRate',
            'interactions': 'interactions',
            'invalid_click_rate': 'invalidClickRate',
            'invalid_clicks': 'invalidClicks',
            'lead_cost_of_goods_sold_micros': 'leadCostOfGoodsSoldMicros',
            'lead_gross_profit_micros': 'leadGrossProfitMicros',
            'lead_revenue_micros': 'leadRevenueMicros',
            'lead_units_sold': 'leadUnitsSold',
            'mobile_friendly_clicks_percentage': 'mobileFriendlyClicksPercentage',
            'raw_event_conversion_metrics': 'rawEventConversionMetrics',
            'search_absolute_top_impression_share': 'searchAbsoluteTopImpressionShare',
            'search_budget_lost_absolute_top_impression_share': 'searchBudgetLostAbsoluteTopImpressionShare',
            'search_budget_lost_impression_share': 'searchBudgetLostImpressionShare',
            'search_budget_lost_top_impression_share': 'searchBudgetLostTopImpressionShare',
            'search_click_share': 'searchClickShare',
            'search_exact_match_impression_share': 'searchExactMatchImpressionShare',
            'search_impression_share': 'searchImpressionShare',
            'search_rank_lost_absolute_top_impression_share': 'searchRankLostAbsoluteTopImpressionShare',
            'search_rank_lost_impression_share': 'searchRankLostImpressionShare',
            'search_rank_lost_top_impression_share': 'searchRankLostTopImpressionShare',
            'search_top_impression_share': 'searchTopImpressionShare',
            'top_impression_percentage': 'topImpressionPercentage',
            'value_per_all_conversions': 'valuePerAllConversions',
            'value_per_all_conversions_by_conversion_date': 'valuePerAllConversionsByConversionDate',
            'value_per_conversion': 'valuePerConversion',
            'value_per_conversions_by_conversion_date': 'valuePerConversionsByConversionDate',
            'visits': 'visits'
        }

        self._absolute_top_impression_percentage = absolute_top_impression_percentage
        self._all_conversions = all_conversions
        self._all_conversions_by_conversion_date = all_conversions_by_conversion_date
        self._all_conversions_from_click_to_call = all_conversions_from_click_to_call
        self._all_conversions_from_directions = all_conversions_from_directions
        self._all_conversions_from_interactions_rate = all_conversions_from_interactions_rate
        self._all_conversions_from_interactions_value_per_interaction = all_conversions_from_interactions_value_per_interaction
        self._all_conversions_from_menu = all_conversions_from_menu
        self._all_conversions_from_order = all_conversions_from_order
        self._all_conversions_from_other_engagement = all_conversions_from_other_engagement
        self._all_conversions_from_store_visit = all_conversions_from_store_visit
        self._all_conversions_from_store_website = all_conversions_from_store_website
        self._all_conversions_value = all_conversions_value
        self._all_conversions_value_by_conversion_date = all_conversions_value_by_conversion_date
        self._all_conversions_value_per_cost = all_conversions_value_per_cost
        self._average_cost = average_cost
        self._average_cpc = average_cpc
        self._average_cpm = average_cpm
        self._clicks = clicks
        self._client_account_conversions = client_account_conversions
        self._client_account_conversions_value = client_account_conversions_value
        self._client_account_cross_sell_cost_of_goods_sold_micros = client_account_cross_sell_cost_of_goods_sold_micros
        self._client_account_cross_sell_gross_profit_micros = client_account_cross_sell_gross_profit_micros
        self._client_account_cross_sell_revenue_micros = client_account_cross_sell_revenue_micros
        self._client_account_cross_sell_units_sold = client_account_cross_sell_units_sold
        self._client_account_lead_cost_of_goods_sold_micros = client_account_lead_cost_of_goods_sold_micros
        self._client_account_lead_gross_profit_micros = client_account_lead_gross_profit_micros
        self._client_account_lead_revenue_micros = client_account_lead_revenue_micros
        self._client_account_lead_units_sold = client_account_lead_units_sold
        self._client_account_view_through_conversions = client_account_view_through_conversions
        self._content_budget_lost_impression_share = content_budget_lost_impression_share
        self._content_impression_share = content_impression_share
        self._content_rank_lost_impression_share = content_rank_lost_impression_share
        self._conversion_custom_metrics = conversion_custom_metrics
        self._conversions = conversions
        self._conversions_by_conversion_date = conversions_by_conversion_date
        self._conversions_from_interactions_rate = conversions_from_interactions_rate
        self._conversions_from_interactions_value_per_interaction = conversions_from_interactions_value_per_interaction
        self._conversions_value = conversions_value
        self._conversions_value_by_conversion_date = conversions_value_by_conversion_date
        self._conversions_value_per_cost = conversions_value_per_cost
        self._cost_micros = cost_micros
        self._cost_per_all_conversions = cost_per_all_conversions
        self._cost_per_conversion = cost_per_conversion
        self._cost_per_current_model_attributed_conversion = cost_per_current_model_attributed_conversion
        self._cross_device_conversions = cross_device_conversions
        self._cross_device_conversions_value = cross_device_conversions_value
        self._cross_sell_cost_of_goods_sold_micros = cross_sell_cost_of_goods_sold_micros
        self._cross_sell_gross_profit_micros = cross_sell_gross_profit_micros
        self._cross_sell_revenue_micros = cross_sell_revenue_micros
        self._cross_sell_units_sold = cross_sell_units_sold
        self._ctr = ctr
        self._historical_creative_quality_score = historical_creative_quality_score
        self._historical_landing_page_quality_score = historical_landing_page_quality_score
        self._historical_quality_score = historical_quality_score
        self._historical_search_predicted_ctr = historical_search_predicted_ctr
        self._impressions = impressions
        self._interaction_event_types = interaction_event_types
        self._interaction_rate = interaction_rate
        self._interactions = interactions
        self._invalid_click_rate = invalid_click_rate
        self._invalid_clicks = invalid_clicks
        self._lead_cost_of_goods_sold_micros = lead_cost_of_goods_sold_micros
        self._lead_gross_profit_micros = lead_gross_profit_micros
        self._lead_revenue_micros = lead_revenue_micros
        self._lead_units_sold = lead_units_sold
        self._mobile_friendly_clicks_percentage = mobile_friendly_clicks_percentage
        self._raw_event_conversion_metrics = raw_event_conversion_metrics
        self._search_absolute_top_impression_share = search_absolute_top_impression_share
        self._search_budget_lost_absolute_top_impression_share = search_budget_lost_absolute_top_impression_share
        self._search_budget_lost_impression_share = search_budget_lost_impression_share
        self._search_budget_lost_top_impression_share = search_budget_lost_top_impression_share
        self._search_click_share = search_click_share
        self._search_exact_match_impression_share = search_exact_match_impression_share
        self._search_impression_share = search_impression_share
        self._search_rank_lost_absolute_top_impression_share = search_rank_lost_absolute_top_impression_share
        self._search_rank_lost_impression_share = search_rank_lost_impression_share
        self._search_rank_lost_top_impression_share = search_rank_lost_top_impression_share
        self._search_top_impression_share = search_top_impression_share
        self._top_impression_percentage = top_impression_percentage
        self._value_per_all_conversions = value_per_all_conversions
        self._value_per_all_conversions_by_conversion_date = value_per_all_conversions_by_conversion_date
        self._value_per_conversion = value_per_conversion
        self._value_per_conversions_by_conversion_date = value_per_conversions_by_conversion_date
        self._visits = visits

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleAdsSearchads360V0CommonMetrics':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleAdsSearchads360V0Common__Metrics of this GoogleAdsSearchads360V0CommonMetrics.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def absolute_top_impression_percentage(self):
        """Gets the absolute_top_impression_percentage of this GoogleAdsSearchads360V0CommonMetrics.

        The percent of your ad impressions that are shown as the very first ad above the organic search results.

        :return: The absolute_top_impression_percentage of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: float
        """
        return self._absolute_top_impression_percentage

    @absolute_top_impression_percentage.setter
    def absolute_top_impression_percentage(self, absolute_top_impression_percentage):
        """Sets the absolute_top_impression_percentage of this GoogleAdsSearchads360V0CommonMetrics.

        The percent of your ad impressions that are shown as the very first ad above the organic search results.

        :param absolute_top_impression_percentage: The absolute_top_impression_percentage of this GoogleAdsSearchads360V0CommonMetrics.
        :type absolute_top_impression_percentage: float
        """

        self._absolute_top_impression_percentage = absolute_top_impression_percentage

    @property
    def all_conversions(self):
        """Gets the all_conversions of this GoogleAdsSearchads360V0CommonMetrics.

        The total number of conversions. This includes all conversions regardless of the value of include_in_conversions_metric.

        :return: The all_conversions of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: float
        """
        return self._all_conversions

    @all_conversions.setter
    def all_conversions(self, all_conversions):
        """Sets the all_conversions of this GoogleAdsSearchads360V0CommonMetrics.

        The total number of conversions. This includes all conversions regardless of the value of include_in_conversions_metric.

        :param all_conversions: The all_conversions of this GoogleAdsSearchads360V0CommonMetrics.
        :type all_conversions: float
        """

        self._all_conversions = all_conversions

    @property
    def all_conversions_by_conversion_date(self):
        """Gets the all_conversions_by_conversion_date of this GoogleAdsSearchads360V0CommonMetrics.

        The total number of conversions. This includes all conversions regardless of the value of include_in_conversions_metric. When this column is selected with date, the values in date column means the conversion date. Details for the by_conversion_date columns are available at https://support.google.com/sa360/answer/9250611.

        :return: The all_conversions_by_conversion_date of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: float
        """
        return self._all_conversions_by_conversion_date

    @all_conversions_by_conversion_date.setter
    def all_conversions_by_conversion_date(self, all_conversions_by_conversion_date):
        """Sets the all_conversions_by_conversion_date of this GoogleAdsSearchads360V0CommonMetrics.

        The total number of conversions. This includes all conversions regardless of the value of include_in_conversions_metric. When this column is selected with date, the values in date column means the conversion date. Details for the by_conversion_date columns are available at https://support.google.com/sa360/answer/9250611.

        :param all_conversions_by_conversion_date: The all_conversions_by_conversion_date of this GoogleAdsSearchads360V0CommonMetrics.
        :type all_conversions_by_conversion_date: float
        """

        self._all_conversions_by_conversion_date = all_conversions_by_conversion_date

    @property
    def all_conversions_from_click_to_call(self):
        """Gets the all_conversions_from_click_to_call of this GoogleAdsSearchads360V0CommonMetrics.

        The number of times people clicked the \"Call\" button to call a store during or after clicking an ad. This number doesn't include whether or not calls were connected, or the duration of any calls. This metric applies to feed items only.

        :return: The all_conversions_from_click_to_call of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: float
        """
        return self._all_conversions_from_click_to_call

    @all_conversions_from_click_to_call.setter
    def all_conversions_from_click_to_call(self, all_conversions_from_click_to_call):
        """Sets the all_conversions_from_click_to_call of this GoogleAdsSearchads360V0CommonMetrics.

        The number of times people clicked the \"Call\" button to call a store during or after clicking an ad. This number doesn't include whether or not calls were connected, or the duration of any calls. This metric applies to feed items only.

        :param all_conversions_from_click_to_call: The all_conversions_from_click_to_call of this GoogleAdsSearchads360V0CommonMetrics.
        :type all_conversions_from_click_to_call: float
        """

        self._all_conversions_from_click_to_call = all_conversions_from_click_to_call

    @property
    def all_conversions_from_directions(self):
        """Gets the all_conversions_from_directions of this GoogleAdsSearchads360V0CommonMetrics.

        The number of times people clicked a \"Get directions\" button to navigate to a store after clicking an ad. This metric applies to feed items only.

        :return: The all_conversions_from_directions of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: float
        """
        return self._all_conversions_from_directions

    @all_conversions_from_directions.setter
    def all_conversions_from_directions(self, all_conversions_from_directions):
        """Sets the all_conversions_from_directions of this GoogleAdsSearchads360V0CommonMetrics.

        The number of times people clicked a \"Get directions\" button to navigate to a store after clicking an ad. This metric applies to feed items only.

        :param all_conversions_from_directions: The all_conversions_from_directions of this GoogleAdsSearchads360V0CommonMetrics.
        :type all_conversions_from_directions: float
        """

        self._all_conversions_from_directions = all_conversions_from_directions

    @property
    def all_conversions_from_interactions_rate(self):
        """Gets the all_conversions_from_interactions_rate of this GoogleAdsSearchads360V0CommonMetrics.

        All conversions from interactions (as oppose to view through conversions) divided by the number of ad interactions.

        :return: The all_conversions_from_interactions_rate of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: float
        """
        return self._all_conversions_from_interactions_rate

    @all_conversions_from_interactions_rate.setter
    def all_conversions_from_interactions_rate(self, all_conversions_from_interactions_rate):
        """Sets the all_conversions_from_interactions_rate of this GoogleAdsSearchads360V0CommonMetrics.

        All conversions from interactions (as oppose to view through conversions) divided by the number of ad interactions.

        :param all_conversions_from_interactions_rate: The all_conversions_from_interactions_rate of this GoogleAdsSearchads360V0CommonMetrics.
        :type all_conversions_from_interactions_rate: float
        """

        self._all_conversions_from_interactions_rate = all_conversions_from_interactions_rate

    @property
    def all_conversions_from_interactions_value_per_interaction(self):
        """Gets the all_conversions_from_interactions_value_per_interaction of this GoogleAdsSearchads360V0CommonMetrics.

        The value of all conversions from interactions divided by the total number of interactions.

        :return: The all_conversions_from_interactions_value_per_interaction of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: float
        """
        return self._all_conversions_from_interactions_value_per_interaction

    @all_conversions_from_interactions_value_per_interaction.setter
    def all_conversions_from_interactions_value_per_interaction(self, all_conversions_from_interactions_value_per_interaction):
        """Sets the all_conversions_from_interactions_value_per_interaction of this GoogleAdsSearchads360V0CommonMetrics.

        The value of all conversions from interactions divided by the total number of interactions.

        :param all_conversions_from_interactions_value_per_interaction: The all_conversions_from_interactions_value_per_interaction of this GoogleAdsSearchads360V0CommonMetrics.
        :type all_conversions_from_interactions_value_per_interaction: float
        """

        self._all_conversions_from_interactions_value_per_interaction = all_conversions_from_interactions_value_per_interaction

    @property
    def all_conversions_from_menu(self):
        """Gets the all_conversions_from_menu of this GoogleAdsSearchads360V0CommonMetrics.

        The number of times people clicked a link to view a store's menu after clicking an ad. This metric applies to feed items only.

        :return: The all_conversions_from_menu of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: float
        """
        return self._all_conversions_from_menu

    @all_conversions_from_menu.setter
    def all_conversions_from_menu(self, all_conversions_from_menu):
        """Sets the all_conversions_from_menu of this GoogleAdsSearchads360V0CommonMetrics.

        The number of times people clicked a link to view a store's menu after clicking an ad. This metric applies to feed items only.

        :param all_conversions_from_menu: The all_conversions_from_menu of this GoogleAdsSearchads360V0CommonMetrics.
        :type all_conversions_from_menu: float
        """

        self._all_conversions_from_menu = all_conversions_from_menu

    @property
    def all_conversions_from_order(self):
        """Gets the all_conversions_from_order of this GoogleAdsSearchads360V0CommonMetrics.

        The number of times people placed an order at a store after clicking an ad. This metric applies to feed items only.

        :return: The all_conversions_from_order of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: float
        """
        return self._all_conversions_from_order

    @all_conversions_from_order.setter
    def all_conversions_from_order(self, all_conversions_from_order):
        """Sets the all_conversions_from_order of this GoogleAdsSearchads360V0CommonMetrics.

        The number of times people placed an order at a store after clicking an ad. This metric applies to feed items only.

        :param all_conversions_from_order: The all_conversions_from_order of this GoogleAdsSearchads360V0CommonMetrics.
        :type all_conversions_from_order: float
        """

        self._all_conversions_from_order = all_conversions_from_order

    @property
    def all_conversions_from_other_engagement(self):
        """Gets the all_conversions_from_other_engagement of this GoogleAdsSearchads360V0CommonMetrics.

        The number of other conversions (for example, posting a review or saving a location for a store) that occurred after people clicked an ad. This metric applies to feed items only.

        :return: The all_conversions_from_other_engagement of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: float
        """
        return self._all_conversions_from_other_engagement

    @all_conversions_from_other_engagement.setter
    def all_conversions_from_other_engagement(self, all_conversions_from_other_engagement):
        """Sets the all_conversions_from_other_engagement of this GoogleAdsSearchads360V0CommonMetrics.

        The number of other conversions (for example, posting a review or saving a location for a store) that occurred after people clicked an ad. This metric applies to feed items only.

        :param all_conversions_from_other_engagement: The all_conversions_from_other_engagement of this GoogleAdsSearchads360V0CommonMetrics.
        :type all_conversions_from_other_engagement: float
        """

        self._all_conversions_from_other_engagement = all_conversions_from_other_engagement

    @property
    def all_conversions_from_store_visit(self):
        """Gets the all_conversions_from_store_visit of this GoogleAdsSearchads360V0CommonMetrics.

        Estimated number of times people visited a store after clicking an ad. This metric applies to feed items only.

        :return: The all_conversions_from_store_visit of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: float
        """
        return self._all_conversions_from_store_visit

    @all_conversions_from_store_visit.setter
    def all_conversions_from_store_visit(self, all_conversions_from_store_visit):
        """Sets the all_conversions_from_store_visit of this GoogleAdsSearchads360V0CommonMetrics.

        Estimated number of times people visited a store after clicking an ad. This metric applies to feed items only.

        :param all_conversions_from_store_visit: The all_conversions_from_store_visit of this GoogleAdsSearchads360V0CommonMetrics.
        :type all_conversions_from_store_visit: float
        """

        self._all_conversions_from_store_visit = all_conversions_from_store_visit

    @property
    def all_conversions_from_store_website(self):
        """Gets the all_conversions_from_store_website of this GoogleAdsSearchads360V0CommonMetrics.

        The number of times that people were taken to a store's URL after clicking an ad. This metric applies to feed items only.

        :return: The all_conversions_from_store_website of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: float
        """
        return self._all_conversions_from_store_website

    @all_conversions_from_store_website.setter
    def all_conversions_from_store_website(self, all_conversions_from_store_website):
        """Sets the all_conversions_from_store_website of this GoogleAdsSearchads360V0CommonMetrics.

        The number of times that people were taken to a store's URL after clicking an ad. This metric applies to feed items only.

        :param all_conversions_from_store_website: The all_conversions_from_store_website of this GoogleAdsSearchads360V0CommonMetrics.
        :type all_conversions_from_store_website: float
        """

        self._all_conversions_from_store_website = all_conversions_from_store_website

    @property
    def all_conversions_value(self):
        """Gets the all_conversions_value of this GoogleAdsSearchads360V0CommonMetrics.

        The value of all conversions.

        :return: The all_conversions_value of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: float
        """
        return self._all_conversions_value

    @all_conversions_value.setter
    def all_conversions_value(self, all_conversions_value):
        """Sets the all_conversions_value of this GoogleAdsSearchads360V0CommonMetrics.

        The value of all conversions.

        :param all_conversions_value: The all_conversions_value of this GoogleAdsSearchads360V0CommonMetrics.
        :type all_conversions_value: float
        """

        self._all_conversions_value = all_conversions_value

    @property
    def all_conversions_value_by_conversion_date(self):
        """Gets the all_conversions_value_by_conversion_date of this GoogleAdsSearchads360V0CommonMetrics.

        The value of all conversions. When this column is selected with date, the values in date column means the conversion date. Details for the by_conversion_date columns are available at https://support.google.com/sa360/answer/9250611.

        :return: The all_conversions_value_by_conversion_date of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: float
        """
        return self._all_conversions_value_by_conversion_date

    @all_conversions_value_by_conversion_date.setter
    def all_conversions_value_by_conversion_date(self, all_conversions_value_by_conversion_date):
        """Sets the all_conversions_value_by_conversion_date of this GoogleAdsSearchads360V0CommonMetrics.

        The value of all conversions. When this column is selected with date, the values in date column means the conversion date. Details for the by_conversion_date columns are available at https://support.google.com/sa360/answer/9250611.

        :param all_conversions_value_by_conversion_date: The all_conversions_value_by_conversion_date of this GoogleAdsSearchads360V0CommonMetrics.
        :type all_conversions_value_by_conversion_date: float
        """

        self._all_conversions_value_by_conversion_date = all_conversions_value_by_conversion_date

    @property
    def all_conversions_value_per_cost(self):
        """Gets the all_conversions_value_per_cost of this GoogleAdsSearchads360V0CommonMetrics.

        The value of all conversions divided by the total cost of ad interactions (such as clicks for text ads or views for video ads).

        :return: The all_conversions_value_per_cost of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: float
        """
        return self._all_conversions_value_per_cost

    @all_conversions_value_per_cost.setter
    def all_conversions_value_per_cost(self, all_conversions_value_per_cost):
        """Sets the all_conversions_value_per_cost of this GoogleAdsSearchads360V0CommonMetrics.

        The value of all conversions divided by the total cost of ad interactions (such as clicks for text ads or views for video ads).

        :param all_conversions_value_per_cost: The all_conversions_value_per_cost of this GoogleAdsSearchads360V0CommonMetrics.
        :type all_conversions_value_per_cost: float
        """

        self._all_conversions_value_per_cost = all_conversions_value_per_cost

    @property
    def average_cost(self):
        """Gets the average_cost of this GoogleAdsSearchads360V0CommonMetrics.

        The average amount you pay per interaction. This amount is the total cost of your ads divided by the total number of interactions.

        :return: The average_cost of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: float
        """
        return self._average_cost

    @average_cost.setter
    def average_cost(self, average_cost):
        """Sets the average_cost of this GoogleAdsSearchads360V0CommonMetrics.

        The average amount you pay per interaction. This amount is the total cost of your ads divided by the total number of interactions.

        :param average_cost: The average_cost of this GoogleAdsSearchads360V0CommonMetrics.
        :type average_cost: float
        """

        self._average_cost = average_cost

    @property
    def average_cpc(self):
        """Gets the average_cpc of this GoogleAdsSearchads360V0CommonMetrics.

        The total cost of all clicks divided by the total number of clicks received. This metric is a monetary value and returned in the customer's currency by default. See the metrics_currency parameter at https://developers.google.com/search-ads/reporting/query/query-structure#parameters_clause

        :return: The average_cpc of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: float
        """
        return self._average_cpc

    @average_cpc.setter
    def average_cpc(self, average_cpc):
        """Sets the average_cpc of this GoogleAdsSearchads360V0CommonMetrics.

        The total cost of all clicks divided by the total number of clicks received. This metric is a monetary value and returned in the customer's currency by default. See the metrics_currency parameter at https://developers.google.com/search-ads/reporting/query/query-structure#parameters_clause

        :param average_cpc: The average_cpc of this GoogleAdsSearchads360V0CommonMetrics.
        :type average_cpc: float
        """

        self._average_cpc = average_cpc

    @property
    def average_cpm(self):
        """Gets the average_cpm of this GoogleAdsSearchads360V0CommonMetrics.

        Average cost-per-thousand impressions (CPM). This metric is a monetary value and returned in the customer's currency by default. See the metrics_currency parameter at https://developers.google.com/search-ads/reporting/query/query-structure#parameters_clause

        :return: The average_cpm of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: float
        """
        return self._average_cpm

    @average_cpm.setter
    def average_cpm(self, average_cpm):
        """Sets the average_cpm of this GoogleAdsSearchads360V0CommonMetrics.

        Average cost-per-thousand impressions (CPM). This metric is a monetary value and returned in the customer's currency by default. See the metrics_currency parameter at https://developers.google.com/search-ads/reporting/query/query-structure#parameters_clause

        :param average_cpm: The average_cpm of this GoogleAdsSearchads360V0CommonMetrics.
        :type average_cpm: float
        """

        self._average_cpm = average_cpm

    @property
    def clicks(self):
        """Gets the clicks of this GoogleAdsSearchads360V0CommonMetrics.

        The number of clicks.

        :return: The clicks of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: str
        """
        return self._clicks

    @clicks.setter
    def clicks(self, clicks):
        """Sets the clicks of this GoogleAdsSearchads360V0CommonMetrics.

        The number of clicks.

        :param clicks: The clicks of this GoogleAdsSearchads360V0CommonMetrics.
        :type clicks: str
        """

        self._clicks = clicks

    @property
    def client_account_conversions(self):
        """Gets the client_account_conversions of this GoogleAdsSearchads360V0CommonMetrics.

        The number of client account conversions. This only includes conversion actions which include_in_client_account_conversions_metric attribute is set to true. If you use conversion-based bidding, your bid strategies will optimize for these conversions.

        :return: The client_account_conversions of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: float
        """
        return self._client_account_conversions

    @client_account_conversions.setter
    def client_account_conversions(self, client_account_conversions):
        """Sets the client_account_conversions of this GoogleAdsSearchads360V0CommonMetrics.

        The number of client account conversions. This only includes conversion actions which include_in_client_account_conversions_metric attribute is set to true. If you use conversion-based bidding, your bid strategies will optimize for these conversions.

        :param client_account_conversions: The client_account_conversions of this GoogleAdsSearchads360V0CommonMetrics.
        :type client_account_conversions: float
        """

        self._client_account_conversions = client_account_conversions

    @property
    def client_account_conversions_value(self):
        """Gets the client_account_conversions_value of this GoogleAdsSearchads360V0CommonMetrics.

        The value of client account conversions. This only includes conversion actions which include_in_client_account_conversions_metric attribute is set to true. If you use conversion-based bidding, your bid strategies will optimize for these conversions.

        :return: The client_account_conversions_value of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: float
        """
        return self._client_account_conversions_value

    @client_account_conversions_value.setter
    def client_account_conversions_value(self, client_account_conversions_value):
        """Sets the client_account_conversions_value of this GoogleAdsSearchads360V0CommonMetrics.

        The value of client account conversions. This only includes conversion actions which include_in_client_account_conversions_metric attribute is set to true. If you use conversion-based bidding, your bid strategies will optimize for these conversions.

        :param client_account_conversions_value: The client_account_conversions_value of this GoogleAdsSearchads360V0CommonMetrics.
        :type client_account_conversions_value: float
        """

        self._client_account_conversions_value = client_account_conversions_value

    @property
    def client_account_cross_sell_cost_of_goods_sold_micros(self):
        """Gets the client_account_cross_sell_cost_of_goods_sold_micros of this GoogleAdsSearchads360V0CommonMetrics.

        Client account cross-sell cost of goods sold (COGS) is the total cost of products sold as a result of advertising a different product. How it works: You report conversions with cart data for completed purchases on your website. If the ad that was interacted with before the purchase has an associated product (see Shopping Ads) then this product is considered the advertised product. Any product included in the order the customer places is a sold product. If these products don't match then this is considered cross-sell. Cross-sell cost of goods sold is the total cost of the products sold that weren't advertised. Example: Someone clicked on a Shopping ad for a hat then bought the same hat and a shirt. The hat has a cost of goods sold value of $3, the shirt has a cost of goods sold value of $5. The cross-sell cost of goods sold for this order is $5. This metric is only available if you report conversions with cart data. This metric is a monetary value and returned in the customer's currency by default. See the metrics_currency parameter at https://developers.google.com/search-ads/reporting/query/query-structure#parameters_clause

        :return: The client_account_cross_sell_cost_of_goods_sold_micros of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: str
        """
        return self._client_account_cross_sell_cost_of_goods_sold_micros

    @client_account_cross_sell_cost_of_goods_sold_micros.setter
    def client_account_cross_sell_cost_of_goods_sold_micros(self, client_account_cross_sell_cost_of_goods_sold_micros):
        """Sets the client_account_cross_sell_cost_of_goods_sold_micros of this GoogleAdsSearchads360V0CommonMetrics.

        Client account cross-sell cost of goods sold (COGS) is the total cost of products sold as a result of advertising a different product. How it works: You report conversions with cart data for completed purchases on your website. If the ad that was interacted with before the purchase has an associated product (see Shopping Ads) then this product is considered the advertised product. Any product included in the order the customer places is a sold product. If these products don't match then this is considered cross-sell. Cross-sell cost of goods sold is the total cost of the products sold that weren't advertised. Example: Someone clicked on a Shopping ad for a hat then bought the same hat and a shirt. The hat has a cost of goods sold value of $3, the shirt has a cost of goods sold value of $5. The cross-sell cost of goods sold for this order is $5. This metric is only available if you report conversions with cart data. This metric is a monetary value and returned in the customer's currency by default. See the metrics_currency parameter at https://developers.google.com/search-ads/reporting/query/query-structure#parameters_clause

        :param client_account_cross_sell_cost_of_goods_sold_micros: The client_account_cross_sell_cost_of_goods_sold_micros of this GoogleAdsSearchads360V0CommonMetrics.
        :type client_account_cross_sell_cost_of_goods_sold_micros: str
        """

        self._client_account_cross_sell_cost_of_goods_sold_micros = client_account_cross_sell_cost_of_goods_sold_micros

    @property
    def client_account_cross_sell_gross_profit_micros(self):
        """Gets the client_account_cross_sell_gross_profit_micros of this GoogleAdsSearchads360V0CommonMetrics.

        Client account cross-sell gross profit is the profit you made from products sold as a result of advertising a different product, minus cost of goods sold (COGS). How it works: You report conversions with cart data for completed purchases on your website. If the ad that was interacted with before the purchase has an associated product (see Shopping Ads) then this product is considered the advertised product. Any product included in the purchase is a sold product. If these products don't match then this is considered cross-sell. Cross-sell gross profit is the revenue you made from cross-sell attributed to your ads minus the cost of the goods sold. Example: Someone clicked on a Shopping ad for a hat then bought the same hat and a shirt. The shirt is priced $20 and has a cost of goods sold value of $5. The cross-sell gross profit of this order is $15 = $20 - $5. This metric is only available if you report conversions with cart data. This metric is a monetary value and returned in the customer's currency by default. See the metrics_currency parameter at https://developers.google.com/search-ads/reporting/query/query-structure#parameters_clause

        :return: The client_account_cross_sell_gross_profit_micros of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: str
        """
        return self._client_account_cross_sell_gross_profit_micros

    @client_account_cross_sell_gross_profit_micros.setter
    def client_account_cross_sell_gross_profit_micros(self, client_account_cross_sell_gross_profit_micros):
        """Sets the client_account_cross_sell_gross_profit_micros of this GoogleAdsSearchads360V0CommonMetrics.

        Client account cross-sell gross profit is the profit you made from products sold as a result of advertising a different product, minus cost of goods sold (COGS). How it works: You report conversions with cart data for completed purchases on your website. If the ad that was interacted with before the purchase has an associated product (see Shopping Ads) then this product is considered the advertised product. Any product included in the purchase is a sold product. If these products don't match then this is considered cross-sell. Cross-sell gross profit is the revenue you made from cross-sell attributed to your ads minus the cost of the goods sold. Example: Someone clicked on a Shopping ad for a hat then bought the same hat and a shirt. The shirt is priced $20 and has a cost of goods sold value of $5. The cross-sell gross profit of this order is $15 = $20 - $5. This metric is only available if you report conversions with cart data. This metric is a monetary value and returned in the customer's currency by default. See the metrics_currency parameter at https://developers.google.com/search-ads/reporting/query/query-structure#parameters_clause

        :param client_account_cross_sell_gross_profit_micros: The client_account_cross_sell_gross_profit_micros of this GoogleAdsSearchads360V0CommonMetrics.
        :type client_account_cross_sell_gross_profit_micros: str
        """

        self._client_account_cross_sell_gross_profit_micros = client_account_cross_sell_gross_profit_micros

    @property
    def client_account_cross_sell_revenue_micros(self):
        """Gets the client_account_cross_sell_revenue_micros of this GoogleAdsSearchads360V0CommonMetrics.

        Client account cross-sell revenue is the total amount you made from products sold as a result of advertising a different product. How it works: You report conversions with cart data for completed purchases on your website. If the ad that was interacted with before the purchase has an associated product (see Shopping Ads) then this product is considered the advertised product. Any product included in the order the customer places is a sold product. If these products don't match then this is considered cross-sell. Cross-sell revenue is the total value you made from cross-sell attributed to your ads. Example: Someone clicked on a Shopping ad for a hat then bought the same hat and a shirt. The hat is priced $10 and the shirt is priced $20. The cross-sell revenue of this order is $20. This metric is only available if you report conversions with cart data. This metric is a monetary value and returned in the customer's currency by default. See the metrics_currency parameter at https://developers.google.com/search-ads/reporting/query/query-structure#parameters_clause

        :return: The client_account_cross_sell_revenue_micros of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: str
        """
        return self._client_account_cross_sell_revenue_micros

    @client_account_cross_sell_revenue_micros.setter
    def client_account_cross_sell_revenue_micros(self, client_account_cross_sell_revenue_micros):
        """Sets the client_account_cross_sell_revenue_micros of this GoogleAdsSearchads360V0CommonMetrics.

        Client account cross-sell revenue is the total amount you made from products sold as a result of advertising a different product. How it works: You report conversions with cart data for completed purchases on your website. If the ad that was interacted with before the purchase has an associated product (see Shopping Ads) then this product is considered the advertised product. Any product included in the order the customer places is a sold product. If these products don't match then this is considered cross-sell. Cross-sell revenue is the total value you made from cross-sell attributed to your ads. Example: Someone clicked on a Shopping ad for a hat then bought the same hat and a shirt. The hat is priced $10 and the shirt is priced $20. The cross-sell revenue of this order is $20. This metric is only available if you report conversions with cart data. This metric is a monetary value and returned in the customer's currency by default. See the metrics_currency parameter at https://developers.google.com/search-ads/reporting/query/query-structure#parameters_clause

        :param client_account_cross_sell_revenue_micros: The client_account_cross_sell_revenue_micros of this GoogleAdsSearchads360V0CommonMetrics.
        :type client_account_cross_sell_revenue_micros: str
        """

        self._client_account_cross_sell_revenue_micros = client_account_cross_sell_revenue_micros

    @property
    def client_account_cross_sell_units_sold(self):
        """Gets the client_account_cross_sell_units_sold of this GoogleAdsSearchads360V0CommonMetrics.

        Client account cross-sell units sold is the total number of products sold as a result of advertising a different product. How it works: You report conversions with cart data for completed purchases on your website. If the ad that was interacted with before the purchase has an associated product (see Shopping Ads) then this product is considered the advertised product. Any product included in the order the customer places is a sold product. If these products don't match then this is considered cross-sell. Cross-sell units sold is the total number of cross-sold products from all orders attributed to your ads. Example: Someone clicked on a Shopping ad for a hat then bought the same hat, a shirt and a jacket. The cross-sell units sold in this order is 2. This metric is only available if you report conversions with cart data.

        :return: The client_account_cross_sell_units_sold of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: float
        """
        return self._client_account_cross_sell_units_sold

    @client_account_cross_sell_units_sold.setter
    def client_account_cross_sell_units_sold(self, client_account_cross_sell_units_sold):
        """Sets the client_account_cross_sell_units_sold of this GoogleAdsSearchads360V0CommonMetrics.

        Client account cross-sell units sold is the total number of products sold as a result of advertising a different product. How it works: You report conversions with cart data for completed purchases on your website. If the ad that was interacted with before the purchase has an associated product (see Shopping Ads) then this product is considered the advertised product. Any product included in the order the customer places is a sold product. If these products don't match then this is considered cross-sell. Cross-sell units sold is the total number of cross-sold products from all orders attributed to your ads. Example: Someone clicked on a Shopping ad for a hat then bought the same hat, a shirt and a jacket. The cross-sell units sold in this order is 2. This metric is only available if you report conversions with cart data.

        :param client_account_cross_sell_units_sold: The client_account_cross_sell_units_sold of this GoogleAdsSearchads360V0CommonMetrics.
        :type client_account_cross_sell_units_sold: float
        """

        self._client_account_cross_sell_units_sold = client_account_cross_sell_units_sold

    @property
    def client_account_lead_cost_of_goods_sold_micros(self):
        """Gets the client_account_lead_cost_of_goods_sold_micros of this GoogleAdsSearchads360V0CommonMetrics.

        Client account lead cost of goods sold (COGS) is the total cost of products sold as a result of advertising the same product. How it works: You report conversions with cart data for completed purchases on your website. If the ad that was interacted with has an associated product (see Shopping Ads) then this product is considered the advertised product. Any product included in the order the customer places is a sold product. If the advertised and sold products match, then the cost of these goods is counted under lead cost of goods sold. Example: Someone clicked on a Shopping ad for a hat then bought the same hat and a shirt. The hat has a cost of goods sold value of $3, the shirt has a cost of goods sold value of $5. The lead cost of goods sold for this order is $3. This metric is only available if you report conversions with cart data. This metric is a monetary value and returned in the customer's currency by default. See the metrics_currency parameter at https://developers.google.com/search-ads/reporting/query/query-structure#parameters_clause

        :return: The client_account_lead_cost_of_goods_sold_micros of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: str
        """
        return self._client_account_lead_cost_of_goods_sold_micros

    @client_account_lead_cost_of_goods_sold_micros.setter
    def client_account_lead_cost_of_goods_sold_micros(self, client_account_lead_cost_of_goods_sold_micros):
        """Sets the client_account_lead_cost_of_goods_sold_micros of this GoogleAdsSearchads360V0CommonMetrics.

        Client account lead cost of goods sold (COGS) is the total cost of products sold as a result of advertising the same product. How it works: You report conversions with cart data for completed purchases on your website. If the ad that was interacted with has an associated product (see Shopping Ads) then this product is considered the advertised product. Any product included in the order the customer places is a sold product. If the advertised and sold products match, then the cost of these goods is counted under lead cost of goods sold. Example: Someone clicked on a Shopping ad for a hat then bought the same hat and a shirt. The hat has a cost of goods sold value of $3, the shirt has a cost of goods sold value of $5. The lead cost of goods sold for this order is $3. This metric is only available if you report conversions with cart data. This metric is a monetary value and returned in the customer's currency by default. See the metrics_currency parameter at https://developers.google.com/search-ads/reporting/query/query-structure#parameters_clause

        :param client_account_lead_cost_of_goods_sold_micros: The client_account_lead_cost_of_goods_sold_micros of this GoogleAdsSearchads360V0CommonMetrics.
        :type client_account_lead_cost_of_goods_sold_micros: str
        """

        self._client_account_lead_cost_of_goods_sold_micros = client_account_lead_cost_of_goods_sold_micros

    @property
    def client_account_lead_gross_profit_micros(self):
        """Gets the client_account_lead_gross_profit_micros of this GoogleAdsSearchads360V0CommonMetrics.

        Client account lead gross profit is the profit you made from products sold as a result of advertising the same product, minus cost of goods sold (COGS). How it works: You report conversions with cart data for completed purchases on your website. If the ad that was interacted with before the purchase has an associated product (see Shopping Ads) then this product is considered the advertised product. Any product included in the order the customer places is a sold product. If the advertised and sold products match, then the revenue you made from these sales minus the cost of goods sold is your lead gross profit. Example: Someone clicked on a Shopping ad for a hat then bought the same hat and a shirt. The hat is priced $10 and has a cost of goods sold value of $3. The lead gross profit of this order is $7 = $10 - $3. This metric is only available if you report conversions with cart data. This metric is a monetary value and returned in the customer's currency by default. See the metrics_currency parameter at https://developers.google.com/search-ads/reporting/query/query-structure#parameters_clause

        :return: The client_account_lead_gross_profit_micros of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: str
        """
        return self._client_account_lead_gross_profit_micros

    @client_account_lead_gross_profit_micros.setter
    def client_account_lead_gross_profit_micros(self, client_account_lead_gross_profit_micros):
        """Sets the client_account_lead_gross_profit_micros of this GoogleAdsSearchads360V0CommonMetrics.

        Client account lead gross profit is the profit you made from products sold as a result of advertising the same product, minus cost of goods sold (COGS). How it works: You report conversions with cart data for completed purchases on your website. If the ad that was interacted with before the purchase has an associated product (see Shopping Ads) then this product is considered the advertised product. Any product included in the order the customer places is a sold product. If the advertised and sold products match, then the revenue you made from these sales minus the cost of goods sold is your lead gross profit. Example: Someone clicked on a Shopping ad for a hat then bought the same hat and a shirt. The hat is priced $10 and has a cost of goods sold value of $3. The lead gross profit of this order is $7 = $10 - $3. This metric is only available if you report conversions with cart data. This metric is a monetary value and returned in the customer's currency by default. See the metrics_currency parameter at https://developers.google.com/search-ads/reporting/query/query-structure#parameters_clause

        :param client_account_lead_gross_profit_micros: The client_account_lead_gross_profit_micros of this GoogleAdsSearchads360V0CommonMetrics.
        :type client_account_lead_gross_profit_micros: str
        """

        self._client_account_lead_gross_profit_micros = client_account_lead_gross_profit_micros

    @property
    def client_account_lead_revenue_micros(self):
        """Gets the client_account_lead_revenue_micros of this GoogleAdsSearchads360V0CommonMetrics.

        Client account lead revenue is the total amount you made from products sold as a result of advertising the same product. How it works: You report conversions with cart data for completed purchases on your website. If the ad that was interacted with before the purchase has an associated product (see Shopping Ads) then this product is considered the advertised product. Any product included in the order the customer places is a sold product. If the advertised and sold products match, then the total value you made from the sales of these products is shown under lead revenue. Example: Someone clicked on a Shopping ad for a hat then bought the same hat and a shirt. The hat is priced $10 and the shirt is priced $20. The lead revenue of this order is $10. This metric is only available if you report conversions with cart data. This metric is a monetary value and returned in the customer's currency by default. See the metrics_currency parameter at https://developers.google.com/search-ads/reporting/query/query-structure#parameters_clause

        :return: The client_account_lead_revenue_micros of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: str
        """
        return self._client_account_lead_revenue_micros

    @client_account_lead_revenue_micros.setter
    def client_account_lead_revenue_micros(self, client_account_lead_revenue_micros):
        """Sets the client_account_lead_revenue_micros of this GoogleAdsSearchads360V0CommonMetrics.

        Client account lead revenue is the total amount you made from products sold as a result of advertising the same product. How it works: You report conversions with cart data for completed purchases on your website. If the ad that was interacted with before the purchase has an associated product (see Shopping Ads) then this product is considered the advertised product. Any product included in the order the customer places is a sold product. If the advertised and sold products match, then the total value you made from the sales of these products is shown under lead revenue. Example: Someone clicked on a Shopping ad for a hat then bought the same hat and a shirt. The hat is priced $10 and the shirt is priced $20. The lead revenue of this order is $10. This metric is only available if you report conversions with cart data. This metric is a monetary value and returned in the customer's currency by default. See the metrics_currency parameter at https://developers.google.com/search-ads/reporting/query/query-structure#parameters_clause

        :param client_account_lead_revenue_micros: The client_account_lead_revenue_micros of this GoogleAdsSearchads360V0CommonMetrics.
        :type client_account_lead_revenue_micros: str
        """

        self._client_account_lead_revenue_micros = client_account_lead_revenue_micros

    @property
    def client_account_lead_units_sold(self):
        """Gets the client_account_lead_units_sold of this GoogleAdsSearchads360V0CommonMetrics.

        Client account lead units sold is the total number of products sold as a result of advertising the same product. How it works: You report conversions with cart data for completed purchases on your website. If the ad that was interacted with before the purchase has an associated product (see Shopping Ads) then this product is considered the advertised product. Any product included in the order the customer places is a sold product. If the advertised and sold products match, then the total number of these products sold is shown under lead units sold. Example: Someone clicked on a Shopping ad for a hat then bought the same hat, a shirt and a jacket. The lead units sold in this order is 1. This metric is only available if you report conversions with cart data.

        :return: The client_account_lead_units_sold of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: float
        """
        return self._client_account_lead_units_sold

    @client_account_lead_units_sold.setter
    def client_account_lead_units_sold(self, client_account_lead_units_sold):
        """Sets the client_account_lead_units_sold of this GoogleAdsSearchads360V0CommonMetrics.

        Client account lead units sold is the total number of products sold as a result of advertising the same product. How it works: You report conversions with cart data for completed purchases on your website. If the ad that was interacted with before the purchase has an associated product (see Shopping Ads) then this product is considered the advertised product. Any product included in the order the customer places is a sold product. If the advertised and sold products match, then the total number of these products sold is shown under lead units sold. Example: Someone clicked on a Shopping ad for a hat then bought the same hat, a shirt and a jacket. The lead units sold in this order is 1. This metric is only available if you report conversions with cart data.

        :param client_account_lead_units_sold: The client_account_lead_units_sold of this GoogleAdsSearchads360V0CommonMetrics.
        :type client_account_lead_units_sold: float
        """

        self._client_account_lead_units_sold = client_account_lead_units_sold

    @property
    def client_account_view_through_conversions(self):
        """Gets the client_account_view_through_conversions of this GoogleAdsSearchads360V0CommonMetrics.

        The total number of view-through conversions. These happen when a customer sees an image or rich media ad, then later completes a conversion on your site without interacting with (for example, clicking on) another ad.

        :return: The client_account_view_through_conversions of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: str
        """
        return self._client_account_view_through_conversions

    @client_account_view_through_conversions.setter
    def client_account_view_through_conversions(self, client_account_view_through_conversions):
        """Sets the client_account_view_through_conversions of this GoogleAdsSearchads360V0CommonMetrics.

        The total number of view-through conversions. These happen when a customer sees an image or rich media ad, then later completes a conversion on your site without interacting with (for example, clicking on) another ad.

        :param client_account_view_through_conversions: The client_account_view_through_conversions of this GoogleAdsSearchads360V0CommonMetrics.
        :type client_account_view_through_conversions: str
        """

        self._client_account_view_through_conversions = client_account_view_through_conversions

    @property
    def content_budget_lost_impression_share(self):
        """Gets the content_budget_lost_impression_share of this GoogleAdsSearchads360V0CommonMetrics.

        The estimated percent of times that your ad was eligible to show on the Display Network but didn't because your budget was too low. Note: Content budget lost impression share is reported in the range of 0 to 0.9. Any value above 0.9 is reported as 0.9001.

        :return: The content_budget_lost_impression_share of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: float
        """
        return self._content_budget_lost_impression_share

    @content_budget_lost_impression_share.setter
    def content_budget_lost_impression_share(self, content_budget_lost_impression_share):
        """Sets the content_budget_lost_impression_share of this GoogleAdsSearchads360V0CommonMetrics.

        The estimated percent of times that your ad was eligible to show on the Display Network but didn't because your budget was too low. Note: Content budget lost impression share is reported in the range of 0 to 0.9. Any value above 0.9 is reported as 0.9001.

        :param content_budget_lost_impression_share: The content_budget_lost_impression_share of this GoogleAdsSearchads360V0CommonMetrics.
        :type content_budget_lost_impression_share: float
        """

        self._content_budget_lost_impression_share = content_budget_lost_impression_share

    @property
    def content_impression_share(self):
        """Gets the content_impression_share of this GoogleAdsSearchads360V0CommonMetrics.

        The impressions you've received on the Display Network divided by the estimated number of impressions you were eligible to receive. Note: Content impression share is reported in the range of 0.1 to 1. Any value below 0.1 is reported as 0.0999.

        :return: The content_impression_share of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: float
        """
        return self._content_impression_share

    @content_impression_share.setter
    def content_impression_share(self, content_impression_share):
        """Sets the content_impression_share of this GoogleAdsSearchads360V0CommonMetrics.

        The impressions you've received on the Display Network divided by the estimated number of impressions you were eligible to receive. Note: Content impression share is reported in the range of 0.1 to 1. Any value below 0.1 is reported as 0.0999.

        :param content_impression_share: The content_impression_share of this GoogleAdsSearchads360V0CommonMetrics.
        :type content_impression_share: float
        """

        self._content_impression_share = content_impression_share

    @property
    def content_rank_lost_impression_share(self):
        """Gets the content_rank_lost_impression_share of this GoogleAdsSearchads360V0CommonMetrics.

        The estimated percentage of impressions on the Display Network that your ads didn't receive due to poor Ad Rank. Note: Content rank lost impression share is reported in the range of 0 to 0.9. Any value above 0.9 is reported as 0.9001.

        :return: The content_rank_lost_impression_share of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: float
        """
        return self._content_rank_lost_impression_share

    @content_rank_lost_impression_share.setter
    def content_rank_lost_impression_share(self, content_rank_lost_impression_share):
        """Sets the content_rank_lost_impression_share of this GoogleAdsSearchads360V0CommonMetrics.

        The estimated percentage of impressions on the Display Network that your ads didn't receive due to poor Ad Rank. Note: Content rank lost impression share is reported in the range of 0 to 0.9. Any value above 0.9 is reported as 0.9001.

        :param content_rank_lost_impression_share: The content_rank_lost_impression_share of this GoogleAdsSearchads360V0CommonMetrics.
        :type content_rank_lost_impression_share: float
        """

        self._content_rank_lost_impression_share = content_rank_lost_impression_share

    @property
    def conversion_custom_metrics(self):
        """Gets the conversion_custom_metrics of this GoogleAdsSearchads360V0CommonMetrics.

        The conversion custom metrics.

        :return: The conversion_custom_metrics of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: List[GoogleAdsSearchads360V0CommonValue]
        """
        return self._conversion_custom_metrics

    @conversion_custom_metrics.setter
    def conversion_custom_metrics(self, conversion_custom_metrics):
        """Sets the conversion_custom_metrics of this GoogleAdsSearchads360V0CommonMetrics.

        The conversion custom metrics.

        :param conversion_custom_metrics: The conversion_custom_metrics of this GoogleAdsSearchads360V0CommonMetrics.
        :type conversion_custom_metrics: List[GoogleAdsSearchads360V0CommonValue]
        """

        self._conversion_custom_metrics = conversion_custom_metrics

    @property
    def conversions(self):
        """Gets the conversions of this GoogleAdsSearchads360V0CommonMetrics.

        The number of conversions. This only includes conversion actions which include_in_conversions_metric attribute is set to true. If you use conversion-based bidding, your bid strategies will optimize for these conversions.

        :return: The conversions of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: float
        """
        return self._conversions

    @conversions.setter
    def conversions(self, conversions):
        """Sets the conversions of this GoogleAdsSearchads360V0CommonMetrics.

        The number of conversions. This only includes conversion actions which include_in_conversions_metric attribute is set to true. If you use conversion-based bidding, your bid strategies will optimize for these conversions.

        :param conversions: The conversions of this GoogleAdsSearchads360V0CommonMetrics.
        :type conversions: float
        """

        self._conversions = conversions

    @property
    def conversions_by_conversion_date(self):
        """Gets the conversions_by_conversion_date of this GoogleAdsSearchads360V0CommonMetrics.

        The sum of conversions by conversion date for biddable conversion types. Can be fractional due to attribution modeling. When this column is selected with date, the values in date column means the conversion date.

        :return: The conversions_by_conversion_date of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: float
        """
        return self._conversions_by_conversion_date

    @conversions_by_conversion_date.setter
    def conversions_by_conversion_date(self, conversions_by_conversion_date):
        """Sets the conversions_by_conversion_date of this GoogleAdsSearchads360V0CommonMetrics.

        The sum of conversions by conversion date for biddable conversion types. Can be fractional due to attribution modeling. When this column is selected with date, the values in date column means the conversion date.

        :param conversions_by_conversion_date: The conversions_by_conversion_date of this GoogleAdsSearchads360V0CommonMetrics.
        :type conversions_by_conversion_date: float
        """

        self._conversions_by_conversion_date = conversions_by_conversion_date

    @property
    def conversions_from_interactions_rate(self):
        """Gets the conversions_from_interactions_rate of this GoogleAdsSearchads360V0CommonMetrics.

        Average biddable conversions (from interaction) per conversion eligible interaction. Shows how often, on average, an ad interaction leads to a biddable conversion.

        :return: The conversions_from_interactions_rate of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: float
        """
        return self._conversions_from_interactions_rate

    @conversions_from_interactions_rate.setter
    def conversions_from_interactions_rate(self, conversions_from_interactions_rate):
        """Sets the conversions_from_interactions_rate of this GoogleAdsSearchads360V0CommonMetrics.

        Average biddable conversions (from interaction) per conversion eligible interaction. Shows how often, on average, an ad interaction leads to a biddable conversion.

        :param conversions_from_interactions_rate: The conversions_from_interactions_rate of this GoogleAdsSearchads360V0CommonMetrics.
        :type conversions_from_interactions_rate: float
        """

        self._conversions_from_interactions_rate = conversions_from_interactions_rate

    @property
    def conversions_from_interactions_value_per_interaction(self):
        """Gets the conversions_from_interactions_value_per_interaction of this GoogleAdsSearchads360V0CommonMetrics.

        The value of conversions from interactions divided by the number of ad interactions. This only includes conversion actions which include_in_conversions_metric attribute is set to true. If you use conversion-based bidding, your bid strategies will optimize for these conversions.

        :return: The conversions_from_interactions_value_per_interaction of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: float
        """
        return self._conversions_from_interactions_value_per_interaction

    @conversions_from_interactions_value_per_interaction.setter
    def conversions_from_interactions_value_per_interaction(self, conversions_from_interactions_value_per_interaction):
        """Sets the conversions_from_interactions_value_per_interaction of this GoogleAdsSearchads360V0CommonMetrics.

        The value of conversions from interactions divided by the number of ad interactions. This only includes conversion actions which include_in_conversions_metric attribute is set to true. If you use conversion-based bidding, your bid strategies will optimize for these conversions.

        :param conversions_from_interactions_value_per_interaction: The conversions_from_interactions_value_per_interaction of this GoogleAdsSearchads360V0CommonMetrics.
        :type conversions_from_interactions_value_per_interaction: float
        """

        self._conversions_from_interactions_value_per_interaction = conversions_from_interactions_value_per_interaction

    @property
    def conversions_value(self):
        """Gets the conversions_value of this GoogleAdsSearchads360V0CommonMetrics.

        The sum of conversion values for the conversions included in the \"conversions\" field. This metric is useful only if you entered a value for your conversion actions.

        :return: The conversions_value of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: float
        """
        return self._conversions_value

    @conversions_value.setter
    def conversions_value(self, conversions_value):
        """Sets the conversions_value of this GoogleAdsSearchads360V0CommonMetrics.

        The sum of conversion values for the conversions included in the \"conversions\" field. This metric is useful only if you entered a value for your conversion actions.

        :param conversions_value: The conversions_value of this GoogleAdsSearchads360V0CommonMetrics.
        :type conversions_value: float
        """

        self._conversions_value = conversions_value

    @property
    def conversions_value_by_conversion_date(self):
        """Gets the conversions_value_by_conversion_date of this GoogleAdsSearchads360V0CommonMetrics.

        The sum of biddable conversions value by conversion date. When this column is selected with date, the values in date column means the conversion date.

        :return: The conversions_value_by_conversion_date of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: float
        """
        return self._conversions_value_by_conversion_date

    @conversions_value_by_conversion_date.setter
    def conversions_value_by_conversion_date(self, conversions_value_by_conversion_date):
        """Sets the conversions_value_by_conversion_date of this GoogleAdsSearchads360V0CommonMetrics.

        The sum of biddable conversions value by conversion date. When this column is selected with date, the values in date column means the conversion date.

        :param conversions_value_by_conversion_date: The conversions_value_by_conversion_date of this GoogleAdsSearchads360V0CommonMetrics.
        :type conversions_value_by_conversion_date: float
        """

        self._conversions_value_by_conversion_date = conversions_value_by_conversion_date

    @property
    def conversions_value_per_cost(self):
        """Gets the conversions_value_per_cost of this GoogleAdsSearchads360V0CommonMetrics.

        The value of biddable conversion divided by the total cost of conversion eligible interactions.

        :return: The conversions_value_per_cost of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: float
        """
        return self._conversions_value_per_cost

    @conversions_value_per_cost.setter
    def conversions_value_per_cost(self, conversions_value_per_cost):
        """Sets the conversions_value_per_cost of this GoogleAdsSearchads360V0CommonMetrics.

        The value of biddable conversion divided by the total cost of conversion eligible interactions.

        :param conversions_value_per_cost: The conversions_value_per_cost of this GoogleAdsSearchads360V0CommonMetrics.
        :type conversions_value_per_cost: float
        """

        self._conversions_value_per_cost = conversions_value_per_cost

    @property
    def cost_micros(self):
        """Gets the cost_micros of this GoogleAdsSearchads360V0CommonMetrics.

        The sum of your cost-per-click (CPC) and cost-per-thousand impressions (CPM) costs during this period. This metric is a monetary value and returned in the customer's currency by default. See the metrics_currency parameter at https://developers.google.com/search-ads/reporting/query/query-structure#parameters_clause

        :return: The cost_micros of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: str
        """
        return self._cost_micros

    @cost_micros.setter
    def cost_micros(self, cost_micros):
        """Sets the cost_micros of this GoogleAdsSearchads360V0CommonMetrics.

        The sum of your cost-per-click (CPC) and cost-per-thousand impressions (CPM) costs during this period. This metric is a monetary value and returned in the customer's currency by default. See the metrics_currency parameter at https://developers.google.com/search-ads/reporting/query/query-structure#parameters_clause

        :param cost_micros: The cost_micros of this GoogleAdsSearchads360V0CommonMetrics.
        :type cost_micros: str
        """

        self._cost_micros = cost_micros

    @property
    def cost_per_all_conversions(self):
        """Gets the cost_per_all_conversions of this GoogleAdsSearchads360V0CommonMetrics.

        The cost of ad interactions divided by all conversions.

        :return: The cost_per_all_conversions of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: float
        """
        return self._cost_per_all_conversions

    @cost_per_all_conversions.setter
    def cost_per_all_conversions(self, cost_per_all_conversions):
        """Sets the cost_per_all_conversions of this GoogleAdsSearchads360V0CommonMetrics.

        The cost of ad interactions divided by all conversions.

        :param cost_per_all_conversions: The cost_per_all_conversions of this GoogleAdsSearchads360V0CommonMetrics.
        :type cost_per_all_conversions: float
        """

        self._cost_per_all_conversions = cost_per_all_conversions

    @property
    def cost_per_conversion(self):
        """Gets the cost_per_conversion of this GoogleAdsSearchads360V0CommonMetrics.

        Average conversion eligible cost per biddable conversion.

        :return: The cost_per_conversion of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: float
        """
        return self._cost_per_conversion

    @cost_per_conversion.setter
    def cost_per_conversion(self, cost_per_conversion):
        """Sets the cost_per_conversion of this GoogleAdsSearchads360V0CommonMetrics.

        Average conversion eligible cost per biddable conversion.

        :param cost_per_conversion: The cost_per_conversion of this GoogleAdsSearchads360V0CommonMetrics.
        :type cost_per_conversion: float
        """

        self._cost_per_conversion = cost_per_conversion

    @property
    def cost_per_current_model_attributed_conversion(self):
        """Gets the cost_per_current_model_attributed_conversion of this GoogleAdsSearchads360V0CommonMetrics.

        The cost of ad interactions divided by current model attributed conversions. This only includes conversion actions which include_in_conversions_metric attribute is set to true. If you use conversion-based bidding, your bid strategies will optimize for these conversions.

        :return: The cost_per_current_model_attributed_conversion of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: float
        """
        return self._cost_per_current_model_attributed_conversion

    @cost_per_current_model_attributed_conversion.setter
    def cost_per_current_model_attributed_conversion(self, cost_per_current_model_attributed_conversion):
        """Sets the cost_per_current_model_attributed_conversion of this GoogleAdsSearchads360V0CommonMetrics.

        The cost of ad interactions divided by current model attributed conversions. This only includes conversion actions which include_in_conversions_metric attribute is set to true. If you use conversion-based bidding, your bid strategies will optimize for these conversions.

        :param cost_per_current_model_attributed_conversion: The cost_per_current_model_attributed_conversion of this GoogleAdsSearchads360V0CommonMetrics.
        :type cost_per_current_model_attributed_conversion: float
        """

        self._cost_per_current_model_attributed_conversion = cost_per_current_model_attributed_conversion

    @property
    def cross_device_conversions(self):
        """Gets the cross_device_conversions of this GoogleAdsSearchads360V0CommonMetrics.

        Conversions from when a customer clicks on an ad on one device, then converts on a different device or browser. Cross-device conversions are already included in all_conversions.

        :return: The cross_device_conversions of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: float
        """
        return self._cross_device_conversions

    @cross_device_conversions.setter
    def cross_device_conversions(self, cross_device_conversions):
        """Sets the cross_device_conversions of this GoogleAdsSearchads360V0CommonMetrics.

        Conversions from when a customer clicks on an ad on one device, then converts on a different device or browser. Cross-device conversions are already included in all_conversions.

        :param cross_device_conversions: The cross_device_conversions of this GoogleAdsSearchads360V0CommonMetrics.
        :type cross_device_conversions: float
        """

        self._cross_device_conversions = cross_device_conversions

    @property
    def cross_device_conversions_value(self):
        """Gets the cross_device_conversions_value of this GoogleAdsSearchads360V0CommonMetrics.

        The sum of the value of cross-device conversions.

        :return: The cross_device_conversions_value of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: float
        """
        return self._cross_device_conversions_value

    @cross_device_conversions_value.setter
    def cross_device_conversions_value(self, cross_device_conversions_value):
        """Sets the cross_device_conversions_value of this GoogleAdsSearchads360V0CommonMetrics.

        The sum of the value of cross-device conversions.

        :param cross_device_conversions_value: The cross_device_conversions_value of this GoogleAdsSearchads360V0CommonMetrics.
        :type cross_device_conversions_value: float
        """

        self._cross_device_conversions_value = cross_device_conversions_value

    @property
    def cross_sell_cost_of_goods_sold_micros(self):
        """Gets the cross_sell_cost_of_goods_sold_micros of this GoogleAdsSearchads360V0CommonMetrics.

        Cross-sell cost of goods sold (COGS) is the total cost of products sold as a result of advertising a different product. How it works: You report conversions with cart data for completed purchases on your website. If the ad that was interacted with before the purchase has an associated product (see Shopping Ads) then this product is considered the advertised product. Any product included in the order the customer places is a sold product. If these products don't match then this is considered cross-sell. Cross-sell cost of goods sold is the total cost of the products sold that weren't advertised. Example: Someone clicked on a Shopping ad for a hat then bought the same hat and a shirt. The hat has a cost of goods sold value of $3, the shirt has a cost of goods sold value of $5. The cross-sell cost of goods sold for this order is $5. This metric is only available if you report conversions with cart data. This metric is a monetary value and returned in the customer's currency by default. See the metrics_currency parameter at https://developers.google.com/search-ads/reporting/query/query-structure#parameters_clause

        :return: The cross_sell_cost_of_goods_sold_micros of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: str
        """
        return self._cross_sell_cost_of_goods_sold_micros

    @cross_sell_cost_of_goods_sold_micros.setter
    def cross_sell_cost_of_goods_sold_micros(self, cross_sell_cost_of_goods_sold_micros):
        """Sets the cross_sell_cost_of_goods_sold_micros of this GoogleAdsSearchads360V0CommonMetrics.

        Cross-sell cost of goods sold (COGS) is the total cost of products sold as a result of advertising a different product. How it works: You report conversions with cart data for completed purchases on your website. If the ad that was interacted with before the purchase has an associated product (see Shopping Ads) then this product is considered the advertised product. Any product included in the order the customer places is a sold product. If these products don't match then this is considered cross-sell. Cross-sell cost of goods sold is the total cost of the products sold that weren't advertised. Example: Someone clicked on a Shopping ad for a hat then bought the same hat and a shirt. The hat has a cost of goods sold value of $3, the shirt has a cost of goods sold value of $5. The cross-sell cost of goods sold for this order is $5. This metric is only available if you report conversions with cart data. This metric is a monetary value and returned in the customer's currency by default. See the metrics_currency parameter at https://developers.google.com/search-ads/reporting/query/query-structure#parameters_clause

        :param cross_sell_cost_of_goods_sold_micros: The cross_sell_cost_of_goods_sold_micros of this GoogleAdsSearchads360V0CommonMetrics.
        :type cross_sell_cost_of_goods_sold_micros: str
        """

        self._cross_sell_cost_of_goods_sold_micros = cross_sell_cost_of_goods_sold_micros

    @property
    def cross_sell_gross_profit_micros(self):
        """Gets the cross_sell_gross_profit_micros of this GoogleAdsSearchads360V0CommonMetrics.

        Cross-sell gross profit is the profit you made from products sold as a result of advertising a different product, minus cost of goods sold (COGS). How it works: You report conversions with cart data for completed purchases on your website. If the ad that was interacted with before the purchase has an associated product (see Shopping Ads) then this product is considered the advertised product. Any product included in the purchase is a sold product. If these products don't match then this is considered cross-sell. Cross-sell gross profit is the revenue you made from cross-sell attributed to your ads minus the cost of the goods sold. Example: Someone clicked on a Shopping ad for a hat then bought the same hat and a shirt. The shirt is priced $20 and has a cost of goods sold value of $5. The cross-sell gross profit of this order is $15 = $20 - $5. This metric is only available if you report conversions with cart data. This metric is a monetary value and returned in the customer's currency by default. See the metrics_currency parameter at https://developers.google.com/search-ads/reporting/query/query-structure#parameters_clause

        :return: The cross_sell_gross_profit_micros of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: str
        """
        return self._cross_sell_gross_profit_micros

    @cross_sell_gross_profit_micros.setter
    def cross_sell_gross_profit_micros(self, cross_sell_gross_profit_micros):
        """Sets the cross_sell_gross_profit_micros of this GoogleAdsSearchads360V0CommonMetrics.

        Cross-sell gross profit is the profit you made from products sold as a result of advertising a different product, minus cost of goods sold (COGS). How it works: You report conversions with cart data for completed purchases on your website. If the ad that was interacted with before the purchase has an associated product (see Shopping Ads) then this product is considered the advertised product. Any product included in the purchase is a sold product. If these products don't match then this is considered cross-sell. Cross-sell gross profit is the revenue you made from cross-sell attributed to your ads minus the cost of the goods sold. Example: Someone clicked on a Shopping ad for a hat then bought the same hat and a shirt. The shirt is priced $20 and has a cost of goods sold value of $5. The cross-sell gross profit of this order is $15 = $20 - $5. This metric is only available if you report conversions with cart data. This metric is a monetary value and returned in the customer's currency by default. See the metrics_currency parameter at https://developers.google.com/search-ads/reporting/query/query-structure#parameters_clause

        :param cross_sell_gross_profit_micros: The cross_sell_gross_profit_micros of this GoogleAdsSearchads360V0CommonMetrics.
        :type cross_sell_gross_profit_micros: str
        """

        self._cross_sell_gross_profit_micros = cross_sell_gross_profit_micros

    @property
    def cross_sell_revenue_micros(self):
        """Gets the cross_sell_revenue_micros of this GoogleAdsSearchads360V0CommonMetrics.

        Cross-sell revenue is the total amount you made from products sold as a result of advertising a different product. How it works: You report conversions with cart data for completed purchases on your website. If the ad that was interacted with before the purchase has an associated product (see Shopping Ads) then this product is considered the advertised product. Any product included in the order the customer places is a sold product. If these products don't match then this is considered cross-sell. Cross-sell revenue is the total value you made from cross-sell attributed to your ads. Example: Someone clicked on a Shopping ad for a hat then bought the same hat and a shirt. The hat is priced $10 and the shirt is priced $20. The cross-sell revenue of this order is $20. This metric is only available if you report conversions with cart data. This metric is a monetary value and returned in the customer's currency by default. See the metrics_currency parameter at https://developers.google.com/search-ads/reporting/query/query-structure#parameters_clause

        :return: The cross_sell_revenue_micros of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: str
        """
        return self._cross_sell_revenue_micros

    @cross_sell_revenue_micros.setter
    def cross_sell_revenue_micros(self, cross_sell_revenue_micros):
        """Sets the cross_sell_revenue_micros of this GoogleAdsSearchads360V0CommonMetrics.

        Cross-sell revenue is the total amount you made from products sold as a result of advertising a different product. How it works: You report conversions with cart data for completed purchases on your website. If the ad that was interacted with before the purchase has an associated product (see Shopping Ads) then this product is considered the advertised product. Any product included in the order the customer places is a sold product. If these products don't match then this is considered cross-sell. Cross-sell revenue is the total value you made from cross-sell attributed to your ads. Example: Someone clicked on a Shopping ad for a hat then bought the same hat and a shirt. The hat is priced $10 and the shirt is priced $20. The cross-sell revenue of this order is $20. This metric is only available if you report conversions with cart data. This metric is a monetary value and returned in the customer's currency by default. See the metrics_currency parameter at https://developers.google.com/search-ads/reporting/query/query-structure#parameters_clause

        :param cross_sell_revenue_micros: The cross_sell_revenue_micros of this GoogleAdsSearchads360V0CommonMetrics.
        :type cross_sell_revenue_micros: str
        """

        self._cross_sell_revenue_micros = cross_sell_revenue_micros

    @property
    def cross_sell_units_sold(self):
        """Gets the cross_sell_units_sold of this GoogleAdsSearchads360V0CommonMetrics.

        Cross-sell units sold is the total number of products sold as a result of advertising a different product. How it works: You report conversions with cart data for completed purchases on your website. If the ad that was interacted with before the purchase has an associated product (see Shopping Ads) then this product is considered the advertised product. Any product included in the order the customer places is a sold product. If these products don't match then this is considered cross-sell. Cross-sell units sold is the total number of cross-sold products from all orders attributed to your ads. Example: Someone clicked on a Shopping ad for a hat then bought the same hat, a shirt and a jacket. The cross-sell units sold in this order is 2. This metric is only available if you report conversions with cart data.

        :return: The cross_sell_units_sold of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: float
        """
        return self._cross_sell_units_sold

    @cross_sell_units_sold.setter
    def cross_sell_units_sold(self, cross_sell_units_sold):
        """Sets the cross_sell_units_sold of this GoogleAdsSearchads360V0CommonMetrics.

        Cross-sell units sold is the total number of products sold as a result of advertising a different product. How it works: You report conversions with cart data for completed purchases on your website. If the ad that was interacted with before the purchase has an associated product (see Shopping Ads) then this product is considered the advertised product. Any product included in the order the customer places is a sold product. If these products don't match then this is considered cross-sell. Cross-sell units sold is the total number of cross-sold products from all orders attributed to your ads. Example: Someone clicked on a Shopping ad for a hat then bought the same hat, a shirt and a jacket. The cross-sell units sold in this order is 2. This metric is only available if you report conversions with cart data.

        :param cross_sell_units_sold: The cross_sell_units_sold of this GoogleAdsSearchads360V0CommonMetrics.
        :type cross_sell_units_sold: float
        """

        self._cross_sell_units_sold = cross_sell_units_sold

    @property
    def ctr(self):
        """Gets the ctr of this GoogleAdsSearchads360V0CommonMetrics.

        The number of clicks your ad receives (Clicks) divided by the number of times your ad is shown (Impressions).

        :return: The ctr of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: float
        """
        return self._ctr

    @ctr.setter
    def ctr(self, ctr):
        """Sets the ctr of this GoogleAdsSearchads360V0CommonMetrics.

        The number of clicks your ad receives (Clicks) divided by the number of times your ad is shown (Impressions).

        :param ctr: The ctr of this GoogleAdsSearchads360V0CommonMetrics.
        :type ctr: float
        """

        self._ctr = ctr

    @property
    def historical_creative_quality_score(self):
        """Gets the historical_creative_quality_score of this GoogleAdsSearchads360V0CommonMetrics.

        The creative historical quality score.

        :return: The historical_creative_quality_score of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: str
        """
        return self._historical_creative_quality_score

    @historical_creative_quality_score.setter
    def historical_creative_quality_score(self, historical_creative_quality_score):
        """Sets the historical_creative_quality_score of this GoogleAdsSearchads360V0CommonMetrics.

        The creative historical quality score.

        :param historical_creative_quality_score: The historical_creative_quality_score of this GoogleAdsSearchads360V0CommonMetrics.
        :type historical_creative_quality_score: str
        """
        allowed_values = ["UNSPECIFIED", "UNKNOWN", "BELOW_AVERAGE", "AVERAGE", "ABOVE_AVERAGE"]  # noqa: E501
        if historical_creative_quality_score not in allowed_values:
            raise ValueError(
                "Invalid value for `historical_creative_quality_score` ({0}), must be one of {1}"
                .format(historical_creative_quality_score, allowed_values)
            )

        self._historical_creative_quality_score = historical_creative_quality_score

    @property
    def historical_landing_page_quality_score(self):
        """Gets the historical_landing_page_quality_score of this GoogleAdsSearchads360V0CommonMetrics.

        The quality of historical landing page experience.

        :return: The historical_landing_page_quality_score of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: str
        """
        return self._historical_landing_page_quality_score

    @historical_landing_page_quality_score.setter
    def historical_landing_page_quality_score(self, historical_landing_page_quality_score):
        """Sets the historical_landing_page_quality_score of this GoogleAdsSearchads360V0CommonMetrics.

        The quality of historical landing page experience.

        :param historical_landing_page_quality_score: The historical_landing_page_quality_score of this GoogleAdsSearchads360V0CommonMetrics.
        :type historical_landing_page_quality_score: str
        """
        allowed_values = ["UNSPECIFIED", "UNKNOWN", "BELOW_AVERAGE", "AVERAGE", "ABOVE_AVERAGE"]  # noqa: E501
        if historical_landing_page_quality_score not in allowed_values:
            raise ValueError(
                "Invalid value for `historical_landing_page_quality_score` ({0}), must be one of {1}"
                .format(historical_landing_page_quality_score, allowed_values)
            )

        self._historical_landing_page_quality_score = historical_landing_page_quality_score

    @property
    def historical_quality_score(self):
        """Gets the historical_quality_score of this GoogleAdsSearchads360V0CommonMetrics.

        The historical quality score.

        :return: The historical_quality_score of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: str
        """
        return self._historical_quality_score

    @historical_quality_score.setter
    def historical_quality_score(self, historical_quality_score):
        """Sets the historical_quality_score of this GoogleAdsSearchads360V0CommonMetrics.

        The historical quality score.

        :param historical_quality_score: The historical_quality_score of this GoogleAdsSearchads360V0CommonMetrics.
        :type historical_quality_score: str
        """

        self._historical_quality_score = historical_quality_score

    @property
    def historical_search_predicted_ctr(self):
        """Gets the historical_search_predicted_ctr of this GoogleAdsSearchads360V0CommonMetrics.

        The historical search predicted click through rate (CTR).

        :return: The historical_search_predicted_ctr of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: str
        """
        return self._historical_search_predicted_ctr

    @historical_search_predicted_ctr.setter
    def historical_search_predicted_ctr(self, historical_search_predicted_ctr):
        """Sets the historical_search_predicted_ctr of this GoogleAdsSearchads360V0CommonMetrics.

        The historical search predicted click through rate (CTR).

        :param historical_search_predicted_ctr: The historical_search_predicted_ctr of this GoogleAdsSearchads360V0CommonMetrics.
        :type historical_search_predicted_ctr: str
        """
        allowed_values = ["UNSPECIFIED", "UNKNOWN", "BELOW_AVERAGE", "AVERAGE", "ABOVE_AVERAGE"]  # noqa: E501
        if historical_search_predicted_ctr not in allowed_values:
            raise ValueError(
                "Invalid value for `historical_search_predicted_ctr` ({0}), must be one of {1}"
                .format(historical_search_predicted_ctr, allowed_values)
            )

        self._historical_search_predicted_ctr = historical_search_predicted_ctr

    @property
    def impressions(self):
        """Gets the impressions of this GoogleAdsSearchads360V0CommonMetrics.

        Count of how often your ad has appeared on a search results page or website on the Google Network.

        :return: The impressions of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: str
        """
        return self._impressions

    @impressions.setter
    def impressions(self, impressions):
        """Sets the impressions of this GoogleAdsSearchads360V0CommonMetrics.

        Count of how often your ad has appeared on a search results page or website on the Google Network.

        :param impressions: The impressions of this GoogleAdsSearchads360V0CommonMetrics.
        :type impressions: str
        """

        self._impressions = impressions

    @property
    def interaction_event_types(self):
        """Gets the interaction_event_types of this GoogleAdsSearchads360V0CommonMetrics.

        The types of payable and free interactions.

        :return: The interaction_event_types of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: List[str]
        """
        return self._interaction_event_types

    @interaction_event_types.setter
    def interaction_event_types(self, interaction_event_types):
        """Sets the interaction_event_types of this GoogleAdsSearchads360V0CommonMetrics.

        The types of payable and free interactions.

        :param interaction_event_types: The interaction_event_types of this GoogleAdsSearchads360V0CommonMetrics.
        :type interaction_event_types: List[str]
        """
        allowed_values = ["UNSPECIFIED", "UNKNOWN", "CLICK", "ENGAGEMENT", "VIDEO_VIEW", "NONE"]  # noqa: E501
        if not set(interaction_event_types).issubset(set(allowed_values)):
            raise ValueError(
                "Invalid values for `interaction_event_types` [{0}], must be a subset of [{1}]"
                .format(", ".join(map(str, set(interaction_event_types) - set(allowed_values))),
                        ", ".join(map(str, allowed_values)))
            )

        self._interaction_event_types = interaction_event_types

    @property
    def interaction_rate(self):
        """Gets the interaction_rate of this GoogleAdsSearchads360V0CommonMetrics.

        How often people interact with your ad after it is shown to them. This is the number of interactions divided by the number of times your ad is shown.

        :return: The interaction_rate of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: float
        """
        return self._interaction_rate

    @interaction_rate.setter
    def interaction_rate(self, interaction_rate):
        """Sets the interaction_rate of this GoogleAdsSearchads360V0CommonMetrics.

        How often people interact with your ad after it is shown to them. This is the number of interactions divided by the number of times your ad is shown.

        :param interaction_rate: The interaction_rate of this GoogleAdsSearchads360V0CommonMetrics.
        :type interaction_rate: float
        """

        self._interaction_rate = interaction_rate

    @property
    def interactions(self):
        """Gets the interactions of this GoogleAdsSearchads360V0CommonMetrics.

        The number of interactions. An interaction is the main user action associated with an ad format-clicks for text and shopping ads, views for video ads, and so on.

        :return: The interactions of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: str
        """
        return self._interactions

    @interactions.setter
    def interactions(self, interactions):
        """Sets the interactions of this GoogleAdsSearchads360V0CommonMetrics.

        The number of interactions. An interaction is the main user action associated with an ad format-clicks for text and shopping ads, views for video ads, and so on.

        :param interactions: The interactions of this GoogleAdsSearchads360V0CommonMetrics.
        :type interactions: str
        """

        self._interactions = interactions

    @property
    def invalid_click_rate(self):
        """Gets the invalid_click_rate of this GoogleAdsSearchads360V0CommonMetrics.

        The percentage of clicks filtered out of your total number of clicks (filtered + non-filtered clicks) during the reporting period.

        :return: The invalid_click_rate of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: float
        """
        return self._invalid_click_rate

    @invalid_click_rate.setter
    def invalid_click_rate(self, invalid_click_rate):
        """Sets the invalid_click_rate of this GoogleAdsSearchads360V0CommonMetrics.

        The percentage of clicks filtered out of your total number of clicks (filtered + non-filtered clicks) during the reporting period.

        :param invalid_click_rate: The invalid_click_rate of this GoogleAdsSearchads360V0CommonMetrics.
        :type invalid_click_rate: float
        """

        self._invalid_click_rate = invalid_click_rate

    @property
    def invalid_clicks(self):
        """Gets the invalid_clicks of this GoogleAdsSearchads360V0CommonMetrics.

        Number of clicks Google considers illegitimate and doesn't charge you for.

        :return: The invalid_clicks of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: str
        """
        return self._invalid_clicks

    @invalid_clicks.setter
    def invalid_clicks(self, invalid_clicks):
        """Sets the invalid_clicks of this GoogleAdsSearchads360V0CommonMetrics.

        Number of clicks Google considers illegitimate and doesn't charge you for.

        :param invalid_clicks: The invalid_clicks of this GoogleAdsSearchads360V0CommonMetrics.
        :type invalid_clicks: str
        """

        self._invalid_clicks = invalid_clicks

    @property
    def lead_cost_of_goods_sold_micros(self):
        """Gets the lead_cost_of_goods_sold_micros of this GoogleAdsSearchads360V0CommonMetrics.

        Lead cost of goods sold (COGS) is the total cost of products sold as a result of advertising the same product. How it works: You report conversions with cart data for completed purchases on your website. If the ad that was interacted with has an associated product (see Shopping Ads) then this product is considered the advertised product. Any product included in the order the customer places is a sold product. If the advertised and sold products match, then the cost of these goods is counted under lead cost of goods sold. Example: Someone clicked on a Shopping ad for a hat then bought the same hat and a shirt. The hat has a cost of goods sold value of $3, the shirt has a cost of goods sold value of $5. The lead cost of goods sold for this order is $3. This metric is only available if you report conversions with cart data. This metric is a monetary value and returned in the customer's currency by default. See the metrics_currency parameter at https://developers.google.com/search-ads/reporting/query/query-structure#parameters_clause

        :return: The lead_cost_of_goods_sold_micros of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: str
        """
        return self._lead_cost_of_goods_sold_micros

    @lead_cost_of_goods_sold_micros.setter
    def lead_cost_of_goods_sold_micros(self, lead_cost_of_goods_sold_micros):
        """Sets the lead_cost_of_goods_sold_micros of this GoogleAdsSearchads360V0CommonMetrics.

        Lead cost of goods sold (COGS) is the total cost of products sold as a result of advertising the same product. How it works: You report conversions with cart data for completed purchases on your website. If the ad that was interacted with has an associated product (see Shopping Ads) then this product is considered the advertised product. Any product included in the order the customer places is a sold product. If the advertised and sold products match, then the cost of these goods is counted under lead cost of goods sold. Example: Someone clicked on a Shopping ad for a hat then bought the same hat and a shirt. The hat has a cost of goods sold value of $3, the shirt has a cost of goods sold value of $5. The lead cost of goods sold for this order is $3. This metric is only available if you report conversions with cart data. This metric is a monetary value and returned in the customer's currency by default. See the metrics_currency parameter at https://developers.google.com/search-ads/reporting/query/query-structure#parameters_clause

        :param lead_cost_of_goods_sold_micros: The lead_cost_of_goods_sold_micros of this GoogleAdsSearchads360V0CommonMetrics.
        :type lead_cost_of_goods_sold_micros: str
        """

        self._lead_cost_of_goods_sold_micros = lead_cost_of_goods_sold_micros

    @property
    def lead_gross_profit_micros(self):
        """Gets the lead_gross_profit_micros of this GoogleAdsSearchads360V0CommonMetrics.

        Lead gross profit is the profit you made from products sold as a result of advertising the same product, minus cost of goods sold (COGS). How it works: You report conversions with cart data for completed purchases on your website. If the ad that was interacted with before the purchase has an associated product (see Shopping Ads) then this product is considered the advertised product. Any product included in the order the customer places is a sold product. If the advertised and sold products match, then the revenue you made from these sales minus the cost of goods sold is your lead gross profit. Example: Someone clicked on a Shopping ad for a hat then bought the same hat and a shirt. The hat is priced $10 and has a cost of goods sold value of $3. The lead gross profit of this order is $7 = $10 - $3. This metric is only available if you report conversions with cart data. This metric is a monetary value and returned in the customer's currency by default. See the metrics_currency parameter at https://developers.google.com/search-ads/reporting/query/query-structure#parameters_clause

        :return: The lead_gross_profit_micros of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: str
        """
        return self._lead_gross_profit_micros

    @lead_gross_profit_micros.setter
    def lead_gross_profit_micros(self, lead_gross_profit_micros):
        """Sets the lead_gross_profit_micros of this GoogleAdsSearchads360V0CommonMetrics.

        Lead gross profit is the profit you made from products sold as a result of advertising the same product, minus cost of goods sold (COGS). How it works: You report conversions with cart data for completed purchases on your website. If the ad that was interacted with before the purchase has an associated product (see Shopping Ads) then this product is considered the advertised product. Any product included in the order the customer places is a sold product. If the advertised and sold products match, then the revenue you made from these sales minus the cost of goods sold is your lead gross profit. Example: Someone clicked on a Shopping ad for a hat then bought the same hat and a shirt. The hat is priced $10 and has a cost of goods sold value of $3. The lead gross profit of this order is $7 = $10 - $3. This metric is only available if you report conversions with cart data. This metric is a monetary value and returned in the customer's currency by default. See the metrics_currency parameter at https://developers.google.com/search-ads/reporting/query/query-structure#parameters_clause

        :param lead_gross_profit_micros: The lead_gross_profit_micros of this GoogleAdsSearchads360V0CommonMetrics.
        :type lead_gross_profit_micros: str
        """

        self._lead_gross_profit_micros = lead_gross_profit_micros

    @property
    def lead_revenue_micros(self):
        """Gets the lead_revenue_micros of this GoogleAdsSearchads360V0CommonMetrics.

        Lead revenue is the total amount you made from products sold as a result of advertising the same product. How it works: You report conversions with cart data for completed purchases on your website. If the ad that was interacted with before the purchase has an associated product (see Shopping Ads) then this product is considered the advertised product. Any product included in the order the customer places is a sold product. If the advertised and sold products match, then the total value you made from the sales of these products is shown under lead revenue. Example: Someone clicked on a Shopping ad for a hat then bought the same hat and a shirt. The hat is priced $10 and the shirt is priced $20. The lead revenue of this order is $10. This metric is only available if you report conversions with cart data. This metric is a monetary value and returned in the customer's currency by default. See the metrics_currency parameter at https://developers.google.com/search-ads/reporting/query/query-structure#parameters_clause

        :return: The lead_revenue_micros of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: str
        """
        return self._lead_revenue_micros

    @lead_revenue_micros.setter
    def lead_revenue_micros(self, lead_revenue_micros):
        """Sets the lead_revenue_micros of this GoogleAdsSearchads360V0CommonMetrics.

        Lead revenue is the total amount you made from products sold as a result of advertising the same product. How it works: You report conversions with cart data for completed purchases on your website. If the ad that was interacted with before the purchase has an associated product (see Shopping Ads) then this product is considered the advertised product. Any product included in the order the customer places is a sold product. If the advertised and sold products match, then the total value you made from the sales of these products is shown under lead revenue. Example: Someone clicked on a Shopping ad for a hat then bought the same hat and a shirt. The hat is priced $10 and the shirt is priced $20. The lead revenue of this order is $10. This metric is only available if you report conversions with cart data. This metric is a monetary value and returned in the customer's currency by default. See the metrics_currency parameter at https://developers.google.com/search-ads/reporting/query/query-structure#parameters_clause

        :param lead_revenue_micros: The lead_revenue_micros of this GoogleAdsSearchads360V0CommonMetrics.
        :type lead_revenue_micros: str
        """

        self._lead_revenue_micros = lead_revenue_micros

    @property
    def lead_units_sold(self):
        """Gets the lead_units_sold of this GoogleAdsSearchads360V0CommonMetrics.

        Lead units sold is the total number of products sold as a result of advertising the same product. How it works: You report conversions with cart data for completed purchases on your website. If the ad that was interacted with before the purchase has an associated product (see Shopping Ads) then this product is considered the advertised product. Any product included in the order the customer places is a sold product. If the advertised and sold products match, then the total number of these products sold is shown under lead units sold. Example: Someone clicked on a Shopping ad for a hat then bought the same hat, a shirt and a jacket. The lead units sold in this order is 1. This metric is only available if you report conversions with cart data.

        :return: The lead_units_sold of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: float
        """
        return self._lead_units_sold

    @lead_units_sold.setter
    def lead_units_sold(self, lead_units_sold):
        """Sets the lead_units_sold of this GoogleAdsSearchads360V0CommonMetrics.

        Lead units sold is the total number of products sold as a result of advertising the same product. How it works: You report conversions with cart data for completed purchases on your website. If the ad that was interacted with before the purchase has an associated product (see Shopping Ads) then this product is considered the advertised product. Any product included in the order the customer places is a sold product. If the advertised and sold products match, then the total number of these products sold is shown under lead units sold. Example: Someone clicked on a Shopping ad for a hat then bought the same hat, a shirt and a jacket. The lead units sold in this order is 1. This metric is only available if you report conversions with cart data.

        :param lead_units_sold: The lead_units_sold of this GoogleAdsSearchads360V0CommonMetrics.
        :type lead_units_sold: float
        """

        self._lead_units_sold = lead_units_sold

    @property
    def mobile_friendly_clicks_percentage(self):
        """Gets the mobile_friendly_clicks_percentage of this GoogleAdsSearchads360V0CommonMetrics.

        The percentage of mobile clicks that go to a mobile-friendly page.

        :return: The mobile_friendly_clicks_percentage of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: float
        """
        return self._mobile_friendly_clicks_percentage

    @mobile_friendly_clicks_percentage.setter
    def mobile_friendly_clicks_percentage(self, mobile_friendly_clicks_percentage):
        """Sets the mobile_friendly_clicks_percentage of this GoogleAdsSearchads360V0CommonMetrics.

        The percentage of mobile clicks that go to a mobile-friendly page.

        :param mobile_friendly_clicks_percentage: The mobile_friendly_clicks_percentage of this GoogleAdsSearchads360V0CommonMetrics.
        :type mobile_friendly_clicks_percentage: float
        """

        self._mobile_friendly_clicks_percentage = mobile_friendly_clicks_percentage

    @property
    def raw_event_conversion_metrics(self):
        """Gets the raw_event_conversion_metrics of this GoogleAdsSearchads360V0CommonMetrics.

        The raw event conversion metrics.

        :return: The raw_event_conversion_metrics of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: List[GoogleAdsSearchads360V0CommonValue]
        """
        return self._raw_event_conversion_metrics

    @raw_event_conversion_metrics.setter
    def raw_event_conversion_metrics(self, raw_event_conversion_metrics):
        """Sets the raw_event_conversion_metrics of this GoogleAdsSearchads360V0CommonMetrics.

        The raw event conversion metrics.

        :param raw_event_conversion_metrics: The raw_event_conversion_metrics of this GoogleAdsSearchads360V0CommonMetrics.
        :type raw_event_conversion_metrics: List[GoogleAdsSearchads360V0CommonValue]
        """

        self._raw_event_conversion_metrics = raw_event_conversion_metrics

    @property
    def search_absolute_top_impression_share(self):
        """Gets the search_absolute_top_impression_share of this GoogleAdsSearchads360V0CommonMetrics.

        The percentage of the customer's Shopping or Search ad impressions that are shown in the most prominent Shopping position. See https://support.google.com/sa360/answer/9566729 for details. Any value below 0.1 is reported as 0.0999.

        :return: The search_absolute_top_impression_share of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: float
        """
        return self._search_absolute_top_impression_share

    @search_absolute_top_impression_share.setter
    def search_absolute_top_impression_share(self, search_absolute_top_impression_share):
        """Sets the search_absolute_top_impression_share of this GoogleAdsSearchads360V0CommonMetrics.

        The percentage of the customer's Shopping or Search ad impressions that are shown in the most prominent Shopping position. See https://support.google.com/sa360/answer/9566729 for details. Any value below 0.1 is reported as 0.0999.

        :param search_absolute_top_impression_share: The search_absolute_top_impression_share of this GoogleAdsSearchads360V0CommonMetrics.
        :type search_absolute_top_impression_share: float
        """

        self._search_absolute_top_impression_share = search_absolute_top_impression_share

    @property
    def search_budget_lost_absolute_top_impression_share(self):
        """Gets the search_budget_lost_absolute_top_impression_share of this GoogleAdsSearchads360V0CommonMetrics.

        The number estimating how often your ad wasn't the very first ad above the organic search results due to a low budget. Note: Search budget lost absolute top impression share is reported in the range of 0 to 0.9. Any value above 0.9 is reported as 0.9001.

        :return: The search_budget_lost_absolute_top_impression_share of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: float
        """
        return self._search_budget_lost_absolute_top_impression_share

    @search_budget_lost_absolute_top_impression_share.setter
    def search_budget_lost_absolute_top_impression_share(self, search_budget_lost_absolute_top_impression_share):
        """Sets the search_budget_lost_absolute_top_impression_share of this GoogleAdsSearchads360V0CommonMetrics.

        The number estimating how often your ad wasn't the very first ad above the organic search results due to a low budget. Note: Search budget lost absolute top impression share is reported in the range of 0 to 0.9. Any value above 0.9 is reported as 0.9001.

        :param search_budget_lost_absolute_top_impression_share: The search_budget_lost_absolute_top_impression_share of this GoogleAdsSearchads360V0CommonMetrics.
        :type search_budget_lost_absolute_top_impression_share: float
        """

        self._search_budget_lost_absolute_top_impression_share = search_budget_lost_absolute_top_impression_share

    @property
    def search_budget_lost_impression_share(self):
        """Gets the search_budget_lost_impression_share of this GoogleAdsSearchads360V0CommonMetrics.

        The estimated percent of times that your ad was eligible to show on the Search Network but didn't because your budget was too low. Note: Search budget lost impression share is reported in the range of 0 to 0.9. Any value above 0.9 is reported as 0.9001.

        :return: The search_budget_lost_impression_share of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: float
        """
        return self._search_budget_lost_impression_share

    @search_budget_lost_impression_share.setter
    def search_budget_lost_impression_share(self, search_budget_lost_impression_share):
        """Sets the search_budget_lost_impression_share of this GoogleAdsSearchads360V0CommonMetrics.

        The estimated percent of times that your ad was eligible to show on the Search Network but didn't because your budget was too low. Note: Search budget lost impression share is reported in the range of 0 to 0.9. Any value above 0.9 is reported as 0.9001.

        :param search_budget_lost_impression_share: The search_budget_lost_impression_share of this GoogleAdsSearchads360V0CommonMetrics.
        :type search_budget_lost_impression_share: float
        """

        self._search_budget_lost_impression_share = search_budget_lost_impression_share

    @property
    def search_budget_lost_top_impression_share(self):
        """Gets the search_budget_lost_top_impression_share of this GoogleAdsSearchads360V0CommonMetrics.

        The number estimating how often your ad didn't show anywhere above the organic search results due to a low budget. Note: Search budget lost top impression share is reported in the range of 0 to 0.9. Any value above 0.9 is reported as 0.9001.

        :return: The search_budget_lost_top_impression_share of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: float
        """
        return self._search_budget_lost_top_impression_share

    @search_budget_lost_top_impression_share.setter
    def search_budget_lost_top_impression_share(self, search_budget_lost_top_impression_share):
        """Sets the search_budget_lost_top_impression_share of this GoogleAdsSearchads360V0CommonMetrics.

        The number estimating how often your ad didn't show anywhere above the organic search results due to a low budget. Note: Search budget lost top impression share is reported in the range of 0 to 0.9. Any value above 0.9 is reported as 0.9001.

        :param search_budget_lost_top_impression_share: The search_budget_lost_top_impression_share of this GoogleAdsSearchads360V0CommonMetrics.
        :type search_budget_lost_top_impression_share: float
        """

        self._search_budget_lost_top_impression_share = search_budget_lost_top_impression_share

    @property
    def search_click_share(self):
        """Gets the search_click_share of this GoogleAdsSearchads360V0CommonMetrics.

        The number of clicks you've received on the Search Network divided by the estimated number of clicks you were eligible to receive. Note: Search click share is reported in the range of 0.1 to 1. Any value below 0.1 is reported as 0.0999.

        :return: The search_click_share of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: float
        """
        return self._search_click_share

    @search_click_share.setter
    def search_click_share(self, search_click_share):
        """Sets the search_click_share of this GoogleAdsSearchads360V0CommonMetrics.

        The number of clicks you've received on the Search Network divided by the estimated number of clicks you were eligible to receive. Note: Search click share is reported in the range of 0.1 to 1. Any value below 0.1 is reported as 0.0999.

        :param search_click_share: The search_click_share of this GoogleAdsSearchads360V0CommonMetrics.
        :type search_click_share: float
        """

        self._search_click_share = search_click_share

    @property
    def search_exact_match_impression_share(self):
        """Gets the search_exact_match_impression_share of this GoogleAdsSearchads360V0CommonMetrics.

        The impressions you've received divided by the estimated number of impressions you were eligible to receive on the Search Network for search terms that matched your keywords exactly (or were close variants of your keyword), regardless of your keyword match types. Note: Search exact match impression share is reported in the range of 0.1 to 1. Any value below 0.1 is reported as 0.0999.

        :return: The search_exact_match_impression_share of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: float
        """
        return self._search_exact_match_impression_share

    @search_exact_match_impression_share.setter
    def search_exact_match_impression_share(self, search_exact_match_impression_share):
        """Sets the search_exact_match_impression_share of this GoogleAdsSearchads360V0CommonMetrics.

        The impressions you've received divided by the estimated number of impressions you were eligible to receive on the Search Network for search terms that matched your keywords exactly (or were close variants of your keyword), regardless of your keyword match types. Note: Search exact match impression share is reported in the range of 0.1 to 1. Any value below 0.1 is reported as 0.0999.

        :param search_exact_match_impression_share: The search_exact_match_impression_share of this GoogleAdsSearchads360V0CommonMetrics.
        :type search_exact_match_impression_share: float
        """

        self._search_exact_match_impression_share = search_exact_match_impression_share

    @property
    def search_impression_share(self):
        """Gets the search_impression_share of this GoogleAdsSearchads360V0CommonMetrics.

        The impressions you've received on the Search Network divided by the estimated number of impressions you were eligible to receive. Note: Search impression share is reported in the range of 0.1 to 1. Any value below 0.1 is reported as 0.0999.

        :return: The search_impression_share of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: float
        """
        return self._search_impression_share

    @search_impression_share.setter
    def search_impression_share(self, search_impression_share):
        """Sets the search_impression_share of this GoogleAdsSearchads360V0CommonMetrics.

        The impressions you've received on the Search Network divided by the estimated number of impressions you were eligible to receive. Note: Search impression share is reported in the range of 0.1 to 1. Any value below 0.1 is reported as 0.0999.

        :param search_impression_share: The search_impression_share of this GoogleAdsSearchads360V0CommonMetrics.
        :type search_impression_share: float
        """

        self._search_impression_share = search_impression_share

    @property
    def search_rank_lost_absolute_top_impression_share(self):
        """Gets the search_rank_lost_absolute_top_impression_share of this GoogleAdsSearchads360V0CommonMetrics.

        The number estimating how often your ad wasn't the very first ad above the organic search results due to poor Ad Rank. Note: Search rank lost absolute top impression share is reported in the range of 0 to 0.9. Any value above 0.9 is reported as 0.9001.

        :return: The search_rank_lost_absolute_top_impression_share of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: float
        """
        return self._search_rank_lost_absolute_top_impression_share

    @search_rank_lost_absolute_top_impression_share.setter
    def search_rank_lost_absolute_top_impression_share(self, search_rank_lost_absolute_top_impression_share):
        """Sets the search_rank_lost_absolute_top_impression_share of this GoogleAdsSearchads360V0CommonMetrics.

        The number estimating how often your ad wasn't the very first ad above the organic search results due to poor Ad Rank. Note: Search rank lost absolute top impression share is reported in the range of 0 to 0.9. Any value above 0.9 is reported as 0.9001.

        :param search_rank_lost_absolute_top_impression_share: The search_rank_lost_absolute_top_impression_share of this GoogleAdsSearchads360V0CommonMetrics.
        :type search_rank_lost_absolute_top_impression_share: float
        """

        self._search_rank_lost_absolute_top_impression_share = search_rank_lost_absolute_top_impression_share

    @property
    def search_rank_lost_impression_share(self):
        """Gets the search_rank_lost_impression_share of this GoogleAdsSearchads360V0CommonMetrics.

        The estimated percentage of impressions on the Search Network that your ads didn't receive due to poor Ad Rank. Note: Search rank lost impression share is reported in the range of 0 to 0.9. Any value above 0.9 is reported as 0.9001.

        :return: The search_rank_lost_impression_share of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: float
        """
        return self._search_rank_lost_impression_share

    @search_rank_lost_impression_share.setter
    def search_rank_lost_impression_share(self, search_rank_lost_impression_share):
        """Sets the search_rank_lost_impression_share of this GoogleAdsSearchads360V0CommonMetrics.

        The estimated percentage of impressions on the Search Network that your ads didn't receive due to poor Ad Rank. Note: Search rank lost impression share is reported in the range of 0 to 0.9. Any value above 0.9 is reported as 0.9001.

        :param search_rank_lost_impression_share: The search_rank_lost_impression_share of this GoogleAdsSearchads360V0CommonMetrics.
        :type search_rank_lost_impression_share: float
        """

        self._search_rank_lost_impression_share = search_rank_lost_impression_share

    @property
    def search_rank_lost_top_impression_share(self):
        """Gets the search_rank_lost_top_impression_share of this GoogleAdsSearchads360V0CommonMetrics.

        The number estimating how often your ad didn't show anywhere above the organic search results due to poor Ad Rank. Note: Search rank lost top impression share is reported in the range of 0 to 0.9. Any value above 0.9 is reported as 0.9001.

        :return: The search_rank_lost_top_impression_share of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: float
        """
        return self._search_rank_lost_top_impression_share

    @search_rank_lost_top_impression_share.setter
    def search_rank_lost_top_impression_share(self, search_rank_lost_top_impression_share):
        """Sets the search_rank_lost_top_impression_share of this GoogleAdsSearchads360V0CommonMetrics.

        The number estimating how often your ad didn't show anywhere above the organic search results due to poor Ad Rank. Note: Search rank lost top impression share is reported in the range of 0 to 0.9. Any value above 0.9 is reported as 0.9001.

        :param search_rank_lost_top_impression_share: The search_rank_lost_top_impression_share of this GoogleAdsSearchads360V0CommonMetrics.
        :type search_rank_lost_top_impression_share: float
        """

        self._search_rank_lost_top_impression_share = search_rank_lost_top_impression_share

    @property
    def search_top_impression_share(self):
        """Gets the search_top_impression_share of this GoogleAdsSearchads360V0CommonMetrics.

        The impressions you've received in the top location (anywhere above the organic search results) compared to the estimated number of impressions you were eligible to receive in the top location. Note: Search top impression share is reported in the range of 0.1 to 1. Any value below 0.1 is reported as 0.0999.

        :return: The search_top_impression_share of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: float
        """
        return self._search_top_impression_share

    @search_top_impression_share.setter
    def search_top_impression_share(self, search_top_impression_share):
        """Sets the search_top_impression_share of this GoogleAdsSearchads360V0CommonMetrics.

        The impressions you've received in the top location (anywhere above the organic search results) compared to the estimated number of impressions you were eligible to receive in the top location. Note: Search top impression share is reported in the range of 0.1 to 1. Any value below 0.1 is reported as 0.0999.

        :param search_top_impression_share: The search_top_impression_share of this GoogleAdsSearchads360V0CommonMetrics.
        :type search_top_impression_share: float
        """

        self._search_top_impression_share = search_top_impression_share

    @property
    def top_impression_percentage(self):
        """Gets the top_impression_percentage of this GoogleAdsSearchads360V0CommonMetrics.

        The percent of your ad impressions that are shown anywhere above the organic search results.

        :return: The top_impression_percentage of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: float
        """
        return self._top_impression_percentage

    @top_impression_percentage.setter
    def top_impression_percentage(self, top_impression_percentage):
        """Sets the top_impression_percentage of this GoogleAdsSearchads360V0CommonMetrics.

        The percent of your ad impressions that are shown anywhere above the organic search results.

        :param top_impression_percentage: The top_impression_percentage of this GoogleAdsSearchads360V0CommonMetrics.
        :type top_impression_percentage: float
        """

        self._top_impression_percentage = top_impression_percentage

    @property
    def value_per_all_conversions(self):
        """Gets the value_per_all_conversions of this GoogleAdsSearchads360V0CommonMetrics.

        The value of all conversions divided by the number of all conversions.

        :return: The value_per_all_conversions of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: float
        """
        return self._value_per_all_conversions

    @value_per_all_conversions.setter
    def value_per_all_conversions(self, value_per_all_conversions):
        """Sets the value_per_all_conversions of this GoogleAdsSearchads360V0CommonMetrics.

        The value of all conversions divided by the number of all conversions.

        :param value_per_all_conversions: The value_per_all_conversions of this GoogleAdsSearchads360V0CommonMetrics.
        :type value_per_all_conversions: float
        """

        self._value_per_all_conversions = value_per_all_conversions

    @property
    def value_per_all_conversions_by_conversion_date(self):
        """Gets the value_per_all_conversions_by_conversion_date of this GoogleAdsSearchads360V0CommonMetrics.

        The value of all conversions divided by the number of all conversions. When this column is selected with date, the values in date column means the conversion date. Details for the by_conversion_date columns are available at https://support.google.com/sa360/answer/9250611.

        :return: The value_per_all_conversions_by_conversion_date of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: float
        """
        return self._value_per_all_conversions_by_conversion_date

    @value_per_all_conversions_by_conversion_date.setter
    def value_per_all_conversions_by_conversion_date(self, value_per_all_conversions_by_conversion_date):
        """Sets the value_per_all_conversions_by_conversion_date of this GoogleAdsSearchads360V0CommonMetrics.

        The value of all conversions divided by the number of all conversions. When this column is selected with date, the values in date column means the conversion date. Details for the by_conversion_date columns are available at https://support.google.com/sa360/answer/9250611.

        :param value_per_all_conversions_by_conversion_date: The value_per_all_conversions_by_conversion_date of this GoogleAdsSearchads360V0CommonMetrics.
        :type value_per_all_conversions_by_conversion_date: float
        """

        self._value_per_all_conversions_by_conversion_date = value_per_all_conversions_by_conversion_date

    @property
    def value_per_conversion(self):
        """Gets the value_per_conversion of this GoogleAdsSearchads360V0CommonMetrics.

        The value of biddable conversion divided by the number of biddable conversions. Shows how much, on average, each of the biddable conversions is worth.

        :return: The value_per_conversion of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: float
        """
        return self._value_per_conversion

    @value_per_conversion.setter
    def value_per_conversion(self, value_per_conversion):
        """Sets the value_per_conversion of this GoogleAdsSearchads360V0CommonMetrics.

        The value of biddable conversion divided by the number of biddable conversions. Shows how much, on average, each of the biddable conversions is worth.

        :param value_per_conversion: The value_per_conversion of this GoogleAdsSearchads360V0CommonMetrics.
        :type value_per_conversion: float
        """

        self._value_per_conversion = value_per_conversion

    @property
    def value_per_conversions_by_conversion_date(self):
        """Gets the value_per_conversions_by_conversion_date of this GoogleAdsSearchads360V0CommonMetrics.

        Biddable conversions value by conversion date divided by biddable conversions by conversion date. Shows how much, on average, each of the biddable conversions is worth (by conversion date). When this column is selected with date, the values in date column means the conversion date.

        :return: The value_per_conversions_by_conversion_date of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: float
        """
        return self._value_per_conversions_by_conversion_date

    @value_per_conversions_by_conversion_date.setter
    def value_per_conversions_by_conversion_date(self, value_per_conversions_by_conversion_date):
        """Sets the value_per_conversions_by_conversion_date of this GoogleAdsSearchads360V0CommonMetrics.

        Biddable conversions value by conversion date divided by biddable conversions by conversion date. Shows how much, on average, each of the biddable conversions is worth (by conversion date). When this column is selected with date, the values in date column means the conversion date.

        :param value_per_conversions_by_conversion_date: The value_per_conversions_by_conversion_date of this GoogleAdsSearchads360V0CommonMetrics.
        :type value_per_conversions_by_conversion_date: float
        """

        self._value_per_conversions_by_conversion_date = value_per_conversions_by_conversion_date

    @property
    def visits(self):
        """Gets the visits of this GoogleAdsSearchads360V0CommonMetrics.

        Clicks that Search Ads 360 has successfully recorded and forwarded to an advertiser's landing page.

        :return: The visits of this GoogleAdsSearchads360V0CommonMetrics.
        :rtype: float
        """
        return self._visits

    @visits.setter
    def visits(self, visits):
        """Sets the visits of this GoogleAdsSearchads360V0CommonMetrics.

        Clicks that Search Ads 360 has successfully recorded and forwarded to an advertiser's landing page.

        :param visits: The visits of this GoogleAdsSearchads360V0CommonMetrics.
        :type visits: float
        """

        self._visits = visits
