# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleAdsSearchads360V0CommonCallToActionAsset(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, call_to_action: str=None):
        """GoogleAdsSearchads360V0CommonCallToActionAsset - a model defined in OpenAPI

        :param call_to_action: The call_to_action of this GoogleAdsSearchads360V0CommonCallToActionAsset.
        """
        self.openapi_types = {
            'call_to_action': str
        }

        self.attribute_map = {
            'call_to_action': 'callToAction'
        }

        self._call_to_action = call_to_action

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleAdsSearchads360V0CommonCallToActionAsset':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleAdsSearchads360V0Common__CallToActionAsset of this GoogleAdsSearchads360V0CommonCallToActionAsset.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def call_to_action(self):
        """Gets the call_to_action of this GoogleAdsSearchads360V0CommonCallToActionAsset.

        Call to action.

        :return: The call_to_action of this GoogleAdsSearchads360V0CommonCallToActionAsset.
        :rtype: str
        """
        return self._call_to_action

    @call_to_action.setter
    def call_to_action(self, call_to_action):
        """Sets the call_to_action of this GoogleAdsSearchads360V0CommonCallToActionAsset.

        Call to action.

        :param call_to_action: The call_to_action of this GoogleAdsSearchads360V0CommonCallToActionAsset.
        :type call_to_action: str
        """
        allowed_values = ["UNSPECIFIED", "UNKNOWN", "LEARN_MORE", "GET_QUOTE", "APPLY_NOW", "SIGN_UP", "CONTACT_US", "SUBSCRIBE", "DOWNLOAD", "BOOK_NOW", "SHOP_NOW", "BUY_NOW", "DONATE_NOW", "ORDER_NOW", "PLAY_NOW", "SEE_MORE", "START_NOW", "VISIT_SITE", "WATCH_NOW"]  # noqa: E501
        if call_to_action not in allowed_values:
            raise ValueError(
                "Invalid value for `call_to_action` ({0}), must be one of {1}"
                .format(call_to_action, allowed_values)
            )

        self._call_to_action = call_to_action
