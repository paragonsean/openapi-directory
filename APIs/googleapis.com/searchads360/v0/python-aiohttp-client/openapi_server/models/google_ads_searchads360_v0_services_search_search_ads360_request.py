# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleAdsSearchads360V0ServicesSearchSearchAds360Request(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, page_size: int=None, page_token: str=None, query: str=None, return_total_results_count: bool=None, summary_row_setting: str=None, validate_only: bool=None):
        """GoogleAdsSearchads360V0ServicesSearchSearchAds360Request - a model defined in OpenAPI

        :param page_size: The page_size of this GoogleAdsSearchads360V0ServicesSearchSearchAds360Request.
        :param page_token: The page_token of this GoogleAdsSearchads360V0ServicesSearchSearchAds360Request.
        :param query: The query of this GoogleAdsSearchads360V0ServicesSearchSearchAds360Request.
        :param return_total_results_count: The return_total_results_count of this GoogleAdsSearchads360V0ServicesSearchSearchAds360Request.
        :param summary_row_setting: The summary_row_setting of this GoogleAdsSearchads360V0ServicesSearchSearchAds360Request.
        :param validate_only: The validate_only of this GoogleAdsSearchads360V0ServicesSearchSearchAds360Request.
        """
        self.openapi_types = {
            'page_size': int,
            'page_token': str,
            'query': str,
            'return_total_results_count': bool,
            'summary_row_setting': str,
            'validate_only': bool
        }

        self.attribute_map = {
            'page_size': 'pageSize',
            'page_token': 'pageToken',
            'query': 'query',
            'return_total_results_count': 'returnTotalResultsCount',
            'summary_row_setting': 'summaryRowSetting',
            'validate_only': 'validateOnly'
        }

        self._page_size = page_size
        self._page_token = page_token
        self._query = query
        self._return_total_results_count = return_total_results_count
        self._summary_row_setting = summary_row_setting
        self._validate_only = validate_only

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleAdsSearchads360V0ServicesSearchSearchAds360Request':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleAdsSearchads360V0Services__SearchSearchAds360Request of this GoogleAdsSearchads360V0ServicesSearchSearchAds360Request.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def page_size(self):
        """Gets the page_size of this GoogleAdsSearchads360V0ServicesSearchSearchAds360Request.

        Number of elements to retrieve in a single page. When too large a page is requested, the server may decide to further limit the number of returned resources.

        :return: The page_size of this GoogleAdsSearchads360V0ServicesSearchSearchAds360Request.
        :rtype: int
        """
        return self._page_size

    @page_size.setter
    def page_size(self, page_size):
        """Sets the page_size of this GoogleAdsSearchads360V0ServicesSearchSearchAds360Request.

        Number of elements to retrieve in a single page. When too large a page is requested, the server may decide to further limit the number of returned resources.

        :param page_size: The page_size of this GoogleAdsSearchads360V0ServicesSearchSearchAds360Request.
        :type page_size: int
        """

        self._page_size = page_size

    @property
    def page_token(self):
        """Gets the page_token of this GoogleAdsSearchads360V0ServicesSearchSearchAds360Request.

        Token of the page to retrieve. If not specified, the first page of results will be returned. Use the value obtained from `next_page_token` in the previous response in order to request the next page of results.

        :return: The page_token of this GoogleAdsSearchads360V0ServicesSearchSearchAds360Request.
        :rtype: str
        """
        return self._page_token

    @page_token.setter
    def page_token(self, page_token):
        """Sets the page_token of this GoogleAdsSearchads360V0ServicesSearchSearchAds360Request.

        Token of the page to retrieve. If not specified, the first page of results will be returned. Use the value obtained from `next_page_token` in the previous response in order to request the next page of results.

        :param page_token: The page_token of this GoogleAdsSearchads360V0ServicesSearchSearchAds360Request.
        :type page_token: str
        """

        self._page_token = page_token

    @property
    def query(self):
        """Gets the query of this GoogleAdsSearchads360V0ServicesSearchSearchAds360Request.

        Required. The query string.

        :return: The query of this GoogleAdsSearchads360V0ServicesSearchSearchAds360Request.
        :rtype: str
        """
        return self._query

    @query.setter
    def query(self, query):
        """Sets the query of this GoogleAdsSearchads360V0ServicesSearchSearchAds360Request.

        Required. The query string.

        :param query: The query of this GoogleAdsSearchads360V0ServicesSearchSearchAds360Request.
        :type query: str
        """

        self._query = query

    @property
    def return_total_results_count(self):
        """Gets the return_total_results_count of this GoogleAdsSearchads360V0ServicesSearchSearchAds360Request.

        If true, the total number of results that match the query ignoring the LIMIT clause will be included in the response. Default is false.

        :return: The return_total_results_count of this GoogleAdsSearchads360V0ServicesSearchSearchAds360Request.
        :rtype: bool
        """
        return self._return_total_results_count

    @return_total_results_count.setter
    def return_total_results_count(self, return_total_results_count):
        """Sets the return_total_results_count of this GoogleAdsSearchads360V0ServicesSearchSearchAds360Request.

        If true, the total number of results that match the query ignoring the LIMIT clause will be included in the response. Default is false.

        :param return_total_results_count: The return_total_results_count of this GoogleAdsSearchads360V0ServicesSearchSearchAds360Request.
        :type return_total_results_count: bool
        """

        self._return_total_results_count = return_total_results_count

    @property
    def summary_row_setting(self):
        """Gets the summary_row_setting of this GoogleAdsSearchads360V0ServicesSearchSearchAds360Request.

        Determines whether a summary row will be returned. By default, summary row is not returned. If requested, the summary row will be sent in a response by itself after all other query results are returned.

        :return: The summary_row_setting of this GoogleAdsSearchads360V0ServicesSearchSearchAds360Request.
        :rtype: str
        """
        return self._summary_row_setting

    @summary_row_setting.setter
    def summary_row_setting(self, summary_row_setting):
        """Sets the summary_row_setting of this GoogleAdsSearchads360V0ServicesSearchSearchAds360Request.

        Determines whether a summary row will be returned. By default, summary row is not returned. If requested, the summary row will be sent in a response by itself after all other query results are returned.

        :param summary_row_setting: The summary_row_setting of this GoogleAdsSearchads360V0ServicesSearchSearchAds360Request.
        :type summary_row_setting: str
        """
        allowed_values = ["UNSPECIFIED", "UNKNOWN", "NO_SUMMARY_ROW", "SUMMARY_ROW_WITH_RESULTS", "SUMMARY_ROW_ONLY"]  # noqa: E501
        if summary_row_setting not in allowed_values:
            raise ValueError(
                "Invalid value for `summary_row_setting` ({0}), must be one of {1}"
                .format(summary_row_setting, allowed_values)
            )

        self._summary_row_setting = summary_row_setting

    @property
    def validate_only(self):
        """Gets the validate_only of this GoogleAdsSearchads360V0ServicesSearchSearchAds360Request.

        If true, the request is validated but not executed.

        :return: The validate_only of this GoogleAdsSearchads360V0ServicesSearchSearchAds360Request.
        :rtype: bool
        """
        return self._validate_only

    @validate_only.setter
    def validate_only(self, validate_only):
        """Sets the validate_only of this GoogleAdsSearchads360V0ServicesSearchSearchAds360Request.

        If true, the request is validated but not executed.

        :param validate_only: The validate_only of this GoogleAdsSearchads360V0ServicesSearchSearchAds360Request.
        :type validate_only: bool
        """

        self._validate_only = validate_only
