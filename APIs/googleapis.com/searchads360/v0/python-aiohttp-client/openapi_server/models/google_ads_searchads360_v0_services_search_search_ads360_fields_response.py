# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_ads_searchads360_v0_resources_search_ads360_field import GoogleAdsSearchads360V0ResourcesSearchAds360Field
from openapi_server import util


class GoogleAdsSearchads360V0ServicesSearchSearchAds360FieldsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, next_page_token: str=None, results: List[GoogleAdsSearchads360V0ResourcesSearchAds360Field]=None, total_results_count: str=None):
        """GoogleAdsSearchads360V0ServicesSearchSearchAds360FieldsResponse - a model defined in OpenAPI

        :param next_page_token: The next_page_token of this GoogleAdsSearchads360V0ServicesSearchSearchAds360FieldsResponse.
        :param results: The results of this GoogleAdsSearchads360V0ServicesSearchSearchAds360FieldsResponse.
        :param total_results_count: The total_results_count of this GoogleAdsSearchads360V0ServicesSearchSearchAds360FieldsResponse.
        """
        self.openapi_types = {
            'next_page_token': str,
            'results': List[GoogleAdsSearchads360V0ResourcesSearchAds360Field],
            'total_results_count': str
        }

        self.attribute_map = {
            'next_page_token': 'nextPageToken',
            'results': 'results',
            'total_results_count': 'totalResultsCount'
        }

        self._next_page_token = next_page_token
        self._results = results
        self._total_results_count = total_results_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleAdsSearchads360V0ServicesSearchSearchAds360FieldsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleAdsSearchads360V0Services__SearchSearchAds360FieldsResponse of this GoogleAdsSearchads360V0ServicesSearchSearchAds360FieldsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def next_page_token(self):
        """Gets the next_page_token of this GoogleAdsSearchads360V0ServicesSearchSearchAds360FieldsResponse.

        Pagination token used to retrieve the next page of results. Pass the content of this string as the `page_token` attribute of the next request. `next_page_token` is not returned for the last page.

        :return: The next_page_token of this GoogleAdsSearchads360V0ServicesSearchSearchAds360FieldsResponse.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this GoogleAdsSearchads360V0ServicesSearchSearchAds360FieldsResponse.

        Pagination token used to retrieve the next page of results. Pass the content of this string as the `page_token` attribute of the next request. `next_page_token` is not returned for the last page.

        :param next_page_token: The next_page_token of this GoogleAdsSearchads360V0ServicesSearchSearchAds360FieldsResponse.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token

    @property
    def results(self):
        """Gets the results of this GoogleAdsSearchads360V0ServicesSearchSearchAds360FieldsResponse.

        The list of fields that matched the query.

        :return: The results of this GoogleAdsSearchads360V0ServicesSearchSearchAds360FieldsResponse.
        :rtype: List[GoogleAdsSearchads360V0ResourcesSearchAds360Field]
        """
        return self._results

    @results.setter
    def results(self, results):
        """Sets the results of this GoogleAdsSearchads360V0ServicesSearchSearchAds360FieldsResponse.

        The list of fields that matched the query.

        :param results: The results of this GoogleAdsSearchads360V0ServicesSearchSearchAds360FieldsResponse.
        :type results: List[GoogleAdsSearchads360V0ResourcesSearchAds360Field]
        """

        self._results = results

    @property
    def total_results_count(self):
        """Gets the total_results_count of this GoogleAdsSearchads360V0ServicesSearchSearchAds360FieldsResponse.

        Total number of results that match the query ignoring the LIMIT clause.

        :return: The total_results_count of this GoogleAdsSearchads360V0ServicesSearchSearchAds360FieldsResponse.
        :rtype: str
        """
        return self._total_results_count

    @total_results_count.setter
    def total_results_count(self, total_results_count):
        """Sets the total_results_count of this GoogleAdsSearchads360V0ServicesSearchSearchAds360FieldsResponse.

        Total number of results that match the query ignoring the LIMIT clause.

        :param total_results_count: The total_results_count of this GoogleAdsSearchads360V0ServicesSearchSearchAds360FieldsResponse.
        :type total_results_count: str
        """

        self._total_results_count = total_results_count
