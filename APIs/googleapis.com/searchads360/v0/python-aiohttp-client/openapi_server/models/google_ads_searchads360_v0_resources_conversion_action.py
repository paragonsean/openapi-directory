# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_ads_searchads360_v0_resources_conversion_action_attribution_model_settings import GoogleAdsSearchads360V0ResourcesConversionActionAttributionModelSettings
from openapi_server.models.google_ads_searchads360_v0_resources_conversion_action_floodlight_settings import GoogleAdsSearchads360V0ResourcesConversionActionFloodlightSettings
from openapi_server.models.google_ads_searchads360_v0_resources_conversion_action_value_settings import GoogleAdsSearchads360V0ResourcesConversionActionValueSettings
from openapi_server import util


class GoogleAdsSearchads360V0ResourcesConversionAction(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, app_id: str=None, attribution_model_settings: GoogleAdsSearchads360V0ResourcesConversionActionAttributionModelSettings=None, category: str=None, click_through_lookback_window_days: str=None, creation_time: str=None, floodlight_settings: GoogleAdsSearchads360V0ResourcesConversionActionFloodlightSettings=None, id: str=None, include_in_client_account_conversions_metric: bool=None, include_in_conversions_metric: bool=None, name: str=None, owner_customer: str=None, primary_for_goal: bool=None, resource_name: str=None, status: str=None, type: str=None, value_settings: GoogleAdsSearchads360V0ResourcesConversionActionValueSettings=None):
        """GoogleAdsSearchads360V0ResourcesConversionAction - a model defined in OpenAPI

        :param app_id: The app_id of this GoogleAdsSearchads360V0ResourcesConversionAction.
        :param attribution_model_settings: The attribution_model_settings of this GoogleAdsSearchads360V0ResourcesConversionAction.
        :param category: The category of this GoogleAdsSearchads360V0ResourcesConversionAction.
        :param click_through_lookback_window_days: The click_through_lookback_window_days of this GoogleAdsSearchads360V0ResourcesConversionAction.
        :param creation_time: The creation_time of this GoogleAdsSearchads360V0ResourcesConversionAction.
        :param floodlight_settings: The floodlight_settings of this GoogleAdsSearchads360V0ResourcesConversionAction.
        :param id: The id of this GoogleAdsSearchads360V0ResourcesConversionAction.
        :param include_in_client_account_conversions_metric: The include_in_client_account_conversions_metric of this GoogleAdsSearchads360V0ResourcesConversionAction.
        :param include_in_conversions_metric: The include_in_conversions_metric of this GoogleAdsSearchads360V0ResourcesConversionAction.
        :param name: The name of this GoogleAdsSearchads360V0ResourcesConversionAction.
        :param owner_customer: The owner_customer of this GoogleAdsSearchads360V0ResourcesConversionAction.
        :param primary_for_goal: The primary_for_goal of this GoogleAdsSearchads360V0ResourcesConversionAction.
        :param resource_name: The resource_name of this GoogleAdsSearchads360V0ResourcesConversionAction.
        :param status: The status of this GoogleAdsSearchads360V0ResourcesConversionAction.
        :param type: The type of this GoogleAdsSearchads360V0ResourcesConversionAction.
        :param value_settings: The value_settings of this GoogleAdsSearchads360V0ResourcesConversionAction.
        """
        self.openapi_types = {
            'app_id': str,
            'attribution_model_settings': GoogleAdsSearchads360V0ResourcesConversionActionAttributionModelSettings,
            'category': str,
            'click_through_lookback_window_days': str,
            'creation_time': str,
            'floodlight_settings': GoogleAdsSearchads360V0ResourcesConversionActionFloodlightSettings,
            'id': str,
            'include_in_client_account_conversions_metric': bool,
            'include_in_conversions_metric': bool,
            'name': str,
            'owner_customer': str,
            'primary_for_goal': bool,
            'resource_name': str,
            'status': str,
            'type': str,
            'value_settings': GoogleAdsSearchads360V0ResourcesConversionActionValueSettings
        }

        self.attribute_map = {
            'app_id': 'appId',
            'attribution_model_settings': 'attributionModelSettings',
            'category': 'category',
            'click_through_lookback_window_days': 'clickThroughLookbackWindowDays',
            'creation_time': 'creationTime',
            'floodlight_settings': 'floodlightSettings',
            'id': 'id',
            'include_in_client_account_conversions_metric': 'includeInClientAccountConversionsMetric',
            'include_in_conversions_metric': 'includeInConversionsMetric',
            'name': 'name',
            'owner_customer': 'ownerCustomer',
            'primary_for_goal': 'primaryForGoal',
            'resource_name': 'resourceName',
            'status': 'status',
            'type': 'type',
            'value_settings': 'valueSettings'
        }

        self._app_id = app_id
        self._attribution_model_settings = attribution_model_settings
        self._category = category
        self._click_through_lookback_window_days = click_through_lookback_window_days
        self._creation_time = creation_time
        self._floodlight_settings = floodlight_settings
        self._id = id
        self._include_in_client_account_conversions_metric = include_in_client_account_conversions_metric
        self._include_in_conversions_metric = include_in_conversions_metric
        self._name = name
        self._owner_customer = owner_customer
        self._primary_for_goal = primary_for_goal
        self._resource_name = resource_name
        self._status = status
        self._type = type
        self._value_settings = value_settings

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleAdsSearchads360V0ResourcesConversionAction':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleAdsSearchads360V0Resources__ConversionAction of this GoogleAdsSearchads360V0ResourcesConversionAction.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def app_id(self):
        """Gets the app_id of this GoogleAdsSearchads360V0ResourcesConversionAction.

        App ID for an app conversion action.

        :return: The app_id of this GoogleAdsSearchads360V0ResourcesConversionAction.
        :rtype: str
        """
        return self._app_id

    @app_id.setter
    def app_id(self, app_id):
        """Sets the app_id of this GoogleAdsSearchads360V0ResourcesConversionAction.

        App ID for an app conversion action.

        :param app_id: The app_id of this GoogleAdsSearchads360V0ResourcesConversionAction.
        :type app_id: str
        """

        self._app_id = app_id

    @property
    def attribution_model_settings(self):
        """Gets the attribution_model_settings of this GoogleAdsSearchads360V0ResourcesConversionAction.


        :return: The attribution_model_settings of this GoogleAdsSearchads360V0ResourcesConversionAction.
        :rtype: GoogleAdsSearchads360V0ResourcesConversionActionAttributionModelSettings
        """
        return self._attribution_model_settings

    @attribution_model_settings.setter
    def attribution_model_settings(self, attribution_model_settings):
        """Sets the attribution_model_settings of this GoogleAdsSearchads360V0ResourcesConversionAction.


        :param attribution_model_settings: The attribution_model_settings of this GoogleAdsSearchads360V0ResourcesConversionAction.
        :type attribution_model_settings: GoogleAdsSearchads360V0ResourcesConversionActionAttributionModelSettings
        """

        self._attribution_model_settings = attribution_model_settings

    @property
    def category(self):
        """Gets the category of this GoogleAdsSearchads360V0ResourcesConversionAction.

        The category of conversions reported for this conversion action.

        :return: The category of this GoogleAdsSearchads360V0ResourcesConversionAction.
        :rtype: str
        """
        return self._category

    @category.setter
    def category(self, category):
        """Sets the category of this GoogleAdsSearchads360V0ResourcesConversionAction.

        The category of conversions reported for this conversion action.

        :param category: The category of this GoogleAdsSearchads360V0ResourcesConversionAction.
        :type category: str
        """
        allowed_values = ["UNSPECIFIED", "UNKNOWN", "DEFAULT", "PAGE_VIEW", "PURCHASE", "SIGNUP", "LEAD", "DOWNLOAD", "ADD_TO_CART", "BEGIN_CHECKOUT", "SUBSCRIBE_PAID", "PHONE_CALL_LEAD", "IMPORTED_LEAD", "SUBMIT_LEAD_FORM", "BOOK_APPOINTMENT", "REQUEST_QUOTE", "GET_DIRECTIONS", "OUTBOUND_CLICK", "CONTACT", "ENGAGEMENT", "STORE_VISIT", "STORE_SALE", "QUALIFIED_LEAD", "CONVERTED_LEAD"]  # noqa: E501
        if category not in allowed_values:
            raise ValueError(
                "Invalid value for `category` ({0}), must be one of {1}"
                .format(category, allowed_values)
            )

        self._category = category

    @property
    def click_through_lookback_window_days(self):
        """Gets the click_through_lookback_window_days of this GoogleAdsSearchads360V0ResourcesConversionAction.

        The maximum number of days that may elapse between an interaction (for example, a click) and a conversion event.

        :return: The click_through_lookback_window_days of this GoogleAdsSearchads360V0ResourcesConversionAction.
        :rtype: str
        """
        return self._click_through_lookback_window_days

    @click_through_lookback_window_days.setter
    def click_through_lookback_window_days(self, click_through_lookback_window_days):
        """Sets the click_through_lookback_window_days of this GoogleAdsSearchads360V0ResourcesConversionAction.

        The maximum number of days that may elapse between an interaction (for example, a click) and a conversion event.

        :param click_through_lookback_window_days: The click_through_lookback_window_days of this GoogleAdsSearchads360V0ResourcesConversionAction.
        :type click_through_lookback_window_days: str
        """

        self._click_through_lookback_window_days = click_through_lookback_window_days

    @property
    def creation_time(self):
        """Gets the creation_time of this GoogleAdsSearchads360V0ResourcesConversionAction.

        Output only. Timestamp of the Floodlight activity's creation, formatted in ISO 8601.

        :return: The creation_time of this GoogleAdsSearchads360V0ResourcesConversionAction.
        :rtype: str
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this GoogleAdsSearchads360V0ResourcesConversionAction.

        Output only. Timestamp of the Floodlight activity's creation, formatted in ISO 8601.

        :param creation_time: The creation_time of this GoogleAdsSearchads360V0ResourcesConversionAction.
        :type creation_time: str
        """

        self._creation_time = creation_time

    @property
    def floodlight_settings(self):
        """Gets the floodlight_settings of this GoogleAdsSearchads360V0ResourcesConversionAction.


        :return: The floodlight_settings of this GoogleAdsSearchads360V0ResourcesConversionAction.
        :rtype: GoogleAdsSearchads360V0ResourcesConversionActionFloodlightSettings
        """
        return self._floodlight_settings

    @floodlight_settings.setter
    def floodlight_settings(self, floodlight_settings):
        """Sets the floodlight_settings of this GoogleAdsSearchads360V0ResourcesConversionAction.


        :param floodlight_settings: The floodlight_settings of this GoogleAdsSearchads360V0ResourcesConversionAction.
        :type floodlight_settings: GoogleAdsSearchads360V0ResourcesConversionActionFloodlightSettings
        """

        self._floodlight_settings = floodlight_settings

    @property
    def id(self):
        """Gets the id of this GoogleAdsSearchads360V0ResourcesConversionAction.

        Output only. The ID of the conversion action.

        :return: The id of this GoogleAdsSearchads360V0ResourcesConversionAction.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this GoogleAdsSearchads360V0ResourcesConversionAction.

        Output only. The ID of the conversion action.

        :param id: The id of this GoogleAdsSearchads360V0ResourcesConversionAction.
        :type id: str
        """

        self._id = id

    @property
    def include_in_client_account_conversions_metric(self):
        """Gets the include_in_client_account_conversions_metric of this GoogleAdsSearchads360V0ResourcesConversionAction.

        Whether this conversion action should be included in the \"client_account_conversions\" metric.

        :return: The include_in_client_account_conversions_metric of this GoogleAdsSearchads360V0ResourcesConversionAction.
        :rtype: bool
        """
        return self._include_in_client_account_conversions_metric

    @include_in_client_account_conversions_metric.setter
    def include_in_client_account_conversions_metric(self, include_in_client_account_conversions_metric):
        """Sets the include_in_client_account_conversions_metric of this GoogleAdsSearchads360V0ResourcesConversionAction.

        Whether this conversion action should be included in the \"client_account_conversions\" metric.

        :param include_in_client_account_conversions_metric: The include_in_client_account_conversions_metric of this GoogleAdsSearchads360V0ResourcesConversionAction.
        :type include_in_client_account_conversions_metric: bool
        """

        self._include_in_client_account_conversions_metric = include_in_client_account_conversions_metric

    @property
    def include_in_conversions_metric(self):
        """Gets the include_in_conversions_metric of this GoogleAdsSearchads360V0ResourcesConversionAction.

        Output only. Whether this conversion action should be included in the \"conversions\" metric.

        :return: The include_in_conversions_metric of this GoogleAdsSearchads360V0ResourcesConversionAction.
        :rtype: bool
        """
        return self._include_in_conversions_metric

    @include_in_conversions_metric.setter
    def include_in_conversions_metric(self, include_in_conversions_metric):
        """Sets the include_in_conversions_metric of this GoogleAdsSearchads360V0ResourcesConversionAction.

        Output only. Whether this conversion action should be included in the \"conversions\" metric.

        :param include_in_conversions_metric: The include_in_conversions_metric of this GoogleAdsSearchads360V0ResourcesConversionAction.
        :type include_in_conversions_metric: bool
        """

        self._include_in_conversions_metric = include_in_conversions_metric

    @property
    def name(self):
        """Gets the name of this GoogleAdsSearchads360V0ResourcesConversionAction.

        The name of the conversion action. This field is required and should not be empty when creating new conversion actions.

        :return: The name of this GoogleAdsSearchads360V0ResourcesConversionAction.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleAdsSearchads360V0ResourcesConversionAction.

        The name of the conversion action. This field is required and should not be empty when creating new conversion actions.

        :param name: The name of this GoogleAdsSearchads360V0ResourcesConversionAction.
        :type name: str
        """

        self._name = name

    @property
    def owner_customer(self):
        """Gets the owner_customer of this GoogleAdsSearchads360V0ResourcesConversionAction.

        Output only. The resource name of the conversion action owner customer, or null if this is a system-defined conversion action.

        :return: The owner_customer of this GoogleAdsSearchads360V0ResourcesConversionAction.
        :rtype: str
        """
        return self._owner_customer

    @owner_customer.setter
    def owner_customer(self, owner_customer):
        """Sets the owner_customer of this GoogleAdsSearchads360V0ResourcesConversionAction.

        Output only. The resource name of the conversion action owner customer, or null if this is a system-defined conversion action.

        :param owner_customer: The owner_customer of this GoogleAdsSearchads360V0ResourcesConversionAction.
        :type owner_customer: str
        """

        self._owner_customer = owner_customer

    @property
    def primary_for_goal(self):
        """Gets the primary_for_goal of this GoogleAdsSearchads360V0ResourcesConversionAction.

        If a conversion action's primary_for_goal bit is false, the conversion action is non-biddable for all campaigns regardless of their customer conversion goal or campaign conversion goal. However, custom conversion goals do not respect primary_for_goal, so if a campaign has a custom conversion goal configured with a primary_for_goal = false conversion action, that conversion action is still biddable. By default, primary_for_goal will be true if not set. In V9, primary_for_goal can only be set to false after creation through an 'update' operation because it's not declared as optional.

        :return: The primary_for_goal of this GoogleAdsSearchads360V0ResourcesConversionAction.
        :rtype: bool
        """
        return self._primary_for_goal

    @primary_for_goal.setter
    def primary_for_goal(self, primary_for_goal):
        """Sets the primary_for_goal of this GoogleAdsSearchads360V0ResourcesConversionAction.

        If a conversion action's primary_for_goal bit is false, the conversion action is non-biddable for all campaigns regardless of their customer conversion goal or campaign conversion goal. However, custom conversion goals do not respect primary_for_goal, so if a campaign has a custom conversion goal configured with a primary_for_goal = false conversion action, that conversion action is still biddable. By default, primary_for_goal will be true if not set. In V9, primary_for_goal can only be set to false after creation through an 'update' operation because it's not declared as optional.

        :param primary_for_goal: The primary_for_goal of this GoogleAdsSearchads360V0ResourcesConversionAction.
        :type primary_for_goal: bool
        """

        self._primary_for_goal = primary_for_goal

    @property
    def resource_name(self):
        """Gets the resource_name of this GoogleAdsSearchads360V0ResourcesConversionAction.

        Immutable. The resource name of the conversion action. Conversion action resource names have the form: `customers/{customer_id}/conversionActions/{conversion_action_id}`

        :return: The resource_name of this GoogleAdsSearchads360V0ResourcesConversionAction.
        :rtype: str
        """
        return self._resource_name

    @resource_name.setter
    def resource_name(self, resource_name):
        """Sets the resource_name of this GoogleAdsSearchads360V0ResourcesConversionAction.

        Immutable. The resource name of the conversion action. Conversion action resource names have the form: `customers/{customer_id}/conversionActions/{conversion_action_id}`

        :param resource_name: The resource_name of this GoogleAdsSearchads360V0ResourcesConversionAction.
        :type resource_name: str
        """

        self._resource_name = resource_name

    @property
    def status(self):
        """Gets the status of this GoogleAdsSearchads360V0ResourcesConversionAction.

        The status of this conversion action for conversion event accrual.

        :return: The status of this GoogleAdsSearchads360V0ResourcesConversionAction.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this GoogleAdsSearchads360V0ResourcesConversionAction.

        The status of this conversion action for conversion event accrual.

        :param status: The status of this GoogleAdsSearchads360V0ResourcesConversionAction.
        :type status: str
        """
        allowed_values = ["UNSPECIFIED", "UNKNOWN", "ENABLED", "REMOVED", "HIDDEN"]  # noqa: E501
        if status not in allowed_values:
            raise ValueError(
                "Invalid value for `status` ({0}), must be one of {1}"
                .format(status, allowed_values)
            )

        self._status = status

    @property
    def type(self):
        """Gets the type of this GoogleAdsSearchads360V0ResourcesConversionAction.

        Immutable. The type of this conversion action.

        :return: The type of this GoogleAdsSearchads360V0ResourcesConversionAction.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this GoogleAdsSearchads360V0ResourcesConversionAction.

        Immutable. The type of this conversion action.

        :param type: The type of this GoogleAdsSearchads360V0ResourcesConversionAction.
        :type type: str
        """
        allowed_values = ["UNSPECIFIED", "UNKNOWN", "AD_CALL", "CLICK_TO_CALL", "GOOGLE_PLAY_DOWNLOAD", "GOOGLE_PLAY_IN_APP_PURCHASE", "UPLOAD_CALLS", "UPLOAD_CLICKS", "WEBPAGE", "WEBSITE_CALL", "STORE_SALES_DIRECT_UPLOAD", "STORE_SALES", "FIREBASE_ANDROID_FIRST_OPEN", "FIREBASE_ANDROID_IN_APP_PURCHASE", "FIREBASE_ANDROID_CUSTOM", "FIREBASE_IOS_FIRST_OPEN", "FIREBASE_IOS_IN_APP_PURCHASE", "FIREBASE_IOS_CUSTOM", "THIRD_PARTY_APP_ANALYTICS_ANDROID_FIRST_OPEN", "THIRD_PARTY_APP_ANALYTICS_ANDROID_IN_APP_PURCHASE", "THIRD_PARTY_APP_ANALYTICS_ANDROID_CUSTOM", "THIRD_PARTY_APP_ANALYTICS_IOS_FIRST_OPEN", "THIRD_PARTY_APP_ANALYTICS_IOS_IN_APP_PURCHASE", "THIRD_PARTY_APP_ANALYTICS_IOS_CUSTOM", "ANDROID_APP_PRE_REGISTRATION", "ANDROID_INSTALLS_ALL_OTHER_APPS", "FLOODLIGHT_ACTION", "FLOODLIGHT_TRANSACTION", "GOOGLE_HOSTED", "LEAD_FORM_SUBMIT", "SALESFORCE", "SEARCH_ADS_360", "SMART_CAMPAIGN_AD_CLICKS_TO_CALL", "SMART_CAMPAIGN_MAP_CLICKS_TO_CALL", "SMART_CAMPAIGN_MAP_DIRECTIONS", "SMART_CAMPAIGN_TRACKED_CALLS", "STORE_VISITS", "WEBPAGE_CODELESS", "UNIVERSAL_ANALYTICS_GOAL", "UNIVERSAL_ANALYTICS_TRANSACTION", "GOOGLE_ANALYTICS_4_CUSTOM", "GOOGLE_ANALYTICS_4_PURCHASE"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type

    @property
    def value_settings(self):
        """Gets the value_settings of this GoogleAdsSearchads360V0ResourcesConversionAction.


        :return: The value_settings of this GoogleAdsSearchads360V0ResourcesConversionAction.
        :rtype: GoogleAdsSearchads360V0ResourcesConversionActionValueSettings
        """
        return self._value_settings

    @value_settings.setter
    def value_settings(self, value_settings):
        """Sets the value_settings of this GoogleAdsSearchads360V0ResourcesConversionAction.


        :param value_settings: The value_settings of this GoogleAdsSearchads360V0ResourcesConversionAction.
        :type value_settings: GoogleAdsSearchads360V0ResourcesConversionActionValueSettings
        """

        self._value_settings = value_settings
