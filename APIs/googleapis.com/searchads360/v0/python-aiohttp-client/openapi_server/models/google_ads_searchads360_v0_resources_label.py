# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_ads_searchads360_v0_common_text_label import GoogleAdsSearchads360V0CommonTextLabel
from openapi_server import util


class GoogleAdsSearchads360V0ResourcesLabel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, name: str=None, resource_name: str=None, status: str=None, text_label: GoogleAdsSearchads360V0CommonTextLabel=None):
        """GoogleAdsSearchads360V0ResourcesLabel - a model defined in OpenAPI

        :param id: The id of this GoogleAdsSearchads360V0ResourcesLabel.
        :param name: The name of this GoogleAdsSearchads360V0ResourcesLabel.
        :param resource_name: The resource_name of this GoogleAdsSearchads360V0ResourcesLabel.
        :param status: The status of this GoogleAdsSearchads360V0ResourcesLabel.
        :param text_label: The text_label of this GoogleAdsSearchads360V0ResourcesLabel.
        """
        self.openapi_types = {
            'id': str,
            'name': str,
            'resource_name': str,
            'status': str,
            'text_label': GoogleAdsSearchads360V0CommonTextLabel
        }

        self.attribute_map = {
            'id': 'id',
            'name': 'name',
            'resource_name': 'resourceName',
            'status': 'status',
            'text_label': 'textLabel'
        }

        self._id = id
        self._name = name
        self._resource_name = resource_name
        self._status = status
        self._text_label = text_label

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleAdsSearchads360V0ResourcesLabel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleAdsSearchads360V0Resources__Label of this GoogleAdsSearchads360V0ResourcesLabel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this GoogleAdsSearchads360V0ResourcesLabel.

        Output only. ID of the label. Read only.

        :return: The id of this GoogleAdsSearchads360V0ResourcesLabel.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this GoogleAdsSearchads360V0ResourcesLabel.

        Output only. ID of the label. Read only.

        :param id: The id of this GoogleAdsSearchads360V0ResourcesLabel.
        :type id: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this GoogleAdsSearchads360V0ResourcesLabel.

        The name of the label. This field is required and should not be empty when creating a new label. The length of this string should be between 1 and 80, inclusive.

        :return: The name of this GoogleAdsSearchads360V0ResourcesLabel.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleAdsSearchads360V0ResourcesLabel.

        The name of the label. This field is required and should not be empty when creating a new label. The length of this string should be between 1 and 80, inclusive.

        :param name: The name of this GoogleAdsSearchads360V0ResourcesLabel.
        :type name: str
        """

        self._name = name

    @property
    def resource_name(self):
        """Gets the resource_name of this GoogleAdsSearchads360V0ResourcesLabel.

        Immutable. Name of the resource. Label resource names have the form: `customers/{customer_id}/labels/{label_id}`

        :return: The resource_name of this GoogleAdsSearchads360V0ResourcesLabel.
        :rtype: str
        """
        return self._resource_name

    @resource_name.setter
    def resource_name(self, resource_name):
        """Sets the resource_name of this GoogleAdsSearchads360V0ResourcesLabel.

        Immutable. Name of the resource. Label resource names have the form: `customers/{customer_id}/labels/{label_id}`

        :param resource_name: The resource_name of this GoogleAdsSearchads360V0ResourcesLabel.
        :type resource_name: str
        """

        self._resource_name = resource_name

    @property
    def status(self):
        """Gets the status of this GoogleAdsSearchads360V0ResourcesLabel.

        Output only. Status of the label. Read only.

        :return: The status of this GoogleAdsSearchads360V0ResourcesLabel.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this GoogleAdsSearchads360V0ResourcesLabel.

        Output only. Status of the label. Read only.

        :param status: The status of this GoogleAdsSearchads360V0ResourcesLabel.
        :type status: str
        """
        allowed_values = ["UNSPECIFIED", "UNKNOWN", "ENABLED", "REMOVED"]  # noqa: E501
        if status not in allowed_values:
            raise ValueError(
                "Invalid value for `status` ({0}), must be one of {1}"
                .format(status, allowed_values)
            )

        self._status = status

    @property
    def text_label(self):
        """Gets the text_label of this GoogleAdsSearchads360V0ResourcesLabel.


        :return: The text_label of this GoogleAdsSearchads360V0ResourcesLabel.
        :rtype: GoogleAdsSearchads360V0CommonTextLabel
        """
        return self._text_label

    @text_label.setter
    def text_label(self, text_label):
        """Sets the text_label of this GoogleAdsSearchads360V0ResourcesLabel.


        :param text_label: The text_label of this GoogleAdsSearchads360V0ResourcesLabel.
        :type text_label: GoogleAdsSearchads360V0CommonTextLabel
        """

        self._text_label = text_label
