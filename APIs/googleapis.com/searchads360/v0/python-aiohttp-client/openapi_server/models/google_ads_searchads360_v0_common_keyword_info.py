# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleAdsSearchads360V0CommonKeywordInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, match_type: str=None, text: str=None):
        """GoogleAdsSearchads360V0CommonKeywordInfo - a model defined in OpenAPI

        :param match_type: The match_type of this GoogleAdsSearchads360V0CommonKeywordInfo.
        :param text: The text of this GoogleAdsSearchads360V0CommonKeywordInfo.
        """
        self.openapi_types = {
            'match_type': str,
            'text': str
        }

        self.attribute_map = {
            'match_type': 'matchType',
            'text': 'text'
        }

        self._match_type = match_type
        self._text = text

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleAdsSearchads360V0CommonKeywordInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleAdsSearchads360V0Common__KeywordInfo of this GoogleAdsSearchads360V0CommonKeywordInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def match_type(self):
        """Gets the match_type of this GoogleAdsSearchads360V0CommonKeywordInfo.

        The match type of the keyword.

        :return: The match_type of this GoogleAdsSearchads360V0CommonKeywordInfo.
        :rtype: str
        """
        return self._match_type

    @match_type.setter
    def match_type(self, match_type):
        """Sets the match_type of this GoogleAdsSearchads360V0CommonKeywordInfo.

        The match type of the keyword.

        :param match_type: The match_type of this GoogleAdsSearchads360V0CommonKeywordInfo.
        :type match_type: str
        """
        allowed_values = ["UNSPECIFIED", "UNKNOWN", "EXACT", "PHRASE", "BROAD"]  # noqa: E501
        if match_type not in allowed_values:
            raise ValueError(
                "Invalid value for `match_type` ({0}), must be one of {1}"
                .format(match_type, allowed_values)
            )

        self._match_type = match_type

    @property
    def text(self):
        """Gets the text of this GoogleAdsSearchads360V0CommonKeywordInfo.

        The text of the keyword (at most 80 characters and 10 words).

        :return: The text of this GoogleAdsSearchads360V0CommonKeywordInfo.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text):
        """Sets the text of this GoogleAdsSearchads360V0CommonKeywordInfo.

        The text of the keyword (at most 80 characters and 10 words).

        :param text: The text of this GoogleAdsSearchads360V0CommonKeywordInfo.
        :type text: str
        """

        self._text = text
