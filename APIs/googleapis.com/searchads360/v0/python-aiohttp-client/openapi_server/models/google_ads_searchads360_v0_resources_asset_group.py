# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleAdsSearchads360V0ResourcesAssetGroup(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ad_strength: str=None, campaign: str=None, final_mobile_urls: List[str]=None, final_urls: List[str]=None, id: str=None, name: str=None, path1: str=None, path2: str=None, resource_name: str=None, status: str=None):
        """GoogleAdsSearchads360V0ResourcesAssetGroup - a model defined in OpenAPI

        :param ad_strength: The ad_strength of this GoogleAdsSearchads360V0ResourcesAssetGroup.
        :param campaign: The campaign of this GoogleAdsSearchads360V0ResourcesAssetGroup.
        :param final_mobile_urls: The final_mobile_urls of this GoogleAdsSearchads360V0ResourcesAssetGroup.
        :param final_urls: The final_urls of this GoogleAdsSearchads360V0ResourcesAssetGroup.
        :param id: The id of this GoogleAdsSearchads360V0ResourcesAssetGroup.
        :param name: The name of this GoogleAdsSearchads360V0ResourcesAssetGroup.
        :param path1: The path1 of this GoogleAdsSearchads360V0ResourcesAssetGroup.
        :param path2: The path2 of this GoogleAdsSearchads360V0ResourcesAssetGroup.
        :param resource_name: The resource_name of this GoogleAdsSearchads360V0ResourcesAssetGroup.
        :param status: The status of this GoogleAdsSearchads360V0ResourcesAssetGroup.
        """
        self.openapi_types = {
            'ad_strength': str,
            'campaign': str,
            'final_mobile_urls': List[str],
            'final_urls': List[str],
            'id': str,
            'name': str,
            'path1': str,
            'path2': str,
            'resource_name': str,
            'status': str
        }

        self.attribute_map = {
            'ad_strength': 'adStrength',
            'campaign': 'campaign',
            'final_mobile_urls': 'finalMobileUrls',
            'final_urls': 'finalUrls',
            'id': 'id',
            'name': 'name',
            'path1': 'path1',
            'path2': 'path2',
            'resource_name': 'resourceName',
            'status': 'status'
        }

        self._ad_strength = ad_strength
        self._campaign = campaign
        self._final_mobile_urls = final_mobile_urls
        self._final_urls = final_urls
        self._id = id
        self._name = name
        self._path1 = path1
        self._path2 = path2
        self._resource_name = resource_name
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleAdsSearchads360V0ResourcesAssetGroup':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleAdsSearchads360V0Resources__AssetGroup of this GoogleAdsSearchads360V0ResourcesAssetGroup.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ad_strength(self):
        """Gets the ad_strength of this GoogleAdsSearchads360V0ResourcesAssetGroup.

        Output only. Overall ad strength of this asset group.

        :return: The ad_strength of this GoogleAdsSearchads360V0ResourcesAssetGroup.
        :rtype: str
        """
        return self._ad_strength

    @ad_strength.setter
    def ad_strength(self, ad_strength):
        """Sets the ad_strength of this GoogleAdsSearchads360V0ResourcesAssetGroup.

        Output only. Overall ad strength of this asset group.

        :param ad_strength: The ad_strength of this GoogleAdsSearchads360V0ResourcesAssetGroup.
        :type ad_strength: str
        """
        allowed_values = ["UNSPECIFIED", "UNKNOWN", "PENDING", "NO_ADS", "POOR", "AVERAGE", "GOOD", "EXCELLENT"]  # noqa: E501
        if ad_strength not in allowed_values:
            raise ValueError(
                "Invalid value for `ad_strength` ({0}), must be one of {1}"
                .format(ad_strength, allowed_values)
            )

        self._ad_strength = ad_strength

    @property
    def campaign(self):
        """Gets the campaign of this GoogleAdsSearchads360V0ResourcesAssetGroup.

        Immutable. The campaign with which this asset group is associated. The asset which is linked to the asset group.

        :return: The campaign of this GoogleAdsSearchads360V0ResourcesAssetGroup.
        :rtype: str
        """
        return self._campaign

    @campaign.setter
    def campaign(self, campaign):
        """Sets the campaign of this GoogleAdsSearchads360V0ResourcesAssetGroup.

        Immutable. The campaign with which this asset group is associated. The asset which is linked to the asset group.

        :param campaign: The campaign of this GoogleAdsSearchads360V0ResourcesAssetGroup.
        :type campaign: str
        """

        self._campaign = campaign

    @property
    def final_mobile_urls(self):
        """Gets the final_mobile_urls of this GoogleAdsSearchads360V0ResourcesAssetGroup.

        A list of final mobile URLs after all cross domain redirects. In performance max, by default, the urls are eligible for expansion unless opted out.

        :return: The final_mobile_urls of this GoogleAdsSearchads360V0ResourcesAssetGroup.
        :rtype: List[str]
        """
        return self._final_mobile_urls

    @final_mobile_urls.setter
    def final_mobile_urls(self, final_mobile_urls):
        """Sets the final_mobile_urls of this GoogleAdsSearchads360V0ResourcesAssetGroup.

        A list of final mobile URLs after all cross domain redirects. In performance max, by default, the urls are eligible for expansion unless opted out.

        :param final_mobile_urls: The final_mobile_urls of this GoogleAdsSearchads360V0ResourcesAssetGroup.
        :type final_mobile_urls: List[str]
        """

        self._final_mobile_urls = final_mobile_urls

    @property
    def final_urls(self):
        """Gets the final_urls of this GoogleAdsSearchads360V0ResourcesAssetGroup.

        A list of final URLs after all cross domain redirects. In performance max, by default, the urls are eligible for expansion unless opted out.

        :return: The final_urls of this GoogleAdsSearchads360V0ResourcesAssetGroup.
        :rtype: List[str]
        """
        return self._final_urls

    @final_urls.setter
    def final_urls(self, final_urls):
        """Sets the final_urls of this GoogleAdsSearchads360V0ResourcesAssetGroup.

        A list of final URLs after all cross domain redirects. In performance max, by default, the urls are eligible for expansion unless opted out.

        :param final_urls: The final_urls of this GoogleAdsSearchads360V0ResourcesAssetGroup.
        :type final_urls: List[str]
        """

        self._final_urls = final_urls

    @property
    def id(self):
        """Gets the id of this GoogleAdsSearchads360V0ResourcesAssetGroup.

        Output only. The ID of the asset group.

        :return: The id of this GoogleAdsSearchads360V0ResourcesAssetGroup.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this GoogleAdsSearchads360V0ResourcesAssetGroup.

        Output only. The ID of the asset group.

        :param id: The id of this GoogleAdsSearchads360V0ResourcesAssetGroup.
        :type id: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this GoogleAdsSearchads360V0ResourcesAssetGroup.

        Required. Name of the asset group. Required. It must have a minimum length of 1 and maximum length of 128. It must be unique under a campaign.

        :return: The name of this GoogleAdsSearchads360V0ResourcesAssetGroup.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleAdsSearchads360V0ResourcesAssetGroup.

        Required. Name of the asset group. Required. It must have a minimum length of 1 and maximum length of 128. It must be unique under a campaign.

        :param name: The name of this GoogleAdsSearchads360V0ResourcesAssetGroup.
        :type name: str
        """

        self._name = name

    @property
    def path1(self):
        """Gets the path1 of this GoogleAdsSearchads360V0ResourcesAssetGroup.

        First part of text that may appear appended to the url displayed in the ad.

        :return: The path1 of this GoogleAdsSearchads360V0ResourcesAssetGroup.
        :rtype: str
        """
        return self._path1

    @path1.setter
    def path1(self, path1):
        """Sets the path1 of this GoogleAdsSearchads360V0ResourcesAssetGroup.

        First part of text that may appear appended to the url displayed in the ad.

        :param path1: The path1 of this GoogleAdsSearchads360V0ResourcesAssetGroup.
        :type path1: str
        """

        self._path1 = path1

    @property
    def path2(self):
        """Gets the path2 of this GoogleAdsSearchads360V0ResourcesAssetGroup.

        Second part of text that may appear appended to the url displayed in the ad. This field can only be set when path1 is set.

        :return: The path2 of this GoogleAdsSearchads360V0ResourcesAssetGroup.
        :rtype: str
        """
        return self._path2

    @path2.setter
    def path2(self, path2):
        """Sets the path2 of this GoogleAdsSearchads360V0ResourcesAssetGroup.

        Second part of text that may appear appended to the url displayed in the ad. This field can only be set when path1 is set.

        :param path2: The path2 of this GoogleAdsSearchads360V0ResourcesAssetGroup.
        :type path2: str
        """

        self._path2 = path2

    @property
    def resource_name(self):
        """Gets the resource_name of this GoogleAdsSearchads360V0ResourcesAssetGroup.

        Immutable. The resource name of the asset group. Asset group resource names have the form: `customers/{customer_id}/assetGroups/{asset_group_id}`

        :return: The resource_name of this GoogleAdsSearchads360V0ResourcesAssetGroup.
        :rtype: str
        """
        return self._resource_name

    @resource_name.setter
    def resource_name(self, resource_name):
        """Sets the resource_name of this GoogleAdsSearchads360V0ResourcesAssetGroup.

        Immutable. The resource name of the asset group. Asset group resource names have the form: `customers/{customer_id}/assetGroups/{asset_group_id}`

        :param resource_name: The resource_name of this GoogleAdsSearchads360V0ResourcesAssetGroup.
        :type resource_name: str
        """

        self._resource_name = resource_name

    @property
    def status(self):
        """Gets the status of this GoogleAdsSearchads360V0ResourcesAssetGroup.

        The status of the asset group.

        :return: The status of this GoogleAdsSearchads360V0ResourcesAssetGroup.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this GoogleAdsSearchads360V0ResourcesAssetGroup.

        The status of the asset group.

        :param status: The status of this GoogleAdsSearchads360V0ResourcesAssetGroup.
        :type status: str
        """
        allowed_values = ["UNSPECIFIED", "UNKNOWN", "ENABLED", "PAUSED", "REMOVED"]  # noqa: E501
        if status not in allowed_values:
            raise ValueError(
                "Invalid value for `status` ({0}), must be one of {1}"
                .format(status, allowed_values)
            )

        self._status = status
