# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleAdsSearchads360V0CommonMobileAppAsset(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, app_id: str=None, app_store: str=None):
        """GoogleAdsSearchads360V0CommonMobileAppAsset - a model defined in OpenAPI

        :param app_id: The app_id of this GoogleAdsSearchads360V0CommonMobileAppAsset.
        :param app_store: The app_store of this GoogleAdsSearchads360V0CommonMobileAppAsset.
        """
        self.openapi_types = {
            'app_id': str,
            'app_store': str
        }

        self.attribute_map = {
            'app_id': 'appId',
            'app_store': 'appStore'
        }

        self._app_id = app_id
        self._app_store = app_store

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleAdsSearchads360V0CommonMobileAppAsset':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleAdsSearchads360V0Common__MobileAppAsset of this GoogleAdsSearchads360V0CommonMobileAppAsset.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def app_id(self):
        """Gets the app_id of this GoogleAdsSearchads360V0CommonMobileAppAsset.

        Required. A string that uniquely identifies a mobile application. It should just contain the platform native id, like \"com.android.ebay\" for Android or \"12345689\" for iOS.

        :return: The app_id of this GoogleAdsSearchads360V0CommonMobileAppAsset.
        :rtype: str
        """
        return self._app_id

    @app_id.setter
    def app_id(self, app_id):
        """Sets the app_id of this GoogleAdsSearchads360V0CommonMobileAppAsset.

        Required. A string that uniquely identifies a mobile application. It should just contain the platform native id, like \"com.android.ebay\" for Android or \"12345689\" for iOS.

        :param app_id: The app_id of this GoogleAdsSearchads360V0CommonMobileAppAsset.
        :type app_id: str
        """

        self._app_id = app_id

    @property
    def app_store(self):
        """Gets the app_store of this GoogleAdsSearchads360V0CommonMobileAppAsset.

        Required. The application store that distributes this specific app.

        :return: The app_store of this GoogleAdsSearchads360V0CommonMobileAppAsset.
        :rtype: str
        """
        return self._app_store

    @app_store.setter
    def app_store(self, app_store):
        """Sets the app_store of this GoogleAdsSearchads360V0CommonMobileAppAsset.

        Required. The application store that distributes this specific app.

        :param app_store: The app_store of this GoogleAdsSearchads360V0CommonMobileAppAsset.
        :type app_store: str
        """
        allowed_values = ["UNSPECIFIED", "UNKNOWN", "APPLE_APP_STORE", "GOOGLE_APP_STORE"]  # noqa: E501
        if app_store not in allowed_values:
            raise ValueError(
                "Invalid value for `app_store` ({0}), must be one of {1}"
                .format(app_store, allowed_values)
            )

        self._app_store = app_store
