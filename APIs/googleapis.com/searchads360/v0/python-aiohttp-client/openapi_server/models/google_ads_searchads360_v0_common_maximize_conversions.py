# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleAdsSearchads360V0CommonMaximizeConversions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cpc_bid_ceiling_micros: str=None, cpc_bid_floor_micros: str=None, target_cpa_micros: str=None):
        """GoogleAdsSearchads360V0CommonMaximizeConversions - a model defined in OpenAPI

        :param cpc_bid_ceiling_micros: The cpc_bid_ceiling_micros of this GoogleAdsSearchads360V0CommonMaximizeConversions.
        :param cpc_bid_floor_micros: The cpc_bid_floor_micros of this GoogleAdsSearchads360V0CommonMaximizeConversions.
        :param target_cpa_micros: The target_cpa_micros of this GoogleAdsSearchads360V0CommonMaximizeConversions.
        """
        self.openapi_types = {
            'cpc_bid_ceiling_micros': str,
            'cpc_bid_floor_micros': str,
            'target_cpa_micros': str
        }

        self.attribute_map = {
            'cpc_bid_ceiling_micros': 'cpcBidCeilingMicros',
            'cpc_bid_floor_micros': 'cpcBidFloorMicros',
            'target_cpa_micros': 'targetCpaMicros'
        }

        self._cpc_bid_ceiling_micros = cpc_bid_ceiling_micros
        self._cpc_bid_floor_micros = cpc_bid_floor_micros
        self._target_cpa_micros = target_cpa_micros

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleAdsSearchads360V0CommonMaximizeConversions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleAdsSearchads360V0Common__MaximizeConversions of this GoogleAdsSearchads360V0CommonMaximizeConversions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cpc_bid_ceiling_micros(self):
        """Gets the cpc_bid_ceiling_micros of this GoogleAdsSearchads360V0CommonMaximizeConversions.

        Maximum bid limit that can be set by the bid strategy. The limit applies to all keywords managed by the strategy. Mutable for portfolio bidding strategies only.

        :return: The cpc_bid_ceiling_micros of this GoogleAdsSearchads360V0CommonMaximizeConversions.
        :rtype: str
        """
        return self._cpc_bid_ceiling_micros

    @cpc_bid_ceiling_micros.setter
    def cpc_bid_ceiling_micros(self, cpc_bid_ceiling_micros):
        """Sets the cpc_bid_ceiling_micros of this GoogleAdsSearchads360V0CommonMaximizeConversions.

        Maximum bid limit that can be set by the bid strategy. The limit applies to all keywords managed by the strategy. Mutable for portfolio bidding strategies only.

        :param cpc_bid_ceiling_micros: The cpc_bid_ceiling_micros of this GoogleAdsSearchads360V0CommonMaximizeConversions.
        :type cpc_bid_ceiling_micros: str
        """

        self._cpc_bid_ceiling_micros = cpc_bid_ceiling_micros

    @property
    def cpc_bid_floor_micros(self):
        """Gets the cpc_bid_floor_micros of this GoogleAdsSearchads360V0CommonMaximizeConversions.

        Minimum bid limit that can be set by the bid strategy. The limit applies to all keywords managed by the strategy. Mutable for portfolio bidding strategies only.

        :return: The cpc_bid_floor_micros of this GoogleAdsSearchads360V0CommonMaximizeConversions.
        :rtype: str
        """
        return self._cpc_bid_floor_micros

    @cpc_bid_floor_micros.setter
    def cpc_bid_floor_micros(self, cpc_bid_floor_micros):
        """Sets the cpc_bid_floor_micros of this GoogleAdsSearchads360V0CommonMaximizeConversions.

        Minimum bid limit that can be set by the bid strategy. The limit applies to all keywords managed by the strategy. Mutable for portfolio bidding strategies only.

        :param cpc_bid_floor_micros: The cpc_bid_floor_micros of this GoogleAdsSearchads360V0CommonMaximizeConversions.
        :type cpc_bid_floor_micros: str
        """

        self._cpc_bid_floor_micros = cpc_bid_floor_micros

    @property
    def target_cpa_micros(self):
        """Gets the target_cpa_micros of this GoogleAdsSearchads360V0CommonMaximizeConversions.

        The target cost-per-action (CPA) option. This is the average amount that you would like to spend per conversion action specified in micro units of the bidding strategy's currency. If set, the bid strategy will get as many conversions as possible at or below the target cost-per-action. If the target CPA is not set, the bid strategy will aim to achieve the lowest possible CPA given the budget.

        :return: The target_cpa_micros of this GoogleAdsSearchads360V0CommonMaximizeConversions.
        :rtype: str
        """
        return self._target_cpa_micros

    @target_cpa_micros.setter
    def target_cpa_micros(self, target_cpa_micros):
        """Sets the target_cpa_micros of this GoogleAdsSearchads360V0CommonMaximizeConversions.

        The target cost-per-action (CPA) option. This is the average amount that you would like to spend per conversion action specified in micro units of the bidding strategy's currency. If set, the bid strategy will get as many conversions as possible at or below the target cost-per-action. If the target CPA is not set, the bid strategy will aim to achieve the lowest possible CPA given the budget.

        :param target_cpa_micros: The target_cpa_micros of this GoogleAdsSearchads360V0CommonMaximizeConversions.
        :type target_cpa_micros: str
        """

        self._target_cpa_micros = target_cpa_micros
