# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_ads_searchads360_v0_common_image_dimension import GoogleAdsSearchads360V0CommonImageDimension
from openapi_server import util


class GoogleAdsSearchads360V0CommonImageAsset(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, file_size: str=None, full_size: GoogleAdsSearchads360V0CommonImageDimension=None, mime_type: str=None):
        """GoogleAdsSearchads360V0CommonImageAsset - a model defined in OpenAPI

        :param file_size: The file_size of this GoogleAdsSearchads360V0CommonImageAsset.
        :param full_size: The full_size of this GoogleAdsSearchads360V0CommonImageAsset.
        :param mime_type: The mime_type of this GoogleAdsSearchads360V0CommonImageAsset.
        """
        self.openapi_types = {
            'file_size': str,
            'full_size': GoogleAdsSearchads360V0CommonImageDimension,
            'mime_type': str
        }

        self.attribute_map = {
            'file_size': 'fileSize',
            'full_size': 'fullSize',
            'mime_type': 'mimeType'
        }

        self._file_size = file_size
        self._full_size = full_size
        self._mime_type = mime_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleAdsSearchads360V0CommonImageAsset':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleAdsSearchads360V0Common__ImageAsset of this GoogleAdsSearchads360V0CommonImageAsset.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def file_size(self):
        """Gets the file_size of this GoogleAdsSearchads360V0CommonImageAsset.

        File size of the image asset in bytes.

        :return: The file_size of this GoogleAdsSearchads360V0CommonImageAsset.
        :rtype: str
        """
        return self._file_size

    @file_size.setter
    def file_size(self, file_size):
        """Sets the file_size of this GoogleAdsSearchads360V0CommonImageAsset.

        File size of the image asset in bytes.

        :param file_size: The file_size of this GoogleAdsSearchads360V0CommonImageAsset.
        :type file_size: str
        """

        self._file_size = file_size

    @property
    def full_size(self):
        """Gets the full_size of this GoogleAdsSearchads360V0CommonImageAsset.


        :return: The full_size of this GoogleAdsSearchads360V0CommonImageAsset.
        :rtype: GoogleAdsSearchads360V0CommonImageDimension
        """
        return self._full_size

    @full_size.setter
    def full_size(self, full_size):
        """Sets the full_size of this GoogleAdsSearchads360V0CommonImageAsset.


        :param full_size: The full_size of this GoogleAdsSearchads360V0CommonImageAsset.
        :type full_size: GoogleAdsSearchads360V0CommonImageDimension
        """

        self._full_size = full_size

    @property
    def mime_type(self):
        """Gets the mime_type of this GoogleAdsSearchads360V0CommonImageAsset.

        MIME type of the image asset.

        :return: The mime_type of this GoogleAdsSearchads360V0CommonImageAsset.
        :rtype: str
        """
        return self._mime_type

    @mime_type.setter
    def mime_type(self, mime_type):
        """Sets the mime_type of this GoogleAdsSearchads360V0CommonImageAsset.

        MIME type of the image asset.

        :param mime_type: The mime_type of this GoogleAdsSearchads360V0CommonImageAsset.
        :type mime_type: str
        """
        allowed_values = ["UNSPECIFIED", "UNKNOWN", "IMAGE_JPEG", "IMAGE_GIF", "IMAGE_PNG", "FLASH", "TEXT_HTML", "PDF", "MSWORD", "MSEXCEL", "RTF", "AUDIO_WAV", "AUDIO_MP3", "HTML5_AD_ZIP"]  # noqa: E501
        if mime_type not in allowed_values:
            raise ValueError(
                "Invalid value for `mime_type` ({0}), must be one of {1}"
                .format(mime_type, allowed_values)
            )

        self._mime_type = mime_type
