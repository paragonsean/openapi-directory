# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_ads_searchads360_v0_common_maximize_conversion_value import GoogleAdsSearchads360V0CommonMaximizeConversionValue
from openapi_server.models.google_ads_searchads360_v0_common_maximize_conversions import GoogleAdsSearchads360V0CommonMaximizeConversions
from openapi_server.models.google_ads_searchads360_v0_common_target_cpa import GoogleAdsSearchads360V0CommonTargetCpa
from openapi_server.models.google_ads_searchads360_v0_common_target_impression_share import GoogleAdsSearchads360V0CommonTargetImpressionShare
from openapi_server.models.google_ads_searchads360_v0_common_target_outrank_share import GoogleAdsSearchads360V0CommonTargetOutrankShare
from openapi_server.models.google_ads_searchads360_v0_common_target_roas import GoogleAdsSearchads360V0CommonTargetRoas
from openapi_server.models.google_ads_searchads360_v0_common_target_spend import GoogleAdsSearchads360V0CommonTargetSpend
from openapi_server import util


class GoogleAdsSearchads360V0ResourcesBiddingStrategy(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, campaign_count: str=None, currency_code: str=None, effective_currency_code: str=None, enhanced_cpc: object=None, id: str=None, maximize_conversion_value: GoogleAdsSearchads360V0CommonMaximizeConversionValue=None, maximize_conversions: GoogleAdsSearchads360V0CommonMaximizeConversions=None, name: str=None, non_removed_campaign_count: str=None, resource_name: str=None, status: str=None, target_cpa: GoogleAdsSearchads360V0CommonTargetCpa=None, target_impression_share: GoogleAdsSearchads360V0CommonTargetImpressionShare=None, target_outrank_share: GoogleAdsSearchads360V0CommonTargetOutrankShare=None, target_roas: GoogleAdsSearchads360V0CommonTargetRoas=None, target_spend: GoogleAdsSearchads360V0CommonTargetSpend=None, type: str=None):
        """GoogleAdsSearchads360V0ResourcesBiddingStrategy - a model defined in OpenAPI

        :param campaign_count: The campaign_count of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.
        :param currency_code: The currency_code of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.
        :param effective_currency_code: The effective_currency_code of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.
        :param enhanced_cpc: The enhanced_cpc of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.
        :param id: The id of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.
        :param maximize_conversion_value: The maximize_conversion_value of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.
        :param maximize_conversions: The maximize_conversions of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.
        :param name: The name of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.
        :param non_removed_campaign_count: The non_removed_campaign_count of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.
        :param resource_name: The resource_name of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.
        :param status: The status of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.
        :param target_cpa: The target_cpa of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.
        :param target_impression_share: The target_impression_share of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.
        :param target_outrank_share: The target_outrank_share of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.
        :param target_roas: The target_roas of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.
        :param target_spend: The target_spend of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.
        :param type: The type of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.
        """
        self.openapi_types = {
            'campaign_count': str,
            'currency_code': str,
            'effective_currency_code': str,
            'enhanced_cpc': object,
            'id': str,
            'maximize_conversion_value': GoogleAdsSearchads360V0CommonMaximizeConversionValue,
            'maximize_conversions': GoogleAdsSearchads360V0CommonMaximizeConversions,
            'name': str,
            'non_removed_campaign_count': str,
            'resource_name': str,
            'status': str,
            'target_cpa': GoogleAdsSearchads360V0CommonTargetCpa,
            'target_impression_share': GoogleAdsSearchads360V0CommonTargetImpressionShare,
            'target_outrank_share': GoogleAdsSearchads360V0CommonTargetOutrankShare,
            'target_roas': GoogleAdsSearchads360V0CommonTargetRoas,
            'target_spend': GoogleAdsSearchads360V0CommonTargetSpend,
            'type': str
        }

        self.attribute_map = {
            'campaign_count': 'campaignCount',
            'currency_code': 'currencyCode',
            'effective_currency_code': 'effectiveCurrencyCode',
            'enhanced_cpc': 'enhancedCpc',
            'id': 'id',
            'maximize_conversion_value': 'maximizeConversionValue',
            'maximize_conversions': 'maximizeConversions',
            'name': 'name',
            'non_removed_campaign_count': 'nonRemovedCampaignCount',
            'resource_name': 'resourceName',
            'status': 'status',
            'target_cpa': 'targetCpa',
            'target_impression_share': 'targetImpressionShare',
            'target_outrank_share': 'targetOutrankShare',
            'target_roas': 'targetRoas',
            'target_spend': 'targetSpend',
            'type': 'type'
        }

        self._campaign_count = campaign_count
        self._currency_code = currency_code
        self._effective_currency_code = effective_currency_code
        self._enhanced_cpc = enhanced_cpc
        self._id = id
        self._maximize_conversion_value = maximize_conversion_value
        self._maximize_conversions = maximize_conversions
        self._name = name
        self._non_removed_campaign_count = non_removed_campaign_count
        self._resource_name = resource_name
        self._status = status
        self._target_cpa = target_cpa
        self._target_impression_share = target_impression_share
        self._target_outrank_share = target_outrank_share
        self._target_roas = target_roas
        self._target_spend = target_spend
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleAdsSearchads360V0ResourcesBiddingStrategy':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleAdsSearchads360V0Resources__BiddingStrategy of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def campaign_count(self):
        """Gets the campaign_count of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.

        Output only. The number of campaigns attached to this bidding strategy. This field is read-only.

        :return: The campaign_count of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.
        :rtype: str
        """
        return self._campaign_count

    @campaign_count.setter
    def campaign_count(self, campaign_count):
        """Sets the campaign_count of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.

        Output only. The number of campaigns attached to this bidding strategy. This field is read-only.

        :param campaign_count: The campaign_count of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.
        :type campaign_count: str
        """

        self._campaign_count = campaign_count

    @property
    def currency_code(self):
        """Gets the currency_code of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.

        Immutable. The currency used by the bidding strategy (ISO 4217 three-letter code). For bidding strategies in manager customers, this currency can be set on creation and defaults to the manager customer's currency. For serving customers, this field cannot be set; all strategies in a serving customer implicitly use the serving customer's currency. In all cases the effective_currency_code field returns the currency used by the strategy.

        :return: The currency_code of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.
        :rtype: str
        """
        return self._currency_code

    @currency_code.setter
    def currency_code(self, currency_code):
        """Sets the currency_code of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.

        Immutable. The currency used by the bidding strategy (ISO 4217 three-letter code). For bidding strategies in manager customers, this currency can be set on creation and defaults to the manager customer's currency. For serving customers, this field cannot be set; all strategies in a serving customer implicitly use the serving customer's currency. In all cases the effective_currency_code field returns the currency used by the strategy.

        :param currency_code: The currency_code of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.
        :type currency_code: str
        """

        self._currency_code = currency_code

    @property
    def effective_currency_code(self):
        """Gets the effective_currency_code of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.

        Output only. The currency used by the bidding strategy (ISO 4217 three-letter code). For bidding strategies in manager customers, this is the currency set by the advertiser when creating the strategy. For serving customers, this is the customer's currency_code. Bidding strategy metrics are reported in this currency. This field is read-only.

        :return: The effective_currency_code of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.
        :rtype: str
        """
        return self._effective_currency_code

    @effective_currency_code.setter
    def effective_currency_code(self, effective_currency_code):
        """Sets the effective_currency_code of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.

        Output only. The currency used by the bidding strategy (ISO 4217 three-letter code). For bidding strategies in manager customers, this is the currency set by the advertiser when creating the strategy. For serving customers, this is the customer's currency_code. Bidding strategy metrics are reported in this currency. This field is read-only.

        :param effective_currency_code: The effective_currency_code of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.
        :type effective_currency_code: str
        """

        self._effective_currency_code = effective_currency_code

    @property
    def enhanced_cpc(self):
        """Gets the enhanced_cpc of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.

        An automated bidding strategy that raises bids for clicks that seem more likely to lead to a conversion and lowers them for clicks where they seem less likely. This bidding strategy is deprecated and cannot be created anymore. Use ManualCpc with enhanced_cpc_enabled set to true for equivalent functionality.

        :return: The enhanced_cpc of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.
        :rtype: object
        """
        return self._enhanced_cpc

    @enhanced_cpc.setter
    def enhanced_cpc(self, enhanced_cpc):
        """Sets the enhanced_cpc of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.

        An automated bidding strategy that raises bids for clicks that seem more likely to lead to a conversion and lowers them for clicks where they seem less likely. This bidding strategy is deprecated and cannot be created anymore. Use ManualCpc with enhanced_cpc_enabled set to true for equivalent functionality.

        :param enhanced_cpc: The enhanced_cpc of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.
        :type enhanced_cpc: object
        """

        self._enhanced_cpc = enhanced_cpc

    @property
    def id(self):
        """Gets the id of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.

        Output only. The ID of the bidding strategy.

        :return: The id of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.

        Output only. The ID of the bidding strategy.

        :param id: The id of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.
        :type id: str
        """

        self._id = id

    @property
    def maximize_conversion_value(self):
        """Gets the maximize_conversion_value of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.


        :return: The maximize_conversion_value of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.
        :rtype: GoogleAdsSearchads360V0CommonMaximizeConversionValue
        """
        return self._maximize_conversion_value

    @maximize_conversion_value.setter
    def maximize_conversion_value(self, maximize_conversion_value):
        """Sets the maximize_conversion_value of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.


        :param maximize_conversion_value: The maximize_conversion_value of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.
        :type maximize_conversion_value: GoogleAdsSearchads360V0CommonMaximizeConversionValue
        """

        self._maximize_conversion_value = maximize_conversion_value

    @property
    def maximize_conversions(self):
        """Gets the maximize_conversions of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.


        :return: The maximize_conversions of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.
        :rtype: GoogleAdsSearchads360V0CommonMaximizeConversions
        """
        return self._maximize_conversions

    @maximize_conversions.setter
    def maximize_conversions(self, maximize_conversions):
        """Sets the maximize_conversions of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.


        :param maximize_conversions: The maximize_conversions of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.
        :type maximize_conversions: GoogleAdsSearchads360V0CommonMaximizeConversions
        """

        self._maximize_conversions = maximize_conversions

    @property
    def name(self):
        """Gets the name of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.

        The name of the bidding strategy. All bidding strategies within an account must be named distinctly. The length of this string should be between 1 and 255, inclusive, in UTF-8 bytes, (trimmed).

        :return: The name of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.

        The name of the bidding strategy. All bidding strategies within an account must be named distinctly. The length of this string should be between 1 and 255, inclusive, in UTF-8 bytes, (trimmed).

        :param name: The name of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.
        :type name: str
        """

        self._name = name

    @property
    def non_removed_campaign_count(self):
        """Gets the non_removed_campaign_count of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.

        Output only. The number of non-removed campaigns attached to this bidding strategy. This field is read-only.

        :return: The non_removed_campaign_count of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.
        :rtype: str
        """
        return self._non_removed_campaign_count

    @non_removed_campaign_count.setter
    def non_removed_campaign_count(self, non_removed_campaign_count):
        """Sets the non_removed_campaign_count of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.

        Output only. The number of non-removed campaigns attached to this bidding strategy. This field is read-only.

        :param non_removed_campaign_count: The non_removed_campaign_count of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.
        :type non_removed_campaign_count: str
        """

        self._non_removed_campaign_count = non_removed_campaign_count

    @property
    def resource_name(self):
        """Gets the resource_name of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.

        Immutable. The resource name of the bidding strategy. Bidding strategy resource names have the form: `customers/{customer_id}/biddingStrategies/{bidding_strategy_id}`

        :return: The resource_name of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.
        :rtype: str
        """
        return self._resource_name

    @resource_name.setter
    def resource_name(self, resource_name):
        """Sets the resource_name of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.

        Immutable. The resource name of the bidding strategy. Bidding strategy resource names have the form: `customers/{customer_id}/biddingStrategies/{bidding_strategy_id}`

        :param resource_name: The resource_name of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.
        :type resource_name: str
        """

        self._resource_name = resource_name

    @property
    def status(self):
        """Gets the status of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.

        Output only. The status of the bidding strategy. This field is read-only.

        :return: The status of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.

        Output only. The status of the bidding strategy. This field is read-only.

        :param status: The status of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.
        :type status: str
        """
        allowed_values = ["UNSPECIFIED", "UNKNOWN", "ENABLED", "REMOVED"]  # noqa: E501
        if status not in allowed_values:
            raise ValueError(
                "Invalid value for `status` ({0}), must be one of {1}"
                .format(status, allowed_values)
            )

        self._status = status

    @property
    def target_cpa(self):
        """Gets the target_cpa of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.


        :return: The target_cpa of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.
        :rtype: GoogleAdsSearchads360V0CommonTargetCpa
        """
        return self._target_cpa

    @target_cpa.setter
    def target_cpa(self, target_cpa):
        """Sets the target_cpa of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.


        :param target_cpa: The target_cpa of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.
        :type target_cpa: GoogleAdsSearchads360V0CommonTargetCpa
        """

        self._target_cpa = target_cpa

    @property
    def target_impression_share(self):
        """Gets the target_impression_share of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.


        :return: The target_impression_share of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.
        :rtype: GoogleAdsSearchads360V0CommonTargetImpressionShare
        """
        return self._target_impression_share

    @target_impression_share.setter
    def target_impression_share(self, target_impression_share):
        """Sets the target_impression_share of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.


        :param target_impression_share: The target_impression_share of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.
        :type target_impression_share: GoogleAdsSearchads360V0CommonTargetImpressionShare
        """

        self._target_impression_share = target_impression_share

    @property
    def target_outrank_share(self):
        """Gets the target_outrank_share of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.


        :return: The target_outrank_share of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.
        :rtype: GoogleAdsSearchads360V0CommonTargetOutrankShare
        """
        return self._target_outrank_share

    @target_outrank_share.setter
    def target_outrank_share(self, target_outrank_share):
        """Sets the target_outrank_share of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.


        :param target_outrank_share: The target_outrank_share of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.
        :type target_outrank_share: GoogleAdsSearchads360V0CommonTargetOutrankShare
        """

        self._target_outrank_share = target_outrank_share

    @property
    def target_roas(self):
        """Gets the target_roas of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.


        :return: The target_roas of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.
        :rtype: GoogleAdsSearchads360V0CommonTargetRoas
        """
        return self._target_roas

    @target_roas.setter
    def target_roas(self, target_roas):
        """Sets the target_roas of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.


        :param target_roas: The target_roas of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.
        :type target_roas: GoogleAdsSearchads360V0CommonTargetRoas
        """

        self._target_roas = target_roas

    @property
    def target_spend(self):
        """Gets the target_spend of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.


        :return: The target_spend of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.
        :rtype: GoogleAdsSearchads360V0CommonTargetSpend
        """
        return self._target_spend

    @target_spend.setter
    def target_spend(self, target_spend):
        """Sets the target_spend of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.


        :param target_spend: The target_spend of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.
        :type target_spend: GoogleAdsSearchads360V0CommonTargetSpend
        """

        self._target_spend = target_spend

    @property
    def type(self):
        """Gets the type of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.

        Output only. The type of the bidding strategy. Create a bidding strategy by setting the bidding scheme. This field is read-only.

        :return: The type of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.

        Output only. The type of the bidding strategy. Create a bidding strategy by setting the bidding scheme. This field is read-only.

        :param type: The type of this GoogleAdsSearchads360V0ResourcesBiddingStrategy.
        :type type: str
        """
        allowed_values = ["UNSPECIFIED", "UNKNOWN", "COMMISSION", "ENHANCED_CPC", "INVALID", "MANUAL_CPA", "MANUAL_CPC", "MANUAL_CPM", "MANUAL_CPV", "MAXIMIZE_CONVERSIONS", "MAXIMIZE_CONVERSION_VALUE", "PAGE_ONE_PROMOTED", "PERCENT_CPC", "TARGET_CPA", "TARGET_CPM", "TARGET_IMPRESSION_SHARE", "TARGET_OUTRANK_SHARE", "TARGET_ROAS", "TARGET_SPEND"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type
