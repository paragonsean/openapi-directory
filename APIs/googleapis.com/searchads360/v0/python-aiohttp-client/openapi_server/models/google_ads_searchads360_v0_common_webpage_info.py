# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_ads_searchads360_v0_common_webpage_condition_info import GoogleAdsSearchads360V0CommonWebpageConditionInfo
from openapi_server import util


class GoogleAdsSearchads360V0CommonWebpageInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, conditions: List[GoogleAdsSearchads360V0CommonWebpageConditionInfo]=None, coverage_percentage: float=None, criterion_name: str=None):
        """GoogleAdsSearchads360V0CommonWebpageInfo - a model defined in OpenAPI

        :param conditions: The conditions of this GoogleAdsSearchads360V0CommonWebpageInfo.
        :param coverage_percentage: The coverage_percentage of this GoogleAdsSearchads360V0CommonWebpageInfo.
        :param criterion_name: The criterion_name of this GoogleAdsSearchads360V0CommonWebpageInfo.
        """
        self.openapi_types = {
            'conditions': List[GoogleAdsSearchads360V0CommonWebpageConditionInfo],
            'coverage_percentage': float,
            'criterion_name': str
        }

        self.attribute_map = {
            'conditions': 'conditions',
            'coverage_percentage': 'coveragePercentage',
            'criterion_name': 'criterionName'
        }

        self._conditions = conditions
        self._coverage_percentage = coverage_percentage
        self._criterion_name = criterion_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleAdsSearchads360V0CommonWebpageInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleAdsSearchads360V0Common__WebpageInfo of this GoogleAdsSearchads360V0CommonWebpageInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def conditions(self):
        """Gets the conditions of this GoogleAdsSearchads360V0CommonWebpageInfo.

        Conditions, or logical expressions, for webpage targeting. The list of webpage targeting conditions are and-ed together when evaluated for targeting. An empty list of conditions indicates all pages of the campaign's website are targeted. This field is required for CREATE operations and is prohibited on UPDATE operations.

        :return: The conditions of this GoogleAdsSearchads360V0CommonWebpageInfo.
        :rtype: List[GoogleAdsSearchads360V0CommonWebpageConditionInfo]
        """
        return self._conditions

    @conditions.setter
    def conditions(self, conditions):
        """Sets the conditions of this GoogleAdsSearchads360V0CommonWebpageInfo.

        Conditions, or logical expressions, for webpage targeting. The list of webpage targeting conditions are and-ed together when evaluated for targeting. An empty list of conditions indicates all pages of the campaign's website are targeted. This field is required for CREATE operations and is prohibited on UPDATE operations.

        :param conditions: The conditions of this GoogleAdsSearchads360V0CommonWebpageInfo.
        :type conditions: List[GoogleAdsSearchads360V0CommonWebpageConditionInfo]
        """

        self._conditions = conditions

    @property
    def coverage_percentage(self):
        """Gets the coverage_percentage of this GoogleAdsSearchads360V0CommonWebpageInfo.

        Website criteria coverage percentage. This is the computed percentage of website coverage based on the website target, negative website target and negative keywords in the ad group and campaign. For instance, when coverage returns as 1, it indicates it has 100% coverage. This field is read-only.

        :return: The coverage_percentage of this GoogleAdsSearchads360V0CommonWebpageInfo.
        :rtype: float
        """
        return self._coverage_percentage

    @coverage_percentage.setter
    def coverage_percentage(self, coverage_percentage):
        """Sets the coverage_percentage of this GoogleAdsSearchads360V0CommonWebpageInfo.

        Website criteria coverage percentage. This is the computed percentage of website coverage based on the website target, negative website target and negative keywords in the ad group and campaign. For instance, when coverage returns as 1, it indicates it has 100% coverage. This field is read-only.

        :param coverage_percentage: The coverage_percentage of this GoogleAdsSearchads360V0CommonWebpageInfo.
        :type coverage_percentage: float
        """

        self._coverage_percentage = coverage_percentage

    @property
    def criterion_name(self):
        """Gets the criterion_name of this GoogleAdsSearchads360V0CommonWebpageInfo.

        The name of the criterion that is defined by this parameter. The name value will be used for identifying, sorting and filtering criteria with this type of parameters. This field is required for CREATE operations and is prohibited on UPDATE operations.

        :return: The criterion_name of this GoogleAdsSearchads360V0CommonWebpageInfo.
        :rtype: str
        """
        return self._criterion_name

    @criterion_name.setter
    def criterion_name(self, criterion_name):
        """Sets the criterion_name of this GoogleAdsSearchads360V0CommonWebpageInfo.

        The name of the criterion that is defined by this parameter. The name value will be used for identifying, sorting and filtering criteria with this type of parameters. This field is required for CREATE operations and is prohibited on UPDATE operations.

        :param criterion_name: The criterion_name of this GoogleAdsSearchads360V0CommonWebpageInfo.
        :type criterion_name: str
        """

        self._criterion_name = criterion_name
