/*
 * Search Ads 360 Reporting API
 * The Search Ads 360 API allows developers to automate downloading reports from Search Ads 360.
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents an AdSchedule criterion. AdSchedule is specified as the day of the week and a time interval within which ads will be shown. No more than six AdSchedules can be added for the same day.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:48:17.315010-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleAdsSearchads360V0CommonAdScheduleInfo {
  /**
   * Day of the week the schedule applies to. This field is required for CREATE operations and is prohibited on UPDATE operations.
   */
  @JsonAdapter(DayOfWeekEnum.Adapter.class)
  public enum DayOfWeekEnum {
    UNSPECIFIED("UNSPECIFIED"),
    
    UNKNOWN("UNKNOWN"),
    
    MONDAY("MONDAY"),
    
    TUESDAY("TUESDAY"),
    
    WEDNESDAY("WEDNESDAY"),
    
    THURSDAY("THURSDAY"),
    
    FRIDAY("FRIDAY"),
    
    SATURDAY("SATURDAY"),
    
    SUNDAY("SUNDAY");

    private String value;

    DayOfWeekEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static DayOfWeekEnum fromValue(String value) {
      for (DayOfWeekEnum b : DayOfWeekEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<DayOfWeekEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DayOfWeekEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public DayOfWeekEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return DayOfWeekEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      DayOfWeekEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_DAY_OF_WEEK = "dayOfWeek";
  @SerializedName(SERIALIZED_NAME_DAY_OF_WEEK)
  private DayOfWeekEnum dayOfWeek;

  public static final String SERIALIZED_NAME_END_HOUR = "endHour";
  @SerializedName(SERIALIZED_NAME_END_HOUR)
  private Integer endHour;

  /**
   * Minutes after the end hour at which this schedule ends. The schedule is exclusive of the end minute. This field is required for CREATE operations and is prohibited on UPDATE operations.
   */
  @JsonAdapter(EndMinuteEnum.Adapter.class)
  public enum EndMinuteEnum {
    UNSPECIFIED("UNSPECIFIED"),
    
    UNKNOWN("UNKNOWN"),
    
    ZERO("ZERO"),
    
    FIFTEEN("FIFTEEN"),
    
    THIRTY("THIRTY"),
    
    FORTY_FIVE("FORTY_FIVE");

    private String value;

    EndMinuteEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static EndMinuteEnum fromValue(String value) {
      for (EndMinuteEnum b : EndMinuteEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<EndMinuteEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final EndMinuteEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public EndMinuteEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return EndMinuteEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      EndMinuteEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_END_MINUTE = "endMinute";
  @SerializedName(SERIALIZED_NAME_END_MINUTE)
  private EndMinuteEnum endMinute;

  public static final String SERIALIZED_NAME_START_HOUR = "startHour";
  @SerializedName(SERIALIZED_NAME_START_HOUR)
  private Integer startHour;

  /**
   * Minutes after the start hour at which this schedule starts. This field is required for CREATE operations and is prohibited on UPDATE operations.
   */
  @JsonAdapter(StartMinuteEnum.Adapter.class)
  public enum StartMinuteEnum {
    UNSPECIFIED("UNSPECIFIED"),
    
    UNKNOWN("UNKNOWN"),
    
    ZERO("ZERO"),
    
    FIFTEEN("FIFTEEN"),
    
    THIRTY("THIRTY"),
    
    FORTY_FIVE("FORTY_FIVE");

    private String value;

    StartMinuteEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StartMinuteEnum fromValue(String value) {
      for (StartMinuteEnum b : StartMinuteEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StartMinuteEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StartMinuteEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StartMinuteEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StartMinuteEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      StartMinuteEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_START_MINUTE = "startMinute";
  @SerializedName(SERIALIZED_NAME_START_MINUTE)
  private StartMinuteEnum startMinute;

  public GoogleAdsSearchads360V0CommonAdScheduleInfo() {
  }

  public GoogleAdsSearchads360V0CommonAdScheduleInfo dayOfWeek(DayOfWeekEnum dayOfWeek) {
    this.dayOfWeek = dayOfWeek;
    return this;
  }

  /**
   * Day of the week the schedule applies to. This field is required for CREATE operations and is prohibited on UPDATE operations.
   * @return dayOfWeek
   */
  @javax.annotation.Nullable
  public DayOfWeekEnum getDayOfWeek() {
    return dayOfWeek;
  }

  public void setDayOfWeek(DayOfWeekEnum dayOfWeek) {
    this.dayOfWeek = dayOfWeek;
  }


  public GoogleAdsSearchads360V0CommonAdScheduleInfo endHour(Integer endHour) {
    this.endHour = endHour;
    return this;
  }

  /**
   * Ending hour in 24 hour time; 24 signifies end of the day. This field must be between 0 and 24, inclusive. This field is required for CREATE operations and is prohibited on UPDATE operations.
   * @return endHour
   */
  @javax.annotation.Nullable
  public Integer getEndHour() {
    return endHour;
  }

  public void setEndHour(Integer endHour) {
    this.endHour = endHour;
  }


  public GoogleAdsSearchads360V0CommonAdScheduleInfo endMinute(EndMinuteEnum endMinute) {
    this.endMinute = endMinute;
    return this;
  }

  /**
   * Minutes after the end hour at which this schedule ends. The schedule is exclusive of the end minute. This field is required for CREATE operations and is prohibited on UPDATE operations.
   * @return endMinute
   */
  @javax.annotation.Nullable
  public EndMinuteEnum getEndMinute() {
    return endMinute;
  }

  public void setEndMinute(EndMinuteEnum endMinute) {
    this.endMinute = endMinute;
  }


  public GoogleAdsSearchads360V0CommonAdScheduleInfo startHour(Integer startHour) {
    this.startHour = startHour;
    return this;
  }

  /**
   * Starting hour in 24 hour time. This field must be between 0 and 23, inclusive. This field is required for CREATE operations and is prohibited on UPDATE operations.
   * @return startHour
   */
  @javax.annotation.Nullable
  public Integer getStartHour() {
    return startHour;
  }

  public void setStartHour(Integer startHour) {
    this.startHour = startHour;
  }


  public GoogleAdsSearchads360V0CommonAdScheduleInfo startMinute(StartMinuteEnum startMinute) {
    this.startMinute = startMinute;
    return this;
  }

  /**
   * Minutes after the start hour at which this schedule starts. This field is required for CREATE operations and is prohibited on UPDATE operations.
   * @return startMinute
   */
  @javax.annotation.Nullable
  public StartMinuteEnum getStartMinute() {
    return startMinute;
  }

  public void setStartMinute(StartMinuteEnum startMinute) {
    this.startMinute = startMinute;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleAdsSearchads360V0CommonAdScheduleInfo googleAdsSearchads360V0CommonAdScheduleInfo = (GoogleAdsSearchads360V0CommonAdScheduleInfo) o;
    return Objects.equals(this.dayOfWeek, googleAdsSearchads360V0CommonAdScheduleInfo.dayOfWeek) &&
        Objects.equals(this.endHour, googleAdsSearchads360V0CommonAdScheduleInfo.endHour) &&
        Objects.equals(this.endMinute, googleAdsSearchads360V0CommonAdScheduleInfo.endMinute) &&
        Objects.equals(this.startHour, googleAdsSearchads360V0CommonAdScheduleInfo.startHour) &&
        Objects.equals(this.startMinute, googleAdsSearchads360V0CommonAdScheduleInfo.startMinute);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dayOfWeek, endHour, endMinute, startHour, startMinute);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleAdsSearchads360V0CommonAdScheduleInfo {\n");
    sb.append("    dayOfWeek: ").append(toIndentedString(dayOfWeek)).append("\n");
    sb.append("    endHour: ").append(toIndentedString(endHour)).append("\n");
    sb.append("    endMinute: ").append(toIndentedString(endMinute)).append("\n");
    sb.append("    startHour: ").append(toIndentedString(startHour)).append("\n");
    sb.append("    startMinute: ").append(toIndentedString(startMinute)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("dayOfWeek");
    openapiFields.add("endHour");
    openapiFields.add("endMinute");
    openapiFields.add("startHour");
    openapiFields.add("startMinute");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleAdsSearchads360V0CommonAdScheduleInfo
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleAdsSearchads360V0CommonAdScheduleInfo.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleAdsSearchads360V0CommonAdScheduleInfo is not found in the empty JSON string", GoogleAdsSearchads360V0CommonAdScheduleInfo.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleAdsSearchads360V0CommonAdScheduleInfo.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleAdsSearchads360V0CommonAdScheduleInfo` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("dayOfWeek") != null && !jsonObj.get("dayOfWeek").isJsonNull()) && !jsonObj.get("dayOfWeek").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dayOfWeek` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dayOfWeek").toString()));
      }
      // validate the optional field `dayOfWeek`
      if (jsonObj.get("dayOfWeek") != null && !jsonObj.get("dayOfWeek").isJsonNull()) {
        DayOfWeekEnum.validateJsonElement(jsonObj.get("dayOfWeek"));
      }
      if ((jsonObj.get("endMinute") != null && !jsonObj.get("endMinute").isJsonNull()) && !jsonObj.get("endMinute").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `endMinute` to be a primitive type in the JSON string but got `%s`", jsonObj.get("endMinute").toString()));
      }
      // validate the optional field `endMinute`
      if (jsonObj.get("endMinute") != null && !jsonObj.get("endMinute").isJsonNull()) {
        EndMinuteEnum.validateJsonElement(jsonObj.get("endMinute"));
      }
      if ((jsonObj.get("startMinute") != null && !jsonObj.get("startMinute").isJsonNull()) && !jsonObj.get("startMinute").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `startMinute` to be a primitive type in the JSON string but got `%s`", jsonObj.get("startMinute").toString()));
      }
      // validate the optional field `startMinute`
      if (jsonObj.get("startMinute") != null && !jsonObj.get("startMinute").isJsonNull()) {
        StartMinuteEnum.validateJsonElement(jsonObj.get("startMinute"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleAdsSearchads360V0CommonAdScheduleInfo.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleAdsSearchads360V0CommonAdScheduleInfo' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleAdsSearchads360V0CommonAdScheduleInfo> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleAdsSearchads360V0CommonAdScheduleInfo.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleAdsSearchads360V0CommonAdScheduleInfo>() {
           @Override
           public void write(JsonWriter out, GoogleAdsSearchads360V0CommonAdScheduleInfo value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleAdsSearchads360V0CommonAdScheduleInfo read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleAdsSearchads360V0CommonAdScheduleInfo given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleAdsSearchads360V0CommonAdScheduleInfo
   * @throws IOException if the JSON string is invalid with respect to GoogleAdsSearchads360V0CommonAdScheduleInfo
   */
  public static GoogleAdsSearchads360V0CommonAdScheduleInfo fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleAdsSearchads360V0CommonAdScheduleInfo.class);
  }

  /**
   * Convert an instance of GoogleAdsSearchads360V0CommonAdScheduleInfo to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

