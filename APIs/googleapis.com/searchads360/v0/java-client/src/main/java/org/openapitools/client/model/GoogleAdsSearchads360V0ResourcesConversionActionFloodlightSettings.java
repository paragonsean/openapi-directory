/*
 * Search Ads 360 Reporting API
 * The Search Ads 360 API allows developers to automate downloading reports from Search Ads 360.
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Settings related to a Floodlight conversion action.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:48:17.315010-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleAdsSearchads360V0ResourcesConversionActionFloodlightSettings {
  public static final String SERIALIZED_NAME_ACTIVITY_GROUP_TAG = "activityGroupTag";
  @SerializedName(SERIALIZED_NAME_ACTIVITY_GROUP_TAG)
  private String activityGroupTag;

  public static final String SERIALIZED_NAME_ACTIVITY_ID = "activityId";
  @SerializedName(SERIALIZED_NAME_ACTIVITY_ID)
  private String activityId;

  public static final String SERIALIZED_NAME_ACTIVITY_TAG = "activityTag";
  @SerializedName(SERIALIZED_NAME_ACTIVITY_TAG)
  private String activityTag;

  public GoogleAdsSearchads360V0ResourcesConversionActionFloodlightSettings() {
  }

  public GoogleAdsSearchads360V0ResourcesConversionActionFloodlightSettings(
     String activityGroupTag, 
     String activityId, 
     String activityTag
  ) {
    this();
    this.activityGroupTag = activityGroupTag;
    this.activityId = activityId;
    this.activityTag = activityTag;
  }

  /**
   * Output only. String used to identify a Floodlight activity group when reporting conversions.
   * @return activityGroupTag
   */
  @javax.annotation.Nullable
  public String getActivityGroupTag() {
    return activityGroupTag;
  }



  /**
   * Output only. ID of the Floodlight activity in DoubleClick Campaign Manager (DCM).
   * @return activityId
   */
  @javax.annotation.Nullable
  public String getActivityId() {
    return activityId;
  }



  /**
   * Output only. String used to identify a Floodlight activity when reporting conversions.
   * @return activityTag
   */
  @javax.annotation.Nullable
  public String getActivityTag() {
    return activityTag;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleAdsSearchads360V0ResourcesConversionActionFloodlightSettings googleAdsSearchads360V0ResourcesConversionActionFloodlightSettings = (GoogleAdsSearchads360V0ResourcesConversionActionFloodlightSettings) o;
    return Objects.equals(this.activityGroupTag, googleAdsSearchads360V0ResourcesConversionActionFloodlightSettings.activityGroupTag) &&
        Objects.equals(this.activityId, googleAdsSearchads360V0ResourcesConversionActionFloodlightSettings.activityId) &&
        Objects.equals(this.activityTag, googleAdsSearchads360V0ResourcesConversionActionFloodlightSettings.activityTag);
  }

  @Override
  public int hashCode() {
    return Objects.hash(activityGroupTag, activityId, activityTag);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleAdsSearchads360V0ResourcesConversionActionFloodlightSettings {\n");
    sb.append("    activityGroupTag: ").append(toIndentedString(activityGroupTag)).append("\n");
    sb.append("    activityId: ").append(toIndentedString(activityId)).append("\n");
    sb.append("    activityTag: ").append(toIndentedString(activityTag)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("activityGroupTag");
    openapiFields.add("activityId");
    openapiFields.add("activityTag");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleAdsSearchads360V0ResourcesConversionActionFloodlightSettings
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleAdsSearchads360V0ResourcesConversionActionFloodlightSettings.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleAdsSearchads360V0ResourcesConversionActionFloodlightSettings is not found in the empty JSON string", GoogleAdsSearchads360V0ResourcesConversionActionFloodlightSettings.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleAdsSearchads360V0ResourcesConversionActionFloodlightSettings.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleAdsSearchads360V0ResourcesConversionActionFloodlightSettings` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("activityGroupTag") != null && !jsonObj.get("activityGroupTag").isJsonNull()) && !jsonObj.get("activityGroupTag").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `activityGroupTag` to be a primitive type in the JSON string but got `%s`", jsonObj.get("activityGroupTag").toString()));
      }
      if ((jsonObj.get("activityId") != null && !jsonObj.get("activityId").isJsonNull()) && !jsonObj.get("activityId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `activityId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("activityId").toString()));
      }
      if ((jsonObj.get("activityTag") != null && !jsonObj.get("activityTag").isJsonNull()) && !jsonObj.get("activityTag").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `activityTag` to be a primitive type in the JSON string but got `%s`", jsonObj.get("activityTag").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleAdsSearchads360V0ResourcesConversionActionFloodlightSettings.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleAdsSearchads360V0ResourcesConversionActionFloodlightSettings' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleAdsSearchads360V0ResourcesConversionActionFloodlightSettings> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleAdsSearchads360V0ResourcesConversionActionFloodlightSettings.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleAdsSearchads360V0ResourcesConversionActionFloodlightSettings>() {
           @Override
           public void write(JsonWriter out, GoogleAdsSearchads360V0ResourcesConversionActionFloodlightSettings value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleAdsSearchads360V0ResourcesConversionActionFloodlightSettings read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleAdsSearchads360V0ResourcesConversionActionFloodlightSettings given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleAdsSearchads360V0ResourcesConversionActionFloodlightSettings
   * @throws IOException if the JSON string is invalid with respect to GoogleAdsSearchads360V0ResourcesConversionActionFloodlightSettings
   */
  public static GoogleAdsSearchads360V0ResourcesConversionActionFloodlightSettings fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleAdsSearchads360V0ResourcesConversionActionFloodlightSettings.class);
  }

  /**
   * Convert an instance of GoogleAdsSearchads360V0ResourcesConversionActionFloodlightSettings to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

