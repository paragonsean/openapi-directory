/*
 * Search Ads 360 Reporting API
 * The Search Ads 360 API allows developers to automate downloading reports from Search Ads 360.
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleAdsSearchads360V0CommonMaximizeConversionValue;
import org.openapitools.client.model.GoogleAdsSearchads360V0CommonMaximizeConversions;
import org.openapitools.client.model.GoogleAdsSearchads360V0CommonTargetCpa;
import org.openapitools.client.model.GoogleAdsSearchads360V0CommonTargetImpressionShare;
import org.openapitools.client.model.GoogleAdsSearchads360V0CommonTargetOutrankShare;
import org.openapitools.client.model.GoogleAdsSearchads360V0CommonTargetRoas;
import org.openapitools.client.model.GoogleAdsSearchads360V0CommonTargetSpend;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A bidding strategy.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:48:17.315010-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleAdsSearchads360V0ResourcesBiddingStrategy {
  public static final String SERIALIZED_NAME_CAMPAIGN_COUNT = "campaignCount";
  @SerializedName(SERIALIZED_NAME_CAMPAIGN_COUNT)
  private String campaignCount;

  public static final String SERIALIZED_NAME_CURRENCY_CODE = "currencyCode";
  @SerializedName(SERIALIZED_NAME_CURRENCY_CODE)
  private String currencyCode;

  public static final String SERIALIZED_NAME_EFFECTIVE_CURRENCY_CODE = "effectiveCurrencyCode";
  @SerializedName(SERIALIZED_NAME_EFFECTIVE_CURRENCY_CODE)
  private String effectiveCurrencyCode;

  public static final String SERIALIZED_NAME_ENHANCED_CPC = "enhancedCpc";
  @SerializedName(SERIALIZED_NAME_ENHANCED_CPC)
  private Object enhancedCpc;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_MAXIMIZE_CONVERSION_VALUE = "maximizeConversionValue";
  @SerializedName(SERIALIZED_NAME_MAXIMIZE_CONVERSION_VALUE)
  private GoogleAdsSearchads360V0CommonMaximizeConversionValue maximizeConversionValue;

  public static final String SERIALIZED_NAME_MAXIMIZE_CONVERSIONS = "maximizeConversions";
  @SerializedName(SERIALIZED_NAME_MAXIMIZE_CONVERSIONS)
  private GoogleAdsSearchads360V0CommonMaximizeConversions maximizeConversions;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_NON_REMOVED_CAMPAIGN_COUNT = "nonRemovedCampaignCount";
  @SerializedName(SERIALIZED_NAME_NON_REMOVED_CAMPAIGN_COUNT)
  private String nonRemovedCampaignCount;

  public static final String SERIALIZED_NAME_RESOURCE_NAME = "resourceName";
  @SerializedName(SERIALIZED_NAME_RESOURCE_NAME)
  private String resourceName;

  /**
   * Output only. The status of the bidding strategy. This field is read-only.
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    UNSPECIFIED("UNSPECIFIED"),
    
    UNKNOWN("UNKNOWN"),
    
    ENABLED("ENABLED"),
    
    REMOVED("REMOVED");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StatusEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      StatusEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private StatusEnum status;

  public static final String SERIALIZED_NAME_TARGET_CPA = "targetCpa";
  @SerializedName(SERIALIZED_NAME_TARGET_CPA)
  private GoogleAdsSearchads360V0CommonTargetCpa targetCpa;

  public static final String SERIALIZED_NAME_TARGET_IMPRESSION_SHARE = "targetImpressionShare";
  @SerializedName(SERIALIZED_NAME_TARGET_IMPRESSION_SHARE)
  private GoogleAdsSearchads360V0CommonTargetImpressionShare targetImpressionShare;

  public static final String SERIALIZED_NAME_TARGET_OUTRANK_SHARE = "targetOutrankShare";
  @SerializedName(SERIALIZED_NAME_TARGET_OUTRANK_SHARE)
  private GoogleAdsSearchads360V0CommonTargetOutrankShare targetOutrankShare;

  public static final String SERIALIZED_NAME_TARGET_ROAS = "targetRoas";
  @SerializedName(SERIALIZED_NAME_TARGET_ROAS)
  private GoogleAdsSearchads360V0CommonTargetRoas targetRoas;

  public static final String SERIALIZED_NAME_TARGET_SPEND = "targetSpend";
  @SerializedName(SERIALIZED_NAME_TARGET_SPEND)
  private GoogleAdsSearchads360V0CommonTargetSpend targetSpend;

  /**
   * Output only. The type of the bidding strategy. Create a bidding strategy by setting the bidding scheme. This field is read-only.
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    UNSPECIFIED("UNSPECIFIED"),
    
    UNKNOWN("UNKNOWN"),
    
    COMMISSION("COMMISSION"),
    
    ENHANCED_CPC("ENHANCED_CPC"),
    
    INVALID("INVALID"),
    
    MANUAL_CPA("MANUAL_CPA"),
    
    MANUAL_CPC("MANUAL_CPC"),
    
    MANUAL_CPM("MANUAL_CPM"),
    
    MANUAL_CPV("MANUAL_CPV"),
    
    MAXIMIZE_CONVERSIONS("MAXIMIZE_CONVERSIONS"),
    
    MAXIMIZE_CONVERSION_VALUE("MAXIMIZE_CONVERSION_VALUE"),
    
    PAGE_ONE_PROMOTED("PAGE_ONE_PROMOTED"),
    
    PERCENT_CPC("PERCENT_CPC"),
    
    TARGET_CPA("TARGET_CPA"),
    
    TARGET_CPM("TARGET_CPM"),
    
    TARGET_IMPRESSION_SHARE("TARGET_IMPRESSION_SHARE"),
    
    TARGET_OUTRANK_SHARE("TARGET_OUTRANK_SHARE"),
    
    TARGET_ROAS("TARGET_ROAS"),
    
    TARGET_SPEND("TARGET_SPEND");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      TypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;

  public GoogleAdsSearchads360V0ResourcesBiddingStrategy() {
  }

  public GoogleAdsSearchads360V0ResourcesBiddingStrategy(
     String campaignCount, 
     String effectiveCurrencyCode, 
     String id, 
     String nonRemovedCampaignCount, 
     StatusEnum status, 
     TypeEnum type
  ) {
    this();
    this.campaignCount = campaignCount;
    this.effectiveCurrencyCode = effectiveCurrencyCode;
    this.id = id;
    this.nonRemovedCampaignCount = nonRemovedCampaignCount;
    this.status = status;
    this.type = type;
  }

  /**
   * Output only. The number of campaigns attached to this bidding strategy. This field is read-only.
   * @return campaignCount
   */
  @javax.annotation.Nullable
  public String getCampaignCount() {
    return campaignCount;
  }



  public GoogleAdsSearchads360V0ResourcesBiddingStrategy currencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
    return this;
  }

  /**
   * Immutable. The currency used by the bidding strategy (ISO 4217 three-letter code). For bidding strategies in manager customers, this currency can be set on creation and defaults to the manager customer&#39;s currency. For serving customers, this field cannot be set; all strategies in a serving customer implicitly use the serving customer&#39;s currency. In all cases the effective_currency_code field returns the currency used by the strategy.
   * @return currencyCode
   */
  @javax.annotation.Nullable
  public String getCurrencyCode() {
    return currencyCode;
  }

  public void setCurrencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
  }


  /**
   * Output only. The currency used by the bidding strategy (ISO 4217 three-letter code). For bidding strategies in manager customers, this is the currency set by the advertiser when creating the strategy. For serving customers, this is the customer&#39;s currency_code. Bidding strategy metrics are reported in this currency. This field is read-only.
   * @return effectiveCurrencyCode
   */
  @javax.annotation.Nullable
  public String getEffectiveCurrencyCode() {
    return effectiveCurrencyCode;
  }



  public GoogleAdsSearchads360V0ResourcesBiddingStrategy enhancedCpc(Object enhancedCpc) {
    this.enhancedCpc = enhancedCpc;
    return this;
  }

  /**
   * An automated bidding strategy that raises bids for clicks that seem more likely to lead to a conversion and lowers them for clicks where they seem less likely. This bidding strategy is deprecated and cannot be created anymore. Use ManualCpc with enhanced_cpc_enabled set to true for equivalent functionality.
   * @return enhancedCpc
   */
  @javax.annotation.Nullable
  public Object getEnhancedCpc() {
    return enhancedCpc;
  }

  public void setEnhancedCpc(Object enhancedCpc) {
    this.enhancedCpc = enhancedCpc;
  }


  /**
   * Output only. The ID of the bidding strategy.
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }



  public GoogleAdsSearchads360V0ResourcesBiddingStrategy maximizeConversionValue(GoogleAdsSearchads360V0CommonMaximizeConversionValue maximizeConversionValue) {
    this.maximizeConversionValue = maximizeConversionValue;
    return this;
  }

  /**
   * Get maximizeConversionValue
   * @return maximizeConversionValue
   */
  @javax.annotation.Nullable
  public GoogleAdsSearchads360V0CommonMaximizeConversionValue getMaximizeConversionValue() {
    return maximizeConversionValue;
  }

  public void setMaximizeConversionValue(GoogleAdsSearchads360V0CommonMaximizeConversionValue maximizeConversionValue) {
    this.maximizeConversionValue = maximizeConversionValue;
  }


  public GoogleAdsSearchads360V0ResourcesBiddingStrategy maximizeConversions(GoogleAdsSearchads360V0CommonMaximizeConversions maximizeConversions) {
    this.maximizeConversions = maximizeConversions;
    return this;
  }

  /**
   * Get maximizeConversions
   * @return maximizeConversions
   */
  @javax.annotation.Nullable
  public GoogleAdsSearchads360V0CommonMaximizeConversions getMaximizeConversions() {
    return maximizeConversions;
  }

  public void setMaximizeConversions(GoogleAdsSearchads360V0CommonMaximizeConversions maximizeConversions) {
    this.maximizeConversions = maximizeConversions;
  }


  public GoogleAdsSearchads360V0ResourcesBiddingStrategy name(String name) {
    this.name = name;
    return this;
  }

  /**
   * The name of the bidding strategy. All bidding strategies within an account must be named distinctly. The length of this string should be between 1 and 255, inclusive, in UTF-8 bytes, (trimmed).
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  /**
   * Output only. The number of non-removed campaigns attached to this bidding strategy. This field is read-only.
   * @return nonRemovedCampaignCount
   */
  @javax.annotation.Nullable
  public String getNonRemovedCampaignCount() {
    return nonRemovedCampaignCount;
  }



  public GoogleAdsSearchads360V0ResourcesBiddingStrategy resourceName(String resourceName) {
    this.resourceName = resourceName;
    return this;
  }

  /**
   * Immutable. The resource name of the bidding strategy. Bidding strategy resource names have the form: &#x60;customers/{customer_id}/biddingStrategies/{bidding_strategy_id}&#x60;
   * @return resourceName
   */
  @javax.annotation.Nullable
  public String getResourceName() {
    return resourceName;
  }

  public void setResourceName(String resourceName) {
    this.resourceName = resourceName;
  }


  /**
   * Output only. The status of the bidding strategy. This field is read-only.
   * @return status
   */
  @javax.annotation.Nullable
  public StatusEnum getStatus() {
    return status;
  }



  public GoogleAdsSearchads360V0ResourcesBiddingStrategy targetCpa(GoogleAdsSearchads360V0CommonTargetCpa targetCpa) {
    this.targetCpa = targetCpa;
    return this;
  }

  /**
   * Get targetCpa
   * @return targetCpa
   */
  @javax.annotation.Nullable
  public GoogleAdsSearchads360V0CommonTargetCpa getTargetCpa() {
    return targetCpa;
  }

  public void setTargetCpa(GoogleAdsSearchads360V0CommonTargetCpa targetCpa) {
    this.targetCpa = targetCpa;
  }


  public GoogleAdsSearchads360V0ResourcesBiddingStrategy targetImpressionShare(GoogleAdsSearchads360V0CommonTargetImpressionShare targetImpressionShare) {
    this.targetImpressionShare = targetImpressionShare;
    return this;
  }

  /**
   * Get targetImpressionShare
   * @return targetImpressionShare
   */
  @javax.annotation.Nullable
  public GoogleAdsSearchads360V0CommonTargetImpressionShare getTargetImpressionShare() {
    return targetImpressionShare;
  }

  public void setTargetImpressionShare(GoogleAdsSearchads360V0CommonTargetImpressionShare targetImpressionShare) {
    this.targetImpressionShare = targetImpressionShare;
  }


  public GoogleAdsSearchads360V0ResourcesBiddingStrategy targetOutrankShare(GoogleAdsSearchads360V0CommonTargetOutrankShare targetOutrankShare) {
    this.targetOutrankShare = targetOutrankShare;
    return this;
  }

  /**
   * Get targetOutrankShare
   * @return targetOutrankShare
   */
  @javax.annotation.Nullable
  public GoogleAdsSearchads360V0CommonTargetOutrankShare getTargetOutrankShare() {
    return targetOutrankShare;
  }

  public void setTargetOutrankShare(GoogleAdsSearchads360V0CommonTargetOutrankShare targetOutrankShare) {
    this.targetOutrankShare = targetOutrankShare;
  }


  public GoogleAdsSearchads360V0ResourcesBiddingStrategy targetRoas(GoogleAdsSearchads360V0CommonTargetRoas targetRoas) {
    this.targetRoas = targetRoas;
    return this;
  }

  /**
   * Get targetRoas
   * @return targetRoas
   */
  @javax.annotation.Nullable
  public GoogleAdsSearchads360V0CommonTargetRoas getTargetRoas() {
    return targetRoas;
  }

  public void setTargetRoas(GoogleAdsSearchads360V0CommonTargetRoas targetRoas) {
    this.targetRoas = targetRoas;
  }


  public GoogleAdsSearchads360V0ResourcesBiddingStrategy targetSpend(GoogleAdsSearchads360V0CommonTargetSpend targetSpend) {
    this.targetSpend = targetSpend;
    return this;
  }

  /**
   * Get targetSpend
   * @return targetSpend
   */
  @javax.annotation.Nullable
  public GoogleAdsSearchads360V0CommonTargetSpend getTargetSpend() {
    return targetSpend;
  }

  public void setTargetSpend(GoogleAdsSearchads360V0CommonTargetSpend targetSpend) {
    this.targetSpend = targetSpend;
  }


  /**
   * Output only. The type of the bidding strategy. Create a bidding strategy by setting the bidding scheme. This field is read-only.
   * @return type
   */
  @javax.annotation.Nullable
  public TypeEnum getType() {
    return type;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleAdsSearchads360V0ResourcesBiddingStrategy googleAdsSearchads360V0ResourcesBiddingStrategy = (GoogleAdsSearchads360V0ResourcesBiddingStrategy) o;
    return Objects.equals(this.campaignCount, googleAdsSearchads360V0ResourcesBiddingStrategy.campaignCount) &&
        Objects.equals(this.currencyCode, googleAdsSearchads360V0ResourcesBiddingStrategy.currencyCode) &&
        Objects.equals(this.effectiveCurrencyCode, googleAdsSearchads360V0ResourcesBiddingStrategy.effectiveCurrencyCode) &&
        Objects.equals(this.enhancedCpc, googleAdsSearchads360V0ResourcesBiddingStrategy.enhancedCpc) &&
        Objects.equals(this.id, googleAdsSearchads360V0ResourcesBiddingStrategy.id) &&
        Objects.equals(this.maximizeConversionValue, googleAdsSearchads360V0ResourcesBiddingStrategy.maximizeConversionValue) &&
        Objects.equals(this.maximizeConversions, googleAdsSearchads360V0ResourcesBiddingStrategy.maximizeConversions) &&
        Objects.equals(this.name, googleAdsSearchads360V0ResourcesBiddingStrategy.name) &&
        Objects.equals(this.nonRemovedCampaignCount, googleAdsSearchads360V0ResourcesBiddingStrategy.nonRemovedCampaignCount) &&
        Objects.equals(this.resourceName, googleAdsSearchads360V0ResourcesBiddingStrategy.resourceName) &&
        Objects.equals(this.status, googleAdsSearchads360V0ResourcesBiddingStrategy.status) &&
        Objects.equals(this.targetCpa, googleAdsSearchads360V0ResourcesBiddingStrategy.targetCpa) &&
        Objects.equals(this.targetImpressionShare, googleAdsSearchads360V0ResourcesBiddingStrategy.targetImpressionShare) &&
        Objects.equals(this.targetOutrankShare, googleAdsSearchads360V0ResourcesBiddingStrategy.targetOutrankShare) &&
        Objects.equals(this.targetRoas, googleAdsSearchads360V0ResourcesBiddingStrategy.targetRoas) &&
        Objects.equals(this.targetSpend, googleAdsSearchads360V0ResourcesBiddingStrategy.targetSpend) &&
        Objects.equals(this.type, googleAdsSearchads360V0ResourcesBiddingStrategy.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(campaignCount, currencyCode, effectiveCurrencyCode, enhancedCpc, id, maximizeConversionValue, maximizeConversions, name, nonRemovedCampaignCount, resourceName, status, targetCpa, targetImpressionShare, targetOutrankShare, targetRoas, targetSpend, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleAdsSearchads360V0ResourcesBiddingStrategy {\n");
    sb.append("    campaignCount: ").append(toIndentedString(campaignCount)).append("\n");
    sb.append("    currencyCode: ").append(toIndentedString(currencyCode)).append("\n");
    sb.append("    effectiveCurrencyCode: ").append(toIndentedString(effectiveCurrencyCode)).append("\n");
    sb.append("    enhancedCpc: ").append(toIndentedString(enhancedCpc)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    maximizeConversionValue: ").append(toIndentedString(maximizeConversionValue)).append("\n");
    sb.append("    maximizeConversions: ").append(toIndentedString(maximizeConversions)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nonRemovedCampaignCount: ").append(toIndentedString(nonRemovedCampaignCount)).append("\n");
    sb.append("    resourceName: ").append(toIndentedString(resourceName)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    targetCpa: ").append(toIndentedString(targetCpa)).append("\n");
    sb.append("    targetImpressionShare: ").append(toIndentedString(targetImpressionShare)).append("\n");
    sb.append("    targetOutrankShare: ").append(toIndentedString(targetOutrankShare)).append("\n");
    sb.append("    targetRoas: ").append(toIndentedString(targetRoas)).append("\n");
    sb.append("    targetSpend: ").append(toIndentedString(targetSpend)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("campaignCount");
    openapiFields.add("currencyCode");
    openapiFields.add("effectiveCurrencyCode");
    openapiFields.add("enhancedCpc");
    openapiFields.add("id");
    openapiFields.add("maximizeConversionValue");
    openapiFields.add("maximizeConversions");
    openapiFields.add("name");
    openapiFields.add("nonRemovedCampaignCount");
    openapiFields.add("resourceName");
    openapiFields.add("status");
    openapiFields.add("targetCpa");
    openapiFields.add("targetImpressionShare");
    openapiFields.add("targetOutrankShare");
    openapiFields.add("targetRoas");
    openapiFields.add("targetSpend");
    openapiFields.add("type");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleAdsSearchads360V0ResourcesBiddingStrategy
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleAdsSearchads360V0ResourcesBiddingStrategy.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleAdsSearchads360V0ResourcesBiddingStrategy is not found in the empty JSON string", GoogleAdsSearchads360V0ResourcesBiddingStrategy.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleAdsSearchads360V0ResourcesBiddingStrategy.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleAdsSearchads360V0ResourcesBiddingStrategy` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("campaignCount") != null && !jsonObj.get("campaignCount").isJsonNull()) && !jsonObj.get("campaignCount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `campaignCount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("campaignCount").toString()));
      }
      if ((jsonObj.get("currencyCode") != null && !jsonObj.get("currencyCode").isJsonNull()) && !jsonObj.get("currencyCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `currencyCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("currencyCode").toString()));
      }
      if ((jsonObj.get("effectiveCurrencyCode") != null && !jsonObj.get("effectiveCurrencyCode").isJsonNull()) && !jsonObj.get("effectiveCurrencyCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `effectiveCurrencyCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("effectiveCurrencyCode").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      // validate the optional field `maximizeConversionValue`
      if (jsonObj.get("maximizeConversionValue") != null && !jsonObj.get("maximizeConversionValue").isJsonNull()) {
        GoogleAdsSearchads360V0CommonMaximizeConversionValue.validateJsonElement(jsonObj.get("maximizeConversionValue"));
      }
      // validate the optional field `maximizeConversions`
      if (jsonObj.get("maximizeConversions") != null && !jsonObj.get("maximizeConversions").isJsonNull()) {
        GoogleAdsSearchads360V0CommonMaximizeConversions.validateJsonElement(jsonObj.get("maximizeConversions"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("nonRemovedCampaignCount") != null && !jsonObj.get("nonRemovedCampaignCount").isJsonNull()) && !jsonObj.get("nonRemovedCampaignCount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nonRemovedCampaignCount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nonRemovedCampaignCount").toString()));
      }
      if ((jsonObj.get("resourceName") != null && !jsonObj.get("resourceName").isJsonNull()) && !jsonObj.get("resourceName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `resourceName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("resourceName").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      // validate the optional field `status`
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) {
        StatusEnum.validateJsonElement(jsonObj.get("status"));
      }
      // validate the optional field `targetCpa`
      if (jsonObj.get("targetCpa") != null && !jsonObj.get("targetCpa").isJsonNull()) {
        GoogleAdsSearchads360V0CommonTargetCpa.validateJsonElement(jsonObj.get("targetCpa"));
      }
      // validate the optional field `targetImpressionShare`
      if (jsonObj.get("targetImpressionShare") != null && !jsonObj.get("targetImpressionShare").isJsonNull()) {
        GoogleAdsSearchads360V0CommonTargetImpressionShare.validateJsonElement(jsonObj.get("targetImpressionShare"));
      }
      // validate the optional field `targetOutrankShare`
      if (jsonObj.get("targetOutrankShare") != null && !jsonObj.get("targetOutrankShare").isJsonNull()) {
        GoogleAdsSearchads360V0CommonTargetOutrankShare.validateJsonElement(jsonObj.get("targetOutrankShare"));
      }
      // validate the optional field `targetRoas`
      if (jsonObj.get("targetRoas") != null && !jsonObj.get("targetRoas").isJsonNull()) {
        GoogleAdsSearchads360V0CommonTargetRoas.validateJsonElement(jsonObj.get("targetRoas"));
      }
      // validate the optional field `targetSpend`
      if (jsonObj.get("targetSpend") != null && !jsonObj.get("targetSpend").isJsonNull()) {
        GoogleAdsSearchads360V0CommonTargetSpend.validateJsonElement(jsonObj.get("targetSpend"));
      }
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
      // validate the optional field `type`
      if (jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) {
        TypeEnum.validateJsonElement(jsonObj.get("type"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleAdsSearchads360V0ResourcesBiddingStrategy.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleAdsSearchads360V0ResourcesBiddingStrategy' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleAdsSearchads360V0ResourcesBiddingStrategy> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleAdsSearchads360V0ResourcesBiddingStrategy.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleAdsSearchads360V0ResourcesBiddingStrategy>() {
           @Override
           public void write(JsonWriter out, GoogleAdsSearchads360V0ResourcesBiddingStrategy value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleAdsSearchads360V0ResourcesBiddingStrategy read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleAdsSearchads360V0ResourcesBiddingStrategy given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleAdsSearchads360V0ResourcesBiddingStrategy
   * @throws IOException if the JSON string is invalid with respect to GoogleAdsSearchads360V0ResourcesBiddingStrategy
   */
  public static GoogleAdsSearchads360V0ResourcesBiddingStrategy fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleAdsSearchads360V0ResourcesBiddingStrategy.class);
  }

  /**
   * Convert an instance of GoogleAdsSearchads360V0ResourcesBiddingStrategy to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

