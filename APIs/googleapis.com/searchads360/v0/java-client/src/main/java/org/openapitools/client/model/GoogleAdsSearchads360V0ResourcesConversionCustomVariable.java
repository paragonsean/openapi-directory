/*
 * Search Ads 360 Reporting API
 * The Search Ads 360 API allows developers to automate downloading reports from Search Ads 360.
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleAdsSearchads360V0ResourcesConversionCustomVariableFloodlightConversionCustomVariableInfo;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A conversion custom variable. See \&quot;About custom Floodlight metrics and dimensions in the new Search Ads 360\&quot; at https://support.google.com/sa360/answer/13567857
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:48:17.315010-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleAdsSearchads360V0ResourcesConversionCustomVariable {
  /**
   * Output only. Cardinality of the conversion custom variable.
   */
  @JsonAdapter(CardinalityEnum.Adapter.class)
  public enum CardinalityEnum {
    UNSPECIFIED("UNSPECIFIED"),
    
    UNKNOWN("UNKNOWN"),
    
    BELOW_ALL_LIMITS("BELOW_ALL_LIMITS"),
    
    EXCEEDS_SEGMENTATION_LIMIT_BUT_NOT_STATS_LIMIT("EXCEEDS_SEGMENTATION_LIMIT_BUT_NOT_STATS_LIMIT"),
    
    APPROACHES_STATS_LIMIT("APPROACHES_STATS_LIMIT"),
    
    EXCEEDS_STATS_LIMIT("EXCEEDS_STATS_LIMIT");

    private String value;

    CardinalityEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static CardinalityEnum fromValue(String value) {
      for (CardinalityEnum b : CardinalityEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<CardinalityEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CardinalityEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CardinalityEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return CardinalityEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      CardinalityEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_CARDINALITY = "cardinality";
  @SerializedName(SERIALIZED_NAME_CARDINALITY)
  private CardinalityEnum cardinality;

  public static final String SERIALIZED_NAME_CUSTOM_COLUMN_IDS = "customColumnIds";
  @SerializedName(SERIALIZED_NAME_CUSTOM_COLUMN_IDS)
  private List<String> customColumnIds = new ArrayList<>();

  /**
   * Output only. Family of the conversion custom variable.
   */
  @JsonAdapter(FamilyEnum.Adapter.class)
  public enum FamilyEnum {
    UNSPECIFIED("UNSPECIFIED"),
    
    UNKNOWN("UNKNOWN"),
    
    STANDARD("STANDARD"),
    
    FLOODLIGHT("FLOODLIGHT");

    private String value;

    FamilyEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static FamilyEnum fromValue(String value) {
      for (FamilyEnum b : FamilyEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<FamilyEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final FamilyEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public FamilyEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return FamilyEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      FamilyEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_FAMILY = "family";
  @SerializedName(SERIALIZED_NAME_FAMILY)
  private FamilyEnum family;

  public static final String SERIALIZED_NAME_FLOODLIGHT_CONVERSION_CUSTOM_VARIABLE_INFO = "floodlightConversionCustomVariableInfo";
  @SerializedName(SERIALIZED_NAME_FLOODLIGHT_CONVERSION_CUSTOM_VARIABLE_INFO)
  private GoogleAdsSearchads360V0ResourcesConversionCustomVariableFloodlightConversionCustomVariableInfo floodlightConversionCustomVariableInfo;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_OWNER_CUSTOMER = "ownerCustomer";
  @SerializedName(SERIALIZED_NAME_OWNER_CUSTOMER)
  private String ownerCustomer;

  public static final String SERIALIZED_NAME_RESOURCE_NAME = "resourceName";
  @SerializedName(SERIALIZED_NAME_RESOURCE_NAME)
  private String resourceName;

  /**
   * The status of the conversion custom variable for conversion event accrual.
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    UNSPECIFIED("UNSPECIFIED"),
    
    UNKNOWN("UNKNOWN"),
    
    ACTIVATION_NEEDED("ACTIVATION_NEEDED"),
    
    ENABLED("ENABLED"),
    
    PAUSED("PAUSED");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StatusEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      StatusEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private StatusEnum status;

  public static final String SERIALIZED_NAME_TAG = "tag";
  @SerializedName(SERIALIZED_NAME_TAG)
  private String tag;

  public GoogleAdsSearchads360V0ResourcesConversionCustomVariable() {
  }

  public GoogleAdsSearchads360V0ResourcesConversionCustomVariable(
     CardinalityEnum cardinality, 
     List<String> customColumnIds, 
     FamilyEnum family, 
     String id, 
     String ownerCustomer
  ) {
    this();
    this.cardinality = cardinality;
    this.customColumnIds = customColumnIds;
    this.family = family;
    this.id = id;
    this.ownerCustomer = ownerCustomer;
  }

  /**
   * Output only. Cardinality of the conversion custom variable.
   * @return cardinality
   */
  @javax.annotation.Nullable
  public CardinalityEnum getCardinality() {
    return cardinality;
  }



  /**
   * Output only. The IDs of custom columns that use this conversion custom variable.
   * @return customColumnIds
   */
  @javax.annotation.Nullable
  public List<String> getCustomColumnIds() {
    return customColumnIds;
  }



  /**
   * Output only. Family of the conversion custom variable.
   * @return family
   */
  @javax.annotation.Nullable
  public FamilyEnum getFamily() {
    return family;
  }



  public GoogleAdsSearchads360V0ResourcesConversionCustomVariable floodlightConversionCustomVariableInfo(GoogleAdsSearchads360V0ResourcesConversionCustomVariableFloodlightConversionCustomVariableInfo floodlightConversionCustomVariableInfo) {
    this.floodlightConversionCustomVariableInfo = floodlightConversionCustomVariableInfo;
    return this;
  }

  /**
   * Get floodlightConversionCustomVariableInfo
   * @return floodlightConversionCustomVariableInfo
   */
  @javax.annotation.Nullable
  public GoogleAdsSearchads360V0ResourcesConversionCustomVariableFloodlightConversionCustomVariableInfo getFloodlightConversionCustomVariableInfo() {
    return floodlightConversionCustomVariableInfo;
  }

  public void setFloodlightConversionCustomVariableInfo(GoogleAdsSearchads360V0ResourcesConversionCustomVariableFloodlightConversionCustomVariableInfo floodlightConversionCustomVariableInfo) {
    this.floodlightConversionCustomVariableInfo = floodlightConversionCustomVariableInfo;
  }


  /**
   * Output only. The ID of the conversion custom variable.
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }



  public GoogleAdsSearchads360V0ResourcesConversionCustomVariable name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Required. The name of the conversion custom variable. Name should be unique. The maximum length of name is 100 characters. There should not be any extra spaces before and after.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  /**
   * Output only. The resource name of the customer that owns the conversion custom variable.
   * @return ownerCustomer
   */
  @javax.annotation.Nullable
  public String getOwnerCustomer() {
    return ownerCustomer;
  }



  public GoogleAdsSearchads360V0ResourcesConversionCustomVariable resourceName(String resourceName) {
    this.resourceName = resourceName;
    return this;
  }

  /**
   * Immutable. The resource name of the conversion custom variable. Conversion custom variable resource names have the form: &#x60;customers/{customer_id}/conversionCustomVariables/{conversion_custom_variable_id}&#x60;
   * @return resourceName
   */
  @javax.annotation.Nullable
  public String getResourceName() {
    return resourceName;
  }

  public void setResourceName(String resourceName) {
    this.resourceName = resourceName;
  }


  public GoogleAdsSearchads360V0ResourcesConversionCustomVariable status(StatusEnum status) {
    this.status = status;
    return this;
  }

  /**
   * The status of the conversion custom variable for conversion event accrual.
   * @return status
   */
  @javax.annotation.Nullable
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  public GoogleAdsSearchads360V0ResourcesConversionCustomVariable tag(String tag) {
    this.tag = tag;
    return this;
  }

  /**
   * Required. Immutable. The tag of the conversion custom variable. Tag should be unique and consist of a \&quot;u\&quot; character directly followed with a number less than ormequal to 100. For example: \&quot;u4\&quot;.
   * @return tag
   */
  @javax.annotation.Nullable
  public String getTag() {
    return tag;
  }

  public void setTag(String tag) {
    this.tag = tag;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleAdsSearchads360V0ResourcesConversionCustomVariable googleAdsSearchads360V0ResourcesConversionCustomVariable = (GoogleAdsSearchads360V0ResourcesConversionCustomVariable) o;
    return Objects.equals(this.cardinality, googleAdsSearchads360V0ResourcesConversionCustomVariable.cardinality) &&
        Objects.equals(this.customColumnIds, googleAdsSearchads360V0ResourcesConversionCustomVariable.customColumnIds) &&
        Objects.equals(this.family, googleAdsSearchads360V0ResourcesConversionCustomVariable.family) &&
        Objects.equals(this.floodlightConversionCustomVariableInfo, googleAdsSearchads360V0ResourcesConversionCustomVariable.floodlightConversionCustomVariableInfo) &&
        Objects.equals(this.id, googleAdsSearchads360V0ResourcesConversionCustomVariable.id) &&
        Objects.equals(this.name, googleAdsSearchads360V0ResourcesConversionCustomVariable.name) &&
        Objects.equals(this.ownerCustomer, googleAdsSearchads360V0ResourcesConversionCustomVariable.ownerCustomer) &&
        Objects.equals(this.resourceName, googleAdsSearchads360V0ResourcesConversionCustomVariable.resourceName) &&
        Objects.equals(this.status, googleAdsSearchads360V0ResourcesConversionCustomVariable.status) &&
        Objects.equals(this.tag, googleAdsSearchads360V0ResourcesConversionCustomVariable.tag);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cardinality, customColumnIds, family, floodlightConversionCustomVariableInfo, id, name, ownerCustomer, resourceName, status, tag);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleAdsSearchads360V0ResourcesConversionCustomVariable {\n");
    sb.append("    cardinality: ").append(toIndentedString(cardinality)).append("\n");
    sb.append("    customColumnIds: ").append(toIndentedString(customColumnIds)).append("\n");
    sb.append("    family: ").append(toIndentedString(family)).append("\n");
    sb.append("    floodlightConversionCustomVariableInfo: ").append(toIndentedString(floodlightConversionCustomVariableInfo)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    ownerCustomer: ").append(toIndentedString(ownerCustomer)).append("\n");
    sb.append("    resourceName: ").append(toIndentedString(resourceName)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    tag: ").append(toIndentedString(tag)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("cardinality");
    openapiFields.add("customColumnIds");
    openapiFields.add("family");
    openapiFields.add("floodlightConversionCustomVariableInfo");
    openapiFields.add("id");
    openapiFields.add("name");
    openapiFields.add("ownerCustomer");
    openapiFields.add("resourceName");
    openapiFields.add("status");
    openapiFields.add("tag");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleAdsSearchads360V0ResourcesConversionCustomVariable
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleAdsSearchads360V0ResourcesConversionCustomVariable.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleAdsSearchads360V0ResourcesConversionCustomVariable is not found in the empty JSON string", GoogleAdsSearchads360V0ResourcesConversionCustomVariable.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleAdsSearchads360V0ResourcesConversionCustomVariable.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleAdsSearchads360V0ResourcesConversionCustomVariable` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("cardinality") != null && !jsonObj.get("cardinality").isJsonNull()) && !jsonObj.get("cardinality").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cardinality` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cardinality").toString()));
      }
      // validate the optional field `cardinality`
      if (jsonObj.get("cardinality") != null && !jsonObj.get("cardinality").isJsonNull()) {
        CardinalityEnum.validateJsonElement(jsonObj.get("cardinality"));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("customColumnIds") != null && !jsonObj.get("customColumnIds").isJsonNull() && !jsonObj.get("customColumnIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `customColumnIds` to be an array in the JSON string but got `%s`", jsonObj.get("customColumnIds").toString()));
      }
      if ((jsonObj.get("family") != null && !jsonObj.get("family").isJsonNull()) && !jsonObj.get("family").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `family` to be a primitive type in the JSON string but got `%s`", jsonObj.get("family").toString()));
      }
      // validate the optional field `family`
      if (jsonObj.get("family") != null && !jsonObj.get("family").isJsonNull()) {
        FamilyEnum.validateJsonElement(jsonObj.get("family"));
      }
      // validate the optional field `floodlightConversionCustomVariableInfo`
      if (jsonObj.get("floodlightConversionCustomVariableInfo") != null && !jsonObj.get("floodlightConversionCustomVariableInfo").isJsonNull()) {
        GoogleAdsSearchads360V0ResourcesConversionCustomVariableFloodlightConversionCustomVariableInfo.validateJsonElement(jsonObj.get("floodlightConversionCustomVariableInfo"));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("ownerCustomer") != null && !jsonObj.get("ownerCustomer").isJsonNull()) && !jsonObj.get("ownerCustomer").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ownerCustomer` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ownerCustomer").toString()));
      }
      if ((jsonObj.get("resourceName") != null && !jsonObj.get("resourceName").isJsonNull()) && !jsonObj.get("resourceName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `resourceName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("resourceName").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      // validate the optional field `status`
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) {
        StatusEnum.validateJsonElement(jsonObj.get("status"));
      }
      if ((jsonObj.get("tag") != null && !jsonObj.get("tag").isJsonNull()) && !jsonObj.get("tag").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tag` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tag").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleAdsSearchads360V0ResourcesConversionCustomVariable.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleAdsSearchads360V0ResourcesConversionCustomVariable' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleAdsSearchads360V0ResourcesConversionCustomVariable> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleAdsSearchads360V0ResourcesConversionCustomVariable.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleAdsSearchads360V0ResourcesConversionCustomVariable>() {
           @Override
           public void write(JsonWriter out, GoogleAdsSearchads360V0ResourcesConversionCustomVariable value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleAdsSearchads360V0ResourcesConversionCustomVariable read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleAdsSearchads360V0ResourcesConversionCustomVariable given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleAdsSearchads360V0ResourcesConversionCustomVariable
   * @throws IOException if the JSON string is invalid with respect to GoogleAdsSearchads360V0ResourcesConversionCustomVariable
   */
  public static GoogleAdsSearchads360V0ResourcesConversionCustomVariable fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleAdsSearchads360V0ResourcesConversionCustomVariable.class);
  }

  /**
   * Convert an instance of GoogleAdsSearchads360V0ResourcesConversionCustomVariable to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

