/*
 * Search Ads 360 Reporting API
 * The Search Ads 360 API allows developers to automate downloading reports from Search Ads 360.
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A geo target constant.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:48:17.315010-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleAdsSearchads360V0ResourcesGeoTargetConstant {
  public static final String SERIALIZED_NAME_CANONICAL_NAME = "canonicalName";
  @SerializedName(SERIALIZED_NAME_CANONICAL_NAME)
  private String canonicalName;

  public static final String SERIALIZED_NAME_COUNTRY_CODE = "countryCode";
  @SerializedName(SERIALIZED_NAME_COUNTRY_CODE)
  private String countryCode;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PARENT_GEO_TARGET = "parentGeoTarget";
  @SerializedName(SERIALIZED_NAME_PARENT_GEO_TARGET)
  private String parentGeoTarget;

  public static final String SERIALIZED_NAME_RESOURCE_NAME = "resourceName";
  @SerializedName(SERIALIZED_NAME_RESOURCE_NAME)
  private String resourceName;

  /**
   * Output only. Geo target constant status.
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    UNSPECIFIED("UNSPECIFIED"),
    
    UNKNOWN("UNKNOWN"),
    
    ENABLED("ENABLED"),
    
    REMOVAL_PLANNED("REMOVAL_PLANNED");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StatusEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      StatusEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private StatusEnum status;

  public static final String SERIALIZED_NAME_TARGET_TYPE = "targetType";
  @SerializedName(SERIALIZED_NAME_TARGET_TYPE)
  private String targetType;

  public GoogleAdsSearchads360V0ResourcesGeoTargetConstant() {
  }

  public GoogleAdsSearchads360V0ResourcesGeoTargetConstant(
     String canonicalName, 
     String countryCode, 
     String id, 
     String name, 
     String parentGeoTarget, 
     String resourceName, 
     StatusEnum status, 
     String targetType
  ) {
    this();
    this.canonicalName = canonicalName;
    this.countryCode = countryCode;
    this.id = id;
    this.name = name;
    this.parentGeoTarget = parentGeoTarget;
    this.resourceName = resourceName;
    this.status = status;
    this.targetType = targetType;
  }

  /**
   * Output only. The fully qualified English name, consisting of the target&#39;s name and that of its parent and country.
   * @return canonicalName
   */
  @javax.annotation.Nullable
  public String getCanonicalName() {
    return canonicalName;
  }



  /**
   * Output only. The ISO-3166-1 alpha-2 country code that is associated with the target.
   * @return countryCode
   */
  @javax.annotation.Nullable
  public String getCountryCode() {
    return countryCode;
  }



  /**
   * Output only. The ID of the geo target constant.
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }



  /**
   * Output only. Geo target constant English name.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }



  /**
   * Output only. The resource name of the parent geo target constant. Geo target constant resource names have the form: &#x60;geoTargetConstants/{parent_geo_target_constant_id}&#x60;
   * @return parentGeoTarget
   */
  @javax.annotation.Nullable
  public String getParentGeoTarget() {
    return parentGeoTarget;
  }



  /**
   * Output only. The resource name of the geo target constant. Geo target constant resource names have the form: &#x60;geoTargetConstants/{geo_target_constant_id}&#x60;
   * @return resourceName
   */
  @javax.annotation.Nullable
  public String getResourceName() {
    return resourceName;
  }



  /**
   * Output only. Geo target constant status.
   * @return status
   */
  @javax.annotation.Nullable
  public StatusEnum getStatus() {
    return status;
  }



  /**
   * Output only. Geo target constant target type.
   * @return targetType
   */
  @javax.annotation.Nullable
  public String getTargetType() {
    return targetType;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleAdsSearchads360V0ResourcesGeoTargetConstant googleAdsSearchads360V0ResourcesGeoTargetConstant = (GoogleAdsSearchads360V0ResourcesGeoTargetConstant) o;
    return Objects.equals(this.canonicalName, googleAdsSearchads360V0ResourcesGeoTargetConstant.canonicalName) &&
        Objects.equals(this.countryCode, googleAdsSearchads360V0ResourcesGeoTargetConstant.countryCode) &&
        Objects.equals(this.id, googleAdsSearchads360V0ResourcesGeoTargetConstant.id) &&
        Objects.equals(this.name, googleAdsSearchads360V0ResourcesGeoTargetConstant.name) &&
        Objects.equals(this.parentGeoTarget, googleAdsSearchads360V0ResourcesGeoTargetConstant.parentGeoTarget) &&
        Objects.equals(this.resourceName, googleAdsSearchads360V0ResourcesGeoTargetConstant.resourceName) &&
        Objects.equals(this.status, googleAdsSearchads360V0ResourcesGeoTargetConstant.status) &&
        Objects.equals(this.targetType, googleAdsSearchads360V0ResourcesGeoTargetConstant.targetType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(canonicalName, countryCode, id, name, parentGeoTarget, resourceName, status, targetType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleAdsSearchads360V0ResourcesGeoTargetConstant {\n");
    sb.append("    canonicalName: ").append(toIndentedString(canonicalName)).append("\n");
    sb.append("    countryCode: ").append(toIndentedString(countryCode)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    parentGeoTarget: ").append(toIndentedString(parentGeoTarget)).append("\n");
    sb.append("    resourceName: ").append(toIndentedString(resourceName)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    targetType: ").append(toIndentedString(targetType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("canonicalName");
    openapiFields.add("countryCode");
    openapiFields.add("id");
    openapiFields.add("name");
    openapiFields.add("parentGeoTarget");
    openapiFields.add("resourceName");
    openapiFields.add("status");
    openapiFields.add("targetType");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleAdsSearchads360V0ResourcesGeoTargetConstant
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleAdsSearchads360V0ResourcesGeoTargetConstant.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleAdsSearchads360V0ResourcesGeoTargetConstant is not found in the empty JSON string", GoogleAdsSearchads360V0ResourcesGeoTargetConstant.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleAdsSearchads360V0ResourcesGeoTargetConstant.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleAdsSearchads360V0ResourcesGeoTargetConstant` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("canonicalName") != null && !jsonObj.get("canonicalName").isJsonNull()) && !jsonObj.get("canonicalName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `canonicalName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("canonicalName").toString()));
      }
      if ((jsonObj.get("countryCode") != null && !jsonObj.get("countryCode").isJsonNull()) && !jsonObj.get("countryCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `countryCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("countryCode").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("parentGeoTarget") != null && !jsonObj.get("parentGeoTarget").isJsonNull()) && !jsonObj.get("parentGeoTarget").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `parentGeoTarget` to be a primitive type in the JSON string but got `%s`", jsonObj.get("parentGeoTarget").toString()));
      }
      if ((jsonObj.get("resourceName") != null && !jsonObj.get("resourceName").isJsonNull()) && !jsonObj.get("resourceName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `resourceName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("resourceName").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      // validate the optional field `status`
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) {
        StatusEnum.validateJsonElement(jsonObj.get("status"));
      }
      if ((jsonObj.get("targetType") != null && !jsonObj.get("targetType").isJsonNull()) && !jsonObj.get("targetType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `targetType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("targetType").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleAdsSearchads360V0ResourcesGeoTargetConstant.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleAdsSearchads360V0ResourcesGeoTargetConstant' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleAdsSearchads360V0ResourcesGeoTargetConstant> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleAdsSearchads360V0ResourcesGeoTargetConstant.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleAdsSearchads360V0ResourcesGeoTargetConstant>() {
           @Override
           public void write(JsonWriter out, GoogleAdsSearchads360V0ResourcesGeoTargetConstant value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleAdsSearchads360V0ResourcesGeoTargetConstant read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleAdsSearchads360V0ResourcesGeoTargetConstant given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleAdsSearchads360V0ResourcesGeoTargetConstant
   * @throws IOException if the JSON string is invalid with respect to GoogleAdsSearchads360V0ResourcesGeoTargetConstant
   */
  public static GoogleAdsSearchads360V0ResourcesGeoTargetConstant fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleAdsSearchads360V0ResourcesGeoTargetConstant.class);
  }

  /**
   * Convert an instance of GoogleAdsSearchads360V0ResourcesGeoTargetConstant to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

