/*
 * Search Ads 360 Reporting API
 * The Search Ads 360 API allows developers to automate downloading reports from Search Ads 360.
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A visit.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:48:17.315010-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleAdsSearchads360V0ResourcesVisit {
  public static final String SERIALIZED_NAME_AD_ID = "adId";
  @SerializedName(SERIALIZED_NAME_AD_ID)
  private String adId;

  /**
   * Output only. Asset field type of the visit event.
   */
  @JsonAdapter(AssetFieldTypeEnum.Adapter.class)
  public enum AssetFieldTypeEnum {
    UNSPECIFIED("UNSPECIFIED"),
    
    UNKNOWN("UNKNOWN"),
    
    HEADLINE("HEADLINE"),
    
    DESCRIPTION("DESCRIPTION"),
    
    MANDATORY_AD_TEXT("MANDATORY_AD_TEXT"),
    
    MARKETING_IMAGE("MARKETING_IMAGE"),
    
    MEDIA_BUNDLE("MEDIA_BUNDLE"),
    
    YOUTUBE_VIDEO("YOUTUBE_VIDEO"),
    
    BOOK_ON_GOOGLE("BOOK_ON_GOOGLE"),
    
    LEAD_FORM("LEAD_FORM"),
    
    PROMOTION("PROMOTION"),
    
    CALLOUT("CALLOUT"),
    
    STRUCTURED_SNIPPET("STRUCTURED_SNIPPET"),
    
    SITELINK("SITELINK"),
    
    MOBILE_APP("MOBILE_APP"),
    
    HOTEL_CALLOUT("HOTEL_CALLOUT"),
    
    CALL("CALL"),
    
    PRICE("PRICE"),
    
    LONG_HEADLINE("LONG_HEADLINE"),
    
    BUSINESS_NAME("BUSINESS_NAME"),
    
    SQUARE_MARKETING_IMAGE("SQUARE_MARKETING_IMAGE"),
    
    PORTRAIT_MARKETING_IMAGE("PORTRAIT_MARKETING_IMAGE"),
    
    LOGO("LOGO"),
    
    LANDSCAPE_LOGO("LANDSCAPE_LOGO"),
    
    VIDEO("VIDEO"),
    
    CALL_TO_ACTION_SELECTION("CALL_TO_ACTION_SELECTION"),
    
    AD_IMAGE("AD_IMAGE"),
    
    BUSINESS_LOGO("BUSINESS_LOGO"),
    
    HOTEL_PROPERTY("HOTEL_PROPERTY");

    private String value;

    AssetFieldTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AssetFieldTypeEnum fromValue(String value) {
      for (AssetFieldTypeEnum b : AssetFieldTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<AssetFieldTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AssetFieldTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AssetFieldTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return AssetFieldTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      AssetFieldTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_ASSET_FIELD_TYPE = "assetFieldType";
  @SerializedName(SERIALIZED_NAME_ASSET_FIELD_TYPE)
  private AssetFieldTypeEnum assetFieldType;

  public static final String SERIALIZED_NAME_ASSET_ID = "assetId";
  @SerializedName(SERIALIZED_NAME_ASSET_ID)
  private String assetId;

  public static final String SERIALIZED_NAME_CLICK_ID = "clickId";
  @SerializedName(SERIALIZED_NAME_CLICK_ID)
  private String clickId;

  public static final String SERIALIZED_NAME_CRITERION_ID = "criterionId";
  @SerializedName(SERIALIZED_NAME_CRITERION_ID)
  private String criterionId;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_MERCHANT_ID = "merchantId";
  @SerializedName(SERIALIZED_NAME_MERCHANT_ID)
  private String merchantId;

  /**
   * Output only. The sales channel of the product that was clicked on: Online or Local.
   */
  @JsonAdapter(ProductChannelEnum.Adapter.class)
  public enum ProductChannelEnum {
    UNSPECIFIED("UNSPECIFIED"),
    
    UNKNOWN("UNKNOWN"),
    
    ONLINE("ONLINE"),
    
    LOCAL("LOCAL");

    private String value;

    ProductChannelEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ProductChannelEnum fromValue(String value) {
      for (ProductChannelEnum b : ProductChannelEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ProductChannelEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ProductChannelEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ProductChannelEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ProductChannelEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ProductChannelEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_PRODUCT_CHANNEL = "productChannel";
  @SerializedName(SERIALIZED_NAME_PRODUCT_CHANNEL)
  private ProductChannelEnum productChannel;

  public static final String SERIALIZED_NAME_PRODUCT_COUNTRY_CODE = "productCountryCode";
  @SerializedName(SERIALIZED_NAME_PRODUCT_COUNTRY_CODE)
  private String productCountryCode;

  public static final String SERIALIZED_NAME_PRODUCT_ID = "productId";
  @SerializedName(SERIALIZED_NAME_PRODUCT_ID)
  private String productId;

  public static final String SERIALIZED_NAME_PRODUCT_LANGUAGE_CODE = "productLanguageCode";
  @SerializedName(SERIALIZED_NAME_PRODUCT_LANGUAGE_CODE)
  private String productLanguageCode;

  public static final String SERIALIZED_NAME_PRODUCT_STORE_ID = "productStoreId";
  @SerializedName(SERIALIZED_NAME_PRODUCT_STORE_ID)
  private String productStoreId;

  public static final String SERIALIZED_NAME_RESOURCE_NAME = "resourceName";
  @SerializedName(SERIALIZED_NAME_RESOURCE_NAME)
  private String resourceName;

  public static final String SERIALIZED_NAME_VISIT_DATE_TIME = "visitDateTime";
  @SerializedName(SERIALIZED_NAME_VISIT_DATE_TIME)
  private String visitDateTime;

  public GoogleAdsSearchads360V0ResourcesVisit() {
  }

  public GoogleAdsSearchads360V0ResourcesVisit(
     String adId, 
     AssetFieldTypeEnum assetFieldType, 
     String assetId, 
     String clickId, 
     String criterionId, 
     String id, 
     String merchantId, 
     ProductChannelEnum productChannel, 
     String productCountryCode, 
     String productId, 
     String productLanguageCode, 
     String productStoreId, 
     String resourceName, 
     String visitDateTime
  ) {
    this();
    this.adId = adId;
    this.assetFieldType = assetFieldType;
    this.assetId = assetId;
    this.clickId = clickId;
    this.criterionId = criterionId;
    this.id = id;
    this.merchantId = merchantId;
    this.productChannel = productChannel;
    this.productCountryCode = productCountryCode;
    this.productId = productId;
    this.productLanguageCode = productLanguageCode;
    this.productStoreId = productStoreId;
    this.resourceName = resourceName;
    this.visitDateTime = visitDateTime;
  }

  /**
   * Output only. Ad ID. A value of 0 indicates that the ad is unattributed.
   * @return adId
   */
  @javax.annotation.Nullable
  public String getAdId() {
    return adId;
  }



  /**
   * Output only. Asset field type of the visit event.
   * @return assetFieldType
   */
  @javax.annotation.Nullable
  public AssetFieldTypeEnum getAssetFieldType() {
    return assetFieldType;
  }



  /**
   * Output only. ID of the asset which was interacted with during the visit event.
   * @return assetId
   */
  @javax.annotation.Nullable
  public String getAssetId() {
    return assetId;
  }



  /**
   * Output only. A unique string for each visit that is passed to the landing page as the click id URL parameter.
   * @return clickId
   */
  @javax.annotation.Nullable
  public String getClickId() {
    return clickId;
  }



  /**
   * Output only. Search Ads 360 keyword ID. A value of 0 indicates that the keyword is unattributed.
   * @return criterionId
   */
  @javax.annotation.Nullable
  public String getCriterionId() {
    return criterionId;
  }



  /**
   * Output only. The ID of the visit.
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }



  /**
   * Output only. The Search Ads 360 inventory account ID containing the product that was clicked on. Search Ads 360 generates this ID when you link an inventory account in Search Ads 360.
   * @return merchantId
   */
  @javax.annotation.Nullable
  public String getMerchantId() {
    return merchantId;
  }



  /**
   * Output only. The sales channel of the product that was clicked on: Online or Local.
   * @return productChannel
   */
  @javax.annotation.Nullable
  public ProductChannelEnum getProductChannel() {
    return productChannel;
  }



  /**
   * Output only. The country (ISO-3166 format) registered for the inventory feed that contains the product clicked on.
   * @return productCountryCode
   */
  @javax.annotation.Nullable
  public String getProductCountryCode() {
    return productCountryCode;
  }



  /**
   * Output only. The ID of the product clicked on.
   * @return productId
   */
  @javax.annotation.Nullable
  public String getProductId() {
    return productId;
  }



  /**
   * Output only. The language (ISO-639-1) that has been set for the Merchant Center feed containing data about the product.
   * @return productLanguageCode
   */
  @javax.annotation.Nullable
  public String getProductLanguageCode() {
    return productLanguageCode;
  }



  /**
   * Output only. The store in the Local Inventory Ad that was clicked on. This should match the store IDs used in your local products feed.
   * @return productStoreId
   */
  @javax.annotation.Nullable
  public String getProductStoreId() {
    return productStoreId;
  }



  /**
   * Output only. The resource name of the visit. Visit resource names have the form: &#x60;customers/{customer_id}/visits/{ad_group_id}~{criterion_id}~{ds_visit_id}&#x60;
   * @return resourceName
   */
  @javax.annotation.Nullable
  public String getResourceName() {
    return resourceName;
  }



  /**
   * Output only. The timestamp of the visit event. The timestamp is in the customer&#39;s time zone and in \&quot;yyyy-MM-dd HH:mm:ss\&quot; format.
   * @return visitDateTime
   */
  @javax.annotation.Nullable
  public String getVisitDateTime() {
    return visitDateTime;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleAdsSearchads360V0ResourcesVisit googleAdsSearchads360V0ResourcesVisit = (GoogleAdsSearchads360V0ResourcesVisit) o;
    return Objects.equals(this.adId, googleAdsSearchads360V0ResourcesVisit.adId) &&
        Objects.equals(this.assetFieldType, googleAdsSearchads360V0ResourcesVisit.assetFieldType) &&
        Objects.equals(this.assetId, googleAdsSearchads360V0ResourcesVisit.assetId) &&
        Objects.equals(this.clickId, googleAdsSearchads360V0ResourcesVisit.clickId) &&
        Objects.equals(this.criterionId, googleAdsSearchads360V0ResourcesVisit.criterionId) &&
        Objects.equals(this.id, googleAdsSearchads360V0ResourcesVisit.id) &&
        Objects.equals(this.merchantId, googleAdsSearchads360V0ResourcesVisit.merchantId) &&
        Objects.equals(this.productChannel, googleAdsSearchads360V0ResourcesVisit.productChannel) &&
        Objects.equals(this.productCountryCode, googleAdsSearchads360V0ResourcesVisit.productCountryCode) &&
        Objects.equals(this.productId, googleAdsSearchads360V0ResourcesVisit.productId) &&
        Objects.equals(this.productLanguageCode, googleAdsSearchads360V0ResourcesVisit.productLanguageCode) &&
        Objects.equals(this.productStoreId, googleAdsSearchads360V0ResourcesVisit.productStoreId) &&
        Objects.equals(this.resourceName, googleAdsSearchads360V0ResourcesVisit.resourceName) &&
        Objects.equals(this.visitDateTime, googleAdsSearchads360V0ResourcesVisit.visitDateTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(adId, assetFieldType, assetId, clickId, criterionId, id, merchantId, productChannel, productCountryCode, productId, productLanguageCode, productStoreId, resourceName, visitDateTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleAdsSearchads360V0ResourcesVisit {\n");
    sb.append("    adId: ").append(toIndentedString(adId)).append("\n");
    sb.append("    assetFieldType: ").append(toIndentedString(assetFieldType)).append("\n");
    sb.append("    assetId: ").append(toIndentedString(assetId)).append("\n");
    sb.append("    clickId: ").append(toIndentedString(clickId)).append("\n");
    sb.append("    criterionId: ").append(toIndentedString(criterionId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    merchantId: ").append(toIndentedString(merchantId)).append("\n");
    sb.append("    productChannel: ").append(toIndentedString(productChannel)).append("\n");
    sb.append("    productCountryCode: ").append(toIndentedString(productCountryCode)).append("\n");
    sb.append("    productId: ").append(toIndentedString(productId)).append("\n");
    sb.append("    productLanguageCode: ").append(toIndentedString(productLanguageCode)).append("\n");
    sb.append("    productStoreId: ").append(toIndentedString(productStoreId)).append("\n");
    sb.append("    resourceName: ").append(toIndentedString(resourceName)).append("\n");
    sb.append("    visitDateTime: ").append(toIndentedString(visitDateTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("adId");
    openapiFields.add("assetFieldType");
    openapiFields.add("assetId");
    openapiFields.add("clickId");
    openapiFields.add("criterionId");
    openapiFields.add("id");
    openapiFields.add("merchantId");
    openapiFields.add("productChannel");
    openapiFields.add("productCountryCode");
    openapiFields.add("productId");
    openapiFields.add("productLanguageCode");
    openapiFields.add("productStoreId");
    openapiFields.add("resourceName");
    openapiFields.add("visitDateTime");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleAdsSearchads360V0ResourcesVisit
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleAdsSearchads360V0ResourcesVisit.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleAdsSearchads360V0ResourcesVisit is not found in the empty JSON string", GoogleAdsSearchads360V0ResourcesVisit.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleAdsSearchads360V0ResourcesVisit.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleAdsSearchads360V0ResourcesVisit` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("adId") != null && !jsonObj.get("adId").isJsonNull()) && !jsonObj.get("adId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `adId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("adId").toString()));
      }
      if ((jsonObj.get("assetFieldType") != null && !jsonObj.get("assetFieldType").isJsonNull()) && !jsonObj.get("assetFieldType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `assetFieldType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("assetFieldType").toString()));
      }
      // validate the optional field `assetFieldType`
      if (jsonObj.get("assetFieldType") != null && !jsonObj.get("assetFieldType").isJsonNull()) {
        AssetFieldTypeEnum.validateJsonElement(jsonObj.get("assetFieldType"));
      }
      if ((jsonObj.get("assetId") != null && !jsonObj.get("assetId").isJsonNull()) && !jsonObj.get("assetId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `assetId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("assetId").toString()));
      }
      if ((jsonObj.get("clickId") != null && !jsonObj.get("clickId").isJsonNull()) && !jsonObj.get("clickId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `clickId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("clickId").toString()));
      }
      if ((jsonObj.get("criterionId") != null && !jsonObj.get("criterionId").isJsonNull()) && !jsonObj.get("criterionId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `criterionId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("criterionId").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("merchantId") != null && !jsonObj.get("merchantId").isJsonNull()) && !jsonObj.get("merchantId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `merchantId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("merchantId").toString()));
      }
      if ((jsonObj.get("productChannel") != null && !jsonObj.get("productChannel").isJsonNull()) && !jsonObj.get("productChannel").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `productChannel` to be a primitive type in the JSON string but got `%s`", jsonObj.get("productChannel").toString()));
      }
      // validate the optional field `productChannel`
      if (jsonObj.get("productChannel") != null && !jsonObj.get("productChannel").isJsonNull()) {
        ProductChannelEnum.validateJsonElement(jsonObj.get("productChannel"));
      }
      if ((jsonObj.get("productCountryCode") != null && !jsonObj.get("productCountryCode").isJsonNull()) && !jsonObj.get("productCountryCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `productCountryCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("productCountryCode").toString()));
      }
      if ((jsonObj.get("productId") != null && !jsonObj.get("productId").isJsonNull()) && !jsonObj.get("productId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `productId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("productId").toString()));
      }
      if ((jsonObj.get("productLanguageCode") != null && !jsonObj.get("productLanguageCode").isJsonNull()) && !jsonObj.get("productLanguageCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `productLanguageCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("productLanguageCode").toString()));
      }
      if ((jsonObj.get("productStoreId") != null && !jsonObj.get("productStoreId").isJsonNull()) && !jsonObj.get("productStoreId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `productStoreId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("productStoreId").toString()));
      }
      if ((jsonObj.get("resourceName") != null && !jsonObj.get("resourceName").isJsonNull()) && !jsonObj.get("resourceName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `resourceName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("resourceName").toString()));
      }
      if ((jsonObj.get("visitDateTime") != null && !jsonObj.get("visitDateTime").isJsonNull()) && !jsonObj.get("visitDateTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `visitDateTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("visitDateTime").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleAdsSearchads360V0ResourcesVisit.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleAdsSearchads360V0ResourcesVisit' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleAdsSearchads360V0ResourcesVisit> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleAdsSearchads360V0ResourcesVisit.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleAdsSearchads360V0ResourcesVisit>() {
           @Override
           public void write(JsonWriter out, GoogleAdsSearchads360V0ResourcesVisit value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleAdsSearchads360V0ResourcesVisit read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleAdsSearchads360V0ResourcesVisit given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleAdsSearchads360V0ResourcesVisit
   * @throws IOException if the JSON string is invalid with respect to GoogleAdsSearchads360V0ResourcesVisit
   */
  public static GoogleAdsSearchads360V0ResourcesVisit fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleAdsSearchads360V0ResourcesVisit.class);
  }

  /**
   * Convert an instance of GoogleAdsSearchads360V0ResourcesVisit to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

