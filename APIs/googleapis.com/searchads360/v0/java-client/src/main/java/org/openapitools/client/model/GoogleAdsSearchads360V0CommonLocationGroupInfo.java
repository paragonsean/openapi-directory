/*
 * Search Ads 360 Reporting API
 * The Search Ads 360 API allows developers to automate downloading reports from Search Ads 360.
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A radius around a list of locations specified through a feed.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:48:17.315010-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleAdsSearchads360V0CommonLocationGroupInfo {
  public static final String SERIALIZED_NAME_FEED_ITEM_SETS = "feedItemSets";
  @SerializedName(SERIALIZED_NAME_FEED_ITEM_SETS)
  private List<String> feedItemSets = new ArrayList<>();

  public static final String SERIALIZED_NAME_GEO_TARGET_CONSTANTS = "geoTargetConstants";
  @SerializedName(SERIALIZED_NAME_GEO_TARGET_CONSTANTS)
  private List<String> geoTargetConstants = new ArrayList<>();

  public static final String SERIALIZED_NAME_RADIUS = "radius";
  @SerializedName(SERIALIZED_NAME_RADIUS)
  private String radius;

  /**
   * Unit of the radius. Miles and meters are supported for geo target constants. Milli miles and meters are supported for feed item sets. This is required and must be set in CREATE operations.
   */
  @JsonAdapter(RadiusUnitsEnum.Adapter.class)
  public enum RadiusUnitsEnum {
    UNSPECIFIED("UNSPECIFIED"),
    
    UNKNOWN("UNKNOWN"),
    
    METERS("METERS"),
    
    MILES("MILES"),
    
    MILLI_MILES("MILLI_MILES");

    private String value;

    RadiusUnitsEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static RadiusUnitsEnum fromValue(String value) {
      for (RadiusUnitsEnum b : RadiusUnitsEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<RadiusUnitsEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RadiusUnitsEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public RadiusUnitsEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return RadiusUnitsEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      RadiusUnitsEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_RADIUS_UNITS = "radiusUnits";
  @SerializedName(SERIALIZED_NAME_RADIUS_UNITS)
  private RadiusUnitsEnum radiusUnits;

  public GoogleAdsSearchads360V0CommonLocationGroupInfo() {
  }

  public GoogleAdsSearchads360V0CommonLocationGroupInfo feedItemSets(List<String> feedItemSets) {
    this.feedItemSets = feedItemSets;
    return this;
  }

  public GoogleAdsSearchads360V0CommonLocationGroupInfo addFeedItemSetsItem(String feedItemSetsItem) {
    if (this.feedItemSets == null) {
      this.feedItemSets = new ArrayList<>();
    }
    this.feedItemSets.add(feedItemSetsItem);
    return this;
  }

  /**
   * FeedItemSets whose FeedItems are targeted. If multiple IDs are specified, then all items that appear in at least one set are targeted. This field cannot be used with geo_target_constants. This is optional and can only be set in CREATE operations.
   * @return feedItemSets
   */
  @javax.annotation.Nullable
  public List<String> getFeedItemSets() {
    return feedItemSets;
  }

  public void setFeedItemSets(List<String> feedItemSets) {
    this.feedItemSets = feedItemSets;
  }


  public GoogleAdsSearchads360V0CommonLocationGroupInfo geoTargetConstants(List<String> geoTargetConstants) {
    this.geoTargetConstants = geoTargetConstants;
    return this;
  }

  public GoogleAdsSearchads360V0CommonLocationGroupInfo addGeoTargetConstantsItem(String geoTargetConstantsItem) {
    if (this.geoTargetConstants == null) {
      this.geoTargetConstants = new ArrayList<>();
    }
    this.geoTargetConstants.add(geoTargetConstantsItem);
    return this;
  }

  /**
   * Geo target constant(s) restricting the scope of the geographic area within the feed. Currently only one geo target constant is allowed.
   * @return geoTargetConstants
   */
  @javax.annotation.Nullable
  public List<String> getGeoTargetConstants() {
    return geoTargetConstants;
  }

  public void setGeoTargetConstants(List<String> geoTargetConstants) {
    this.geoTargetConstants = geoTargetConstants;
  }


  public GoogleAdsSearchads360V0CommonLocationGroupInfo radius(String radius) {
    this.radius = radius;
    return this;
  }

  /**
   * Distance in units specifying the radius around targeted locations. This is required and must be set in CREATE operations.
   * @return radius
   */
  @javax.annotation.Nullable
  public String getRadius() {
    return radius;
  }

  public void setRadius(String radius) {
    this.radius = radius;
  }


  public GoogleAdsSearchads360V0CommonLocationGroupInfo radiusUnits(RadiusUnitsEnum radiusUnits) {
    this.radiusUnits = radiusUnits;
    return this;
  }

  /**
   * Unit of the radius. Miles and meters are supported for geo target constants. Milli miles and meters are supported for feed item sets. This is required and must be set in CREATE operations.
   * @return radiusUnits
   */
  @javax.annotation.Nullable
  public RadiusUnitsEnum getRadiusUnits() {
    return radiusUnits;
  }

  public void setRadiusUnits(RadiusUnitsEnum radiusUnits) {
    this.radiusUnits = radiusUnits;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleAdsSearchads360V0CommonLocationGroupInfo googleAdsSearchads360V0CommonLocationGroupInfo = (GoogleAdsSearchads360V0CommonLocationGroupInfo) o;
    return Objects.equals(this.feedItemSets, googleAdsSearchads360V0CommonLocationGroupInfo.feedItemSets) &&
        Objects.equals(this.geoTargetConstants, googleAdsSearchads360V0CommonLocationGroupInfo.geoTargetConstants) &&
        Objects.equals(this.radius, googleAdsSearchads360V0CommonLocationGroupInfo.radius) &&
        Objects.equals(this.radiusUnits, googleAdsSearchads360V0CommonLocationGroupInfo.radiusUnits);
  }

  @Override
  public int hashCode() {
    return Objects.hash(feedItemSets, geoTargetConstants, radius, radiusUnits);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleAdsSearchads360V0CommonLocationGroupInfo {\n");
    sb.append("    feedItemSets: ").append(toIndentedString(feedItemSets)).append("\n");
    sb.append("    geoTargetConstants: ").append(toIndentedString(geoTargetConstants)).append("\n");
    sb.append("    radius: ").append(toIndentedString(radius)).append("\n");
    sb.append("    radiusUnits: ").append(toIndentedString(radiusUnits)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("feedItemSets");
    openapiFields.add("geoTargetConstants");
    openapiFields.add("radius");
    openapiFields.add("radiusUnits");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleAdsSearchads360V0CommonLocationGroupInfo
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleAdsSearchads360V0CommonLocationGroupInfo.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleAdsSearchads360V0CommonLocationGroupInfo is not found in the empty JSON string", GoogleAdsSearchads360V0CommonLocationGroupInfo.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleAdsSearchads360V0CommonLocationGroupInfo.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleAdsSearchads360V0CommonLocationGroupInfo` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("feedItemSets") != null && !jsonObj.get("feedItemSets").isJsonNull() && !jsonObj.get("feedItemSets").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `feedItemSets` to be an array in the JSON string but got `%s`", jsonObj.get("feedItemSets").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("geoTargetConstants") != null && !jsonObj.get("geoTargetConstants").isJsonNull() && !jsonObj.get("geoTargetConstants").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `geoTargetConstants` to be an array in the JSON string but got `%s`", jsonObj.get("geoTargetConstants").toString()));
      }
      if ((jsonObj.get("radius") != null && !jsonObj.get("radius").isJsonNull()) && !jsonObj.get("radius").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `radius` to be a primitive type in the JSON string but got `%s`", jsonObj.get("radius").toString()));
      }
      if ((jsonObj.get("radiusUnits") != null && !jsonObj.get("radiusUnits").isJsonNull()) && !jsonObj.get("radiusUnits").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `radiusUnits` to be a primitive type in the JSON string but got `%s`", jsonObj.get("radiusUnits").toString()));
      }
      // validate the optional field `radiusUnits`
      if (jsonObj.get("radiusUnits") != null && !jsonObj.get("radiusUnits").isJsonNull()) {
        RadiusUnitsEnum.validateJsonElement(jsonObj.get("radiusUnits"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleAdsSearchads360V0CommonLocationGroupInfo.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleAdsSearchads360V0CommonLocationGroupInfo' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleAdsSearchads360V0CommonLocationGroupInfo> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleAdsSearchads360V0CommonLocationGroupInfo.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleAdsSearchads360V0CommonLocationGroupInfo>() {
           @Override
           public void write(JsonWriter out, GoogleAdsSearchads360V0CommonLocationGroupInfo value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleAdsSearchads360V0CommonLocationGroupInfo read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleAdsSearchads360V0CommonLocationGroupInfo given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleAdsSearchads360V0CommonLocationGroupInfo
   * @throws IOException if the JSON string is invalid with respect to GoogleAdsSearchads360V0CommonLocationGroupInfo
   */
  public static GoogleAdsSearchads360V0CommonLocationGroupInfo fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleAdsSearchads360V0CommonLocationGroupInfo.class);
  }

  /**
   * Convert an instance of GoogleAdsSearchads360V0CommonLocationGroupInfo to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

