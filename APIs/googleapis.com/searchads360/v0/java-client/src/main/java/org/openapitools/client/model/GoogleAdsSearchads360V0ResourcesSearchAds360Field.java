/*
 * Search Ads 360 Reporting API
 * The Search Ads 360 API allows developers to automate downloading reports from Search Ads 360.
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A field or resource (artifact) used by SearchAds360Service.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:48:17.315010-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleAdsSearchads360V0ResourcesSearchAds360Field {
  public static final String SERIALIZED_NAME_ATTRIBUTE_RESOURCES = "attributeResources";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTE_RESOURCES)
  private List<String> attributeResources = new ArrayList<>();

  /**
   * Output only. The category of the artifact.
   */
  @JsonAdapter(CategoryEnum.Adapter.class)
  public enum CategoryEnum {
    UNSPECIFIED("UNSPECIFIED"),
    
    UNKNOWN("UNKNOWN"),
    
    RESOURCE("RESOURCE"),
    
    ATTRIBUTE("ATTRIBUTE"),
    
    SEGMENT("SEGMENT"),
    
    METRIC("METRIC");

    private String value;

    CategoryEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static CategoryEnum fromValue(String value) {
      for (CategoryEnum b : CategoryEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<CategoryEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CategoryEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CategoryEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return CategoryEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      CategoryEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_CATEGORY = "category";
  @SerializedName(SERIALIZED_NAME_CATEGORY)
  private CategoryEnum category;

  /**
   * Output only. This field determines the operators that can be used with the artifact in WHERE clauses.
   */
  @JsonAdapter(DataTypeEnum.Adapter.class)
  public enum DataTypeEnum {
    UNSPECIFIED("UNSPECIFIED"),
    
    UNKNOWN("UNKNOWN"),
    
    BOOLEAN("BOOLEAN"),
    
    DATE("DATE"),
    
    DOUBLE("DOUBLE"),
    
    ENUM("ENUM"),
    
    FLOAT("FLOAT"),
    
    INT32("INT32"),
    
    INT64("INT64"),
    
    MESSAGE("MESSAGE"),
    
    RESOURCE_NAME("RESOURCE_NAME"),
    
    STRING("STRING"),
    
    UINT64("UINT64");

    private String value;

    DataTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static DataTypeEnum fromValue(String value) {
      for (DataTypeEnum b : DataTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<DataTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DataTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public DataTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return DataTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      DataTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_DATA_TYPE = "dataType";
  @SerializedName(SERIALIZED_NAME_DATA_TYPE)
  private DataTypeEnum dataType;

  public static final String SERIALIZED_NAME_ENUM_VALUES = "enumValues";
  @SerializedName(SERIALIZED_NAME_ENUM_VALUES)
  private List<String> enumValues = new ArrayList<>();

  public static final String SERIALIZED_NAME_FILTERABLE = "filterable";
  @SerializedName(SERIALIZED_NAME_FILTERABLE)
  private Boolean filterable;

  public static final String SERIALIZED_NAME_IS_REPEATED = "isRepeated";
  @SerializedName(SERIALIZED_NAME_IS_REPEATED)
  private Boolean isRepeated;

  public static final String SERIALIZED_NAME_METRICS = "metrics";
  @SerializedName(SERIALIZED_NAME_METRICS)
  private List<String> metrics = new ArrayList<>();

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_RESOURCE_NAME = "resourceName";
  @SerializedName(SERIALIZED_NAME_RESOURCE_NAME)
  private String resourceName;

  public static final String SERIALIZED_NAME_SEGMENTS = "segments";
  @SerializedName(SERIALIZED_NAME_SEGMENTS)
  private List<String> segments = new ArrayList<>();

  public static final String SERIALIZED_NAME_SELECTABLE = "selectable";
  @SerializedName(SERIALIZED_NAME_SELECTABLE)
  private Boolean selectable;

  public static final String SERIALIZED_NAME_SELECTABLE_WITH = "selectableWith";
  @SerializedName(SERIALIZED_NAME_SELECTABLE_WITH)
  private List<String> selectableWith = new ArrayList<>();

  public static final String SERIALIZED_NAME_SORTABLE = "sortable";
  @SerializedName(SERIALIZED_NAME_SORTABLE)
  private Boolean sortable;

  public static final String SERIALIZED_NAME_TYPE_URL = "typeUrl";
  @SerializedName(SERIALIZED_NAME_TYPE_URL)
  private String typeUrl;

  public GoogleAdsSearchads360V0ResourcesSearchAds360Field() {
  }

  public GoogleAdsSearchads360V0ResourcesSearchAds360Field(
     List<String> attributeResources, 
     CategoryEnum category, 
     DataTypeEnum dataType, 
     List<String> enumValues, 
     Boolean filterable, 
     Boolean isRepeated, 
     List<String> metrics, 
     String name, 
     String resourceName, 
     List<String> segments, 
     Boolean selectable, 
     List<String> selectableWith, 
     Boolean sortable, 
     String typeUrl
  ) {
    this();
    this.attributeResources = attributeResources;
    this.category = category;
    this.dataType = dataType;
    this.enumValues = enumValues;
    this.filterable = filterable;
    this.isRepeated = isRepeated;
    this.metrics = metrics;
    this.name = name;
    this.resourceName = resourceName;
    this.segments = segments;
    this.selectable = selectable;
    this.selectableWith = selectableWith;
    this.sortable = sortable;
    this.typeUrl = typeUrl;
  }

  /**
   * Output only. The names of all resources that are selectable with the described artifact. Fields from these resources do not segment metrics when included in search queries. This field is only set for artifacts whose category is RESOURCE.
   * @return attributeResources
   */
  @javax.annotation.Nullable
  public List<String> getAttributeResources() {
    return attributeResources;
  }



  /**
   * Output only. The category of the artifact.
   * @return category
   */
  @javax.annotation.Nullable
  public CategoryEnum getCategory() {
    return category;
  }



  /**
   * Output only. This field determines the operators that can be used with the artifact in WHERE clauses.
   * @return dataType
   */
  @javax.annotation.Nullable
  public DataTypeEnum getDataType() {
    return dataType;
  }



  /**
   * Output only. Values the artifact can assume if it is a field of type ENUM. This field is only set for artifacts of category SEGMENT or ATTRIBUTE.
   * @return enumValues
   */
  @javax.annotation.Nullable
  public List<String> getEnumValues() {
    return enumValues;
  }



  /**
   * Output only. Whether the artifact can be used in a WHERE clause in search queries.
   * @return filterable
   */
  @javax.annotation.Nullable
  public Boolean getFilterable() {
    return filterable;
  }



  /**
   * Output only. Whether the field artifact is repeated.
   * @return isRepeated
   */
  @javax.annotation.Nullable
  public Boolean getIsRepeated() {
    return isRepeated;
  }



  /**
   * Output only. This field lists the names of all metrics that are selectable with the described artifact when it is used in the FROM clause. It is only set for artifacts whose category is RESOURCE.
   * @return metrics
   */
  @javax.annotation.Nullable
  public List<String> getMetrics() {
    return metrics;
  }



  /**
   * Output only. The name of the artifact.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }



  /**
   * Output only. The resource name of the artifact. Artifact resource names have the form: &#x60;SearchAds360Fields/{name}&#x60;
   * @return resourceName
   */
  @javax.annotation.Nullable
  public String getResourceName() {
    return resourceName;
  }



  /**
   * Output only. This field lists the names of all artifacts, whether a segment or another resource, that segment metrics when included in search queries and when the described artifact is used in the FROM clause. It is only set for artifacts whose category is RESOURCE.
   * @return segments
   */
  @javax.annotation.Nullable
  public List<String> getSegments() {
    return segments;
  }



  /**
   * Output only. Whether the artifact can be used in a SELECT clause in search queries.
   * @return selectable
   */
  @javax.annotation.Nullable
  public Boolean getSelectable() {
    return selectable;
  }



  /**
   * Output only. The names of all resources, segments, and metrics that are selectable with the described artifact.
   * @return selectableWith
   */
  @javax.annotation.Nullable
  public List<String> getSelectableWith() {
    return selectableWith;
  }



  /**
   * Output only. Whether the artifact can be used in a ORDER BY clause in search queries.
   * @return sortable
   */
  @javax.annotation.Nullable
  public Boolean getSortable() {
    return sortable;
  }



  /**
   * Output only. The URL of proto describing the artifact&#39;s data type.
   * @return typeUrl
   */
  @javax.annotation.Nullable
  public String getTypeUrl() {
    return typeUrl;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleAdsSearchads360V0ResourcesSearchAds360Field googleAdsSearchads360V0ResourcesSearchAds360Field = (GoogleAdsSearchads360V0ResourcesSearchAds360Field) o;
    return Objects.equals(this.attributeResources, googleAdsSearchads360V0ResourcesSearchAds360Field.attributeResources) &&
        Objects.equals(this.category, googleAdsSearchads360V0ResourcesSearchAds360Field.category) &&
        Objects.equals(this.dataType, googleAdsSearchads360V0ResourcesSearchAds360Field.dataType) &&
        Objects.equals(this.enumValues, googleAdsSearchads360V0ResourcesSearchAds360Field.enumValues) &&
        Objects.equals(this.filterable, googleAdsSearchads360V0ResourcesSearchAds360Field.filterable) &&
        Objects.equals(this.isRepeated, googleAdsSearchads360V0ResourcesSearchAds360Field.isRepeated) &&
        Objects.equals(this.metrics, googleAdsSearchads360V0ResourcesSearchAds360Field.metrics) &&
        Objects.equals(this.name, googleAdsSearchads360V0ResourcesSearchAds360Field.name) &&
        Objects.equals(this.resourceName, googleAdsSearchads360V0ResourcesSearchAds360Field.resourceName) &&
        Objects.equals(this.segments, googleAdsSearchads360V0ResourcesSearchAds360Field.segments) &&
        Objects.equals(this.selectable, googleAdsSearchads360V0ResourcesSearchAds360Field.selectable) &&
        Objects.equals(this.selectableWith, googleAdsSearchads360V0ResourcesSearchAds360Field.selectableWith) &&
        Objects.equals(this.sortable, googleAdsSearchads360V0ResourcesSearchAds360Field.sortable) &&
        Objects.equals(this.typeUrl, googleAdsSearchads360V0ResourcesSearchAds360Field.typeUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(attributeResources, category, dataType, enumValues, filterable, isRepeated, metrics, name, resourceName, segments, selectable, selectableWith, sortable, typeUrl);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleAdsSearchads360V0ResourcesSearchAds360Field {\n");
    sb.append("    attributeResources: ").append(toIndentedString(attributeResources)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    dataType: ").append(toIndentedString(dataType)).append("\n");
    sb.append("    enumValues: ").append(toIndentedString(enumValues)).append("\n");
    sb.append("    filterable: ").append(toIndentedString(filterable)).append("\n");
    sb.append("    isRepeated: ").append(toIndentedString(isRepeated)).append("\n");
    sb.append("    metrics: ").append(toIndentedString(metrics)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    resourceName: ").append(toIndentedString(resourceName)).append("\n");
    sb.append("    segments: ").append(toIndentedString(segments)).append("\n");
    sb.append("    selectable: ").append(toIndentedString(selectable)).append("\n");
    sb.append("    selectableWith: ").append(toIndentedString(selectableWith)).append("\n");
    sb.append("    sortable: ").append(toIndentedString(sortable)).append("\n");
    sb.append("    typeUrl: ").append(toIndentedString(typeUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("attributeResources");
    openapiFields.add("category");
    openapiFields.add("dataType");
    openapiFields.add("enumValues");
    openapiFields.add("filterable");
    openapiFields.add("isRepeated");
    openapiFields.add("metrics");
    openapiFields.add("name");
    openapiFields.add("resourceName");
    openapiFields.add("segments");
    openapiFields.add("selectable");
    openapiFields.add("selectableWith");
    openapiFields.add("sortable");
    openapiFields.add("typeUrl");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleAdsSearchads360V0ResourcesSearchAds360Field
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleAdsSearchads360V0ResourcesSearchAds360Field.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleAdsSearchads360V0ResourcesSearchAds360Field is not found in the empty JSON string", GoogleAdsSearchads360V0ResourcesSearchAds360Field.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleAdsSearchads360V0ResourcesSearchAds360Field.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleAdsSearchads360V0ResourcesSearchAds360Field` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("attributeResources") != null && !jsonObj.get("attributeResources").isJsonNull() && !jsonObj.get("attributeResources").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `attributeResources` to be an array in the JSON string but got `%s`", jsonObj.get("attributeResources").toString()));
      }
      if ((jsonObj.get("category") != null && !jsonObj.get("category").isJsonNull()) && !jsonObj.get("category").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `category` to be a primitive type in the JSON string but got `%s`", jsonObj.get("category").toString()));
      }
      // validate the optional field `category`
      if (jsonObj.get("category") != null && !jsonObj.get("category").isJsonNull()) {
        CategoryEnum.validateJsonElement(jsonObj.get("category"));
      }
      if ((jsonObj.get("dataType") != null && !jsonObj.get("dataType").isJsonNull()) && !jsonObj.get("dataType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dataType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dataType").toString()));
      }
      // validate the optional field `dataType`
      if (jsonObj.get("dataType") != null && !jsonObj.get("dataType").isJsonNull()) {
        DataTypeEnum.validateJsonElement(jsonObj.get("dataType"));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("enumValues") != null && !jsonObj.get("enumValues").isJsonNull() && !jsonObj.get("enumValues").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `enumValues` to be an array in the JSON string but got `%s`", jsonObj.get("enumValues").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("metrics") != null && !jsonObj.get("metrics").isJsonNull() && !jsonObj.get("metrics").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `metrics` to be an array in the JSON string but got `%s`", jsonObj.get("metrics").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("resourceName") != null && !jsonObj.get("resourceName").isJsonNull()) && !jsonObj.get("resourceName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `resourceName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("resourceName").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("segments") != null && !jsonObj.get("segments").isJsonNull() && !jsonObj.get("segments").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `segments` to be an array in the JSON string but got `%s`", jsonObj.get("segments").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("selectableWith") != null && !jsonObj.get("selectableWith").isJsonNull() && !jsonObj.get("selectableWith").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `selectableWith` to be an array in the JSON string but got `%s`", jsonObj.get("selectableWith").toString()));
      }
      if ((jsonObj.get("typeUrl") != null && !jsonObj.get("typeUrl").isJsonNull()) && !jsonObj.get("typeUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `typeUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("typeUrl").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleAdsSearchads360V0ResourcesSearchAds360Field.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleAdsSearchads360V0ResourcesSearchAds360Field' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleAdsSearchads360V0ResourcesSearchAds360Field> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleAdsSearchads360V0ResourcesSearchAds360Field.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleAdsSearchads360V0ResourcesSearchAds360Field>() {
           @Override
           public void write(JsonWriter out, GoogleAdsSearchads360V0ResourcesSearchAds360Field value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleAdsSearchads360V0ResourcesSearchAds360Field read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleAdsSearchads360V0ResourcesSearchAds360Field given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleAdsSearchads360V0ResourcesSearchAds360Field
   * @throws IOException if the JSON string is invalid with respect to GoogleAdsSearchads360V0ResourcesSearchAds360Field
   */
  public static GoogleAdsSearchads360V0ResourcesSearchAds360Field fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleAdsSearchads360V0ResourcesSearchAds360Field.class);
  }

  /**
   * Convert an instance of GoogleAdsSearchads360V0ResourcesSearchAds360Field to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

