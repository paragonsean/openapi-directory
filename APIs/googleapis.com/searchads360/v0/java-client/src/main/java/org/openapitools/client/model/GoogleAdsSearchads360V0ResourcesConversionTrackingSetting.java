/*
 * Search Ads 360 Reporting API
 * The Search Ads 360 API allows developers to automate downloading reports from Search Ads 360.
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A collection of customer-wide settings related to Search Ads 360 Conversion Tracking.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:48:17.315010-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleAdsSearchads360V0ResourcesConversionTrackingSetting {
  public static final String SERIALIZED_NAME_ACCEPTED_CUSTOMER_DATA_TERMS = "acceptedCustomerDataTerms";
  @SerializedName(SERIALIZED_NAME_ACCEPTED_CUSTOMER_DATA_TERMS)
  private Boolean acceptedCustomerDataTerms;

  public static final String SERIALIZED_NAME_CONVERSION_TRACKING_ID = "conversionTrackingId";
  @SerializedName(SERIALIZED_NAME_CONVERSION_TRACKING_ID)
  private String conversionTrackingId;

  /**
   * Output only. Conversion tracking status. It indicates whether the customer is using conversion tracking, and who is the conversion tracking owner of this customer. If this customer is using cross-account conversion tracking, the value returned will differ based on the &#x60;login-customer-id&#x60; of the request.
   */
  @JsonAdapter(ConversionTrackingStatusEnum.Adapter.class)
  public enum ConversionTrackingStatusEnum {
    UNSPECIFIED("UNSPECIFIED"),
    
    UNKNOWN("UNKNOWN"),
    
    NOT_CONVERSION_TRACKED("NOT_CONVERSION_TRACKED"),
    
    CONVERSION_TRACKING_MANAGED_BY_SELF("CONVERSION_TRACKING_MANAGED_BY_SELF"),
    
    CONVERSION_TRACKING_MANAGED_BY_THIS_MANAGER("CONVERSION_TRACKING_MANAGED_BY_THIS_MANAGER"),
    
    CONVERSION_TRACKING_MANAGED_BY_ANOTHER_MANAGER("CONVERSION_TRACKING_MANAGED_BY_ANOTHER_MANAGER");

    private String value;

    ConversionTrackingStatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ConversionTrackingStatusEnum fromValue(String value) {
      for (ConversionTrackingStatusEnum b : ConversionTrackingStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ConversionTrackingStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ConversionTrackingStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ConversionTrackingStatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ConversionTrackingStatusEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ConversionTrackingStatusEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_CONVERSION_TRACKING_STATUS = "conversionTrackingStatus";
  @SerializedName(SERIALIZED_NAME_CONVERSION_TRACKING_STATUS)
  private ConversionTrackingStatusEnum conversionTrackingStatus;

  public static final String SERIALIZED_NAME_CROSS_ACCOUNT_CONVERSION_TRACKING_ID = "crossAccountConversionTrackingId";
  @SerializedName(SERIALIZED_NAME_CROSS_ACCOUNT_CONVERSION_TRACKING_ID)
  private String crossAccountConversionTrackingId;

  public static final String SERIALIZED_NAME_ENHANCED_CONVERSIONS_FOR_LEADS_ENABLED = "enhancedConversionsForLeadsEnabled";
  @SerializedName(SERIALIZED_NAME_ENHANCED_CONVERSIONS_FOR_LEADS_ENABLED)
  private Boolean enhancedConversionsForLeadsEnabled;

  public static final String SERIALIZED_NAME_GOOGLE_ADS_CONVERSION_CUSTOMER = "googleAdsConversionCustomer";
  @SerializedName(SERIALIZED_NAME_GOOGLE_ADS_CONVERSION_CUSTOMER)
  private String googleAdsConversionCustomer;

  public static final String SERIALIZED_NAME_GOOGLE_ADS_CROSS_ACCOUNT_CONVERSION_TRACKING_ID = "googleAdsCrossAccountConversionTrackingId";
  @SerializedName(SERIALIZED_NAME_GOOGLE_ADS_CROSS_ACCOUNT_CONVERSION_TRACKING_ID)
  private String googleAdsCrossAccountConversionTrackingId;

  public GoogleAdsSearchads360V0ResourcesConversionTrackingSetting() {
  }

  public GoogleAdsSearchads360V0ResourcesConversionTrackingSetting(
     Boolean acceptedCustomerDataTerms, 
     String conversionTrackingId, 
     ConversionTrackingStatusEnum conversionTrackingStatus, 
     String crossAccountConversionTrackingId, 
     Boolean enhancedConversionsForLeadsEnabled, 
     String googleAdsConversionCustomer, 
     String googleAdsCrossAccountConversionTrackingId
  ) {
    this();
    this.acceptedCustomerDataTerms = acceptedCustomerDataTerms;
    this.conversionTrackingId = conversionTrackingId;
    this.conversionTrackingStatus = conversionTrackingStatus;
    this.crossAccountConversionTrackingId = crossAccountConversionTrackingId;
    this.enhancedConversionsForLeadsEnabled = enhancedConversionsForLeadsEnabled;
    this.googleAdsConversionCustomer = googleAdsConversionCustomer;
    this.googleAdsCrossAccountConversionTrackingId = googleAdsCrossAccountConversionTrackingId;
  }

  /**
   * Output only. Whether the customer has accepted customer data terms. If using cross-account conversion tracking, this value is inherited from the manager. This field is read-only. For more information, see https://support.google.com/adspolicy/answer/7475709.
   * @return acceptedCustomerDataTerms
   */
  @javax.annotation.Nullable
  public Boolean getAcceptedCustomerDataTerms() {
    return acceptedCustomerDataTerms;
  }



  /**
   * Output only. The conversion tracking id used for this account. This id doesn&#39;t indicate whether the customer uses conversion tracking (conversion_tracking_status does). This field is read-only.
   * @return conversionTrackingId
   */
  @javax.annotation.Nullable
  public String getConversionTrackingId() {
    return conversionTrackingId;
  }



  /**
   * Output only. Conversion tracking status. It indicates whether the customer is using conversion tracking, and who is the conversion tracking owner of this customer. If this customer is using cross-account conversion tracking, the value returned will differ based on the &#x60;login-customer-id&#x60; of the request.
   * @return conversionTrackingStatus
   */
  @javax.annotation.Nullable
  public ConversionTrackingStatusEnum getConversionTrackingStatus() {
    return conversionTrackingStatus;
  }



  /**
   * Output only. The conversion tracking id of the customer&#39;s manager. This is set when the customer is opted into cross-account conversion tracking, and it overrides conversion_tracking_id.
   * @return crossAccountConversionTrackingId
   */
  @javax.annotation.Nullable
  public String getCrossAccountConversionTrackingId() {
    return crossAccountConversionTrackingId;
  }



  /**
   * Output only. Whether the customer is opted-in for enhanced conversions for leads. If using cross-account conversion tracking, this value is inherited from the manager. This field is read-only.
   * @return enhancedConversionsForLeadsEnabled
   */
  @javax.annotation.Nullable
  public Boolean getEnhancedConversionsForLeadsEnabled() {
    return enhancedConversionsForLeadsEnabled;
  }



  /**
   * Output only. The resource name of the customer where conversions are created and managed. This field is read-only.
   * @return googleAdsConversionCustomer
   */
  @javax.annotation.Nullable
  public String getGoogleAdsConversionCustomer() {
    return googleAdsConversionCustomer;
  }



  /**
   * Output only. The conversion tracking id of the customer&#39;s manager. This is set when the customer is opted into conversion tracking, and it overrides conversion_tracking_id. This field can only be managed through the Google Ads UI. This field is read-only.
   * @return googleAdsCrossAccountConversionTrackingId
   */
  @javax.annotation.Nullable
  public String getGoogleAdsCrossAccountConversionTrackingId() {
    return googleAdsCrossAccountConversionTrackingId;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleAdsSearchads360V0ResourcesConversionTrackingSetting googleAdsSearchads360V0ResourcesConversionTrackingSetting = (GoogleAdsSearchads360V0ResourcesConversionTrackingSetting) o;
    return Objects.equals(this.acceptedCustomerDataTerms, googleAdsSearchads360V0ResourcesConversionTrackingSetting.acceptedCustomerDataTerms) &&
        Objects.equals(this.conversionTrackingId, googleAdsSearchads360V0ResourcesConversionTrackingSetting.conversionTrackingId) &&
        Objects.equals(this.conversionTrackingStatus, googleAdsSearchads360V0ResourcesConversionTrackingSetting.conversionTrackingStatus) &&
        Objects.equals(this.crossAccountConversionTrackingId, googleAdsSearchads360V0ResourcesConversionTrackingSetting.crossAccountConversionTrackingId) &&
        Objects.equals(this.enhancedConversionsForLeadsEnabled, googleAdsSearchads360V0ResourcesConversionTrackingSetting.enhancedConversionsForLeadsEnabled) &&
        Objects.equals(this.googleAdsConversionCustomer, googleAdsSearchads360V0ResourcesConversionTrackingSetting.googleAdsConversionCustomer) &&
        Objects.equals(this.googleAdsCrossAccountConversionTrackingId, googleAdsSearchads360V0ResourcesConversionTrackingSetting.googleAdsCrossAccountConversionTrackingId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(acceptedCustomerDataTerms, conversionTrackingId, conversionTrackingStatus, crossAccountConversionTrackingId, enhancedConversionsForLeadsEnabled, googleAdsConversionCustomer, googleAdsCrossAccountConversionTrackingId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleAdsSearchads360V0ResourcesConversionTrackingSetting {\n");
    sb.append("    acceptedCustomerDataTerms: ").append(toIndentedString(acceptedCustomerDataTerms)).append("\n");
    sb.append("    conversionTrackingId: ").append(toIndentedString(conversionTrackingId)).append("\n");
    sb.append("    conversionTrackingStatus: ").append(toIndentedString(conversionTrackingStatus)).append("\n");
    sb.append("    crossAccountConversionTrackingId: ").append(toIndentedString(crossAccountConversionTrackingId)).append("\n");
    sb.append("    enhancedConversionsForLeadsEnabled: ").append(toIndentedString(enhancedConversionsForLeadsEnabled)).append("\n");
    sb.append("    googleAdsConversionCustomer: ").append(toIndentedString(googleAdsConversionCustomer)).append("\n");
    sb.append("    googleAdsCrossAccountConversionTrackingId: ").append(toIndentedString(googleAdsCrossAccountConversionTrackingId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("acceptedCustomerDataTerms");
    openapiFields.add("conversionTrackingId");
    openapiFields.add("conversionTrackingStatus");
    openapiFields.add("crossAccountConversionTrackingId");
    openapiFields.add("enhancedConversionsForLeadsEnabled");
    openapiFields.add("googleAdsConversionCustomer");
    openapiFields.add("googleAdsCrossAccountConversionTrackingId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleAdsSearchads360V0ResourcesConversionTrackingSetting
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleAdsSearchads360V0ResourcesConversionTrackingSetting.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleAdsSearchads360V0ResourcesConversionTrackingSetting is not found in the empty JSON string", GoogleAdsSearchads360V0ResourcesConversionTrackingSetting.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleAdsSearchads360V0ResourcesConversionTrackingSetting.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleAdsSearchads360V0ResourcesConversionTrackingSetting` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("conversionTrackingId") != null && !jsonObj.get("conversionTrackingId").isJsonNull()) && !jsonObj.get("conversionTrackingId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `conversionTrackingId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("conversionTrackingId").toString()));
      }
      if ((jsonObj.get("conversionTrackingStatus") != null && !jsonObj.get("conversionTrackingStatus").isJsonNull()) && !jsonObj.get("conversionTrackingStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `conversionTrackingStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("conversionTrackingStatus").toString()));
      }
      // validate the optional field `conversionTrackingStatus`
      if (jsonObj.get("conversionTrackingStatus") != null && !jsonObj.get("conversionTrackingStatus").isJsonNull()) {
        ConversionTrackingStatusEnum.validateJsonElement(jsonObj.get("conversionTrackingStatus"));
      }
      if ((jsonObj.get("crossAccountConversionTrackingId") != null && !jsonObj.get("crossAccountConversionTrackingId").isJsonNull()) && !jsonObj.get("crossAccountConversionTrackingId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `crossAccountConversionTrackingId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("crossAccountConversionTrackingId").toString()));
      }
      if ((jsonObj.get("googleAdsConversionCustomer") != null && !jsonObj.get("googleAdsConversionCustomer").isJsonNull()) && !jsonObj.get("googleAdsConversionCustomer").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `googleAdsConversionCustomer` to be a primitive type in the JSON string but got `%s`", jsonObj.get("googleAdsConversionCustomer").toString()));
      }
      if ((jsonObj.get("googleAdsCrossAccountConversionTrackingId") != null && !jsonObj.get("googleAdsCrossAccountConversionTrackingId").isJsonNull()) && !jsonObj.get("googleAdsCrossAccountConversionTrackingId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `googleAdsCrossAccountConversionTrackingId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("googleAdsCrossAccountConversionTrackingId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleAdsSearchads360V0ResourcesConversionTrackingSetting.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleAdsSearchads360V0ResourcesConversionTrackingSetting' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleAdsSearchads360V0ResourcesConversionTrackingSetting> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleAdsSearchads360V0ResourcesConversionTrackingSetting.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleAdsSearchads360V0ResourcesConversionTrackingSetting>() {
           @Override
           public void write(JsonWriter out, GoogleAdsSearchads360V0ResourcesConversionTrackingSetting value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleAdsSearchads360V0ResourcesConversionTrackingSetting read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleAdsSearchads360V0ResourcesConversionTrackingSetting given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleAdsSearchads360V0ResourcesConversionTrackingSetting
   * @throws IOException if the JSON string is invalid with respect to GoogleAdsSearchads360V0ResourcesConversionTrackingSetting
   */
  public static GoogleAdsSearchads360V0ResourcesConversionTrackingSetting fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleAdsSearchads360V0ResourcesConversionTrackingSetting.class);
  }

  /**
   * Convert an instance of GoogleAdsSearchads360V0ResourcesConversionTrackingSetting to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

