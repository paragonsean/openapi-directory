/*
 * Search Ads 360 Reporting API
 * The Search Ads 360 API allows developers to automate downloading reports from Search Ads 360.
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleAdsSearchads360V0CommonTargetingSetting;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * An ad group.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:48:17.315010-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleAdsSearchads360V0ResourcesAdGroup {
  /**
   * The ad rotation mode of the ad group.
   */
  @JsonAdapter(AdRotationModeEnum.Adapter.class)
  public enum AdRotationModeEnum {
    UNSPECIFIED("UNSPECIFIED"),
    
    UNKNOWN("UNKNOWN"),
    
    OPTIMIZE("OPTIMIZE"),
    
    ROTATE_FOREVER("ROTATE_FOREVER");

    private String value;

    AdRotationModeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AdRotationModeEnum fromValue(String value) {
      for (AdRotationModeEnum b : AdRotationModeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<AdRotationModeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AdRotationModeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AdRotationModeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return AdRotationModeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      AdRotationModeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_AD_ROTATION_MODE = "adRotationMode";
  @SerializedName(SERIALIZED_NAME_AD_ROTATION_MODE)
  private AdRotationModeEnum adRotationMode;

  public static final String SERIALIZED_NAME_CPC_BID_MICROS = "cpcBidMicros";
  @SerializedName(SERIALIZED_NAME_CPC_BID_MICROS)
  private String cpcBidMicros;

  public static final String SERIALIZED_NAME_CREATION_TIME = "creationTime";
  @SerializedName(SERIALIZED_NAME_CREATION_TIME)
  private String creationTime;

  public static final String SERIALIZED_NAME_END_DATE = "endDate";
  @SerializedName(SERIALIZED_NAME_END_DATE)
  private String endDate;

  public static final String SERIALIZED_NAME_ENGINE_ID = "engineId";
  @SerializedName(SERIALIZED_NAME_ENGINE_ID)
  private String engineId;

  /**
   * Output only. The Engine Status for ad group.
   */
  @JsonAdapter(EngineStatusEnum.Adapter.class)
  public enum EngineStatusEnum {
    UNSPECIFIED("UNSPECIFIED"),
    
    UNKNOWN("UNKNOWN"),
    
    AD_GROUP_ELIGIBLE("AD_GROUP_ELIGIBLE"),
    
    AD_GROUP_EXPIRED("AD_GROUP_EXPIRED"),
    
    AD_GROUP_REMOVED("AD_GROUP_REMOVED"),
    
    AD_GROUP_DRAFT("AD_GROUP_DRAFT"),
    
    AD_GROUP_PAUSED("AD_GROUP_PAUSED"),
    
    AD_GROUP_SERVING("AD_GROUP_SERVING"),
    
    AD_GROUP_SUBMITTED("AD_GROUP_SUBMITTED"),
    
    CAMPAIGN_PAUSED("CAMPAIGN_PAUSED"),
    
    ACCOUNT_PAUSED("ACCOUNT_PAUSED");

    private String value;

    EngineStatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static EngineStatusEnum fromValue(String value) {
      for (EngineStatusEnum b : EngineStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<EngineStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final EngineStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public EngineStatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return EngineStatusEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      EngineStatusEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_ENGINE_STATUS = "engineStatus";
  @SerializedName(SERIALIZED_NAME_ENGINE_STATUS)
  private EngineStatusEnum engineStatus;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_LABELS = "labels";
  @SerializedName(SERIALIZED_NAME_LABELS)
  private List<String> labels = new ArrayList<>();

  public static final String SERIALIZED_NAME_LANGUAGE_CODE = "languageCode";
  @SerializedName(SERIALIZED_NAME_LANGUAGE_CODE)
  private String languageCode;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_TIME = "lastModifiedTime";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_TIME)
  private String lastModifiedTime;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_RESOURCE_NAME = "resourceName";
  @SerializedName(SERIALIZED_NAME_RESOURCE_NAME)
  private String resourceName;

  public static final String SERIALIZED_NAME_START_DATE = "startDate";
  @SerializedName(SERIALIZED_NAME_START_DATE)
  private String startDate;

  /**
   * The status of the ad group.
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    UNSPECIFIED("UNSPECIFIED"),
    
    UNKNOWN("UNKNOWN"),
    
    ENABLED("ENABLED"),
    
    PAUSED("PAUSED"),
    
    REMOVED("REMOVED");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StatusEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      StatusEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private StatusEnum status;

  public static final String SERIALIZED_NAME_TARGETING_SETTING = "targetingSetting";
  @SerializedName(SERIALIZED_NAME_TARGETING_SETTING)
  private GoogleAdsSearchads360V0CommonTargetingSetting targetingSetting;

  /**
   * Immutable. The type of the ad group.
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    UNSPECIFIED("UNSPECIFIED"),
    
    UNKNOWN("UNKNOWN"),
    
    SEARCH_STANDARD("SEARCH_STANDARD"),
    
    DISPLAY_STANDARD("DISPLAY_STANDARD"),
    
    SHOPPING_PRODUCT_ADS("SHOPPING_PRODUCT_ADS"),
    
    SHOPPING_SHOWCASE_ADS("SHOPPING_SHOWCASE_ADS"),
    
    HOTEL_ADS("HOTEL_ADS"),
    
    SHOPPING_SMART_ADS("SHOPPING_SMART_ADS"),
    
    VIDEO_BUMPER("VIDEO_BUMPER"),
    
    VIDEO_TRUE_VIEW_IN_STREAM("VIDEO_TRUE_VIEW_IN_STREAM"),
    
    VIDEO_TRUE_VIEW_IN_DISPLAY("VIDEO_TRUE_VIEW_IN_DISPLAY"),
    
    VIDEO_NON_SKIPPABLE_IN_STREAM("VIDEO_NON_SKIPPABLE_IN_STREAM"),
    
    VIDEO_OUTSTREAM("VIDEO_OUTSTREAM"),
    
    SEARCH_DYNAMIC_ADS("SEARCH_DYNAMIC_ADS"),
    
    SHOPPING_COMPARISON_LISTING_ADS("SHOPPING_COMPARISON_LISTING_ADS"),
    
    PROMOTED_HOTEL_ADS("PROMOTED_HOTEL_ADS"),
    
    VIDEO_RESPONSIVE("VIDEO_RESPONSIVE"),
    
    VIDEO_EFFICIENT_REACH("VIDEO_EFFICIENT_REACH"),
    
    SMART_CAMPAIGN_ADS("SMART_CAMPAIGN_ADS"),
    
    TRAVEL_ADS("TRAVEL_ADS");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      TypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;

  public GoogleAdsSearchads360V0ResourcesAdGroup() {
  }

  public GoogleAdsSearchads360V0ResourcesAdGroup(
     String creationTime, 
     String endDate, 
     String engineId, 
     EngineStatusEnum engineStatus, 
     String id, 
     List<String> labels, 
     String languageCode, 
     String lastModifiedTime, 
     String startDate
  ) {
    this();
    this.creationTime = creationTime;
    this.endDate = endDate;
    this.engineId = engineId;
    this.engineStatus = engineStatus;
    this.id = id;
    this.labels = labels;
    this.languageCode = languageCode;
    this.lastModifiedTime = lastModifiedTime;
    this.startDate = startDate;
  }

  public GoogleAdsSearchads360V0ResourcesAdGroup adRotationMode(AdRotationModeEnum adRotationMode) {
    this.adRotationMode = adRotationMode;
    return this;
  }

  /**
   * The ad rotation mode of the ad group.
   * @return adRotationMode
   */
  @javax.annotation.Nullable
  public AdRotationModeEnum getAdRotationMode() {
    return adRotationMode;
  }

  public void setAdRotationMode(AdRotationModeEnum adRotationMode) {
    this.adRotationMode = adRotationMode;
  }


  public GoogleAdsSearchads360V0ResourcesAdGroup cpcBidMicros(String cpcBidMicros) {
    this.cpcBidMicros = cpcBidMicros;
    return this;
  }

  /**
   * The maximum CPC (cost-per-click) bid.
   * @return cpcBidMicros
   */
  @javax.annotation.Nullable
  public String getCpcBidMicros() {
    return cpcBidMicros;
  }

  public void setCpcBidMicros(String cpcBidMicros) {
    this.cpcBidMicros = cpcBidMicros;
  }


  /**
   * Output only. The timestamp when this ad_group was created. The timestamp is in the customer&#39;s time zone and in \&quot;yyyy-MM-dd HH:mm:ss\&quot; format.
   * @return creationTime
   */
  @javax.annotation.Nullable
  public String getCreationTime() {
    return creationTime;
  }



  /**
   * Output only. Date when the ad group ends serving ads. By default, the ad group ends on the ad group&#39;s end date. If this field is set, then the ad group ends at the end of the specified date in the customer&#39;s time zone. This field is only available for Microsoft Advertising and Facebook gateway accounts. Format: YYYY-MM-DD Example: 2019-03-14
   * @return endDate
   */
  @javax.annotation.Nullable
  public String getEndDate() {
    return endDate;
  }



  /**
   * Output only. ID of the ad group in the external engine account. This field is for non-Google Ads account only, for example, Yahoo Japan, Microsoft, Baidu etc. For Google Ads entity, use \&quot;ad_group.id\&quot; instead.
   * @return engineId
   */
  @javax.annotation.Nullable
  public String getEngineId() {
    return engineId;
  }



  /**
   * Output only. The Engine Status for ad group.
   * @return engineStatus
   */
  @javax.annotation.Nullable
  public EngineStatusEnum getEngineStatus() {
    return engineStatus;
  }



  /**
   * Output only. The ID of the ad group.
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }



  /**
   * Output only. The resource names of labels attached to this ad group.
   * @return labels
   */
  @javax.annotation.Nullable
  public List<String> getLabels() {
    return labels;
  }



  /**
   * Output only. The language of the ads and keywords in an ad group. This field is only available for Microsoft Advertising accounts. More details: https://docs.microsoft.com/en-us/advertising/guides/ad-languages?view&#x3D;bingads-13#adlanguage
   * @return languageCode
   */
  @javax.annotation.Nullable
  public String getLanguageCode() {
    return languageCode;
  }



  /**
   * Output only. The datetime when this ad group was last modified. The datetime is in the customer&#39;s time zone and in \&quot;yyyy-MM-dd HH:mm:ss.ssssss\&quot; format.
   * @return lastModifiedTime
   */
  @javax.annotation.Nullable
  public String getLastModifiedTime() {
    return lastModifiedTime;
  }



  public GoogleAdsSearchads360V0ResourcesAdGroup name(String name) {
    this.name = name;
    return this;
  }

  /**
   * The name of the ad group. This field is required and should not be empty when creating new ad groups. It must contain fewer than 255 UTF-8 full-width characters. It must not contain any null (code point 0x0), NL line feed (code point 0xA) or carriage return (code point 0xD) characters.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public GoogleAdsSearchads360V0ResourcesAdGroup resourceName(String resourceName) {
    this.resourceName = resourceName;
    return this;
  }

  /**
   * Immutable. The resource name of the ad group. Ad group resource names have the form: &#x60;customers/{customer_id}/adGroups/{ad_group_id}&#x60;
   * @return resourceName
   */
  @javax.annotation.Nullable
  public String getResourceName() {
    return resourceName;
  }

  public void setResourceName(String resourceName) {
    this.resourceName = resourceName;
  }


  /**
   * Output only. Date when this ad group starts serving ads. By default, the ad group starts now or the ad group&#39;s start date, whichever is later. If this field is set, then the ad group starts at the beginning of the specified date in the customer&#39;s time zone. This field is only available for Microsoft Advertising and Facebook gateway accounts. Format: YYYY-MM-DD Example: 2019-03-14
   * @return startDate
   */
  @javax.annotation.Nullable
  public String getStartDate() {
    return startDate;
  }



  public GoogleAdsSearchads360V0ResourcesAdGroup status(StatusEnum status) {
    this.status = status;
    return this;
  }

  /**
   * The status of the ad group.
   * @return status
   */
  @javax.annotation.Nullable
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  public GoogleAdsSearchads360V0ResourcesAdGroup targetingSetting(GoogleAdsSearchads360V0CommonTargetingSetting targetingSetting) {
    this.targetingSetting = targetingSetting;
    return this;
  }

  /**
   * Get targetingSetting
   * @return targetingSetting
   */
  @javax.annotation.Nullable
  public GoogleAdsSearchads360V0CommonTargetingSetting getTargetingSetting() {
    return targetingSetting;
  }

  public void setTargetingSetting(GoogleAdsSearchads360V0CommonTargetingSetting targetingSetting) {
    this.targetingSetting = targetingSetting;
  }


  public GoogleAdsSearchads360V0ResourcesAdGroup type(TypeEnum type) {
    this.type = type;
    return this;
  }

  /**
   * Immutable. The type of the ad group.
   * @return type
   */
  @javax.annotation.Nullable
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleAdsSearchads360V0ResourcesAdGroup googleAdsSearchads360V0ResourcesAdGroup = (GoogleAdsSearchads360V0ResourcesAdGroup) o;
    return Objects.equals(this.adRotationMode, googleAdsSearchads360V0ResourcesAdGroup.adRotationMode) &&
        Objects.equals(this.cpcBidMicros, googleAdsSearchads360V0ResourcesAdGroup.cpcBidMicros) &&
        Objects.equals(this.creationTime, googleAdsSearchads360V0ResourcesAdGroup.creationTime) &&
        Objects.equals(this.endDate, googleAdsSearchads360V0ResourcesAdGroup.endDate) &&
        Objects.equals(this.engineId, googleAdsSearchads360V0ResourcesAdGroup.engineId) &&
        Objects.equals(this.engineStatus, googleAdsSearchads360V0ResourcesAdGroup.engineStatus) &&
        Objects.equals(this.id, googleAdsSearchads360V0ResourcesAdGroup.id) &&
        Objects.equals(this.labels, googleAdsSearchads360V0ResourcesAdGroup.labels) &&
        Objects.equals(this.languageCode, googleAdsSearchads360V0ResourcesAdGroup.languageCode) &&
        Objects.equals(this.lastModifiedTime, googleAdsSearchads360V0ResourcesAdGroup.lastModifiedTime) &&
        Objects.equals(this.name, googleAdsSearchads360V0ResourcesAdGroup.name) &&
        Objects.equals(this.resourceName, googleAdsSearchads360V0ResourcesAdGroup.resourceName) &&
        Objects.equals(this.startDate, googleAdsSearchads360V0ResourcesAdGroup.startDate) &&
        Objects.equals(this.status, googleAdsSearchads360V0ResourcesAdGroup.status) &&
        Objects.equals(this.targetingSetting, googleAdsSearchads360V0ResourcesAdGroup.targetingSetting) &&
        Objects.equals(this.type, googleAdsSearchads360V0ResourcesAdGroup.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(adRotationMode, cpcBidMicros, creationTime, endDate, engineId, engineStatus, id, labels, languageCode, lastModifiedTime, name, resourceName, startDate, status, targetingSetting, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleAdsSearchads360V0ResourcesAdGroup {\n");
    sb.append("    adRotationMode: ").append(toIndentedString(adRotationMode)).append("\n");
    sb.append("    cpcBidMicros: ").append(toIndentedString(cpcBidMicros)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    engineId: ").append(toIndentedString(engineId)).append("\n");
    sb.append("    engineStatus: ").append(toIndentedString(engineStatus)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    languageCode: ").append(toIndentedString(languageCode)).append("\n");
    sb.append("    lastModifiedTime: ").append(toIndentedString(lastModifiedTime)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    resourceName: ").append(toIndentedString(resourceName)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    targetingSetting: ").append(toIndentedString(targetingSetting)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("adRotationMode");
    openapiFields.add("cpcBidMicros");
    openapiFields.add("creationTime");
    openapiFields.add("endDate");
    openapiFields.add("engineId");
    openapiFields.add("engineStatus");
    openapiFields.add("id");
    openapiFields.add("labels");
    openapiFields.add("languageCode");
    openapiFields.add("lastModifiedTime");
    openapiFields.add("name");
    openapiFields.add("resourceName");
    openapiFields.add("startDate");
    openapiFields.add("status");
    openapiFields.add("targetingSetting");
    openapiFields.add("type");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleAdsSearchads360V0ResourcesAdGroup
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleAdsSearchads360V0ResourcesAdGroup.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleAdsSearchads360V0ResourcesAdGroup is not found in the empty JSON string", GoogleAdsSearchads360V0ResourcesAdGroup.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleAdsSearchads360V0ResourcesAdGroup.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleAdsSearchads360V0ResourcesAdGroup` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("adRotationMode") != null && !jsonObj.get("adRotationMode").isJsonNull()) && !jsonObj.get("adRotationMode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `adRotationMode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("adRotationMode").toString()));
      }
      // validate the optional field `adRotationMode`
      if (jsonObj.get("adRotationMode") != null && !jsonObj.get("adRotationMode").isJsonNull()) {
        AdRotationModeEnum.validateJsonElement(jsonObj.get("adRotationMode"));
      }
      if ((jsonObj.get("cpcBidMicros") != null && !jsonObj.get("cpcBidMicros").isJsonNull()) && !jsonObj.get("cpcBidMicros").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cpcBidMicros` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cpcBidMicros").toString()));
      }
      if ((jsonObj.get("creationTime") != null && !jsonObj.get("creationTime").isJsonNull()) && !jsonObj.get("creationTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `creationTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("creationTime").toString()));
      }
      if ((jsonObj.get("endDate") != null && !jsonObj.get("endDate").isJsonNull()) && !jsonObj.get("endDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `endDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("endDate").toString()));
      }
      if ((jsonObj.get("engineId") != null && !jsonObj.get("engineId").isJsonNull()) && !jsonObj.get("engineId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `engineId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("engineId").toString()));
      }
      if ((jsonObj.get("engineStatus") != null && !jsonObj.get("engineStatus").isJsonNull()) && !jsonObj.get("engineStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `engineStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("engineStatus").toString()));
      }
      // validate the optional field `engineStatus`
      if (jsonObj.get("engineStatus") != null && !jsonObj.get("engineStatus").isJsonNull()) {
        EngineStatusEnum.validateJsonElement(jsonObj.get("engineStatus"));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("labels") != null && !jsonObj.get("labels").isJsonNull() && !jsonObj.get("labels").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `labels` to be an array in the JSON string but got `%s`", jsonObj.get("labels").toString()));
      }
      if ((jsonObj.get("languageCode") != null && !jsonObj.get("languageCode").isJsonNull()) && !jsonObj.get("languageCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `languageCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("languageCode").toString()));
      }
      if ((jsonObj.get("lastModifiedTime") != null && !jsonObj.get("lastModifiedTime").isJsonNull()) && !jsonObj.get("lastModifiedTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastModifiedTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastModifiedTime").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("resourceName") != null && !jsonObj.get("resourceName").isJsonNull()) && !jsonObj.get("resourceName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `resourceName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("resourceName").toString()));
      }
      if ((jsonObj.get("startDate") != null && !jsonObj.get("startDate").isJsonNull()) && !jsonObj.get("startDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `startDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("startDate").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      // validate the optional field `status`
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) {
        StatusEnum.validateJsonElement(jsonObj.get("status"));
      }
      // validate the optional field `targetingSetting`
      if (jsonObj.get("targetingSetting") != null && !jsonObj.get("targetingSetting").isJsonNull()) {
        GoogleAdsSearchads360V0CommonTargetingSetting.validateJsonElement(jsonObj.get("targetingSetting"));
      }
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
      // validate the optional field `type`
      if (jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) {
        TypeEnum.validateJsonElement(jsonObj.get("type"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleAdsSearchads360V0ResourcesAdGroup.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleAdsSearchads360V0ResourcesAdGroup' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleAdsSearchads360V0ResourcesAdGroup> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleAdsSearchads360V0ResourcesAdGroup.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleAdsSearchads360V0ResourcesAdGroup>() {
           @Override
           public void write(JsonWriter out, GoogleAdsSearchads360V0ResourcesAdGroup value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleAdsSearchads360V0ResourcesAdGroup read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleAdsSearchads360V0ResourcesAdGroup given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleAdsSearchads360V0ResourcesAdGroup
   * @throws IOException if the JSON string is invalid with respect to GoogleAdsSearchads360V0ResourcesAdGroup
   */
  public static GoogleAdsSearchads360V0ResourcesAdGroup fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleAdsSearchads360V0ResourcesAdGroup.class);
  }

  /**
   * Convert an instance of GoogleAdsSearchads360V0ResourcesAdGroup to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

