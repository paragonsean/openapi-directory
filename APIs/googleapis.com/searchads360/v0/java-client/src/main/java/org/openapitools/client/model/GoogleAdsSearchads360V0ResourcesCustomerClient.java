/*
 * Search Ads 360 Reporting API
 * The Search Ads 360 API allows developers to automate downloading reports from Search Ads 360.
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A link between the given customer and a client customer. CustomerClients only exist for manager customers. All direct and indirect client customers are included, as well as the manager itself.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:48:17.315010-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleAdsSearchads360V0ResourcesCustomerClient {
  public static final String SERIALIZED_NAME_APPLIED_LABELS = "appliedLabels";
  @SerializedName(SERIALIZED_NAME_APPLIED_LABELS)
  private List<String> appliedLabels = new ArrayList<>();

  public static final String SERIALIZED_NAME_CLIENT_CUSTOMER = "clientCustomer";
  @SerializedName(SERIALIZED_NAME_CLIENT_CUSTOMER)
  private String clientCustomer;

  public static final String SERIALIZED_NAME_CURRENCY_CODE = "currencyCode";
  @SerializedName(SERIALIZED_NAME_CURRENCY_CODE)
  private String currencyCode;

  public static final String SERIALIZED_NAME_DESCRIPTIVE_NAME = "descriptiveName";
  @SerializedName(SERIALIZED_NAME_DESCRIPTIVE_NAME)
  private String descriptiveName;

  public static final String SERIALIZED_NAME_HIDDEN = "hidden";
  @SerializedName(SERIALIZED_NAME_HIDDEN)
  private Boolean hidden;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_LEVEL = "level";
  @SerializedName(SERIALIZED_NAME_LEVEL)
  private String level;

  public static final String SERIALIZED_NAME_MANAGER = "manager";
  @SerializedName(SERIALIZED_NAME_MANAGER)
  private Boolean manager;

  public static final String SERIALIZED_NAME_RESOURCE_NAME = "resourceName";
  @SerializedName(SERIALIZED_NAME_RESOURCE_NAME)
  private String resourceName;

  /**
   * Output only. The status of the client customer. Read only.
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    UNSPECIFIED("UNSPECIFIED"),
    
    UNKNOWN("UNKNOWN"),
    
    ENABLED("ENABLED"),
    
    CANCELED("CANCELED"),
    
    SUSPENDED("SUSPENDED"),
    
    CLOSED("CLOSED");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StatusEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      StatusEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private StatusEnum status;

  public static final String SERIALIZED_NAME_TEST_ACCOUNT = "testAccount";
  @SerializedName(SERIALIZED_NAME_TEST_ACCOUNT)
  private Boolean testAccount;

  public static final String SERIALIZED_NAME_TIME_ZONE = "timeZone";
  @SerializedName(SERIALIZED_NAME_TIME_ZONE)
  private String timeZone;

  public GoogleAdsSearchads360V0ResourcesCustomerClient() {
  }

  public GoogleAdsSearchads360V0ResourcesCustomerClient(
     List<String> appliedLabels, 
     String clientCustomer, 
     String currencyCode, 
     String descriptiveName, 
     Boolean hidden, 
     String id, 
     String level, 
     Boolean manager, 
     String resourceName, 
     StatusEnum status, 
     Boolean testAccount, 
     String timeZone
  ) {
    this();
    this.appliedLabels = appliedLabels;
    this.clientCustomer = clientCustomer;
    this.currencyCode = currencyCode;
    this.descriptiveName = descriptiveName;
    this.hidden = hidden;
    this.id = id;
    this.level = level;
    this.manager = manager;
    this.resourceName = resourceName;
    this.status = status;
    this.testAccount = testAccount;
    this.timeZone = timeZone;
  }

  /**
   * Output only. The resource names of the labels owned by the requesting customer that are applied to the client customer. Label resource names have the form: &#x60;customers/{customer_id}/labels/{label_id}&#x60;
   * @return appliedLabels
   */
  @javax.annotation.Nullable
  public List<String> getAppliedLabels() {
    return appliedLabels;
  }



  /**
   * Output only. The resource name of the client-customer which is linked to the given customer. Read only.
   * @return clientCustomer
   */
  @javax.annotation.Nullable
  public String getClientCustomer() {
    return clientCustomer;
  }



  /**
   * Output only. Currency code (for example, &#39;USD&#39;, &#39;EUR&#39;) for the client. Read only.
   * @return currencyCode
   */
  @javax.annotation.Nullable
  public String getCurrencyCode() {
    return currencyCode;
  }



  /**
   * Output only. Descriptive name for the client. Read only.
   * @return descriptiveName
   */
  @javax.annotation.Nullable
  public String getDescriptiveName() {
    return descriptiveName;
  }



  /**
   * Output only. Specifies whether this is a hidden account. Read only.
   * @return hidden
   */
  @javax.annotation.Nullable
  public Boolean getHidden() {
    return hidden;
  }



  /**
   * Output only. The ID of the client customer. Read only.
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }



  /**
   * Output only. Distance between given customer and client. For self link, the level value will be 0. Read only.
   * @return level
   */
  @javax.annotation.Nullable
  public String getLevel() {
    return level;
  }



  /**
   * Output only. Identifies if the client is a manager. Read only.
   * @return manager
   */
  @javax.annotation.Nullable
  public Boolean getManager() {
    return manager;
  }



  /**
   * Output only. The resource name of the customer client. CustomerClient resource names have the form: &#x60;customers/{customer_id}/customerClients/{client_customer_id}&#x60;
   * @return resourceName
   */
  @javax.annotation.Nullable
  public String getResourceName() {
    return resourceName;
  }



  /**
   * Output only. The status of the client customer. Read only.
   * @return status
   */
  @javax.annotation.Nullable
  public StatusEnum getStatus() {
    return status;
  }



  /**
   * Output only. Identifies if the client is a test account. Read only.
   * @return testAccount
   */
  @javax.annotation.Nullable
  public Boolean getTestAccount() {
    return testAccount;
  }



  /**
   * Output only. Common Locale Data Repository (CLDR) string representation of the time zone of the client, for example, America/Los_Angeles. Read only.
   * @return timeZone
   */
  @javax.annotation.Nullable
  public String getTimeZone() {
    return timeZone;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleAdsSearchads360V0ResourcesCustomerClient googleAdsSearchads360V0ResourcesCustomerClient = (GoogleAdsSearchads360V0ResourcesCustomerClient) o;
    return Objects.equals(this.appliedLabels, googleAdsSearchads360V0ResourcesCustomerClient.appliedLabels) &&
        Objects.equals(this.clientCustomer, googleAdsSearchads360V0ResourcesCustomerClient.clientCustomer) &&
        Objects.equals(this.currencyCode, googleAdsSearchads360V0ResourcesCustomerClient.currencyCode) &&
        Objects.equals(this.descriptiveName, googleAdsSearchads360V0ResourcesCustomerClient.descriptiveName) &&
        Objects.equals(this.hidden, googleAdsSearchads360V0ResourcesCustomerClient.hidden) &&
        Objects.equals(this.id, googleAdsSearchads360V0ResourcesCustomerClient.id) &&
        Objects.equals(this.level, googleAdsSearchads360V0ResourcesCustomerClient.level) &&
        Objects.equals(this.manager, googleAdsSearchads360V0ResourcesCustomerClient.manager) &&
        Objects.equals(this.resourceName, googleAdsSearchads360V0ResourcesCustomerClient.resourceName) &&
        Objects.equals(this.status, googleAdsSearchads360V0ResourcesCustomerClient.status) &&
        Objects.equals(this.testAccount, googleAdsSearchads360V0ResourcesCustomerClient.testAccount) &&
        Objects.equals(this.timeZone, googleAdsSearchads360V0ResourcesCustomerClient.timeZone);
  }

  @Override
  public int hashCode() {
    return Objects.hash(appliedLabels, clientCustomer, currencyCode, descriptiveName, hidden, id, level, manager, resourceName, status, testAccount, timeZone);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleAdsSearchads360V0ResourcesCustomerClient {\n");
    sb.append("    appliedLabels: ").append(toIndentedString(appliedLabels)).append("\n");
    sb.append("    clientCustomer: ").append(toIndentedString(clientCustomer)).append("\n");
    sb.append("    currencyCode: ").append(toIndentedString(currencyCode)).append("\n");
    sb.append("    descriptiveName: ").append(toIndentedString(descriptiveName)).append("\n");
    sb.append("    hidden: ").append(toIndentedString(hidden)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    level: ").append(toIndentedString(level)).append("\n");
    sb.append("    manager: ").append(toIndentedString(manager)).append("\n");
    sb.append("    resourceName: ").append(toIndentedString(resourceName)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    testAccount: ").append(toIndentedString(testAccount)).append("\n");
    sb.append("    timeZone: ").append(toIndentedString(timeZone)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("appliedLabels");
    openapiFields.add("clientCustomer");
    openapiFields.add("currencyCode");
    openapiFields.add("descriptiveName");
    openapiFields.add("hidden");
    openapiFields.add("id");
    openapiFields.add("level");
    openapiFields.add("manager");
    openapiFields.add("resourceName");
    openapiFields.add("status");
    openapiFields.add("testAccount");
    openapiFields.add("timeZone");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleAdsSearchads360V0ResourcesCustomerClient
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleAdsSearchads360V0ResourcesCustomerClient.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleAdsSearchads360V0ResourcesCustomerClient is not found in the empty JSON string", GoogleAdsSearchads360V0ResourcesCustomerClient.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleAdsSearchads360V0ResourcesCustomerClient.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleAdsSearchads360V0ResourcesCustomerClient` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("appliedLabels") != null && !jsonObj.get("appliedLabels").isJsonNull() && !jsonObj.get("appliedLabels").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `appliedLabels` to be an array in the JSON string but got `%s`", jsonObj.get("appliedLabels").toString()));
      }
      if ((jsonObj.get("clientCustomer") != null && !jsonObj.get("clientCustomer").isJsonNull()) && !jsonObj.get("clientCustomer").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `clientCustomer` to be a primitive type in the JSON string but got `%s`", jsonObj.get("clientCustomer").toString()));
      }
      if ((jsonObj.get("currencyCode") != null && !jsonObj.get("currencyCode").isJsonNull()) && !jsonObj.get("currencyCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `currencyCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("currencyCode").toString()));
      }
      if ((jsonObj.get("descriptiveName") != null && !jsonObj.get("descriptiveName").isJsonNull()) && !jsonObj.get("descriptiveName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `descriptiveName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("descriptiveName").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("level") != null && !jsonObj.get("level").isJsonNull()) && !jsonObj.get("level").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `level` to be a primitive type in the JSON string but got `%s`", jsonObj.get("level").toString()));
      }
      if ((jsonObj.get("resourceName") != null && !jsonObj.get("resourceName").isJsonNull()) && !jsonObj.get("resourceName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `resourceName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("resourceName").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      // validate the optional field `status`
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) {
        StatusEnum.validateJsonElement(jsonObj.get("status"));
      }
      if ((jsonObj.get("timeZone") != null && !jsonObj.get("timeZone").isJsonNull()) && !jsonObj.get("timeZone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `timeZone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("timeZone").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleAdsSearchads360V0ResourcesCustomerClient.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleAdsSearchads360V0ResourcesCustomerClient' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleAdsSearchads360V0ResourcesCustomerClient> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleAdsSearchads360V0ResourcesCustomerClient.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleAdsSearchads360V0ResourcesCustomerClient>() {
           @Override
           public void write(JsonWriter out, GoogleAdsSearchads360V0ResourcesCustomerClient value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleAdsSearchads360V0ResourcesCustomerClient read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleAdsSearchads360V0ResourcesCustomerClient given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleAdsSearchads360V0ResourcesCustomerClient
   * @throws IOException if the JSON string is invalid with respect to GoogleAdsSearchads360V0ResourcesCustomerClient
   */
  public static GoogleAdsSearchads360V0ResourcesCustomerClient fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleAdsSearchads360V0ResourcesCustomerClient.class);
  }

  /**
   * Convert an instance of GoogleAdsSearchads360V0ResourcesCustomerClient to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

