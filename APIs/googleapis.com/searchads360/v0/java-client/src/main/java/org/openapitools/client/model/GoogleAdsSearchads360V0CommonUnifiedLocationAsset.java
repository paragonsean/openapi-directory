/*
 * Search Ads 360 Reporting API
 * The Search Ads 360 API allows developers to automate downloading reports from Search Ads 360.
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleAdsSearchads360V0CommonBusinessProfileLocation;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A unified location asset.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:48:17.315010-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleAdsSearchads360V0CommonUnifiedLocationAsset {
  public static final String SERIALIZED_NAME_BUSINESS_PROFILE_LOCATIONS = "businessProfileLocations";
  @SerializedName(SERIALIZED_NAME_BUSINESS_PROFILE_LOCATIONS)
  private List<GoogleAdsSearchads360V0CommonBusinessProfileLocation> businessProfileLocations = new ArrayList<>();

  /**
   * The type of location ownership. If the type is BUSINESS_OWNER, it will be served as a location extension. If the type is AFFILIATE, it will be served as an affiliate location.
   */
  @JsonAdapter(LocationOwnershipTypeEnum.Adapter.class)
  public enum LocationOwnershipTypeEnum {
    UNSPECIFIED("UNSPECIFIED"),
    
    UNKNOWN("UNKNOWN"),
    
    BUSINESS_OWNER("BUSINESS_OWNER"),
    
    AFFILIATE("AFFILIATE");

    private String value;

    LocationOwnershipTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static LocationOwnershipTypeEnum fromValue(String value) {
      for (LocationOwnershipTypeEnum b : LocationOwnershipTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<LocationOwnershipTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final LocationOwnershipTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public LocationOwnershipTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return LocationOwnershipTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      LocationOwnershipTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_LOCATION_OWNERSHIP_TYPE = "locationOwnershipType";
  @SerializedName(SERIALIZED_NAME_LOCATION_OWNERSHIP_TYPE)
  private LocationOwnershipTypeEnum locationOwnershipType;

  public static final String SERIALIZED_NAME_PLACE_ID = "placeId";
  @SerializedName(SERIALIZED_NAME_PLACE_ID)
  private String placeId;

  public GoogleAdsSearchads360V0CommonUnifiedLocationAsset() {
  }

  public GoogleAdsSearchads360V0CommonUnifiedLocationAsset businessProfileLocations(List<GoogleAdsSearchads360V0CommonBusinessProfileLocation> businessProfileLocations) {
    this.businessProfileLocations = businessProfileLocations;
    return this;
  }

  public GoogleAdsSearchads360V0CommonUnifiedLocationAsset addBusinessProfileLocationsItem(GoogleAdsSearchads360V0CommonBusinessProfileLocation businessProfileLocationsItem) {
    if (this.businessProfileLocations == null) {
      this.businessProfileLocations = new ArrayList<>();
    }
    this.businessProfileLocations.add(businessProfileLocationsItem);
    return this;
  }

  /**
   * The list of business locations for the customer. This will only be returned if the Location Asset is syncing from the Business Profile account. It is possible to have multiple Business Profile listings under the same account that point to the same Place ID.
   * @return businessProfileLocations
   */
  @javax.annotation.Nullable
  public List<GoogleAdsSearchads360V0CommonBusinessProfileLocation> getBusinessProfileLocations() {
    return businessProfileLocations;
  }

  public void setBusinessProfileLocations(List<GoogleAdsSearchads360V0CommonBusinessProfileLocation> businessProfileLocations) {
    this.businessProfileLocations = businessProfileLocations;
  }


  public GoogleAdsSearchads360V0CommonUnifiedLocationAsset locationOwnershipType(LocationOwnershipTypeEnum locationOwnershipType) {
    this.locationOwnershipType = locationOwnershipType;
    return this;
  }

  /**
   * The type of location ownership. If the type is BUSINESS_OWNER, it will be served as a location extension. If the type is AFFILIATE, it will be served as an affiliate location.
   * @return locationOwnershipType
   */
  @javax.annotation.Nullable
  public LocationOwnershipTypeEnum getLocationOwnershipType() {
    return locationOwnershipType;
  }

  public void setLocationOwnershipType(LocationOwnershipTypeEnum locationOwnershipType) {
    this.locationOwnershipType = locationOwnershipType;
  }


  public GoogleAdsSearchads360V0CommonUnifiedLocationAsset placeId(String placeId) {
    this.placeId = placeId;
    return this;
  }

  /**
   * Place IDs uniquely identify a place in the Google Places database and on Google Maps. This field is unique for a given customer ID and asset type. See https://developers.google.com/places/web-service/place-id to learn more about Place ID.
   * @return placeId
   */
  @javax.annotation.Nullable
  public String getPlaceId() {
    return placeId;
  }

  public void setPlaceId(String placeId) {
    this.placeId = placeId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleAdsSearchads360V0CommonUnifiedLocationAsset googleAdsSearchads360V0CommonUnifiedLocationAsset = (GoogleAdsSearchads360V0CommonUnifiedLocationAsset) o;
    return Objects.equals(this.businessProfileLocations, googleAdsSearchads360V0CommonUnifiedLocationAsset.businessProfileLocations) &&
        Objects.equals(this.locationOwnershipType, googleAdsSearchads360V0CommonUnifiedLocationAsset.locationOwnershipType) &&
        Objects.equals(this.placeId, googleAdsSearchads360V0CommonUnifiedLocationAsset.placeId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(businessProfileLocations, locationOwnershipType, placeId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleAdsSearchads360V0CommonUnifiedLocationAsset {\n");
    sb.append("    businessProfileLocations: ").append(toIndentedString(businessProfileLocations)).append("\n");
    sb.append("    locationOwnershipType: ").append(toIndentedString(locationOwnershipType)).append("\n");
    sb.append("    placeId: ").append(toIndentedString(placeId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("businessProfileLocations");
    openapiFields.add("locationOwnershipType");
    openapiFields.add("placeId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleAdsSearchads360V0CommonUnifiedLocationAsset
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleAdsSearchads360V0CommonUnifiedLocationAsset.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleAdsSearchads360V0CommonUnifiedLocationAsset is not found in the empty JSON string", GoogleAdsSearchads360V0CommonUnifiedLocationAsset.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleAdsSearchads360V0CommonUnifiedLocationAsset.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleAdsSearchads360V0CommonUnifiedLocationAsset` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("businessProfileLocations") != null && !jsonObj.get("businessProfileLocations").isJsonNull()) {
        JsonArray jsonArraybusinessProfileLocations = jsonObj.getAsJsonArray("businessProfileLocations");
        if (jsonArraybusinessProfileLocations != null) {
          // ensure the json data is an array
          if (!jsonObj.get("businessProfileLocations").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `businessProfileLocations` to be an array in the JSON string but got `%s`", jsonObj.get("businessProfileLocations").toString()));
          }

          // validate the optional field `businessProfileLocations` (array)
          for (int i = 0; i < jsonArraybusinessProfileLocations.size(); i++) {
            GoogleAdsSearchads360V0CommonBusinessProfileLocation.validateJsonElement(jsonArraybusinessProfileLocations.get(i));
          };
        }
      }
      if ((jsonObj.get("locationOwnershipType") != null && !jsonObj.get("locationOwnershipType").isJsonNull()) && !jsonObj.get("locationOwnershipType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `locationOwnershipType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("locationOwnershipType").toString()));
      }
      // validate the optional field `locationOwnershipType`
      if (jsonObj.get("locationOwnershipType") != null && !jsonObj.get("locationOwnershipType").isJsonNull()) {
        LocationOwnershipTypeEnum.validateJsonElement(jsonObj.get("locationOwnershipType"));
      }
      if ((jsonObj.get("placeId") != null && !jsonObj.get("placeId").isJsonNull()) && !jsonObj.get("placeId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `placeId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("placeId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleAdsSearchads360V0CommonUnifiedLocationAsset.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleAdsSearchads360V0CommonUnifiedLocationAsset' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleAdsSearchads360V0CommonUnifiedLocationAsset> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleAdsSearchads360V0CommonUnifiedLocationAsset.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleAdsSearchads360V0CommonUnifiedLocationAsset>() {
           @Override
           public void write(JsonWriter out, GoogleAdsSearchads360V0CommonUnifiedLocationAsset value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleAdsSearchads360V0CommonUnifiedLocationAsset read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleAdsSearchads360V0CommonUnifiedLocationAsset given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleAdsSearchads360V0CommonUnifiedLocationAsset
   * @throws IOException if the JSON string is invalid with respect to GoogleAdsSearchads360V0CommonUnifiedLocationAsset
   */
  public static GoogleAdsSearchads360V0CommonUnifiedLocationAsset fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleAdsSearchads360V0CommonUnifiedLocationAsset.class);
  }

  /**
   * Convert an instance of GoogleAdsSearchads360V0CommonUnifiedLocationAsset to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

