/*
 * Search Ads 360 Reporting API
 * The Search Ads 360 API allows developers to automate downloading reports from Search Ads 360.
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * An asset group. AssetGroupAsset is used to link an asset to the asset group. AssetGroupSignal is used to associate a signal to an asset group.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:48:17.315010-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleAdsSearchads360V0ResourcesAssetGroup {
  /**
   * Output only. Overall ad strength of this asset group.
   */
  @JsonAdapter(AdStrengthEnum.Adapter.class)
  public enum AdStrengthEnum {
    UNSPECIFIED("UNSPECIFIED"),
    
    UNKNOWN("UNKNOWN"),
    
    PENDING("PENDING"),
    
    NO_ADS("NO_ADS"),
    
    POOR("POOR"),
    
    AVERAGE("AVERAGE"),
    
    GOOD("GOOD"),
    
    EXCELLENT("EXCELLENT");

    private String value;

    AdStrengthEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AdStrengthEnum fromValue(String value) {
      for (AdStrengthEnum b : AdStrengthEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<AdStrengthEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AdStrengthEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AdStrengthEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return AdStrengthEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      AdStrengthEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_AD_STRENGTH = "adStrength";
  @SerializedName(SERIALIZED_NAME_AD_STRENGTH)
  private AdStrengthEnum adStrength;

  public static final String SERIALIZED_NAME_CAMPAIGN = "campaign";
  @SerializedName(SERIALIZED_NAME_CAMPAIGN)
  private String campaign;

  public static final String SERIALIZED_NAME_FINAL_MOBILE_URLS = "finalMobileUrls";
  @SerializedName(SERIALIZED_NAME_FINAL_MOBILE_URLS)
  private List<String> finalMobileUrls = new ArrayList<>();

  public static final String SERIALIZED_NAME_FINAL_URLS = "finalUrls";
  @SerializedName(SERIALIZED_NAME_FINAL_URLS)
  private List<String> finalUrls = new ArrayList<>();

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PATH1 = "path1";
  @SerializedName(SERIALIZED_NAME_PATH1)
  private String path1;

  public static final String SERIALIZED_NAME_PATH2 = "path2";
  @SerializedName(SERIALIZED_NAME_PATH2)
  private String path2;

  public static final String SERIALIZED_NAME_RESOURCE_NAME = "resourceName";
  @SerializedName(SERIALIZED_NAME_RESOURCE_NAME)
  private String resourceName;

  /**
   * The status of the asset group.
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    UNSPECIFIED("UNSPECIFIED"),
    
    UNKNOWN("UNKNOWN"),
    
    ENABLED("ENABLED"),
    
    PAUSED("PAUSED"),
    
    REMOVED("REMOVED");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StatusEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      StatusEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private StatusEnum status;

  public GoogleAdsSearchads360V0ResourcesAssetGroup() {
  }

  public GoogleAdsSearchads360V0ResourcesAssetGroup(
     AdStrengthEnum adStrength, 
     String id
  ) {
    this();
    this.adStrength = adStrength;
    this.id = id;
  }

  /**
   * Output only. Overall ad strength of this asset group.
   * @return adStrength
   */
  @javax.annotation.Nullable
  public AdStrengthEnum getAdStrength() {
    return adStrength;
  }



  public GoogleAdsSearchads360V0ResourcesAssetGroup campaign(String campaign) {
    this.campaign = campaign;
    return this;
  }

  /**
   * Immutable. The campaign with which this asset group is associated. The asset which is linked to the asset group.
   * @return campaign
   */
  @javax.annotation.Nullable
  public String getCampaign() {
    return campaign;
  }

  public void setCampaign(String campaign) {
    this.campaign = campaign;
  }


  public GoogleAdsSearchads360V0ResourcesAssetGroup finalMobileUrls(List<String> finalMobileUrls) {
    this.finalMobileUrls = finalMobileUrls;
    return this;
  }

  public GoogleAdsSearchads360V0ResourcesAssetGroup addFinalMobileUrlsItem(String finalMobileUrlsItem) {
    if (this.finalMobileUrls == null) {
      this.finalMobileUrls = new ArrayList<>();
    }
    this.finalMobileUrls.add(finalMobileUrlsItem);
    return this;
  }

  /**
   * A list of final mobile URLs after all cross domain redirects. In performance max, by default, the urls are eligible for expansion unless opted out.
   * @return finalMobileUrls
   */
  @javax.annotation.Nullable
  public List<String> getFinalMobileUrls() {
    return finalMobileUrls;
  }

  public void setFinalMobileUrls(List<String> finalMobileUrls) {
    this.finalMobileUrls = finalMobileUrls;
  }


  public GoogleAdsSearchads360V0ResourcesAssetGroup finalUrls(List<String> finalUrls) {
    this.finalUrls = finalUrls;
    return this;
  }

  public GoogleAdsSearchads360V0ResourcesAssetGroup addFinalUrlsItem(String finalUrlsItem) {
    if (this.finalUrls == null) {
      this.finalUrls = new ArrayList<>();
    }
    this.finalUrls.add(finalUrlsItem);
    return this;
  }

  /**
   * A list of final URLs after all cross domain redirects. In performance max, by default, the urls are eligible for expansion unless opted out.
   * @return finalUrls
   */
  @javax.annotation.Nullable
  public List<String> getFinalUrls() {
    return finalUrls;
  }

  public void setFinalUrls(List<String> finalUrls) {
    this.finalUrls = finalUrls;
  }


  /**
   * Output only. The ID of the asset group.
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }



  public GoogleAdsSearchads360V0ResourcesAssetGroup name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Required. Name of the asset group. Required. It must have a minimum length of 1 and maximum length of 128. It must be unique under a campaign.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public GoogleAdsSearchads360V0ResourcesAssetGroup path1(String path1) {
    this.path1 = path1;
    return this;
  }

  /**
   * First part of text that may appear appended to the url displayed in the ad.
   * @return path1
   */
  @javax.annotation.Nullable
  public String getPath1() {
    return path1;
  }

  public void setPath1(String path1) {
    this.path1 = path1;
  }


  public GoogleAdsSearchads360V0ResourcesAssetGroup path2(String path2) {
    this.path2 = path2;
    return this;
  }

  /**
   * Second part of text that may appear appended to the url displayed in the ad. This field can only be set when path1 is set.
   * @return path2
   */
  @javax.annotation.Nullable
  public String getPath2() {
    return path2;
  }

  public void setPath2(String path2) {
    this.path2 = path2;
  }


  public GoogleAdsSearchads360V0ResourcesAssetGroup resourceName(String resourceName) {
    this.resourceName = resourceName;
    return this;
  }

  /**
   * Immutable. The resource name of the asset group. Asset group resource names have the form: &#x60;customers/{customer_id}/assetGroups/{asset_group_id}&#x60;
   * @return resourceName
   */
  @javax.annotation.Nullable
  public String getResourceName() {
    return resourceName;
  }

  public void setResourceName(String resourceName) {
    this.resourceName = resourceName;
  }


  public GoogleAdsSearchads360V0ResourcesAssetGroup status(StatusEnum status) {
    this.status = status;
    return this;
  }

  /**
   * The status of the asset group.
   * @return status
   */
  @javax.annotation.Nullable
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleAdsSearchads360V0ResourcesAssetGroup googleAdsSearchads360V0ResourcesAssetGroup = (GoogleAdsSearchads360V0ResourcesAssetGroup) o;
    return Objects.equals(this.adStrength, googleAdsSearchads360V0ResourcesAssetGroup.adStrength) &&
        Objects.equals(this.campaign, googleAdsSearchads360V0ResourcesAssetGroup.campaign) &&
        Objects.equals(this.finalMobileUrls, googleAdsSearchads360V0ResourcesAssetGroup.finalMobileUrls) &&
        Objects.equals(this.finalUrls, googleAdsSearchads360V0ResourcesAssetGroup.finalUrls) &&
        Objects.equals(this.id, googleAdsSearchads360V0ResourcesAssetGroup.id) &&
        Objects.equals(this.name, googleAdsSearchads360V0ResourcesAssetGroup.name) &&
        Objects.equals(this.path1, googleAdsSearchads360V0ResourcesAssetGroup.path1) &&
        Objects.equals(this.path2, googleAdsSearchads360V0ResourcesAssetGroup.path2) &&
        Objects.equals(this.resourceName, googleAdsSearchads360V0ResourcesAssetGroup.resourceName) &&
        Objects.equals(this.status, googleAdsSearchads360V0ResourcesAssetGroup.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(adStrength, campaign, finalMobileUrls, finalUrls, id, name, path1, path2, resourceName, status);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleAdsSearchads360V0ResourcesAssetGroup {\n");
    sb.append("    adStrength: ").append(toIndentedString(adStrength)).append("\n");
    sb.append("    campaign: ").append(toIndentedString(campaign)).append("\n");
    sb.append("    finalMobileUrls: ").append(toIndentedString(finalMobileUrls)).append("\n");
    sb.append("    finalUrls: ").append(toIndentedString(finalUrls)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    path1: ").append(toIndentedString(path1)).append("\n");
    sb.append("    path2: ").append(toIndentedString(path2)).append("\n");
    sb.append("    resourceName: ").append(toIndentedString(resourceName)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("adStrength");
    openapiFields.add("campaign");
    openapiFields.add("finalMobileUrls");
    openapiFields.add("finalUrls");
    openapiFields.add("id");
    openapiFields.add("name");
    openapiFields.add("path1");
    openapiFields.add("path2");
    openapiFields.add("resourceName");
    openapiFields.add("status");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleAdsSearchads360V0ResourcesAssetGroup
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleAdsSearchads360V0ResourcesAssetGroup.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleAdsSearchads360V0ResourcesAssetGroup is not found in the empty JSON string", GoogleAdsSearchads360V0ResourcesAssetGroup.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleAdsSearchads360V0ResourcesAssetGroup.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleAdsSearchads360V0ResourcesAssetGroup` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("adStrength") != null && !jsonObj.get("adStrength").isJsonNull()) && !jsonObj.get("adStrength").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `adStrength` to be a primitive type in the JSON string but got `%s`", jsonObj.get("adStrength").toString()));
      }
      // validate the optional field `adStrength`
      if (jsonObj.get("adStrength") != null && !jsonObj.get("adStrength").isJsonNull()) {
        AdStrengthEnum.validateJsonElement(jsonObj.get("adStrength"));
      }
      if ((jsonObj.get("campaign") != null && !jsonObj.get("campaign").isJsonNull()) && !jsonObj.get("campaign").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `campaign` to be a primitive type in the JSON string but got `%s`", jsonObj.get("campaign").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("finalMobileUrls") != null && !jsonObj.get("finalMobileUrls").isJsonNull() && !jsonObj.get("finalMobileUrls").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `finalMobileUrls` to be an array in the JSON string but got `%s`", jsonObj.get("finalMobileUrls").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("finalUrls") != null && !jsonObj.get("finalUrls").isJsonNull() && !jsonObj.get("finalUrls").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `finalUrls` to be an array in the JSON string but got `%s`", jsonObj.get("finalUrls").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("path1") != null && !jsonObj.get("path1").isJsonNull()) && !jsonObj.get("path1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `path1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("path1").toString()));
      }
      if ((jsonObj.get("path2") != null && !jsonObj.get("path2").isJsonNull()) && !jsonObj.get("path2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `path2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("path2").toString()));
      }
      if ((jsonObj.get("resourceName") != null && !jsonObj.get("resourceName").isJsonNull()) && !jsonObj.get("resourceName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `resourceName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("resourceName").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      // validate the optional field `status`
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) {
        StatusEnum.validateJsonElement(jsonObj.get("status"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleAdsSearchads360V0ResourcesAssetGroup.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleAdsSearchads360V0ResourcesAssetGroup' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleAdsSearchads360V0ResourcesAssetGroup> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleAdsSearchads360V0ResourcesAssetGroup.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleAdsSearchads360V0ResourcesAssetGroup>() {
           @Override
           public void write(JsonWriter out, GoogleAdsSearchads360V0ResourcesAssetGroup value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleAdsSearchads360V0ResourcesAssetGroup read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleAdsSearchads360V0ResourcesAssetGroup given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleAdsSearchads360V0ResourcesAssetGroup
   * @throws IOException if the JSON string is invalid with respect to GoogleAdsSearchads360V0ResourcesAssetGroup
   */
  public static GoogleAdsSearchads360V0ResourcesAssetGroup fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleAdsSearchads360V0ResourcesAssetGroup.class);
  }

  /**
   * Convert an instance of GoogleAdsSearchads360V0ResourcesAssetGroup to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

