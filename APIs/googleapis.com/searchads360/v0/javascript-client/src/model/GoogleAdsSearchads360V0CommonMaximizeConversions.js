/**
 * Search Ads 360 Reporting API
 * The Search Ads 360 API allows developers to automate downloading reports from Search Ads 360.
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleAdsSearchads360V0CommonMaximizeConversions model module.
 * @module model/GoogleAdsSearchads360V0CommonMaximizeConversions
 * @version v0
 */
class GoogleAdsSearchads360V0CommonMaximizeConversions {
    /**
     * Constructs a new <code>GoogleAdsSearchads360V0CommonMaximizeConversions</code>.
     * An automated bidding strategy to help get the most conversions for your campaigns while spending your budget.
     * @alias module:model/GoogleAdsSearchads360V0CommonMaximizeConversions
     */
    constructor() { 
        
        GoogleAdsSearchads360V0CommonMaximizeConversions.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleAdsSearchads360V0CommonMaximizeConversions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleAdsSearchads360V0CommonMaximizeConversions} obj Optional instance to populate.
     * @return {module:model/GoogleAdsSearchads360V0CommonMaximizeConversions} The populated <code>GoogleAdsSearchads360V0CommonMaximizeConversions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleAdsSearchads360V0CommonMaximizeConversions();

            if (data.hasOwnProperty('cpcBidCeilingMicros')) {
                obj['cpcBidCeilingMicros'] = ApiClient.convertToType(data['cpcBidCeilingMicros'], 'String');
            }
            if (data.hasOwnProperty('cpcBidFloorMicros')) {
                obj['cpcBidFloorMicros'] = ApiClient.convertToType(data['cpcBidFloorMicros'], 'String');
            }
            if (data.hasOwnProperty('targetCpaMicros')) {
                obj['targetCpaMicros'] = ApiClient.convertToType(data['targetCpaMicros'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleAdsSearchads360V0CommonMaximizeConversions</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleAdsSearchads360V0CommonMaximizeConversions</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['cpcBidCeilingMicros'] && !(typeof data['cpcBidCeilingMicros'] === 'string' || data['cpcBidCeilingMicros'] instanceof String)) {
            throw new Error("Expected the field `cpcBidCeilingMicros` to be a primitive type in the JSON string but got " + data['cpcBidCeilingMicros']);
        }
        // ensure the json data is a string
        if (data['cpcBidFloorMicros'] && !(typeof data['cpcBidFloorMicros'] === 'string' || data['cpcBidFloorMicros'] instanceof String)) {
            throw new Error("Expected the field `cpcBidFloorMicros` to be a primitive type in the JSON string but got " + data['cpcBidFloorMicros']);
        }
        // ensure the json data is a string
        if (data['targetCpaMicros'] && !(typeof data['targetCpaMicros'] === 'string' || data['targetCpaMicros'] instanceof String)) {
            throw new Error("Expected the field `targetCpaMicros` to be a primitive type in the JSON string but got " + data['targetCpaMicros']);
        }

        return true;
    }


}



/**
 * Maximum bid limit that can be set by the bid strategy. The limit applies to all keywords managed by the strategy. Mutable for portfolio bidding strategies only.
 * @member {String} cpcBidCeilingMicros
 */
GoogleAdsSearchads360V0CommonMaximizeConversions.prototype['cpcBidCeilingMicros'] = undefined;

/**
 * Minimum bid limit that can be set by the bid strategy. The limit applies to all keywords managed by the strategy. Mutable for portfolio bidding strategies only.
 * @member {String} cpcBidFloorMicros
 */
GoogleAdsSearchads360V0CommonMaximizeConversions.prototype['cpcBidFloorMicros'] = undefined;

/**
 * The target cost-per-action (CPA) option. This is the average amount that you would like to spend per conversion action specified in micro units of the bidding strategy's currency. If set, the bid strategy will get as many conversions as possible at or below the target cost-per-action. If the target CPA is not set, the bid strategy will aim to achieve the lowest possible CPA given the budget.
 * @member {String} targetCpaMicros
 */
GoogleAdsSearchads360V0CommonMaximizeConversions.prototype['targetCpaMicros'] = undefined;






export default GoogleAdsSearchads360V0CommonMaximizeConversions;

