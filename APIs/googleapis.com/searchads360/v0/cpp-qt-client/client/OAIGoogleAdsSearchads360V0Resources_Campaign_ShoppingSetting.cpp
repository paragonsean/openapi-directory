/**
 * Search Ads 360 Reporting API
 * The Search Ads 360 API allows developers to automate downloading reports from Search Ads 360.
 *
 * The version of the OpenAPI document: v0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleAdsSearchads360V0Resources_Campaign_ShoppingSetting.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleAdsSearchads360V0Resources_Campaign_ShoppingSetting::OAIGoogleAdsSearchads360V0Resources_Campaign_ShoppingSetting(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleAdsSearchads360V0Resources_Campaign_ShoppingSetting::OAIGoogleAdsSearchads360V0Resources_Campaign_ShoppingSetting() {
    this->initializeModel();
}

OAIGoogleAdsSearchads360V0Resources_Campaign_ShoppingSetting::~OAIGoogleAdsSearchads360V0Resources_Campaign_ShoppingSetting() {}

void OAIGoogleAdsSearchads360V0Resources_Campaign_ShoppingSetting::initializeModel() {

    m_campaign_priority_isSet = false;
    m_campaign_priority_isValid = false;

    m_enable_local_isSet = false;
    m_enable_local_isValid = false;

    m_feed_label_isSet = false;
    m_feed_label_isValid = false;

    m_merchant_id_isSet = false;
    m_merchant_id_isValid = false;

    m_sales_country_isSet = false;
    m_sales_country_isValid = false;

    m_use_vehicle_inventory_isSet = false;
    m_use_vehicle_inventory_isValid = false;
}

void OAIGoogleAdsSearchads360V0Resources_Campaign_ShoppingSetting::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleAdsSearchads360V0Resources_Campaign_ShoppingSetting::fromJsonObject(QJsonObject json) {

    m_campaign_priority_isValid = ::OpenAPI::fromJsonValue(m_campaign_priority, json[QString("campaignPriority")]);
    m_campaign_priority_isSet = !json[QString("campaignPriority")].isNull() && m_campaign_priority_isValid;

    m_enable_local_isValid = ::OpenAPI::fromJsonValue(m_enable_local, json[QString("enableLocal")]);
    m_enable_local_isSet = !json[QString("enableLocal")].isNull() && m_enable_local_isValid;

    m_feed_label_isValid = ::OpenAPI::fromJsonValue(m_feed_label, json[QString("feedLabel")]);
    m_feed_label_isSet = !json[QString("feedLabel")].isNull() && m_feed_label_isValid;

    m_merchant_id_isValid = ::OpenAPI::fromJsonValue(m_merchant_id, json[QString("merchantId")]);
    m_merchant_id_isSet = !json[QString("merchantId")].isNull() && m_merchant_id_isValid;

    m_sales_country_isValid = ::OpenAPI::fromJsonValue(m_sales_country, json[QString("salesCountry")]);
    m_sales_country_isSet = !json[QString("salesCountry")].isNull() && m_sales_country_isValid;

    m_use_vehicle_inventory_isValid = ::OpenAPI::fromJsonValue(m_use_vehicle_inventory, json[QString("useVehicleInventory")]);
    m_use_vehicle_inventory_isSet = !json[QString("useVehicleInventory")].isNull() && m_use_vehicle_inventory_isValid;
}

QString OAIGoogleAdsSearchads360V0Resources_Campaign_ShoppingSetting::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleAdsSearchads360V0Resources_Campaign_ShoppingSetting::asJsonObject() const {
    QJsonObject obj;
    if (m_campaign_priority_isSet) {
        obj.insert(QString("campaignPriority"), ::OpenAPI::toJsonValue(m_campaign_priority));
    }
    if (m_enable_local_isSet) {
        obj.insert(QString("enableLocal"), ::OpenAPI::toJsonValue(m_enable_local));
    }
    if (m_feed_label_isSet) {
        obj.insert(QString("feedLabel"), ::OpenAPI::toJsonValue(m_feed_label));
    }
    if (m_merchant_id_isSet) {
        obj.insert(QString("merchantId"), ::OpenAPI::toJsonValue(m_merchant_id));
    }
    if (m_sales_country_isSet) {
        obj.insert(QString("salesCountry"), ::OpenAPI::toJsonValue(m_sales_country));
    }
    if (m_use_vehicle_inventory_isSet) {
        obj.insert(QString("useVehicleInventory"), ::OpenAPI::toJsonValue(m_use_vehicle_inventory));
    }
    return obj;
}

qint32 OAIGoogleAdsSearchads360V0Resources_Campaign_ShoppingSetting::getCampaignPriority() const {
    return m_campaign_priority;
}
void OAIGoogleAdsSearchads360V0Resources_Campaign_ShoppingSetting::setCampaignPriority(const qint32 &campaign_priority) {
    m_campaign_priority = campaign_priority;
    m_campaign_priority_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Resources_Campaign_ShoppingSetting::is_campaign_priority_Set() const{
    return m_campaign_priority_isSet;
}

bool OAIGoogleAdsSearchads360V0Resources_Campaign_ShoppingSetting::is_campaign_priority_Valid() const{
    return m_campaign_priority_isValid;
}

bool OAIGoogleAdsSearchads360V0Resources_Campaign_ShoppingSetting::isEnableLocal() const {
    return m_enable_local;
}
void OAIGoogleAdsSearchads360V0Resources_Campaign_ShoppingSetting::setEnableLocal(const bool &enable_local) {
    m_enable_local = enable_local;
    m_enable_local_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Resources_Campaign_ShoppingSetting::is_enable_local_Set() const{
    return m_enable_local_isSet;
}

bool OAIGoogleAdsSearchads360V0Resources_Campaign_ShoppingSetting::is_enable_local_Valid() const{
    return m_enable_local_isValid;
}

QString OAIGoogleAdsSearchads360V0Resources_Campaign_ShoppingSetting::getFeedLabel() const {
    return m_feed_label;
}
void OAIGoogleAdsSearchads360V0Resources_Campaign_ShoppingSetting::setFeedLabel(const QString &feed_label) {
    m_feed_label = feed_label;
    m_feed_label_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Resources_Campaign_ShoppingSetting::is_feed_label_Set() const{
    return m_feed_label_isSet;
}

bool OAIGoogleAdsSearchads360V0Resources_Campaign_ShoppingSetting::is_feed_label_Valid() const{
    return m_feed_label_isValid;
}

QString OAIGoogleAdsSearchads360V0Resources_Campaign_ShoppingSetting::getMerchantId() const {
    return m_merchant_id;
}
void OAIGoogleAdsSearchads360V0Resources_Campaign_ShoppingSetting::setMerchantId(const QString &merchant_id) {
    m_merchant_id = merchant_id;
    m_merchant_id_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Resources_Campaign_ShoppingSetting::is_merchant_id_Set() const{
    return m_merchant_id_isSet;
}

bool OAIGoogleAdsSearchads360V0Resources_Campaign_ShoppingSetting::is_merchant_id_Valid() const{
    return m_merchant_id_isValid;
}

QString OAIGoogleAdsSearchads360V0Resources_Campaign_ShoppingSetting::getSalesCountry() const {
    return m_sales_country;
}
void OAIGoogleAdsSearchads360V0Resources_Campaign_ShoppingSetting::setSalesCountry(const QString &sales_country) {
    m_sales_country = sales_country;
    m_sales_country_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Resources_Campaign_ShoppingSetting::is_sales_country_Set() const{
    return m_sales_country_isSet;
}

bool OAIGoogleAdsSearchads360V0Resources_Campaign_ShoppingSetting::is_sales_country_Valid() const{
    return m_sales_country_isValid;
}

bool OAIGoogleAdsSearchads360V0Resources_Campaign_ShoppingSetting::isUseVehicleInventory() const {
    return m_use_vehicle_inventory;
}
void OAIGoogleAdsSearchads360V0Resources_Campaign_ShoppingSetting::setUseVehicleInventory(const bool &use_vehicle_inventory) {
    m_use_vehicle_inventory = use_vehicle_inventory;
    m_use_vehicle_inventory_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Resources_Campaign_ShoppingSetting::is_use_vehicle_inventory_Set() const{
    return m_use_vehicle_inventory_isSet;
}

bool OAIGoogleAdsSearchads360V0Resources_Campaign_ShoppingSetting::is_use_vehicle_inventory_Valid() const{
    return m_use_vehicle_inventory_isValid;
}

bool OAIGoogleAdsSearchads360V0Resources_Campaign_ShoppingSetting::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_campaign_priority_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enable_local_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_feed_label_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_merchant_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sales_country_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_use_vehicle_inventory_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleAdsSearchads360V0Resources_Campaign_ShoppingSetting::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
