/**
 * Search Ads 360 Reporting API
 * The Search Ads 360 API allows developers to automate downloading reports from Search Ads 360.
 *
 * The version of the OpenAPI document: v0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleAdsSearchads360V0Common__ImageAsset.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleAdsSearchads360V0Common__ImageAsset::OAIGoogleAdsSearchads360V0Common__ImageAsset(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleAdsSearchads360V0Common__ImageAsset::OAIGoogleAdsSearchads360V0Common__ImageAsset() {
    this->initializeModel();
}

OAIGoogleAdsSearchads360V0Common__ImageAsset::~OAIGoogleAdsSearchads360V0Common__ImageAsset() {}

void OAIGoogleAdsSearchads360V0Common__ImageAsset::initializeModel() {

    m_file_size_isSet = false;
    m_file_size_isValid = false;

    m_full_size_isSet = false;
    m_full_size_isValid = false;

    m_mime_type_isSet = false;
    m_mime_type_isValid = false;
}

void OAIGoogleAdsSearchads360V0Common__ImageAsset::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleAdsSearchads360V0Common__ImageAsset::fromJsonObject(QJsonObject json) {

    m_file_size_isValid = ::OpenAPI::fromJsonValue(m_file_size, json[QString("fileSize")]);
    m_file_size_isSet = !json[QString("fileSize")].isNull() && m_file_size_isValid;

    m_full_size_isValid = ::OpenAPI::fromJsonValue(m_full_size, json[QString("fullSize")]);
    m_full_size_isSet = !json[QString("fullSize")].isNull() && m_full_size_isValid;

    m_mime_type_isValid = ::OpenAPI::fromJsonValue(m_mime_type, json[QString("mimeType")]);
    m_mime_type_isSet = !json[QString("mimeType")].isNull() && m_mime_type_isValid;
}

QString OAIGoogleAdsSearchads360V0Common__ImageAsset::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleAdsSearchads360V0Common__ImageAsset::asJsonObject() const {
    QJsonObject obj;
    if (m_file_size_isSet) {
        obj.insert(QString("fileSize"), ::OpenAPI::toJsonValue(m_file_size));
    }
    if (m_full_size.isSet()) {
        obj.insert(QString("fullSize"), ::OpenAPI::toJsonValue(m_full_size));
    }
    if (m_mime_type_isSet) {
        obj.insert(QString("mimeType"), ::OpenAPI::toJsonValue(m_mime_type));
    }
    return obj;
}

QString OAIGoogleAdsSearchads360V0Common__ImageAsset::getFileSize() const {
    return m_file_size;
}
void OAIGoogleAdsSearchads360V0Common__ImageAsset::setFileSize(const QString &file_size) {
    m_file_size = file_size;
    m_file_size_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__ImageAsset::is_file_size_Set() const{
    return m_file_size_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__ImageAsset::is_file_size_Valid() const{
    return m_file_size_isValid;
}

OAIGoogleAdsSearchads360V0Common__ImageDimension OAIGoogleAdsSearchads360V0Common__ImageAsset::getFullSize() const {
    return m_full_size;
}
void OAIGoogleAdsSearchads360V0Common__ImageAsset::setFullSize(const OAIGoogleAdsSearchads360V0Common__ImageDimension &full_size) {
    m_full_size = full_size;
    m_full_size_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__ImageAsset::is_full_size_Set() const{
    return m_full_size_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__ImageAsset::is_full_size_Valid() const{
    return m_full_size_isValid;
}

QString OAIGoogleAdsSearchads360V0Common__ImageAsset::getMimeType() const {
    return m_mime_type;
}
void OAIGoogleAdsSearchads360V0Common__ImageAsset::setMimeType(const QString &mime_type) {
    m_mime_type = mime_type;
    m_mime_type_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__ImageAsset::is_mime_type_Set() const{
    return m_mime_type_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__ImageAsset::is_mime_type_Valid() const{
    return m_mime_type_isValid;
}

bool OAIGoogleAdsSearchads360V0Common__ImageAsset::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_file_size_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_full_size.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_mime_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleAdsSearchads360V0Common__ImageAsset::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
