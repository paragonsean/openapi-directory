/**
 * Search Ads 360 Reporting API
 * The Search Ads 360 API allows developers to automate downloading reports from Search Ads 360.
 *
 * The version of the OpenAPI document: v0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleAdsSearchads360V0Common__Keyword.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleAdsSearchads360V0Common__Keyword::OAIGoogleAdsSearchads360V0Common__Keyword(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleAdsSearchads360V0Common__Keyword::OAIGoogleAdsSearchads360V0Common__Keyword() {
    this->initializeModel();
}

OAIGoogleAdsSearchads360V0Common__Keyword::~OAIGoogleAdsSearchads360V0Common__Keyword() {}

void OAIGoogleAdsSearchads360V0Common__Keyword::initializeModel() {

    m_ad_group_criterion_isSet = false;
    m_ad_group_criterion_isValid = false;

    m_info_isSet = false;
    m_info_isValid = false;
}

void OAIGoogleAdsSearchads360V0Common__Keyword::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleAdsSearchads360V0Common__Keyword::fromJsonObject(QJsonObject json) {

    m_ad_group_criterion_isValid = ::OpenAPI::fromJsonValue(m_ad_group_criterion, json[QString("adGroupCriterion")]);
    m_ad_group_criterion_isSet = !json[QString("adGroupCriterion")].isNull() && m_ad_group_criterion_isValid;

    m_info_isValid = ::OpenAPI::fromJsonValue(m_info, json[QString("info")]);
    m_info_isSet = !json[QString("info")].isNull() && m_info_isValid;
}

QString OAIGoogleAdsSearchads360V0Common__Keyword::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleAdsSearchads360V0Common__Keyword::asJsonObject() const {
    QJsonObject obj;
    if (m_ad_group_criterion_isSet) {
        obj.insert(QString("adGroupCriterion"), ::OpenAPI::toJsonValue(m_ad_group_criterion));
    }
    if (m_info.isSet()) {
        obj.insert(QString("info"), ::OpenAPI::toJsonValue(m_info));
    }
    return obj;
}

QString OAIGoogleAdsSearchads360V0Common__Keyword::getAdGroupCriterion() const {
    return m_ad_group_criterion;
}
void OAIGoogleAdsSearchads360V0Common__Keyword::setAdGroupCriterion(const QString &ad_group_criterion) {
    m_ad_group_criterion = ad_group_criterion;
    m_ad_group_criterion_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Keyword::is_ad_group_criterion_Set() const{
    return m_ad_group_criterion_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Keyword::is_ad_group_criterion_Valid() const{
    return m_ad_group_criterion_isValid;
}

OAIGoogleAdsSearchads360V0Common__KeywordInfo OAIGoogleAdsSearchads360V0Common__Keyword::getInfo() const {
    return m_info;
}
void OAIGoogleAdsSearchads360V0Common__Keyword::setInfo(const OAIGoogleAdsSearchads360V0Common__KeywordInfo &info) {
    m_info = info;
    m_info_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Keyword::is_info_Set() const{
    return m_info_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Keyword::is_info_Valid() const{
    return m_info_isValid;
}

bool OAIGoogleAdsSearchads360V0Common__Keyword::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_ad_group_criterion_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_info.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleAdsSearchads360V0Common__Keyword::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
