/**
 * Search Ads 360 Reporting API
 * The Search Ads 360 API allows developers to automate downloading reports from Search Ads 360.
 *
 * The version of the OpenAPI document: v0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleAdsSearchads360V0Resources_Campaign_DynamicSearchAdsSetting.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleAdsSearchads360V0Resources_Campaign_DynamicSearchAdsSetting::OAIGoogleAdsSearchads360V0Resources_Campaign_DynamicSearchAdsSetting(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleAdsSearchads360V0Resources_Campaign_DynamicSearchAdsSetting::OAIGoogleAdsSearchads360V0Resources_Campaign_DynamicSearchAdsSetting() {
    this->initializeModel();
}

OAIGoogleAdsSearchads360V0Resources_Campaign_DynamicSearchAdsSetting::~OAIGoogleAdsSearchads360V0Resources_Campaign_DynamicSearchAdsSetting() {}

void OAIGoogleAdsSearchads360V0Resources_Campaign_DynamicSearchAdsSetting::initializeModel() {

    m_domain_name_isSet = false;
    m_domain_name_isValid = false;

    m_language_code_isSet = false;
    m_language_code_isValid = false;

    m_use_supplied_urls_only_isSet = false;
    m_use_supplied_urls_only_isValid = false;
}

void OAIGoogleAdsSearchads360V0Resources_Campaign_DynamicSearchAdsSetting::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleAdsSearchads360V0Resources_Campaign_DynamicSearchAdsSetting::fromJsonObject(QJsonObject json) {

    m_domain_name_isValid = ::OpenAPI::fromJsonValue(m_domain_name, json[QString("domainName")]);
    m_domain_name_isSet = !json[QString("domainName")].isNull() && m_domain_name_isValid;

    m_language_code_isValid = ::OpenAPI::fromJsonValue(m_language_code, json[QString("languageCode")]);
    m_language_code_isSet = !json[QString("languageCode")].isNull() && m_language_code_isValid;

    m_use_supplied_urls_only_isValid = ::OpenAPI::fromJsonValue(m_use_supplied_urls_only, json[QString("useSuppliedUrlsOnly")]);
    m_use_supplied_urls_only_isSet = !json[QString("useSuppliedUrlsOnly")].isNull() && m_use_supplied_urls_only_isValid;
}

QString OAIGoogleAdsSearchads360V0Resources_Campaign_DynamicSearchAdsSetting::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleAdsSearchads360V0Resources_Campaign_DynamicSearchAdsSetting::asJsonObject() const {
    QJsonObject obj;
    if (m_domain_name_isSet) {
        obj.insert(QString("domainName"), ::OpenAPI::toJsonValue(m_domain_name));
    }
    if (m_language_code_isSet) {
        obj.insert(QString("languageCode"), ::OpenAPI::toJsonValue(m_language_code));
    }
    if (m_use_supplied_urls_only_isSet) {
        obj.insert(QString("useSuppliedUrlsOnly"), ::OpenAPI::toJsonValue(m_use_supplied_urls_only));
    }
    return obj;
}

QString OAIGoogleAdsSearchads360V0Resources_Campaign_DynamicSearchAdsSetting::getDomainName() const {
    return m_domain_name;
}
void OAIGoogleAdsSearchads360V0Resources_Campaign_DynamicSearchAdsSetting::setDomainName(const QString &domain_name) {
    m_domain_name = domain_name;
    m_domain_name_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Resources_Campaign_DynamicSearchAdsSetting::is_domain_name_Set() const{
    return m_domain_name_isSet;
}

bool OAIGoogleAdsSearchads360V0Resources_Campaign_DynamicSearchAdsSetting::is_domain_name_Valid() const{
    return m_domain_name_isValid;
}

QString OAIGoogleAdsSearchads360V0Resources_Campaign_DynamicSearchAdsSetting::getLanguageCode() const {
    return m_language_code;
}
void OAIGoogleAdsSearchads360V0Resources_Campaign_DynamicSearchAdsSetting::setLanguageCode(const QString &language_code) {
    m_language_code = language_code;
    m_language_code_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Resources_Campaign_DynamicSearchAdsSetting::is_language_code_Set() const{
    return m_language_code_isSet;
}

bool OAIGoogleAdsSearchads360V0Resources_Campaign_DynamicSearchAdsSetting::is_language_code_Valid() const{
    return m_language_code_isValid;
}

bool OAIGoogleAdsSearchads360V0Resources_Campaign_DynamicSearchAdsSetting::isUseSuppliedUrlsOnly() const {
    return m_use_supplied_urls_only;
}
void OAIGoogleAdsSearchads360V0Resources_Campaign_DynamicSearchAdsSetting::setUseSuppliedUrlsOnly(const bool &use_supplied_urls_only) {
    m_use_supplied_urls_only = use_supplied_urls_only;
    m_use_supplied_urls_only_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Resources_Campaign_DynamicSearchAdsSetting::is_use_supplied_urls_only_Set() const{
    return m_use_supplied_urls_only_isSet;
}

bool OAIGoogleAdsSearchads360V0Resources_Campaign_DynamicSearchAdsSetting::is_use_supplied_urls_only_Valid() const{
    return m_use_supplied_urls_only_isValid;
}

bool OAIGoogleAdsSearchads360V0Resources_Campaign_DynamicSearchAdsSetting::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_domain_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_language_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_use_supplied_urls_only_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleAdsSearchads360V0Resources_Campaign_DynamicSearchAdsSetting::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
