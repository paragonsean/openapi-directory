/**
 * Search Ads 360 Reporting API
 * The Search Ads 360 API allows developers to automate downloading reports from Search Ads 360.
 *
 * The version of the OpenAPI document: v0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleAdsSearchads360V0Resources__CustomerClient.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleAdsSearchads360V0Resources__CustomerClient::OAIGoogleAdsSearchads360V0Resources__CustomerClient(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleAdsSearchads360V0Resources__CustomerClient::OAIGoogleAdsSearchads360V0Resources__CustomerClient() {
    this->initializeModel();
}

OAIGoogleAdsSearchads360V0Resources__CustomerClient::~OAIGoogleAdsSearchads360V0Resources__CustomerClient() {}

void OAIGoogleAdsSearchads360V0Resources__CustomerClient::initializeModel() {

    m_applied_labels_isSet = false;
    m_applied_labels_isValid = false;

    m_client_customer_isSet = false;
    m_client_customer_isValid = false;

    m_currency_code_isSet = false;
    m_currency_code_isValid = false;

    m_descriptive_name_isSet = false;
    m_descriptive_name_isValid = false;

    m_hidden_isSet = false;
    m_hidden_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_level_isSet = false;
    m_level_isValid = false;

    m_manager_isSet = false;
    m_manager_isValid = false;

    m_resource_name_isSet = false;
    m_resource_name_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_test_account_isSet = false;
    m_test_account_isValid = false;

    m_time_zone_isSet = false;
    m_time_zone_isValid = false;
}

void OAIGoogleAdsSearchads360V0Resources__CustomerClient::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleAdsSearchads360V0Resources__CustomerClient::fromJsonObject(QJsonObject json) {

    m_applied_labels_isValid = ::OpenAPI::fromJsonValue(m_applied_labels, json[QString("appliedLabels")]);
    m_applied_labels_isSet = !json[QString("appliedLabels")].isNull() && m_applied_labels_isValid;

    m_client_customer_isValid = ::OpenAPI::fromJsonValue(m_client_customer, json[QString("clientCustomer")]);
    m_client_customer_isSet = !json[QString("clientCustomer")].isNull() && m_client_customer_isValid;

    m_currency_code_isValid = ::OpenAPI::fromJsonValue(m_currency_code, json[QString("currencyCode")]);
    m_currency_code_isSet = !json[QString("currencyCode")].isNull() && m_currency_code_isValid;

    m_descriptive_name_isValid = ::OpenAPI::fromJsonValue(m_descriptive_name, json[QString("descriptiveName")]);
    m_descriptive_name_isSet = !json[QString("descriptiveName")].isNull() && m_descriptive_name_isValid;

    m_hidden_isValid = ::OpenAPI::fromJsonValue(m_hidden, json[QString("hidden")]);
    m_hidden_isSet = !json[QString("hidden")].isNull() && m_hidden_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_level_isValid = ::OpenAPI::fromJsonValue(m_level, json[QString("level")]);
    m_level_isSet = !json[QString("level")].isNull() && m_level_isValid;

    m_manager_isValid = ::OpenAPI::fromJsonValue(m_manager, json[QString("manager")]);
    m_manager_isSet = !json[QString("manager")].isNull() && m_manager_isValid;

    m_resource_name_isValid = ::OpenAPI::fromJsonValue(m_resource_name, json[QString("resourceName")]);
    m_resource_name_isSet = !json[QString("resourceName")].isNull() && m_resource_name_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_test_account_isValid = ::OpenAPI::fromJsonValue(m_test_account, json[QString("testAccount")]);
    m_test_account_isSet = !json[QString("testAccount")].isNull() && m_test_account_isValid;

    m_time_zone_isValid = ::OpenAPI::fromJsonValue(m_time_zone, json[QString("timeZone")]);
    m_time_zone_isSet = !json[QString("timeZone")].isNull() && m_time_zone_isValid;
}

QString OAIGoogleAdsSearchads360V0Resources__CustomerClient::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleAdsSearchads360V0Resources__CustomerClient::asJsonObject() const {
    QJsonObject obj;
    if (m_applied_labels.size() > 0) {
        obj.insert(QString("appliedLabels"), ::OpenAPI::toJsonValue(m_applied_labels));
    }
    if (m_client_customer_isSet) {
        obj.insert(QString("clientCustomer"), ::OpenAPI::toJsonValue(m_client_customer));
    }
    if (m_currency_code_isSet) {
        obj.insert(QString("currencyCode"), ::OpenAPI::toJsonValue(m_currency_code));
    }
    if (m_descriptive_name_isSet) {
        obj.insert(QString("descriptiveName"), ::OpenAPI::toJsonValue(m_descriptive_name));
    }
    if (m_hidden_isSet) {
        obj.insert(QString("hidden"), ::OpenAPI::toJsonValue(m_hidden));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_level_isSet) {
        obj.insert(QString("level"), ::OpenAPI::toJsonValue(m_level));
    }
    if (m_manager_isSet) {
        obj.insert(QString("manager"), ::OpenAPI::toJsonValue(m_manager));
    }
    if (m_resource_name_isSet) {
        obj.insert(QString("resourceName"), ::OpenAPI::toJsonValue(m_resource_name));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_test_account_isSet) {
        obj.insert(QString("testAccount"), ::OpenAPI::toJsonValue(m_test_account));
    }
    if (m_time_zone_isSet) {
        obj.insert(QString("timeZone"), ::OpenAPI::toJsonValue(m_time_zone));
    }
    return obj;
}

QList<QString> OAIGoogleAdsSearchads360V0Resources__CustomerClient::getAppliedLabels() const {
    return m_applied_labels;
}
void OAIGoogleAdsSearchads360V0Resources__CustomerClient::setAppliedLabels(const QList<QString> &applied_labels) {
    m_applied_labels = applied_labels;
    m_applied_labels_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Resources__CustomerClient::is_applied_labels_Set() const{
    return m_applied_labels_isSet;
}

bool OAIGoogleAdsSearchads360V0Resources__CustomerClient::is_applied_labels_Valid() const{
    return m_applied_labels_isValid;
}

QString OAIGoogleAdsSearchads360V0Resources__CustomerClient::getClientCustomer() const {
    return m_client_customer;
}
void OAIGoogleAdsSearchads360V0Resources__CustomerClient::setClientCustomer(const QString &client_customer) {
    m_client_customer = client_customer;
    m_client_customer_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Resources__CustomerClient::is_client_customer_Set() const{
    return m_client_customer_isSet;
}

bool OAIGoogleAdsSearchads360V0Resources__CustomerClient::is_client_customer_Valid() const{
    return m_client_customer_isValid;
}

QString OAIGoogleAdsSearchads360V0Resources__CustomerClient::getCurrencyCode() const {
    return m_currency_code;
}
void OAIGoogleAdsSearchads360V0Resources__CustomerClient::setCurrencyCode(const QString &currency_code) {
    m_currency_code = currency_code;
    m_currency_code_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Resources__CustomerClient::is_currency_code_Set() const{
    return m_currency_code_isSet;
}

bool OAIGoogleAdsSearchads360V0Resources__CustomerClient::is_currency_code_Valid() const{
    return m_currency_code_isValid;
}

QString OAIGoogleAdsSearchads360V0Resources__CustomerClient::getDescriptiveName() const {
    return m_descriptive_name;
}
void OAIGoogleAdsSearchads360V0Resources__CustomerClient::setDescriptiveName(const QString &descriptive_name) {
    m_descriptive_name = descriptive_name;
    m_descriptive_name_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Resources__CustomerClient::is_descriptive_name_Set() const{
    return m_descriptive_name_isSet;
}

bool OAIGoogleAdsSearchads360V0Resources__CustomerClient::is_descriptive_name_Valid() const{
    return m_descriptive_name_isValid;
}

bool OAIGoogleAdsSearchads360V0Resources__CustomerClient::isHidden() const {
    return m_hidden;
}
void OAIGoogleAdsSearchads360V0Resources__CustomerClient::setHidden(const bool &hidden) {
    m_hidden = hidden;
    m_hidden_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Resources__CustomerClient::is_hidden_Set() const{
    return m_hidden_isSet;
}

bool OAIGoogleAdsSearchads360V0Resources__CustomerClient::is_hidden_Valid() const{
    return m_hidden_isValid;
}

QString OAIGoogleAdsSearchads360V0Resources__CustomerClient::getId() const {
    return m_id;
}
void OAIGoogleAdsSearchads360V0Resources__CustomerClient::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Resources__CustomerClient::is_id_Set() const{
    return m_id_isSet;
}

bool OAIGoogleAdsSearchads360V0Resources__CustomerClient::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIGoogleAdsSearchads360V0Resources__CustomerClient::getLevel() const {
    return m_level;
}
void OAIGoogleAdsSearchads360V0Resources__CustomerClient::setLevel(const QString &level) {
    m_level = level;
    m_level_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Resources__CustomerClient::is_level_Set() const{
    return m_level_isSet;
}

bool OAIGoogleAdsSearchads360V0Resources__CustomerClient::is_level_Valid() const{
    return m_level_isValid;
}

bool OAIGoogleAdsSearchads360V0Resources__CustomerClient::isManager() const {
    return m_manager;
}
void OAIGoogleAdsSearchads360V0Resources__CustomerClient::setManager(const bool &manager) {
    m_manager = manager;
    m_manager_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Resources__CustomerClient::is_manager_Set() const{
    return m_manager_isSet;
}

bool OAIGoogleAdsSearchads360V0Resources__CustomerClient::is_manager_Valid() const{
    return m_manager_isValid;
}

QString OAIGoogleAdsSearchads360V0Resources__CustomerClient::getResourceName() const {
    return m_resource_name;
}
void OAIGoogleAdsSearchads360V0Resources__CustomerClient::setResourceName(const QString &resource_name) {
    m_resource_name = resource_name;
    m_resource_name_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Resources__CustomerClient::is_resource_name_Set() const{
    return m_resource_name_isSet;
}

bool OAIGoogleAdsSearchads360V0Resources__CustomerClient::is_resource_name_Valid() const{
    return m_resource_name_isValid;
}

QString OAIGoogleAdsSearchads360V0Resources__CustomerClient::getStatus() const {
    return m_status;
}
void OAIGoogleAdsSearchads360V0Resources__CustomerClient::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Resources__CustomerClient::is_status_Set() const{
    return m_status_isSet;
}

bool OAIGoogleAdsSearchads360V0Resources__CustomerClient::is_status_Valid() const{
    return m_status_isValid;
}

bool OAIGoogleAdsSearchads360V0Resources__CustomerClient::isTestAccount() const {
    return m_test_account;
}
void OAIGoogleAdsSearchads360V0Resources__CustomerClient::setTestAccount(const bool &test_account) {
    m_test_account = test_account;
    m_test_account_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Resources__CustomerClient::is_test_account_Set() const{
    return m_test_account_isSet;
}

bool OAIGoogleAdsSearchads360V0Resources__CustomerClient::is_test_account_Valid() const{
    return m_test_account_isValid;
}

QString OAIGoogleAdsSearchads360V0Resources__CustomerClient::getTimeZone() const {
    return m_time_zone;
}
void OAIGoogleAdsSearchads360V0Resources__CustomerClient::setTimeZone(const QString &time_zone) {
    m_time_zone = time_zone;
    m_time_zone_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Resources__CustomerClient::is_time_zone_Set() const{
    return m_time_zone_isSet;
}

bool OAIGoogleAdsSearchads360V0Resources__CustomerClient::is_time_zone_Valid() const{
    return m_time_zone_isValid;
}

bool OAIGoogleAdsSearchads360V0Resources__CustomerClient::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_applied_labels.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_customer_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_currency_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_descriptive_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hidden_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_level_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_manager_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_test_account_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_time_zone_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleAdsSearchads360V0Resources__CustomerClient::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
