/**
 * Search Ads 360 Reporting API
 * The Search Ads 360 API allows developers to automate downloading reports from Search Ads 360.
 *
 * The version of the OpenAPI document: v0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleAdsSearchads360V0Resources__DoubleClickCampaignManagerSetting.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleAdsSearchads360V0Resources__DoubleClickCampaignManagerSetting::OAIGoogleAdsSearchads360V0Resources__DoubleClickCampaignManagerSetting(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleAdsSearchads360V0Resources__DoubleClickCampaignManagerSetting::OAIGoogleAdsSearchads360V0Resources__DoubleClickCampaignManagerSetting() {
    this->initializeModel();
}

OAIGoogleAdsSearchads360V0Resources__DoubleClickCampaignManagerSetting::~OAIGoogleAdsSearchads360V0Resources__DoubleClickCampaignManagerSetting() {}

void OAIGoogleAdsSearchads360V0Resources__DoubleClickCampaignManagerSetting::initializeModel() {

    m_advertiser_id_isSet = false;
    m_advertiser_id_isValid = false;

    m_network_id_isSet = false;
    m_network_id_isValid = false;

    m_time_zone_isSet = false;
    m_time_zone_isValid = false;
}

void OAIGoogleAdsSearchads360V0Resources__DoubleClickCampaignManagerSetting::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleAdsSearchads360V0Resources__DoubleClickCampaignManagerSetting::fromJsonObject(QJsonObject json) {

    m_advertiser_id_isValid = ::OpenAPI::fromJsonValue(m_advertiser_id, json[QString("advertiserId")]);
    m_advertiser_id_isSet = !json[QString("advertiserId")].isNull() && m_advertiser_id_isValid;

    m_network_id_isValid = ::OpenAPI::fromJsonValue(m_network_id, json[QString("networkId")]);
    m_network_id_isSet = !json[QString("networkId")].isNull() && m_network_id_isValid;

    m_time_zone_isValid = ::OpenAPI::fromJsonValue(m_time_zone, json[QString("timeZone")]);
    m_time_zone_isSet = !json[QString("timeZone")].isNull() && m_time_zone_isValid;
}

QString OAIGoogleAdsSearchads360V0Resources__DoubleClickCampaignManagerSetting::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleAdsSearchads360V0Resources__DoubleClickCampaignManagerSetting::asJsonObject() const {
    QJsonObject obj;
    if (m_advertiser_id_isSet) {
        obj.insert(QString("advertiserId"), ::OpenAPI::toJsonValue(m_advertiser_id));
    }
    if (m_network_id_isSet) {
        obj.insert(QString("networkId"), ::OpenAPI::toJsonValue(m_network_id));
    }
    if (m_time_zone_isSet) {
        obj.insert(QString("timeZone"), ::OpenAPI::toJsonValue(m_time_zone));
    }
    return obj;
}

QString OAIGoogleAdsSearchads360V0Resources__DoubleClickCampaignManagerSetting::getAdvertiserId() const {
    return m_advertiser_id;
}
void OAIGoogleAdsSearchads360V0Resources__DoubleClickCampaignManagerSetting::setAdvertiserId(const QString &advertiser_id) {
    m_advertiser_id = advertiser_id;
    m_advertiser_id_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Resources__DoubleClickCampaignManagerSetting::is_advertiser_id_Set() const{
    return m_advertiser_id_isSet;
}

bool OAIGoogleAdsSearchads360V0Resources__DoubleClickCampaignManagerSetting::is_advertiser_id_Valid() const{
    return m_advertiser_id_isValid;
}

QString OAIGoogleAdsSearchads360V0Resources__DoubleClickCampaignManagerSetting::getNetworkId() const {
    return m_network_id;
}
void OAIGoogleAdsSearchads360V0Resources__DoubleClickCampaignManagerSetting::setNetworkId(const QString &network_id) {
    m_network_id = network_id;
    m_network_id_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Resources__DoubleClickCampaignManagerSetting::is_network_id_Set() const{
    return m_network_id_isSet;
}

bool OAIGoogleAdsSearchads360V0Resources__DoubleClickCampaignManagerSetting::is_network_id_Valid() const{
    return m_network_id_isValid;
}

QString OAIGoogleAdsSearchads360V0Resources__DoubleClickCampaignManagerSetting::getTimeZone() const {
    return m_time_zone;
}
void OAIGoogleAdsSearchads360V0Resources__DoubleClickCampaignManagerSetting::setTimeZone(const QString &time_zone) {
    m_time_zone = time_zone;
    m_time_zone_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Resources__DoubleClickCampaignManagerSetting::is_time_zone_Set() const{
    return m_time_zone_isSet;
}

bool OAIGoogleAdsSearchads360V0Resources__DoubleClickCampaignManagerSetting::is_time_zone_Valid() const{
    return m_time_zone_isValid;
}

bool OAIGoogleAdsSearchads360V0Resources__DoubleClickCampaignManagerSetting::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_advertiser_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_network_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_time_zone_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleAdsSearchads360V0Resources__DoubleClickCampaignManagerSetting::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
