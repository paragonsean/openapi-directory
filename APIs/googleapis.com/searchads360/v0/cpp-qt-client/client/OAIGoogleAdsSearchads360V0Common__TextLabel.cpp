/**
 * Search Ads 360 Reporting API
 * The Search Ads 360 API allows developers to automate downloading reports from Search Ads 360.
 *
 * The version of the OpenAPI document: v0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleAdsSearchads360V0Common__TextLabel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleAdsSearchads360V0Common__TextLabel::OAIGoogleAdsSearchads360V0Common__TextLabel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleAdsSearchads360V0Common__TextLabel::OAIGoogleAdsSearchads360V0Common__TextLabel() {
    this->initializeModel();
}

OAIGoogleAdsSearchads360V0Common__TextLabel::~OAIGoogleAdsSearchads360V0Common__TextLabel() {}

void OAIGoogleAdsSearchads360V0Common__TextLabel::initializeModel() {

    m_background_color_isSet = false;
    m_background_color_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;
}

void OAIGoogleAdsSearchads360V0Common__TextLabel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleAdsSearchads360V0Common__TextLabel::fromJsonObject(QJsonObject json) {

    m_background_color_isValid = ::OpenAPI::fromJsonValue(m_background_color, json[QString("backgroundColor")]);
    m_background_color_isSet = !json[QString("backgroundColor")].isNull() && m_background_color_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;
}

QString OAIGoogleAdsSearchads360V0Common__TextLabel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleAdsSearchads360V0Common__TextLabel::asJsonObject() const {
    QJsonObject obj;
    if (m_background_color_isSet) {
        obj.insert(QString("backgroundColor"), ::OpenAPI::toJsonValue(m_background_color));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    return obj;
}

QString OAIGoogleAdsSearchads360V0Common__TextLabel::getBackgroundColor() const {
    return m_background_color;
}
void OAIGoogleAdsSearchads360V0Common__TextLabel::setBackgroundColor(const QString &background_color) {
    m_background_color = background_color;
    m_background_color_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__TextLabel::is_background_color_Set() const{
    return m_background_color_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__TextLabel::is_background_color_Valid() const{
    return m_background_color_isValid;
}

QString OAIGoogleAdsSearchads360V0Common__TextLabel::getDescription() const {
    return m_description;
}
void OAIGoogleAdsSearchads360V0Common__TextLabel::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__TextLabel::is_description_Set() const{
    return m_description_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__TextLabel::is_description_Valid() const{
    return m_description_isValid;
}

bool OAIGoogleAdsSearchads360V0Common__TextLabel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_background_color_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleAdsSearchads360V0Common__TextLabel::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
