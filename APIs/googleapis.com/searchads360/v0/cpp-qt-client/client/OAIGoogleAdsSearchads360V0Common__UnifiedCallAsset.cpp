/**
 * Search Ads 360 Reporting API
 * The Search Ads 360 API allows developers to automate downloading reports from Search Ads 360.
 *
 * The version of the OpenAPI document: v0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleAdsSearchads360V0Common__UnifiedCallAsset.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleAdsSearchads360V0Common__UnifiedCallAsset::OAIGoogleAdsSearchads360V0Common__UnifiedCallAsset(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleAdsSearchads360V0Common__UnifiedCallAsset::OAIGoogleAdsSearchads360V0Common__UnifiedCallAsset() {
    this->initializeModel();
}

OAIGoogleAdsSearchads360V0Common__UnifiedCallAsset::~OAIGoogleAdsSearchads360V0Common__UnifiedCallAsset() {}

void OAIGoogleAdsSearchads360V0Common__UnifiedCallAsset::initializeModel() {

    m_ad_schedule_targets_isSet = false;
    m_ad_schedule_targets_isValid = false;

    m_call_conversion_action_isSet = false;
    m_call_conversion_action_isValid = false;

    m_call_conversion_reporting_state_isSet = false;
    m_call_conversion_reporting_state_isValid = false;

    m_call_only_isSet = false;
    m_call_only_isValid = false;

    m_call_tracking_enabled_isSet = false;
    m_call_tracking_enabled_isValid = false;

    m_country_code_isSet = false;
    m_country_code_isValid = false;

    m_end_date_isSet = false;
    m_end_date_isValid = false;

    m_phone_number_isSet = false;
    m_phone_number_isValid = false;

    m_start_date_isSet = false;
    m_start_date_isValid = false;

    m_use_searcher_time_zone_isSet = false;
    m_use_searcher_time_zone_isValid = false;
}

void OAIGoogleAdsSearchads360V0Common__UnifiedCallAsset::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleAdsSearchads360V0Common__UnifiedCallAsset::fromJsonObject(QJsonObject json) {

    m_ad_schedule_targets_isValid = ::OpenAPI::fromJsonValue(m_ad_schedule_targets, json[QString("adScheduleTargets")]);
    m_ad_schedule_targets_isSet = !json[QString("adScheduleTargets")].isNull() && m_ad_schedule_targets_isValid;

    m_call_conversion_action_isValid = ::OpenAPI::fromJsonValue(m_call_conversion_action, json[QString("callConversionAction")]);
    m_call_conversion_action_isSet = !json[QString("callConversionAction")].isNull() && m_call_conversion_action_isValid;

    m_call_conversion_reporting_state_isValid = ::OpenAPI::fromJsonValue(m_call_conversion_reporting_state, json[QString("callConversionReportingState")]);
    m_call_conversion_reporting_state_isSet = !json[QString("callConversionReportingState")].isNull() && m_call_conversion_reporting_state_isValid;

    m_call_only_isValid = ::OpenAPI::fromJsonValue(m_call_only, json[QString("callOnly")]);
    m_call_only_isSet = !json[QString("callOnly")].isNull() && m_call_only_isValid;

    m_call_tracking_enabled_isValid = ::OpenAPI::fromJsonValue(m_call_tracking_enabled, json[QString("callTrackingEnabled")]);
    m_call_tracking_enabled_isSet = !json[QString("callTrackingEnabled")].isNull() && m_call_tracking_enabled_isValid;

    m_country_code_isValid = ::OpenAPI::fromJsonValue(m_country_code, json[QString("countryCode")]);
    m_country_code_isSet = !json[QString("countryCode")].isNull() && m_country_code_isValid;

    m_end_date_isValid = ::OpenAPI::fromJsonValue(m_end_date, json[QString("endDate")]);
    m_end_date_isSet = !json[QString("endDate")].isNull() && m_end_date_isValid;

    m_phone_number_isValid = ::OpenAPI::fromJsonValue(m_phone_number, json[QString("phoneNumber")]);
    m_phone_number_isSet = !json[QString("phoneNumber")].isNull() && m_phone_number_isValid;

    m_start_date_isValid = ::OpenAPI::fromJsonValue(m_start_date, json[QString("startDate")]);
    m_start_date_isSet = !json[QString("startDate")].isNull() && m_start_date_isValid;

    m_use_searcher_time_zone_isValid = ::OpenAPI::fromJsonValue(m_use_searcher_time_zone, json[QString("useSearcherTimeZone")]);
    m_use_searcher_time_zone_isSet = !json[QString("useSearcherTimeZone")].isNull() && m_use_searcher_time_zone_isValid;
}

QString OAIGoogleAdsSearchads360V0Common__UnifiedCallAsset::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleAdsSearchads360V0Common__UnifiedCallAsset::asJsonObject() const {
    QJsonObject obj;
    if (m_ad_schedule_targets.size() > 0) {
        obj.insert(QString("adScheduleTargets"), ::OpenAPI::toJsonValue(m_ad_schedule_targets));
    }
    if (m_call_conversion_action_isSet) {
        obj.insert(QString("callConversionAction"), ::OpenAPI::toJsonValue(m_call_conversion_action));
    }
    if (m_call_conversion_reporting_state_isSet) {
        obj.insert(QString("callConversionReportingState"), ::OpenAPI::toJsonValue(m_call_conversion_reporting_state));
    }
    if (m_call_only_isSet) {
        obj.insert(QString("callOnly"), ::OpenAPI::toJsonValue(m_call_only));
    }
    if (m_call_tracking_enabled_isSet) {
        obj.insert(QString("callTrackingEnabled"), ::OpenAPI::toJsonValue(m_call_tracking_enabled));
    }
    if (m_country_code_isSet) {
        obj.insert(QString("countryCode"), ::OpenAPI::toJsonValue(m_country_code));
    }
    if (m_end_date_isSet) {
        obj.insert(QString("endDate"), ::OpenAPI::toJsonValue(m_end_date));
    }
    if (m_phone_number_isSet) {
        obj.insert(QString("phoneNumber"), ::OpenAPI::toJsonValue(m_phone_number));
    }
    if (m_start_date_isSet) {
        obj.insert(QString("startDate"), ::OpenAPI::toJsonValue(m_start_date));
    }
    if (m_use_searcher_time_zone_isSet) {
        obj.insert(QString("useSearcherTimeZone"), ::OpenAPI::toJsonValue(m_use_searcher_time_zone));
    }
    return obj;
}

QList<OAIGoogleAdsSearchads360V0Common__AdScheduleInfo> OAIGoogleAdsSearchads360V0Common__UnifiedCallAsset::getAdScheduleTargets() const {
    return m_ad_schedule_targets;
}
void OAIGoogleAdsSearchads360V0Common__UnifiedCallAsset::setAdScheduleTargets(const QList<OAIGoogleAdsSearchads360V0Common__AdScheduleInfo> &ad_schedule_targets) {
    m_ad_schedule_targets = ad_schedule_targets;
    m_ad_schedule_targets_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__UnifiedCallAsset::is_ad_schedule_targets_Set() const{
    return m_ad_schedule_targets_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__UnifiedCallAsset::is_ad_schedule_targets_Valid() const{
    return m_ad_schedule_targets_isValid;
}

QString OAIGoogleAdsSearchads360V0Common__UnifiedCallAsset::getCallConversionAction() const {
    return m_call_conversion_action;
}
void OAIGoogleAdsSearchads360V0Common__UnifiedCallAsset::setCallConversionAction(const QString &call_conversion_action) {
    m_call_conversion_action = call_conversion_action;
    m_call_conversion_action_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__UnifiedCallAsset::is_call_conversion_action_Set() const{
    return m_call_conversion_action_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__UnifiedCallAsset::is_call_conversion_action_Valid() const{
    return m_call_conversion_action_isValid;
}

QString OAIGoogleAdsSearchads360V0Common__UnifiedCallAsset::getCallConversionReportingState() const {
    return m_call_conversion_reporting_state;
}
void OAIGoogleAdsSearchads360V0Common__UnifiedCallAsset::setCallConversionReportingState(const QString &call_conversion_reporting_state) {
    m_call_conversion_reporting_state = call_conversion_reporting_state;
    m_call_conversion_reporting_state_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__UnifiedCallAsset::is_call_conversion_reporting_state_Set() const{
    return m_call_conversion_reporting_state_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__UnifiedCallAsset::is_call_conversion_reporting_state_Valid() const{
    return m_call_conversion_reporting_state_isValid;
}

bool OAIGoogleAdsSearchads360V0Common__UnifiedCallAsset::isCallOnly() const {
    return m_call_only;
}
void OAIGoogleAdsSearchads360V0Common__UnifiedCallAsset::setCallOnly(const bool &call_only) {
    m_call_only = call_only;
    m_call_only_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__UnifiedCallAsset::is_call_only_Set() const{
    return m_call_only_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__UnifiedCallAsset::is_call_only_Valid() const{
    return m_call_only_isValid;
}

bool OAIGoogleAdsSearchads360V0Common__UnifiedCallAsset::isCallTrackingEnabled() const {
    return m_call_tracking_enabled;
}
void OAIGoogleAdsSearchads360V0Common__UnifiedCallAsset::setCallTrackingEnabled(const bool &call_tracking_enabled) {
    m_call_tracking_enabled = call_tracking_enabled;
    m_call_tracking_enabled_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__UnifiedCallAsset::is_call_tracking_enabled_Set() const{
    return m_call_tracking_enabled_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__UnifiedCallAsset::is_call_tracking_enabled_Valid() const{
    return m_call_tracking_enabled_isValid;
}

QString OAIGoogleAdsSearchads360V0Common__UnifiedCallAsset::getCountryCode() const {
    return m_country_code;
}
void OAIGoogleAdsSearchads360V0Common__UnifiedCallAsset::setCountryCode(const QString &country_code) {
    m_country_code = country_code;
    m_country_code_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__UnifiedCallAsset::is_country_code_Set() const{
    return m_country_code_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__UnifiedCallAsset::is_country_code_Valid() const{
    return m_country_code_isValid;
}

QString OAIGoogleAdsSearchads360V0Common__UnifiedCallAsset::getEndDate() const {
    return m_end_date;
}
void OAIGoogleAdsSearchads360V0Common__UnifiedCallAsset::setEndDate(const QString &end_date) {
    m_end_date = end_date;
    m_end_date_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__UnifiedCallAsset::is_end_date_Set() const{
    return m_end_date_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__UnifiedCallAsset::is_end_date_Valid() const{
    return m_end_date_isValid;
}

QString OAIGoogleAdsSearchads360V0Common__UnifiedCallAsset::getPhoneNumber() const {
    return m_phone_number;
}
void OAIGoogleAdsSearchads360V0Common__UnifiedCallAsset::setPhoneNumber(const QString &phone_number) {
    m_phone_number = phone_number;
    m_phone_number_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__UnifiedCallAsset::is_phone_number_Set() const{
    return m_phone_number_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__UnifiedCallAsset::is_phone_number_Valid() const{
    return m_phone_number_isValid;
}

QString OAIGoogleAdsSearchads360V0Common__UnifiedCallAsset::getStartDate() const {
    return m_start_date;
}
void OAIGoogleAdsSearchads360V0Common__UnifiedCallAsset::setStartDate(const QString &start_date) {
    m_start_date = start_date;
    m_start_date_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__UnifiedCallAsset::is_start_date_Set() const{
    return m_start_date_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__UnifiedCallAsset::is_start_date_Valid() const{
    return m_start_date_isValid;
}

bool OAIGoogleAdsSearchads360V0Common__UnifiedCallAsset::isUseSearcherTimeZone() const {
    return m_use_searcher_time_zone;
}
void OAIGoogleAdsSearchads360V0Common__UnifiedCallAsset::setUseSearcherTimeZone(const bool &use_searcher_time_zone) {
    m_use_searcher_time_zone = use_searcher_time_zone;
    m_use_searcher_time_zone_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__UnifiedCallAsset::is_use_searcher_time_zone_Set() const{
    return m_use_searcher_time_zone_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__UnifiedCallAsset::is_use_searcher_time_zone_Valid() const{
    return m_use_searcher_time_zone_isValid;
}

bool OAIGoogleAdsSearchads360V0Common__UnifiedCallAsset::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_ad_schedule_targets.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_call_conversion_action_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_call_conversion_reporting_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_call_only_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_call_tracking_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_country_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_use_searcher_time_zone_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleAdsSearchads360V0Common__UnifiedCallAsset::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
