/**
 * Search Ads 360 Reporting API
 * The Search Ads 360 API allows developers to automate downloading reports from Search Ads 360.
 *
 * The version of the OpenAPI document: v0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleAdsSearchads360V0Common__LocationGroupInfo.h
 *
 * A radius around a list of locations specified through a feed.
 */

#ifndef OAIGoogleAdsSearchads360V0Common__LocationGroupInfo_H
#define OAIGoogleAdsSearchads360V0Common__LocationGroupInfo_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGoogleAdsSearchads360V0Common__LocationGroupInfo : public OAIObject {
public:
    OAIGoogleAdsSearchads360V0Common__LocationGroupInfo();
    OAIGoogleAdsSearchads360V0Common__LocationGroupInfo(QString json);
    ~OAIGoogleAdsSearchads360V0Common__LocationGroupInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getFeedItemSets() const;
    void setFeedItemSets(const QList<QString> &feed_item_sets);
    bool is_feed_item_sets_Set() const;
    bool is_feed_item_sets_Valid() const;

    QList<QString> getGeoTargetConstants() const;
    void setGeoTargetConstants(const QList<QString> &geo_target_constants);
    bool is_geo_target_constants_Set() const;
    bool is_geo_target_constants_Valid() const;

    QString getRadius() const;
    void setRadius(const QString &radius);
    bool is_radius_Set() const;
    bool is_radius_Valid() const;

    QString getRadiusUnits() const;
    void setRadiusUnits(const QString &radius_units);
    bool is_radius_units_Set() const;
    bool is_radius_units_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_feed_item_sets;
    bool m_feed_item_sets_isSet;
    bool m_feed_item_sets_isValid;

    QList<QString> m_geo_target_constants;
    bool m_geo_target_constants_isSet;
    bool m_geo_target_constants_isValid;

    QString m_radius;
    bool m_radius_isSet;
    bool m_radius_isValid;

    QString m_radius_units;
    bool m_radius_units_isSet;
    bool m_radius_units_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleAdsSearchads360V0Common__LocationGroupInfo)

#endif // OAIGoogleAdsSearchads360V0Common__LocationGroupInfo_H
