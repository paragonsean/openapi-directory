/**
 * Search Ads 360 Reporting API
 * The Search Ads 360 API allows developers to automate downloading reports from Search Ads 360.
 *
 * The version of the OpenAPI document: v0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleAdsSearchads360V0Common__YoutubeVideoAsset.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleAdsSearchads360V0Common__YoutubeVideoAsset::OAIGoogleAdsSearchads360V0Common__YoutubeVideoAsset(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleAdsSearchads360V0Common__YoutubeVideoAsset::OAIGoogleAdsSearchads360V0Common__YoutubeVideoAsset() {
    this->initializeModel();
}

OAIGoogleAdsSearchads360V0Common__YoutubeVideoAsset::~OAIGoogleAdsSearchads360V0Common__YoutubeVideoAsset() {}

void OAIGoogleAdsSearchads360V0Common__YoutubeVideoAsset::initializeModel() {

    m_youtube_video_id_isSet = false;
    m_youtube_video_id_isValid = false;

    m_youtube_video_title_isSet = false;
    m_youtube_video_title_isValid = false;
}

void OAIGoogleAdsSearchads360V0Common__YoutubeVideoAsset::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleAdsSearchads360V0Common__YoutubeVideoAsset::fromJsonObject(QJsonObject json) {

    m_youtube_video_id_isValid = ::OpenAPI::fromJsonValue(m_youtube_video_id, json[QString("youtubeVideoId")]);
    m_youtube_video_id_isSet = !json[QString("youtubeVideoId")].isNull() && m_youtube_video_id_isValid;

    m_youtube_video_title_isValid = ::OpenAPI::fromJsonValue(m_youtube_video_title, json[QString("youtubeVideoTitle")]);
    m_youtube_video_title_isSet = !json[QString("youtubeVideoTitle")].isNull() && m_youtube_video_title_isValid;
}

QString OAIGoogleAdsSearchads360V0Common__YoutubeVideoAsset::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleAdsSearchads360V0Common__YoutubeVideoAsset::asJsonObject() const {
    QJsonObject obj;
    if (m_youtube_video_id_isSet) {
        obj.insert(QString("youtubeVideoId"), ::OpenAPI::toJsonValue(m_youtube_video_id));
    }
    if (m_youtube_video_title_isSet) {
        obj.insert(QString("youtubeVideoTitle"), ::OpenAPI::toJsonValue(m_youtube_video_title));
    }
    return obj;
}

QString OAIGoogleAdsSearchads360V0Common__YoutubeVideoAsset::getYoutubeVideoId() const {
    return m_youtube_video_id;
}
void OAIGoogleAdsSearchads360V0Common__YoutubeVideoAsset::setYoutubeVideoId(const QString &youtube_video_id) {
    m_youtube_video_id = youtube_video_id;
    m_youtube_video_id_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__YoutubeVideoAsset::is_youtube_video_id_Set() const{
    return m_youtube_video_id_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__YoutubeVideoAsset::is_youtube_video_id_Valid() const{
    return m_youtube_video_id_isValid;
}

QString OAIGoogleAdsSearchads360V0Common__YoutubeVideoAsset::getYoutubeVideoTitle() const {
    return m_youtube_video_title;
}
void OAIGoogleAdsSearchads360V0Common__YoutubeVideoAsset::setYoutubeVideoTitle(const QString &youtube_video_title) {
    m_youtube_video_title = youtube_video_title;
    m_youtube_video_title_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__YoutubeVideoAsset::is_youtube_video_title_Set() const{
    return m_youtube_video_title_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__YoutubeVideoAsset::is_youtube_video_title_Valid() const{
    return m_youtube_video_title_isValid;
}

bool OAIGoogleAdsSearchads360V0Common__YoutubeVideoAsset::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_youtube_video_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_youtube_video_title_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleAdsSearchads360V0Common__YoutubeVideoAsset::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
