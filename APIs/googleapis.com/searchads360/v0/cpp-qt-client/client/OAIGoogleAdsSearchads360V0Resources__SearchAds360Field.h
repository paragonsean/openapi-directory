/**
 * Search Ads 360 Reporting API
 * The Search Ads 360 API allows developers to automate downloading reports from Search Ads 360.
 *
 * The version of the OpenAPI document: v0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleAdsSearchads360V0Resources__SearchAds360Field.h
 *
 * A field or resource (artifact) used by SearchAds360Service.
 */

#ifndef OAIGoogleAdsSearchads360V0Resources__SearchAds360Field_H
#define OAIGoogleAdsSearchads360V0Resources__SearchAds360Field_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGoogleAdsSearchads360V0Resources__SearchAds360Field : public OAIObject {
public:
    OAIGoogleAdsSearchads360V0Resources__SearchAds360Field();
    OAIGoogleAdsSearchads360V0Resources__SearchAds360Field(QString json);
    ~OAIGoogleAdsSearchads360V0Resources__SearchAds360Field() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getAttributeResources() const;
    void setAttributeResources(const QList<QString> &attribute_resources);
    bool is_attribute_resources_Set() const;
    bool is_attribute_resources_Valid() const;

    QString getCategory() const;
    void setCategory(const QString &category);
    bool is_category_Set() const;
    bool is_category_Valid() const;

    QString getDataType() const;
    void setDataType(const QString &data_type);
    bool is_data_type_Set() const;
    bool is_data_type_Valid() const;

    QList<QString> getEnumValues() const;
    void setEnumValues(const QList<QString> &enum_values);
    bool is_enum_values_Set() const;
    bool is_enum_values_Valid() const;

    bool isFilterable() const;
    void setFilterable(const bool &filterable);
    bool is_filterable_Set() const;
    bool is_filterable_Valid() const;

    bool isIsRepeated() const;
    void setIsRepeated(const bool &is_repeated);
    bool is_is_repeated_Set() const;
    bool is_is_repeated_Valid() const;

    QList<QString> getMetrics() const;
    void setMetrics(const QList<QString> &metrics);
    bool is_metrics_Set() const;
    bool is_metrics_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getResourceName() const;
    void setResourceName(const QString &resource_name);
    bool is_resource_name_Set() const;
    bool is_resource_name_Valid() const;

    QList<QString> getSegments() const;
    void setSegments(const QList<QString> &segments);
    bool is_segments_Set() const;
    bool is_segments_Valid() const;

    bool isSelectable() const;
    void setSelectable(const bool &selectable);
    bool is_selectable_Set() const;
    bool is_selectable_Valid() const;

    QList<QString> getSelectableWith() const;
    void setSelectableWith(const QList<QString> &selectable_with);
    bool is_selectable_with_Set() const;
    bool is_selectable_with_Valid() const;

    bool isSortable() const;
    void setSortable(const bool &sortable);
    bool is_sortable_Set() const;
    bool is_sortable_Valid() const;

    QString getTypeUrl() const;
    void setTypeUrl(const QString &type_url);
    bool is_type_url_Set() const;
    bool is_type_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_attribute_resources;
    bool m_attribute_resources_isSet;
    bool m_attribute_resources_isValid;

    QString m_category;
    bool m_category_isSet;
    bool m_category_isValid;

    QString m_data_type;
    bool m_data_type_isSet;
    bool m_data_type_isValid;

    QList<QString> m_enum_values;
    bool m_enum_values_isSet;
    bool m_enum_values_isValid;

    bool m_filterable;
    bool m_filterable_isSet;
    bool m_filterable_isValid;

    bool m_is_repeated;
    bool m_is_repeated_isSet;
    bool m_is_repeated_isValid;

    QList<QString> m_metrics;
    bool m_metrics_isSet;
    bool m_metrics_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_resource_name;
    bool m_resource_name_isSet;
    bool m_resource_name_isValid;

    QList<QString> m_segments;
    bool m_segments_isSet;
    bool m_segments_isValid;

    bool m_selectable;
    bool m_selectable_isSet;
    bool m_selectable_isValid;

    QList<QString> m_selectable_with;
    bool m_selectable_with_isSet;
    bool m_selectable_with_isValid;

    bool m_sortable;
    bool m_sortable_isSet;
    bool m_sortable_isValid;

    QString m_type_url;
    bool m_type_url_isSet;
    bool m_type_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleAdsSearchads360V0Resources__SearchAds360Field)

#endif // OAIGoogleAdsSearchads360V0Resources__SearchAds360Field_H
