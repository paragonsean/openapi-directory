/**
 * Search Ads 360 Reporting API
 * The Search Ads 360 API allows developers to automate downloading reports from Search Ads 360.
 *
 * The version of the OpenAPI document: v0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleAdsSearchads360V0Resources__BiddingStrategy.h
 *
 * A bidding strategy.
 */

#ifndef OAIGoogleAdsSearchads360V0Resources__BiddingStrategy_H
#define OAIGoogleAdsSearchads360V0Resources__BiddingStrategy_H

#include <QJsonObject>

#include "OAIGoogleAdsSearchads360V0Common__MaximizeConversionValue.h"
#include "OAIGoogleAdsSearchads360V0Common__MaximizeConversions.h"
#include "OAIGoogleAdsSearchads360V0Common__TargetCpa.h"
#include "OAIGoogleAdsSearchads360V0Common__TargetImpressionShare.h"
#include "OAIGoogleAdsSearchads360V0Common__TargetOutrankShare.h"
#include "OAIGoogleAdsSearchads360V0Common__TargetRoas.h"
#include "OAIGoogleAdsSearchads360V0Common__TargetSpend.h"
#include "OAIObject.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleAdsSearchads360V0Common__MaximizeConversionValue;
class OAIGoogleAdsSearchads360V0Common__MaximizeConversions;
class OAIGoogleAdsSearchads360V0Common__TargetCpa;
class OAIGoogleAdsSearchads360V0Common__TargetImpressionShare;
class OAIGoogleAdsSearchads360V0Common__TargetOutrankShare;
class OAIGoogleAdsSearchads360V0Common__TargetRoas;
class OAIGoogleAdsSearchads360V0Common__TargetSpend;

class OAIGoogleAdsSearchads360V0Resources__BiddingStrategy : public OAIObject {
public:
    OAIGoogleAdsSearchads360V0Resources__BiddingStrategy();
    OAIGoogleAdsSearchads360V0Resources__BiddingStrategy(QString json);
    ~OAIGoogleAdsSearchads360V0Resources__BiddingStrategy() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCampaignCount() const;
    void setCampaignCount(const QString &campaign_count);
    bool is_campaign_count_Set() const;
    bool is_campaign_count_Valid() const;

    QString getCurrencyCode() const;
    void setCurrencyCode(const QString &currency_code);
    bool is_currency_code_Set() const;
    bool is_currency_code_Valid() const;

    QString getEffectiveCurrencyCode() const;
    void setEffectiveCurrencyCode(const QString &effective_currency_code);
    bool is_effective_currency_code_Set() const;
    bool is_effective_currency_code_Valid() const;

    OAIObject getEnhancedCpc() const;
    void setEnhancedCpc(const OAIObject &enhanced_cpc);
    bool is_enhanced_cpc_Set() const;
    bool is_enhanced_cpc_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIGoogleAdsSearchads360V0Common__MaximizeConversionValue getMaximizeConversionValue() const;
    void setMaximizeConversionValue(const OAIGoogleAdsSearchads360V0Common__MaximizeConversionValue &maximize_conversion_value);
    bool is_maximize_conversion_value_Set() const;
    bool is_maximize_conversion_value_Valid() const;

    OAIGoogleAdsSearchads360V0Common__MaximizeConversions getMaximizeConversions() const;
    void setMaximizeConversions(const OAIGoogleAdsSearchads360V0Common__MaximizeConversions &maximize_conversions);
    bool is_maximize_conversions_Set() const;
    bool is_maximize_conversions_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getNonRemovedCampaignCount() const;
    void setNonRemovedCampaignCount(const QString &non_removed_campaign_count);
    bool is_non_removed_campaign_count_Set() const;
    bool is_non_removed_campaign_count_Valid() const;

    QString getResourceName() const;
    void setResourceName(const QString &resource_name);
    bool is_resource_name_Set() const;
    bool is_resource_name_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    OAIGoogleAdsSearchads360V0Common__TargetCpa getTargetCpa() const;
    void setTargetCpa(const OAIGoogleAdsSearchads360V0Common__TargetCpa &target_cpa);
    bool is_target_cpa_Set() const;
    bool is_target_cpa_Valid() const;

    OAIGoogleAdsSearchads360V0Common__TargetImpressionShare getTargetImpressionShare() const;
    void setTargetImpressionShare(const OAIGoogleAdsSearchads360V0Common__TargetImpressionShare &target_impression_share);
    bool is_target_impression_share_Set() const;
    bool is_target_impression_share_Valid() const;

    OAIGoogleAdsSearchads360V0Common__TargetOutrankShare getTargetOutrankShare() const;
    void setTargetOutrankShare(const OAIGoogleAdsSearchads360V0Common__TargetOutrankShare &target_outrank_share);
    bool is_target_outrank_share_Set() const;
    bool is_target_outrank_share_Valid() const;

    OAIGoogleAdsSearchads360V0Common__TargetRoas getTargetRoas() const;
    void setTargetRoas(const OAIGoogleAdsSearchads360V0Common__TargetRoas &target_roas);
    bool is_target_roas_Set() const;
    bool is_target_roas_Valid() const;

    OAIGoogleAdsSearchads360V0Common__TargetSpend getTargetSpend() const;
    void setTargetSpend(const OAIGoogleAdsSearchads360V0Common__TargetSpend &target_spend);
    bool is_target_spend_Set() const;
    bool is_target_spend_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_campaign_count;
    bool m_campaign_count_isSet;
    bool m_campaign_count_isValid;

    QString m_currency_code;
    bool m_currency_code_isSet;
    bool m_currency_code_isValid;

    QString m_effective_currency_code;
    bool m_effective_currency_code_isSet;
    bool m_effective_currency_code_isValid;

    OAIObject m_enhanced_cpc;
    bool m_enhanced_cpc_isSet;
    bool m_enhanced_cpc_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIGoogleAdsSearchads360V0Common__MaximizeConversionValue m_maximize_conversion_value;
    bool m_maximize_conversion_value_isSet;
    bool m_maximize_conversion_value_isValid;

    OAIGoogleAdsSearchads360V0Common__MaximizeConversions m_maximize_conversions;
    bool m_maximize_conversions_isSet;
    bool m_maximize_conversions_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_non_removed_campaign_count;
    bool m_non_removed_campaign_count_isSet;
    bool m_non_removed_campaign_count_isValid;

    QString m_resource_name;
    bool m_resource_name_isSet;
    bool m_resource_name_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    OAIGoogleAdsSearchads360V0Common__TargetCpa m_target_cpa;
    bool m_target_cpa_isSet;
    bool m_target_cpa_isValid;

    OAIGoogleAdsSearchads360V0Common__TargetImpressionShare m_target_impression_share;
    bool m_target_impression_share_isSet;
    bool m_target_impression_share_isValid;

    OAIGoogleAdsSearchads360V0Common__TargetOutrankShare m_target_outrank_share;
    bool m_target_outrank_share_isSet;
    bool m_target_outrank_share_isValid;

    OAIGoogleAdsSearchads360V0Common__TargetRoas m_target_roas;
    bool m_target_roas_isSet;
    bool m_target_roas_isValid;

    OAIGoogleAdsSearchads360V0Common__TargetSpend m_target_spend;
    bool m_target_spend_isSet;
    bool m_target_spend_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleAdsSearchads360V0Resources__BiddingStrategy)

#endif // OAIGoogleAdsSearchads360V0Resources__BiddingStrategy_H
