/**
 * Search Ads 360 Reporting API
 * The Search Ads 360 API allows developers to automate downloading reports from Search Ads 360.
 *
 * The version of the OpenAPI document: v0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleAdsSearchads360V0Common__SearchAds360ResponsiveSearchAdInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleAdsSearchads360V0Common__SearchAds360ResponsiveSearchAdInfo::OAIGoogleAdsSearchads360V0Common__SearchAds360ResponsiveSearchAdInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleAdsSearchads360V0Common__SearchAds360ResponsiveSearchAdInfo::OAIGoogleAdsSearchads360V0Common__SearchAds360ResponsiveSearchAdInfo() {
    this->initializeModel();
}

OAIGoogleAdsSearchads360V0Common__SearchAds360ResponsiveSearchAdInfo::~OAIGoogleAdsSearchads360V0Common__SearchAds360ResponsiveSearchAdInfo() {}

void OAIGoogleAdsSearchads360V0Common__SearchAds360ResponsiveSearchAdInfo::initializeModel() {

    m_ad_tracking_id_isSet = false;
    m_ad_tracking_id_isValid = false;

    m_path1_isSet = false;
    m_path1_isValid = false;

    m_path2_isSet = false;
    m_path2_isValid = false;
}

void OAIGoogleAdsSearchads360V0Common__SearchAds360ResponsiveSearchAdInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleAdsSearchads360V0Common__SearchAds360ResponsiveSearchAdInfo::fromJsonObject(QJsonObject json) {

    m_ad_tracking_id_isValid = ::OpenAPI::fromJsonValue(m_ad_tracking_id, json[QString("adTrackingId")]);
    m_ad_tracking_id_isSet = !json[QString("adTrackingId")].isNull() && m_ad_tracking_id_isValid;

    m_path1_isValid = ::OpenAPI::fromJsonValue(m_path1, json[QString("path1")]);
    m_path1_isSet = !json[QString("path1")].isNull() && m_path1_isValid;

    m_path2_isValid = ::OpenAPI::fromJsonValue(m_path2, json[QString("path2")]);
    m_path2_isSet = !json[QString("path2")].isNull() && m_path2_isValid;
}

QString OAIGoogleAdsSearchads360V0Common__SearchAds360ResponsiveSearchAdInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleAdsSearchads360V0Common__SearchAds360ResponsiveSearchAdInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_ad_tracking_id_isSet) {
        obj.insert(QString("adTrackingId"), ::OpenAPI::toJsonValue(m_ad_tracking_id));
    }
    if (m_path1_isSet) {
        obj.insert(QString("path1"), ::OpenAPI::toJsonValue(m_path1));
    }
    if (m_path2_isSet) {
        obj.insert(QString("path2"), ::OpenAPI::toJsonValue(m_path2));
    }
    return obj;
}

QString OAIGoogleAdsSearchads360V0Common__SearchAds360ResponsiveSearchAdInfo::getAdTrackingId() const {
    return m_ad_tracking_id;
}
void OAIGoogleAdsSearchads360V0Common__SearchAds360ResponsiveSearchAdInfo::setAdTrackingId(const QString &ad_tracking_id) {
    m_ad_tracking_id = ad_tracking_id;
    m_ad_tracking_id_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__SearchAds360ResponsiveSearchAdInfo::is_ad_tracking_id_Set() const{
    return m_ad_tracking_id_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__SearchAds360ResponsiveSearchAdInfo::is_ad_tracking_id_Valid() const{
    return m_ad_tracking_id_isValid;
}

QString OAIGoogleAdsSearchads360V0Common__SearchAds360ResponsiveSearchAdInfo::getPath1() const {
    return m_path1;
}
void OAIGoogleAdsSearchads360V0Common__SearchAds360ResponsiveSearchAdInfo::setPath1(const QString &path1) {
    m_path1 = path1;
    m_path1_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__SearchAds360ResponsiveSearchAdInfo::is_path1_Set() const{
    return m_path1_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__SearchAds360ResponsiveSearchAdInfo::is_path1_Valid() const{
    return m_path1_isValid;
}

QString OAIGoogleAdsSearchads360V0Common__SearchAds360ResponsiveSearchAdInfo::getPath2() const {
    return m_path2;
}
void OAIGoogleAdsSearchads360V0Common__SearchAds360ResponsiveSearchAdInfo::setPath2(const QString &path2) {
    m_path2 = path2;
    m_path2_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__SearchAds360ResponsiveSearchAdInfo::is_path2_Set() const{
    return m_path2_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__SearchAds360ResponsiveSearchAdInfo::is_path2_Valid() const{
    return m_path2_isValid;
}

bool OAIGoogleAdsSearchads360V0Common__SearchAds360ResponsiveSearchAdInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_ad_tracking_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_path1_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_path2_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleAdsSearchads360V0Common__SearchAds360ResponsiveSearchAdInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
