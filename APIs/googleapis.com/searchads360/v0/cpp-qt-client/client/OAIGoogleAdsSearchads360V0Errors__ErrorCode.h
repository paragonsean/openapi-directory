/**
 * Search Ads 360 Reporting API
 * The Search Ads 360 API allows developers to automate downloading reports from Search Ads 360.
 *
 * The version of the OpenAPI document: v0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleAdsSearchads360V0Errors__ErrorCode.h
 *
 * The error reason represented by type and enum.
 */

#ifndef OAIGoogleAdsSearchads360V0Errors__ErrorCode_H
#define OAIGoogleAdsSearchads360V0Errors__ErrorCode_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGoogleAdsSearchads360V0Errors__ErrorCode : public OAIObject {
public:
    OAIGoogleAdsSearchads360V0Errors__ErrorCode();
    OAIGoogleAdsSearchads360V0Errors__ErrorCode(QString json);
    ~OAIGoogleAdsSearchads360V0Errors__ErrorCode() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAuthenticationError() const;
    void setAuthenticationError(const QString &authentication_error);
    bool is_authentication_error_Set() const;
    bool is_authentication_error_Valid() const;

    QString getAuthorizationError() const;
    void setAuthorizationError(const QString &authorization_error);
    bool is_authorization_error_Set() const;
    bool is_authorization_error_Valid() const;

    QString getCustomColumnError() const;
    void setCustomColumnError(const QString &custom_column_error);
    bool is_custom_column_error_Set() const;
    bool is_custom_column_error_Valid() const;

    QString getDateError() const;
    void setDateError(const QString &date_error);
    bool is_date_error_Set() const;
    bool is_date_error_Valid() const;

    QString getDateRangeError() const;
    void setDateRangeError(const QString &date_range_error);
    bool is_date_range_error_Set() const;
    bool is_date_range_error_Valid() const;

    QString getDistinctError() const;
    void setDistinctError(const QString &distinct_error);
    bool is_distinct_error_Set() const;
    bool is_distinct_error_Valid() const;

    QString getHeaderError() const;
    void setHeaderError(const QString &header_error);
    bool is_header_error_Set() const;
    bool is_header_error_Valid() const;

    QString getInternalError() const;
    void setInternalError(const QString &internal_error);
    bool is_internal_error_Set() const;
    bool is_internal_error_Valid() const;

    QString getInvalidParameterError() const;
    void setInvalidParameterError(const QString &invalid_parameter_error);
    bool is_invalid_parameter_error_Set() const;
    bool is_invalid_parameter_error_Valid() const;

    QString getQueryError() const;
    void setQueryError(const QString &query_error);
    bool is_query_error_Set() const;
    bool is_query_error_Valid() const;

    QString getQuotaError() const;
    void setQuotaError(const QString &quota_error);
    bool is_quota_error_Set() const;
    bool is_quota_error_Valid() const;

    QString getRequestError() const;
    void setRequestError(const QString &request_error);
    bool is_request_error_Set() const;
    bool is_request_error_Valid() const;

    QString getSizeLimitError() const;
    void setSizeLimitError(const QString &size_limit_error);
    bool is_size_limit_error_Set() const;
    bool is_size_limit_error_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_authentication_error;
    bool m_authentication_error_isSet;
    bool m_authentication_error_isValid;

    QString m_authorization_error;
    bool m_authorization_error_isSet;
    bool m_authorization_error_isValid;

    QString m_custom_column_error;
    bool m_custom_column_error_isSet;
    bool m_custom_column_error_isValid;

    QString m_date_error;
    bool m_date_error_isSet;
    bool m_date_error_isValid;

    QString m_date_range_error;
    bool m_date_range_error_isSet;
    bool m_date_range_error_isValid;

    QString m_distinct_error;
    bool m_distinct_error_isSet;
    bool m_distinct_error_isValid;

    QString m_header_error;
    bool m_header_error_isSet;
    bool m_header_error_isValid;

    QString m_internal_error;
    bool m_internal_error_isSet;
    bool m_internal_error_isValid;

    QString m_invalid_parameter_error;
    bool m_invalid_parameter_error_isSet;
    bool m_invalid_parameter_error_isValid;

    QString m_query_error;
    bool m_query_error_isSet;
    bool m_query_error_isValid;

    QString m_quota_error;
    bool m_quota_error_isSet;
    bool m_quota_error_isValid;

    QString m_request_error;
    bool m_request_error_isSet;
    bool m_request_error_isValid;

    QString m_size_limit_error;
    bool m_size_limit_error_isSet;
    bool m_size_limit_error_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleAdsSearchads360V0Errors__ErrorCode)

#endif // OAIGoogleAdsSearchads360V0Errors__ErrorCode_H
