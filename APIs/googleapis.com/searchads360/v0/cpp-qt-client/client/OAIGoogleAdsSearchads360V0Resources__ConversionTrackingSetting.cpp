/**
 * Search Ads 360 Reporting API
 * The Search Ads 360 API allows developers to automate downloading reports from Search Ads 360.
 *
 * The version of the OpenAPI document: v0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleAdsSearchads360V0Resources__ConversionTrackingSetting.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleAdsSearchads360V0Resources__ConversionTrackingSetting::OAIGoogleAdsSearchads360V0Resources__ConversionTrackingSetting(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleAdsSearchads360V0Resources__ConversionTrackingSetting::OAIGoogleAdsSearchads360V0Resources__ConversionTrackingSetting() {
    this->initializeModel();
}

OAIGoogleAdsSearchads360V0Resources__ConversionTrackingSetting::~OAIGoogleAdsSearchads360V0Resources__ConversionTrackingSetting() {}

void OAIGoogleAdsSearchads360V0Resources__ConversionTrackingSetting::initializeModel() {

    m_accepted_customer_data_terms_isSet = false;
    m_accepted_customer_data_terms_isValid = false;

    m_conversion_tracking_id_isSet = false;
    m_conversion_tracking_id_isValid = false;

    m_conversion_tracking_status_isSet = false;
    m_conversion_tracking_status_isValid = false;

    m_cross_account_conversion_tracking_id_isSet = false;
    m_cross_account_conversion_tracking_id_isValid = false;

    m_enhanced_conversions_for_leads_enabled_isSet = false;
    m_enhanced_conversions_for_leads_enabled_isValid = false;

    m_google_ads_conversion_customer_isSet = false;
    m_google_ads_conversion_customer_isValid = false;

    m_google_ads_cross_account_conversion_tracking_id_isSet = false;
    m_google_ads_cross_account_conversion_tracking_id_isValid = false;
}

void OAIGoogleAdsSearchads360V0Resources__ConversionTrackingSetting::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleAdsSearchads360V0Resources__ConversionTrackingSetting::fromJsonObject(QJsonObject json) {

    m_accepted_customer_data_terms_isValid = ::OpenAPI::fromJsonValue(m_accepted_customer_data_terms, json[QString("acceptedCustomerDataTerms")]);
    m_accepted_customer_data_terms_isSet = !json[QString("acceptedCustomerDataTerms")].isNull() && m_accepted_customer_data_terms_isValid;

    m_conversion_tracking_id_isValid = ::OpenAPI::fromJsonValue(m_conversion_tracking_id, json[QString("conversionTrackingId")]);
    m_conversion_tracking_id_isSet = !json[QString("conversionTrackingId")].isNull() && m_conversion_tracking_id_isValid;

    m_conversion_tracking_status_isValid = ::OpenAPI::fromJsonValue(m_conversion_tracking_status, json[QString("conversionTrackingStatus")]);
    m_conversion_tracking_status_isSet = !json[QString("conversionTrackingStatus")].isNull() && m_conversion_tracking_status_isValid;

    m_cross_account_conversion_tracking_id_isValid = ::OpenAPI::fromJsonValue(m_cross_account_conversion_tracking_id, json[QString("crossAccountConversionTrackingId")]);
    m_cross_account_conversion_tracking_id_isSet = !json[QString("crossAccountConversionTrackingId")].isNull() && m_cross_account_conversion_tracking_id_isValid;

    m_enhanced_conversions_for_leads_enabled_isValid = ::OpenAPI::fromJsonValue(m_enhanced_conversions_for_leads_enabled, json[QString("enhancedConversionsForLeadsEnabled")]);
    m_enhanced_conversions_for_leads_enabled_isSet = !json[QString("enhancedConversionsForLeadsEnabled")].isNull() && m_enhanced_conversions_for_leads_enabled_isValid;

    m_google_ads_conversion_customer_isValid = ::OpenAPI::fromJsonValue(m_google_ads_conversion_customer, json[QString("googleAdsConversionCustomer")]);
    m_google_ads_conversion_customer_isSet = !json[QString("googleAdsConversionCustomer")].isNull() && m_google_ads_conversion_customer_isValid;

    m_google_ads_cross_account_conversion_tracking_id_isValid = ::OpenAPI::fromJsonValue(m_google_ads_cross_account_conversion_tracking_id, json[QString("googleAdsCrossAccountConversionTrackingId")]);
    m_google_ads_cross_account_conversion_tracking_id_isSet = !json[QString("googleAdsCrossAccountConversionTrackingId")].isNull() && m_google_ads_cross_account_conversion_tracking_id_isValid;
}

QString OAIGoogleAdsSearchads360V0Resources__ConversionTrackingSetting::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleAdsSearchads360V0Resources__ConversionTrackingSetting::asJsonObject() const {
    QJsonObject obj;
    if (m_accepted_customer_data_terms_isSet) {
        obj.insert(QString("acceptedCustomerDataTerms"), ::OpenAPI::toJsonValue(m_accepted_customer_data_terms));
    }
    if (m_conversion_tracking_id_isSet) {
        obj.insert(QString("conversionTrackingId"), ::OpenAPI::toJsonValue(m_conversion_tracking_id));
    }
    if (m_conversion_tracking_status_isSet) {
        obj.insert(QString("conversionTrackingStatus"), ::OpenAPI::toJsonValue(m_conversion_tracking_status));
    }
    if (m_cross_account_conversion_tracking_id_isSet) {
        obj.insert(QString("crossAccountConversionTrackingId"), ::OpenAPI::toJsonValue(m_cross_account_conversion_tracking_id));
    }
    if (m_enhanced_conversions_for_leads_enabled_isSet) {
        obj.insert(QString("enhancedConversionsForLeadsEnabled"), ::OpenAPI::toJsonValue(m_enhanced_conversions_for_leads_enabled));
    }
    if (m_google_ads_conversion_customer_isSet) {
        obj.insert(QString("googleAdsConversionCustomer"), ::OpenAPI::toJsonValue(m_google_ads_conversion_customer));
    }
    if (m_google_ads_cross_account_conversion_tracking_id_isSet) {
        obj.insert(QString("googleAdsCrossAccountConversionTrackingId"), ::OpenAPI::toJsonValue(m_google_ads_cross_account_conversion_tracking_id));
    }
    return obj;
}

bool OAIGoogleAdsSearchads360V0Resources__ConversionTrackingSetting::isAcceptedCustomerDataTerms() const {
    return m_accepted_customer_data_terms;
}
void OAIGoogleAdsSearchads360V0Resources__ConversionTrackingSetting::setAcceptedCustomerDataTerms(const bool &accepted_customer_data_terms) {
    m_accepted_customer_data_terms = accepted_customer_data_terms;
    m_accepted_customer_data_terms_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Resources__ConversionTrackingSetting::is_accepted_customer_data_terms_Set() const{
    return m_accepted_customer_data_terms_isSet;
}

bool OAIGoogleAdsSearchads360V0Resources__ConversionTrackingSetting::is_accepted_customer_data_terms_Valid() const{
    return m_accepted_customer_data_terms_isValid;
}

QString OAIGoogleAdsSearchads360V0Resources__ConversionTrackingSetting::getConversionTrackingId() const {
    return m_conversion_tracking_id;
}
void OAIGoogleAdsSearchads360V0Resources__ConversionTrackingSetting::setConversionTrackingId(const QString &conversion_tracking_id) {
    m_conversion_tracking_id = conversion_tracking_id;
    m_conversion_tracking_id_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Resources__ConversionTrackingSetting::is_conversion_tracking_id_Set() const{
    return m_conversion_tracking_id_isSet;
}

bool OAIGoogleAdsSearchads360V0Resources__ConversionTrackingSetting::is_conversion_tracking_id_Valid() const{
    return m_conversion_tracking_id_isValid;
}

QString OAIGoogleAdsSearchads360V0Resources__ConversionTrackingSetting::getConversionTrackingStatus() const {
    return m_conversion_tracking_status;
}
void OAIGoogleAdsSearchads360V0Resources__ConversionTrackingSetting::setConversionTrackingStatus(const QString &conversion_tracking_status) {
    m_conversion_tracking_status = conversion_tracking_status;
    m_conversion_tracking_status_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Resources__ConversionTrackingSetting::is_conversion_tracking_status_Set() const{
    return m_conversion_tracking_status_isSet;
}

bool OAIGoogleAdsSearchads360V0Resources__ConversionTrackingSetting::is_conversion_tracking_status_Valid() const{
    return m_conversion_tracking_status_isValid;
}

QString OAIGoogleAdsSearchads360V0Resources__ConversionTrackingSetting::getCrossAccountConversionTrackingId() const {
    return m_cross_account_conversion_tracking_id;
}
void OAIGoogleAdsSearchads360V0Resources__ConversionTrackingSetting::setCrossAccountConversionTrackingId(const QString &cross_account_conversion_tracking_id) {
    m_cross_account_conversion_tracking_id = cross_account_conversion_tracking_id;
    m_cross_account_conversion_tracking_id_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Resources__ConversionTrackingSetting::is_cross_account_conversion_tracking_id_Set() const{
    return m_cross_account_conversion_tracking_id_isSet;
}

bool OAIGoogleAdsSearchads360V0Resources__ConversionTrackingSetting::is_cross_account_conversion_tracking_id_Valid() const{
    return m_cross_account_conversion_tracking_id_isValid;
}

bool OAIGoogleAdsSearchads360V0Resources__ConversionTrackingSetting::isEnhancedConversionsForLeadsEnabled() const {
    return m_enhanced_conversions_for_leads_enabled;
}
void OAIGoogleAdsSearchads360V0Resources__ConversionTrackingSetting::setEnhancedConversionsForLeadsEnabled(const bool &enhanced_conversions_for_leads_enabled) {
    m_enhanced_conversions_for_leads_enabled = enhanced_conversions_for_leads_enabled;
    m_enhanced_conversions_for_leads_enabled_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Resources__ConversionTrackingSetting::is_enhanced_conversions_for_leads_enabled_Set() const{
    return m_enhanced_conversions_for_leads_enabled_isSet;
}

bool OAIGoogleAdsSearchads360V0Resources__ConversionTrackingSetting::is_enhanced_conversions_for_leads_enabled_Valid() const{
    return m_enhanced_conversions_for_leads_enabled_isValid;
}

QString OAIGoogleAdsSearchads360V0Resources__ConversionTrackingSetting::getGoogleAdsConversionCustomer() const {
    return m_google_ads_conversion_customer;
}
void OAIGoogleAdsSearchads360V0Resources__ConversionTrackingSetting::setGoogleAdsConversionCustomer(const QString &google_ads_conversion_customer) {
    m_google_ads_conversion_customer = google_ads_conversion_customer;
    m_google_ads_conversion_customer_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Resources__ConversionTrackingSetting::is_google_ads_conversion_customer_Set() const{
    return m_google_ads_conversion_customer_isSet;
}

bool OAIGoogleAdsSearchads360V0Resources__ConversionTrackingSetting::is_google_ads_conversion_customer_Valid() const{
    return m_google_ads_conversion_customer_isValid;
}

QString OAIGoogleAdsSearchads360V0Resources__ConversionTrackingSetting::getGoogleAdsCrossAccountConversionTrackingId() const {
    return m_google_ads_cross_account_conversion_tracking_id;
}
void OAIGoogleAdsSearchads360V0Resources__ConversionTrackingSetting::setGoogleAdsCrossAccountConversionTrackingId(const QString &google_ads_cross_account_conversion_tracking_id) {
    m_google_ads_cross_account_conversion_tracking_id = google_ads_cross_account_conversion_tracking_id;
    m_google_ads_cross_account_conversion_tracking_id_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Resources__ConversionTrackingSetting::is_google_ads_cross_account_conversion_tracking_id_Set() const{
    return m_google_ads_cross_account_conversion_tracking_id_isSet;
}

bool OAIGoogleAdsSearchads360V0Resources__ConversionTrackingSetting::is_google_ads_cross_account_conversion_tracking_id_Valid() const{
    return m_google_ads_cross_account_conversion_tracking_id_isValid;
}

bool OAIGoogleAdsSearchads360V0Resources__ConversionTrackingSetting::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_accepted_customer_data_terms_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_conversion_tracking_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_conversion_tracking_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cross_account_conversion_tracking_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enhanced_conversions_for_leads_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_google_ads_conversion_customer_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_google_ads_cross_account_conversion_tracking_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleAdsSearchads360V0Resources__ConversionTrackingSetting::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
