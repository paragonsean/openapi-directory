/**
 * Search Ads 360 Reporting API
 * The Search Ads 360 API allows developers to automate downloading reports from Search Ads 360.
 *
 * The version of the OpenAPI document: v0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleAdsSearchads360V0Resources_Campaign_OptimizationGoalSetting.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleAdsSearchads360V0Resources_Campaign_OptimizationGoalSetting::OAIGoogleAdsSearchads360V0Resources_Campaign_OptimizationGoalSetting(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleAdsSearchads360V0Resources_Campaign_OptimizationGoalSetting::OAIGoogleAdsSearchads360V0Resources_Campaign_OptimizationGoalSetting() {
    this->initializeModel();
}

OAIGoogleAdsSearchads360V0Resources_Campaign_OptimizationGoalSetting::~OAIGoogleAdsSearchads360V0Resources_Campaign_OptimizationGoalSetting() {}

void OAIGoogleAdsSearchads360V0Resources_Campaign_OptimizationGoalSetting::initializeModel() {

    m_optimization_goal_types_isSet = false;
    m_optimization_goal_types_isValid = false;
}

void OAIGoogleAdsSearchads360V0Resources_Campaign_OptimizationGoalSetting::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleAdsSearchads360V0Resources_Campaign_OptimizationGoalSetting::fromJsonObject(QJsonObject json) {

    m_optimization_goal_types_isValid = ::OpenAPI::fromJsonValue(m_optimization_goal_types, json[QString("optimizationGoalTypes")]);
    m_optimization_goal_types_isSet = !json[QString("optimizationGoalTypes")].isNull() && m_optimization_goal_types_isValid;
}

QString OAIGoogleAdsSearchads360V0Resources_Campaign_OptimizationGoalSetting::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleAdsSearchads360V0Resources_Campaign_OptimizationGoalSetting::asJsonObject() const {
    QJsonObject obj;
    if (m_optimization_goal_types.size() > 0) {
        obj.insert(QString("optimizationGoalTypes"), ::OpenAPI::toJsonValue(m_optimization_goal_types));
    }
    return obj;
}

QList<QString> OAIGoogleAdsSearchads360V0Resources_Campaign_OptimizationGoalSetting::getOptimizationGoalTypes() const {
    return m_optimization_goal_types;
}
void OAIGoogleAdsSearchads360V0Resources_Campaign_OptimizationGoalSetting::setOptimizationGoalTypes(const QList<QString> &optimization_goal_types) {
    m_optimization_goal_types = optimization_goal_types;
    m_optimization_goal_types_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Resources_Campaign_OptimizationGoalSetting::is_optimization_goal_types_Set() const{
    return m_optimization_goal_types_isSet;
}

bool OAIGoogleAdsSearchads360V0Resources_Campaign_OptimizationGoalSetting::is_optimization_goal_types_Valid() const{
    return m_optimization_goal_types_isValid;
}

bool OAIGoogleAdsSearchads360V0Resources_Campaign_OptimizationGoalSetting::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_optimization_goal_types.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleAdsSearchads360V0Resources_Campaign_OptimizationGoalSetting::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
