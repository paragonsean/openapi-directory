/**
 * Search Ads 360 Reporting API
 * The Search Ads 360 API allows developers to automate downloading reports from Search Ads 360.
 *
 * The version of the OpenAPI document: v0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleAdsSearchads360V0Errors__SearchAds360Error.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleAdsSearchads360V0Errors__SearchAds360Error::OAIGoogleAdsSearchads360V0Errors__SearchAds360Error(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleAdsSearchads360V0Errors__SearchAds360Error::OAIGoogleAdsSearchads360V0Errors__SearchAds360Error() {
    this->initializeModel();
}

OAIGoogleAdsSearchads360V0Errors__SearchAds360Error::~OAIGoogleAdsSearchads360V0Errors__SearchAds360Error() {}

void OAIGoogleAdsSearchads360V0Errors__SearchAds360Error::initializeModel() {

    m_details_isSet = false;
    m_details_isValid = false;

    m_error_code_isSet = false;
    m_error_code_isValid = false;

    m_location_isSet = false;
    m_location_isValid = false;

    m_message_isSet = false;
    m_message_isValid = false;

    m_trigger_isSet = false;
    m_trigger_isValid = false;
}

void OAIGoogleAdsSearchads360V0Errors__SearchAds360Error::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleAdsSearchads360V0Errors__SearchAds360Error::fromJsonObject(QJsonObject json) {

    m_details_isValid = ::OpenAPI::fromJsonValue(m_details, json[QString("details")]);
    m_details_isSet = !json[QString("details")].isNull() && m_details_isValid;

    m_error_code_isValid = ::OpenAPI::fromJsonValue(m_error_code, json[QString("errorCode")]);
    m_error_code_isSet = !json[QString("errorCode")].isNull() && m_error_code_isValid;

    m_location_isValid = ::OpenAPI::fromJsonValue(m_location, json[QString("location")]);
    m_location_isSet = !json[QString("location")].isNull() && m_location_isValid;

    m_message_isValid = ::OpenAPI::fromJsonValue(m_message, json[QString("message")]);
    m_message_isSet = !json[QString("message")].isNull() && m_message_isValid;

    m_trigger_isValid = ::OpenAPI::fromJsonValue(m_trigger, json[QString("trigger")]);
    m_trigger_isSet = !json[QString("trigger")].isNull() && m_trigger_isValid;
}

QString OAIGoogleAdsSearchads360V0Errors__SearchAds360Error::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleAdsSearchads360V0Errors__SearchAds360Error::asJsonObject() const {
    QJsonObject obj;
    if (m_details.isSet()) {
        obj.insert(QString("details"), ::OpenAPI::toJsonValue(m_details));
    }
    if (m_error_code.isSet()) {
        obj.insert(QString("errorCode"), ::OpenAPI::toJsonValue(m_error_code));
    }
    if (m_location.isSet()) {
        obj.insert(QString("location"), ::OpenAPI::toJsonValue(m_location));
    }
    if (m_message_isSet) {
        obj.insert(QString("message"), ::OpenAPI::toJsonValue(m_message));
    }
    if (m_trigger.isSet()) {
        obj.insert(QString("trigger"), ::OpenAPI::toJsonValue(m_trigger));
    }
    return obj;
}

OAIGoogleAdsSearchads360V0Errors__ErrorDetails OAIGoogleAdsSearchads360V0Errors__SearchAds360Error::getDetails() const {
    return m_details;
}
void OAIGoogleAdsSearchads360V0Errors__SearchAds360Error::setDetails(const OAIGoogleAdsSearchads360V0Errors__ErrorDetails &details) {
    m_details = details;
    m_details_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Errors__SearchAds360Error::is_details_Set() const{
    return m_details_isSet;
}

bool OAIGoogleAdsSearchads360V0Errors__SearchAds360Error::is_details_Valid() const{
    return m_details_isValid;
}

OAIGoogleAdsSearchads360V0Errors__ErrorCode OAIGoogleAdsSearchads360V0Errors__SearchAds360Error::getErrorCode() const {
    return m_error_code;
}
void OAIGoogleAdsSearchads360V0Errors__SearchAds360Error::setErrorCode(const OAIGoogleAdsSearchads360V0Errors__ErrorCode &error_code) {
    m_error_code = error_code;
    m_error_code_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Errors__SearchAds360Error::is_error_code_Set() const{
    return m_error_code_isSet;
}

bool OAIGoogleAdsSearchads360V0Errors__SearchAds360Error::is_error_code_Valid() const{
    return m_error_code_isValid;
}

OAIGoogleAdsSearchads360V0Errors__ErrorLocation OAIGoogleAdsSearchads360V0Errors__SearchAds360Error::getLocation() const {
    return m_location;
}
void OAIGoogleAdsSearchads360V0Errors__SearchAds360Error::setLocation(const OAIGoogleAdsSearchads360V0Errors__ErrorLocation &location) {
    m_location = location;
    m_location_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Errors__SearchAds360Error::is_location_Set() const{
    return m_location_isSet;
}

bool OAIGoogleAdsSearchads360V0Errors__SearchAds360Error::is_location_Valid() const{
    return m_location_isValid;
}

QString OAIGoogleAdsSearchads360V0Errors__SearchAds360Error::getMessage() const {
    return m_message;
}
void OAIGoogleAdsSearchads360V0Errors__SearchAds360Error::setMessage(const QString &message) {
    m_message = message;
    m_message_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Errors__SearchAds360Error::is_message_Set() const{
    return m_message_isSet;
}

bool OAIGoogleAdsSearchads360V0Errors__SearchAds360Error::is_message_Valid() const{
    return m_message_isValid;
}

OAIGoogleAdsSearchads360V0Common__Value OAIGoogleAdsSearchads360V0Errors__SearchAds360Error::getTrigger() const {
    return m_trigger;
}
void OAIGoogleAdsSearchads360V0Errors__SearchAds360Error::setTrigger(const OAIGoogleAdsSearchads360V0Common__Value &trigger) {
    m_trigger = trigger;
    m_trigger_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Errors__SearchAds360Error::is_trigger_Set() const{
    return m_trigger_isSet;
}

bool OAIGoogleAdsSearchads360V0Errors__SearchAds360Error::is_trigger_Valid() const{
    return m_trigger_isValid;
}

bool OAIGoogleAdsSearchads360V0Errors__SearchAds360Error::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_error_code.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_location.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_trigger.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleAdsSearchads360V0Errors__SearchAds360Error::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
