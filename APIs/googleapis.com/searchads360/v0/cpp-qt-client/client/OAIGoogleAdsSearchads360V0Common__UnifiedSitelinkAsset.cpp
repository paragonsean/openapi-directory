/**
 * Search Ads 360 Reporting API
 * The Search Ads 360 API allows developers to automate downloading reports from Search Ads 360.
 *
 * The version of the OpenAPI document: v0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleAdsSearchads360V0Common__UnifiedSitelinkAsset.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleAdsSearchads360V0Common__UnifiedSitelinkAsset::OAIGoogleAdsSearchads360V0Common__UnifiedSitelinkAsset(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleAdsSearchads360V0Common__UnifiedSitelinkAsset::OAIGoogleAdsSearchads360V0Common__UnifiedSitelinkAsset() {
    this->initializeModel();
}

OAIGoogleAdsSearchads360V0Common__UnifiedSitelinkAsset::~OAIGoogleAdsSearchads360V0Common__UnifiedSitelinkAsset() {}

void OAIGoogleAdsSearchads360V0Common__UnifiedSitelinkAsset::initializeModel() {

    m_ad_schedule_targets_isSet = false;
    m_ad_schedule_targets_isValid = false;

    m_description1_isSet = false;
    m_description1_isValid = false;

    m_description2_isSet = false;
    m_description2_isValid = false;

    m_end_date_isSet = false;
    m_end_date_isValid = false;

    m_link_text_isSet = false;
    m_link_text_isValid = false;

    m_mobile_preferred_isSet = false;
    m_mobile_preferred_isValid = false;

    m_start_date_isSet = false;
    m_start_date_isValid = false;

    m_tracking_id_isSet = false;
    m_tracking_id_isValid = false;

    m_use_searcher_time_zone_isSet = false;
    m_use_searcher_time_zone_isValid = false;
}

void OAIGoogleAdsSearchads360V0Common__UnifiedSitelinkAsset::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleAdsSearchads360V0Common__UnifiedSitelinkAsset::fromJsonObject(QJsonObject json) {

    m_ad_schedule_targets_isValid = ::OpenAPI::fromJsonValue(m_ad_schedule_targets, json[QString("adScheduleTargets")]);
    m_ad_schedule_targets_isSet = !json[QString("adScheduleTargets")].isNull() && m_ad_schedule_targets_isValid;

    m_description1_isValid = ::OpenAPI::fromJsonValue(m_description1, json[QString("description1")]);
    m_description1_isSet = !json[QString("description1")].isNull() && m_description1_isValid;

    m_description2_isValid = ::OpenAPI::fromJsonValue(m_description2, json[QString("description2")]);
    m_description2_isSet = !json[QString("description2")].isNull() && m_description2_isValid;

    m_end_date_isValid = ::OpenAPI::fromJsonValue(m_end_date, json[QString("endDate")]);
    m_end_date_isSet = !json[QString("endDate")].isNull() && m_end_date_isValid;

    m_link_text_isValid = ::OpenAPI::fromJsonValue(m_link_text, json[QString("linkText")]);
    m_link_text_isSet = !json[QString("linkText")].isNull() && m_link_text_isValid;

    m_mobile_preferred_isValid = ::OpenAPI::fromJsonValue(m_mobile_preferred, json[QString("mobilePreferred")]);
    m_mobile_preferred_isSet = !json[QString("mobilePreferred")].isNull() && m_mobile_preferred_isValid;

    m_start_date_isValid = ::OpenAPI::fromJsonValue(m_start_date, json[QString("startDate")]);
    m_start_date_isSet = !json[QString("startDate")].isNull() && m_start_date_isValid;

    m_tracking_id_isValid = ::OpenAPI::fromJsonValue(m_tracking_id, json[QString("trackingId")]);
    m_tracking_id_isSet = !json[QString("trackingId")].isNull() && m_tracking_id_isValid;

    m_use_searcher_time_zone_isValid = ::OpenAPI::fromJsonValue(m_use_searcher_time_zone, json[QString("useSearcherTimeZone")]);
    m_use_searcher_time_zone_isSet = !json[QString("useSearcherTimeZone")].isNull() && m_use_searcher_time_zone_isValid;
}

QString OAIGoogleAdsSearchads360V0Common__UnifiedSitelinkAsset::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleAdsSearchads360V0Common__UnifiedSitelinkAsset::asJsonObject() const {
    QJsonObject obj;
    if (m_ad_schedule_targets.size() > 0) {
        obj.insert(QString("adScheduleTargets"), ::OpenAPI::toJsonValue(m_ad_schedule_targets));
    }
    if (m_description1_isSet) {
        obj.insert(QString("description1"), ::OpenAPI::toJsonValue(m_description1));
    }
    if (m_description2_isSet) {
        obj.insert(QString("description2"), ::OpenAPI::toJsonValue(m_description2));
    }
    if (m_end_date_isSet) {
        obj.insert(QString("endDate"), ::OpenAPI::toJsonValue(m_end_date));
    }
    if (m_link_text_isSet) {
        obj.insert(QString("linkText"), ::OpenAPI::toJsonValue(m_link_text));
    }
    if (m_mobile_preferred_isSet) {
        obj.insert(QString("mobilePreferred"), ::OpenAPI::toJsonValue(m_mobile_preferred));
    }
    if (m_start_date_isSet) {
        obj.insert(QString("startDate"), ::OpenAPI::toJsonValue(m_start_date));
    }
    if (m_tracking_id_isSet) {
        obj.insert(QString("trackingId"), ::OpenAPI::toJsonValue(m_tracking_id));
    }
    if (m_use_searcher_time_zone_isSet) {
        obj.insert(QString("useSearcherTimeZone"), ::OpenAPI::toJsonValue(m_use_searcher_time_zone));
    }
    return obj;
}

QList<OAIGoogleAdsSearchads360V0Common__AdScheduleInfo> OAIGoogleAdsSearchads360V0Common__UnifiedSitelinkAsset::getAdScheduleTargets() const {
    return m_ad_schedule_targets;
}
void OAIGoogleAdsSearchads360V0Common__UnifiedSitelinkAsset::setAdScheduleTargets(const QList<OAIGoogleAdsSearchads360V0Common__AdScheduleInfo> &ad_schedule_targets) {
    m_ad_schedule_targets = ad_schedule_targets;
    m_ad_schedule_targets_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__UnifiedSitelinkAsset::is_ad_schedule_targets_Set() const{
    return m_ad_schedule_targets_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__UnifiedSitelinkAsset::is_ad_schedule_targets_Valid() const{
    return m_ad_schedule_targets_isValid;
}

QString OAIGoogleAdsSearchads360V0Common__UnifiedSitelinkAsset::getDescription1() const {
    return m_description1;
}
void OAIGoogleAdsSearchads360V0Common__UnifiedSitelinkAsset::setDescription1(const QString &description1) {
    m_description1 = description1;
    m_description1_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__UnifiedSitelinkAsset::is_description1_Set() const{
    return m_description1_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__UnifiedSitelinkAsset::is_description1_Valid() const{
    return m_description1_isValid;
}

QString OAIGoogleAdsSearchads360V0Common__UnifiedSitelinkAsset::getDescription2() const {
    return m_description2;
}
void OAIGoogleAdsSearchads360V0Common__UnifiedSitelinkAsset::setDescription2(const QString &description2) {
    m_description2 = description2;
    m_description2_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__UnifiedSitelinkAsset::is_description2_Set() const{
    return m_description2_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__UnifiedSitelinkAsset::is_description2_Valid() const{
    return m_description2_isValid;
}

QString OAIGoogleAdsSearchads360V0Common__UnifiedSitelinkAsset::getEndDate() const {
    return m_end_date;
}
void OAIGoogleAdsSearchads360V0Common__UnifiedSitelinkAsset::setEndDate(const QString &end_date) {
    m_end_date = end_date;
    m_end_date_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__UnifiedSitelinkAsset::is_end_date_Set() const{
    return m_end_date_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__UnifiedSitelinkAsset::is_end_date_Valid() const{
    return m_end_date_isValid;
}

QString OAIGoogleAdsSearchads360V0Common__UnifiedSitelinkAsset::getLinkText() const {
    return m_link_text;
}
void OAIGoogleAdsSearchads360V0Common__UnifiedSitelinkAsset::setLinkText(const QString &link_text) {
    m_link_text = link_text;
    m_link_text_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__UnifiedSitelinkAsset::is_link_text_Set() const{
    return m_link_text_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__UnifiedSitelinkAsset::is_link_text_Valid() const{
    return m_link_text_isValid;
}

bool OAIGoogleAdsSearchads360V0Common__UnifiedSitelinkAsset::isMobilePreferred() const {
    return m_mobile_preferred;
}
void OAIGoogleAdsSearchads360V0Common__UnifiedSitelinkAsset::setMobilePreferred(const bool &mobile_preferred) {
    m_mobile_preferred = mobile_preferred;
    m_mobile_preferred_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__UnifiedSitelinkAsset::is_mobile_preferred_Set() const{
    return m_mobile_preferred_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__UnifiedSitelinkAsset::is_mobile_preferred_Valid() const{
    return m_mobile_preferred_isValid;
}

QString OAIGoogleAdsSearchads360V0Common__UnifiedSitelinkAsset::getStartDate() const {
    return m_start_date;
}
void OAIGoogleAdsSearchads360V0Common__UnifiedSitelinkAsset::setStartDate(const QString &start_date) {
    m_start_date = start_date;
    m_start_date_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__UnifiedSitelinkAsset::is_start_date_Set() const{
    return m_start_date_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__UnifiedSitelinkAsset::is_start_date_Valid() const{
    return m_start_date_isValid;
}

QString OAIGoogleAdsSearchads360V0Common__UnifiedSitelinkAsset::getTrackingId() const {
    return m_tracking_id;
}
void OAIGoogleAdsSearchads360V0Common__UnifiedSitelinkAsset::setTrackingId(const QString &tracking_id) {
    m_tracking_id = tracking_id;
    m_tracking_id_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__UnifiedSitelinkAsset::is_tracking_id_Set() const{
    return m_tracking_id_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__UnifiedSitelinkAsset::is_tracking_id_Valid() const{
    return m_tracking_id_isValid;
}

bool OAIGoogleAdsSearchads360V0Common__UnifiedSitelinkAsset::isUseSearcherTimeZone() const {
    return m_use_searcher_time_zone;
}
void OAIGoogleAdsSearchads360V0Common__UnifiedSitelinkAsset::setUseSearcherTimeZone(const bool &use_searcher_time_zone) {
    m_use_searcher_time_zone = use_searcher_time_zone;
    m_use_searcher_time_zone_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__UnifiedSitelinkAsset::is_use_searcher_time_zone_Set() const{
    return m_use_searcher_time_zone_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__UnifiedSitelinkAsset::is_use_searcher_time_zone_Valid() const{
    return m_use_searcher_time_zone_isValid;
}

bool OAIGoogleAdsSearchads360V0Common__UnifiedSitelinkAsset::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_ad_schedule_targets.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_description1_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description2_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_link_text_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mobile_preferred_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tracking_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_use_searcher_time_zone_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleAdsSearchads360V0Common__UnifiedSitelinkAsset::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
