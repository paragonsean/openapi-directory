/**
 * Search Ads 360 Reporting API
 * The Search Ads 360 API allows developers to automate downloading reports from Search Ads 360.
 *
 * The version of the OpenAPI document: v0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleAdsSearchads360V0Resources__GeoTargetConstant.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleAdsSearchads360V0Resources__GeoTargetConstant::OAIGoogleAdsSearchads360V0Resources__GeoTargetConstant(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleAdsSearchads360V0Resources__GeoTargetConstant::OAIGoogleAdsSearchads360V0Resources__GeoTargetConstant() {
    this->initializeModel();
}

OAIGoogleAdsSearchads360V0Resources__GeoTargetConstant::~OAIGoogleAdsSearchads360V0Resources__GeoTargetConstant() {}

void OAIGoogleAdsSearchads360V0Resources__GeoTargetConstant::initializeModel() {

    m_canonical_name_isSet = false;
    m_canonical_name_isValid = false;

    m_country_code_isSet = false;
    m_country_code_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_parent_geo_target_isSet = false;
    m_parent_geo_target_isValid = false;

    m_resource_name_isSet = false;
    m_resource_name_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_target_type_isSet = false;
    m_target_type_isValid = false;
}

void OAIGoogleAdsSearchads360V0Resources__GeoTargetConstant::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleAdsSearchads360V0Resources__GeoTargetConstant::fromJsonObject(QJsonObject json) {

    m_canonical_name_isValid = ::OpenAPI::fromJsonValue(m_canonical_name, json[QString("canonicalName")]);
    m_canonical_name_isSet = !json[QString("canonicalName")].isNull() && m_canonical_name_isValid;

    m_country_code_isValid = ::OpenAPI::fromJsonValue(m_country_code, json[QString("countryCode")]);
    m_country_code_isSet = !json[QString("countryCode")].isNull() && m_country_code_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_parent_geo_target_isValid = ::OpenAPI::fromJsonValue(m_parent_geo_target, json[QString("parentGeoTarget")]);
    m_parent_geo_target_isSet = !json[QString("parentGeoTarget")].isNull() && m_parent_geo_target_isValid;

    m_resource_name_isValid = ::OpenAPI::fromJsonValue(m_resource_name, json[QString("resourceName")]);
    m_resource_name_isSet = !json[QString("resourceName")].isNull() && m_resource_name_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_target_type_isValid = ::OpenAPI::fromJsonValue(m_target_type, json[QString("targetType")]);
    m_target_type_isSet = !json[QString("targetType")].isNull() && m_target_type_isValid;
}

QString OAIGoogleAdsSearchads360V0Resources__GeoTargetConstant::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleAdsSearchads360V0Resources__GeoTargetConstant::asJsonObject() const {
    QJsonObject obj;
    if (m_canonical_name_isSet) {
        obj.insert(QString("canonicalName"), ::OpenAPI::toJsonValue(m_canonical_name));
    }
    if (m_country_code_isSet) {
        obj.insert(QString("countryCode"), ::OpenAPI::toJsonValue(m_country_code));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_parent_geo_target_isSet) {
        obj.insert(QString("parentGeoTarget"), ::OpenAPI::toJsonValue(m_parent_geo_target));
    }
    if (m_resource_name_isSet) {
        obj.insert(QString("resourceName"), ::OpenAPI::toJsonValue(m_resource_name));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_target_type_isSet) {
        obj.insert(QString("targetType"), ::OpenAPI::toJsonValue(m_target_type));
    }
    return obj;
}

QString OAIGoogleAdsSearchads360V0Resources__GeoTargetConstant::getCanonicalName() const {
    return m_canonical_name;
}
void OAIGoogleAdsSearchads360V0Resources__GeoTargetConstant::setCanonicalName(const QString &canonical_name) {
    m_canonical_name = canonical_name;
    m_canonical_name_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Resources__GeoTargetConstant::is_canonical_name_Set() const{
    return m_canonical_name_isSet;
}

bool OAIGoogleAdsSearchads360V0Resources__GeoTargetConstant::is_canonical_name_Valid() const{
    return m_canonical_name_isValid;
}

QString OAIGoogleAdsSearchads360V0Resources__GeoTargetConstant::getCountryCode() const {
    return m_country_code;
}
void OAIGoogleAdsSearchads360V0Resources__GeoTargetConstant::setCountryCode(const QString &country_code) {
    m_country_code = country_code;
    m_country_code_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Resources__GeoTargetConstant::is_country_code_Set() const{
    return m_country_code_isSet;
}

bool OAIGoogleAdsSearchads360V0Resources__GeoTargetConstant::is_country_code_Valid() const{
    return m_country_code_isValid;
}

QString OAIGoogleAdsSearchads360V0Resources__GeoTargetConstant::getId() const {
    return m_id;
}
void OAIGoogleAdsSearchads360V0Resources__GeoTargetConstant::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Resources__GeoTargetConstant::is_id_Set() const{
    return m_id_isSet;
}

bool OAIGoogleAdsSearchads360V0Resources__GeoTargetConstant::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIGoogleAdsSearchads360V0Resources__GeoTargetConstant::getName() const {
    return m_name;
}
void OAIGoogleAdsSearchads360V0Resources__GeoTargetConstant::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Resources__GeoTargetConstant::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleAdsSearchads360V0Resources__GeoTargetConstant::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGoogleAdsSearchads360V0Resources__GeoTargetConstant::getParentGeoTarget() const {
    return m_parent_geo_target;
}
void OAIGoogleAdsSearchads360V0Resources__GeoTargetConstant::setParentGeoTarget(const QString &parent_geo_target) {
    m_parent_geo_target = parent_geo_target;
    m_parent_geo_target_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Resources__GeoTargetConstant::is_parent_geo_target_Set() const{
    return m_parent_geo_target_isSet;
}

bool OAIGoogleAdsSearchads360V0Resources__GeoTargetConstant::is_parent_geo_target_Valid() const{
    return m_parent_geo_target_isValid;
}

QString OAIGoogleAdsSearchads360V0Resources__GeoTargetConstant::getResourceName() const {
    return m_resource_name;
}
void OAIGoogleAdsSearchads360V0Resources__GeoTargetConstant::setResourceName(const QString &resource_name) {
    m_resource_name = resource_name;
    m_resource_name_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Resources__GeoTargetConstant::is_resource_name_Set() const{
    return m_resource_name_isSet;
}

bool OAIGoogleAdsSearchads360V0Resources__GeoTargetConstant::is_resource_name_Valid() const{
    return m_resource_name_isValid;
}

QString OAIGoogleAdsSearchads360V0Resources__GeoTargetConstant::getStatus() const {
    return m_status;
}
void OAIGoogleAdsSearchads360V0Resources__GeoTargetConstant::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Resources__GeoTargetConstant::is_status_Set() const{
    return m_status_isSet;
}

bool OAIGoogleAdsSearchads360V0Resources__GeoTargetConstant::is_status_Valid() const{
    return m_status_isValid;
}

QString OAIGoogleAdsSearchads360V0Resources__GeoTargetConstant::getTargetType() const {
    return m_target_type;
}
void OAIGoogleAdsSearchads360V0Resources__GeoTargetConstant::setTargetType(const QString &target_type) {
    m_target_type = target_type;
    m_target_type_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Resources__GeoTargetConstant::is_target_type_Set() const{
    return m_target_type_isSet;
}

bool OAIGoogleAdsSearchads360V0Resources__GeoTargetConstant::is_target_type_Valid() const{
    return m_target_type_isValid;
}

bool OAIGoogleAdsSearchads360V0Resources__GeoTargetConstant::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_canonical_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_country_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_parent_geo_target_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_target_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleAdsSearchads360V0Resources__GeoTargetConstant::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
