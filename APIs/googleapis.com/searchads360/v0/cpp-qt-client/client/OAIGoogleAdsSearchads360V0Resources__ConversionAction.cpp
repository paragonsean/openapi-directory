/**
 * Search Ads 360 Reporting API
 * The Search Ads 360 API allows developers to automate downloading reports from Search Ads 360.
 *
 * The version of the OpenAPI document: v0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleAdsSearchads360V0Resources__ConversionAction.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleAdsSearchads360V0Resources__ConversionAction::OAIGoogleAdsSearchads360V0Resources__ConversionAction(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleAdsSearchads360V0Resources__ConversionAction::OAIGoogleAdsSearchads360V0Resources__ConversionAction() {
    this->initializeModel();
}

OAIGoogleAdsSearchads360V0Resources__ConversionAction::~OAIGoogleAdsSearchads360V0Resources__ConversionAction() {}

void OAIGoogleAdsSearchads360V0Resources__ConversionAction::initializeModel() {

    m_app_id_isSet = false;
    m_app_id_isValid = false;

    m_attribution_model_settings_isSet = false;
    m_attribution_model_settings_isValid = false;

    m_category_isSet = false;
    m_category_isValid = false;

    m_click_through_lookback_window_days_isSet = false;
    m_click_through_lookback_window_days_isValid = false;

    m_creation_time_isSet = false;
    m_creation_time_isValid = false;

    m_floodlight_settings_isSet = false;
    m_floodlight_settings_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_include_in_client_account_conversions_metric_isSet = false;
    m_include_in_client_account_conversions_metric_isValid = false;

    m_include_in_conversions_metric_isSet = false;
    m_include_in_conversions_metric_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_owner_customer_isSet = false;
    m_owner_customer_isValid = false;

    m_primary_for_goal_isSet = false;
    m_primary_for_goal_isValid = false;

    m_resource_name_isSet = false;
    m_resource_name_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;

    m_value_settings_isSet = false;
    m_value_settings_isValid = false;
}

void OAIGoogleAdsSearchads360V0Resources__ConversionAction::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleAdsSearchads360V0Resources__ConversionAction::fromJsonObject(QJsonObject json) {

    m_app_id_isValid = ::OpenAPI::fromJsonValue(m_app_id, json[QString("appId")]);
    m_app_id_isSet = !json[QString("appId")].isNull() && m_app_id_isValid;

    m_attribution_model_settings_isValid = ::OpenAPI::fromJsonValue(m_attribution_model_settings, json[QString("attributionModelSettings")]);
    m_attribution_model_settings_isSet = !json[QString("attributionModelSettings")].isNull() && m_attribution_model_settings_isValid;

    m_category_isValid = ::OpenAPI::fromJsonValue(m_category, json[QString("category")]);
    m_category_isSet = !json[QString("category")].isNull() && m_category_isValid;

    m_click_through_lookback_window_days_isValid = ::OpenAPI::fromJsonValue(m_click_through_lookback_window_days, json[QString("clickThroughLookbackWindowDays")]);
    m_click_through_lookback_window_days_isSet = !json[QString("clickThroughLookbackWindowDays")].isNull() && m_click_through_lookback_window_days_isValid;

    m_creation_time_isValid = ::OpenAPI::fromJsonValue(m_creation_time, json[QString("creationTime")]);
    m_creation_time_isSet = !json[QString("creationTime")].isNull() && m_creation_time_isValid;

    m_floodlight_settings_isValid = ::OpenAPI::fromJsonValue(m_floodlight_settings, json[QString("floodlightSettings")]);
    m_floodlight_settings_isSet = !json[QString("floodlightSettings")].isNull() && m_floodlight_settings_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_include_in_client_account_conversions_metric_isValid = ::OpenAPI::fromJsonValue(m_include_in_client_account_conversions_metric, json[QString("includeInClientAccountConversionsMetric")]);
    m_include_in_client_account_conversions_metric_isSet = !json[QString("includeInClientAccountConversionsMetric")].isNull() && m_include_in_client_account_conversions_metric_isValid;

    m_include_in_conversions_metric_isValid = ::OpenAPI::fromJsonValue(m_include_in_conversions_metric, json[QString("includeInConversionsMetric")]);
    m_include_in_conversions_metric_isSet = !json[QString("includeInConversionsMetric")].isNull() && m_include_in_conversions_metric_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_owner_customer_isValid = ::OpenAPI::fromJsonValue(m_owner_customer, json[QString("ownerCustomer")]);
    m_owner_customer_isSet = !json[QString("ownerCustomer")].isNull() && m_owner_customer_isValid;

    m_primary_for_goal_isValid = ::OpenAPI::fromJsonValue(m_primary_for_goal, json[QString("primaryForGoal")]);
    m_primary_for_goal_isSet = !json[QString("primaryForGoal")].isNull() && m_primary_for_goal_isValid;

    m_resource_name_isValid = ::OpenAPI::fromJsonValue(m_resource_name, json[QString("resourceName")]);
    m_resource_name_isSet = !json[QString("resourceName")].isNull() && m_resource_name_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;

    m_value_settings_isValid = ::OpenAPI::fromJsonValue(m_value_settings, json[QString("valueSettings")]);
    m_value_settings_isSet = !json[QString("valueSettings")].isNull() && m_value_settings_isValid;
}

QString OAIGoogleAdsSearchads360V0Resources__ConversionAction::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleAdsSearchads360V0Resources__ConversionAction::asJsonObject() const {
    QJsonObject obj;
    if (m_app_id_isSet) {
        obj.insert(QString("appId"), ::OpenAPI::toJsonValue(m_app_id));
    }
    if (m_attribution_model_settings.isSet()) {
        obj.insert(QString("attributionModelSettings"), ::OpenAPI::toJsonValue(m_attribution_model_settings));
    }
    if (m_category_isSet) {
        obj.insert(QString("category"), ::OpenAPI::toJsonValue(m_category));
    }
    if (m_click_through_lookback_window_days_isSet) {
        obj.insert(QString("clickThroughLookbackWindowDays"), ::OpenAPI::toJsonValue(m_click_through_lookback_window_days));
    }
    if (m_creation_time_isSet) {
        obj.insert(QString("creationTime"), ::OpenAPI::toJsonValue(m_creation_time));
    }
    if (m_floodlight_settings.isSet()) {
        obj.insert(QString("floodlightSettings"), ::OpenAPI::toJsonValue(m_floodlight_settings));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_include_in_client_account_conversions_metric_isSet) {
        obj.insert(QString("includeInClientAccountConversionsMetric"), ::OpenAPI::toJsonValue(m_include_in_client_account_conversions_metric));
    }
    if (m_include_in_conversions_metric_isSet) {
        obj.insert(QString("includeInConversionsMetric"), ::OpenAPI::toJsonValue(m_include_in_conversions_metric));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_owner_customer_isSet) {
        obj.insert(QString("ownerCustomer"), ::OpenAPI::toJsonValue(m_owner_customer));
    }
    if (m_primary_for_goal_isSet) {
        obj.insert(QString("primaryForGoal"), ::OpenAPI::toJsonValue(m_primary_for_goal));
    }
    if (m_resource_name_isSet) {
        obj.insert(QString("resourceName"), ::OpenAPI::toJsonValue(m_resource_name));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    if (m_value_settings.isSet()) {
        obj.insert(QString("valueSettings"), ::OpenAPI::toJsonValue(m_value_settings));
    }
    return obj;
}

QString OAIGoogleAdsSearchads360V0Resources__ConversionAction::getAppId() const {
    return m_app_id;
}
void OAIGoogleAdsSearchads360V0Resources__ConversionAction::setAppId(const QString &app_id) {
    m_app_id = app_id;
    m_app_id_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Resources__ConversionAction::is_app_id_Set() const{
    return m_app_id_isSet;
}

bool OAIGoogleAdsSearchads360V0Resources__ConversionAction::is_app_id_Valid() const{
    return m_app_id_isValid;
}

OAIGoogleAdsSearchads360V0Resources_ConversionAction_AttributionModelSettings OAIGoogleAdsSearchads360V0Resources__ConversionAction::getAttributionModelSettings() const {
    return m_attribution_model_settings;
}
void OAIGoogleAdsSearchads360V0Resources__ConversionAction::setAttributionModelSettings(const OAIGoogleAdsSearchads360V0Resources_ConversionAction_AttributionModelSettings &attribution_model_settings) {
    m_attribution_model_settings = attribution_model_settings;
    m_attribution_model_settings_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Resources__ConversionAction::is_attribution_model_settings_Set() const{
    return m_attribution_model_settings_isSet;
}

bool OAIGoogleAdsSearchads360V0Resources__ConversionAction::is_attribution_model_settings_Valid() const{
    return m_attribution_model_settings_isValid;
}

QString OAIGoogleAdsSearchads360V0Resources__ConversionAction::getCategory() const {
    return m_category;
}
void OAIGoogleAdsSearchads360V0Resources__ConversionAction::setCategory(const QString &category) {
    m_category = category;
    m_category_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Resources__ConversionAction::is_category_Set() const{
    return m_category_isSet;
}

bool OAIGoogleAdsSearchads360V0Resources__ConversionAction::is_category_Valid() const{
    return m_category_isValid;
}

QString OAIGoogleAdsSearchads360V0Resources__ConversionAction::getClickThroughLookbackWindowDays() const {
    return m_click_through_lookback_window_days;
}
void OAIGoogleAdsSearchads360V0Resources__ConversionAction::setClickThroughLookbackWindowDays(const QString &click_through_lookback_window_days) {
    m_click_through_lookback_window_days = click_through_lookback_window_days;
    m_click_through_lookback_window_days_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Resources__ConversionAction::is_click_through_lookback_window_days_Set() const{
    return m_click_through_lookback_window_days_isSet;
}

bool OAIGoogleAdsSearchads360V0Resources__ConversionAction::is_click_through_lookback_window_days_Valid() const{
    return m_click_through_lookback_window_days_isValid;
}

QString OAIGoogleAdsSearchads360V0Resources__ConversionAction::getCreationTime() const {
    return m_creation_time;
}
void OAIGoogleAdsSearchads360V0Resources__ConversionAction::setCreationTime(const QString &creation_time) {
    m_creation_time = creation_time;
    m_creation_time_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Resources__ConversionAction::is_creation_time_Set() const{
    return m_creation_time_isSet;
}

bool OAIGoogleAdsSearchads360V0Resources__ConversionAction::is_creation_time_Valid() const{
    return m_creation_time_isValid;
}

OAIGoogleAdsSearchads360V0Resources_ConversionAction_FloodlightSettings OAIGoogleAdsSearchads360V0Resources__ConversionAction::getFloodlightSettings() const {
    return m_floodlight_settings;
}
void OAIGoogleAdsSearchads360V0Resources__ConversionAction::setFloodlightSettings(const OAIGoogleAdsSearchads360V0Resources_ConversionAction_FloodlightSettings &floodlight_settings) {
    m_floodlight_settings = floodlight_settings;
    m_floodlight_settings_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Resources__ConversionAction::is_floodlight_settings_Set() const{
    return m_floodlight_settings_isSet;
}

bool OAIGoogleAdsSearchads360V0Resources__ConversionAction::is_floodlight_settings_Valid() const{
    return m_floodlight_settings_isValid;
}

QString OAIGoogleAdsSearchads360V0Resources__ConversionAction::getId() const {
    return m_id;
}
void OAIGoogleAdsSearchads360V0Resources__ConversionAction::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Resources__ConversionAction::is_id_Set() const{
    return m_id_isSet;
}

bool OAIGoogleAdsSearchads360V0Resources__ConversionAction::is_id_Valid() const{
    return m_id_isValid;
}

bool OAIGoogleAdsSearchads360V0Resources__ConversionAction::isIncludeInClientAccountConversionsMetric() const {
    return m_include_in_client_account_conversions_metric;
}
void OAIGoogleAdsSearchads360V0Resources__ConversionAction::setIncludeInClientAccountConversionsMetric(const bool &include_in_client_account_conversions_metric) {
    m_include_in_client_account_conversions_metric = include_in_client_account_conversions_metric;
    m_include_in_client_account_conversions_metric_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Resources__ConversionAction::is_include_in_client_account_conversions_metric_Set() const{
    return m_include_in_client_account_conversions_metric_isSet;
}

bool OAIGoogleAdsSearchads360V0Resources__ConversionAction::is_include_in_client_account_conversions_metric_Valid() const{
    return m_include_in_client_account_conversions_metric_isValid;
}

bool OAIGoogleAdsSearchads360V0Resources__ConversionAction::isIncludeInConversionsMetric() const {
    return m_include_in_conversions_metric;
}
void OAIGoogleAdsSearchads360V0Resources__ConversionAction::setIncludeInConversionsMetric(const bool &include_in_conversions_metric) {
    m_include_in_conversions_metric = include_in_conversions_metric;
    m_include_in_conversions_metric_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Resources__ConversionAction::is_include_in_conversions_metric_Set() const{
    return m_include_in_conversions_metric_isSet;
}

bool OAIGoogleAdsSearchads360V0Resources__ConversionAction::is_include_in_conversions_metric_Valid() const{
    return m_include_in_conversions_metric_isValid;
}

QString OAIGoogleAdsSearchads360V0Resources__ConversionAction::getName() const {
    return m_name;
}
void OAIGoogleAdsSearchads360V0Resources__ConversionAction::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Resources__ConversionAction::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleAdsSearchads360V0Resources__ConversionAction::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGoogleAdsSearchads360V0Resources__ConversionAction::getOwnerCustomer() const {
    return m_owner_customer;
}
void OAIGoogleAdsSearchads360V0Resources__ConversionAction::setOwnerCustomer(const QString &owner_customer) {
    m_owner_customer = owner_customer;
    m_owner_customer_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Resources__ConversionAction::is_owner_customer_Set() const{
    return m_owner_customer_isSet;
}

bool OAIGoogleAdsSearchads360V0Resources__ConversionAction::is_owner_customer_Valid() const{
    return m_owner_customer_isValid;
}

bool OAIGoogleAdsSearchads360V0Resources__ConversionAction::isPrimaryForGoal() const {
    return m_primary_for_goal;
}
void OAIGoogleAdsSearchads360V0Resources__ConversionAction::setPrimaryForGoal(const bool &primary_for_goal) {
    m_primary_for_goal = primary_for_goal;
    m_primary_for_goal_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Resources__ConversionAction::is_primary_for_goal_Set() const{
    return m_primary_for_goal_isSet;
}

bool OAIGoogleAdsSearchads360V0Resources__ConversionAction::is_primary_for_goal_Valid() const{
    return m_primary_for_goal_isValid;
}

QString OAIGoogleAdsSearchads360V0Resources__ConversionAction::getResourceName() const {
    return m_resource_name;
}
void OAIGoogleAdsSearchads360V0Resources__ConversionAction::setResourceName(const QString &resource_name) {
    m_resource_name = resource_name;
    m_resource_name_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Resources__ConversionAction::is_resource_name_Set() const{
    return m_resource_name_isSet;
}

bool OAIGoogleAdsSearchads360V0Resources__ConversionAction::is_resource_name_Valid() const{
    return m_resource_name_isValid;
}

QString OAIGoogleAdsSearchads360V0Resources__ConversionAction::getStatus() const {
    return m_status;
}
void OAIGoogleAdsSearchads360V0Resources__ConversionAction::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Resources__ConversionAction::is_status_Set() const{
    return m_status_isSet;
}

bool OAIGoogleAdsSearchads360V0Resources__ConversionAction::is_status_Valid() const{
    return m_status_isValid;
}

QString OAIGoogleAdsSearchads360V0Resources__ConversionAction::getType() const {
    return m_type;
}
void OAIGoogleAdsSearchads360V0Resources__ConversionAction::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Resources__ConversionAction::is_type_Set() const{
    return m_type_isSet;
}

bool OAIGoogleAdsSearchads360V0Resources__ConversionAction::is_type_Valid() const{
    return m_type_isValid;
}

OAIGoogleAdsSearchads360V0Resources_ConversionAction_ValueSettings OAIGoogleAdsSearchads360V0Resources__ConversionAction::getValueSettings() const {
    return m_value_settings;
}
void OAIGoogleAdsSearchads360V0Resources__ConversionAction::setValueSettings(const OAIGoogleAdsSearchads360V0Resources_ConversionAction_ValueSettings &value_settings) {
    m_value_settings = value_settings;
    m_value_settings_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Resources__ConversionAction::is_value_settings_Set() const{
    return m_value_settings_isSet;
}

bool OAIGoogleAdsSearchads360V0Resources__ConversionAction::is_value_settings_Valid() const{
    return m_value_settings_isValid;
}

bool OAIGoogleAdsSearchads360V0Resources__ConversionAction::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_app_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_attribution_model_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_category_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_click_through_lookback_window_days_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_creation_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_floodlight_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_include_in_client_account_conversions_metric_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_include_in_conversions_metric_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_owner_customer_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_primary_for_goal_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleAdsSearchads360V0Resources__ConversionAction::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
