/**
 * Search Ads 360 Reporting API
 * The Search Ads 360 API allows developers to automate downloading reports from Search Ads 360.
 *
 * The version of the OpenAPI document: v0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleAdsSearchads360V0Services__SearchSearchAds360FieldsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleAdsSearchads360V0Services__SearchSearchAds360FieldsResponse::OAIGoogleAdsSearchads360V0Services__SearchSearchAds360FieldsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleAdsSearchads360V0Services__SearchSearchAds360FieldsResponse::OAIGoogleAdsSearchads360V0Services__SearchSearchAds360FieldsResponse() {
    this->initializeModel();
}

OAIGoogleAdsSearchads360V0Services__SearchSearchAds360FieldsResponse::~OAIGoogleAdsSearchads360V0Services__SearchSearchAds360FieldsResponse() {}

void OAIGoogleAdsSearchads360V0Services__SearchSearchAds360FieldsResponse::initializeModel() {

    m_next_page_token_isSet = false;
    m_next_page_token_isValid = false;

    m_results_isSet = false;
    m_results_isValid = false;

    m_total_results_count_isSet = false;
    m_total_results_count_isValid = false;
}

void OAIGoogleAdsSearchads360V0Services__SearchSearchAds360FieldsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleAdsSearchads360V0Services__SearchSearchAds360FieldsResponse::fromJsonObject(QJsonObject json) {

    m_next_page_token_isValid = ::OpenAPI::fromJsonValue(m_next_page_token, json[QString("nextPageToken")]);
    m_next_page_token_isSet = !json[QString("nextPageToken")].isNull() && m_next_page_token_isValid;

    m_results_isValid = ::OpenAPI::fromJsonValue(m_results, json[QString("results")]);
    m_results_isSet = !json[QString("results")].isNull() && m_results_isValid;

    m_total_results_count_isValid = ::OpenAPI::fromJsonValue(m_total_results_count, json[QString("totalResultsCount")]);
    m_total_results_count_isSet = !json[QString("totalResultsCount")].isNull() && m_total_results_count_isValid;
}

QString OAIGoogleAdsSearchads360V0Services__SearchSearchAds360FieldsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleAdsSearchads360V0Services__SearchSearchAds360FieldsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_next_page_token_isSet) {
        obj.insert(QString("nextPageToken"), ::OpenAPI::toJsonValue(m_next_page_token));
    }
    if (m_results.size() > 0) {
        obj.insert(QString("results"), ::OpenAPI::toJsonValue(m_results));
    }
    if (m_total_results_count_isSet) {
        obj.insert(QString("totalResultsCount"), ::OpenAPI::toJsonValue(m_total_results_count));
    }
    return obj;
}

QString OAIGoogleAdsSearchads360V0Services__SearchSearchAds360FieldsResponse::getNextPageToken() const {
    return m_next_page_token;
}
void OAIGoogleAdsSearchads360V0Services__SearchSearchAds360FieldsResponse::setNextPageToken(const QString &next_page_token) {
    m_next_page_token = next_page_token;
    m_next_page_token_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Services__SearchSearchAds360FieldsResponse::is_next_page_token_Set() const{
    return m_next_page_token_isSet;
}

bool OAIGoogleAdsSearchads360V0Services__SearchSearchAds360FieldsResponse::is_next_page_token_Valid() const{
    return m_next_page_token_isValid;
}

QList<OAIGoogleAdsSearchads360V0Resources__SearchAds360Field> OAIGoogleAdsSearchads360V0Services__SearchSearchAds360FieldsResponse::getResults() const {
    return m_results;
}
void OAIGoogleAdsSearchads360V0Services__SearchSearchAds360FieldsResponse::setResults(const QList<OAIGoogleAdsSearchads360V0Resources__SearchAds360Field> &results) {
    m_results = results;
    m_results_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Services__SearchSearchAds360FieldsResponse::is_results_Set() const{
    return m_results_isSet;
}

bool OAIGoogleAdsSearchads360V0Services__SearchSearchAds360FieldsResponse::is_results_Valid() const{
    return m_results_isValid;
}

QString OAIGoogleAdsSearchads360V0Services__SearchSearchAds360FieldsResponse::getTotalResultsCount() const {
    return m_total_results_count;
}
void OAIGoogleAdsSearchads360V0Services__SearchSearchAds360FieldsResponse::setTotalResultsCount(const QString &total_results_count) {
    m_total_results_count = total_results_count;
    m_total_results_count_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Services__SearchSearchAds360FieldsResponse::is_total_results_count_Set() const{
    return m_total_results_count_isSet;
}

bool OAIGoogleAdsSearchads360V0Services__SearchSearchAds360FieldsResponse::is_total_results_count_Valid() const{
    return m_total_results_count_isValid;
}

bool OAIGoogleAdsSearchads360V0Services__SearchSearchAds360FieldsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_next_page_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_results.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_results_count_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleAdsSearchads360V0Services__SearchSearchAds360FieldsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
