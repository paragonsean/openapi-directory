/**
 * Search Ads 360 Reporting API
 * The Search Ads 360 API allows developers to automate downloading reports from Search Ads 360.
 *
 * The version of the OpenAPI document: v0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleAdsSearchads360V0Common__WebpageConditionInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleAdsSearchads360V0Common__WebpageConditionInfo::OAIGoogleAdsSearchads360V0Common__WebpageConditionInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleAdsSearchads360V0Common__WebpageConditionInfo::OAIGoogleAdsSearchads360V0Common__WebpageConditionInfo() {
    this->initializeModel();
}

OAIGoogleAdsSearchads360V0Common__WebpageConditionInfo::~OAIGoogleAdsSearchads360V0Common__WebpageConditionInfo() {}

void OAIGoogleAdsSearchads360V0Common__WebpageConditionInfo::initializeModel() {

    m_argument_isSet = false;
    m_argument_isValid = false;

    m_operand_isSet = false;
    m_operand_isValid = false;

    m_r_operator_isSet = false;
    m_r_operator_isValid = false;
}

void OAIGoogleAdsSearchads360V0Common__WebpageConditionInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleAdsSearchads360V0Common__WebpageConditionInfo::fromJsonObject(QJsonObject json) {

    m_argument_isValid = ::OpenAPI::fromJsonValue(m_argument, json[QString("argument")]);
    m_argument_isSet = !json[QString("argument")].isNull() && m_argument_isValid;

    m_operand_isValid = ::OpenAPI::fromJsonValue(m_operand, json[QString("operand")]);
    m_operand_isSet = !json[QString("operand")].isNull() && m_operand_isValid;

    m_r_operator_isValid = ::OpenAPI::fromJsonValue(m_r_operator, json[QString("operator")]);
    m_r_operator_isSet = !json[QString("operator")].isNull() && m_r_operator_isValid;
}

QString OAIGoogleAdsSearchads360V0Common__WebpageConditionInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleAdsSearchads360V0Common__WebpageConditionInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_argument_isSet) {
        obj.insert(QString("argument"), ::OpenAPI::toJsonValue(m_argument));
    }
    if (m_operand_isSet) {
        obj.insert(QString("operand"), ::OpenAPI::toJsonValue(m_operand));
    }
    if (m_r_operator_isSet) {
        obj.insert(QString("operator"), ::OpenAPI::toJsonValue(m_r_operator));
    }
    return obj;
}

QString OAIGoogleAdsSearchads360V0Common__WebpageConditionInfo::getArgument() const {
    return m_argument;
}
void OAIGoogleAdsSearchads360V0Common__WebpageConditionInfo::setArgument(const QString &argument) {
    m_argument = argument;
    m_argument_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__WebpageConditionInfo::is_argument_Set() const{
    return m_argument_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__WebpageConditionInfo::is_argument_Valid() const{
    return m_argument_isValid;
}

QString OAIGoogleAdsSearchads360V0Common__WebpageConditionInfo::getOperand() const {
    return m_operand;
}
void OAIGoogleAdsSearchads360V0Common__WebpageConditionInfo::setOperand(const QString &operand) {
    m_operand = operand;
    m_operand_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__WebpageConditionInfo::is_operand_Set() const{
    return m_operand_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__WebpageConditionInfo::is_operand_Valid() const{
    return m_operand_isValid;
}

QString OAIGoogleAdsSearchads360V0Common__WebpageConditionInfo::getROperator() const {
    return m_r_operator;
}
void OAIGoogleAdsSearchads360V0Common__WebpageConditionInfo::setROperator(const QString &r_operator) {
    m_r_operator = r_operator;
    m_r_operator_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__WebpageConditionInfo::is_r_operator_Set() const{
    return m_r_operator_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__WebpageConditionInfo::is_r_operator_Valid() const{
    return m_r_operator_isValid;
}

bool OAIGoogleAdsSearchads360V0Common__WebpageConditionInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_argument_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_operand_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_r_operator_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleAdsSearchads360V0Common__WebpageConditionInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
