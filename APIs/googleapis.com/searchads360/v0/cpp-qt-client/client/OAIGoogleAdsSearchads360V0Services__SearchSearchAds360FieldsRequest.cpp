/**
 * Search Ads 360 Reporting API
 * The Search Ads 360 API allows developers to automate downloading reports from Search Ads 360.
 *
 * The version of the OpenAPI document: v0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleAdsSearchads360V0Services__SearchSearchAds360FieldsRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleAdsSearchads360V0Services__SearchSearchAds360FieldsRequest::OAIGoogleAdsSearchads360V0Services__SearchSearchAds360FieldsRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleAdsSearchads360V0Services__SearchSearchAds360FieldsRequest::OAIGoogleAdsSearchads360V0Services__SearchSearchAds360FieldsRequest() {
    this->initializeModel();
}

OAIGoogleAdsSearchads360V0Services__SearchSearchAds360FieldsRequest::~OAIGoogleAdsSearchads360V0Services__SearchSearchAds360FieldsRequest() {}

void OAIGoogleAdsSearchads360V0Services__SearchSearchAds360FieldsRequest::initializeModel() {

    m_page_size_isSet = false;
    m_page_size_isValid = false;

    m_page_token_isSet = false;
    m_page_token_isValid = false;

    m_query_isSet = false;
    m_query_isValid = false;
}

void OAIGoogleAdsSearchads360V0Services__SearchSearchAds360FieldsRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleAdsSearchads360V0Services__SearchSearchAds360FieldsRequest::fromJsonObject(QJsonObject json) {

    m_page_size_isValid = ::OpenAPI::fromJsonValue(m_page_size, json[QString("pageSize")]);
    m_page_size_isSet = !json[QString("pageSize")].isNull() && m_page_size_isValid;

    m_page_token_isValid = ::OpenAPI::fromJsonValue(m_page_token, json[QString("pageToken")]);
    m_page_token_isSet = !json[QString("pageToken")].isNull() && m_page_token_isValid;

    m_query_isValid = ::OpenAPI::fromJsonValue(m_query, json[QString("query")]);
    m_query_isSet = !json[QString("query")].isNull() && m_query_isValid;
}

QString OAIGoogleAdsSearchads360V0Services__SearchSearchAds360FieldsRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleAdsSearchads360V0Services__SearchSearchAds360FieldsRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_page_size_isSet) {
        obj.insert(QString("pageSize"), ::OpenAPI::toJsonValue(m_page_size));
    }
    if (m_page_token_isSet) {
        obj.insert(QString("pageToken"), ::OpenAPI::toJsonValue(m_page_token));
    }
    if (m_query_isSet) {
        obj.insert(QString("query"), ::OpenAPI::toJsonValue(m_query));
    }
    return obj;
}

qint32 OAIGoogleAdsSearchads360V0Services__SearchSearchAds360FieldsRequest::getPageSize() const {
    return m_page_size;
}
void OAIGoogleAdsSearchads360V0Services__SearchSearchAds360FieldsRequest::setPageSize(const qint32 &page_size) {
    m_page_size = page_size;
    m_page_size_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Services__SearchSearchAds360FieldsRequest::is_page_size_Set() const{
    return m_page_size_isSet;
}

bool OAIGoogleAdsSearchads360V0Services__SearchSearchAds360FieldsRequest::is_page_size_Valid() const{
    return m_page_size_isValid;
}

QString OAIGoogleAdsSearchads360V0Services__SearchSearchAds360FieldsRequest::getPageToken() const {
    return m_page_token;
}
void OAIGoogleAdsSearchads360V0Services__SearchSearchAds360FieldsRequest::setPageToken(const QString &page_token) {
    m_page_token = page_token;
    m_page_token_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Services__SearchSearchAds360FieldsRequest::is_page_token_Set() const{
    return m_page_token_isSet;
}

bool OAIGoogleAdsSearchads360V0Services__SearchSearchAds360FieldsRequest::is_page_token_Valid() const{
    return m_page_token_isValid;
}

QString OAIGoogleAdsSearchads360V0Services__SearchSearchAds360FieldsRequest::getQuery() const {
    return m_query;
}
void OAIGoogleAdsSearchads360V0Services__SearchSearchAds360FieldsRequest::setQuery(const QString &query) {
    m_query = query;
    m_query_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Services__SearchSearchAds360FieldsRequest::is_query_Set() const{
    return m_query_isSet;
}

bool OAIGoogleAdsSearchads360V0Services__SearchSearchAds360FieldsRequest::is_query_Valid() const{
    return m_query_isValid;
}

bool OAIGoogleAdsSearchads360V0Services__SearchSearchAds360FieldsRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_page_size_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_page_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_query_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleAdsSearchads360V0Services__SearchSearchAds360FieldsRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
