/**
 * Search Ads 360 Reporting API
 * The Search Ads 360 API allows developers to automate downloading reports from Search Ads 360.
 *
 * The version of the OpenAPI document: v0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleAdsSearchads360V0Resources__SearchAds360Field.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleAdsSearchads360V0Resources__SearchAds360Field::OAIGoogleAdsSearchads360V0Resources__SearchAds360Field(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleAdsSearchads360V0Resources__SearchAds360Field::OAIGoogleAdsSearchads360V0Resources__SearchAds360Field() {
    this->initializeModel();
}

OAIGoogleAdsSearchads360V0Resources__SearchAds360Field::~OAIGoogleAdsSearchads360V0Resources__SearchAds360Field() {}

void OAIGoogleAdsSearchads360V0Resources__SearchAds360Field::initializeModel() {

    m_attribute_resources_isSet = false;
    m_attribute_resources_isValid = false;

    m_category_isSet = false;
    m_category_isValid = false;

    m_data_type_isSet = false;
    m_data_type_isValid = false;

    m_enum_values_isSet = false;
    m_enum_values_isValid = false;

    m_filterable_isSet = false;
    m_filterable_isValid = false;

    m_is_repeated_isSet = false;
    m_is_repeated_isValid = false;

    m_metrics_isSet = false;
    m_metrics_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_resource_name_isSet = false;
    m_resource_name_isValid = false;

    m_segments_isSet = false;
    m_segments_isValid = false;

    m_selectable_isSet = false;
    m_selectable_isValid = false;

    m_selectable_with_isSet = false;
    m_selectable_with_isValid = false;

    m_sortable_isSet = false;
    m_sortable_isValid = false;

    m_type_url_isSet = false;
    m_type_url_isValid = false;
}

void OAIGoogleAdsSearchads360V0Resources__SearchAds360Field::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleAdsSearchads360V0Resources__SearchAds360Field::fromJsonObject(QJsonObject json) {

    m_attribute_resources_isValid = ::OpenAPI::fromJsonValue(m_attribute_resources, json[QString("attributeResources")]);
    m_attribute_resources_isSet = !json[QString("attributeResources")].isNull() && m_attribute_resources_isValid;

    m_category_isValid = ::OpenAPI::fromJsonValue(m_category, json[QString("category")]);
    m_category_isSet = !json[QString("category")].isNull() && m_category_isValid;

    m_data_type_isValid = ::OpenAPI::fromJsonValue(m_data_type, json[QString("dataType")]);
    m_data_type_isSet = !json[QString("dataType")].isNull() && m_data_type_isValid;

    m_enum_values_isValid = ::OpenAPI::fromJsonValue(m_enum_values, json[QString("enumValues")]);
    m_enum_values_isSet = !json[QString("enumValues")].isNull() && m_enum_values_isValid;

    m_filterable_isValid = ::OpenAPI::fromJsonValue(m_filterable, json[QString("filterable")]);
    m_filterable_isSet = !json[QString("filterable")].isNull() && m_filterable_isValid;

    m_is_repeated_isValid = ::OpenAPI::fromJsonValue(m_is_repeated, json[QString("isRepeated")]);
    m_is_repeated_isSet = !json[QString("isRepeated")].isNull() && m_is_repeated_isValid;

    m_metrics_isValid = ::OpenAPI::fromJsonValue(m_metrics, json[QString("metrics")]);
    m_metrics_isSet = !json[QString("metrics")].isNull() && m_metrics_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_resource_name_isValid = ::OpenAPI::fromJsonValue(m_resource_name, json[QString("resourceName")]);
    m_resource_name_isSet = !json[QString("resourceName")].isNull() && m_resource_name_isValid;

    m_segments_isValid = ::OpenAPI::fromJsonValue(m_segments, json[QString("segments")]);
    m_segments_isSet = !json[QString("segments")].isNull() && m_segments_isValid;

    m_selectable_isValid = ::OpenAPI::fromJsonValue(m_selectable, json[QString("selectable")]);
    m_selectable_isSet = !json[QString("selectable")].isNull() && m_selectable_isValid;

    m_selectable_with_isValid = ::OpenAPI::fromJsonValue(m_selectable_with, json[QString("selectableWith")]);
    m_selectable_with_isSet = !json[QString("selectableWith")].isNull() && m_selectable_with_isValid;

    m_sortable_isValid = ::OpenAPI::fromJsonValue(m_sortable, json[QString("sortable")]);
    m_sortable_isSet = !json[QString("sortable")].isNull() && m_sortable_isValid;

    m_type_url_isValid = ::OpenAPI::fromJsonValue(m_type_url, json[QString("typeUrl")]);
    m_type_url_isSet = !json[QString("typeUrl")].isNull() && m_type_url_isValid;
}

QString OAIGoogleAdsSearchads360V0Resources__SearchAds360Field::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleAdsSearchads360V0Resources__SearchAds360Field::asJsonObject() const {
    QJsonObject obj;
    if (m_attribute_resources.size() > 0) {
        obj.insert(QString("attributeResources"), ::OpenAPI::toJsonValue(m_attribute_resources));
    }
    if (m_category_isSet) {
        obj.insert(QString("category"), ::OpenAPI::toJsonValue(m_category));
    }
    if (m_data_type_isSet) {
        obj.insert(QString("dataType"), ::OpenAPI::toJsonValue(m_data_type));
    }
    if (m_enum_values.size() > 0) {
        obj.insert(QString("enumValues"), ::OpenAPI::toJsonValue(m_enum_values));
    }
    if (m_filterable_isSet) {
        obj.insert(QString("filterable"), ::OpenAPI::toJsonValue(m_filterable));
    }
    if (m_is_repeated_isSet) {
        obj.insert(QString("isRepeated"), ::OpenAPI::toJsonValue(m_is_repeated));
    }
    if (m_metrics.size() > 0) {
        obj.insert(QString("metrics"), ::OpenAPI::toJsonValue(m_metrics));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_resource_name_isSet) {
        obj.insert(QString("resourceName"), ::OpenAPI::toJsonValue(m_resource_name));
    }
    if (m_segments.size() > 0) {
        obj.insert(QString("segments"), ::OpenAPI::toJsonValue(m_segments));
    }
    if (m_selectable_isSet) {
        obj.insert(QString("selectable"), ::OpenAPI::toJsonValue(m_selectable));
    }
    if (m_selectable_with.size() > 0) {
        obj.insert(QString("selectableWith"), ::OpenAPI::toJsonValue(m_selectable_with));
    }
    if (m_sortable_isSet) {
        obj.insert(QString("sortable"), ::OpenAPI::toJsonValue(m_sortable));
    }
    if (m_type_url_isSet) {
        obj.insert(QString("typeUrl"), ::OpenAPI::toJsonValue(m_type_url));
    }
    return obj;
}

QList<QString> OAIGoogleAdsSearchads360V0Resources__SearchAds360Field::getAttributeResources() const {
    return m_attribute_resources;
}
void OAIGoogleAdsSearchads360V0Resources__SearchAds360Field::setAttributeResources(const QList<QString> &attribute_resources) {
    m_attribute_resources = attribute_resources;
    m_attribute_resources_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Resources__SearchAds360Field::is_attribute_resources_Set() const{
    return m_attribute_resources_isSet;
}

bool OAIGoogleAdsSearchads360V0Resources__SearchAds360Field::is_attribute_resources_Valid() const{
    return m_attribute_resources_isValid;
}

QString OAIGoogleAdsSearchads360V0Resources__SearchAds360Field::getCategory() const {
    return m_category;
}
void OAIGoogleAdsSearchads360V0Resources__SearchAds360Field::setCategory(const QString &category) {
    m_category = category;
    m_category_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Resources__SearchAds360Field::is_category_Set() const{
    return m_category_isSet;
}

bool OAIGoogleAdsSearchads360V0Resources__SearchAds360Field::is_category_Valid() const{
    return m_category_isValid;
}

QString OAIGoogleAdsSearchads360V0Resources__SearchAds360Field::getDataType() const {
    return m_data_type;
}
void OAIGoogleAdsSearchads360V0Resources__SearchAds360Field::setDataType(const QString &data_type) {
    m_data_type = data_type;
    m_data_type_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Resources__SearchAds360Field::is_data_type_Set() const{
    return m_data_type_isSet;
}

bool OAIGoogleAdsSearchads360V0Resources__SearchAds360Field::is_data_type_Valid() const{
    return m_data_type_isValid;
}

QList<QString> OAIGoogleAdsSearchads360V0Resources__SearchAds360Field::getEnumValues() const {
    return m_enum_values;
}
void OAIGoogleAdsSearchads360V0Resources__SearchAds360Field::setEnumValues(const QList<QString> &enum_values) {
    m_enum_values = enum_values;
    m_enum_values_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Resources__SearchAds360Field::is_enum_values_Set() const{
    return m_enum_values_isSet;
}

bool OAIGoogleAdsSearchads360V0Resources__SearchAds360Field::is_enum_values_Valid() const{
    return m_enum_values_isValid;
}

bool OAIGoogleAdsSearchads360V0Resources__SearchAds360Field::isFilterable() const {
    return m_filterable;
}
void OAIGoogleAdsSearchads360V0Resources__SearchAds360Field::setFilterable(const bool &filterable) {
    m_filterable = filterable;
    m_filterable_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Resources__SearchAds360Field::is_filterable_Set() const{
    return m_filterable_isSet;
}

bool OAIGoogleAdsSearchads360V0Resources__SearchAds360Field::is_filterable_Valid() const{
    return m_filterable_isValid;
}

bool OAIGoogleAdsSearchads360V0Resources__SearchAds360Field::isIsRepeated() const {
    return m_is_repeated;
}
void OAIGoogleAdsSearchads360V0Resources__SearchAds360Field::setIsRepeated(const bool &is_repeated) {
    m_is_repeated = is_repeated;
    m_is_repeated_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Resources__SearchAds360Field::is_is_repeated_Set() const{
    return m_is_repeated_isSet;
}

bool OAIGoogleAdsSearchads360V0Resources__SearchAds360Field::is_is_repeated_Valid() const{
    return m_is_repeated_isValid;
}

QList<QString> OAIGoogleAdsSearchads360V0Resources__SearchAds360Field::getMetrics() const {
    return m_metrics;
}
void OAIGoogleAdsSearchads360V0Resources__SearchAds360Field::setMetrics(const QList<QString> &metrics) {
    m_metrics = metrics;
    m_metrics_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Resources__SearchAds360Field::is_metrics_Set() const{
    return m_metrics_isSet;
}

bool OAIGoogleAdsSearchads360V0Resources__SearchAds360Field::is_metrics_Valid() const{
    return m_metrics_isValid;
}

QString OAIGoogleAdsSearchads360V0Resources__SearchAds360Field::getName() const {
    return m_name;
}
void OAIGoogleAdsSearchads360V0Resources__SearchAds360Field::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Resources__SearchAds360Field::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleAdsSearchads360V0Resources__SearchAds360Field::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGoogleAdsSearchads360V0Resources__SearchAds360Field::getResourceName() const {
    return m_resource_name;
}
void OAIGoogleAdsSearchads360V0Resources__SearchAds360Field::setResourceName(const QString &resource_name) {
    m_resource_name = resource_name;
    m_resource_name_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Resources__SearchAds360Field::is_resource_name_Set() const{
    return m_resource_name_isSet;
}

bool OAIGoogleAdsSearchads360V0Resources__SearchAds360Field::is_resource_name_Valid() const{
    return m_resource_name_isValid;
}

QList<QString> OAIGoogleAdsSearchads360V0Resources__SearchAds360Field::getSegments() const {
    return m_segments;
}
void OAIGoogleAdsSearchads360V0Resources__SearchAds360Field::setSegments(const QList<QString> &segments) {
    m_segments = segments;
    m_segments_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Resources__SearchAds360Field::is_segments_Set() const{
    return m_segments_isSet;
}

bool OAIGoogleAdsSearchads360V0Resources__SearchAds360Field::is_segments_Valid() const{
    return m_segments_isValid;
}

bool OAIGoogleAdsSearchads360V0Resources__SearchAds360Field::isSelectable() const {
    return m_selectable;
}
void OAIGoogleAdsSearchads360V0Resources__SearchAds360Field::setSelectable(const bool &selectable) {
    m_selectable = selectable;
    m_selectable_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Resources__SearchAds360Field::is_selectable_Set() const{
    return m_selectable_isSet;
}

bool OAIGoogleAdsSearchads360V0Resources__SearchAds360Field::is_selectable_Valid() const{
    return m_selectable_isValid;
}

QList<QString> OAIGoogleAdsSearchads360V0Resources__SearchAds360Field::getSelectableWith() const {
    return m_selectable_with;
}
void OAIGoogleAdsSearchads360V0Resources__SearchAds360Field::setSelectableWith(const QList<QString> &selectable_with) {
    m_selectable_with = selectable_with;
    m_selectable_with_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Resources__SearchAds360Field::is_selectable_with_Set() const{
    return m_selectable_with_isSet;
}

bool OAIGoogleAdsSearchads360V0Resources__SearchAds360Field::is_selectable_with_Valid() const{
    return m_selectable_with_isValid;
}

bool OAIGoogleAdsSearchads360V0Resources__SearchAds360Field::isSortable() const {
    return m_sortable;
}
void OAIGoogleAdsSearchads360V0Resources__SearchAds360Field::setSortable(const bool &sortable) {
    m_sortable = sortable;
    m_sortable_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Resources__SearchAds360Field::is_sortable_Set() const{
    return m_sortable_isSet;
}

bool OAIGoogleAdsSearchads360V0Resources__SearchAds360Field::is_sortable_Valid() const{
    return m_sortable_isValid;
}

QString OAIGoogleAdsSearchads360V0Resources__SearchAds360Field::getTypeUrl() const {
    return m_type_url;
}
void OAIGoogleAdsSearchads360V0Resources__SearchAds360Field::setTypeUrl(const QString &type_url) {
    m_type_url = type_url;
    m_type_url_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Resources__SearchAds360Field::is_type_url_Set() const{
    return m_type_url_isSet;
}

bool OAIGoogleAdsSearchads360V0Resources__SearchAds360Field::is_type_url_Valid() const{
    return m_type_url_isValid;
}

bool OAIGoogleAdsSearchads360V0Resources__SearchAds360Field::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_attribute_resources.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_category_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_data_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enum_values.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_filterable_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_repeated_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_metrics.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_segments.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_selectable_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_selectable_with.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_sortable_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleAdsSearchads360V0Resources__SearchAds360Field::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
