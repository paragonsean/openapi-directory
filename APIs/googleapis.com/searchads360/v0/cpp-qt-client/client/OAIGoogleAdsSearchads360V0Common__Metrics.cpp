/**
 * Search Ads 360 Reporting API
 * The Search Ads 360 API allows developers to automate downloading reports from Search Ads 360.
 *
 * The version of the OpenAPI document: v0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleAdsSearchads360V0Common__Metrics.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleAdsSearchads360V0Common__Metrics::OAIGoogleAdsSearchads360V0Common__Metrics(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleAdsSearchads360V0Common__Metrics::OAIGoogleAdsSearchads360V0Common__Metrics() {
    this->initializeModel();
}

OAIGoogleAdsSearchads360V0Common__Metrics::~OAIGoogleAdsSearchads360V0Common__Metrics() {}

void OAIGoogleAdsSearchads360V0Common__Metrics::initializeModel() {

    m_absolute_top_impression_percentage_isSet = false;
    m_absolute_top_impression_percentage_isValid = false;

    m_all_conversions_isSet = false;
    m_all_conversions_isValid = false;

    m_all_conversions_by_conversion_date_isSet = false;
    m_all_conversions_by_conversion_date_isValid = false;

    m_all_conversions_from_click_to_call_isSet = false;
    m_all_conversions_from_click_to_call_isValid = false;

    m_all_conversions_from_directions_isSet = false;
    m_all_conversions_from_directions_isValid = false;

    m_all_conversions_from_interactions_rate_isSet = false;
    m_all_conversions_from_interactions_rate_isValid = false;

    m_all_conversions_from_interactions_value_per_interaction_isSet = false;
    m_all_conversions_from_interactions_value_per_interaction_isValid = false;

    m_all_conversions_from_menu_isSet = false;
    m_all_conversions_from_menu_isValid = false;

    m_all_conversions_from_order_isSet = false;
    m_all_conversions_from_order_isValid = false;

    m_all_conversions_from_other_engagement_isSet = false;
    m_all_conversions_from_other_engagement_isValid = false;

    m_all_conversions_from_store_visit_isSet = false;
    m_all_conversions_from_store_visit_isValid = false;

    m_all_conversions_from_store_website_isSet = false;
    m_all_conversions_from_store_website_isValid = false;

    m_all_conversions_value_isSet = false;
    m_all_conversions_value_isValid = false;

    m_all_conversions_value_by_conversion_date_isSet = false;
    m_all_conversions_value_by_conversion_date_isValid = false;

    m_all_conversions_value_per_cost_isSet = false;
    m_all_conversions_value_per_cost_isValid = false;

    m_average_cost_isSet = false;
    m_average_cost_isValid = false;

    m_average_cpc_isSet = false;
    m_average_cpc_isValid = false;

    m_average_cpm_isSet = false;
    m_average_cpm_isValid = false;

    m_clicks_isSet = false;
    m_clicks_isValid = false;

    m_client_account_conversions_isSet = false;
    m_client_account_conversions_isValid = false;

    m_client_account_conversions_value_isSet = false;
    m_client_account_conversions_value_isValid = false;

    m_client_account_cross_sell_cost_of_goods_sold_micros_isSet = false;
    m_client_account_cross_sell_cost_of_goods_sold_micros_isValid = false;

    m_client_account_cross_sell_gross_profit_micros_isSet = false;
    m_client_account_cross_sell_gross_profit_micros_isValid = false;

    m_client_account_cross_sell_revenue_micros_isSet = false;
    m_client_account_cross_sell_revenue_micros_isValid = false;

    m_client_account_cross_sell_units_sold_isSet = false;
    m_client_account_cross_sell_units_sold_isValid = false;

    m_client_account_lead_cost_of_goods_sold_micros_isSet = false;
    m_client_account_lead_cost_of_goods_sold_micros_isValid = false;

    m_client_account_lead_gross_profit_micros_isSet = false;
    m_client_account_lead_gross_profit_micros_isValid = false;

    m_client_account_lead_revenue_micros_isSet = false;
    m_client_account_lead_revenue_micros_isValid = false;

    m_client_account_lead_units_sold_isSet = false;
    m_client_account_lead_units_sold_isValid = false;

    m_client_account_view_through_conversions_isSet = false;
    m_client_account_view_through_conversions_isValid = false;

    m_content_budget_lost_impression_share_isSet = false;
    m_content_budget_lost_impression_share_isValid = false;

    m_content_impression_share_isSet = false;
    m_content_impression_share_isValid = false;

    m_content_rank_lost_impression_share_isSet = false;
    m_content_rank_lost_impression_share_isValid = false;

    m_conversion_custom_metrics_isSet = false;
    m_conversion_custom_metrics_isValid = false;

    m_conversions_isSet = false;
    m_conversions_isValid = false;

    m_conversions_by_conversion_date_isSet = false;
    m_conversions_by_conversion_date_isValid = false;

    m_conversions_from_interactions_rate_isSet = false;
    m_conversions_from_interactions_rate_isValid = false;

    m_conversions_from_interactions_value_per_interaction_isSet = false;
    m_conversions_from_interactions_value_per_interaction_isValid = false;

    m_conversions_value_isSet = false;
    m_conversions_value_isValid = false;

    m_conversions_value_by_conversion_date_isSet = false;
    m_conversions_value_by_conversion_date_isValid = false;

    m_conversions_value_per_cost_isSet = false;
    m_conversions_value_per_cost_isValid = false;

    m_cost_micros_isSet = false;
    m_cost_micros_isValid = false;

    m_cost_per_all_conversions_isSet = false;
    m_cost_per_all_conversions_isValid = false;

    m_cost_per_conversion_isSet = false;
    m_cost_per_conversion_isValid = false;

    m_cost_per_current_model_attributed_conversion_isSet = false;
    m_cost_per_current_model_attributed_conversion_isValid = false;

    m_cross_device_conversions_isSet = false;
    m_cross_device_conversions_isValid = false;

    m_cross_device_conversions_value_isSet = false;
    m_cross_device_conversions_value_isValid = false;

    m_cross_sell_cost_of_goods_sold_micros_isSet = false;
    m_cross_sell_cost_of_goods_sold_micros_isValid = false;

    m_cross_sell_gross_profit_micros_isSet = false;
    m_cross_sell_gross_profit_micros_isValid = false;

    m_cross_sell_revenue_micros_isSet = false;
    m_cross_sell_revenue_micros_isValid = false;

    m_cross_sell_units_sold_isSet = false;
    m_cross_sell_units_sold_isValid = false;

    m_ctr_isSet = false;
    m_ctr_isValid = false;

    m_historical_creative_quality_score_isSet = false;
    m_historical_creative_quality_score_isValid = false;

    m_historical_landing_page_quality_score_isSet = false;
    m_historical_landing_page_quality_score_isValid = false;

    m_historical_quality_score_isSet = false;
    m_historical_quality_score_isValid = false;

    m_historical_search_predicted_ctr_isSet = false;
    m_historical_search_predicted_ctr_isValid = false;

    m_impressions_isSet = false;
    m_impressions_isValid = false;

    m_interaction_event_types_isSet = false;
    m_interaction_event_types_isValid = false;

    m_interaction_rate_isSet = false;
    m_interaction_rate_isValid = false;

    m_interactions_isSet = false;
    m_interactions_isValid = false;

    m_invalid_click_rate_isSet = false;
    m_invalid_click_rate_isValid = false;

    m_invalid_clicks_isSet = false;
    m_invalid_clicks_isValid = false;

    m_lead_cost_of_goods_sold_micros_isSet = false;
    m_lead_cost_of_goods_sold_micros_isValid = false;

    m_lead_gross_profit_micros_isSet = false;
    m_lead_gross_profit_micros_isValid = false;

    m_lead_revenue_micros_isSet = false;
    m_lead_revenue_micros_isValid = false;

    m_lead_units_sold_isSet = false;
    m_lead_units_sold_isValid = false;

    m_mobile_friendly_clicks_percentage_isSet = false;
    m_mobile_friendly_clicks_percentage_isValid = false;

    m_raw_event_conversion_metrics_isSet = false;
    m_raw_event_conversion_metrics_isValid = false;

    m_search_absolute_top_impression_share_isSet = false;
    m_search_absolute_top_impression_share_isValid = false;

    m_search_budget_lost_absolute_top_impression_share_isSet = false;
    m_search_budget_lost_absolute_top_impression_share_isValid = false;

    m_search_budget_lost_impression_share_isSet = false;
    m_search_budget_lost_impression_share_isValid = false;

    m_search_budget_lost_top_impression_share_isSet = false;
    m_search_budget_lost_top_impression_share_isValid = false;

    m_search_click_share_isSet = false;
    m_search_click_share_isValid = false;

    m_search_exact_match_impression_share_isSet = false;
    m_search_exact_match_impression_share_isValid = false;

    m_search_impression_share_isSet = false;
    m_search_impression_share_isValid = false;

    m_search_rank_lost_absolute_top_impression_share_isSet = false;
    m_search_rank_lost_absolute_top_impression_share_isValid = false;

    m_search_rank_lost_impression_share_isSet = false;
    m_search_rank_lost_impression_share_isValid = false;

    m_search_rank_lost_top_impression_share_isSet = false;
    m_search_rank_lost_top_impression_share_isValid = false;

    m_search_top_impression_share_isSet = false;
    m_search_top_impression_share_isValid = false;

    m_top_impression_percentage_isSet = false;
    m_top_impression_percentage_isValid = false;

    m_value_per_all_conversions_isSet = false;
    m_value_per_all_conversions_isValid = false;

    m_value_per_all_conversions_by_conversion_date_isSet = false;
    m_value_per_all_conversions_by_conversion_date_isValid = false;

    m_value_per_conversion_isSet = false;
    m_value_per_conversion_isValid = false;

    m_value_per_conversions_by_conversion_date_isSet = false;
    m_value_per_conversions_by_conversion_date_isValid = false;

    m_visits_isSet = false;
    m_visits_isValid = false;
}

void OAIGoogleAdsSearchads360V0Common__Metrics::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleAdsSearchads360V0Common__Metrics::fromJsonObject(QJsonObject json) {

    m_absolute_top_impression_percentage_isValid = ::OpenAPI::fromJsonValue(m_absolute_top_impression_percentage, json[QString("absoluteTopImpressionPercentage")]);
    m_absolute_top_impression_percentage_isSet = !json[QString("absoluteTopImpressionPercentage")].isNull() && m_absolute_top_impression_percentage_isValid;

    m_all_conversions_isValid = ::OpenAPI::fromJsonValue(m_all_conversions, json[QString("allConversions")]);
    m_all_conversions_isSet = !json[QString("allConversions")].isNull() && m_all_conversions_isValid;

    m_all_conversions_by_conversion_date_isValid = ::OpenAPI::fromJsonValue(m_all_conversions_by_conversion_date, json[QString("allConversionsByConversionDate")]);
    m_all_conversions_by_conversion_date_isSet = !json[QString("allConversionsByConversionDate")].isNull() && m_all_conversions_by_conversion_date_isValid;

    m_all_conversions_from_click_to_call_isValid = ::OpenAPI::fromJsonValue(m_all_conversions_from_click_to_call, json[QString("allConversionsFromClickToCall")]);
    m_all_conversions_from_click_to_call_isSet = !json[QString("allConversionsFromClickToCall")].isNull() && m_all_conversions_from_click_to_call_isValid;

    m_all_conversions_from_directions_isValid = ::OpenAPI::fromJsonValue(m_all_conversions_from_directions, json[QString("allConversionsFromDirections")]);
    m_all_conversions_from_directions_isSet = !json[QString("allConversionsFromDirections")].isNull() && m_all_conversions_from_directions_isValid;

    m_all_conversions_from_interactions_rate_isValid = ::OpenAPI::fromJsonValue(m_all_conversions_from_interactions_rate, json[QString("allConversionsFromInteractionsRate")]);
    m_all_conversions_from_interactions_rate_isSet = !json[QString("allConversionsFromInteractionsRate")].isNull() && m_all_conversions_from_interactions_rate_isValid;

    m_all_conversions_from_interactions_value_per_interaction_isValid = ::OpenAPI::fromJsonValue(m_all_conversions_from_interactions_value_per_interaction, json[QString("allConversionsFromInteractionsValuePerInteraction")]);
    m_all_conversions_from_interactions_value_per_interaction_isSet = !json[QString("allConversionsFromInteractionsValuePerInteraction")].isNull() && m_all_conversions_from_interactions_value_per_interaction_isValid;

    m_all_conversions_from_menu_isValid = ::OpenAPI::fromJsonValue(m_all_conversions_from_menu, json[QString("allConversionsFromMenu")]);
    m_all_conversions_from_menu_isSet = !json[QString("allConversionsFromMenu")].isNull() && m_all_conversions_from_menu_isValid;

    m_all_conversions_from_order_isValid = ::OpenAPI::fromJsonValue(m_all_conversions_from_order, json[QString("allConversionsFromOrder")]);
    m_all_conversions_from_order_isSet = !json[QString("allConversionsFromOrder")].isNull() && m_all_conversions_from_order_isValid;

    m_all_conversions_from_other_engagement_isValid = ::OpenAPI::fromJsonValue(m_all_conversions_from_other_engagement, json[QString("allConversionsFromOtherEngagement")]);
    m_all_conversions_from_other_engagement_isSet = !json[QString("allConversionsFromOtherEngagement")].isNull() && m_all_conversions_from_other_engagement_isValid;

    m_all_conversions_from_store_visit_isValid = ::OpenAPI::fromJsonValue(m_all_conversions_from_store_visit, json[QString("allConversionsFromStoreVisit")]);
    m_all_conversions_from_store_visit_isSet = !json[QString("allConversionsFromStoreVisit")].isNull() && m_all_conversions_from_store_visit_isValid;

    m_all_conversions_from_store_website_isValid = ::OpenAPI::fromJsonValue(m_all_conversions_from_store_website, json[QString("allConversionsFromStoreWebsite")]);
    m_all_conversions_from_store_website_isSet = !json[QString("allConversionsFromStoreWebsite")].isNull() && m_all_conversions_from_store_website_isValid;

    m_all_conversions_value_isValid = ::OpenAPI::fromJsonValue(m_all_conversions_value, json[QString("allConversionsValue")]);
    m_all_conversions_value_isSet = !json[QString("allConversionsValue")].isNull() && m_all_conversions_value_isValid;

    m_all_conversions_value_by_conversion_date_isValid = ::OpenAPI::fromJsonValue(m_all_conversions_value_by_conversion_date, json[QString("allConversionsValueByConversionDate")]);
    m_all_conversions_value_by_conversion_date_isSet = !json[QString("allConversionsValueByConversionDate")].isNull() && m_all_conversions_value_by_conversion_date_isValid;

    m_all_conversions_value_per_cost_isValid = ::OpenAPI::fromJsonValue(m_all_conversions_value_per_cost, json[QString("allConversionsValuePerCost")]);
    m_all_conversions_value_per_cost_isSet = !json[QString("allConversionsValuePerCost")].isNull() && m_all_conversions_value_per_cost_isValid;

    m_average_cost_isValid = ::OpenAPI::fromJsonValue(m_average_cost, json[QString("averageCost")]);
    m_average_cost_isSet = !json[QString("averageCost")].isNull() && m_average_cost_isValid;

    m_average_cpc_isValid = ::OpenAPI::fromJsonValue(m_average_cpc, json[QString("averageCpc")]);
    m_average_cpc_isSet = !json[QString("averageCpc")].isNull() && m_average_cpc_isValid;

    m_average_cpm_isValid = ::OpenAPI::fromJsonValue(m_average_cpm, json[QString("averageCpm")]);
    m_average_cpm_isSet = !json[QString("averageCpm")].isNull() && m_average_cpm_isValid;

    m_clicks_isValid = ::OpenAPI::fromJsonValue(m_clicks, json[QString("clicks")]);
    m_clicks_isSet = !json[QString("clicks")].isNull() && m_clicks_isValid;

    m_client_account_conversions_isValid = ::OpenAPI::fromJsonValue(m_client_account_conversions, json[QString("clientAccountConversions")]);
    m_client_account_conversions_isSet = !json[QString("clientAccountConversions")].isNull() && m_client_account_conversions_isValid;

    m_client_account_conversions_value_isValid = ::OpenAPI::fromJsonValue(m_client_account_conversions_value, json[QString("clientAccountConversionsValue")]);
    m_client_account_conversions_value_isSet = !json[QString("clientAccountConversionsValue")].isNull() && m_client_account_conversions_value_isValid;

    m_client_account_cross_sell_cost_of_goods_sold_micros_isValid = ::OpenAPI::fromJsonValue(m_client_account_cross_sell_cost_of_goods_sold_micros, json[QString("clientAccountCrossSellCostOfGoodsSoldMicros")]);
    m_client_account_cross_sell_cost_of_goods_sold_micros_isSet = !json[QString("clientAccountCrossSellCostOfGoodsSoldMicros")].isNull() && m_client_account_cross_sell_cost_of_goods_sold_micros_isValid;

    m_client_account_cross_sell_gross_profit_micros_isValid = ::OpenAPI::fromJsonValue(m_client_account_cross_sell_gross_profit_micros, json[QString("clientAccountCrossSellGrossProfitMicros")]);
    m_client_account_cross_sell_gross_profit_micros_isSet = !json[QString("clientAccountCrossSellGrossProfitMicros")].isNull() && m_client_account_cross_sell_gross_profit_micros_isValid;

    m_client_account_cross_sell_revenue_micros_isValid = ::OpenAPI::fromJsonValue(m_client_account_cross_sell_revenue_micros, json[QString("clientAccountCrossSellRevenueMicros")]);
    m_client_account_cross_sell_revenue_micros_isSet = !json[QString("clientAccountCrossSellRevenueMicros")].isNull() && m_client_account_cross_sell_revenue_micros_isValid;

    m_client_account_cross_sell_units_sold_isValid = ::OpenAPI::fromJsonValue(m_client_account_cross_sell_units_sold, json[QString("clientAccountCrossSellUnitsSold")]);
    m_client_account_cross_sell_units_sold_isSet = !json[QString("clientAccountCrossSellUnitsSold")].isNull() && m_client_account_cross_sell_units_sold_isValid;

    m_client_account_lead_cost_of_goods_sold_micros_isValid = ::OpenAPI::fromJsonValue(m_client_account_lead_cost_of_goods_sold_micros, json[QString("clientAccountLeadCostOfGoodsSoldMicros")]);
    m_client_account_lead_cost_of_goods_sold_micros_isSet = !json[QString("clientAccountLeadCostOfGoodsSoldMicros")].isNull() && m_client_account_lead_cost_of_goods_sold_micros_isValid;

    m_client_account_lead_gross_profit_micros_isValid = ::OpenAPI::fromJsonValue(m_client_account_lead_gross_profit_micros, json[QString("clientAccountLeadGrossProfitMicros")]);
    m_client_account_lead_gross_profit_micros_isSet = !json[QString("clientAccountLeadGrossProfitMicros")].isNull() && m_client_account_lead_gross_profit_micros_isValid;

    m_client_account_lead_revenue_micros_isValid = ::OpenAPI::fromJsonValue(m_client_account_lead_revenue_micros, json[QString("clientAccountLeadRevenueMicros")]);
    m_client_account_lead_revenue_micros_isSet = !json[QString("clientAccountLeadRevenueMicros")].isNull() && m_client_account_lead_revenue_micros_isValid;

    m_client_account_lead_units_sold_isValid = ::OpenAPI::fromJsonValue(m_client_account_lead_units_sold, json[QString("clientAccountLeadUnitsSold")]);
    m_client_account_lead_units_sold_isSet = !json[QString("clientAccountLeadUnitsSold")].isNull() && m_client_account_lead_units_sold_isValid;

    m_client_account_view_through_conversions_isValid = ::OpenAPI::fromJsonValue(m_client_account_view_through_conversions, json[QString("clientAccountViewThroughConversions")]);
    m_client_account_view_through_conversions_isSet = !json[QString("clientAccountViewThroughConversions")].isNull() && m_client_account_view_through_conversions_isValid;

    m_content_budget_lost_impression_share_isValid = ::OpenAPI::fromJsonValue(m_content_budget_lost_impression_share, json[QString("contentBudgetLostImpressionShare")]);
    m_content_budget_lost_impression_share_isSet = !json[QString("contentBudgetLostImpressionShare")].isNull() && m_content_budget_lost_impression_share_isValid;

    m_content_impression_share_isValid = ::OpenAPI::fromJsonValue(m_content_impression_share, json[QString("contentImpressionShare")]);
    m_content_impression_share_isSet = !json[QString("contentImpressionShare")].isNull() && m_content_impression_share_isValid;

    m_content_rank_lost_impression_share_isValid = ::OpenAPI::fromJsonValue(m_content_rank_lost_impression_share, json[QString("contentRankLostImpressionShare")]);
    m_content_rank_lost_impression_share_isSet = !json[QString("contentRankLostImpressionShare")].isNull() && m_content_rank_lost_impression_share_isValid;

    m_conversion_custom_metrics_isValid = ::OpenAPI::fromJsonValue(m_conversion_custom_metrics, json[QString("conversionCustomMetrics")]);
    m_conversion_custom_metrics_isSet = !json[QString("conversionCustomMetrics")].isNull() && m_conversion_custom_metrics_isValid;

    m_conversions_isValid = ::OpenAPI::fromJsonValue(m_conversions, json[QString("conversions")]);
    m_conversions_isSet = !json[QString("conversions")].isNull() && m_conversions_isValid;

    m_conversions_by_conversion_date_isValid = ::OpenAPI::fromJsonValue(m_conversions_by_conversion_date, json[QString("conversionsByConversionDate")]);
    m_conversions_by_conversion_date_isSet = !json[QString("conversionsByConversionDate")].isNull() && m_conversions_by_conversion_date_isValid;

    m_conversions_from_interactions_rate_isValid = ::OpenAPI::fromJsonValue(m_conversions_from_interactions_rate, json[QString("conversionsFromInteractionsRate")]);
    m_conversions_from_interactions_rate_isSet = !json[QString("conversionsFromInteractionsRate")].isNull() && m_conversions_from_interactions_rate_isValid;

    m_conversions_from_interactions_value_per_interaction_isValid = ::OpenAPI::fromJsonValue(m_conversions_from_interactions_value_per_interaction, json[QString("conversionsFromInteractionsValuePerInteraction")]);
    m_conversions_from_interactions_value_per_interaction_isSet = !json[QString("conversionsFromInteractionsValuePerInteraction")].isNull() && m_conversions_from_interactions_value_per_interaction_isValid;

    m_conversions_value_isValid = ::OpenAPI::fromJsonValue(m_conversions_value, json[QString("conversionsValue")]);
    m_conversions_value_isSet = !json[QString("conversionsValue")].isNull() && m_conversions_value_isValid;

    m_conversions_value_by_conversion_date_isValid = ::OpenAPI::fromJsonValue(m_conversions_value_by_conversion_date, json[QString("conversionsValueByConversionDate")]);
    m_conversions_value_by_conversion_date_isSet = !json[QString("conversionsValueByConversionDate")].isNull() && m_conversions_value_by_conversion_date_isValid;

    m_conversions_value_per_cost_isValid = ::OpenAPI::fromJsonValue(m_conversions_value_per_cost, json[QString("conversionsValuePerCost")]);
    m_conversions_value_per_cost_isSet = !json[QString("conversionsValuePerCost")].isNull() && m_conversions_value_per_cost_isValid;

    m_cost_micros_isValid = ::OpenAPI::fromJsonValue(m_cost_micros, json[QString("costMicros")]);
    m_cost_micros_isSet = !json[QString("costMicros")].isNull() && m_cost_micros_isValid;

    m_cost_per_all_conversions_isValid = ::OpenAPI::fromJsonValue(m_cost_per_all_conversions, json[QString("costPerAllConversions")]);
    m_cost_per_all_conversions_isSet = !json[QString("costPerAllConversions")].isNull() && m_cost_per_all_conversions_isValid;

    m_cost_per_conversion_isValid = ::OpenAPI::fromJsonValue(m_cost_per_conversion, json[QString("costPerConversion")]);
    m_cost_per_conversion_isSet = !json[QString("costPerConversion")].isNull() && m_cost_per_conversion_isValid;

    m_cost_per_current_model_attributed_conversion_isValid = ::OpenAPI::fromJsonValue(m_cost_per_current_model_attributed_conversion, json[QString("costPerCurrentModelAttributedConversion")]);
    m_cost_per_current_model_attributed_conversion_isSet = !json[QString("costPerCurrentModelAttributedConversion")].isNull() && m_cost_per_current_model_attributed_conversion_isValid;

    m_cross_device_conversions_isValid = ::OpenAPI::fromJsonValue(m_cross_device_conversions, json[QString("crossDeviceConversions")]);
    m_cross_device_conversions_isSet = !json[QString("crossDeviceConversions")].isNull() && m_cross_device_conversions_isValid;

    m_cross_device_conversions_value_isValid = ::OpenAPI::fromJsonValue(m_cross_device_conversions_value, json[QString("crossDeviceConversionsValue")]);
    m_cross_device_conversions_value_isSet = !json[QString("crossDeviceConversionsValue")].isNull() && m_cross_device_conversions_value_isValid;

    m_cross_sell_cost_of_goods_sold_micros_isValid = ::OpenAPI::fromJsonValue(m_cross_sell_cost_of_goods_sold_micros, json[QString("crossSellCostOfGoodsSoldMicros")]);
    m_cross_sell_cost_of_goods_sold_micros_isSet = !json[QString("crossSellCostOfGoodsSoldMicros")].isNull() && m_cross_sell_cost_of_goods_sold_micros_isValid;

    m_cross_sell_gross_profit_micros_isValid = ::OpenAPI::fromJsonValue(m_cross_sell_gross_profit_micros, json[QString("crossSellGrossProfitMicros")]);
    m_cross_sell_gross_profit_micros_isSet = !json[QString("crossSellGrossProfitMicros")].isNull() && m_cross_sell_gross_profit_micros_isValid;

    m_cross_sell_revenue_micros_isValid = ::OpenAPI::fromJsonValue(m_cross_sell_revenue_micros, json[QString("crossSellRevenueMicros")]);
    m_cross_sell_revenue_micros_isSet = !json[QString("crossSellRevenueMicros")].isNull() && m_cross_sell_revenue_micros_isValid;

    m_cross_sell_units_sold_isValid = ::OpenAPI::fromJsonValue(m_cross_sell_units_sold, json[QString("crossSellUnitsSold")]);
    m_cross_sell_units_sold_isSet = !json[QString("crossSellUnitsSold")].isNull() && m_cross_sell_units_sold_isValid;

    m_ctr_isValid = ::OpenAPI::fromJsonValue(m_ctr, json[QString("ctr")]);
    m_ctr_isSet = !json[QString("ctr")].isNull() && m_ctr_isValid;

    m_historical_creative_quality_score_isValid = ::OpenAPI::fromJsonValue(m_historical_creative_quality_score, json[QString("historicalCreativeQualityScore")]);
    m_historical_creative_quality_score_isSet = !json[QString("historicalCreativeQualityScore")].isNull() && m_historical_creative_quality_score_isValid;

    m_historical_landing_page_quality_score_isValid = ::OpenAPI::fromJsonValue(m_historical_landing_page_quality_score, json[QString("historicalLandingPageQualityScore")]);
    m_historical_landing_page_quality_score_isSet = !json[QString("historicalLandingPageQualityScore")].isNull() && m_historical_landing_page_quality_score_isValid;

    m_historical_quality_score_isValid = ::OpenAPI::fromJsonValue(m_historical_quality_score, json[QString("historicalQualityScore")]);
    m_historical_quality_score_isSet = !json[QString("historicalQualityScore")].isNull() && m_historical_quality_score_isValid;

    m_historical_search_predicted_ctr_isValid = ::OpenAPI::fromJsonValue(m_historical_search_predicted_ctr, json[QString("historicalSearchPredictedCtr")]);
    m_historical_search_predicted_ctr_isSet = !json[QString("historicalSearchPredictedCtr")].isNull() && m_historical_search_predicted_ctr_isValid;

    m_impressions_isValid = ::OpenAPI::fromJsonValue(m_impressions, json[QString("impressions")]);
    m_impressions_isSet = !json[QString("impressions")].isNull() && m_impressions_isValid;

    m_interaction_event_types_isValid = ::OpenAPI::fromJsonValue(m_interaction_event_types, json[QString("interactionEventTypes")]);
    m_interaction_event_types_isSet = !json[QString("interactionEventTypes")].isNull() && m_interaction_event_types_isValid;

    m_interaction_rate_isValid = ::OpenAPI::fromJsonValue(m_interaction_rate, json[QString("interactionRate")]);
    m_interaction_rate_isSet = !json[QString("interactionRate")].isNull() && m_interaction_rate_isValid;

    m_interactions_isValid = ::OpenAPI::fromJsonValue(m_interactions, json[QString("interactions")]);
    m_interactions_isSet = !json[QString("interactions")].isNull() && m_interactions_isValid;

    m_invalid_click_rate_isValid = ::OpenAPI::fromJsonValue(m_invalid_click_rate, json[QString("invalidClickRate")]);
    m_invalid_click_rate_isSet = !json[QString("invalidClickRate")].isNull() && m_invalid_click_rate_isValid;

    m_invalid_clicks_isValid = ::OpenAPI::fromJsonValue(m_invalid_clicks, json[QString("invalidClicks")]);
    m_invalid_clicks_isSet = !json[QString("invalidClicks")].isNull() && m_invalid_clicks_isValid;

    m_lead_cost_of_goods_sold_micros_isValid = ::OpenAPI::fromJsonValue(m_lead_cost_of_goods_sold_micros, json[QString("leadCostOfGoodsSoldMicros")]);
    m_lead_cost_of_goods_sold_micros_isSet = !json[QString("leadCostOfGoodsSoldMicros")].isNull() && m_lead_cost_of_goods_sold_micros_isValid;

    m_lead_gross_profit_micros_isValid = ::OpenAPI::fromJsonValue(m_lead_gross_profit_micros, json[QString("leadGrossProfitMicros")]);
    m_lead_gross_profit_micros_isSet = !json[QString("leadGrossProfitMicros")].isNull() && m_lead_gross_profit_micros_isValid;

    m_lead_revenue_micros_isValid = ::OpenAPI::fromJsonValue(m_lead_revenue_micros, json[QString("leadRevenueMicros")]);
    m_lead_revenue_micros_isSet = !json[QString("leadRevenueMicros")].isNull() && m_lead_revenue_micros_isValid;

    m_lead_units_sold_isValid = ::OpenAPI::fromJsonValue(m_lead_units_sold, json[QString("leadUnitsSold")]);
    m_lead_units_sold_isSet = !json[QString("leadUnitsSold")].isNull() && m_lead_units_sold_isValid;

    m_mobile_friendly_clicks_percentage_isValid = ::OpenAPI::fromJsonValue(m_mobile_friendly_clicks_percentage, json[QString("mobileFriendlyClicksPercentage")]);
    m_mobile_friendly_clicks_percentage_isSet = !json[QString("mobileFriendlyClicksPercentage")].isNull() && m_mobile_friendly_clicks_percentage_isValid;

    m_raw_event_conversion_metrics_isValid = ::OpenAPI::fromJsonValue(m_raw_event_conversion_metrics, json[QString("rawEventConversionMetrics")]);
    m_raw_event_conversion_metrics_isSet = !json[QString("rawEventConversionMetrics")].isNull() && m_raw_event_conversion_metrics_isValid;

    m_search_absolute_top_impression_share_isValid = ::OpenAPI::fromJsonValue(m_search_absolute_top_impression_share, json[QString("searchAbsoluteTopImpressionShare")]);
    m_search_absolute_top_impression_share_isSet = !json[QString("searchAbsoluteTopImpressionShare")].isNull() && m_search_absolute_top_impression_share_isValid;

    m_search_budget_lost_absolute_top_impression_share_isValid = ::OpenAPI::fromJsonValue(m_search_budget_lost_absolute_top_impression_share, json[QString("searchBudgetLostAbsoluteTopImpressionShare")]);
    m_search_budget_lost_absolute_top_impression_share_isSet = !json[QString("searchBudgetLostAbsoluteTopImpressionShare")].isNull() && m_search_budget_lost_absolute_top_impression_share_isValid;

    m_search_budget_lost_impression_share_isValid = ::OpenAPI::fromJsonValue(m_search_budget_lost_impression_share, json[QString("searchBudgetLostImpressionShare")]);
    m_search_budget_lost_impression_share_isSet = !json[QString("searchBudgetLostImpressionShare")].isNull() && m_search_budget_lost_impression_share_isValid;

    m_search_budget_lost_top_impression_share_isValid = ::OpenAPI::fromJsonValue(m_search_budget_lost_top_impression_share, json[QString("searchBudgetLostTopImpressionShare")]);
    m_search_budget_lost_top_impression_share_isSet = !json[QString("searchBudgetLostTopImpressionShare")].isNull() && m_search_budget_lost_top_impression_share_isValid;

    m_search_click_share_isValid = ::OpenAPI::fromJsonValue(m_search_click_share, json[QString("searchClickShare")]);
    m_search_click_share_isSet = !json[QString("searchClickShare")].isNull() && m_search_click_share_isValid;

    m_search_exact_match_impression_share_isValid = ::OpenAPI::fromJsonValue(m_search_exact_match_impression_share, json[QString("searchExactMatchImpressionShare")]);
    m_search_exact_match_impression_share_isSet = !json[QString("searchExactMatchImpressionShare")].isNull() && m_search_exact_match_impression_share_isValid;

    m_search_impression_share_isValid = ::OpenAPI::fromJsonValue(m_search_impression_share, json[QString("searchImpressionShare")]);
    m_search_impression_share_isSet = !json[QString("searchImpressionShare")].isNull() && m_search_impression_share_isValid;

    m_search_rank_lost_absolute_top_impression_share_isValid = ::OpenAPI::fromJsonValue(m_search_rank_lost_absolute_top_impression_share, json[QString("searchRankLostAbsoluteTopImpressionShare")]);
    m_search_rank_lost_absolute_top_impression_share_isSet = !json[QString("searchRankLostAbsoluteTopImpressionShare")].isNull() && m_search_rank_lost_absolute_top_impression_share_isValid;

    m_search_rank_lost_impression_share_isValid = ::OpenAPI::fromJsonValue(m_search_rank_lost_impression_share, json[QString("searchRankLostImpressionShare")]);
    m_search_rank_lost_impression_share_isSet = !json[QString("searchRankLostImpressionShare")].isNull() && m_search_rank_lost_impression_share_isValid;

    m_search_rank_lost_top_impression_share_isValid = ::OpenAPI::fromJsonValue(m_search_rank_lost_top_impression_share, json[QString("searchRankLostTopImpressionShare")]);
    m_search_rank_lost_top_impression_share_isSet = !json[QString("searchRankLostTopImpressionShare")].isNull() && m_search_rank_lost_top_impression_share_isValid;

    m_search_top_impression_share_isValid = ::OpenAPI::fromJsonValue(m_search_top_impression_share, json[QString("searchTopImpressionShare")]);
    m_search_top_impression_share_isSet = !json[QString("searchTopImpressionShare")].isNull() && m_search_top_impression_share_isValid;

    m_top_impression_percentage_isValid = ::OpenAPI::fromJsonValue(m_top_impression_percentage, json[QString("topImpressionPercentage")]);
    m_top_impression_percentage_isSet = !json[QString("topImpressionPercentage")].isNull() && m_top_impression_percentage_isValid;

    m_value_per_all_conversions_isValid = ::OpenAPI::fromJsonValue(m_value_per_all_conversions, json[QString("valuePerAllConversions")]);
    m_value_per_all_conversions_isSet = !json[QString("valuePerAllConversions")].isNull() && m_value_per_all_conversions_isValid;

    m_value_per_all_conversions_by_conversion_date_isValid = ::OpenAPI::fromJsonValue(m_value_per_all_conversions_by_conversion_date, json[QString("valuePerAllConversionsByConversionDate")]);
    m_value_per_all_conversions_by_conversion_date_isSet = !json[QString("valuePerAllConversionsByConversionDate")].isNull() && m_value_per_all_conversions_by_conversion_date_isValid;

    m_value_per_conversion_isValid = ::OpenAPI::fromJsonValue(m_value_per_conversion, json[QString("valuePerConversion")]);
    m_value_per_conversion_isSet = !json[QString("valuePerConversion")].isNull() && m_value_per_conversion_isValid;

    m_value_per_conversions_by_conversion_date_isValid = ::OpenAPI::fromJsonValue(m_value_per_conversions_by_conversion_date, json[QString("valuePerConversionsByConversionDate")]);
    m_value_per_conversions_by_conversion_date_isSet = !json[QString("valuePerConversionsByConversionDate")].isNull() && m_value_per_conversions_by_conversion_date_isValid;

    m_visits_isValid = ::OpenAPI::fromJsonValue(m_visits, json[QString("visits")]);
    m_visits_isSet = !json[QString("visits")].isNull() && m_visits_isValid;
}

QString OAIGoogleAdsSearchads360V0Common__Metrics::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleAdsSearchads360V0Common__Metrics::asJsonObject() const {
    QJsonObject obj;
    if (m_absolute_top_impression_percentage_isSet) {
        obj.insert(QString("absoluteTopImpressionPercentage"), ::OpenAPI::toJsonValue(m_absolute_top_impression_percentage));
    }
    if (m_all_conversions_isSet) {
        obj.insert(QString("allConversions"), ::OpenAPI::toJsonValue(m_all_conversions));
    }
    if (m_all_conversions_by_conversion_date_isSet) {
        obj.insert(QString("allConversionsByConversionDate"), ::OpenAPI::toJsonValue(m_all_conversions_by_conversion_date));
    }
    if (m_all_conversions_from_click_to_call_isSet) {
        obj.insert(QString("allConversionsFromClickToCall"), ::OpenAPI::toJsonValue(m_all_conversions_from_click_to_call));
    }
    if (m_all_conversions_from_directions_isSet) {
        obj.insert(QString("allConversionsFromDirections"), ::OpenAPI::toJsonValue(m_all_conversions_from_directions));
    }
    if (m_all_conversions_from_interactions_rate_isSet) {
        obj.insert(QString("allConversionsFromInteractionsRate"), ::OpenAPI::toJsonValue(m_all_conversions_from_interactions_rate));
    }
    if (m_all_conversions_from_interactions_value_per_interaction_isSet) {
        obj.insert(QString("allConversionsFromInteractionsValuePerInteraction"), ::OpenAPI::toJsonValue(m_all_conversions_from_interactions_value_per_interaction));
    }
    if (m_all_conversions_from_menu_isSet) {
        obj.insert(QString("allConversionsFromMenu"), ::OpenAPI::toJsonValue(m_all_conversions_from_menu));
    }
    if (m_all_conversions_from_order_isSet) {
        obj.insert(QString("allConversionsFromOrder"), ::OpenAPI::toJsonValue(m_all_conversions_from_order));
    }
    if (m_all_conversions_from_other_engagement_isSet) {
        obj.insert(QString("allConversionsFromOtherEngagement"), ::OpenAPI::toJsonValue(m_all_conversions_from_other_engagement));
    }
    if (m_all_conversions_from_store_visit_isSet) {
        obj.insert(QString("allConversionsFromStoreVisit"), ::OpenAPI::toJsonValue(m_all_conversions_from_store_visit));
    }
    if (m_all_conversions_from_store_website_isSet) {
        obj.insert(QString("allConversionsFromStoreWebsite"), ::OpenAPI::toJsonValue(m_all_conversions_from_store_website));
    }
    if (m_all_conversions_value_isSet) {
        obj.insert(QString("allConversionsValue"), ::OpenAPI::toJsonValue(m_all_conversions_value));
    }
    if (m_all_conversions_value_by_conversion_date_isSet) {
        obj.insert(QString("allConversionsValueByConversionDate"), ::OpenAPI::toJsonValue(m_all_conversions_value_by_conversion_date));
    }
    if (m_all_conversions_value_per_cost_isSet) {
        obj.insert(QString("allConversionsValuePerCost"), ::OpenAPI::toJsonValue(m_all_conversions_value_per_cost));
    }
    if (m_average_cost_isSet) {
        obj.insert(QString("averageCost"), ::OpenAPI::toJsonValue(m_average_cost));
    }
    if (m_average_cpc_isSet) {
        obj.insert(QString("averageCpc"), ::OpenAPI::toJsonValue(m_average_cpc));
    }
    if (m_average_cpm_isSet) {
        obj.insert(QString("averageCpm"), ::OpenAPI::toJsonValue(m_average_cpm));
    }
    if (m_clicks_isSet) {
        obj.insert(QString("clicks"), ::OpenAPI::toJsonValue(m_clicks));
    }
    if (m_client_account_conversions_isSet) {
        obj.insert(QString("clientAccountConversions"), ::OpenAPI::toJsonValue(m_client_account_conversions));
    }
    if (m_client_account_conversions_value_isSet) {
        obj.insert(QString("clientAccountConversionsValue"), ::OpenAPI::toJsonValue(m_client_account_conversions_value));
    }
    if (m_client_account_cross_sell_cost_of_goods_sold_micros_isSet) {
        obj.insert(QString("clientAccountCrossSellCostOfGoodsSoldMicros"), ::OpenAPI::toJsonValue(m_client_account_cross_sell_cost_of_goods_sold_micros));
    }
    if (m_client_account_cross_sell_gross_profit_micros_isSet) {
        obj.insert(QString("clientAccountCrossSellGrossProfitMicros"), ::OpenAPI::toJsonValue(m_client_account_cross_sell_gross_profit_micros));
    }
    if (m_client_account_cross_sell_revenue_micros_isSet) {
        obj.insert(QString("clientAccountCrossSellRevenueMicros"), ::OpenAPI::toJsonValue(m_client_account_cross_sell_revenue_micros));
    }
    if (m_client_account_cross_sell_units_sold_isSet) {
        obj.insert(QString("clientAccountCrossSellUnitsSold"), ::OpenAPI::toJsonValue(m_client_account_cross_sell_units_sold));
    }
    if (m_client_account_lead_cost_of_goods_sold_micros_isSet) {
        obj.insert(QString("clientAccountLeadCostOfGoodsSoldMicros"), ::OpenAPI::toJsonValue(m_client_account_lead_cost_of_goods_sold_micros));
    }
    if (m_client_account_lead_gross_profit_micros_isSet) {
        obj.insert(QString("clientAccountLeadGrossProfitMicros"), ::OpenAPI::toJsonValue(m_client_account_lead_gross_profit_micros));
    }
    if (m_client_account_lead_revenue_micros_isSet) {
        obj.insert(QString("clientAccountLeadRevenueMicros"), ::OpenAPI::toJsonValue(m_client_account_lead_revenue_micros));
    }
    if (m_client_account_lead_units_sold_isSet) {
        obj.insert(QString("clientAccountLeadUnitsSold"), ::OpenAPI::toJsonValue(m_client_account_lead_units_sold));
    }
    if (m_client_account_view_through_conversions_isSet) {
        obj.insert(QString("clientAccountViewThroughConversions"), ::OpenAPI::toJsonValue(m_client_account_view_through_conversions));
    }
    if (m_content_budget_lost_impression_share_isSet) {
        obj.insert(QString("contentBudgetLostImpressionShare"), ::OpenAPI::toJsonValue(m_content_budget_lost_impression_share));
    }
    if (m_content_impression_share_isSet) {
        obj.insert(QString("contentImpressionShare"), ::OpenAPI::toJsonValue(m_content_impression_share));
    }
    if (m_content_rank_lost_impression_share_isSet) {
        obj.insert(QString("contentRankLostImpressionShare"), ::OpenAPI::toJsonValue(m_content_rank_lost_impression_share));
    }
    if (m_conversion_custom_metrics.size() > 0) {
        obj.insert(QString("conversionCustomMetrics"), ::OpenAPI::toJsonValue(m_conversion_custom_metrics));
    }
    if (m_conversions_isSet) {
        obj.insert(QString("conversions"), ::OpenAPI::toJsonValue(m_conversions));
    }
    if (m_conversions_by_conversion_date_isSet) {
        obj.insert(QString("conversionsByConversionDate"), ::OpenAPI::toJsonValue(m_conversions_by_conversion_date));
    }
    if (m_conversions_from_interactions_rate_isSet) {
        obj.insert(QString("conversionsFromInteractionsRate"), ::OpenAPI::toJsonValue(m_conversions_from_interactions_rate));
    }
    if (m_conversions_from_interactions_value_per_interaction_isSet) {
        obj.insert(QString("conversionsFromInteractionsValuePerInteraction"), ::OpenAPI::toJsonValue(m_conversions_from_interactions_value_per_interaction));
    }
    if (m_conversions_value_isSet) {
        obj.insert(QString("conversionsValue"), ::OpenAPI::toJsonValue(m_conversions_value));
    }
    if (m_conversions_value_by_conversion_date_isSet) {
        obj.insert(QString("conversionsValueByConversionDate"), ::OpenAPI::toJsonValue(m_conversions_value_by_conversion_date));
    }
    if (m_conversions_value_per_cost_isSet) {
        obj.insert(QString("conversionsValuePerCost"), ::OpenAPI::toJsonValue(m_conversions_value_per_cost));
    }
    if (m_cost_micros_isSet) {
        obj.insert(QString("costMicros"), ::OpenAPI::toJsonValue(m_cost_micros));
    }
    if (m_cost_per_all_conversions_isSet) {
        obj.insert(QString("costPerAllConversions"), ::OpenAPI::toJsonValue(m_cost_per_all_conversions));
    }
    if (m_cost_per_conversion_isSet) {
        obj.insert(QString("costPerConversion"), ::OpenAPI::toJsonValue(m_cost_per_conversion));
    }
    if (m_cost_per_current_model_attributed_conversion_isSet) {
        obj.insert(QString("costPerCurrentModelAttributedConversion"), ::OpenAPI::toJsonValue(m_cost_per_current_model_attributed_conversion));
    }
    if (m_cross_device_conversions_isSet) {
        obj.insert(QString("crossDeviceConversions"), ::OpenAPI::toJsonValue(m_cross_device_conversions));
    }
    if (m_cross_device_conversions_value_isSet) {
        obj.insert(QString("crossDeviceConversionsValue"), ::OpenAPI::toJsonValue(m_cross_device_conversions_value));
    }
    if (m_cross_sell_cost_of_goods_sold_micros_isSet) {
        obj.insert(QString("crossSellCostOfGoodsSoldMicros"), ::OpenAPI::toJsonValue(m_cross_sell_cost_of_goods_sold_micros));
    }
    if (m_cross_sell_gross_profit_micros_isSet) {
        obj.insert(QString("crossSellGrossProfitMicros"), ::OpenAPI::toJsonValue(m_cross_sell_gross_profit_micros));
    }
    if (m_cross_sell_revenue_micros_isSet) {
        obj.insert(QString("crossSellRevenueMicros"), ::OpenAPI::toJsonValue(m_cross_sell_revenue_micros));
    }
    if (m_cross_sell_units_sold_isSet) {
        obj.insert(QString("crossSellUnitsSold"), ::OpenAPI::toJsonValue(m_cross_sell_units_sold));
    }
    if (m_ctr_isSet) {
        obj.insert(QString("ctr"), ::OpenAPI::toJsonValue(m_ctr));
    }
    if (m_historical_creative_quality_score_isSet) {
        obj.insert(QString("historicalCreativeQualityScore"), ::OpenAPI::toJsonValue(m_historical_creative_quality_score));
    }
    if (m_historical_landing_page_quality_score_isSet) {
        obj.insert(QString("historicalLandingPageQualityScore"), ::OpenAPI::toJsonValue(m_historical_landing_page_quality_score));
    }
    if (m_historical_quality_score_isSet) {
        obj.insert(QString("historicalQualityScore"), ::OpenAPI::toJsonValue(m_historical_quality_score));
    }
    if (m_historical_search_predicted_ctr_isSet) {
        obj.insert(QString("historicalSearchPredictedCtr"), ::OpenAPI::toJsonValue(m_historical_search_predicted_ctr));
    }
    if (m_impressions_isSet) {
        obj.insert(QString("impressions"), ::OpenAPI::toJsonValue(m_impressions));
    }
    if (m_interaction_event_types.size() > 0) {
        obj.insert(QString("interactionEventTypes"), ::OpenAPI::toJsonValue(m_interaction_event_types));
    }
    if (m_interaction_rate_isSet) {
        obj.insert(QString("interactionRate"), ::OpenAPI::toJsonValue(m_interaction_rate));
    }
    if (m_interactions_isSet) {
        obj.insert(QString("interactions"), ::OpenAPI::toJsonValue(m_interactions));
    }
    if (m_invalid_click_rate_isSet) {
        obj.insert(QString("invalidClickRate"), ::OpenAPI::toJsonValue(m_invalid_click_rate));
    }
    if (m_invalid_clicks_isSet) {
        obj.insert(QString("invalidClicks"), ::OpenAPI::toJsonValue(m_invalid_clicks));
    }
    if (m_lead_cost_of_goods_sold_micros_isSet) {
        obj.insert(QString("leadCostOfGoodsSoldMicros"), ::OpenAPI::toJsonValue(m_lead_cost_of_goods_sold_micros));
    }
    if (m_lead_gross_profit_micros_isSet) {
        obj.insert(QString("leadGrossProfitMicros"), ::OpenAPI::toJsonValue(m_lead_gross_profit_micros));
    }
    if (m_lead_revenue_micros_isSet) {
        obj.insert(QString("leadRevenueMicros"), ::OpenAPI::toJsonValue(m_lead_revenue_micros));
    }
    if (m_lead_units_sold_isSet) {
        obj.insert(QString("leadUnitsSold"), ::OpenAPI::toJsonValue(m_lead_units_sold));
    }
    if (m_mobile_friendly_clicks_percentage_isSet) {
        obj.insert(QString("mobileFriendlyClicksPercentage"), ::OpenAPI::toJsonValue(m_mobile_friendly_clicks_percentage));
    }
    if (m_raw_event_conversion_metrics.size() > 0) {
        obj.insert(QString("rawEventConversionMetrics"), ::OpenAPI::toJsonValue(m_raw_event_conversion_metrics));
    }
    if (m_search_absolute_top_impression_share_isSet) {
        obj.insert(QString("searchAbsoluteTopImpressionShare"), ::OpenAPI::toJsonValue(m_search_absolute_top_impression_share));
    }
    if (m_search_budget_lost_absolute_top_impression_share_isSet) {
        obj.insert(QString("searchBudgetLostAbsoluteTopImpressionShare"), ::OpenAPI::toJsonValue(m_search_budget_lost_absolute_top_impression_share));
    }
    if (m_search_budget_lost_impression_share_isSet) {
        obj.insert(QString("searchBudgetLostImpressionShare"), ::OpenAPI::toJsonValue(m_search_budget_lost_impression_share));
    }
    if (m_search_budget_lost_top_impression_share_isSet) {
        obj.insert(QString("searchBudgetLostTopImpressionShare"), ::OpenAPI::toJsonValue(m_search_budget_lost_top_impression_share));
    }
    if (m_search_click_share_isSet) {
        obj.insert(QString("searchClickShare"), ::OpenAPI::toJsonValue(m_search_click_share));
    }
    if (m_search_exact_match_impression_share_isSet) {
        obj.insert(QString("searchExactMatchImpressionShare"), ::OpenAPI::toJsonValue(m_search_exact_match_impression_share));
    }
    if (m_search_impression_share_isSet) {
        obj.insert(QString("searchImpressionShare"), ::OpenAPI::toJsonValue(m_search_impression_share));
    }
    if (m_search_rank_lost_absolute_top_impression_share_isSet) {
        obj.insert(QString("searchRankLostAbsoluteTopImpressionShare"), ::OpenAPI::toJsonValue(m_search_rank_lost_absolute_top_impression_share));
    }
    if (m_search_rank_lost_impression_share_isSet) {
        obj.insert(QString("searchRankLostImpressionShare"), ::OpenAPI::toJsonValue(m_search_rank_lost_impression_share));
    }
    if (m_search_rank_lost_top_impression_share_isSet) {
        obj.insert(QString("searchRankLostTopImpressionShare"), ::OpenAPI::toJsonValue(m_search_rank_lost_top_impression_share));
    }
    if (m_search_top_impression_share_isSet) {
        obj.insert(QString("searchTopImpressionShare"), ::OpenAPI::toJsonValue(m_search_top_impression_share));
    }
    if (m_top_impression_percentage_isSet) {
        obj.insert(QString("topImpressionPercentage"), ::OpenAPI::toJsonValue(m_top_impression_percentage));
    }
    if (m_value_per_all_conversions_isSet) {
        obj.insert(QString("valuePerAllConversions"), ::OpenAPI::toJsonValue(m_value_per_all_conversions));
    }
    if (m_value_per_all_conversions_by_conversion_date_isSet) {
        obj.insert(QString("valuePerAllConversionsByConversionDate"), ::OpenAPI::toJsonValue(m_value_per_all_conversions_by_conversion_date));
    }
    if (m_value_per_conversion_isSet) {
        obj.insert(QString("valuePerConversion"), ::OpenAPI::toJsonValue(m_value_per_conversion));
    }
    if (m_value_per_conversions_by_conversion_date_isSet) {
        obj.insert(QString("valuePerConversionsByConversionDate"), ::OpenAPI::toJsonValue(m_value_per_conversions_by_conversion_date));
    }
    if (m_visits_isSet) {
        obj.insert(QString("visits"), ::OpenAPI::toJsonValue(m_visits));
    }
    return obj;
}

double OAIGoogleAdsSearchads360V0Common__Metrics::getAbsoluteTopImpressionPercentage() const {
    return m_absolute_top_impression_percentage;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setAbsoluteTopImpressionPercentage(const double &absolute_top_impression_percentage) {
    m_absolute_top_impression_percentage = absolute_top_impression_percentage;
    m_absolute_top_impression_percentage_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_absolute_top_impression_percentage_Set() const{
    return m_absolute_top_impression_percentage_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_absolute_top_impression_percentage_Valid() const{
    return m_absolute_top_impression_percentage_isValid;
}

double OAIGoogleAdsSearchads360V0Common__Metrics::getAllConversions() const {
    return m_all_conversions;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setAllConversions(const double &all_conversions) {
    m_all_conversions = all_conversions;
    m_all_conversions_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_all_conversions_Set() const{
    return m_all_conversions_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_all_conversions_Valid() const{
    return m_all_conversions_isValid;
}

double OAIGoogleAdsSearchads360V0Common__Metrics::getAllConversionsByConversionDate() const {
    return m_all_conversions_by_conversion_date;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setAllConversionsByConversionDate(const double &all_conversions_by_conversion_date) {
    m_all_conversions_by_conversion_date = all_conversions_by_conversion_date;
    m_all_conversions_by_conversion_date_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_all_conversions_by_conversion_date_Set() const{
    return m_all_conversions_by_conversion_date_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_all_conversions_by_conversion_date_Valid() const{
    return m_all_conversions_by_conversion_date_isValid;
}

double OAIGoogleAdsSearchads360V0Common__Metrics::getAllConversionsFromClickToCall() const {
    return m_all_conversions_from_click_to_call;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setAllConversionsFromClickToCall(const double &all_conversions_from_click_to_call) {
    m_all_conversions_from_click_to_call = all_conversions_from_click_to_call;
    m_all_conversions_from_click_to_call_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_all_conversions_from_click_to_call_Set() const{
    return m_all_conversions_from_click_to_call_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_all_conversions_from_click_to_call_Valid() const{
    return m_all_conversions_from_click_to_call_isValid;
}

double OAIGoogleAdsSearchads360V0Common__Metrics::getAllConversionsFromDirections() const {
    return m_all_conversions_from_directions;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setAllConversionsFromDirections(const double &all_conversions_from_directions) {
    m_all_conversions_from_directions = all_conversions_from_directions;
    m_all_conversions_from_directions_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_all_conversions_from_directions_Set() const{
    return m_all_conversions_from_directions_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_all_conversions_from_directions_Valid() const{
    return m_all_conversions_from_directions_isValid;
}

double OAIGoogleAdsSearchads360V0Common__Metrics::getAllConversionsFromInteractionsRate() const {
    return m_all_conversions_from_interactions_rate;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setAllConversionsFromInteractionsRate(const double &all_conversions_from_interactions_rate) {
    m_all_conversions_from_interactions_rate = all_conversions_from_interactions_rate;
    m_all_conversions_from_interactions_rate_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_all_conversions_from_interactions_rate_Set() const{
    return m_all_conversions_from_interactions_rate_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_all_conversions_from_interactions_rate_Valid() const{
    return m_all_conversions_from_interactions_rate_isValid;
}

double OAIGoogleAdsSearchads360V0Common__Metrics::getAllConversionsFromInteractionsValuePerInteraction() const {
    return m_all_conversions_from_interactions_value_per_interaction;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setAllConversionsFromInteractionsValuePerInteraction(const double &all_conversions_from_interactions_value_per_interaction) {
    m_all_conversions_from_interactions_value_per_interaction = all_conversions_from_interactions_value_per_interaction;
    m_all_conversions_from_interactions_value_per_interaction_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_all_conversions_from_interactions_value_per_interaction_Set() const{
    return m_all_conversions_from_interactions_value_per_interaction_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_all_conversions_from_interactions_value_per_interaction_Valid() const{
    return m_all_conversions_from_interactions_value_per_interaction_isValid;
}

double OAIGoogleAdsSearchads360V0Common__Metrics::getAllConversionsFromMenu() const {
    return m_all_conversions_from_menu;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setAllConversionsFromMenu(const double &all_conversions_from_menu) {
    m_all_conversions_from_menu = all_conversions_from_menu;
    m_all_conversions_from_menu_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_all_conversions_from_menu_Set() const{
    return m_all_conversions_from_menu_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_all_conversions_from_menu_Valid() const{
    return m_all_conversions_from_menu_isValid;
}

double OAIGoogleAdsSearchads360V0Common__Metrics::getAllConversionsFromOrder() const {
    return m_all_conversions_from_order;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setAllConversionsFromOrder(const double &all_conversions_from_order) {
    m_all_conversions_from_order = all_conversions_from_order;
    m_all_conversions_from_order_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_all_conversions_from_order_Set() const{
    return m_all_conversions_from_order_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_all_conversions_from_order_Valid() const{
    return m_all_conversions_from_order_isValid;
}

double OAIGoogleAdsSearchads360V0Common__Metrics::getAllConversionsFromOtherEngagement() const {
    return m_all_conversions_from_other_engagement;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setAllConversionsFromOtherEngagement(const double &all_conversions_from_other_engagement) {
    m_all_conversions_from_other_engagement = all_conversions_from_other_engagement;
    m_all_conversions_from_other_engagement_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_all_conversions_from_other_engagement_Set() const{
    return m_all_conversions_from_other_engagement_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_all_conversions_from_other_engagement_Valid() const{
    return m_all_conversions_from_other_engagement_isValid;
}

double OAIGoogleAdsSearchads360V0Common__Metrics::getAllConversionsFromStoreVisit() const {
    return m_all_conversions_from_store_visit;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setAllConversionsFromStoreVisit(const double &all_conversions_from_store_visit) {
    m_all_conversions_from_store_visit = all_conversions_from_store_visit;
    m_all_conversions_from_store_visit_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_all_conversions_from_store_visit_Set() const{
    return m_all_conversions_from_store_visit_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_all_conversions_from_store_visit_Valid() const{
    return m_all_conversions_from_store_visit_isValid;
}

double OAIGoogleAdsSearchads360V0Common__Metrics::getAllConversionsFromStoreWebsite() const {
    return m_all_conversions_from_store_website;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setAllConversionsFromStoreWebsite(const double &all_conversions_from_store_website) {
    m_all_conversions_from_store_website = all_conversions_from_store_website;
    m_all_conversions_from_store_website_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_all_conversions_from_store_website_Set() const{
    return m_all_conversions_from_store_website_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_all_conversions_from_store_website_Valid() const{
    return m_all_conversions_from_store_website_isValid;
}

double OAIGoogleAdsSearchads360V0Common__Metrics::getAllConversionsValue() const {
    return m_all_conversions_value;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setAllConversionsValue(const double &all_conversions_value) {
    m_all_conversions_value = all_conversions_value;
    m_all_conversions_value_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_all_conversions_value_Set() const{
    return m_all_conversions_value_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_all_conversions_value_Valid() const{
    return m_all_conversions_value_isValid;
}

double OAIGoogleAdsSearchads360V0Common__Metrics::getAllConversionsValueByConversionDate() const {
    return m_all_conversions_value_by_conversion_date;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setAllConversionsValueByConversionDate(const double &all_conversions_value_by_conversion_date) {
    m_all_conversions_value_by_conversion_date = all_conversions_value_by_conversion_date;
    m_all_conversions_value_by_conversion_date_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_all_conversions_value_by_conversion_date_Set() const{
    return m_all_conversions_value_by_conversion_date_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_all_conversions_value_by_conversion_date_Valid() const{
    return m_all_conversions_value_by_conversion_date_isValid;
}

double OAIGoogleAdsSearchads360V0Common__Metrics::getAllConversionsValuePerCost() const {
    return m_all_conversions_value_per_cost;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setAllConversionsValuePerCost(const double &all_conversions_value_per_cost) {
    m_all_conversions_value_per_cost = all_conversions_value_per_cost;
    m_all_conversions_value_per_cost_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_all_conversions_value_per_cost_Set() const{
    return m_all_conversions_value_per_cost_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_all_conversions_value_per_cost_Valid() const{
    return m_all_conversions_value_per_cost_isValid;
}

double OAIGoogleAdsSearchads360V0Common__Metrics::getAverageCost() const {
    return m_average_cost;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setAverageCost(const double &average_cost) {
    m_average_cost = average_cost;
    m_average_cost_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_average_cost_Set() const{
    return m_average_cost_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_average_cost_Valid() const{
    return m_average_cost_isValid;
}

double OAIGoogleAdsSearchads360V0Common__Metrics::getAverageCpc() const {
    return m_average_cpc;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setAverageCpc(const double &average_cpc) {
    m_average_cpc = average_cpc;
    m_average_cpc_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_average_cpc_Set() const{
    return m_average_cpc_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_average_cpc_Valid() const{
    return m_average_cpc_isValid;
}

double OAIGoogleAdsSearchads360V0Common__Metrics::getAverageCpm() const {
    return m_average_cpm;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setAverageCpm(const double &average_cpm) {
    m_average_cpm = average_cpm;
    m_average_cpm_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_average_cpm_Set() const{
    return m_average_cpm_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_average_cpm_Valid() const{
    return m_average_cpm_isValid;
}

QString OAIGoogleAdsSearchads360V0Common__Metrics::getClicks() const {
    return m_clicks;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setClicks(const QString &clicks) {
    m_clicks = clicks;
    m_clicks_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_clicks_Set() const{
    return m_clicks_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_clicks_Valid() const{
    return m_clicks_isValid;
}

double OAIGoogleAdsSearchads360V0Common__Metrics::getClientAccountConversions() const {
    return m_client_account_conversions;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setClientAccountConversions(const double &client_account_conversions) {
    m_client_account_conversions = client_account_conversions;
    m_client_account_conversions_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_client_account_conversions_Set() const{
    return m_client_account_conversions_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_client_account_conversions_Valid() const{
    return m_client_account_conversions_isValid;
}

double OAIGoogleAdsSearchads360V0Common__Metrics::getClientAccountConversionsValue() const {
    return m_client_account_conversions_value;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setClientAccountConversionsValue(const double &client_account_conversions_value) {
    m_client_account_conversions_value = client_account_conversions_value;
    m_client_account_conversions_value_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_client_account_conversions_value_Set() const{
    return m_client_account_conversions_value_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_client_account_conversions_value_Valid() const{
    return m_client_account_conversions_value_isValid;
}

QString OAIGoogleAdsSearchads360V0Common__Metrics::getClientAccountCrossSellCostOfGoodsSoldMicros() const {
    return m_client_account_cross_sell_cost_of_goods_sold_micros;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setClientAccountCrossSellCostOfGoodsSoldMicros(const QString &client_account_cross_sell_cost_of_goods_sold_micros) {
    m_client_account_cross_sell_cost_of_goods_sold_micros = client_account_cross_sell_cost_of_goods_sold_micros;
    m_client_account_cross_sell_cost_of_goods_sold_micros_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_client_account_cross_sell_cost_of_goods_sold_micros_Set() const{
    return m_client_account_cross_sell_cost_of_goods_sold_micros_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_client_account_cross_sell_cost_of_goods_sold_micros_Valid() const{
    return m_client_account_cross_sell_cost_of_goods_sold_micros_isValid;
}

QString OAIGoogleAdsSearchads360V0Common__Metrics::getClientAccountCrossSellGrossProfitMicros() const {
    return m_client_account_cross_sell_gross_profit_micros;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setClientAccountCrossSellGrossProfitMicros(const QString &client_account_cross_sell_gross_profit_micros) {
    m_client_account_cross_sell_gross_profit_micros = client_account_cross_sell_gross_profit_micros;
    m_client_account_cross_sell_gross_profit_micros_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_client_account_cross_sell_gross_profit_micros_Set() const{
    return m_client_account_cross_sell_gross_profit_micros_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_client_account_cross_sell_gross_profit_micros_Valid() const{
    return m_client_account_cross_sell_gross_profit_micros_isValid;
}

QString OAIGoogleAdsSearchads360V0Common__Metrics::getClientAccountCrossSellRevenueMicros() const {
    return m_client_account_cross_sell_revenue_micros;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setClientAccountCrossSellRevenueMicros(const QString &client_account_cross_sell_revenue_micros) {
    m_client_account_cross_sell_revenue_micros = client_account_cross_sell_revenue_micros;
    m_client_account_cross_sell_revenue_micros_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_client_account_cross_sell_revenue_micros_Set() const{
    return m_client_account_cross_sell_revenue_micros_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_client_account_cross_sell_revenue_micros_Valid() const{
    return m_client_account_cross_sell_revenue_micros_isValid;
}

double OAIGoogleAdsSearchads360V0Common__Metrics::getClientAccountCrossSellUnitsSold() const {
    return m_client_account_cross_sell_units_sold;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setClientAccountCrossSellUnitsSold(const double &client_account_cross_sell_units_sold) {
    m_client_account_cross_sell_units_sold = client_account_cross_sell_units_sold;
    m_client_account_cross_sell_units_sold_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_client_account_cross_sell_units_sold_Set() const{
    return m_client_account_cross_sell_units_sold_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_client_account_cross_sell_units_sold_Valid() const{
    return m_client_account_cross_sell_units_sold_isValid;
}

QString OAIGoogleAdsSearchads360V0Common__Metrics::getClientAccountLeadCostOfGoodsSoldMicros() const {
    return m_client_account_lead_cost_of_goods_sold_micros;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setClientAccountLeadCostOfGoodsSoldMicros(const QString &client_account_lead_cost_of_goods_sold_micros) {
    m_client_account_lead_cost_of_goods_sold_micros = client_account_lead_cost_of_goods_sold_micros;
    m_client_account_lead_cost_of_goods_sold_micros_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_client_account_lead_cost_of_goods_sold_micros_Set() const{
    return m_client_account_lead_cost_of_goods_sold_micros_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_client_account_lead_cost_of_goods_sold_micros_Valid() const{
    return m_client_account_lead_cost_of_goods_sold_micros_isValid;
}

QString OAIGoogleAdsSearchads360V0Common__Metrics::getClientAccountLeadGrossProfitMicros() const {
    return m_client_account_lead_gross_profit_micros;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setClientAccountLeadGrossProfitMicros(const QString &client_account_lead_gross_profit_micros) {
    m_client_account_lead_gross_profit_micros = client_account_lead_gross_profit_micros;
    m_client_account_lead_gross_profit_micros_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_client_account_lead_gross_profit_micros_Set() const{
    return m_client_account_lead_gross_profit_micros_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_client_account_lead_gross_profit_micros_Valid() const{
    return m_client_account_lead_gross_profit_micros_isValid;
}

QString OAIGoogleAdsSearchads360V0Common__Metrics::getClientAccountLeadRevenueMicros() const {
    return m_client_account_lead_revenue_micros;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setClientAccountLeadRevenueMicros(const QString &client_account_lead_revenue_micros) {
    m_client_account_lead_revenue_micros = client_account_lead_revenue_micros;
    m_client_account_lead_revenue_micros_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_client_account_lead_revenue_micros_Set() const{
    return m_client_account_lead_revenue_micros_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_client_account_lead_revenue_micros_Valid() const{
    return m_client_account_lead_revenue_micros_isValid;
}

double OAIGoogleAdsSearchads360V0Common__Metrics::getClientAccountLeadUnitsSold() const {
    return m_client_account_lead_units_sold;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setClientAccountLeadUnitsSold(const double &client_account_lead_units_sold) {
    m_client_account_lead_units_sold = client_account_lead_units_sold;
    m_client_account_lead_units_sold_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_client_account_lead_units_sold_Set() const{
    return m_client_account_lead_units_sold_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_client_account_lead_units_sold_Valid() const{
    return m_client_account_lead_units_sold_isValid;
}

QString OAIGoogleAdsSearchads360V0Common__Metrics::getClientAccountViewThroughConversions() const {
    return m_client_account_view_through_conversions;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setClientAccountViewThroughConversions(const QString &client_account_view_through_conversions) {
    m_client_account_view_through_conversions = client_account_view_through_conversions;
    m_client_account_view_through_conversions_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_client_account_view_through_conversions_Set() const{
    return m_client_account_view_through_conversions_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_client_account_view_through_conversions_Valid() const{
    return m_client_account_view_through_conversions_isValid;
}

double OAIGoogleAdsSearchads360V0Common__Metrics::getContentBudgetLostImpressionShare() const {
    return m_content_budget_lost_impression_share;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setContentBudgetLostImpressionShare(const double &content_budget_lost_impression_share) {
    m_content_budget_lost_impression_share = content_budget_lost_impression_share;
    m_content_budget_lost_impression_share_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_content_budget_lost_impression_share_Set() const{
    return m_content_budget_lost_impression_share_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_content_budget_lost_impression_share_Valid() const{
    return m_content_budget_lost_impression_share_isValid;
}

double OAIGoogleAdsSearchads360V0Common__Metrics::getContentImpressionShare() const {
    return m_content_impression_share;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setContentImpressionShare(const double &content_impression_share) {
    m_content_impression_share = content_impression_share;
    m_content_impression_share_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_content_impression_share_Set() const{
    return m_content_impression_share_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_content_impression_share_Valid() const{
    return m_content_impression_share_isValid;
}

double OAIGoogleAdsSearchads360V0Common__Metrics::getContentRankLostImpressionShare() const {
    return m_content_rank_lost_impression_share;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setContentRankLostImpressionShare(const double &content_rank_lost_impression_share) {
    m_content_rank_lost_impression_share = content_rank_lost_impression_share;
    m_content_rank_lost_impression_share_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_content_rank_lost_impression_share_Set() const{
    return m_content_rank_lost_impression_share_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_content_rank_lost_impression_share_Valid() const{
    return m_content_rank_lost_impression_share_isValid;
}

QList<OAIGoogleAdsSearchads360V0Common__Value> OAIGoogleAdsSearchads360V0Common__Metrics::getConversionCustomMetrics() const {
    return m_conversion_custom_metrics;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setConversionCustomMetrics(const QList<OAIGoogleAdsSearchads360V0Common__Value> &conversion_custom_metrics) {
    m_conversion_custom_metrics = conversion_custom_metrics;
    m_conversion_custom_metrics_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_conversion_custom_metrics_Set() const{
    return m_conversion_custom_metrics_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_conversion_custom_metrics_Valid() const{
    return m_conversion_custom_metrics_isValid;
}

double OAIGoogleAdsSearchads360V0Common__Metrics::getConversions() const {
    return m_conversions;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setConversions(const double &conversions) {
    m_conversions = conversions;
    m_conversions_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_conversions_Set() const{
    return m_conversions_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_conversions_Valid() const{
    return m_conversions_isValid;
}

double OAIGoogleAdsSearchads360V0Common__Metrics::getConversionsByConversionDate() const {
    return m_conversions_by_conversion_date;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setConversionsByConversionDate(const double &conversions_by_conversion_date) {
    m_conversions_by_conversion_date = conversions_by_conversion_date;
    m_conversions_by_conversion_date_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_conversions_by_conversion_date_Set() const{
    return m_conversions_by_conversion_date_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_conversions_by_conversion_date_Valid() const{
    return m_conversions_by_conversion_date_isValid;
}

double OAIGoogleAdsSearchads360V0Common__Metrics::getConversionsFromInteractionsRate() const {
    return m_conversions_from_interactions_rate;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setConversionsFromInteractionsRate(const double &conversions_from_interactions_rate) {
    m_conversions_from_interactions_rate = conversions_from_interactions_rate;
    m_conversions_from_interactions_rate_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_conversions_from_interactions_rate_Set() const{
    return m_conversions_from_interactions_rate_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_conversions_from_interactions_rate_Valid() const{
    return m_conversions_from_interactions_rate_isValid;
}

double OAIGoogleAdsSearchads360V0Common__Metrics::getConversionsFromInteractionsValuePerInteraction() const {
    return m_conversions_from_interactions_value_per_interaction;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setConversionsFromInteractionsValuePerInteraction(const double &conversions_from_interactions_value_per_interaction) {
    m_conversions_from_interactions_value_per_interaction = conversions_from_interactions_value_per_interaction;
    m_conversions_from_interactions_value_per_interaction_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_conversions_from_interactions_value_per_interaction_Set() const{
    return m_conversions_from_interactions_value_per_interaction_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_conversions_from_interactions_value_per_interaction_Valid() const{
    return m_conversions_from_interactions_value_per_interaction_isValid;
}

double OAIGoogleAdsSearchads360V0Common__Metrics::getConversionsValue() const {
    return m_conversions_value;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setConversionsValue(const double &conversions_value) {
    m_conversions_value = conversions_value;
    m_conversions_value_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_conversions_value_Set() const{
    return m_conversions_value_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_conversions_value_Valid() const{
    return m_conversions_value_isValid;
}

double OAIGoogleAdsSearchads360V0Common__Metrics::getConversionsValueByConversionDate() const {
    return m_conversions_value_by_conversion_date;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setConversionsValueByConversionDate(const double &conversions_value_by_conversion_date) {
    m_conversions_value_by_conversion_date = conversions_value_by_conversion_date;
    m_conversions_value_by_conversion_date_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_conversions_value_by_conversion_date_Set() const{
    return m_conversions_value_by_conversion_date_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_conversions_value_by_conversion_date_Valid() const{
    return m_conversions_value_by_conversion_date_isValid;
}

double OAIGoogleAdsSearchads360V0Common__Metrics::getConversionsValuePerCost() const {
    return m_conversions_value_per_cost;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setConversionsValuePerCost(const double &conversions_value_per_cost) {
    m_conversions_value_per_cost = conversions_value_per_cost;
    m_conversions_value_per_cost_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_conversions_value_per_cost_Set() const{
    return m_conversions_value_per_cost_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_conversions_value_per_cost_Valid() const{
    return m_conversions_value_per_cost_isValid;
}

QString OAIGoogleAdsSearchads360V0Common__Metrics::getCostMicros() const {
    return m_cost_micros;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setCostMicros(const QString &cost_micros) {
    m_cost_micros = cost_micros;
    m_cost_micros_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_cost_micros_Set() const{
    return m_cost_micros_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_cost_micros_Valid() const{
    return m_cost_micros_isValid;
}

double OAIGoogleAdsSearchads360V0Common__Metrics::getCostPerAllConversions() const {
    return m_cost_per_all_conversions;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setCostPerAllConversions(const double &cost_per_all_conversions) {
    m_cost_per_all_conversions = cost_per_all_conversions;
    m_cost_per_all_conversions_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_cost_per_all_conversions_Set() const{
    return m_cost_per_all_conversions_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_cost_per_all_conversions_Valid() const{
    return m_cost_per_all_conversions_isValid;
}

double OAIGoogleAdsSearchads360V0Common__Metrics::getCostPerConversion() const {
    return m_cost_per_conversion;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setCostPerConversion(const double &cost_per_conversion) {
    m_cost_per_conversion = cost_per_conversion;
    m_cost_per_conversion_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_cost_per_conversion_Set() const{
    return m_cost_per_conversion_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_cost_per_conversion_Valid() const{
    return m_cost_per_conversion_isValid;
}

double OAIGoogleAdsSearchads360V0Common__Metrics::getCostPerCurrentModelAttributedConversion() const {
    return m_cost_per_current_model_attributed_conversion;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setCostPerCurrentModelAttributedConversion(const double &cost_per_current_model_attributed_conversion) {
    m_cost_per_current_model_attributed_conversion = cost_per_current_model_attributed_conversion;
    m_cost_per_current_model_attributed_conversion_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_cost_per_current_model_attributed_conversion_Set() const{
    return m_cost_per_current_model_attributed_conversion_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_cost_per_current_model_attributed_conversion_Valid() const{
    return m_cost_per_current_model_attributed_conversion_isValid;
}

double OAIGoogleAdsSearchads360V0Common__Metrics::getCrossDeviceConversions() const {
    return m_cross_device_conversions;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setCrossDeviceConversions(const double &cross_device_conversions) {
    m_cross_device_conversions = cross_device_conversions;
    m_cross_device_conversions_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_cross_device_conversions_Set() const{
    return m_cross_device_conversions_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_cross_device_conversions_Valid() const{
    return m_cross_device_conversions_isValid;
}

double OAIGoogleAdsSearchads360V0Common__Metrics::getCrossDeviceConversionsValue() const {
    return m_cross_device_conversions_value;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setCrossDeviceConversionsValue(const double &cross_device_conversions_value) {
    m_cross_device_conversions_value = cross_device_conversions_value;
    m_cross_device_conversions_value_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_cross_device_conversions_value_Set() const{
    return m_cross_device_conversions_value_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_cross_device_conversions_value_Valid() const{
    return m_cross_device_conversions_value_isValid;
}

QString OAIGoogleAdsSearchads360V0Common__Metrics::getCrossSellCostOfGoodsSoldMicros() const {
    return m_cross_sell_cost_of_goods_sold_micros;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setCrossSellCostOfGoodsSoldMicros(const QString &cross_sell_cost_of_goods_sold_micros) {
    m_cross_sell_cost_of_goods_sold_micros = cross_sell_cost_of_goods_sold_micros;
    m_cross_sell_cost_of_goods_sold_micros_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_cross_sell_cost_of_goods_sold_micros_Set() const{
    return m_cross_sell_cost_of_goods_sold_micros_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_cross_sell_cost_of_goods_sold_micros_Valid() const{
    return m_cross_sell_cost_of_goods_sold_micros_isValid;
}

QString OAIGoogleAdsSearchads360V0Common__Metrics::getCrossSellGrossProfitMicros() const {
    return m_cross_sell_gross_profit_micros;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setCrossSellGrossProfitMicros(const QString &cross_sell_gross_profit_micros) {
    m_cross_sell_gross_profit_micros = cross_sell_gross_profit_micros;
    m_cross_sell_gross_profit_micros_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_cross_sell_gross_profit_micros_Set() const{
    return m_cross_sell_gross_profit_micros_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_cross_sell_gross_profit_micros_Valid() const{
    return m_cross_sell_gross_profit_micros_isValid;
}

QString OAIGoogleAdsSearchads360V0Common__Metrics::getCrossSellRevenueMicros() const {
    return m_cross_sell_revenue_micros;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setCrossSellRevenueMicros(const QString &cross_sell_revenue_micros) {
    m_cross_sell_revenue_micros = cross_sell_revenue_micros;
    m_cross_sell_revenue_micros_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_cross_sell_revenue_micros_Set() const{
    return m_cross_sell_revenue_micros_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_cross_sell_revenue_micros_Valid() const{
    return m_cross_sell_revenue_micros_isValid;
}

double OAIGoogleAdsSearchads360V0Common__Metrics::getCrossSellUnitsSold() const {
    return m_cross_sell_units_sold;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setCrossSellUnitsSold(const double &cross_sell_units_sold) {
    m_cross_sell_units_sold = cross_sell_units_sold;
    m_cross_sell_units_sold_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_cross_sell_units_sold_Set() const{
    return m_cross_sell_units_sold_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_cross_sell_units_sold_Valid() const{
    return m_cross_sell_units_sold_isValid;
}

double OAIGoogleAdsSearchads360V0Common__Metrics::getCtr() const {
    return m_ctr;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setCtr(const double &ctr) {
    m_ctr = ctr;
    m_ctr_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_ctr_Set() const{
    return m_ctr_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_ctr_Valid() const{
    return m_ctr_isValid;
}

QString OAIGoogleAdsSearchads360V0Common__Metrics::getHistoricalCreativeQualityScore() const {
    return m_historical_creative_quality_score;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setHistoricalCreativeQualityScore(const QString &historical_creative_quality_score) {
    m_historical_creative_quality_score = historical_creative_quality_score;
    m_historical_creative_quality_score_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_historical_creative_quality_score_Set() const{
    return m_historical_creative_quality_score_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_historical_creative_quality_score_Valid() const{
    return m_historical_creative_quality_score_isValid;
}

QString OAIGoogleAdsSearchads360V0Common__Metrics::getHistoricalLandingPageQualityScore() const {
    return m_historical_landing_page_quality_score;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setHistoricalLandingPageQualityScore(const QString &historical_landing_page_quality_score) {
    m_historical_landing_page_quality_score = historical_landing_page_quality_score;
    m_historical_landing_page_quality_score_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_historical_landing_page_quality_score_Set() const{
    return m_historical_landing_page_quality_score_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_historical_landing_page_quality_score_Valid() const{
    return m_historical_landing_page_quality_score_isValid;
}

QString OAIGoogleAdsSearchads360V0Common__Metrics::getHistoricalQualityScore() const {
    return m_historical_quality_score;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setHistoricalQualityScore(const QString &historical_quality_score) {
    m_historical_quality_score = historical_quality_score;
    m_historical_quality_score_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_historical_quality_score_Set() const{
    return m_historical_quality_score_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_historical_quality_score_Valid() const{
    return m_historical_quality_score_isValid;
}

QString OAIGoogleAdsSearchads360V0Common__Metrics::getHistoricalSearchPredictedCtr() const {
    return m_historical_search_predicted_ctr;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setHistoricalSearchPredictedCtr(const QString &historical_search_predicted_ctr) {
    m_historical_search_predicted_ctr = historical_search_predicted_ctr;
    m_historical_search_predicted_ctr_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_historical_search_predicted_ctr_Set() const{
    return m_historical_search_predicted_ctr_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_historical_search_predicted_ctr_Valid() const{
    return m_historical_search_predicted_ctr_isValid;
}

QString OAIGoogleAdsSearchads360V0Common__Metrics::getImpressions() const {
    return m_impressions;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setImpressions(const QString &impressions) {
    m_impressions = impressions;
    m_impressions_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_impressions_Set() const{
    return m_impressions_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_impressions_Valid() const{
    return m_impressions_isValid;
}

QList<QString> OAIGoogleAdsSearchads360V0Common__Metrics::getInteractionEventTypes() const {
    return m_interaction_event_types;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setInteractionEventTypes(const QList<QString> &interaction_event_types) {
    m_interaction_event_types = interaction_event_types;
    m_interaction_event_types_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_interaction_event_types_Set() const{
    return m_interaction_event_types_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_interaction_event_types_Valid() const{
    return m_interaction_event_types_isValid;
}

double OAIGoogleAdsSearchads360V0Common__Metrics::getInteractionRate() const {
    return m_interaction_rate;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setInteractionRate(const double &interaction_rate) {
    m_interaction_rate = interaction_rate;
    m_interaction_rate_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_interaction_rate_Set() const{
    return m_interaction_rate_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_interaction_rate_Valid() const{
    return m_interaction_rate_isValid;
}

QString OAIGoogleAdsSearchads360V0Common__Metrics::getInteractions() const {
    return m_interactions;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setInteractions(const QString &interactions) {
    m_interactions = interactions;
    m_interactions_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_interactions_Set() const{
    return m_interactions_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_interactions_Valid() const{
    return m_interactions_isValid;
}

double OAIGoogleAdsSearchads360V0Common__Metrics::getInvalidClickRate() const {
    return m_invalid_click_rate;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setInvalidClickRate(const double &invalid_click_rate) {
    m_invalid_click_rate = invalid_click_rate;
    m_invalid_click_rate_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_invalid_click_rate_Set() const{
    return m_invalid_click_rate_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_invalid_click_rate_Valid() const{
    return m_invalid_click_rate_isValid;
}

QString OAIGoogleAdsSearchads360V0Common__Metrics::getInvalidClicks() const {
    return m_invalid_clicks;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setInvalidClicks(const QString &invalid_clicks) {
    m_invalid_clicks = invalid_clicks;
    m_invalid_clicks_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_invalid_clicks_Set() const{
    return m_invalid_clicks_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_invalid_clicks_Valid() const{
    return m_invalid_clicks_isValid;
}

QString OAIGoogleAdsSearchads360V0Common__Metrics::getLeadCostOfGoodsSoldMicros() const {
    return m_lead_cost_of_goods_sold_micros;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setLeadCostOfGoodsSoldMicros(const QString &lead_cost_of_goods_sold_micros) {
    m_lead_cost_of_goods_sold_micros = lead_cost_of_goods_sold_micros;
    m_lead_cost_of_goods_sold_micros_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_lead_cost_of_goods_sold_micros_Set() const{
    return m_lead_cost_of_goods_sold_micros_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_lead_cost_of_goods_sold_micros_Valid() const{
    return m_lead_cost_of_goods_sold_micros_isValid;
}

QString OAIGoogleAdsSearchads360V0Common__Metrics::getLeadGrossProfitMicros() const {
    return m_lead_gross_profit_micros;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setLeadGrossProfitMicros(const QString &lead_gross_profit_micros) {
    m_lead_gross_profit_micros = lead_gross_profit_micros;
    m_lead_gross_profit_micros_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_lead_gross_profit_micros_Set() const{
    return m_lead_gross_profit_micros_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_lead_gross_profit_micros_Valid() const{
    return m_lead_gross_profit_micros_isValid;
}

QString OAIGoogleAdsSearchads360V0Common__Metrics::getLeadRevenueMicros() const {
    return m_lead_revenue_micros;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setLeadRevenueMicros(const QString &lead_revenue_micros) {
    m_lead_revenue_micros = lead_revenue_micros;
    m_lead_revenue_micros_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_lead_revenue_micros_Set() const{
    return m_lead_revenue_micros_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_lead_revenue_micros_Valid() const{
    return m_lead_revenue_micros_isValid;
}

double OAIGoogleAdsSearchads360V0Common__Metrics::getLeadUnitsSold() const {
    return m_lead_units_sold;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setLeadUnitsSold(const double &lead_units_sold) {
    m_lead_units_sold = lead_units_sold;
    m_lead_units_sold_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_lead_units_sold_Set() const{
    return m_lead_units_sold_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_lead_units_sold_Valid() const{
    return m_lead_units_sold_isValid;
}

double OAIGoogleAdsSearchads360V0Common__Metrics::getMobileFriendlyClicksPercentage() const {
    return m_mobile_friendly_clicks_percentage;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setMobileFriendlyClicksPercentage(const double &mobile_friendly_clicks_percentage) {
    m_mobile_friendly_clicks_percentage = mobile_friendly_clicks_percentage;
    m_mobile_friendly_clicks_percentage_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_mobile_friendly_clicks_percentage_Set() const{
    return m_mobile_friendly_clicks_percentage_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_mobile_friendly_clicks_percentage_Valid() const{
    return m_mobile_friendly_clicks_percentage_isValid;
}

QList<OAIGoogleAdsSearchads360V0Common__Value> OAIGoogleAdsSearchads360V0Common__Metrics::getRawEventConversionMetrics() const {
    return m_raw_event_conversion_metrics;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setRawEventConversionMetrics(const QList<OAIGoogleAdsSearchads360V0Common__Value> &raw_event_conversion_metrics) {
    m_raw_event_conversion_metrics = raw_event_conversion_metrics;
    m_raw_event_conversion_metrics_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_raw_event_conversion_metrics_Set() const{
    return m_raw_event_conversion_metrics_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_raw_event_conversion_metrics_Valid() const{
    return m_raw_event_conversion_metrics_isValid;
}

double OAIGoogleAdsSearchads360V0Common__Metrics::getSearchAbsoluteTopImpressionShare() const {
    return m_search_absolute_top_impression_share;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setSearchAbsoluteTopImpressionShare(const double &search_absolute_top_impression_share) {
    m_search_absolute_top_impression_share = search_absolute_top_impression_share;
    m_search_absolute_top_impression_share_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_search_absolute_top_impression_share_Set() const{
    return m_search_absolute_top_impression_share_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_search_absolute_top_impression_share_Valid() const{
    return m_search_absolute_top_impression_share_isValid;
}

double OAIGoogleAdsSearchads360V0Common__Metrics::getSearchBudgetLostAbsoluteTopImpressionShare() const {
    return m_search_budget_lost_absolute_top_impression_share;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setSearchBudgetLostAbsoluteTopImpressionShare(const double &search_budget_lost_absolute_top_impression_share) {
    m_search_budget_lost_absolute_top_impression_share = search_budget_lost_absolute_top_impression_share;
    m_search_budget_lost_absolute_top_impression_share_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_search_budget_lost_absolute_top_impression_share_Set() const{
    return m_search_budget_lost_absolute_top_impression_share_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_search_budget_lost_absolute_top_impression_share_Valid() const{
    return m_search_budget_lost_absolute_top_impression_share_isValid;
}

double OAIGoogleAdsSearchads360V0Common__Metrics::getSearchBudgetLostImpressionShare() const {
    return m_search_budget_lost_impression_share;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setSearchBudgetLostImpressionShare(const double &search_budget_lost_impression_share) {
    m_search_budget_lost_impression_share = search_budget_lost_impression_share;
    m_search_budget_lost_impression_share_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_search_budget_lost_impression_share_Set() const{
    return m_search_budget_lost_impression_share_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_search_budget_lost_impression_share_Valid() const{
    return m_search_budget_lost_impression_share_isValid;
}

double OAIGoogleAdsSearchads360V0Common__Metrics::getSearchBudgetLostTopImpressionShare() const {
    return m_search_budget_lost_top_impression_share;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setSearchBudgetLostTopImpressionShare(const double &search_budget_lost_top_impression_share) {
    m_search_budget_lost_top_impression_share = search_budget_lost_top_impression_share;
    m_search_budget_lost_top_impression_share_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_search_budget_lost_top_impression_share_Set() const{
    return m_search_budget_lost_top_impression_share_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_search_budget_lost_top_impression_share_Valid() const{
    return m_search_budget_lost_top_impression_share_isValid;
}

double OAIGoogleAdsSearchads360V0Common__Metrics::getSearchClickShare() const {
    return m_search_click_share;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setSearchClickShare(const double &search_click_share) {
    m_search_click_share = search_click_share;
    m_search_click_share_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_search_click_share_Set() const{
    return m_search_click_share_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_search_click_share_Valid() const{
    return m_search_click_share_isValid;
}

double OAIGoogleAdsSearchads360V0Common__Metrics::getSearchExactMatchImpressionShare() const {
    return m_search_exact_match_impression_share;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setSearchExactMatchImpressionShare(const double &search_exact_match_impression_share) {
    m_search_exact_match_impression_share = search_exact_match_impression_share;
    m_search_exact_match_impression_share_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_search_exact_match_impression_share_Set() const{
    return m_search_exact_match_impression_share_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_search_exact_match_impression_share_Valid() const{
    return m_search_exact_match_impression_share_isValid;
}

double OAIGoogleAdsSearchads360V0Common__Metrics::getSearchImpressionShare() const {
    return m_search_impression_share;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setSearchImpressionShare(const double &search_impression_share) {
    m_search_impression_share = search_impression_share;
    m_search_impression_share_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_search_impression_share_Set() const{
    return m_search_impression_share_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_search_impression_share_Valid() const{
    return m_search_impression_share_isValid;
}

double OAIGoogleAdsSearchads360V0Common__Metrics::getSearchRankLostAbsoluteTopImpressionShare() const {
    return m_search_rank_lost_absolute_top_impression_share;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setSearchRankLostAbsoluteTopImpressionShare(const double &search_rank_lost_absolute_top_impression_share) {
    m_search_rank_lost_absolute_top_impression_share = search_rank_lost_absolute_top_impression_share;
    m_search_rank_lost_absolute_top_impression_share_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_search_rank_lost_absolute_top_impression_share_Set() const{
    return m_search_rank_lost_absolute_top_impression_share_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_search_rank_lost_absolute_top_impression_share_Valid() const{
    return m_search_rank_lost_absolute_top_impression_share_isValid;
}

double OAIGoogleAdsSearchads360V0Common__Metrics::getSearchRankLostImpressionShare() const {
    return m_search_rank_lost_impression_share;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setSearchRankLostImpressionShare(const double &search_rank_lost_impression_share) {
    m_search_rank_lost_impression_share = search_rank_lost_impression_share;
    m_search_rank_lost_impression_share_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_search_rank_lost_impression_share_Set() const{
    return m_search_rank_lost_impression_share_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_search_rank_lost_impression_share_Valid() const{
    return m_search_rank_lost_impression_share_isValid;
}

double OAIGoogleAdsSearchads360V0Common__Metrics::getSearchRankLostTopImpressionShare() const {
    return m_search_rank_lost_top_impression_share;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setSearchRankLostTopImpressionShare(const double &search_rank_lost_top_impression_share) {
    m_search_rank_lost_top_impression_share = search_rank_lost_top_impression_share;
    m_search_rank_lost_top_impression_share_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_search_rank_lost_top_impression_share_Set() const{
    return m_search_rank_lost_top_impression_share_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_search_rank_lost_top_impression_share_Valid() const{
    return m_search_rank_lost_top_impression_share_isValid;
}

double OAIGoogleAdsSearchads360V0Common__Metrics::getSearchTopImpressionShare() const {
    return m_search_top_impression_share;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setSearchTopImpressionShare(const double &search_top_impression_share) {
    m_search_top_impression_share = search_top_impression_share;
    m_search_top_impression_share_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_search_top_impression_share_Set() const{
    return m_search_top_impression_share_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_search_top_impression_share_Valid() const{
    return m_search_top_impression_share_isValid;
}

double OAIGoogleAdsSearchads360V0Common__Metrics::getTopImpressionPercentage() const {
    return m_top_impression_percentage;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setTopImpressionPercentage(const double &top_impression_percentage) {
    m_top_impression_percentage = top_impression_percentage;
    m_top_impression_percentage_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_top_impression_percentage_Set() const{
    return m_top_impression_percentage_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_top_impression_percentage_Valid() const{
    return m_top_impression_percentage_isValid;
}

double OAIGoogleAdsSearchads360V0Common__Metrics::getValuePerAllConversions() const {
    return m_value_per_all_conversions;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setValuePerAllConversions(const double &value_per_all_conversions) {
    m_value_per_all_conversions = value_per_all_conversions;
    m_value_per_all_conversions_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_value_per_all_conversions_Set() const{
    return m_value_per_all_conversions_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_value_per_all_conversions_Valid() const{
    return m_value_per_all_conversions_isValid;
}

double OAIGoogleAdsSearchads360V0Common__Metrics::getValuePerAllConversionsByConversionDate() const {
    return m_value_per_all_conversions_by_conversion_date;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setValuePerAllConversionsByConversionDate(const double &value_per_all_conversions_by_conversion_date) {
    m_value_per_all_conversions_by_conversion_date = value_per_all_conversions_by_conversion_date;
    m_value_per_all_conversions_by_conversion_date_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_value_per_all_conversions_by_conversion_date_Set() const{
    return m_value_per_all_conversions_by_conversion_date_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_value_per_all_conversions_by_conversion_date_Valid() const{
    return m_value_per_all_conversions_by_conversion_date_isValid;
}

double OAIGoogleAdsSearchads360V0Common__Metrics::getValuePerConversion() const {
    return m_value_per_conversion;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setValuePerConversion(const double &value_per_conversion) {
    m_value_per_conversion = value_per_conversion;
    m_value_per_conversion_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_value_per_conversion_Set() const{
    return m_value_per_conversion_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_value_per_conversion_Valid() const{
    return m_value_per_conversion_isValid;
}

double OAIGoogleAdsSearchads360V0Common__Metrics::getValuePerConversionsByConversionDate() const {
    return m_value_per_conversions_by_conversion_date;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setValuePerConversionsByConversionDate(const double &value_per_conversions_by_conversion_date) {
    m_value_per_conversions_by_conversion_date = value_per_conversions_by_conversion_date;
    m_value_per_conversions_by_conversion_date_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_value_per_conversions_by_conversion_date_Set() const{
    return m_value_per_conversions_by_conversion_date_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_value_per_conversions_by_conversion_date_Valid() const{
    return m_value_per_conversions_by_conversion_date_isValid;
}

double OAIGoogleAdsSearchads360V0Common__Metrics::getVisits() const {
    return m_visits;
}
void OAIGoogleAdsSearchads360V0Common__Metrics::setVisits(const double &visits) {
    m_visits = visits;
    m_visits_isSet = true;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_visits_Set() const{
    return m_visits_isSet;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::is_visits_Valid() const{
    return m_visits_isValid;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_absolute_top_impression_percentage_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_all_conversions_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_all_conversions_by_conversion_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_all_conversions_from_click_to_call_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_all_conversions_from_directions_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_all_conversions_from_interactions_rate_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_all_conversions_from_interactions_value_per_interaction_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_all_conversions_from_menu_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_all_conversions_from_order_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_all_conversions_from_other_engagement_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_all_conversions_from_store_visit_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_all_conversions_from_store_website_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_all_conversions_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_all_conversions_value_by_conversion_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_all_conversions_value_per_cost_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_average_cost_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_average_cpc_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_average_cpm_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_clicks_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_account_conversions_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_account_conversions_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_account_cross_sell_cost_of_goods_sold_micros_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_account_cross_sell_gross_profit_micros_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_account_cross_sell_revenue_micros_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_account_cross_sell_units_sold_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_account_lead_cost_of_goods_sold_micros_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_account_lead_gross_profit_micros_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_account_lead_revenue_micros_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_account_lead_units_sold_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_account_view_through_conversions_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_content_budget_lost_impression_share_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_content_impression_share_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_content_rank_lost_impression_share_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_conversion_custom_metrics.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_conversions_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_conversions_by_conversion_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_conversions_from_interactions_rate_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_conversions_from_interactions_value_per_interaction_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_conversions_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_conversions_value_by_conversion_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_conversions_value_per_cost_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cost_micros_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cost_per_all_conversions_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cost_per_conversion_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cost_per_current_model_attributed_conversion_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cross_device_conversions_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cross_device_conversions_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cross_sell_cost_of_goods_sold_micros_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cross_sell_gross_profit_micros_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cross_sell_revenue_micros_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cross_sell_units_sold_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ctr_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_historical_creative_quality_score_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_historical_landing_page_quality_score_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_historical_quality_score_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_historical_search_predicted_ctr_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_impressions_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_interaction_event_types.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_interaction_rate_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_interactions_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_invalid_click_rate_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_invalid_clicks_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_lead_cost_of_goods_sold_micros_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_lead_gross_profit_micros_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_lead_revenue_micros_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_lead_units_sold_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mobile_friendly_clicks_percentage_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_raw_event_conversion_metrics.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_search_absolute_top_impression_share_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_search_budget_lost_absolute_top_impression_share_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_search_budget_lost_impression_share_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_search_budget_lost_top_impression_share_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_search_click_share_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_search_exact_match_impression_share_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_search_impression_share_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_search_rank_lost_absolute_top_impression_share_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_search_rank_lost_impression_share_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_search_rank_lost_top_impression_share_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_search_top_impression_share_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_top_impression_percentage_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_per_all_conversions_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_per_all_conversions_by_conversion_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_per_conversion_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_per_conversions_by_conversion_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_visits_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleAdsSearchads360V0Common__Metrics::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
