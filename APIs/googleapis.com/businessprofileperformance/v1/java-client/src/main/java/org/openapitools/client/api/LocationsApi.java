/*
 * Business Profile Performance API
 * The Business Profile Performance API allows merchants to fetch performance reports about their business profile on Google. Note - If you have a quota of 0 after enabling the API, please request for GBP API access.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.FetchMultiDailyMetricsTimeSeriesResponse;
import org.openapitools.client.model.GetDailyMetricsTimeSeriesResponse;
import org.openapitools.client.model.ListSearchKeywordImpressionsMonthlyResponse;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class LocationsApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public LocationsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public LocationsApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for businessprofileperformanceLocationsFetchMultiDailyMetricsTimeSeries
     * @param location Required. The location for which the time series should be fetched. Format: locations/{location_id} where location_id is an unobfuscated listing id. (required)
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param dailyMetrics Required. The metrics to retrieve time series for. (optional)
     * @param dailyRangeEndDateDay Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn&#39;t significant. (optional)
     * @param dailyRangeEndDateMonth Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day. (optional)
     * @param dailyRangeEndDateYear Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year. (optional)
     * @param dailyRangeStartDateDay Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn&#39;t significant. (optional)
     * @param dailyRangeStartDateMonth Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day. (optional)
     * @param dailyRangeStartDateYear Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call businessprofileperformanceLocationsFetchMultiDailyMetricsTimeSeriesCall(String location, String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, List<String> dailyMetrics, Integer dailyRangeEndDateDay, Integer dailyRangeEndDateMonth, Integer dailyRangeEndDateYear, Integer dailyRangeStartDateDay, Integer dailyRangeStartDateMonth, Integer dailyRangeStartDateYear, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v1/{location}:fetchMultiDailyMetricsTimeSeries"
            .replace("{" + "location" + "}", localVarApiClient.escapeString(location.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if ($xgafv != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$.xgafv", $xgafv));
        }

        if (accessToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("access_token", accessToken));
        }

        if (alt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("alt", alt));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        if (fields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields", fields));
        }

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        if (oauthToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("oauth_token", oauthToken));
        }

        if (prettyPrint != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("prettyPrint", prettyPrint));
        }

        if (quotaUser != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("quotaUser", quotaUser));
        }

        if (uploadProtocol != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("upload_protocol", uploadProtocol));
        }

        if (uploadType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("uploadType", uploadType));
        }

        if (dailyMetrics != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "dailyMetrics", dailyMetrics));
        }

        if (dailyRangeEndDateDay != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("dailyRange.endDate.day", dailyRangeEndDateDay));
        }

        if (dailyRangeEndDateMonth != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("dailyRange.endDate.month", dailyRangeEndDateMonth));
        }

        if (dailyRangeEndDateYear != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("dailyRange.endDate.year", dailyRangeEndDateYear));
        }

        if (dailyRangeStartDateDay != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("dailyRange.startDate.day", dailyRangeStartDateDay));
        }

        if (dailyRangeStartDateMonth != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("dailyRange.startDate.month", dailyRangeStartDateMonth));
        }

        if (dailyRangeStartDateYear != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("dailyRange.startDate.year", dailyRangeStartDateYear));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call businessprofileperformanceLocationsFetchMultiDailyMetricsTimeSeriesValidateBeforeCall(String location, String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, List<String> dailyMetrics, Integer dailyRangeEndDateDay, Integer dailyRangeEndDateMonth, Integer dailyRangeEndDateYear, Integer dailyRangeStartDateDay, Integer dailyRangeStartDateMonth, Integer dailyRangeStartDateYear, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'location' is set
        if (location == null) {
            throw new ApiException("Missing the required parameter 'location' when calling businessprofileperformanceLocationsFetchMultiDailyMetricsTimeSeries(Async)");
        }

        return businessprofileperformanceLocationsFetchMultiDailyMetricsTimeSeriesCall(location, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, dailyMetrics, dailyRangeEndDateDay, dailyRangeEndDateMonth, dailyRangeEndDateYear, dailyRangeStartDateDay, dailyRangeStartDateMonth, dailyRangeStartDateYear, _callback);

    }

    /**
     * 
     *  Returns the values for each date from a given time range and optionally the sub entity type, where applicable, that are associated with the specific daily metrics. Example request: &#x60;GET https://businessprofileperformance.googleapis.com/v1/locations/12345:fetchMultiDailyMetricsTimeSeries?dailyMetrics&#x3D;WEBSITE_CLICKS&amp;dailyMetrics&#x3D;CALL_CLICKS&amp;daily_range.start_date.year&#x3D;2022&amp;daily_range.start_date.month&#x3D;1&amp;daily_range.start_date.day&#x3D;1&amp;daily_range.end_date.year&#x3D;2022&amp;daily_range.end_date.month&#x3D;3&amp;daily_range.end_date.day&#x3D;31&#x60;
     * @param location Required. The location for which the time series should be fetched. Format: locations/{location_id} where location_id is an unobfuscated listing id. (required)
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param dailyMetrics Required. The metrics to retrieve time series for. (optional)
     * @param dailyRangeEndDateDay Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn&#39;t significant. (optional)
     * @param dailyRangeEndDateMonth Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day. (optional)
     * @param dailyRangeEndDateYear Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year. (optional)
     * @param dailyRangeStartDateDay Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn&#39;t significant. (optional)
     * @param dailyRangeStartDateMonth Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day. (optional)
     * @param dailyRangeStartDateYear Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year. (optional)
     * @return FetchMultiDailyMetricsTimeSeriesResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public FetchMultiDailyMetricsTimeSeriesResponse businessprofileperformanceLocationsFetchMultiDailyMetricsTimeSeries(String location, String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, List<String> dailyMetrics, Integer dailyRangeEndDateDay, Integer dailyRangeEndDateMonth, Integer dailyRangeEndDateYear, Integer dailyRangeStartDateDay, Integer dailyRangeStartDateMonth, Integer dailyRangeStartDateYear) throws ApiException {
        ApiResponse<FetchMultiDailyMetricsTimeSeriesResponse> localVarResp = businessprofileperformanceLocationsFetchMultiDailyMetricsTimeSeriesWithHttpInfo(location, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, dailyMetrics, dailyRangeEndDateDay, dailyRangeEndDateMonth, dailyRangeEndDateYear, dailyRangeStartDateDay, dailyRangeStartDateMonth, dailyRangeStartDateYear);
        return localVarResp.getData();
    }

    /**
     * 
     *  Returns the values for each date from a given time range and optionally the sub entity type, where applicable, that are associated with the specific daily metrics. Example request: &#x60;GET https://businessprofileperformance.googleapis.com/v1/locations/12345:fetchMultiDailyMetricsTimeSeries?dailyMetrics&#x3D;WEBSITE_CLICKS&amp;dailyMetrics&#x3D;CALL_CLICKS&amp;daily_range.start_date.year&#x3D;2022&amp;daily_range.start_date.month&#x3D;1&amp;daily_range.start_date.day&#x3D;1&amp;daily_range.end_date.year&#x3D;2022&amp;daily_range.end_date.month&#x3D;3&amp;daily_range.end_date.day&#x3D;31&#x60;
     * @param location Required. The location for which the time series should be fetched. Format: locations/{location_id} where location_id is an unobfuscated listing id. (required)
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param dailyMetrics Required. The metrics to retrieve time series for. (optional)
     * @param dailyRangeEndDateDay Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn&#39;t significant. (optional)
     * @param dailyRangeEndDateMonth Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day. (optional)
     * @param dailyRangeEndDateYear Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year. (optional)
     * @param dailyRangeStartDateDay Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn&#39;t significant. (optional)
     * @param dailyRangeStartDateMonth Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day. (optional)
     * @param dailyRangeStartDateYear Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year. (optional)
     * @return ApiResponse&lt;FetchMultiDailyMetricsTimeSeriesResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<FetchMultiDailyMetricsTimeSeriesResponse> businessprofileperformanceLocationsFetchMultiDailyMetricsTimeSeriesWithHttpInfo(String location, String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, List<String> dailyMetrics, Integer dailyRangeEndDateDay, Integer dailyRangeEndDateMonth, Integer dailyRangeEndDateYear, Integer dailyRangeStartDateDay, Integer dailyRangeStartDateMonth, Integer dailyRangeStartDateYear) throws ApiException {
        okhttp3.Call localVarCall = businessprofileperformanceLocationsFetchMultiDailyMetricsTimeSeriesValidateBeforeCall(location, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, dailyMetrics, dailyRangeEndDateDay, dailyRangeEndDateMonth, dailyRangeEndDateYear, dailyRangeStartDateDay, dailyRangeStartDateMonth, dailyRangeStartDateYear, null);
        Type localVarReturnType = new TypeToken<FetchMultiDailyMetricsTimeSeriesResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     *  Returns the values for each date from a given time range and optionally the sub entity type, where applicable, that are associated with the specific daily metrics. Example request: &#x60;GET https://businessprofileperformance.googleapis.com/v1/locations/12345:fetchMultiDailyMetricsTimeSeries?dailyMetrics&#x3D;WEBSITE_CLICKS&amp;dailyMetrics&#x3D;CALL_CLICKS&amp;daily_range.start_date.year&#x3D;2022&amp;daily_range.start_date.month&#x3D;1&amp;daily_range.start_date.day&#x3D;1&amp;daily_range.end_date.year&#x3D;2022&amp;daily_range.end_date.month&#x3D;3&amp;daily_range.end_date.day&#x3D;31&#x60;
     * @param location Required. The location for which the time series should be fetched. Format: locations/{location_id} where location_id is an unobfuscated listing id. (required)
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param dailyMetrics Required. The metrics to retrieve time series for. (optional)
     * @param dailyRangeEndDateDay Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn&#39;t significant. (optional)
     * @param dailyRangeEndDateMonth Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day. (optional)
     * @param dailyRangeEndDateYear Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year. (optional)
     * @param dailyRangeStartDateDay Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn&#39;t significant. (optional)
     * @param dailyRangeStartDateMonth Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day. (optional)
     * @param dailyRangeStartDateYear Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call businessprofileperformanceLocationsFetchMultiDailyMetricsTimeSeriesAsync(String location, String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, List<String> dailyMetrics, Integer dailyRangeEndDateDay, Integer dailyRangeEndDateMonth, Integer dailyRangeEndDateYear, Integer dailyRangeStartDateDay, Integer dailyRangeStartDateMonth, Integer dailyRangeStartDateYear, final ApiCallback<FetchMultiDailyMetricsTimeSeriesResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = businessprofileperformanceLocationsFetchMultiDailyMetricsTimeSeriesValidateBeforeCall(location, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, dailyMetrics, dailyRangeEndDateDay, dailyRangeEndDateMonth, dailyRangeEndDateYear, dailyRangeStartDateDay, dailyRangeStartDateMonth, dailyRangeStartDateYear, _callback);
        Type localVarReturnType = new TypeToken<FetchMultiDailyMetricsTimeSeriesResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for businessprofileperformanceLocationsGetDailyMetricsTimeSeries
     * @param name Required. The location for which the time series should be fetched. Format: locations/{location_id} where location_id is an unobfuscated listing id. (required)
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param dailyMetric Required. The metric to retrieve time series. (optional)
     * @param dailyRangeEndDateDay Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn&#39;t significant. (optional)
     * @param dailyRangeEndDateMonth Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day. (optional)
     * @param dailyRangeEndDateYear Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year. (optional)
     * @param dailyRangeStartDateDay Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn&#39;t significant. (optional)
     * @param dailyRangeStartDateMonth Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day. (optional)
     * @param dailyRangeStartDateYear Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year. (optional)
     * @param dailySubEntityTypeDayOfWeek Represents the day of the week. Eg: MONDAY. Currently supported DailyMetrics &#x3D; NONE. (optional)
     * @param dailySubEntityTypeTimeOfDayHours Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value \&quot;24:00:00\&quot; for scenarios like business closing time. (optional)
     * @param dailySubEntityTypeTimeOfDayMinutes Minutes of hour of day. Must be from 0 to 59. (optional)
     * @param dailySubEntityTypeTimeOfDayNanos Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999. (optional)
     * @param dailySubEntityTypeTimeOfDaySeconds Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call businessprofileperformanceLocationsGetDailyMetricsTimeSeriesCall(String name, String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, String dailyMetric, Integer dailyRangeEndDateDay, Integer dailyRangeEndDateMonth, Integer dailyRangeEndDateYear, Integer dailyRangeStartDateDay, Integer dailyRangeStartDateMonth, Integer dailyRangeStartDateYear, String dailySubEntityTypeDayOfWeek, Integer dailySubEntityTypeTimeOfDayHours, Integer dailySubEntityTypeTimeOfDayMinutes, Integer dailySubEntityTypeTimeOfDayNanos, Integer dailySubEntityTypeTimeOfDaySeconds, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v1/{name}:getDailyMetricsTimeSeries"
            .replace("{" + "name" + "}", localVarApiClient.escapeString(name.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if ($xgafv != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$.xgafv", $xgafv));
        }

        if (accessToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("access_token", accessToken));
        }

        if (alt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("alt", alt));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        if (fields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields", fields));
        }

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        if (oauthToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("oauth_token", oauthToken));
        }

        if (prettyPrint != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("prettyPrint", prettyPrint));
        }

        if (quotaUser != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("quotaUser", quotaUser));
        }

        if (uploadProtocol != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("upload_protocol", uploadProtocol));
        }

        if (uploadType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("uploadType", uploadType));
        }

        if (dailyMetric != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("dailyMetric", dailyMetric));
        }

        if (dailyRangeEndDateDay != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("dailyRange.endDate.day", dailyRangeEndDateDay));
        }

        if (dailyRangeEndDateMonth != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("dailyRange.endDate.month", dailyRangeEndDateMonth));
        }

        if (dailyRangeEndDateYear != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("dailyRange.endDate.year", dailyRangeEndDateYear));
        }

        if (dailyRangeStartDateDay != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("dailyRange.startDate.day", dailyRangeStartDateDay));
        }

        if (dailyRangeStartDateMonth != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("dailyRange.startDate.month", dailyRangeStartDateMonth));
        }

        if (dailyRangeStartDateYear != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("dailyRange.startDate.year", dailyRangeStartDateYear));
        }

        if (dailySubEntityTypeDayOfWeek != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("dailySubEntityType.dayOfWeek", dailySubEntityTypeDayOfWeek));
        }

        if (dailySubEntityTypeTimeOfDayHours != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("dailySubEntityType.timeOfDay.hours", dailySubEntityTypeTimeOfDayHours));
        }

        if (dailySubEntityTypeTimeOfDayMinutes != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("dailySubEntityType.timeOfDay.minutes", dailySubEntityTypeTimeOfDayMinutes));
        }

        if (dailySubEntityTypeTimeOfDayNanos != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("dailySubEntityType.timeOfDay.nanos", dailySubEntityTypeTimeOfDayNanos));
        }

        if (dailySubEntityTypeTimeOfDaySeconds != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("dailySubEntityType.timeOfDay.seconds", dailySubEntityTypeTimeOfDaySeconds));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call businessprofileperformanceLocationsGetDailyMetricsTimeSeriesValidateBeforeCall(String name, String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, String dailyMetric, Integer dailyRangeEndDateDay, Integer dailyRangeEndDateMonth, Integer dailyRangeEndDateYear, Integer dailyRangeStartDateDay, Integer dailyRangeStartDateMonth, Integer dailyRangeStartDateYear, String dailySubEntityTypeDayOfWeek, Integer dailySubEntityTypeTimeOfDayHours, Integer dailySubEntityTypeTimeOfDayMinutes, Integer dailySubEntityTypeTimeOfDayNanos, Integer dailySubEntityTypeTimeOfDaySeconds, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'name' is set
        if (name == null) {
            throw new ApiException("Missing the required parameter 'name' when calling businessprofileperformanceLocationsGetDailyMetricsTimeSeries(Async)");
        }

        return businessprofileperformanceLocationsGetDailyMetricsTimeSeriesCall(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, dailyMetric, dailyRangeEndDateDay, dailyRangeEndDateMonth, dailyRangeEndDateYear, dailyRangeStartDateDay, dailyRangeStartDateMonth, dailyRangeStartDateYear, dailySubEntityTypeDayOfWeek, dailySubEntityTypeTimeOfDayHours, dailySubEntityTypeTimeOfDayMinutes, dailySubEntityTypeTimeOfDayNanos, dailySubEntityTypeTimeOfDaySeconds, _callback);

    }

    /**
     * 
     *  Returns the values for each date from a given time range that are associated with the specific daily metric. Example request: &#x60;GET https://businessprofileperformance.googleapis.com/v1/locations/12345:getDailyMetricsTimeSeries?dailyMetric&#x3D;WEBSITE_CLICKS&amp;daily_range.start_date.year&#x3D;2022&amp;daily_range.start_date.month&#x3D;1&amp;daily_range.start_date.day&#x3D;1&amp;daily_range.end_date.year&#x3D;2022&amp;daily_range.end_date.month&#x3D;3&amp;daily_range.end_date.day&#x3D;31&#x60;
     * @param name Required. The location for which the time series should be fetched. Format: locations/{location_id} where location_id is an unobfuscated listing id. (required)
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param dailyMetric Required. The metric to retrieve time series. (optional)
     * @param dailyRangeEndDateDay Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn&#39;t significant. (optional)
     * @param dailyRangeEndDateMonth Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day. (optional)
     * @param dailyRangeEndDateYear Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year. (optional)
     * @param dailyRangeStartDateDay Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn&#39;t significant. (optional)
     * @param dailyRangeStartDateMonth Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day. (optional)
     * @param dailyRangeStartDateYear Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year. (optional)
     * @param dailySubEntityTypeDayOfWeek Represents the day of the week. Eg: MONDAY. Currently supported DailyMetrics &#x3D; NONE. (optional)
     * @param dailySubEntityTypeTimeOfDayHours Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value \&quot;24:00:00\&quot; for scenarios like business closing time. (optional)
     * @param dailySubEntityTypeTimeOfDayMinutes Minutes of hour of day. Must be from 0 to 59. (optional)
     * @param dailySubEntityTypeTimeOfDayNanos Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999. (optional)
     * @param dailySubEntityTypeTimeOfDaySeconds Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds. (optional)
     * @return GetDailyMetricsTimeSeriesResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public GetDailyMetricsTimeSeriesResponse businessprofileperformanceLocationsGetDailyMetricsTimeSeries(String name, String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, String dailyMetric, Integer dailyRangeEndDateDay, Integer dailyRangeEndDateMonth, Integer dailyRangeEndDateYear, Integer dailyRangeStartDateDay, Integer dailyRangeStartDateMonth, Integer dailyRangeStartDateYear, String dailySubEntityTypeDayOfWeek, Integer dailySubEntityTypeTimeOfDayHours, Integer dailySubEntityTypeTimeOfDayMinutes, Integer dailySubEntityTypeTimeOfDayNanos, Integer dailySubEntityTypeTimeOfDaySeconds) throws ApiException {
        ApiResponse<GetDailyMetricsTimeSeriesResponse> localVarResp = businessprofileperformanceLocationsGetDailyMetricsTimeSeriesWithHttpInfo(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, dailyMetric, dailyRangeEndDateDay, dailyRangeEndDateMonth, dailyRangeEndDateYear, dailyRangeStartDateDay, dailyRangeStartDateMonth, dailyRangeStartDateYear, dailySubEntityTypeDayOfWeek, dailySubEntityTypeTimeOfDayHours, dailySubEntityTypeTimeOfDayMinutes, dailySubEntityTypeTimeOfDayNanos, dailySubEntityTypeTimeOfDaySeconds);
        return localVarResp.getData();
    }

    /**
     * 
     *  Returns the values for each date from a given time range that are associated with the specific daily metric. Example request: &#x60;GET https://businessprofileperformance.googleapis.com/v1/locations/12345:getDailyMetricsTimeSeries?dailyMetric&#x3D;WEBSITE_CLICKS&amp;daily_range.start_date.year&#x3D;2022&amp;daily_range.start_date.month&#x3D;1&amp;daily_range.start_date.day&#x3D;1&amp;daily_range.end_date.year&#x3D;2022&amp;daily_range.end_date.month&#x3D;3&amp;daily_range.end_date.day&#x3D;31&#x60;
     * @param name Required. The location for which the time series should be fetched. Format: locations/{location_id} where location_id is an unobfuscated listing id. (required)
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param dailyMetric Required. The metric to retrieve time series. (optional)
     * @param dailyRangeEndDateDay Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn&#39;t significant. (optional)
     * @param dailyRangeEndDateMonth Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day. (optional)
     * @param dailyRangeEndDateYear Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year. (optional)
     * @param dailyRangeStartDateDay Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn&#39;t significant. (optional)
     * @param dailyRangeStartDateMonth Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day. (optional)
     * @param dailyRangeStartDateYear Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year. (optional)
     * @param dailySubEntityTypeDayOfWeek Represents the day of the week. Eg: MONDAY. Currently supported DailyMetrics &#x3D; NONE. (optional)
     * @param dailySubEntityTypeTimeOfDayHours Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value \&quot;24:00:00\&quot; for scenarios like business closing time. (optional)
     * @param dailySubEntityTypeTimeOfDayMinutes Minutes of hour of day. Must be from 0 to 59. (optional)
     * @param dailySubEntityTypeTimeOfDayNanos Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999. (optional)
     * @param dailySubEntityTypeTimeOfDaySeconds Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds. (optional)
     * @return ApiResponse&lt;GetDailyMetricsTimeSeriesResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GetDailyMetricsTimeSeriesResponse> businessprofileperformanceLocationsGetDailyMetricsTimeSeriesWithHttpInfo(String name, String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, String dailyMetric, Integer dailyRangeEndDateDay, Integer dailyRangeEndDateMonth, Integer dailyRangeEndDateYear, Integer dailyRangeStartDateDay, Integer dailyRangeStartDateMonth, Integer dailyRangeStartDateYear, String dailySubEntityTypeDayOfWeek, Integer dailySubEntityTypeTimeOfDayHours, Integer dailySubEntityTypeTimeOfDayMinutes, Integer dailySubEntityTypeTimeOfDayNanos, Integer dailySubEntityTypeTimeOfDaySeconds) throws ApiException {
        okhttp3.Call localVarCall = businessprofileperformanceLocationsGetDailyMetricsTimeSeriesValidateBeforeCall(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, dailyMetric, dailyRangeEndDateDay, dailyRangeEndDateMonth, dailyRangeEndDateYear, dailyRangeStartDateDay, dailyRangeStartDateMonth, dailyRangeStartDateYear, dailySubEntityTypeDayOfWeek, dailySubEntityTypeTimeOfDayHours, dailySubEntityTypeTimeOfDayMinutes, dailySubEntityTypeTimeOfDayNanos, dailySubEntityTypeTimeOfDaySeconds, null);
        Type localVarReturnType = new TypeToken<GetDailyMetricsTimeSeriesResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     *  Returns the values for each date from a given time range that are associated with the specific daily metric. Example request: &#x60;GET https://businessprofileperformance.googleapis.com/v1/locations/12345:getDailyMetricsTimeSeries?dailyMetric&#x3D;WEBSITE_CLICKS&amp;daily_range.start_date.year&#x3D;2022&amp;daily_range.start_date.month&#x3D;1&amp;daily_range.start_date.day&#x3D;1&amp;daily_range.end_date.year&#x3D;2022&amp;daily_range.end_date.month&#x3D;3&amp;daily_range.end_date.day&#x3D;31&#x60;
     * @param name Required. The location for which the time series should be fetched. Format: locations/{location_id} where location_id is an unobfuscated listing id. (required)
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param dailyMetric Required. The metric to retrieve time series. (optional)
     * @param dailyRangeEndDateDay Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn&#39;t significant. (optional)
     * @param dailyRangeEndDateMonth Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day. (optional)
     * @param dailyRangeEndDateYear Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year. (optional)
     * @param dailyRangeStartDateDay Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn&#39;t significant. (optional)
     * @param dailyRangeStartDateMonth Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day. (optional)
     * @param dailyRangeStartDateYear Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year. (optional)
     * @param dailySubEntityTypeDayOfWeek Represents the day of the week. Eg: MONDAY. Currently supported DailyMetrics &#x3D; NONE. (optional)
     * @param dailySubEntityTypeTimeOfDayHours Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value \&quot;24:00:00\&quot; for scenarios like business closing time. (optional)
     * @param dailySubEntityTypeTimeOfDayMinutes Minutes of hour of day. Must be from 0 to 59. (optional)
     * @param dailySubEntityTypeTimeOfDayNanos Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999. (optional)
     * @param dailySubEntityTypeTimeOfDaySeconds Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call businessprofileperformanceLocationsGetDailyMetricsTimeSeriesAsync(String name, String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, String dailyMetric, Integer dailyRangeEndDateDay, Integer dailyRangeEndDateMonth, Integer dailyRangeEndDateYear, Integer dailyRangeStartDateDay, Integer dailyRangeStartDateMonth, Integer dailyRangeStartDateYear, String dailySubEntityTypeDayOfWeek, Integer dailySubEntityTypeTimeOfDayHours, Integer dailySubEntityTypeTimeOfDayMinutes, Integer dailySubEntityTypeTimeOfDayNanos, Integer dailySubEntityTypeTimeOfDaySeconds, final ApiCallback<GetDailyMetricsTimeSeriesResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = businessprofileperformanceLocationsGetDailyMetricsTimeSeriesValidateBeforeCall(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, dailyMetric, dailyRangeEndDateDay, dailyRangeEndDateMonth, dailyRangeEndDateYear, dailyRangeStartDateDay, dailyRangeStartDateMonth, dailyRangeStartDateYear, dailySubEntityTypeDayOfWeek, dailySubEntityTypeTimeOfDayHours, dailySubEntityTypeTimeOfDayMinutes, dailySubEntityTypeTimeOfDayNanos, dailySubEntityTypeTimeOfDaySeconds, _callback);
        Type localVarReturnType = new TypeToken<GetDailyMetricsTimeSeriesResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for businessprofileperformanceLocationsSearchkeywordsImpressionsMonthlyList
     * @param parent Required. The location for which the time series should be fetched. Format: locations/{location_id} where location_id is an unobfuscated listing id. (required)
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param monthlyRangeEndMonthDay Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn&#39;t significant. (optional)
     * @param monthlyRangeEndMonthMonth Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day. (optional)
     * @param monthlyRangeEndMonthYear Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year. (optional)
     * @param monthlyRangeStartMonthDay Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn&#39;t significant. (optional)
     * @param monthlyRangeStartMonthMonth Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day. (optional)
     * @param monthlyRangeStartMonthYear Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year. (optional)
     * @param pageSize Optional. The number of results requested. The default page size is 100. Page size can be set to a maximum of 100. (optional)
     * @param pageToken Optional. A token indicating the next paginated result to be returned. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call businessprofileperformanceLocationsSearchkeywordsImpressionsMonthlyListCall(String parent, String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, Integer monthlyRangeEndMonthDay, Integer monthlyRangeEndMonthMonth, Integer monthlyRangeEndMonthYear, Integer monthlyRangeStartMonthDay, Integer monthlyRangeStartMonthMonth, Integer monthlyRangeStartMonthYear, Integer pageSize, String pageToken, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v1/{parent}/searchkeywords/impressions/monthly"
            .replace("{" + "parent" + "}", localVarApiClient.escapeString(parent.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if ($xgafv != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$.xgafv", $xgafv));
        }

        if (accessToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("access_token", accessToken));
        }

        if (alt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("alt", alt));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        if (fields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields", fields));
        }

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        if (oauthToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("oauth_token", oauthToken));
        }

        if (prettyPrint != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("prettyPrint", prettyPrint));
        }

        if (quotaUser != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("quotaUser", quotaUser));
        }

        if (uploadProtocol != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("upload_protocol", uploadProtocol));
        }

        if (uploadType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("uploadType", uploadType));
        }

        if (monthlyRangeEndMonthDay != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("monthlyRange.endMonth.day", monthlyRangeEndMonthDay));
        }

        if (monthlyRangeEndMonthMonth != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("monthlyRange.endMonth.month", monthlyRangeEndMonthMonth));
        }

        if (monthlyRangeEndMonthYear != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("monthlyRange.endMonth.year", monthlyRangeEndMonthYear));
        }

        if (monthlyRangeStartMonthDay != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("monthlyRange.startMonth.day", monthlyRangeStartMonthDay));
        }

        if (monthlyRangeStartMonthMonth != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("monthlyRange.startMonth.month", monthlyRangeStartMonthMonth));
        }

        if (monthlyRangeStartMonthYear != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("monthlyRange.startMonth.year", monthlyRangeStartMonthYear));
        }

        if (pageSize != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("pageSize", pageSize));
        }

        if (pageToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("pageToken", pageToken));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call businessprofileperformanceLocationsSearchkeywordsImpressionsMonthlyListValidateBeforeCall(String parent, String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, Integer monthlyRangeEndMonthDay, Integer monthlyRangeEndMonthMonth, Integer monthlyRangeEndMonthYear, Integer monthlyRangeStartMonthDay, Integer monthlyRangeStartMonthMonth, Integer monthlyRangeStartMonthYear, Integer pageSize, String pageToken, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'parent' is set
        if (parent == null) {
            throw new ApiException("Missing the required parameter 'parent' when calling businessprofileperformanceLocationsSearchkeywordsImpressionsMonthlyList(Async)");
        }

        return businessprofileperformanceLocationsSearchkeywordsImpressionsMonthlyListCall(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, monthlyRangeEndMonthDay, monthlyRangeEndMonthMonth, monthlyRangeEndMonthYear, monthlyRangeStartMonthDay, monthlyRangeStartMonthMonth, monthlyRangeStartMonthYear, pageSize, pageToken, _callback);

    }

    /**
     * 
     * Returns the search keywords used to find a business in search or maps. Each search keyword is accompanied by impressions which are aggregated on a monthly basis. Example request: &#x60;GET https://businessprofileperformance.googleapis.com/v1/locations/12345/searchkeywords/impressions/monthly?monthly_range.start_month.year&#x3D;2022&amp;monthly_range.start_month.month&#x3D;1&amp;monthly_range.end_month.year&#x3D;2022&amp;monthly_range.end_month.month&#x3D;3&#x60;
     * @param parent Required. The location for which the time series should be fetched. Format: locations/{location_id} where location_id is an unobfuscated listing id. (required)
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param monthlyRangeEndMonthDay Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn&#39;t significant. (optional)
     * @param monthlyRangeEndMonthMonth Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day. (optional)
     * @param monthlyRangeEndMonthYear Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year. (optional)
     * @param monthlyRangeStartMonthDay Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn&#39;t significant. (optional)
     * @param monthlyRangeStartMonthMonth Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day. (optional)
     * @param monthlyRangeStartMonthYear Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year. (optional)
     * @param pageSize Optional. The number of results requested. The default page size is 100. Page size can be set to a maximum of 100. (optional)
     * @param pageToken Optional. A token indicating the next paginated result to be returned. (optional)
     * @return ListSearchKeywordImpressionsMonthlyResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ListSearchKeywordImpressionsMonthlyResponse businessprofileperformanceLocationsSearchkeywordsImpressionsMonthlyList(String parent, String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, Integer monthlyRangeEndMonthDay, Integer monthlyRangeEndMonthMonth, Integer monthlyRangeEndMonthYear, Integer monthlyRangeStartMonthDay, Integer monthlyRangeStartMonthMonth, Integer monthlyRangeStartMonthYear, Integer pageSize, String pageToken) throws ApiException {
        ApiResponse<ListSearchKeywordImpressionsMonthlyResponse> localVarResp = businessprofileperformanceLocationsSearchkeywordsImpressionsMonthlyListWithHttpInfo(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, monthlyRangeEndMonthDay, monthlyRangeEndMonthMonth, monthlyRangeEndMonthYear, monthlyRangeStartMonthDay, monthlyRangeStartMonthMonth, monthlyRangeStartMonthYear, pageSize, pageToken);
        return localVarResp.getData();
    }

    /**
     * 
     * Returns the search keywords used to find a business in search or maps. Each search keyword is accompanied by impressions which are aggregated on a monthly basis. Example request: &#x60;GET https://businessprofileperformance.googleapis.com/v1/locations/12345/searchkeywords/impressions/monthly?monthly_range.start_month.year&#x3D;2022&amp;monthly_range.start_month.month&#x3D;1&amp;monthly_range.end_month.year&#x3D;2022&amp;monthly_range.end_month.month&#x3D;3&#x60;
     * @param parent Required. The location for which the time series should be fetched. Format: locations/{location_id} where location_id is an unobfuscated listing id. (required)
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param monthlyRangeEndMonthDay Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn&#39;t significant. (optional)
     * @param monthlyRangeEndMonthMonth Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day. (optional)
     * @param monthlyRangeEndMonthYear Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year. (optional)
     * @param monthlyRangeStartMonthDay Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn&#39;t significant. (optional)
     * @param monthlyRangeStartMonthMonth Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day. (optional)
     * @param monthlyRangeStartMonthYear Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year. (optional)
     * @param pageSize Optional. The number of results requested. The default page size is 100. Page size can be set to a maximum of 100. (optional)
     * @param pageToken Optional. A token indicating the next paginated result to be returned. (optional)
     * @return ApiResponse&lt;ListSearchKeywordImpressionsMonthlyResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ListSearchKeywordImpressionsMonthlyResponse> businessprofileperformanceLocationsSearchkeywordsImpressionsMonthlyListWithHttpInfo(String parent, String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, Integer monthlyRangeEndMonthDay, Integer monthlyRangeEndMonthMonth, Integer monthlyRangeEndMonthYear, Integer monthlyRangeStartMonthDay, Integer monthlyRangeStartMonthMonth, Integer monthlyRangeStartMonthYear, Integer pageSize, String pageToken) throws ApiException {
        okhttp3.Call localVarCall = businessprofileperformanceLocationsSearchkeywordsImpressionsMonthlyListValidateBeforeCall(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, monthlyRangeEndMonthDay, monthlyRangeEndMonthMonth, monthlyRangeEndMonthYear, monthlyRangeStartMonthDay, monthlyRangeStartMonthMonth, monthlyRangeStartMonthYear, pageSize, pageToken, null);
        Type localVarReturnType = new TypeToken<ListSearchKeywordImpressionsMonthlyResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Returns the search keywords used to find a business in search or maps. Each search keyword is accompanied by impressions which are aggregated on a monthly basis. Example request: &#x60;GET https://businessprofileperformance.googleapis.com/v1/locations/12345/searchkeywords/impressions/monthly?monthly_range.start_month.year&#x3D;2022&amp;monthly_range.start_month.month&#x3D;1&amp;monthly_range.end_month.year&#x3D;2022&amp;monthly_range.end_month.month&#x3D;3&#x60;
     * @param parent Required. The location for which the time series should be fetched. Format: locations/{location_id} where location_id is an unobfuscated listing id. (required)
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param monthlyRangeEndMonthDay Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn&#39;t significant. (optional)
     * @param monthlyRangeEndMonthMonth Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day. (optional)
     * @param monthlyRangeEndMonthYear Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year. (optional)
     * @param monthlyRangeStartMonthDay Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn&#39;t significant. (optional)
     * @param monthlyRangeStartMonthMonth Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day. (optional)
     * @param monthlyRangeStartMonthYear Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year. (optional)
     * @param pageSize Optional. The number of results requested. The default page size is 100. Page size can be set to a maximum of 100. (optional)
     * @param pageToken Optional. A token indicating the next paginated result to be returned. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call businessprofileperformanceLocationsSearchkeywordsImpressionsMonthlyListAsync(String parent, String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, Integer monthlyRangeEndMonthDay, Integer monthlyRangeEndMonthMonth, Integer monthlyRangeEndMonthYear, Integer monthlyRangeStartMonthDay, Integer monthlyRangeStartMonthMonth, Integer monthlyRangeStartMonthYear, Integer pageSize, String pageToken, final ApiCallback<ListSearchKeywordImpressionsMonthlyResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = businessprofileperformanceLocationsSearchkeywordsImpressionsMonthlyListValidateBeforeCall(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, monthlyRangeEndMonthDay, monthlyRangeEndMonthMonth, monthlyRangeEndMonthYear, monthlyRangeStartMonthDay, monthlyRangeStartMonthMonth, monthlyRangeStartMonthYear, pageSize, pageToken, _callback);
        Type localVarReturnType = new TypeToken<ListSearchKeywordImpressionsMonthlyResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
