# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.insights_value import InsightsValue
from openapi_server import util


class SearchKeywordCount(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, insights_value: InsightsValue=None, search_keyword: str=None):
        """SearchKeywordCount - a model defined in OpenAPI

        :param insights_value: The insights_value of this SearchKeywordCount.
        :param search_keyword: The search_keyword of this SearchKeywordCount.
        """
        self.openapi_types = {
            'insights_value': InsightsValue,
            'search_keyword': str
        }

        self.attribute_map = {
            'insights_value': 'insightsValue',
            'search_keyword': 'searchKeyword'
        }

        self._insights_value = insights_value
        self._search_keyword = search_keyword

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SearchKeywordCount':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SearchKeywordCount of this SearchKeywordCount.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def insights_value(self):
        """Gets the insights_value of this SearchKeywordCount.


        :return: The insights_value of this SearchKeywordCount.
        :rtype: InsightsValue
        """
        return self._insights_value

    @insights_value.setter
    def insights_value(self, insights_value):
        """Sets the insights_value of this SearchKeywordCount.


        :param insights_value: The insights_value of this SearchKeywordCount.
        :type insights_value: InsightsValue
        """

        self._insights_value = insights_value

    @property
    def search_keyword(self):
        """Gets the search_keyword of this SearchKeywordCount.

        The lower-cased string that the user entered.

        :return: The search_keyword of this SearchKeywordCount.
        :rtype: str
        """
        return self._search_keyword

    @search_keyword.setter
    def search_keyword(self, search_keyword):
        """Sets the search_keyword of this SearchKeywordCount.

        The lower-cased string that the user entered.

        :param search_keyword: The search_keyword of this SearchKeywordCount.
        :type search_keyword: str
        """

        self._search_keyword = search_keyword
