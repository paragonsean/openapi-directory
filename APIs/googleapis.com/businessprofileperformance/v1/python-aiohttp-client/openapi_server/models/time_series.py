# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.dated_value import DatedValue
from openapi_server import util


class TimeSeries(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dated_values: List[DatedValue]=None):
        """TimeSeries - a model defined in OpenAPI

        :param dated_values: The dated_values of this TimeSeries.
        """
        self.openapi_types = {
            'dated_values': List[DatedValue]
        }

        self.attribute_map = {
            'dated_values': 'datedValues'
        }

        self._dated_values = dated_values

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TimeSeries':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TimeSeries of this TimeSeries.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dated_values(self):
        """Gets the dated_values of this TimeSeries.

        List of datapoints in the timeseries, where each datapoint is a date-value pair.

        :return: The dated_values of this TimeSeries.
        :rtype: List[DatedValue]
        """
        return self._dated_values

    @dated_values.setter
    def dated_values(self, dated_values):
        """Sets the dated_values of this TimeSeries.

        List of datapoints in the timeseries, where each datapoint is a date-value pair.

        :param dated_values: The dated_values of this TimeSeries.
        :type dated_values: List[DatedValue]
        """

        self._dated_values = dated_values
