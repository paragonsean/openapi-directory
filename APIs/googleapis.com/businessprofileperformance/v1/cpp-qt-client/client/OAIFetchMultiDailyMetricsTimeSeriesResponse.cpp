/**
 * Business Profile Performance API
 * The Business Profile Performance API allows merchants to fetch performance reports about their business profile on Google. Note - If you have a quota of 0 after enabling the API, please request for GBP API access.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFetchMultiDailyMetricsTimeSeriesResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFetchMultiDailyMetricsTimeSeriesResponse::OAIFetchMultiDailyMetricsTimeSeriesResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFetchMultiDailyMetricsTimeSeriesResponse::OAIFetchMultiDailyMetricsTimeSeriesResponse() {
    this->initializeModel();
}

OAIFetchMultiDailyMetricsTimeSeriesResponse::~OAIFetchMultiDailyMetricsTimeSeriesResponse() {}

void OAIFetchMultiDailyMetricsTimeSeriesResponse::initializeModel() {

    m_multi_daily_metric_time_series_isSet = false;
    m_multi_daily_metric_time_series_isValid = false;
}

void OAIFetchMultiDailyMetricsTimeSeriesResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFetchMultiDailyMetricsTimeSeriesResponse::fromJsonObject(QJsonObject json) {

    m_multi_daily_metric_time_series_isValid = ::OpenAPI::fromJsonValue(m_multi_daily_metric_time_series, json[QString("multiDailyMetricTimeSeries")]);
    m_multi_daily_metric_time_series_isSet = !json[QString("multiDailyMetricTimeSeries")].isNull() && m_multi_daily_metric_time_series_isValid;
}

QString OAIFetchMultiDailyMetricsTimeSeriesResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFetchMultiDailyMetricsTimeSeriesResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_multi_daily_metric_time_series.size() > 0) {
        obj.insert(QString("multiDailyMetricTimeSeries"), ::OpenAPI::toJsonValue(m_multi_daily_metric_time_series));
    }
    return obj;
}

QList<OAIMultiDailyMetricTimeSeries> OAIFetchMultiDailyMetricsTimeSeriesResponse::getMultiDailyMetricTimeSeries() const {
    return m_multi_daily_metric_time_series;
}
void OAIFetchMultiDailyMetricsTimeSeriesResponse::setMultiDailyMetricTimeSeries(const QList<OAIMultiDailyMetricTimeSeries> &multi_daily_metric_time_series) {
    m_multi_daily_metric_time_series = multi_daily_metric_time_series;
    m_multi_daily_metric_time_series_isSet = true;
}

bool OAIFetchMultiDailyMetricsTimeSeriesResponse::is_multi_daily_metric_time_series_Set() const{
    return m_multi_daily_metric_time_series_isSet;
}

bool OAIFetchMultiDailyMetricsTimeSeriesResponse::is_multi_daily_metric_time_series_Valid() const{
    return m_multi_daily_metric_time_series_isValid;
}

bool OAIFetchMultiDailyMetricsTimeSeriesResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_multi_daily_metric_time_series.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFetchMultiDailyMetricsTimeSeriesResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
