/**
 * Business Profile Performance API
 * The Business Profile Performance API allows merchants to fetch performance reports about their business profile on Google. Note - If you have a quota of 0 after enabling the API, please request for GBP API access.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITimeSeries.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITimeSeries::OAITimeSeries(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITimeSeries::OAITimeSeries() {
    this->initializeModel();
}

OAITimeSeries::~OAITimeSeries() {}

void OAITimeSeries::initializeModel() {

    m_dated_values_isSet = false;
    m_dated_values_isValid = false;
}

void OAITimeSeries::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITimeSeries::fromJsonObject(QJsonObject json) {

    m_dated_values_isValid = ::OpenAPI::fromJsonValue(m_dated_values, json[QString("datedValues")]);
    m_dated_values_isSet = !json[QString("datedValues")].isNull() && m_dated_values_isValid;
}

QString OAITimeSeries::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITimeSeries::asJsonObject() const {
    QJsonObject obj;
    if (m_dated_values.size() > 0) {
        obj.insert(QString("datedValues"), ::OpenAPI::toJsonValue(m_dated_values));
    }
    return obj;
}

QList<OAIDatedValue> OAITimeSeries::getDatedValues() const {
    return m_dated_values;
}
void OAITimeSeries::setDatedValues(const QList<OAIDatedValue> &dated_values) {
    m_dated_values = dated_values;
    m_dated_values_isSet = true;
}

bool OAITimeSeries::is_dated_values_Set() const{
    return m_dated_values_isSet;
}

bool OAITimeSeries::is_dated_values_Valid() const{
    return m_dated_values_isValid;
}

bool OAITimeSeries::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_dated_values.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITimeSeries::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
