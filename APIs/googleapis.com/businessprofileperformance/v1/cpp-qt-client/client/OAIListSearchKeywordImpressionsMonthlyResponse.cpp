/**
 * Business Profile Performance API
 * The Business Profile Performance API allows merchants to fetch performance reports about their business profile on Google. Note - If you have a quota of 0 after enabling the API, please request for GBP API access.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListSearchKeywordImpressionsMonthlyResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListSearchKeywordImpressionsMonthlyResponse::OAIListSearchKeywordImpressionsMonthlyResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListSearchKeywordImpressionsMonthlyResponse::OAIListSearchKeywordImpressionsMonthlyResponse() {
    this->initializeModel();
}

OAIListSearchKeywordImpressionsMonthlyResponse::~OAIListSearchKeywordImpressionsMonthlyResponse() {}

void OAIListSearchKeywordImpressionsMonthlyResponse::initializeModel() {

    m_next_page_token_isSet = false;
    m_next_page_token_isValid = false;

    m_search_keywords_counts_isSet = false;
    m_search_keywords_counts_isValid = false;
}

void OAIListSearchKeywordImpressionsMonthlyResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListSearchKeywordImpressionsMonthlyResponse::fromJsonObject(QJsonObject json) {

    m_next_page_token_isValid = ::OpenAPI::fromJsonValue(m_next_page_token, json[QString("nextPageToken")]);
    m_next_page_token_isSet = !json[QString("nextPageToken")].isNull() && m_next_page_token_isValid;

    m_search_keywords_counts_isValid = ::OpenAPI::fromJsonValue(m_search_keywords_counts, json[QString("searchKeywordsCounts")]);
    m_search_keywords_counts_isSet = !json[QString("searchKeywordsCounts")].isNull() && m_search_keywords_counts_isValid;
}

QString OAIListSearchKeywordImpressionsMonthlyResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListSearchKeywordImpressionsMonthlyResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_next_page_token_isSet) {
        obj.insert(QString("nextPageToken"), ::OpenAPI::toJsonValue(m_next_page_token));
    }
    if (m_search_keywords_counts.size() > 0) {
        obj.insert(QString("searchKeywordsCounts"), ::OpenAPI::toJsonValue(m_search_keywords_counts));
    }
    return obj;
}

QByteArray OAIListSearchKeywordImpressionsMonthlyResponse::getNextPageToken() const {
    return m_next_page_token;
}
void OAIListSearchKeywordImpressionsMonthlyResponse::setNextPageToken(const QByteArray &next_page_token) {
    m_next_page_token = next_page_token;
    m_next_page_token_isSet = true;
}

bool OAIListSearchKeywordImpressionsMonthlyResponse::is_next_page_token_Set() const{
    return m_next_page_token_isSet;
}

bool OAIListSearchKeywordImpressionsMonthlyResponse::is_next_page_token_Valid() const{
    return m_next_page_token_isValid;
}

QList<OAISearchKeywordCount> OAIListSearchKeywordImpressionsMonthlyResponse::getSearchKeywordsCounts() const {
    return m_search_keywords_counts;
}
void OAIListSearchKeywordImpressionsMonthlyResponse::setSearchKeywordsCounts(const QList<OAISearchKeywordCount> &search_keywords_counts) {
    m_search_keywords_counts = search_keywords_counts;
    m_search_keywords_counts_isSet = true;
}

bool OAIListSearchKeywordImpressionsMonthlyResponse::is_search_keywords_counts_Set() const{
    return m_search_keywords_counts_isSet;
}

bool OAIListSearchKeywordImpressionsMonthlyResponse::is_search_keywords_counts_Valid() const{
    return m_search_keywords_counts_isValid;
}

bool OAIListSearchKeywordImpressionsMonthlyResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_next_page_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_search_keywords_counts.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListSearchKeywordImpressionsMonthlyResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
