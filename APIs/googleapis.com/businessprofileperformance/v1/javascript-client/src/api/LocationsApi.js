/**
 * Business Profile Performance API
 * The Business Profile Performance API allows merchants to fetch performance reports about their business profile on Google. Note - If you have a quota of 0 after enabling the API, please request for GBP API access.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import FetchMultiDailyMetricsTimeSeriesResponse from '../model/FetchMultiDailyMetricsTimeSeriesResponse';
import GetDailyMetricsTimeSeriesResponse from '../model/GetDailyMetricsTimeSeriesResponse';
import ListSearchKeywordImpressionsMonthlyResponse from '../model/ListSearchKeywordImpressionsMonthlyResponse';

/**
* Locations service.
* @module api/LocationsApi
* @version v1
*/
export default class LocationsApi {

    /**
    * Constructs a new LocationsApi. 
    * @alias module:api/LocationsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the businessprofileperformanceLocationsFetchMultiDailyMetricsTimeSeries operation.
     * @callback module:api/LocationsApi~businessprofileperformanceLocationsFetchMultiDailyMetricsTimeSeriesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/FetchMultiDailyMetricsTimeSeriesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     *  Returns the values for each date from a given time range and optionally the sub entity type, where applicable, that are associated with the specific daily metrics. Example request: `GET https://businessprofileperformance.googleapis.com/v1/locations/12345:fetchMultiDailyMetricsTimeSeries?dailyMetrics=WEBSITE_CLICKS&dailyMetrics=CALL_CLICKS&daily_range.start_date.year=2022&daily_range.start_date.month=1&daily_range.start_date.day=1&daily_range.end_date.year=2022&daily_range.end_date.month=3&daily_range.end_date.day=31`
     * @param {String} location Required. The location for which the time series should be fetched. Format: locations/{location_id} where location_id is an unobfuscated listing id.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Array.<module:model/String>} [dailyMetrics] Required. The metrics to retrieve time series for.
     * @param {Number} [dailyRangeEndDateDay] Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.
     * @param {Number} [dailyRangeEndDateMonth] Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
     * @param {Number} [dailyRangeEndDateYear] Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.
     * @param {Number} [dailyRangeStartDateDay] Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.
     * @param {Number} [dailyRangeStartDateMonth] Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
     * @param {Number} [dailyRangeStartDateYear] Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.
     * @param {module:api/LocationsApi~businessprofileperformanceLocationsFetchMultiDailyMetricsTimeSeriesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/FetchMultiDailyMetricsTimeSeriesResponse}
     */
    businessprofileperformanceLocationsFetchMultiDailyMetricsTimeSeries(location, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'location' is set
      if (location === undefined || location === null) {
        throw new Error("Missing the required parameter 'location' when calling businessprofileperformanceLocationsFetchMultiDailyMetricsTimeSeries");
      }

      let pathParams = {
        'location': location
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'dailyMetrics': this.apiClient.buildCollectionParam(opts['dailyMetrics'], 'multi'),
        'dailyRange.endDate.day': opts['dailyRangeEndDateDay'],
        'dailyRange.endDate.month': opts['dailyRangeEndDateMonth'],
        'dailyRange.endDate.year': opts['dailyRangeEndDateYear'],
        'dailyRange.startDate.day': opts['dailyRangeStartDateDay'],
        'dailyRange.startDate.month': opts['dailyRangeStartDateMonth'],
        'dailyRange.startDate.year': opts['dailyRangeStartDateYear']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = FetchMultiDailyMetricsTimeSeriesResponse;
      return this.apiClient.callApi(
        '/v1/{location}:fetchMultiDailyMetricsTimeSeries', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the businessprofileperformanceLocationsGetDailyMetricsTimeSeries operation.
     * @callback module:api/LocationsApi~businessprofileperformanceLocationsGetDailyMetricsTimeSeriesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetDailyMetricsTimeSeriesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     *  Returns the values for each date from a given time range that are associated with the specific daily metric. Example request: `GET https://businessprofileperformance.googleapis.com/v1/locations/12345:getDailyMetricsTimeSeries?dailyMetric=WEBSITE_CLICKS&daily_range.start_date.year=2022&daily_range.start_date.month=1&daily_range.start_date.day=1&daily_range.end_date.year=2022&daily_range.end_date.month=3&daily_range.end_date.day=31`
     * @param {String} name Required. The location for which the time series should be fetched. Format: locations/{location_id} where location_id is an unobfuscated listing id.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/String} [dailyMetric] Required. The metric to retrieve time series.
     * @param {Number} [dailyRangeEndDateDay] Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.
     * @param {Number} [dailyRangeEndDateMonth] Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
     * @param {Number} [dailyRangeEndDateYear] Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.
     * @param {Number} [dailyRangeStartDateDay] Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.
     * @param {Number} [dailyRangeStartDateMonth] Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
     * @param {Number} [dailyRangeStartDateYear] Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.
     * @param {module:model/String} [dailySubEntityTypeDayOfWeek] Represents the day of the week. Eg: MONDAY. Currently supported DailyMetrics = NONE.
     * @param {Number} [dailySubEntityTypeTimeOfDayHours] Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value \"24:00:00\" for scenarios like business closing time.
     * @param {Number} [dailySubEntityTypeTimeOfDayMinutes] Minutes of hour of day. Must be from 0 to 59.
     * @param {Number} [dailySubEntityTypeTimeOfDayNanos] Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
     * @param {Number} [dailySubEntityTypeTimeOfDaySeconds] Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.
     * @param {module:api/LocationsApi~businessprofileperformanceLocationsGetDailyMetricsTimeSeriesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetDailyMetricsTimeSeriesResponse}
     */
    businessprofileperformanceLocationsGetDailyMetricsTimeSeries(name, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling businessprofileperformanceLocationsGetDailyMetricsTimeSeries");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'dailyMetric': opts['dailyMetric'],
        'dailyRange.endDate.day': opts['dailyRangeEndDateDay'],
        'dailyRange.endDate.month': opts['dailyRangeEndDateMonth'],
        'dailyRange.endDate.year': opts['dailyRangeEndDateYear'],
        'dailyRange.startDate.day': opts['dailyRangeStartDateDay'],
        'dailyRange.startDate.month': opts['dailyRangeStartDateMonth'],
        'dailyRange.startDate.year': opts['dailyRangeStartDateYear'],
        'dailySubEntityType.dayOfWeek': opts['dailySubEntityTypeDayOfWeek'],
        'dailySubEntityType.timeOfDay.hours': opts['dailySubEntityTypeTimeOfDayHours'],
        'dailySubEntityType.timeOfDay.minutes': opts['dailySubEntityTypeTimeOfDayMinutes'],
        'dailySubEntityType.timeOfDay.nanos': opts['dailySubEntityTypeTimeOfDayNanos'],
        'dailySubEntityType.timeOfDay.seconds': opts['dailySubEntityTypeTimeOfDaySeconds']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetDailyMetricsTimeSeriesResponse;
      return this.apiClient.callApi(
        '/v1/{name}:getDailyMetricsTimeSeries', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the businessprofileperformanceLocationsSearchkeywordsImpressionsMonthlyList operation.
     * @callback module:api/LocationsApi~businessprofileperformanceLocationsSearchkeywordsImpressionsMonthlyListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListSearchKeywordImpressionsMonthlyResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns the search keywords used to find a business in search or maps. Each search keyword is accompanied by impressions which are aggregated on a monthly basis. Example request: `GET https://businessprofileperformance.googleapis.com/v1/locations/12345/searchkeywords/impressions/monthly?monthly_range.start_month.year=2022&monthly_range.start_month.month=1&monthly_range.end_month.year=2022&monthly_range.end_month.month=3`
     * @param {String} parent Required. The location for which the time series should be fetched. Format: locations/{location_id} where location_id is an unobfuscated listing id.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Number} [monthlyRangeEndMonthDay] Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.
     * @param {Number} [monthlyRangeEndMonthMonth] Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
     * @param {Number} [monthlyRangeEndMonthYear] Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.
     * @param {Number} [monthlyRangeStartMonthDay] Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.
     * @param {Number} [monthlyRangeStartMonthMonth] Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
     * @param {Number} [monthlyRangeStartMonthYear] Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.
     * @param {Number} [pageSize] Optional. The number of results requested. The default page size is 100. Page size can be set to a maximum of 100.
     * @param {String} [pageToken] Optional. A token indicating the next paginated result to be returned.
     * @param {module:api/LocationsApi~businessprofileperformanceLocationsSearchkeywordsImpressionsMonthlyListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListSearchKeywordImpressionsMonthlyResponse}
     */
    businessprofileperformanceLocationsSearchkeywordsImpressionsMonthlyList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling businessprofileperformanceLocationsSearchkeywordsImpressionsMonthlyList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'monthlyRange.endMonth.day': opts['monthlyRangeEndMonthDay'],
        'monthlyRange.endMonth.month': opts['monthlyRangeEndMonthMonth'],
        'monthlyRange.endMonth.year': opts['monthlyRangeEndMonthYear'],
        'monthlyRange.startMonth.day': opts['monthlyRangeStartMonthDay'],
        'monthlyRange.startMonth.month': opts['monthlyRangeStartMonthMonth'],
        'monthlyRange.startMonth.year': opts['monthlyRangeStartMonthYear'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListSearchKeywordImpressionsMonthlyResponse;
      return this.apiClient.callApi(
        '/v1/{parent}/searchkeywords/impressions/monthly', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
