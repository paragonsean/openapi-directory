/**
 * Business Profile Performance API
 * The Business Profile Performance API allows merchants to fetch performance reports about their business profile on Google. Note - If you have a quota of 0 after enabling the API, please request for GBP API access.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import DailyMetricTimeSeries from './model/DailyMetricTimeSeries';
import DailySubEntityType from './model/DailySubEntityType';
import DatedValue from './model/DatedValue';
import FetchMultiDailyMetricsTimeSeriesResponse from './model/FetchMultiDailyMetricsTimeSeriesResponse';
import GetDailyMetricsTimeSeriesResponse from './model/GetDailyMetricsTimeSeriesResponse';
import InsightsValue from './model/InsightsValue';
import ListSearchKeywordImpressionsMonthlyResponse from './model/ListSearchKeywordImpressionsMonthlyResponse';
import ModelDate from './model/ModelDate';
import MultiDailyMetricTimeSeries from './model/MultiDailyMetricTimeSeries';
import SearchKeywordCount from './model/SearchKeywordCount';
import TimeOfDay from './model/TimeOfDay';
import TimeSeries from './model/TimeSeries';
import LocationsApi from './api/LocationsApi';


/**
* The Business Profile Performance API allows merchants to fetch performance reports about their business profile on Google. Note - If you have a quota of 0 after enabling the API, please request for GBP API access..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var BusinessProfilePerformanceApi = require('index'); // See note below*.
* var xxxSvc = new BusinessProfilePerformanceApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new BusinessProfilePerformanceApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new BusinessProfilePerformanceApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new BusinessProfilePerformanceApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The DailyMetricTimeSeries model constructor.
     * @property {module:model/DailyMetricTimeSeries}
     */
    DailyMetricTimeSeries,

    /**
     * The DailySubEntityType model constructor.
     * @property {module:model/DailySubEntityType}
     */
    DailySubEntityType,

    /**
     * The DatedValue model constructor.
     * @property {module:model/DatedValue}
     */
    DatedValue,

    /**
     * The FetchMultiDailyMetricsTimeSeriesResponse model constructor.
     * @property {module:model/FetchMultiDailyMetricsTimeSeriesResponse}
     */
    FetchMultiDailyMetricsTimeSeriesResponse,

    /**
     * The GetDailyMetricsTimeSeriesResponse model constructor.
     * @property {module:model/GetDailyMetricsTimeSeriesResponse}
     */
    GetDailyMetricsTimeSeriesResponse,

    /**
     * The InsightsValue model constructor.
     * @property {module:model/InsightsValue}
     */
    InsightsValue,

    /**
     * The ListSearchKeywordImpressionsMonthlyResponse model constructor.
     * @property {module:model/ListSearchKeywordImpressionsMonthlyResponse}
     */
    ListSearchKeywordImpressionsMonthlyResponse,

    /**
     * The ModelDate model constructor.
     * @property {module:model/ModelDate}
     */
    ModelDate,

    /**
     * The MultiDailyMetricTimeSeries model constructor.
     * @property {module:model/MultiDailyMetricTimeSeries}
     */
    MultiDailyMetricTimeSeries,

    /**
     * The SearchKeywordCount model constructor.
     * @property {module:model/SearchKeywordCount}
     */
    SearchKeywordCount,

    /**
     * The TimeOfDay model constructor.
     * @property {module:model/TimeOfDay}
     */
    TimeOfDay,

    /**
     * The TimeSeries model constructor.
     * @property {module:model/TimeSeries}
     */
    TimeSeries,

    /**
    * The LocationsApi service constructor.
    * @property {module:api/LocationsApi}
    */
    LocationsApi
};
