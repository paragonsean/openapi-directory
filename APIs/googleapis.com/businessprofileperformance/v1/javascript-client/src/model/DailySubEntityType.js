/**
 * Business Profile Performance API
 * The Business Profile Performance API allows merchants to fetch performance reports about their business profile on Google. Note - If you have a quota of 0 after enabling the API, please request for GBP API access.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TimeOfDay from './TimeOfDay';

/**
 * The DailySubEntityType model module.
 * @module model/DailySubEntityType
 * @version v1
 */
class DailySubEntityType {
    /**
     * Constructs a new <code>DailySubEntityType</code>.
     * Represents all possible subentity types that are associated with DailyMetrics.
     * @alias module:model/DailySubEntityType
     */
    constructor() { 
        
        DailySubEntityType.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DailySubEntityType</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DailySubEntityType} obj Optional instance to populate.
     * @return {module:model/DailySubEntityType} The populated <code>DailySubEntityType</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DailySubEntityType();

            if (data.hasOwnProperty('dayOfWeek')) {
                obj['dayOfWeek'] = ApiClient.convertToType(data['dayOfWeek'], 'String');
            }
            if (data.hasOwnProperty('timeOfDay')) {
                obj['timeOfDay'] = TimeOfDay.constructFromObject(data['timeOfDay']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DailySubEntityType</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DailySubEntityType</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['dayOfWeek'] && !(typeof data['dayOfWeek'] === 'string' || data['dayOfWeek'] instanceof String)) {
            throw new Error("Expected the field `dayOfWeek` to be a primitive type in the JSON string but got " + data['dayOfWeek']);
        }
        // validate the optional field `timeOfDay`
        if (data['timeOfDay']) { // data not null
          TimeOfDay.validateJSON(data['timeOfDay']);
        }

        return true;
    }


}



/**
 * Represents the day of the week. Eg: MONDAY. Currently supported DailyMetrics = NONE.
 * @member {module:model/DailySubEntityType.DayOfWeekEnum} dayOfWeek
 */
DailySubEntityType.prototype['dayOfWeek'] = undefined;

/**
 * @member {module:model/TimeOfDay} timeOfDay
 */
DailySubEntityType.prototype['timeOfDay'] = undefined;





/**
 * Allowed values for the <code>dayOfWeek</code> property.
 * @enum {String}
 * @readonly
 */
DailySubEntityType['DayOfWeekEnum'] = {

    /**
     * value: "DAY_OF_WEEK_UNSPECIFIED"
     * @const
     */
    "DAY_OF_WEEK_UNSPECIFIED": "DAY_OF_WEEK_UNSPECIFIED",

    /**
     * value: "MONDAY"
     * @const
     */
    "MONDAY": "MONDAY",

    /**
     * value: "TUESDAY"
     * @const
     */
    "TUESDAY": "TUESDAY",

    /**
     * value: "WEDNESDAY"
     * @const
     */
    "WEDNESDAY": "WEDNESDAY",

    /**
     * value: "THURSDAY"
     * @const
     */
    "THURSDAY": "THURSDAY",

    /**
     * value: "FRIDAY"
     * @const
     */
    "FRIDAY": "FRIDAY",

    /**
     * value: "SATURDAY"
     * @const
     */
    "SATURDAY": "SATURDAY",

    /**
     * value: "SUNDAY"
     * @const
     */
    "SUNDAY": "SUNDAY"
};



export default DailySubEntityType;

