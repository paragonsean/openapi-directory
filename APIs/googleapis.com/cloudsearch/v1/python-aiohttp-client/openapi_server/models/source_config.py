# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.source import Source
from openapi_server.models.source_crowding_config import SourceCrowdingConfig
from openapi_server.models.source_scoring_config import SourceScoringConfig
from openapi_server import util


class SourceConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, crowding_config: SourceCrowdingConfig=None, scoring_config: SourceScoringConfig=None, source: Source=None):
        """SourceConfig - a model defined in OpenAPI

        :param crowding_config: The crowding_config of this SourceConfig.
        :param scoring_config: The scoring_config of this SourceConfig.
        :param source: The source of this SourceConfig.
        """
        self.openapi_types = {
            'crowding_config': SourceCrowdingConfig,
            'scoring_config': SourceScoringConfig,
            'source': Source
        }

        self.attribute_map = {
            'crowding_config': 'crowdingConfig',
            'scoring_config': 'scoringConfig',
            'source': 'source'
        }

        self._crowding_config = crowding_config
        self._scoring_config = scoring_config
        self._source = source

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SourceConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SourceConfig of this SourceConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def crowding_config(self):
        """Gets the crowding_config of this SourceConfig.


        :return: The crowding_config of this SourceConfig.
        :rtype: SourceCrowdingConfig
        """
        return self._crowding_config

    @crowding_config.setter
    def crowding_config(self, crowding_config):
        """Sets the crowding_config of this SourceConfig.


        :param crowding_config: The crowding_config of this SourceConfig.
        :type crowding_config: SourceCrowdingConfig
        """

        self._crowding_config = crowding_config

    @property
    def scoring_config(self):
        """Gets the scoring_config of this SourceConfig.


        :return: The scoring_config of this SourceConfig.
        :rtype: SourceScoringConfig
        """
        return self._scoring_config

    @scoring_config.setter
    def scoring_config(self, scoring_config):
        """Sets the scoring_config of this SourceConfig.


        :param scoring_config: The scoring_config of this SourceConfig.
        :type scoring_config: SourceScoringConfig
        """

        self._scoring_config = scoring_config

    @property
    def source(self):
        """Gets the source of this SourceConfig.


        :return: The source of this SourceConfig.
        :rtype: Source
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this SourceConfig.


        :param source: The source of this SourceConfig.
        :type source: Source
        """

        self._source = source
