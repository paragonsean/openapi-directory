# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EnterpriseTopazSidekickGap(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, display_remaining_time: str=None, end_time: str=None, end_time_ms: str=None, remaining_time: str=None, start_time: str=None, start_time_ms: str=None):
        """EnterpriseTopazSidekickGap - a model defined in OpenAPI

        :param display_remaining_time: The display_remaining_time of this EnterpriseTopazSidekickGap.
        :param end_time: The end_time of this EnterpriseTopazSidekickGap.
        :param end_time_ms: The end_time_ms of this EnterpriseTopazSidekickGap.
        :param remaining_time: The remaining_time of this EnterpriseTopazSidekickGap.
        :param start_time: The start_time of this EnterpriseTopazSidekickGap.
        :param start_time_ms: The start_time_ms of this EnterpriseTopazSidekickGap.
        """
        self.openapi_types = {
            'display_remaining_time': str,
            'end_time': str,
            'end_time_ms': str,
            'remaining_time': str,
            'start_time': str,
            'start_time_ms': str
        }

        self.attribute_map = {
            'display_remaining_time': 'displayRemainingTime',
            'end_time': 'endTime',
            'end_time_ms': 'endTimeMs',
            'remaining_time': 'remainingTime',
            'start_time': 'startTime',
            'start_time_ms': 'startTimeMs'
        }

        self._display_remaining_time = display_remaining_time
        self._end_time = end_time
        self._end_time_ms = end_time_ms
        self._remaining_time = remaining_time
        self._start_time = start_time
        self._start_time_ms = start_time_ms

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EnterpriseTopazSidekickGap':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EnterpriseTopazSidekickGap of this EnterpriseTopazSidekickGap.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def display_remaining_time(self):
        """Gets the display_remaining_time of this EnterpriseTopazSidekickGap.

        Localized time string in the format: 1 hour 15 minutes

        :return: The display_remaining_time of this EnterpriseTopazSidekickGap.
        :rtype: str
        """
        return self._display_remaining_time

    @display_remaining_time.setter
    def display_remaining_time(self, display_remaining_time):
        """Sets the display_remaining_time of this EnterpriseTopazSidekickGap.

        Localized time string in the format: 1 hour 15 minutes

        :param display_remaining_time: The display_remaining_time of this EnterpriseTopazSidekickGap.
        :type display_remaining_time: str
        """

        self._display_remaining_time = display_remaining_time

    @property
    def end_time(self):
        """Gets the end_time of this EnterpriseTopazSidekickGap.

        Localized time string in the format:(Locale CZ) 8:30 odp.

        :return: The end_time of this EnterpriseTopazSidekickGap.
        :rtype: str
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this EnterpriseTopazSidekickGap.

        Localized time string in the format:(Locale CZ) 8:30 odp.

        :param end_time: The end_time of this EnterpriseTopazSidekickGap.
        :type end_time: str
        """

        self._end_time = end_time

    @property
    def end_time_ms(self):
        """Gets the end_time_ms of this EnterpriseTopazSidekickGap.


        :return: The end_time_ms of this EnterpriseTopazSidekickGap.
        :rtype: str
        """
        return self._end_time_ms

    @end_time_ms.setter
    def end_time_ms(self, end_time_ms):
        """Sets the end_time_ms of this EnterpriseTopazSidekickGap.


        :param end_time_ms: The end_time_ms of this EnterpriseTopazSidekickGap.
        :type end_time_ms: str
        """

        self._end_time_ms = end_time_ms

    @property
    def remaining_time(self):
        """Gets the remaining_time of this EnterpriseTopazSidekickGap.


        :return: The remaining_time of this EnterpriseTopazSidekickGap.
        :rtype: str
        """
        return self._remaining_time

    @remaining_time.setter
    def remaining_time(self, remaining_time):
        """Sets the remaining_time of this EnterpriseTopazSidekickGap.


        :param remaining_time: The remaining_time of this EnterpriseTopazSidekickGap.
        :type remaining_time: str
        """

        self._remaining_time = remaining_time

    @property
    def start_time(self):
        """Gets the start_time of this EnterpriseTopazSidekickGap.

        Localized time string in the format:(Locale CZ) 8:30 odp.

        :return: The start_time of this EnterpriseTopazSidekickGap.
        :rtype: str
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this EnterpriseTopazSidekickGap.

        Localized time string in the format:(Locale CZ) 8:30 odp.

        :param start_time: The start_time of this EnterpriseTopazSidekickGap.
        :type start_time: str
        """

        self._start_time = start_time

    @property
    def start_time_ms(self):
        """Gets the start_time_ms of this EnterpriseTopazSidekickGap.


        :return: The start_time_ms of this EnterpriseTopazSidekickGap.
        :rtype: str
        """
        return self._start_time_ms

    @start_time_ms.setter
    def start_time_ms(self, start_time_ms):
        """Sets the start_time_ms of this EnterpriseTopazSidekickGap.


        :param start_time_ms: The start_time_ms of this EnterpriseTopazSidekickGap.
        :type start_time_ms: str
        """

        self._start_time_ms = start_time_ms
