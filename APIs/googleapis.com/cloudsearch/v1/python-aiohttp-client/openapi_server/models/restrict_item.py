# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.drive_follow_up_restrict import DriveFollowUpRestrict
from openapi_server.models.drive_location_restrict import DriveLocationRestrict
from openapi_server.models.drive_mime_type_restrict import DriveMimeTypeRestrict
from openapi_server.models.drive_time_span_restrict import DriveTimeSpanRestrict
from openapi_server import util


class RestrictItem(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, drive_follow_up_restrict: DriveFollowUpRestrict=None, drive_location_restrict: DriveLocationRestrict=None, drive_mime_type_restrict: DriveMimeTypeRestrict=None, drive_time_span_restrict: DriveTimeSpanRestrict=None, search_operator: str=None):
        """RestrictItem - a model defined in OpenAPI

        :param drive_follow_up_restrict: The drive_follow_up_restrict of this RestrictItem.
        :param drive_location_restrict: The drive_location_restrict of this RestrictItem.
        :param drive_mime_type_restrict: The drive_mime_type_restrict of this RestrictItem.
        :param drive_time_span_restrict: The drive_time_span_restrict of this RestrictItem.
        :param search_operator: The search_operator of this RestrictItem.
        """
        self.openapi_types = {
            'drive_follow_up_restrict': DriveFollowUpRestrict,
            'drive_location_restrict': DriveLocationRestrict,
            'drive_mime_type_restrict': DriveMimeTypeRestrict,
            'drive_time_span_restrict': DriveTimeSpanRestrict,
            'search_operator': str
        }

        self.attribute_map = {
            'drive_follow_up_restrict': 'driveFollowUpRestrict',
            'drive_location_restrict': 'driveLocationRestrict',
            'drive_mime_type_restrict': 'driveMimeTypeRestrict',
            'drive_time_span_restrict': 'driveTimeSpanRestrict',
            'search_operator': 'searchOperator'
        }

        self._drive_follow_up_restrict = drive_follow_up_restrict
        self._drive_location_restrict = drive_location_restrict
        self._drive_mime_type_restrict = drive_mime_type_restrict
        self._drive_time_span_restrict = drive_time_span_restrict
        self._search_operator = search_operator

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RestrictItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RestrictItem of this RestrictItem.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def drive_follow_up_restrict(self):
        """Gets the drive_follow_up_restrict of this RestrictItem.


        :return: The drive_follow_up_restrict of this RestrictItem.
        :rtype: DriveFollowUpRestrict
        """
        return self._drive_follow_up_restrict

    @drive_follow_up_restrict.setter
    def drive_follow_up_restrict(self, drive_follow_up_restrict):
        """Sets the drive_follow_up_restrict of this RestrictItem.


        :param drive_follow_up_restrict: The drive_follow_up_restrict of this RestrictItem.
        :type drive_follow_up_restrict: DriveFollowUpRestrict
        """

        self._drive_follow_up_restrict = drive_follow_up_restrict

    @property
    def drive_location_restrict(self):
        """Gets the drive_location_restrict of this RestrictItem.


        :return: The drive_location_restrict of this RestrictItem.
        :rtype: DriveLocationRestrict
        """
        return self._drive_location_restrict

    @drive_location_restrict.setter
    def drive_location_restrict(self, drive_location_restrict):
        """Sets the drive_location_restrict of this RestrictItem.


        :param drive_location_restrict: The drive_location_restrict of this RestrictItem.
        :type drive_location_restrict: DriveLocationRestrict
        """

        self._drive_location_restrict = drive_location_restrict

    @property
    def drive_mime_type_restrict(self):
        """Gets the drive_mime_type_restrict of this RestrictItem.


        :return: The drive_mime_type_restrict of this RestrictItem.
        :rtype: DriveMimeTypeRestrict
        """
        return self._drive_mime_type_restrict

    @drive_mime_type_restrict.setter
    def drive_mime_type_restrict(self, drive_mime_type_restrict):
        """Sets the drive_mime_type_restrict of this RestrictItem.


        :param drive_mime_type_restrict: The drive_mime_type_restrict of this RestrictItem.
        :type drive_mime_type_restrict: DriveMimeTypeRestrict
        """

        self._drive_mime_type_restrict = drive_mime_type_restrict

    @property
    def drive_time_span_restrict(self):
        """Gets the drive_time_span_restrict of this RestrictItem.


        :return: The drive_time_span_restrict of this RestrictItem.
        :rtype: DriveTimeSpanRestrict
        """
        return self._drive_time_span_restrict

    @drive_time_span_restrict.setter
    def drive_time_span_restrict(self, drive_time_span_restrict):
        """Sets the drive_time_span_restrict of this RestrictItem.


        :param drive_time_span_restrict: The drive_time_span_restrict of this RestrictItem.
        :type drive_time_span_restrict: DriveTimeSpanRestrict
        """

        self._drive_time_span_restrict = drive_time_span_restrict

    @property
    def search_operator(self):
        """Gets the search_operator of this RestrictItem.

        The search restrict (e.g. \"after:2017-09-11 before:2017-09-12\").

        :return: The search_operator of this RestrictItem.
        :rtype: str
        """
        return self._search_operator

    @search_operator.setter
    def search_operator(self, search_operator):
        """Sets the search_operator of this RestrictItem.

        The search restrict (e.g. \"after:2017-09-11 before:2017-09-12\").

        :param search_operator: The search_operator of this RestrictItem.
        :type search_operator: str
        """

        self._search_operator = search_operator
