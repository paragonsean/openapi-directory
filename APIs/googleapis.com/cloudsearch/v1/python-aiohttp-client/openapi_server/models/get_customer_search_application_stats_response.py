# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.customer_search_application_stats import CustomerSearchApplicationStats
from openapi_server import util


class GetCustomerSearchApplicationStatsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, average_search_application_count: str=None, stats: List[CustomerSearchApplicationStats]=None):
        """GetCustomerSearchApplicationStatsResponse - a model defined in OpenAPI

        :param average_search_application_count: The average_search_application_count of this GetCustomerSearchApplicationStatsResponse.
        :param stats: The stats of this GetCustomerSearchApplicationStatsResponse.
        """
        self.openapi_types = {
            'average_search_application_count': str,
            'stats': List[CustomerSearchApplicationStats]
        }

        self.attribute_map = {
            'average_search_application_count': 'averageSearchApplicationCount',
            'stats': 'stats'
        }

        self._average_search_application_count = average_search_application_count
        self._stats = stats

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetCustomerSearchApplicationStatsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetCustomerSearchApplicationStatsResponse of this GetCustomerSearchApplicationStatsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def average_search_application_count(self):
        """Gets the average_search_application_count of this GetCustomerSearchApplicationStatsResponse.

        Average search application count for the given date range.

        :return: The average_search_application_count of this GetCustomerSearchApplicationStatsResponse.
        :rtype: str
        """
        return self._average_search_application_count

    @average_search_application_count.setter
    def average_search_application_count(self, average_search_application_count):
        """Sets the average_search_application_count of this GetCustomerSearchApplicationStatsResponse.

        Average search application count for the given date range.

        :param average_search_application_count: The average_search_application_count of this GetCustomerSearchApplicationStatsResponse.
        :type average_search_application_count: str
        """

        self._average_search_application_count = average_search_application_count

    @property
    def stats(self):
        """Gets the stats of this GetCustomerSearchApplicationStatsResponse.

        Search application stats by date.

        :return: The stats of this GetCustomerSearchApplicationStatsResponse.
        :rtype: List[CustomerSearchApplicationStats]
        """
        return self._stats

    @stats.setter
    def stats(self, stats):
        """Sets the stats of this GetCustomerSearchApplicationStatsResponse.

        Search application stats by date.

        :param stats: The stats of this GetCustomerSearchApplicationStatsResponse.
        :type stats: List[CustomerSearchApplicationStats]
        """

        self._stats = stats
