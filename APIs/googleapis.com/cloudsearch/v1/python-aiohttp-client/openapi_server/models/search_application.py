# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.data_source_restriction import DataSourceRestriction
from openapi_server.models.facet_options import FacetOptions
from openapi_server.models.query_interpretation_config import QueryInterpretationConfig
from openapi_server.models.scoring_config import ScoringConfig
from openapi_server.models.sort_options import SortOptions
from openapi_server.models.source_config import SourceConfig
from openapi_server import util


class SearchApplication(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data_source_restrictions: List[DataSourceRestriction]=None, default_facet_options: List[FacetOptions]=None, default_sort_options: SortOptions=None, display_name: str=None, enable_audit_log: bool=None, name: str=None, operation_ids: List[str]=None, query_interpretation_config: QueryInterpretationConfig=None, return_result_thumbnail_urls: bool=None, scoring_config: ScoringConfig=None, source_config: List[SourceConfig]=None):
        """SearchApplication - a model defined in OpenAPI

        :param data_source_restrictions: The data_source_restrictions of this SearchApplication.
        :param default_facet_options: The default_facet_options of this SearchApplication.
        :param default_sort_options: The default_sort_options of this SearchApplication.
        :param display_name: The display_name of this SearchApplication.
        :param enable_audit_log: The enable_audit_log of this SearchApplication.
        :param name: The name of this SearchApplication.
        :param operation_ids: The operation_ids of this SearchApplication.
        :param query_interpretation_config: The query_interpretation_config of this SearchApplication.
        :param return_result_thumbnail_urls: The return_result_thumbnail_urls of this SearchApplication.
        :param scoring_config: The scoring_config of this SearchApplication.
        :param source_config: The source_config of this SearchApplication.
        """
        self.openapi_types = {
            'data_source_restrictions': List[DataSourceRestriction],
            'default_facet_options': List[FacetOptions],
            'default_sort_options': SortOptions,
            'display_name': str,
            'enable_audit_log': bool,
            'name': str,
            'operation_ids': List[str],
            'query_interpretation_config': QueryInterpretationConfig,
            'return_result_thumbnail_urls': bool,
            'scoring_config': ScoringConfig,
            'source_config': List[SourceConfig]
        }

        self.attribute_map = {
            'data_source_restrictions': 'dataSourceRestrictions',
            'default_facet_options': 'defaultFacetOptions',
            'default_sort_options': 'defaultSortOptions',
            'display_name': 'displayName',
            'enable_audit_log': 'enableAuditLog',
            'name': 'name',
            'operation_ids': 'operationIds',
            'query_interpretation_config': 'queryInterpretationConfig',
            'return_result_thumbnail_urls': 'returnResultThumbnailUrls',
            'scoring_config': 'scoringConfig',
            'source_config': 'sourceConfig'
        }

        self._data_source_restrictions = data_source_restrictions
        self._default_facet_options = default_facet_options
        self._default_sort_options = default_sort_options
        self._display_name = display_name
        self._enable_audit_log = enable_audit_log
        self._name = name
        self._operation_ids = operation_ids
        self._query_interpretation_config = query_interpretation_config
        self._return_result_thumbnail_urls = return_result_thumbnail_urls
        self._scoring_config = scoring_config
        self._source_config = source_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SearchApplication':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SearchApplication of this SearchApplication.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data_source_restrictions(self):
        """Gets the data_source_restrictions of this SearchApplication.

        Retrictions applied to the configurations. The maximum number of elements is 10.

        :return: The data_source_restrictions of this SearchApplication.
        :rtype: List[DataSourceRestriction]
        """
        return self._data_source_restrictions

    @data_source_restrictions.setter
    def data_source_restrictions(self, data_source_restrictions):
        """Sets the data_source_restrictions of this SearchApplication.

        Retrictions applied to the configurations. The maximum number of elements is 10.

        :param data_source_restrictions: The data_source_restrictions of this SearchApplication.
        :type data_source_restrictions: List[DataSourceRestriction]
        """

        self._data_source_restrictions = data_source_restrictions

    @property
    def default_facet_options(self):
        """Gets the default_facet_options of this SearchApplication.

        The default fields for returning facet results. The sources specified here also have been included in data_source_restrictions above.

        :return: The default_facet_options of this SearchApplication.
        :rtype: List[FacetOptions]
        """
        return self._default_facet_options

    @default_facet_options.setter
    def default_facet_options(self, default_facet_options):
        """Sets the default_facet_options of this SearchApplication.

        The default fields for returning facet results. The sources specified here also have been included in data_source_restrictions above.

        :param default_facet_options: The default_facet_options of this SearchApplication.
        :type default_facet_options: List[FacetOptions]
        """

        self._default_facet_options = default_facet_options

    @property
    def default_sort_options(self):
        """Gets the default_sort_options of this SearchApplication.


        :return: The default_sort_options of this SearchApplication.
        :rtype: SortOptions
        """
        return self._default_sort_options

    @default_sort_options.setter
    def default_sort_options(self, default_sort_options):
        """Sets the default_sort_options of this SearchApplication.


        :param default_sort_options: The default_sort_options of this SearchApplication.
        :type default_sort_options: SortOptions
        """

        self._default_sort_options = default_sort_options

    @property
    def display_name(self):
        """Gets the display_name of this SearchApplication.

        Display name of the Search Application. The maximum length is 300 characters.

        :return: The display_name of this SearchApplication.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this SearchApplication.

        Display name of the Search Application. The maximum length is 300 characters.

        :param display_name: The display_name of this SearchApplication.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def enable_audit_log(self):
        """Gets the enable_audit_log of this SearchApplication.

        Indicates whether audit logging is on/off for requests made for the search application in query APIs.

        :return: The enable_audit_log of this SearchApplication.
        :rtype: bool
        """
        return self._enable_audit_log

    @enable_audit_log.setter
    def enable_audit_log(self, enable_audit_log):
        """Sets the enable_audit_log of this SearchApplication.

        Indicates whether audit logging is on/off for requests made for the search application in query APIs.

        :param enable_audit_log: The enable_audit_log of this SearchApplication.
        :type enable_audit_log: bool
        """

        self._enable_audit_log = enable_audit_log

    @property
    def name(self):
        """Gets the name of this SearchApplication.

        The name of the Search Application. Format: searchapplications/{application_id}.

        :return: The name of this SearchApplication.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this SearchApplication.

        The name of the Search Application. Format: searchapplications/{application_id}.

        :param name: The name of this SearchApplication.
        :type name: str
        """

        self._name = name

    @property
    def operation_ids(self):
        """Gets the operation_ids of this SearchApplication.

        Output only. IDs of the Long Running Operations (LROs) currently running for this schema. Output only field.

        :return: The operation_ids of this SearchApplication.
        :rtype: List[str]
        """
        return self._operation_ids

    @operation_ids.setter
    def operation_ids(self, operation_ids):
        """Sets the operation_ids of this SearchApplication.

        Output only. IDs of the Long Running Operations (LROs) currently running for this schema. Output only field.

        :param operation_ids: The operation_ids of this SearchApplication.
        :type operation_ids: List[str]
        """

        self._operation_ids = operation_ids

    @property
    def query_interpretation_config(self):
        """Gets the query_interpretation_config of this SearchApplication.


        :return: The query_interpretation_config of this SearchApplication.
        :rtype: QueryInterpretationConfig
        """
        return self._query_interpretation_config

    @query_interpretation_config.setter
    def query_interpretation_config(self, query_interpretation_config):
        """Sets the query_interpretation_config of this SearchApplication.


        :param query_interpretation_config: The query_interpretation_config of this SearchApplication.
        :type query_interpretation_config: QueryInterpretationConfig
        """

        self._query_interpretation_config = query_interpretation_config

    @property
    def return_result_thumbnail_urls(self):
        """Gets the return_result_thumbnail_urls of this SearchApplication.

        With each result we should return the URI for its thumbnail (when applicable)

        :return: The return_result_thumbnail_urls of this SearchApplication.
        :rtype: bool
        """
        return self._return_result_thumbnail_urls

    @return_result_thumbnail_urls.setter
    def return_result_thumbnail_urls(self, return_result_thumbnail_urls):
        """Sets the return_result_thumbnail_urls of this SearchApplication.

        With each result we should return the URI for its thumbnail (when applicable)

        :param return_result_thumbnail_urls: The return_result_thumbnail_urls of this SearchApplication.
        :type return_result_thumbnail_urls: bool
        """

        self._return_result_thumbnail_urls = return_result_thumbnail_urls

    @property
    def scoring_config(self):
        """Gets the scoring_config of this SearchApplication.


        :return: The scoring_config of this SearchApplication.
        :rtype: ScoringConfig
        """
        return self._scoring_config

    @scoring_config.setter
    def scoring_config(self, scoring_config):
        """Sets the scoring_config of this SearchApplication.


        :param scoring_config: The scoring_config of this SearchApplication.
        :type scoring_config: ScoringConfig
        """

        self._scoring_config = scoring_config

    @property
    def source_config(self):
        """Gets the source_config of this SearchApplication.

        Configuration for a sources specified in data_source_restrictions.

        :return: The source_config of this SearchApplication.
        :rtype: List[SourceConfig]
        """
        return self._source_config

    @source_config.setter
    def source_config(self, source_config):
        """Sets the source_config of this SearchApplication.

        Configuration for a sources specified in data_source_restrictions.

        :param source_config: The source_config of this SearchApplication.
        :type source_config: List[SourceConfig]
        """

        self._source_config = source_config
