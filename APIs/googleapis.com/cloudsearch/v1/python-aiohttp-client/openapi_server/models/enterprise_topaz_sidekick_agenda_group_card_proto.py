# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.enterprise_topaz_sidekick_agenda_group_card_proto_context import EnterpriseTopazSidekickAgendaGroupCardProtoContext
from openapi_server.models.enterprise_topaz_sidekick_agenda_item import EnterpriseTopazSidekickAgendaItem
from openapi_server import util


class EnterpriseTopazSidekickAgendaGroupCardProto(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, agenda_item: List[EnterpriseTopazSidekickAgendaItem]=None, context: EnterpriseTopazSidekickAgendaGroupCardProtoContext=None, current_agenda_item: EnterpriseTopazSidekickAgendaItem=None):
        """EnterpriseTopazSidekickAgendaGroupCardProto - a model defined in OpenAPI

        :param agenda_item: The agenda_item of this EnterpriseTopazSidekickAgendaGroupCardProto.
        :param context: The context of this EnterpriseTopazSidekickAgendaGroupCardProto.
        :param current_agenda_item: The current_agenda_item of this EnterpriseTopazSidekickAgendaGroupCardProto.
        """
        self.openapi_types = {
            'agenda_item': List[EnterpriseTopazSidekickAgendaItem],
            'context': EnterpriseTopazSidekickAgendaGroupCardProtoContext,
            'current_agenda_item': EnterpriseTopazSidekickAgendaItem
        }

        self.attribute_map = {
            'agenda_item': 'agendaItem',
            'context': 'context',
            'current_agenda_item': 'currentAgendaItem'
        }

        self._agenda_item = agenda_item
        self._context = context
        self._current_agenda_item = current_agenda_item

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EnterpriseTopazSidekickAgendaGroupCardProto':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EnterpriseTopazSidekickAgendaGroupCardProto of this EnterpriseTopazSidekickAgendaGroupCardProto.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def agenda_item(self):
        """Gets the agenda_item of this EnterpriseTopazSidekickAgendaGroupCardProto.


        :return: The agenda_item of this EnterpriseTopazSidekickAgendaGroupCardProto.
        :rtype: List[EnterpriseTopazSidekickAgendaItem]
        """
        return self._agenda_item

    @agenda_item.setter
    def agenda_item(self, agenda_item):
        """Sets the agenda_item of this EnterpriseTopazSidekickAgendaGroupCardProto.


        :param agenda_item: The agenda_item of this EnterpriseTopazSidekickAgendaGroupCardProto.
        :type agenda_item: List[EnterpriseTopazSidekickAgendaItem]
        """

        self._agenda_item = agenda_item

    @property
    def context(self):
        """Gets the context of this EnterpriseTopazSidekickAgendaGroupCardProto.


        :return: The context of this EnterpriseTopazSidekickAgendaGroupCardProto.
        :rtype: EnterpriseTopazSidekickAgendaGroupCardProtoContext
        """
        return self._context

    @context.setter
    def context(self, context):
        """Sets the context of this EnterpriseTopazSidekickAgendaGroupCardProto.


        :param context: The context of this EnterpriseTopazSidekickAgendaGroupCardProto.
        :type context: EnterpriseTopazSidekickAgendaGroupCardProtoContext
        """

        self._context = context

    @property
    def current_agenda_item(self):
        """Gets the current_agenda_item of this EnterpriseTopazSidekickAgendaGroupCardProto.


        :return: The current_agenda_item of this EnterpriseTopazSidekickAgendaGroupCardProto.
        :rtype: EnterpriseTopazSidekickAgendaItem
        """
        return self._current_agenda_item

    @current_agenda_item.setter
    def current_agenda_item(self, current_agenda_item):
        """Sets the current_agenda_item of this EnterpriseTopazSidekickAgendaGroupCardProto.


        :param current_agenda_item: The current_agenda_item of this EnterpriseTopazSidekickAgendaGroupCardProto.
        :type current_agenda_item: EnterpriseTopazSidekickAgendaItem
        """

        self._current_agenda_item = current_agenda_item
