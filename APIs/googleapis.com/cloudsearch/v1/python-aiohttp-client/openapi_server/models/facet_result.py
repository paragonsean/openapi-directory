# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.facet_bucket import FacetBucket
from openapi_server import util


class FacetResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, buckets: List[FacetBucket]=None, object_type: str=None, operator_name: str=None, source_name: str=None):
        """FacetResult - a model defined in OpenAPI

        :param buckets: The buckets of this FacetResult.
        :param object_type: The object_type of this FacetResult.
        :param operator_name: The operator_name of this FacetResult.
        :param source_name: The source_name of this FacetResult.
        """
        self.openapi_types = {
            'buckets': List[FacetBucket],
            'object_type': str,
            'operator_name': str,
            'source_name': str
        }

        self.attribute_map = {
            'buckets': 'buckets',
            'object_type': 'objectType',
            'operator_name': 'operatorName',
            'source_name': 'sourceName'
        }

        self._buckets = buckets
        self._object_type = object_type
        self._operator_name = operator_name
        self._source_name = source_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FacetResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FacetResult of this FacetResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def buckets(self):
        """Gets the buckets of this FacetResult.

        FacetBuckets for values in response containing at least a single result with the corresponding filter.

        :return: The buckets of this FacetResult.
        :rtype: List[FacetBucket]
        """
        return self._buckets

    @buckets.setter
    def buckets(self, buckets):
        """Sets the buckets of this FacetResult.

        FacetBuckets for values in response containing at least a single result with the corresponding filter.

        :param buckets: The buckets of this FacetResult.
        :type buckets: List[FacetBucket]
        """

        self._buckets = buckets

    @property
    def object_type(self):
        """Gets the object_type of this FacetResult.

        Object type for which facet results are returned. Can be empty.

        :return: The object_type of this FacetResult.
        :rtype: str
        """
        return self._object_type

    @object_type.setter
    def object_type(self, object_type):
        """Sets the object_type of this FacetResult.

        Object type for which facet results are returned. Can be empty.

        :param object_type: The object_type of this FacetResult.
        :type object_type: str
        """

        self._object_type = object_type

    @property
    def operator_name(self):
        """Gets the operator_name of this FacetResult.

        The name of the operator chosen for faceting. @see cloudsearch.SchemaPropertyOptions

        :return: The operator_name of this FacetResult.
        :rtype: str
        """
        return self._operator_name

    @operator_name.setter
    def operator_name(self, operator_name):
        """Sets the operator_name of this FacetResult.

        The name of the operator chosen for faceting. @see cloudsearch.SchemaPropertyOptions

        :param operator_name: The operator_name of this FacetResult.
        :type operator_name: str
        """

        self._operator_name = operator_name

    @property
    def source_name(self):
        """Gets the source_name of this FacetResult.

        Source name for which facet results are returned. Will not be empty.

        :return: The source_name of this FacetResult.
        :rtype: str
        """
        return self._source_name

    @source_name.setter
    def source_name(self, source_name):
        """Sets the source_name of this FacetResult.

        Source name for which facet results are returned. Will not be empty.

        :param source_name: The source_name of this FacetResult.
        :type source_name: str
        """

        self._source_name = source_name
