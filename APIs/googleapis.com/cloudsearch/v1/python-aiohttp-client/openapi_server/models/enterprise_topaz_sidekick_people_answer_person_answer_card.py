# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.enterprise_topaz_sidekick_answer_answer_list import EnterpriseTopazSidekickAnswerAnswerList
from openapi_server.models.enterprise_topaz_sidekick_common_person import EnterpriseTopazSidekickCommonPerson
from openapi_server.models.enterprise_topaz_sidekick_people_answer_disambiguation_info import EnterpriseTopazSidekickPeopleAnswerDisambiguationInfo
from openapi_server.models.enterprise_topaz_sidekick_people_answer_people_answer_card_header import EnterpriseTopazSidekickPeopleAnswerPeopleAnswerCardHeader
from openapi_server.models.safe_html_proto import SafeHtmlProto
from openapi_server import util


class EnterpriseTopazSidekickPeopleAnswerPersonAnswerCard(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, answer: List[SafeHtmlProto]=None, answer_text: EnterpriseTopazSidekickAnswerAnswerList=None, disambiguation_info: EnterpriseTopazSidekickPeopleAnswerDisambiguationInfo=None, header: EnterpriseTopazSidekickPeopleAnswerPeopleAnswerCardHeader=None, response_status: str=None, status_message: str=None, subject: EnterpriseTopazSidekickCommonPerson=None):
        """EnterpriseTopazSidekickPeopleAnswerPersonAnswerCard - a model defined in OpenAPI

        :param answer: The answer of this EnterpriseTopazSidekickPeopleAnswerPersonAnswerCard.
        :param answer_text: The answer_text of this EnterpriseTopazSidekickPeopleAnswerPersonAnswerCard.
        :param disambiguation_info: The disambiguation_info of this EnterpriseTopazSidekickPeopleAnswerPersonAnswerCard.
        :param header: The header of this EnterpriseTopazSidekickPeopleAnswerPersonAnswerCard.
        :param response_status: The response_status of this EnterpriseTopazSidekickPeopleAnswerPersonAnswerCard.
        :param status_message: The status_message of this EnterpriseTopazSidekickPeopleAnswerPersonAnswerCard.
        :param subject: The subject of this EnterpriseTopazSidekickPeopleAnswerPersonAnswerCard.
        """
        self.openapi_types = {
            'answer': List[SafeHtmlProto],
            'answer_text': EnterpriseTopazSidekickAnswerAnswerList,
            'disambiguation_info': EnterpriseTopazSidekickPeopleAnswerDisambiguationInfo,
            'header': EnterpriseTopazSidekickPeopleAnswerPeopleAnswerCardHeader,
            'response_status': str,
            'status_message': str,
            'subject': EnterpriseTopazSidekickCommonPerson
        }

        self.attribute_map = {
            'answer': 'answer',
            'answer_text': 'answerText',
            'disambiguation_info': 'disambiguationInfo',
            'header': 'header',
            'response_status': 'responseStatus',
            'status_message': 'statusMessage',
            'subject': 'subject'
        }

        self._answer = answer
        self._answer_text = answer_text
        self._disambiguation_info = disambiguation_info
        self._header = header
        self._response_status = response_status
        self._status_message = status_message
        self._subject = subject

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EnterpriseTopazSidekickPeopleAnswerPersonAnswerCard':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EnterpriseTopazSidekickPeopleAnswerPersonAnswerCard of this EnterpriseTopazSidekickPeopleAnswerPersonAnswerCard.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def answer(self):
        """Gets the answer of this EnterpriseTopazSidekickPeopleAnswerPersonAnswerCard.

        List of answers.

        :return: The answer of this EnterpriseTopazSidekickPeopleAnswerPersonAnswerCard.
        :rtype: List[SafeHtmlProto]
        """
        return self._answer

    @answer.setter
    def answer(self, answer):
        """Sets the answer of this EnterpriseTopazSidekickPeopleAnswerPersonAnswerCard.

        List of answers.

        :param answer: The answer of this EnterpriseTopazSidekickPeopleAnswerPersonAnswerCard.
        :type answer: List[SafeHtmlProto]
        """

        self._answer = answer

    @property
    def answer_text(self):
        """Gets the answer_text of this EnterpriseTopazSidekickPeopleAnswerPersonAnswerCard.


        :return: The answer_text of this EnterpriseTopazSidekickPeopleAnswerPersonAnswerCard.
        :rtype: EnterpriseTopazSidekickAnswerAnswerList
        """
        return self._answer_text

    @answer_text.setter
    def answer_text(self, answer_text):
        """Sets the answer_text of this EnterpriseTopazSidekickPeopleAnswerPersonAnswerCard.


        :param answer_text: The answer_text of this EnterpriseTopazSidekickPeopleAnswerPersonAnswerCard.
        :type answer_text: EnterpriseTopazSidekickAnswerAnswerList
        """

        self._answer_text = answer_text

    @property
    def disambiguation_info(self):
        """Gets the disambiguation_info of this EnterpriseTopazSidekickPeopleAnswerPersonAnswerCard.


        :return: The disambiguation_info of this EnterpriseTopazSidekickPeopleAnswerPersonAnswerCard.
        :rtype: EnterpriseTopazSidekickPeopleAnswerDisambiguationInfo
        """
        return self._disambiguation_info

    @disambiguation_info.setter
    def disambiguation_info(self, disambiguation_info):
        """Sets the disambiguation_info of this EnterpriseTopazSidekickPeopleAnswerPersonAnswerCard.


        :param disambiguation_info: The disambiguation_info of this EnterpriseTopazSidekickPeopleAnswerPersonAnswerCard.
        :type disambiguation_info: EnterpriseTopazSidekickPeopleAnswerDisambiguationInfo
        """

        self._disambiguation_info = disambiguation_info

    @property
    def header(self):
        """Gets the header of this EnterpriseTopazSidekickPeopleAnswerPersonAnswerCard.


        :return: The header of this EnterpriseTopazSidekickPeopleAnswerPersonAnswerCard.
        :rtype: EnterpriseTopazSidekickPeopleAnswerPeopleAnswerCardHeader
        """
        return self._header

    @header.setter
    def header(self, header):
        """Sets the header of this EnterpriseTopazSidekickPeopleAnswerPersonAnswerCard.


        :param header: The header of this EnterpriseTopazSidekickPeopleAnswerPersonAnswerCard.
        :type header: EnterpriseTopazSidekickPeopleAnswerPeopleAnswerCardHeader
        """

        self._header = header

    @property
    def response_status(self):
        """Gets the response_status of this EnterpriseTopazSidekickPeopleAnswerPersonAnswerCard.

        The response status.

        :return: The response_status of this EnterpriseTopazSidekickPeopleAnswerPersonAnswerCard.
        :rtype: str
        """
        return self._response_status

    @response_status.setter
    def response_status(self, response_status):
        """Sets the response_status of this EnterpriseTopazSidekickPeopleAnswerPersonAnswerCard.

        The response status.

        :param response_status: The response_status of this EnterpriseTopazSidekickPeopleAnswerPersonAnswerCard.
        :type response_status: str
        """
        allowed_values = ["UNKNOWN", "SUCCESS", "MISSING_PERSON", "MISSING_DATA"]  # noqa: E501
        if response_status not in allowed_values:
            raise ValueError(
                "Invalid value for `response_status` ({0}), must be one of {1}"
                .format(response_status, allowed_values)
            )

        self._response_status = response_status

    @property
    def status_message(self):
        """Gets the status_message of this EnterpriseTopazSidekickPeopleAnswerPersonAnswerCard.

        Localized user friendly message to display to the user in the case of missing data or an error.

        :return: The status_message of this EnterpriseTopazSidekickPeopleAnswerPersonAnswerCard.
        :rtype: str
        """
        return self._status_message

    @status_message.setter
    def status_message(self, status_message):
        """Sets the status_message of this EnterpriseTopazSidekickPeopleAnswerPersonAnswerCard.

        Localized user friendly message to display to the user in the case of missing data or an error.

        :param status_message: The status_message of this EnterpriseTopazSidekickPeopleAnswerPersonAnswerCard.
        :type status_message: str
        """

        self._status_message = status_message

    @property
    def subject(self):
        """Gets the subject of this EnterpriseTopazSidekickPeopleAnswerPersonAnswerCard.


        :return: The subject of this EnterpriseTopazSidekickPeopleAnswerPersonAnswerCard.
        :rtype: EnterpriseTopazSidekickCommonPerson
        """
        return self._subject

    @subject.setter
    def subject(self, subject):
        """Sets the subject of this EnterpriseTopazSidekickPeopleAnswerPersonAnswerCard.


        :param subject: The subject of this EnterpriseTopazSidekickPeopleAnswerPersonAnswerCard.
        :type subject: EnterpriseTopazSidekickCommonPerson
        """

        self._subject = subject
