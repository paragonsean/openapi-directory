# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.enterprise_topaz_sidekick_agenda_entry import EnterpriseTopazSidekickAgendaEntry
from openapi_server.models.enterprise_topaz_sidekick_agenda_group_card_proto import EnterpriseTopazSidekickAgendaGroupCardProto
from openapi_server.models.enterprise_topaz_sidekick_answer_suggested_query_answer_card import EnterpriseTopazSidekickAnswerSuggestedQueryAnswerCard
from openapi_server.models.enterprise_topaz_sidekick_card_metadata import EnterpriseTopazSidekickCardMetadata
from openapi_server.models.enterprise_topaz_sidekick_conflicting_events_card_proto import EnterpriseTopazSidekickConflictingEventsCardProto
from openapi_server.models.enterprise_topaz_sidekick_document_per_category_list import EnterpriseTopazSidekickDocumentPerCategoryList
from openapi_server.models.enterprise_topaz_sidekick_find_meeting_time_card_proto import EnterpriseTopazSidekickFindMeetingTimeCardProto
from openapi_server.models.enterprise_topaz_sidekick_generic_answer_card import EnterpriseTopazSidekickGenericAnswerCard
from openapi_server.models.enterprise_topaz_sidekick_get_and_keep_ahead_card_proto import EnterpriseTopazSidekickGetAndKeepAheadCardProto
from openapi_server.models.enterprise_topaz_sidekick_meeting_notes_card_proto import EnterpriseTopazSidekickMeetingNotesCardProto
from openapi_server.models.enterprise_topaz_sidekick_meeting_notes_card_request import EnterpriseTopazSidekickMeetingNotesCardRequest
from openapi_server.models.enterprise_topaz_sidekick_people_answer_person_answer_card import EnterpriseTopazSidekickPeopleAnswerPersonAnswerCard
from openapi_server.models.enterprise_topaz_sidekick_people_answer_related_people_answer_card import EnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard
from openapi_server.models.enterprise_topaz_sidekick_people_disambiguation_card import EnterpriseTopazSidekickPeopleDisambiguationCard
from openapi_server.models.enterprise_topaz_sidekick_person_profile_card import EnterpriseTopazSidekickPersonProfileCard
from openapi_server.models.enterprise_topaz_sidekick_personalized_docs_card_proto import EnterpriseTopazSidekickPersonalizedDocsCardProto
from openapi_server.models.enterprise_topaz_sidekick_recent_documents_card_proto import EnterpriseTopazSidekickRecentDocumentsCardProto
from openapi_server.models.enterprise_topaz_sidekick_share_meeting_docs_card_proto import EnterpriseTopazSidekickShareMeetingDocsCardProto
from openapi_server.models.people_promotion_card import PeoplePromotionCard
from openapi_server.models.third_party_generic_card import ThirdPartyGenericCard
from openapi_server import util


class EnterpriseTopazSidekickAssistCardProto(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, agenda_group_card_proto: EnterpriseTopazSidekickAgendaGroupCardProto=None, card_metadata: EnterpriseTopazSidekickCardMetadata=None, card_type: str=None, conflicting_meetings_card: EnterpriseTopazSidekickConflictingEventsCardProto=None, document_list_card: EnterpriseTopazSidekickDocumentPerCategoryList=None, documents_with_mentions: EnterpriseTopazSidekickDocumentPerCategoryList=None, find_meeting_time_card: EnterpriseTopazSidekickFindMeetingTimeCardProto=None, generic_answer_card: EnterpriseTopazSidekickGenericAnswerCard=None, get_and_keep_ahead_card: EnterpriseTopazSidekickGetAndKeepAheadCardProto=None, meeting: EnterpriseTopazSidekickAgendaEntry=None, meeting_notes_card: EnterpriseTopazSidekickMeetingNotesCardProto=None, meeting_notes_card_request: EnterpriseTopazSidekickMeetingNotesCardRequest=None, people_disambiguation_card: EnterpriseTopazSidekickPeopleDisambiguationCard=None, people_promotion_card: PeoplePromotionCard=None, person_answer_card: EnterpriseTopazSidekickPeopleAnswerPersonAnswerCard=None, person_profile_card: EnterpriseTopazSidekickPersonProfileCard=None, personalized_docs_card: EnterpriseTopazSidekickPersonalizedDocsCardProto=None, related_people_answer_card: EnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard=None, share_meeting_docs_card: EnterpriseTopazSidekickShareMeetingDocsCardProto=None, shared_documents: EnterpriseTopazSidekickDocumentPerCategoryList=None, suggested_query_answer_card: EnterpriseTopazSidekickAnswerSuggestedQueryAnswerCard=None, third_party_answer_card: ThirdPartyGenericCard=None, work_in_progress_card_proto: EnterpriseTopazSidekickRecentDocumentsCardProto=None):
        """EnterpriseTopazSidekickAssistCardProto - a model defined in OpenAPI

        :param agenda_group_card_proto: The agenda_group_card_proto of this EnterpriseTopazSidekickAssistCardProto.
        :param card_metadata: The card_metadata of this EnterpriseTopazSidekickAssistCardProto.
        :param card_type: The card_type of this EnterpriseTopazSidekickAssistCardProto.
        :param conflicting_meetings_card: The conflicting_meetings_card of this EnterpriseTopazSidekickAssistCardProto.
        :param document_list_card: The document_list_card of this EnterpriseTopazSidekickAssistCardProto.
        :param documents_with_mentions: The documents_with_mentions of this EnterpriseTopazSidekickAssistCardProto.
        :param find_meeting_time_card: The find_meeting_time_card of this EnterpriseTopazSidekickAssistCardProto.
        :param generic_answer_card: The generic_answer_card of this EnterpriseTopazSidekickAssistCardProto.
        :param get_and_keep_ahead_card: The get_and_keep_ahead_card of this EnterpriseTopazSidekickAssistCardProto.
        :param meeting: The meeting of this EnterpriseTopazSidekickAssistCardProto.
        :param meeting_notes_card: The meeting_notes_card of this EnterpriseTopazSidekickAssistCardProto.
        :param meeting_notes_card_request: The meeting_notes_card_request of this EnterpriseTopazSidekickAssistCardProto.
        :param people_disambiguation_card: The people_disambiguation_card of this EnterpriseTopazSidekickAssistCardProto.
        :param people_promotion_card: The people_promotion_card of this EnterpriseTopazSidekickAssistCardProto.
        :param person_answer_card: The person_answer_card of this EnterpriseTopazSidekickAssistCardProto.
        :param person_profile_card: The person_profile_card of this EnterpriseTopazSidekickAssistCardProto.
        :param personalized_docs_card: The personalized_docs_card of this EnterpriseTopazSidekickAssistCardProto.
        :param related_people_answer_card: The related_people_answer_card of this EnterpriseTopazSidekickAssistCardProto.
        :param share_meeting_docs_card: The share_meeting_docs_card of this EnterpriseTopazSidekickAssistCardProto.
        :param shared_documents: The shared_documents of this EnterpriseTopazSidekickAssistCardProto.
        :param suggested_query_answer_card: The suggested_query_answer_card of this EnterpriseTopazSidekickAssistCardProto.
        :param third_party_answer_card: The third_party_answer_card of this EnterpriseTopazSidekickAssistCardProto.
        :param work_in_progress_card_proto: The work_in_progress_card_proto of this EnterpriseTopazSidekickAssistCardProto.
        """
        self.openapi_types = {
            'agenda_group_card_proto': EnterpriseTopazSidekickAgendaGroupCardProto,
            'card_metadata': EnterpriseTopazSidekickCardMetadata,
            'card_type': str,
            'conflicting_meetings_card': EnterpriseTopazSidekickConflictingEventsCardProto,
            'document_list_card': EnterpriseTopazSidekickDocumentPerCategoryList,
            'documents_with_mentions': EnterpriseTopazSidekickDocumentPerCategoryList,
            'find_meeting_time_card': EnterpriseTopazSidekickFindMeetingTimeCardProto,
            'generic_answer_card': EnterpriseTopazSidekickGenericAnswerCard,
            'get_and_keep_ahead_card': EnterpriseTopazSidekickGetAndKeepAheadCardProto,
            'meeting': EnterpriseTopazSidekickAgendaEntry,
            'meeting_notes_card': EnterpriseTopazSidekickMeetingNotesCardProto,
            'meeting_notes_card_request': EnterpriseTopazSidekickMeetingNotesCardRequest,
            'people_disambiguation_card': EnterpriseTopazSidekickPeopleDisambiguationCard,
            'people_promotion_card': PeoplePromotionCard,
            'person_answer_card': EnterpriseTopazSidekickPeopleAnswerPersonAnswerCard,
            'person_profile_card': EnterpriseTopazSidekickPersonProfileCard,
            'personalized_docs_card': EnterpriseTopazSidekickPersonalizedDocsCardProto,
            'related_people_answer_card': EnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard,
            'share_meeting_docs_card': EnterpriseTopazSidekickShareMeetingDocsCardProto,
            'shared_documents': EnterpriseTopazSidekickDocumentPerCategoryList,
            'suggested_query_answer_card': EnterpriseTopazSidekickAnswerSuggestedQueryAnswerCard,
            'third_party_answer_card': ThirdPartyGenericCard,
            'work_in_progress_card_proto': EnterpriseTopazSidekickRecentDocumentsCardProto
        }

        self.attribute_map = {
            'agenda_group_card_proto': 'agendaGroupCardProto',
            'card_metadata': 'cardMetadata',
            'card_type': 'cardType',
            'conflicting_meetings_card': 'conflictingMeetingsCard',
            'document_list_card': 'documentListCard',
            'documents_with_mentions': 'documentsWithMentions',
            'find_meeting_time_card': 'findMeetingTimeCard',
            'generic_answer_card': 'genericAnswerCard',
            'get_and_keep_ahead_card': 'getAndKeepAheadCard',
            'meeting': 'meeting',
            'meeting_notes_card': 'meetingNotesCard',
            'meeting_notes_card_request': 'meetingNotesCardRequest',
            'people_disambiguation_card': 'peopleDisambiguationCard',
            'people_promotion_card': 'peoplePromotionCard',
            'person_answer_card': 'personAnswerCard',
            'person_profile_card': 'personProfileCard',
            'personalized_docs_card': 'personalizedDocsCard',
            'related_people_answer_card': 'relatedPeopleAnswerCard',
            'share_meeting_docs_card': 'shareMeetingDocsCard',
            'shared_documents': 'sharedDocuments',
            'suggested_query_answer_card': 'suggestedQueryAnswerCard',
            'third_party_answer_card': 'thirdPartyAnswerCard',
            'work_in_progress_card_proto': 'workInProgressCardProto'
        }

        self._agenda_group_card_proto = agenda_group_card_proto
        self._card_metadata = card_metadata
        self._card_type = card_type
        self._conflicting_meetings_card = conflicting_meetings_card
        self._document_list_card = document_list_card
        self._documents_with_mentions = documents_with_mentions
        self._find_meeting_time_card = find_meeting_time_card
        self._generic_answer_card = generic_answer_card
        self._get_and_keep_ahead_card = get_and_keep_ahead_card
        self._meeting = meeting
        self._meeting_notes_card = meeting_notes_card
        self._meeting_notes_card_request = meeting_notes_card_request
        self._people_disambiguation_card = people_disambiguation_card
        self._people_promotion_card = people_promotion_card
        self._person_answer_card = person_answer_card
        self._person_profile_card = person_profile_card
        self._personalized_docs_card = personalized_docs_card
        self._related_people_answer_card = related_people_answer_card
        self._share_meeting_docs_card = share_meeting_docs_card
        self._shared_documents = shared_documents
        self._suggested_query_answer_card = suggested_query_answer_card
        self._third_party_answer_card = third_party_answer_card
        self._work_in_progress_card_proto = work_in_progress_card_proto

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EnterpriseTopazSidekickAssistCardProto':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EnterpriseTopazSidekickAssistCardProto of this EnterpriseTopazSidekickAssistCardProto.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def agenda_group_card_proto(self):
        """Gets the agenda_group_card_proto of this EnterpriseTopazSidekickAssistCardProto.


        :return: The agenda_group_card_proto of this EnterpriseTopazSidekickAssistCardProto.
        :rtype: EnterpriseTopazSidekickAgendaGroupCardProto
        """
        return self._agenda_group_card_proto

    @agenda_group_card_proto.setter
    def agenda_group_card_proto(self, agenda_group_card_proto):
        """Sets the agenda_group_card_proto of this EnterpriseTopazSidekickAssistCardProto.


        :param agenda_group_card_proto: The agenda_group_card_proto of this EnterpriseTopazSidekickAssistCardProto.
        :type agenda_group_card_proto: EnterpriseTopazSidekickAgendaGroupCardProto
        """

        self._agenda_group_card_proto = agenda_group_card_proto

    @property
    def card_metadata(self):
        """Gets the card_metadata of this EnterpriseTopazSidekickAssistCardProto.


        :return: The card_metadata of this EnterpriseTopazSidekickAssistCardProto.
        :rtype: EnterpriseTopazSidekickCardMetadata
        """
        return self._card_metadata

    @card_metadata.setter
    def card_metadata(self, card_metadata):
        """Sets the card_metadata of this EnterpriseTopazSidekickAssistCardProto.


        :param card_metadata: The card_metadata of this EnterpriseTopazSidekickAssistCardProto.
        :type card_metadata: EnterpriseTopazSidekickCardMetadata
        """

        self._card_metadata = card_metadata

    @property
    def card_type(self):
        """Gets the card_type of this EnterpriseTopazSidekickAssistCardProto.

        Card type.

        :return: The card_type of this EnterpriseTopazSidekickAssistCardProto.
        :rtype: str
        """
        return self._card_type

    @card_type.setter
    def card_type(self, card_type):
        """Sets the card_type of this EnterpriseTopazSidekickAssistCardProto.

        Card type.

        :param card_type: The card_type of this EnterpriseTopazSidekickAssistCardProto.
        :type card_type: str
        """
        allowed_values = ["UNKNOWN_TYPE", "AGENDA", "CHANGELISTS", "CONFLICTING_MEETINGS", "CREATE_NOTES_FOR_MEETING", "CREATE_NOTES_FOR_MEETING_REQUEST", "CUSTOMER_NEWS", "FIND_MEETING_TIME", "NEXT_MEETING", "PERSONALIZED_DOCS", "TRENDING_DOCS", "UPCOMING_TRIP", "SUMMARY", "MEETINGS", "HOMEPAGE", "SHARE_MEETING_DOCS", "DISCOVER_PEOPLE", "HOMEPAGE_V3", "AGENDA_GROUP", "WORK_IN_PROGRESS", "GET_AND_KEEP_AHEAD", "GENERIC_ANSWER_CARD", "THIRD_PARTY_ANSWER_CARD", "DOMAIN_TRENDING_DOCS", "TEAM_TRENDING_DOCS", "DOCUMENT_LIST_ANSWER_CARD", "SUGGESTED_QUERY_ANSWER_CARD", "PERSON_ANSWER_CARD", "RELATED_PEOPLE_ANSWER_CARD", "PERSON_KNOWLEDGE_CARD", "PEOPLE_SEARCH_PROMOTION_CARD"]  # noqa: E501
        if card_type not in allowed_values:
            raise ValueError(
                "Invalid value for `card_type` ({0}), must be one of {1}"
                .format(card_type, allowed_values)
            )

        self._card_type = card_type

    @property
    def conflicting_meetings_card(self):
        """Gets the conflicting_meetings_card of this EnterpriseTopazSidekickAssistCardProto.


        :return: The conflicting_meetings_card of this EnterpriseTopazSidekickAssistCardProto.
        :rtype: EnterpriseTopazSidekickConflictingEventsCardProto
        """
        return self._conflicting_meetings_card

    @conflicting_meetings_card.setter
    def conflicting_meetings_card(self, conflicting_meetings_card):
        """Sets the conflicting_meetings_card of this EnterpriseTopazSidekickAssistCardProto.


        :param conflicting_meetings_card: The conflicting_meetings_card of this EnterpriseTopazSidekickAssistCardProto.
        :type conflicting_meetings_card: EnterpriseTopazSidekickConflictingEventsCardProto
        """

        self._conflicting_meetings_card = conflicting_meetings_card

    @property
    def document_list_card(self):
        """Gets the document_list_card of this EnterpriseTopazSidekickAssistCardProto.


        :return: The document_list_card of this EnterpriseTopazSidekickAssistCardProto.
        :rtype: EnterpriseTopazSidekickDocumentPerCategoryList
        """
        return self._document_list_card

    @document_list_card.setter
    def document_list_card(self, document_list_card):
        """Sets the document_list_card of this EnterpriseTopazSidekickAssistCardProto.


        :param document_list_card: The document_list_card of this EnterpriseTopazSidekickAssistCardProto.
        :type document_list_card: EnterpriseTopazSidekickDocumentPerCategoryList
        """

        self._document_list_card = document_list_card

    @property
    def documents_with_mentions(self):
        """Gets the documents_with_mentions of this EnterpriseTopazSidekickAssistCardProto.


        :return: The documents_with_mentions of this EnterpriseTopazSidekickAssistCardProto.
        :rtype: EnterpriseTopazSidekickDocumentPerCategoryList
        """
        return self._documents_with_mentions

    @documents_with_mentions.setter
    def documents_with_mentions(self, documents_with_mentions):
        """Sets the documents_with_mentions of this EnterpriseTopazSidekickAssistCardProto.


        :param documents_with_mentions: The documents_with_mentions of this EnterpriseTopazSidekickAssistCardProto.
        :type documents_with_mentions: EnterpriseTopazSidekickDocumentPerCategoryList
        """

        self._documents_with_mentions = documents_with_mentions

    @property
    def find_meeting_time_card(self):
        """Gets the find_meeting_time_card of this EnterpriseTopazSidekickAssistCardProto.


        :return: The find_meeting_time_card of this EnterpriseTopazSidekickAssistCardProto.
        :rtype: EnterpriseTopazSidekickFindMeetingTimeCardProto
        """
        return self._find_meeting_time_card

    @find_meeting_time_card.setter
    def find_meeting_time_card(self, find_meeting_time_card):
        """Sets the find_meeting_time_card of this EnterpriseTopazSidekickAssistCardProto.


        :param find_meeting_time_card: The find_meeting_time_card of this EnterpriseTopazSidekickAssistCardProto.
        :type find_meeting_time_card: EnterpriseTopazSidekickFindMeetingTimeCardProto
        """

        self._find_meeting_time_card = find_meeting_time_card

    @property
    def generic_answer_card(self):
        """Gets the generic_answer_card of this EnterpriseTopazSidekickAssistCardProto.


        :return: The generic_answer_card of this EnterpriseTopazSidekickAssistCardProto.
        :rtype: EnterpriseTopazSidekickGenericAnswerCard
        """
        return self._generic_answer_card

    @generic_answer_card.setter
    def generic_answer_card(self, generic_answer_card):
        """Sets the generic_answer_card of this EnterpriseTopazSidekickAssistCardProto.


        :param generic_answer_card: The generic_answer_card of this EnterpriseTopazSidekickAssistCardProto.
        :type generic_answer_card: EnterpriseTopazSidekickGenericAnswerCard
        """

        self._generic_answer_card = generic_answer_card

    @property
    def get_and_keep_ahead_card(self):
        """Gets the get_and_keep_ahead_card of this EnterpriseTopazSidekickAssistCardProto.


        :return: The get_and_keep_ahead_card of this EnterpriseTopazSidekickAssistCardProto.
        :rtype: EnterpriseTopazSidekickGetAndKeepAheadCardProto
        """
        return self._get_and_keep_ahead_card

    @get_and_keep_ahead_card.setter
    def get_and_keep_ahead_card(self, get_and_keep_ahead_card):
        """Sets the get_and_keep_ahead_card of this EnterpriseTopazSidekickAssistCardProto.


        :param get_and_keep_ahead_card: The get_and_keep_ahead_card of this EnterpriseTopazSidekickAssistCardProto.
        :type get_and_keep_ahead_card: EnterpriseTopazSidekickGetAndKeepAheadCardProto
        """

        self._get_and_keep_ahead_card = get_and_keep_ahead_card

    @property
    def meeting(self):
        """Gets the meeting of this EnterpriseTopazSidekickAssistCardProto.


        :return: The meeting of this EnterpriseTopazSidekickAssistCardProto.
        :rtype: EnterpriseTopazSidekickAgendaEntry
        """
        return self._meeting

    @meeting.setter
    def meeting(self, meeting):
        """Sets the meeting of this EnterpriseTopazSidekickAssistCardProto.


        :param meeting: The meeting of this EnterpriseTopazSidekickAssistCardProto.
        :type meeting: EnterpriseTopazSidekickAgendaEntry
        """

        self._meeting = meeting

    @property
    def meeting_notes_card(self):
        """Gets the meeting_notes_card of this EnterpriseTopazSidekickAssistCardProto.


        :return: The meeting_notes_card of this EnterpriseTopazSidekickAssistCardProto.
        :rtype: EnterpriseTopazSidekickMeetingNotesCardProto
        """
        return self._meeting_notes_card

    @meeting_notes_card.setter
    def meeting_notes_card(self, meeting_notes_card):
        """Sets the meeting_notes_card of this EnterpriseTopazSidekickAssistCardProto.


        :param meeting_notes_card: The meeting_notes_card of this EnterpriseTopazSidekickAssistCardProto.
        :type meeting_notes_card: EnterpriseTopazSidekickMeetingNotesCardProto
        """

        self._meeting_notes_card = meeting_notes_card

    @property
    def meeting_notes_card_request(self):
        """Gets the meeting_notes_card_request of this EnterpriseTopazSidekickAssistCardProto.


        :return: The meeting_notes_card_request of this EnterpriseTopazSidekickAssistCardProto.
        :rtype: EnterpriseTopazSidekickMeetingNotesCardRequest
        """
        return self._meeting_notes_card_request

    @meeting_notes_card_request.setter
    def meeting_notes_card_request(self, meeting_notes_card_request):
        """Sets the meeting_notes_card_request of this EnterpriseTopazSidekickAssistCardProto.


        :param meeting_notes_card_request: The meeting_notes_card_request of this EnterpriseTopazSidekickAssistCardProto.
        :type meeting_notes_card_request: EnterpriseTopazSidekickMeetingNotesCardRequest
        """

        self._meeting_notes_card_request = meeting_notes_card_request

    @property
    def people_disambiguation_card(self):
        """Gets the people_disambiguation_card of this EnterpriseTopazSidekickAssistCardProto.


        :return: The people_disambiguation_card of this EnterpriseTopazSidekickAssistCardProto.
        :rtype: EnterpriseTopazSidekickPeopleDisambiguationCard
        """
        return self._people_disambiguation_card

    @people_disambiguation_card.setter
    def people_disambiguation_card(self, people_disambiguation_card):
        """Sets the people_disambiguation_card of this EnterpriseTopazSidekickAssistCardProto.


        :param people_disambiguation_card: The people_disambiguation_card of this EnterpriseTopazSidekickAssistCardProto.
        :type people_disambiguation_card: EnterpriseTopazSidekickPeopleDisambiguationCard
        """

        self._people_disambiguation_card = people_disambiguation_card

    @property
    def people_promotion_card(self):
        """Gets the people_promotion_card of this EnterpriseTopazSidekickAssistCardProto.


        :return: The people_promotion_card of this EnterpriseTopazSidekickAssistCardProto.
        :rtype: PeoplePromotionCard
        """
        return self._people_promotion_card

    @people_promotion_card.setter
    def people_promotion_card(self, people_promotion_card):
        """Sets the people_promotion_card of this EnterpriseTopazSidekickAssistCardProto.


        :param people_promotion_card: The people_promotion_card of this EnterpriseTopazSidekickAssistCardProto.
        :type people_promotion_card: PeoplePromotionCard
        """

        self._people_promotion_card = people_promotion_card

    @property
    def person_answer_card(self):
        """Gets the person_answer_card of this EnterpriseTopazSidekickAssistCardProto.


        :return: The person_answer_card of this EnterpriseTopazSidekickAssistCardProto.
        :rtype: EnterpriseTopazSidekickPeopleAnswerPersonAnswerCard
        """
        return self._person_answer_card

    @person_answer_card.setter
    def person_answer_card(self, person_answer_card):
        """Sets the person_answer_card of this EnterpriseTopazSidekickAssistCardProto.


        :param person_answer_card: The person_answer_card of this EnterpriseTopazSidekickAssistCardProto.
        :type person_answer_card: EnterpriseTopazSidekickPeopleAnswerPersonAnswerCard
        """

        self._person_answer_card = person_answer_card

    @property
    def person_profile_card(self):
        """Gets the person_profile_card of this EnterpriseTopazSidekickAssistCardProto.


        :return: The person_profile_card of this EnterpriseTopazSidekickAssistCardProto.
        :rtype: EnterpriseTopazSidekickPersonProfileCard
        """
        return self._person_profile_card

    @person_profile_card.setter
    def person_profile_card(self, person_profile_card):
        """Sets the person_profile_card of this EnterpriseTopazSidekickAssistCardProto.


        :param person_profile_card: The person_profile_card of this EnterpriseTopazSidekickAssistCardProto.
        :type person_profile_card: EnterpriseTopazSidekickPersonProfileCard
        """

        self._person_profile_card = person_profile_card

    @property
    def personalized_docs_card(self):
        """Gets the personalized_docs_card of this EnterpriseTopazSidekickAssistCardProto.


        :return: The personalized_docs_card of this EnterpriseTopazSidekickAssistCardProto.
        :rtype: EnterpriseTopazSidekickPersonalizedDocsCardProto
        """
        return self._personalized_docs_card

    @personalized_docs_card.setter
    def personalized_docs_card(self, personalized_docs_card):
        """Sets the personalized_docs_card of this EnterpriseTopazSidekickAssistCardProto.


        :param personalized_docs_card: The personalized_docs_card of this EnterpriseTopazSidekickAssistCardProto.
        :type personalized_docs_card: EnterpriseTopazSidekickPersonalizedDocsCardProto
        """

        self._personalized_docs_card = personalized_docs_card

    @property
    def related_people_answer_card(self):
        """Gets the related_people_answer_card of this EnterpriseTopazSidekickAssistCardProto.


        :return: The related_people_answer_card of this EnterpriseTopazSidekickAssistCardProto.
        :rtype: EnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard
        """
        return self._related_people_answer_card

    @related_people_answer_card.setter
    def related_people_answer_card(self, related_people_answer_card):
        """Sets the related_people_answer_card of this EnterpriseTopazSidekickAssistCardProto.


        :param related_people_answer_card: The related_people_answer_card of this EnterpriseTopazSidekickAssistCardProto.
        :type related_people_answer_card: EnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard
        """

        self._related_people_answer_card = related_people_answer_card

    @property
    def share_meeting_docs_card(self):
        """Gets the share_meeting_docs_card of this EnterpriseTopazSidekickAssistCardProto.


        :return: The share_meeting_docs_card of this EnterpriseTopazSidekickAssistCardProto.
        :rtype: EnterpriseTopazSidekickShareMeetingDocsCardProto
        """
        return self._share_meeting_docs_card

    @share_meeting_docs_card.setter
    def share_meeting_docs_card(self, share_meeting_docs_card):
        """Sets the share_meeting_docs_card of this EnterpriseTopazSidekickAssistCardProto.


        :param share_meeting_docs_card: The share_meeting_docs_card of this EnterpriseTopazSidekickAssistCardProto.
        :type share_meeting_docs_card: EnterpriseTopazSidekickShareMeetingDocsCardProto
        """

        self._share_meeting_docs_card = share_meeting_docs_card

    @property
    def shared_documents(self):
        """Gets the shared_documents of this EnterpriseTopazSidekickAssistCardProto.


        :return: The shared_documents of this EnterpriseTopazSidekickAssistCardProto.
        :rtype: EnterpriseTopazSidekickDocumentPerCategoryList
        """
        return self._shared_documents

    @shared_documents.setter
    def shared_documents(self, shared_documents):
        """Sets the shared_documents of this EnterpriseTopazSidekickAssistCardProto.


        :param shared_documents: The shared_documents of this EnterpriseTopazSidekickAssistCardProto.
        :type shared_documents: EnterpriseTopazSidekickDocumentPerCategoryList
        """

        self._shared_documents = shared_documents

    @property
    def suggested_query_answer_card(self):
        """Gets the suggested_query_answer_card of this EnterpriseTopazSidekickAssistCardProto.


        :return: The suggested_query_answer_card of this EnterpriseTopazSidekickAssistCardProto.
        :rtype: EnterpriseTopazSidekickAnswerSuggestedQueryAnswerCard
        """
        return self._suggested_query_answer_card

    @suggested_query_answer_card.setter
    def suggested_query_answer_card(self, suggested_query_answer_card):
        """Sets the suggested_query_answer_card of this EnterpriseTopazSidekickAssistCardProto.


        :param suggested_query_answer_card: The suggested_query_answer_card of this EnterpriseTopazSidekickAssistCardProto.
        :type suggested_query_answer_card: EnterpriseTopazSidekickAnswerSuggestedQueryAnswerCard
        """

        self._suggested_query_answer_card = suggested_query_answer_card

    @property
    def third_party_answer_card(self):
        """Gets the third_party_answer_card of this EnterpriseTopazSidekickAssistCardProto.


        :return: The third_party_answer_card of this EnterpriseTopazSidekickAssistCardProto.
        :rtype: ThirdPartyGenericCard
        """
        return self._third_party_answer_card

    @third_party_answer_card.setter
    def third_party_answer_card(self, third_party_answer_card):
        """Sets the third_party_answer_card of this EnterpriseTopazSidekickAssistCardProto.


        :param third_party_answer_card: The third_party_answer_card of this EnterpriseTopazSidekickAssistCardProto.
        :type third_party_answer_card: ThirdPartyGenericCard
        """

        self._third_party_answer_card = third_party_answer_card

    @property
    def work_in_progress_card_proto(self):
        """Gets the work_in_progress_card_proto of this EnterpriseTopazSidekickAssistCardProto.


        :return: The work_in_progress_card_proto of this EnterpriseTopazSidekickAssistCardProto.
        :rtype: EnterpriseTopazSidekickRecentDocumentsCardProto
        """
        return self._work_in_progress_card_proto

    @work_in_progress_card_proto.setter
    def work_in_progress_card_proto(self, work_in_progress_card_proto):
        """Sets the work_in_progress_card_proto of this EnterpriseTopazSidekickAssistCardProto.


        :param work_in_progress_card_proto: The work_in_progress_card_proto of this EnterpriseTopazSidekickAssistCardProto.
        :type work_in_progress_card_proto: EnterpriseTopazSidekickRecentDocumentsCardProto
        """

        self._work_in_progress_card_proto = work_in_progress_card_proto
