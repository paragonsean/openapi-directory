# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.audit_logging_settings import AuditLoggingSettings
from openapi_server.models.vpc_settings import VPCSettings
from openapi_server import util


class CustomerSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, audit_logging_settings: AuditLoggingSettings=None, vpc_settings: VPCSettings=None):
        """CustomerSettings - a model defined in OpenAPI

        :param audit_logging_settings: The audit_logging_settings of this CustomerSettings.
        :param vpc_settings: The vpc_settings of this CustomerSettings.
        """
        self.openapi_types = {
            'audit_logging_settings': AuditLoggingSettings,
            'vpc_settings': VPCSettings
        }

        self.attribute_map = {
            'audit_logging_settings': 'auditLoggingSettings',
            'vpc_settings': 'vpcSettings'
        }

        self._audit_logging_settings = audit_logging_settings
        self._vpc_settings = vpc_settings

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CustomerSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CustomerSettings of this CustomerSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def audit_logging_settings(self):
        """Gets the audit_logging_settings of this CustomerSettings.


        :return: The audit_logging_settings of this CustomerSettings.
        :rtype: AuditLoggingSettings
        """
        return self._audit_logging_settings

    @audit_logging_settings.setter
    def audit_logging_settings(self, audit_logging_settings):
        """Sets the audit_logging_settings of this CustomerSettings.


        :param audit_logging_settings: The audit_logging_settings of this CustomerSettings.
        :type audit_logging_settings: AuditLoggingSettings
        """

        self._audit_logging_settings = audit_logging_settings

    @property
    def vpc_settings(self):
        """Gets the vpc_settings of this CustomerSettings.


        :return: The vpc_settings of this CustomerSettings.
        :rtype: VPCSettings
        """
        return self._vpc_settings

    @vpc_settings.setter
    def vpc_settings(self, vpc_settings):
        """Sets the vpc_settings of this CustomerSettings.


        :param vpc_settings: The vpc_settings of this CustomerSettings.
        :type vpc_settings: VPCSettings
        """

        self._vpc_settings = vpc_settings
