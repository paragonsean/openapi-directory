# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ContextAttribute(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, values: List[str]=None):
        """ContextAttribute - a model defined in OpenAPI

        :param name: The name of this ContextAttribute.
        :param values: The values of this ContextAttribute.
        """
        self.openapi_types = {
            'name': str,
            'values': List[str]
        }

        self.attribute_map = {
            'name': 'name',
            'values': 'values'
        }

        self._name = name
        self._values = values

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContextAttribute':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ContextAttribute of this ContextAttribute.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this ContextAttribute.

        The name of the attribute. It should not be empty. The maximum length is 32 characters. The name must start with a letter and can only contain letters (A-Z, a-z) or numbers (0-9). The name will be normalized (lower-cased) before being matched.

        :return: The name of this ContextAttribute.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ContextAttribute.

        The name of the attribute. It should not be empty. The maximum length is 32 characters. The name must start with a letter and can only contain letters (A-Z, a-z) or numbers (0-9). The name will be normalized (lower-cased) before being matched.

        :param name: The name of this ContextAttribute.
        :type name: str
        """

        self._name = name

    @property
    def values(self):
        """Gets the values of this ContextAttribute.

        Text values of the attribute. The maximum number of elements is 10. The maximum length of an element in the array is 32 characters. The value will be normalized (lower-cased) before being matched.

        :return: The values of this ContextAttribute.
        :rtype: List[str]
        """
        return self._values

    @values.setter
    def values(self, values):
        """Sets the values of this ContextAttribute.

        Text values of the attribute. The maximum number of elements is 10. The maximum length of an element in the array is 32 characters. The value will be normalized (lower-cased) before being matched.

        :param values: The values of this ContextAttribute.
        :type values: List[str]
        """

        self._values = values
