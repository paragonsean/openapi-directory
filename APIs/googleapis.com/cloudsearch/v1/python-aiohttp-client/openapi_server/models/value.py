# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.model_date import ModelDate
from openapi_server import util


class Value(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, boolean_value: bool=None, date_value: ModelDate=None, double_value: float=None, integer_value: str=None, string_value: str=None, timestamp_value: str=None):
        """Value - a model defined in OpenAPI

        :param boolean_value: The boolean_value of this Value.
        :param date_value: The date_value of this Value.
        :param double_value: The double_value of this Value.
        :param integer_value: The integer_value of this Value.
        :param string_value: The string_value of this Value.
        :param timestamp_value: The timestamp_value of this Value.
        """
        self.openapi_types = {
            'boolean_value': bool,
            'date_value': ModelDate,
            'double_value': float,
            'integer_value': str,
            'string_value': str,
            'timestamp_value': str
        }

        self.attribute_map = {
            'boolean_value': 'booleanValue',
            'date_value': 'dateValue',
            'double_value': 'doubleValue',
            'integer_value': 'integerValue',
            'string_value': 'stringValue',
            'timestamp_value': 'timestampValue'
        }

        self._boolean_value = boolean_value
        self._date_value = date_value
        self._double_value = double_value
        self._integer_value = integer_value
        self._string_value = string_value
        self._timestamp_value = timestamp_value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Value':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Value of this Value.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def boolean_value(self):
        """Gets the boolean_value of this Value.


        :return: The boolean_value of this Value.
        :rtype: bool
        """
        return self._boolean_value

    @boolean_value.setter
    def boolean_value(self, boolean_value):
        """Sets the boolean_value of this Value.


        :param boolean_value: The boolean_value of this Value.
        :type boolean_value: bool
        """

        self._boolean_value = boolean_value

    @property
    def date_value(self):
        """Gets the date_value of this Value.


        :return: The date_value of this Value.
        :rtype: ModelDate
        """
        return self._date_value

    @date_value.setter
    def date_value(self, date_value):
        """Sets the date_value of this Value.


        :param date_value: The date_value of this Value.
        :type date_value: ModelDate
        """

        self._date_value = date_value

    @property
    def double_value(self):
        """Gets the double_value of this Value.


        :return: The double_value of this Value.
        :rtype: float
        """
        return self._double_value

    @double_value.setter
    def double_value(self, double_value):
        """Sets the double_value of this Value.


        :param double_value: The double_value of this Value.
        :type double_value: float
        """

        self._double_value = double_value

    @property
    def integer_value(self):
        """Gets the integer_value of this Value.


        :return: The integer_value of this Value.
        :rtype: str
        """
        return self._integer_value

    @integer_value.setter
    def integer_value(self, integer_value):
        """Sets the integer_value of this Value.


        :param integer_value: The integer_value of this Value.
        :type integer_value: str
        """

        self._integer_value = integer_value

    @property
    def string_value(self):
        """Gets the string_value of this Value.


        :return: The string_value of this Value.
        :rtype: str
        """
        return self._string_value

    @string_value.setter
    def string_value(self, string_value):
        """Sets the string_value of this Value.


        :param string_value: The string_value of this Value.
        :type string_value: str
        """

        self._string_value = string_value

    @property
    def timestamp_value(self):
        """Gets the timestamp_value of this Value.


        :return: The timestamp_value of this Value.
        :rtype: str
        """
        return self._timestamp_value

    @timestamp_value.setter
    def timestamp_value(self, timestamp_value):
        """Sets the timestamp_value of this Value.


        :param timestamp_value: The timestamp_value of this Value.
        :type timestamp_value: str
        """

        self._timestamp_value = timestamp_value
