# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.object_definition import ObjectDefinition
from openapi_server import util


class ModelSchema(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, object_definitions: List[ObjectDefinition]=None, operation_ids: List[str]=None):
        """ModelSchema - a model defined in OpenAPI

        :param object_definitions: The object_definitions of this ModelSchema.
        :param operation_ids: The operation_ids of this ModelSchema.
        """
        self.openapi_types = {
            'object_definitions': List[ObjectDefinition],
            'operation_ids': List[str]
        }

        self.attribute_map = {
            'object_definitions': 'objectDefinitions',
            'operation_ids': 'operationIds'
        }

        self._object_definitions = object_definitions
        self._operation_ids = operation_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ModelSchema':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Schema of this ModelSchema.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def object_definitions(self):
        """Gets the object_definitions of this ModelSchema.

        The list of top-level objects for the data source. The maximum number of elements is 10.

        :return: The object_definitions of this ModelSchema.
        :rtype: List[ObjectDefinition]
        """
        return self._object_definitions

    @object_definitions.setter
    def object_definitions(self, object_definitions):
        """Sets the object_definitions of this ModelSchema.

        The list of top-level objects for the data source. The maximum number of elements is 10.

        :param object_definitions: The object_definitions of this ModelSchema.
        :type object_definitions: List[ObjectDefinition]
        """

        self._object_definitions = object_definitions

    @property
    def operation_ids(self):
        """Gets the operation_ids of this ModelSchema.

        IDs of the Long Running Operations (LROs) currently running for this schema. After modifying the schema, wait for operations to complete before indexing additional content.

        :return: The operation_ids of this ModelSchema.
        :rtype: List[str]
        """
        return self._operation_ids

    @operation_ids.setter
    def operation_ids(self, operation_ids):
        """Sets the operation_ids of this ModelSchema.

        IDs of the Long Running Operations (LROs) currently running for this schema. After modifying the schema, wait for operations to complete before indexing additional content.

        :param operation_ids: The operation_ids of this ModelSchema.
        :type operation_ids: List[str]
        """

        self._operation_ids = operation_ids
