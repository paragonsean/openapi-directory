# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.enterprise_topaz_sidekick_common_document import EnterpriseTopazSidekickCommonDocument
from openapi_server import util


class EnterpriseTopazSidekickDocumentGroup(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, group_type: str=None, personalized_document: List[EnterpriseTopazSidekickCommonDocument]=None):
        """EnterpriseTopazSidekickDocumentGroup - a model defined in OpenAPI

        :param group_type: The group_type of this EnterpriseTopazSidekickDocumentGroup.
        :param personalized_document: The personalized_document of this EnterpriseTopazSidekickDocumentGroup.
        """
        self.openapi_types = {
            'group_type': str,
            'personalized_document': List[EnterpriseTopazSidekickCommonDocument]
        }

        self.attribute_map = {
            'group_type': 'groupType',
            'personalized_document': 'personalizedDocument'
        }

        self._group_type = group_type
        self._personalized_document = personalized_document

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EnterpriseTopazSidekickDocumentGroup':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EnterpriseTopazSidekickDocumentGroup of this EnterpriseTopazSidekickDocumentGroup.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def group_type(self):
        """Gets the group_type of this EnterpriseTopazSidekickDocumentGroup.

        Document group type

        :return: The group_type of this EnterpriseTopazSidekickDocumentGroup.
        :rtype: str
        """
        return self._group_type

    @group_type.setter
    def group_type(self, group_type):
        """Sets the group_type of this EnterpriseTopazSidekickDocumentGroup.

        Document group type

        :param group_type: The group_type of this EnterpriseTopazSidekickDocumentGroup.
        :type group_type: str
        """
        allowed_values = ["UNKNOWN_TYPE", "ALL"]  # noqa: E501
        if group_type not in allowed_values:
            raise ValueError(
                "Invalid value for `group_type` ({0}), must be one of {1}"
                .format(group_type, allowed_values)
            )

        self._group_type = group_type

    @property
    def personalized_document(self):
        """Gets the personalized_document of this EnterpriseTopazSidekickDocumentGroup.

        The list of corresponding documents.

        :return: The personalized_document of this EnterpriseTopazSidekickDocumentGroup.
        :rtype: List[EnterpriseTopazSidekickCommonDocument]
        """
        return self._personalized_document

    @personalized_document.setter
    def personalized_document(self, personalized_document):
        """Sets the personalized_document of this EnterpriseTopazSidekickDocumentGroup.

        The list of corresponding documents.

        :param personalized_document: The personalized_document of this EnterpriseTopazSidekickDocumentGroup.
        :type personalized_document: List[EnterpriseTopazSidekickCommonDocument]
        """

        self._personalized_document = personalized_document
