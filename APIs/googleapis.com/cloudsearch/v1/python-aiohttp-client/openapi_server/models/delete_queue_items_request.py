# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.debug_options import DebugOptions
from openapi_server import util


class DeleteQueueItemsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, connector_name: str=None, debug_options: DebugOptions=None, queue: str=None):
        """DeleteQueueItemsRequest - a model defined in OpenAPI

        :param connector_name: The connector_name of this DeleteQueueItemsRequest.
        :param debug_options: The debug_options of this DeleteQueueItemsRequest.
        :param queue: The queue of this DeleteQueueItemsRequest.
        """
        self.openapi_types = {
            'connector_name': str,
            'debug_options': DebugOptions,
            'queue': str
        }

        self.attribute_map = {
            'connector_name': 'connectorName',
            'debug_options': 'debugOptions',
            'queue': 'queue'
        }

        self._connector_name = connector_name
        self._debug_options = debug_options
        self._queue = queue

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeleteQueueItemsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeleteQueueItemsRequest of this DeleteQueueItemsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def connector_name(self):
        """Gets the connector_name of this DeleteQueueItemsRequest.

        The name of connector making this call. Format: datasources/{source_id}/connectors/{ID}

        :return: The connector_name of this DeleteQueueItemsRequest.
        :rtype: str
        """
        return self._connector_name

    @connector_name.setter
    def connector_name(self, connector_name):
        """Sets the connector_name of this DeleteQueueItemsRequest.

        The name of connector making this call. Format: datasources/{source_id}/connectors/{ID}

        :param connector_name: The connector_name of this DeleteQueueItemsRequest.
        :type connector_name: str
        """

        self._connector_name = connector_name

    @property
    def debug_options(self):
        """Gets the debug_options of this DeleteQueueItemsRequest.


        :return: The debug_options of this DeleteQueueItemsRequest.
        :rtype: DebugOptions
        """
        return self._debug_options

    @debug_options.setter
    def debug_options(self, debug_options):
        """Sets the debug_options of this DeleteQueueItemsRequest.


        :param debug_options: The debug_options of this DeleteQueueItemsRequest.
        :type debug_options: DebugOptions
        """

        self._debug_options = debug_options

    @property
    def queue(self):
        """Gets the queue of this DeleteQueueItemsRequest.

        The name of a queue to delete items from.

        :return: The queue of this DeleteQueueItemsRequest.
        :rtype: str
        """
        return self._queue

    @queue.setter
    def queue(self, queue):
        """Sets the queue of this DeleteQueueItemsRequest.

        The name of a queue to delete items from.

        :param queue: The queue of this DeleteQueueItemsRequest.
        :type queue: str
        """

        self._queue = queue
