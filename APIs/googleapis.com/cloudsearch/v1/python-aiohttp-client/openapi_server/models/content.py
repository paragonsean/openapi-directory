# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.action import Action
from openapi_server.models.background_colored_text import BackgroundColoredText
from openapi_server.models.safe_html_proto import SafeHtmlProto
from openapi_server import util


class Content(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, actions: List[Action]=None, description: SafeHtmlProto=None, subtitle: BackgroundColoredText=None, title: BackgroundColoredText=None):
        """Content - a model defined in OpenAPI

        :param actions: The actions of this Content.
        :param description: The description of this Content.
        :param subtitle: The subtitle of this Content.
        :param title: The title of this Content.
        """
        self.openapi_types = {
            'actions': List[Action],
            'description': SafeHtmlProto,
            'subtitle': BackgroundColoredText,
            'title': BackgroundColoredText
        }

        self.attribute_map = {
            'actions': 'actions',
            'description': 'description',
            'subtitle': 'subtitle',
            'title': 'title'
        }

        self._actions = actions
        self._description = description
        self._subtitle = subtitle
        self._title = title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Content':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Content of this Content.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def actions(self):
        """Gets the actions of this Content.

        [Optional] Actions for this card.

        :return: The actions of this Content.
        :rtype: List[Action]
        """
        return self._actions

    @actions.setter
    def actions(self, actions):
        """Sets the actions of this Content.

        [Optional] Actions for this card.

        :param actions: The actions of this Content.
        :type actions: List[Action]
        """

        self._actions = actions

    @property
    def description(self):
        """Gets the description of this Content.


        :return: The description of this Content.
        :rtype: SafeHtmlProto
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this Content.


        :param description: The description of this Content.
        :type description: SafeHtmlProto
        """

        self._description = description

    @property
    def subtitle(self):
        """Gets the subtitle of this Content.


        :return: The subtitle of this Content.
        :rtype: BackgroundColoredText
        """
        return self._subtitle

    @subtitle.setter
    def subtitle(self, subtitle):
        """Sets the subtitle of this Content.


        :param subtitle: The subtitle of this Content.
        :type subtitle: BackgroundColoredText
        """

        self._subtitle = subtitle

    @property
    def title(self):
        """Gets the title of this Content.


        :return: The title of this Content.
        :rtype: BackgroundColoredText
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this Content.


        :param title: The title of this Content.
        :type title: BackgroundColoredText
        """

        self._title = title
