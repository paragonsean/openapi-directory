# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.map_tile import MapTile
from openapi_server.models.safe_url_proto import SafeUrlProto
from openapi_server import util


class MapInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, lat: float=None, location_url: SafeUrlProto=None, long: float=None, map_tile: List[MapTile]=None, zoom: int=None):
        """MapInfo - a model defined in OpenAPI

        :param lat: The lat of this MapInfo.
        :param location_url: The location_url of this MapInfo.
        :param long: The long of this MapInfo.
        :param map_tile: The map_tile of this MapInfo.
        :param zoom: The zoom of this MapInfo.
        """
        self.openapi_types = {
            'lat': float,
            'location_url': SafeUrlProto,
            'long': float,
            'map_tile': List[MapTile],
            'zoom': int
        }

        self.attribute_map = {
            'lat': 'lat',
            'location_url': 'locationUrl',
            'long': 'long',
            'map_tile': 'mapTile',
            'zoom': 'zoom'
        }

        self._lat = lat
        self._location_url = location_url
        self._long = long
        self._map_tile = map_tile
        self._zoom = zoom

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MapInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MapInfo of this MapInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def lat(self):
        """Gets the lat of this MapInfo.

        Latitude in degrees

        :return: The lat of this MapInfo.
        :rtype: float
        """
        return self._lat

    @lat.setter
    def lat(self, lat):
        """Sets the lat of this MapInfo.

        Latitude in degrees

        :param lat: The lat of this MapInfo.
        :type lat: float
        """

        self._lat = lat

    @property
    def location_url(self):
        """Gets the location_url of this MapInfo.


        :return: The location_url of this MapInfo.
        :rtype: SafeUrlProto
        """
        return self._location_url

    @location_url.setter
    def location_url(self, location_url):
        """Sets the location_url of this MapInfo.


        :param location_url: The location_url of this MapInfo.
        :type location_url: SafeUrlProto
        """

        self._location_url = location_url

    @property
    def long(self):
        """Gets the long of this MapInfo.

        Longitude in degrees

        :return: The long of this MapInfo.
        :rtype: float
        """
        return self._long

    @long.setter
    def long(self, long):
        """Sets the long of this MapInfo.

        Longitude in degrees

        :param long: The long of this MapInfo.
        :type long: float
        """

        self._long = long

    @property
    def map_tile(self):
        """Gets the map_tile of this MapInfo.

        MapTiles for the area around a user's work location

        :return: The map_tile of this MapInfo.
        :rtype: List[MapTile]
        """
        return self._map_tile

    @map_tile.setter
    def map_tile(self, map_tile):
        """Sets the map_tile of this MapInfo.

        MapTiles for the area around a user's work location

        :param map_tile: The map_tile of this MapInfo.
        :type map_tile: List[MapTile]
        """

        self._map_tile = map_tile

    @property
    def zoom(self):
        """Gets the zoom of this MapInfo.

        The zoom level of the map. A constant zoom value of 18 is used for now to match the zoom of the map shown on a Moma Teams Profile page

        :return: The zoom of this MapInfo.
        :rtype: int
        """
        return self._zoom

    @zoom.setter
    def zoom(self, zoom):
        """Sets the zoom of this MapInfo.

        The zoom level of the map. A constant zoom value of 18 is used for now to match the zoom of the map shown on a Moma Teams Profile page

        :param zoom: The zoom of this MapInfo.
        :type zoom: int
        """

        self._zoom = zoom
