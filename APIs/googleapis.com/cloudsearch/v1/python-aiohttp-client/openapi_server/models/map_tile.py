# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.safe_url_proto import SafeUrlProto
from openapi_server import util


class MapTile(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, image_url: SafeUrlProto=None, tile_x: float=None, tile_y: float=None):
        """MapTile - a model defined in OpenAPI

        :param image_url: The image_url of this MapTile.
        :param tile_x: The tile_x of this MapTile.
        :param tile_y: The tile_y of this MapTile.
        """
        self.openapi_types = {
            'image_url': SafeUrlProto,
            'tile_x': float,
            'tile_y': float
        }

        self.attribute_map = {
            'image_url': 'imageUrl',
            'tile_x': 'tileX',
            'tile_y': 'tileY'
        }

        self._image_url = image_url
        self._tile_x = tile_x
        self._tile_y = tile_y

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MapTile':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MapTile of this MapTile.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def image_url(self):
        """Gets the image_url of this MapTile.


        :return: The image_url of this MapTile.
        :rtype: SafeUrlProto
        """
        return self._image_url

    @image_url.setter
    def image_url(self, image_url):
        """Sets the image_url of this MapTile.


        :param image_url: The image_url of this MapTile.
        :type image_url: SafeUrlProto
        """

        self._image_url = image_url

    @property
    def tile_x(self):
        """Gets the tile_x of this MapTile.

        Map tile x coordinate

        :return: The tile_x of this MapTile.
        :rtype: float
        """
        return self._tile_x

    @tile_x.setter
    def tile_x(self, tile_x):
        """Sets the tile_x of this MapTile.

        Map tile x coordinate

        :param tile_x: The tile_x of this MapTile.
        :type tile_x: float
        """

        self._tile_x = tile_x

    @property
    def tile_y(self):
        """Gets the tile_y of this MapTile.

        Map tile y coordinate

        :return: The tile_y of this MapTile.
        :rtype: float
        """
        return self._tile_y

    @tile_y.setter
    def tile_y(self, tile_y):
        """Sets the tile_y of this MapTile.

        Map tile y coordinate

        :param tile_y: The tile_y of this MapTile.
        :type tile_y: float
        """

        self._tile_y = tile_y
