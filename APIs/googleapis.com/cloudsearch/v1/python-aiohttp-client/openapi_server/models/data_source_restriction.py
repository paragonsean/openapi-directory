# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.filter_options import FilterOptions
from openapi_server.models.source import Source
from openapi_server import util


class DataSourceRestriction(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, filter_options: List[FilterOptions]=None, source: Source=None):
        """DataSourceRestriction - a model defined in OpenAPI

        :param filter_options: The filter_options of this DataSourceRestriction.
        :param source: The source of this DataSourceRestriction.
        """
        self.openapi_types = {
            'filter_options': List[FilterOptions],
            'source': Source
        }

        self.attribute_map = {
            'filter_options': 'filterOptions',
            'source': 'source'
        }

        self._filter_options = filter_options
        self._source = source

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DataSourceRestriction':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DataSourceRestriction of this DataSourceRestriction.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def filter_options(self):
        """Gets the filter_options of this DataSourceRestriction.

        Filter options restricting the results. If multiple filters are present, they are grouped by object type before joining. Filters with the same object type are joined conjunctively, then the resulting expressions are joined disjunctively. The maximum number of elements is 20. NOTE: Suggest API supports only few filters at the moment: \"objecttype\", \"type\" and \"mimetype\". For now, schema specific filters cannot be used to filter suggestions.

        :return: The filter_options of this DataSourceRestriction.
        :rtype: List[FilterOptions]
        """
        return self._filter_options

    @filter_options.setter
    def filter_options(self, filter_options):
        """Sets the filter_options of this DataSourceRestriction.

        Filter options restricting the results. If multiple filters are present, they are grouped by object type before joining. Filters with the same object type are joined conjunctively, then the resulting expressions are joined disjunctively. The maximum number of elements is 20. NOTE: Suggest API supports only few filters at the moment: \"objecttype\", \"type\" and \"mimetype\". For now, schema specific filters cannot be used to filter suggestions.

        :param filter_options: The filter_options of this DataSourceRestriction.
        :type filter_options: List[FilterOptions]
        """

        self._filter_options = filter_options

    @property
    def source(self):
        """Gets the source of this DataSourceRestriction.


        :return: The source of this DataSourceRestriction.
        :rtype: Source
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this DataSourceRestriction.


        :param source: The source of this DataSourceRestriction.
        :type source: Source
        """

        self._source = source
