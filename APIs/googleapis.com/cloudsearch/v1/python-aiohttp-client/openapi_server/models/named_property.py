# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.date_values import DateValues
from openapi_server.models.double_values import DoubleValues
from openapi_server.models.enum_values import EnumValues
from openapi_server.models.html_values import HtmlValues
from openapi_server.models.integer_values import IntegerValues
from openapi_server.models.object_values import ObjectValues
from openapi_server.models.text_values import TextValues
from openapi_server.models.timestamp_values import TimestampValues
from openapi_server import util


class NamedProperty(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, boolean_value: bool=None, date_values: DateValues=None, double_values: DoubleValues=None, enum_values: EnumValues=None, html_values: HtmlValues=None, integer_values: IntegerValues=None, name: str=None, object_values: ObjectValues=None, text_values: TextValues=None, timestamp_values: TimestampValues=None):
        """NamedProperty - a model defined in OpenAPI

        :param boolean_value: The boolean_value of this NamedProperty.
        :param date_values: The date_values of this NamedProperty.
        :param double_values: The double_values of this NamedProperty.
        :param enum_values: The enum_values of this NamedProperty.
        :param html_values: The html_values of this NamedProperty.
        :param integer_values: The integer_values of this NamedProperty.
        :param name: The name of this NamedProperty.
        :param object_values: The object_values of this NamedProperty.
        :param text_values: The text_values of this NamedProperty.
        :param timestamp_values: The timestamp_values of this NamedProperty.
        """
        self.openapi_types = {
            'boolean_value': bool,
            'date_values': DateValues,
            'double_values': DoubleValues,
            'enum_values': EnumValues,
            'html_values': HtmlValues,
            'integer_values': IntegerValues,
            'name': str,
            'object_values': ObjectValues,
            'text_values': TextValues,
            'timestamp_values': TimestampValues
        }

        self.attribute_map = {
            'boolean_value': 'booleanValue',
            'date_values': 'dateValues',
            'double_values': 'doubleValues',
            'enum_values': 'enumValues',
            'html_values': 'htmlValues',
            'integer_values': 'integerValues',
            'name': 'name',
            'object_values': 'objectValues',
            'text_values': 'textValues',
            'timestamp_values': 'timestampValues'
        }

        self._boolean_value = boolean_value
        self._date_values = date_values
        self._double_values = double_values
        self._enum_values = enum_values
        self._html_values = html_values
        self._integer_values = integer_values
        self._name = name
        self._object_values = object_values
        self._text_values = text_values
        self._timestamp_values = timestamp_values

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NamedProperty':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NamedProperty of this NamedProperty.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def boolean_value(self):
        """Gets the boolean_value of this NamedProperty.


        :return: The boolean_value of this NamedProperty.
        :rtype: bool
        """
        return self._boolean_value

    @boolean_value.setter
    def boolean_value(self, boolean_value):
        """Sets the boolean_value of this NamedProperty.


        :param boolean_value: The boolean_value of this NamedProperty.
        :type boolean_value: bool
        """

        self._boolean_value = boolean_value

    @property
    def date_values(self):
        """Gets the date_values of this NamedProperty.


        :return: The date_values of this NamedProperty.
        :rtype: DateValues
        """
        return self._date_values

    @date_values.setter
    def date_values(self, date_values):
        """Sets the date_values of this NamedProperty.


        :param date_values: The date_values of this NamedProperty.
        :type date_values: DateValues
        """

        self._date_values = date_values

    @property
    def double_values(self):
        """Gets the double_values of this NamedProperty.


        :return: The double_values of this NamedProperty.
        :rtype: DoubleValues
        """
        return self._double_values

    @double_values.setter
    def double_values(self, double_values):
        """Sets the double_values of this NamedProperty.


        :param double_values: The double_values of this NamedProperty.
        :type double_values: DoubleValues
        """

        self._double_values = double_values

    @property
    def enum_values(self):
        """Gets the enum_values of this NamedProperty.


        :return: The enum_values of this NamedProperty.
        :rtype: EnumValues
        """
        return self._enum_values

    @enum_values.setter
    def enum_values(self, enum_values):
        """Sets the enum_values of this NamedProperty.


        :param enum_values: The enum_values of this NamedProperty.
        :type enum_values: EnumValues
        """

        self._enum_values = enum_values

    @property
    def html_values(self):
        """Gets the html_values of this NamedProperty.


        :return: The html_values of this NamedProperty.
        :rtype: HtmlValues
        """
        return self._html_values

    @html_values.setter
    def html_values(self, html_values):
        """Sets the html_values of this NamedProperty.


        :param html_values: The html_values of this NamedProperty.
        :type html_values: HtmlValues
        """

        self._html_values = html_values

    @property
    def integer_values(self):
        """Gets the integer_values of this NamedProperty.


        :return: The integer_values of this NamedProperty.
        :rtype: IntegerValues
        """
        return self._integer_values

    @integer_values.setter
    def integer_values(self, integer_values):
        """Sets the integer_values of this NamedProperty.


        :param integer_values: The integer_values of this NamedProperty.
        :type integer_values: IntegerValues
        """

        self._integer_values = integer_values

    @property
    def name(self):
        """Gets the name of this NamedProperty.

        The name of the property. This name should correspond to the name of the property that was registered for object definition in the schema. The maximum allowable length for this property is 256 characters.

        :return: The name of this NamedProperty.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this NamedProperty.

        The name of the property. This name should correspond to the name of the property that was registered for object definition in the schema. The maximum allowable length for this property is 256 characters.

        :param name: The name of this NamedProperty.
        :type name: str
        """

        self._name = name

    @property
    def object_values(self):
        """Gets the object_values of this NamedProperty.


        :return: The object_values of this NamedProperty.
        :rtype: ObjectValues
        """
        return self._object_values

    @object_values.setter
    def object_values(self, object_values):
        """Sets the object_values of this NamedProperty.


        :param object_values: The object_values of this NamedProperty.
        :type object_values: ObjectValues
        """

        self._object_values = object_values

    @property
    def text_values(self):
        """Gets the text_values of this NamedProperty.


        :return: The text_values of this NamedProperty.
        :rtype: TextValues
        """
        return self._text_values

    @text_values.setter
    def text_values(self, text_values):
        """Sets the text_values of this NamedProperty.


        :param text_values: The text_values of this NamedProperty.
        :type text_values: TextValues
        """

        self._text_values = text_values

    @property
    def timestamp_values(self):
        """Gets the timestamp_values of this NamedProperty.


        :return: The timestamp_values of this NamedProperty.
        :rtype: TimestampValues
        """
        return self._timestamp_values

    @timestamp_values.setter
    def timestamp_values(self, timestamp_values):
        """Sets the timestamp_values of this NamedProperty.


        :param timestamp_values: The timestamp_values of this NamedProperty.
        :type timestamp_values: TimestampValues
        """

        self._timestamp_values = timestamp_values
