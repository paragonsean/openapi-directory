# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.freshness_options import FreshnessOptions
from openapi_server.models.object_display_options import ObjectDisplayOptions
from openapi_server import util


class ObjectOptions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, display_options: ObjectDisplayOptions=None, freshness_options: FreshnessOptions=None, suggestion_filtering_operators: List[str]=None):
        """ObjectOptions - a model defined in OpenAPI

        :param display_options: The display_options of this ObjectOptions.
        :param freshness_options: The freshness_options of this ObjectOptions.
        :param suggestion_filtering_operators: The suggestion_filtering_operators of this ObjectOptions.
        """
        self.openapi_types = {
            'display_options': ObjectDisplayOptions,
            'freshness_options': FreshnessOptions,
            'suggestion_filtering_operators': List[str]
        }

        self.attribute_map = {
            'display_options': 'displayOptions',
            'freshness_options': 'freshnessOptions',
            'suggestion_filtering_operators': 'suggestionFilteringOperators'
        }

        self._display_options = display_options
        self._freshness_options = freshness_options
        self._suggestion_filtering_operators = suggestion_filtering_operators

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ObjectOptions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ObjectOptions of this ObjectOptions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def display_options(self):
        """Gets the display_options of this ObjectOptions.


        :return: The display_options of this ObjectOptions.
        :rtype: ObjectDisplayOptions
        """
        return self._display_options

    @display_options.setter
    def display_options(self, display_options):
        """Sets the display_options of this ObjectOptions.


        :param display_options: The display_options of this ObjectOptions.
        :type display_options: ObjectDisplayOptions
        """

        self._display_options = display_options

    @property
    def freshness_options(self):
        """Gets the freshness_options of this ObjectOptions.


        :return: The freshness_options of this ObjectOptions.
        :rtype: FreshnessOptions
        """
        return self._freshness_options

    @freshness_options.setter
    def freshness_options(self, freshness_options):
        """Sets the freshness_options of this ObjectOptions.


        :param freshness_options: The freshness_options of this ObjectOptions.
        :type freshness_options: FreshnessOptions
        """

        self._freshness_options = freshness_options

    @property
    def suggestion_filtering_operators(self):
        """Gets the suggestion_filtering_operators of this ObjectOptions.

        Operators that can be used to filter suggestions. For Suggest API, only operators mentioned here will be honored in the FilterOptions. Only TEXT and ENUM operators are supported. NOTE: \"objecttype\", \"type\" and \"mimetype\" are already supported. This property is to configure schema specific operators. Even though this is an array, only one operator can be specified. This is an array for future extensibility. Operators mapping to multiple properties within the same object are not supported. If the operator spans across different object types, this option has to be set once for each object definition.

        :return: The suggestion_filtering_operators of this ObjectOptions.
        :rtype: List[str]
        """
        return self._suggestion_filtering_operators

    @suggestion_filtering_operators.setter
    def suggestion_filtering_operators(self, suggestion_filtering_operators):
        """Sets the suggestion_filtering_operators of this ObjectOptions.

        Operators that can be used to filter suggestions. For Suggest API, only operators mentioned here will be honored in the FilterOptions. Only TEXT and ENUM operators are supported. NOTE: \"objecttype\", \"type\" and \"mimetype\" are already supported. This property is to configure schema specific operators. Even though this is an array, only one operator can be specified. This is an array for future extensibility. Operators mapping to multiple properties within the same object are not supported. If the operator spans across different object types, this option has to be set once for each object definition.

        :param suggestion_filtering_operators: The suggestion_filtering_operators of this ObjectOptions.
        :type suggestion_filtering_operators: List[str]
        """

        self._suggestion_filtering_operators = suggestion_filtering_operators
