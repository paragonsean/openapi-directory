# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.search_application_query_stats import SearchApplicationQueryStats
from openapi_server import util


class GetSearchApplicationQueryStatsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, stats: List[SearchApplicationQueryStats]=None, total_query_count: str=None):
        """GetSearchApplicationQueryStatsResponse - a model defined in OpenAPI

        :param stats: The stats of this GetSearchApplicationQueryStatsResponse.
        :param total_query_count: The total_query_count of this GetSearchApplicationQueryStatsResponse.
        """
        self.openapi_types = {
            'stats': List[SearchApplicationQueryStats],
            'total_query_count': str
        }

        self.attribute_map = {
            'stats': 'stats',
            'total_query_count': 'totalQueryCount'
        }

        self._stats = stats
        self._total_query_count = total_query_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetSearchApplicationQueryStatsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetSearchApplicationQueryStatsResponse of this GetSearchApplicationQueryStatsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def stats(self):
        """Gets the stats of this GetSearchApplicationQueryStatsResponse.

        Query stats per date for a search application.

        :return: The stats of this GetSearchApplicationQueryStatsResponse.
        :rtype: List[SearchApplicationQueryStats]
        """
        return self._stats

    @stats.setter
    def stats(self, stats):
        """Sets the stats of this GetSearchApplicationQueryStatsResponse.

        Query stats per date for a search application.

        :param stats: The stats of this GetSearchApplicationQueryStatsResponse.
        :type stats: List[SearchApplicationQueryStats]
        """

        self._stats = stats

    @property
    def total_query_count(self):
        """Gets the total_query_count of this GetSearchApplicationQueryStatsResponse.

        Total successful query count (status code 200) for the given date range.

        :return: The total_query_count of this GetSearchApplicationQueryStatsResponse.
        :rtype: str
        """
        return self._total_query_count

    @total_query_count.setter
    def total_query_count(self, total_query_count):
        """Sets the total_query_count of this GetSearchApplicationQueryStatsResponse.

        Total successful query count (status code 200) for the given date range.

        :param total_query_count: The total_query_count of this GetSearchApplicationQueryStatsResponse.
        :type total_query_count: str
        """

        self._total_query_count = total_query_count
