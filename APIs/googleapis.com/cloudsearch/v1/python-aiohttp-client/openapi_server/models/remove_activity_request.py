# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.request_options import RequestOptions
from openapi_server.models.user_activity import UserActivity
from openapi_server import util


class RemoveActivityRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, request_options: RequestOptions=None, user_activity: UserActivity=None):
        """RemoveActivityRequest - a model defined in OpenAPI

        :param request_options: The request_options of this RemoveActivityRequest.
        :param user_activity: The user_activity of this RemoveActivityRequest.
        """
        self.openapi_types = {
            'request_options': RequestOptions,
            'user_activity': UserActivity
        }

        self.attribute_map = {
            'request_options': 'requestOptions',
            'user_activity': 'userActivity'
        }

        self._request_options = request_options
        self._user_activity = user_activity

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RemoveActivityRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RemoveActivityRequest of this RemoveActivityRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def request_options(self):
        """Gets the request_options of this RemoveActivityRequest.


        :return: The request_options of this RemoveActivityRequest.
        :rtype: RequestOptions
        """
        return self._request_options

    @request_options.setter
    def request_options(self, request_options):
        """Sets the request_options of this RemoveActivityRequest.


        :param request_options: The request_options of this RemoveActivityRequest.
        :type request_options: RequestOptions
        """

        self._request_options = request_options

    @property
    def user_activity(self):
        """Gets the user_activity of this RemoveActivityRequest.


        :return: The user_activity of this RemoveActivityRequest.
        :rtype: UserActivity
        """
        return self._user_activity

    @user_activity.setter
    def user_activity(self, user_activity):
        """Sets the user_activity of this RemoveActivityRequest.


        :param user_activity: The user_activity of this RemoveActivityRequest.
        :type user_activity: UserActivity
        """

        self._user_activity = user_activity
