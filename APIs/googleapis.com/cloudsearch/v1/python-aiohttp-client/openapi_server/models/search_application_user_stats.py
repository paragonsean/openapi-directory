# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.model_date import ModelDate
from openapi_server import util


class SearchApplicationUserStats(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, _date: ModelDate=None, one_day_active_users_count: str=None, seven_days_active_users_count: str=None, thirty_days_active_users_count: str=None):
        """SearchApplicationUserStats - a model defined in OpenAPI

        :param _date: The _date of this SearchApplicationUserStats.
        :param one_day_active_users_count: The one_day_active_users_count of this SearchApplicationUserStats.
        :param seven_days_active_users_count: The seven_days_active_users_count of this SearchApplicationUserStats.
        :param thirty_days_active_users_count: The thirty_days_active_users_count of this SearchApplicationUserStats.
        """
        self.openapi_types = {
            '_date': ModelDate,
            'one_day_active_users_count': str,
            'seven_days_active_users_count': str,
            'thirty_days_active_users_count': str
        }

        self.attribute_map = {
            '_date': 'date',
            'one_day_active_users_count': 'oneDayActiveUsersCount',
            'seven_days_active_users_count': 'sevenDaysActiveUsersCount',
            'thirty_days_active_users_count': 'thirtyDaysActiveUsersCount'
        }

        self.__date = _date
        self._one_day_active_users_count = one_day_active_users_count
        self._seven_days_active_users_count = seven_days_active_users_count
        self._thirty_days_active_users_count = thirty_days_active_users_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SearchApplicationUserStats':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SearchApplicationUserStats of this SearchApplicationUserStats.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def _date(self):
        """Gets the _date of this SearchApplicationUserStats.


        :return: The _date of this SearchApplicationUserStats.
        :rtype: ModelDate
        """
        return self.__date

    @_date.setter
    def _date(self, _date):
        """Sets the _date of this SearchApplicationUserStats.


        :param _date: The _date of this SearchApplicationUserStats.
        :type _date: ModelDate
        """

        self.__date = _date

    @property
    def one_day_active_users_count(self):
        """Gets the one_day_active_users_count of this SearchApplicationUserStats.

        The count of unique active users in the past one day

        :return: The one_day_active_users_count of this SearchApplicationUserStats.
        :rtype: str
        """
        return self._one_day_active_users_count

    @one_day_active_users_count.setter
    def one_day_active_users_count(self, one_day_active_users_count):
        """Sets the one_day_active_users_count of this SearchApplicationUserStats.

        The count of unique active users in the past one day

        :param one_day_active_users_count: The one_day_active_users_count of this SearchApplicationUserStats.
        :type one_day_active_users_count: str
        """

        self._one_day_active_users_count = one_day_active_users_count

    @property
    def seven_days_active_users_count(self):
        """Gets the seven_days_active_users_count of this SearchApplicationUserStats.

        The count of unique active users in the past seven days

        :return: The seven_days_active_users_count of this SearchApplicationUserStats.
        :rtype: str
        """
        return self._seven_days_active_users_count

    @seven_days_active_users_count.setter
    def seven_days_active_users_count(self, seven_days_active_users_count):
        """Sets the seven_days_active_users_count of this SearchApplicationUserStats.

        The count of unique active users in the past seven days

        :param seven_days_active_users_count: The seven_days_active_users_count of this SearchApplicationUserStats.
        :type seven_days_active_users_count: str
        """

        self._seven_days_active_users_count = seven_days_active_users_count

    @property
    def thirty_days_active_users_count(self):
        """Gets the thirty_days_active_users_count of this SearchApplicationUserStats.

        The count of unique active users in the past thirty days

        :return: The thirty_days_active_users_count of this SearchApplicationUserStats.
        :rtype: str
        """
        return self._thirty_days_active_users_count

    @thirty_days_active_users_count.setter
    def thirty_days_active_users_count(self, thirty_days_active_users_count):
        """Sets the thirty_days_active_users_count of this SearchApplicationUserStats.

        The count of unique active users in the past thirty days

        :param thirty_days_active_users_count: The thirty_days_active_users_count of this SearchApplicationUserStats.
        :type thirty_days_active_users_count: str
        """

        self._thirty_days_active_users_count = thirty_days_active_users_count
