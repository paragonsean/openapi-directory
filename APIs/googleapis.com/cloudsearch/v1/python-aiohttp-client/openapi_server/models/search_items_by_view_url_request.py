# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.debug_options import DebugOptions
from openapi_server import util


class SearchItemsByViewUrlRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, debug_options: DebugOptions=None, page_token: str=None, view_url: str=None):
        """SearchItemsByViewUrlRequest - a model defined in OpenAPI

        :param debug_options: The debug_options of this SearchItemsByViewUrlRequest.
        :param page_token: The page_token of this SearchItemsByViewUrlRequest.
        :param view_url: The view_url of this SearchItemsByViewUrlRequest.
        """
        self.openapi_types = {
            'debug_options': DebugOptions,
            'page_token': str,
            'view_url': str
        }

        self.attribute_map = {
            'debug_options': 'debugOptions',
            'page_token': 'pageToken',
            'view_url': 'viewUrl'
        }

        self._debug_options = debug_options
        self._page_token = page_token
        self._view_url = view_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SearchItemsByViewUrlRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SearchItemsByViewUrlRequest of this SearchItemsByViewUrlRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def debug_options(self):
        """Gets the debug_options of this SearchItemsByViewUrlRequest.


        :return: The debug_options of this SearchItemsByViewUrlRequest.
        :rtype: DebugOptions
        """
        return self._debug_options

    @debug_options.setter
    def debug_options(self, debug_options):
        """Sets the debug_options of this SearchItemsByViewUrlRequest.


        :param debug_options: The debug_options of this SearchItemsByViewUrlRequest.
        :type debug_options: DebugOptions
        """

        self._debug_options = debug_options

    @property
    def page_token(self):
        """Gets the page_token of this SearchItemsByViewUrlRequest.

        The next_page_token value returned from a previous request, if any.

        :return: The page_token of this SearchItemsByViewUrlRequest.
        :rtype: str
        """
        return self._page_token

    @page_token.setter
    def page_token(self, page_token):
        """Sets the page_token of this SearchItemsByViewUrlRequest.

        The next_page_token value returned from a previous request, if any.

        :param page_token: The page_token of this SearchItemsByViewUrlRequest.
        :type page_token: str
        """

        self._page_token = page_token

    @property
    def view_url(self):
        """Gets the view_url of this SearchItemsByViewUrlRequest.

        Specify the full view URL to find the corresponding item. The maximum length is 2048 characters.

        :return: The view_url of this SearchItemsByViewUrlRequest.
        :rtype: str
        """
        return self._view_url

    @view_url.setter
    def view_url(self, view_url):
        """Sets the view_url of this SearchItemsByViewUrlRequest.

        Specify the full view URL to find the corresponding item. The maximum length is 2048 characters.

        :param view_url: The view_url of this SearchItemsByViewUrlRequest.
        :type view_url: str
        """

        self._view_url = view_url
