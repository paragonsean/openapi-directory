# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.structured_data_object import StructuredDataObject
from openapi_server import util


class ItemStructuredData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, hash: str=None, object: StructuredDataObject=None):
        """ItemStructuredData - a model defined in OpenAPI

        :param hash: The hash of this ItemStructuredData.
        :param object: The object of this ItemStructuredData.
        """
        self.openapi_types = {
            'hash': str,
            'object': StructuredDataObject
        }

        self.attribute_map = {
            'hash': 'hash',
            'object': 'object'
        }

        self._hash = hash
        self._object = object

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ItemStructuredData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ItemStructuredData of this ItemStructuredData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def hash(self):
        """Gets the hash of this ItemStructuredData.

        Hashing value provided by the API caller. This can be used with the items.push method to calculate modified state. The maximum length is 2048 characters.

        :return: The hash of this ItemStructuredData.
        :rtype: str
        """
        return self._hash

    @hash.setter
    def hash(self, hash):
        """Sets the hash of this ItemStructuredData.

        Hashing value provided by the API caller. This can be used with the items.push method to calculate modified state. The maximum length is 2048 characters.

        :param hash: The hash of this ItemStructuredData.
        :type hash: str
        """

        self._hash = hash

    @property
    def object(self):
        """Gets the object of this ItemStructuredData.


        :return: The object of this ItemStructuredData.
        :rtype: StructuredDataObject
        """
        return self._object

    @object.setter
    def object(self, object):
        """Sets the object of this ItemStructuredData.


        :param object: The object of this ItemStructuredData.
        :type object: StructuredDataObject
        """

        self._object = object
