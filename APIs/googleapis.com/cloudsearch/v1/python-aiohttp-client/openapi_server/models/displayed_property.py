# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DisplayedProperty(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, property_name: str=None):
        """DisplayedProperty - a model defined in OpenAPI

        :param property_name: The property_name of this DisplayedProperty.
        """
        self.openapi_types = {
            'property_name': str
        }

        self.attribute_map = {
            'property_name': 'propertyName'
        }

        self._property_name = property_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DisplayedProperty':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DisplayedProperty of this DisplayedProperty.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def property_name(self):
        """Gets the property_name of this DisplayedProperty.

        The name of the top-level property as defined in a property definition for the object. If the name is not a defined property in the schema, an error is given when attempting to update the schema.

        :return: The property_name of this DisplayedProperty.
        :rtype: str
        """
        return self._property_name

    @property_name.setter
    def property_name(self, property_name):
        """Sets the property_name of this DisplayedProperty.

        The name of the top-level property as defined in a property definition for the object. If the name is not a defined property in the schema, an error is given when attempting to update the schema.

        :param property_name: The property_name of this DisplayedProperty.
        :type property_name: str
        """

        self._property_name = property_name
