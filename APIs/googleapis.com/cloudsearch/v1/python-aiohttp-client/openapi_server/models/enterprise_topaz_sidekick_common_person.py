# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.enterprise_topaz_sidekick_common_person_birthday import EnterpriseTopazSidekickCommonPersonBirthday
from openapi_server import util


class EnterpriseTopazSidekickCommonPerson(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, birthday: EnterpriseTopazSidekickCommonPersonBirthday=None, cell_phone: str=None, department: str=None, desk_location: str=None, desk_phone: str=None, display_name: str=None, email: str=None, family_name: str=None, full_address: str=None, gaia_id: str=None, given_name: str=None, job_title: str=None, manager: EnterpriseTopazSidekickCommonPerson=None, obfuscated_id: str=None, photo_url: str=None, street_address: str=None):
        """EnterpriseTopazSidekickCommonPerson - a model defined in OpenAPI

        :param birthday: The birthday of this EnterpriseTopazSidekickCommonPerson.
        :param cell_phone: The cell_phone of this EnterpriseTopazSidekickCommonPerson.
        :param department: The department of this EnterpriseTopazSidekickCommonPerson.
        :param desk_location: The desk_location of this EnterpriseTopazSidekickCommonPerson.
        :param desk_phone: The desk_phone of this EnterpriseTopazSidekickCommonPerson.
        :param display_name: The display_name of this EnterpriseTopazSidekickCommonPerson.
        :param email: The email of this EnterpriseTopazSidekickCommonPerson.
        :param family_name: The family_name of this EnterpriseTopazSidekickCommonPerson.
        :param full_address: The full_address of this EnterpriseTopazSidekickCommonPerson.
        :param gaia_id: The gaia_id of this EnterpriseTopazSidekickCommonPerson.
        :param given_name: The given_name of this EnterpriseTopazSidekickCommonPerson.
        :param job_title: The job_title of this EnterpriseTopazSidekickCommonPerson.
        :param manager: The manager of this EnterpriseTopazSidekickCommonPerson.
        :param obfuscated_id: The obfuscated_id of this EnterpriseTopazSidekickCommonPerson.
        :param photo_url: The photo_url of this EnterpriseTopazSidekickCommonPerson.
        :param street_address: The street_address of this EnterpriseTopazSidekickCommonPerson.
        """
        self.openapi_types = {
            'birthday': EnterpriseTopazSidekickCommonPersonBirthday,
            'cell_phone': str,
            'department': str,
            'desk_location': str,
            'desk_phone': str,
            'display_name': str,
            'email': str,
            'family_name': str,
            'full_address': str,
            'gaia_id': str,
            'given_name': str,
            'job_title': str,
            'manager': EnterpriseTopazSidekickCommonPerson,
            'obfuscated_id': str,
            'photo_url': str,
            'street_address': str
        }

        self.attribute_map = {
            'birthday': 'birthday',
            'cell_phone': 'cellPhone',
            'department': 'department',
            'desk_location': 'deskLocation',
            'desk_phone': 'deskPhone',
            'display_name': 'displayName',
            'email': 'email',
            'family_name': 'familyName',
            'full_address': 'fullAddress',
            'gaia_id': 'gaiaId',
            'given_name': 'givenName',
            'job_title': 'jobTitle',
            'manager': 'manager',
            'obfuscated_id': 'obfuscatedId',
            'photo_url': 'photoUrl',
            'street_address': 'streetAddress'
        }

        self._birthday = birthday
        self._cell_phone = cell_phone
        self._department = department
        self._desk_location = desk_location
        self._desk_phone = desk_phone
        self._display_name = display_name
        self._email = email
        self._family_name = family_name
        self._full_address = full_address
        self._gaia_id = gaia_id
        self._given_name = given_name
        self._job_title = job_title
        self._manager = manager
        self._obfuscated_id = obfuscated_id
        self._photo_url = photo_url
        self._street_address = street_address

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EnterpriseTopazSidekickCommonPerson':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EnterpriseTopazSidekickCommonPerson of this EnterpriseTopazSidekickCommonPerson.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def birthday(self):
        """Gets the birthday of this EnterpriseTopazSidekickCommonPerson.


        :return: The birthday of this EnterpriseTopazSidekickCommonPerson.
        :rtype: EnterpriseTopazSidekickCommonPersonBirthday
        """
        return self._birthday

    @birthday.setter
    def birthday(self, birthday):
        """Sets the birthday of this EnterpriseTopazSidekickCommonPerson.


        :param birthday: The birthday of this EnterpriseTopazSidekickCommonPerson.
        :type birthday: EnterpriseTopazSidekickCommonPersonBirthday
        """

        self._birthday = birthday

    @property
    def cell_phone(self):
        """Gets the cell_phone of this EnterpriseTopazSidekickCommonPerson.

        Cell phone number.

        :return: The cell_phone of this EnterpriseTopazSidekickCommonPerson.
        :rtype: str
        """
        return self._cell_phone

    @cell_phone.setter
    def cell_phone(self, cell_phone):
        """Sets the cell_phone of this EnterpriseTopazSidekickCommonPerson.

        Cell phone number.

        :param cell_phone: The cell_phone of this EnterpriseTopazSidekickCommonPerson.
        :type cell_phone: str
        """

        self._cell_phone = cell_phone

    @property
    def department(self):
        """Gets the department of this EnterpriseTopazSidekickCommonPerson.

        The department the person works in (e.g. Engineering).

        :return: The department of this EnterpriseTopazSidekickCommonPerson.
        :rtype: str
        """
        return self._department

    @department.setter
    def department(self, department):
        """Sets the department of this EnterpriseTopazSidekickCommonPerson.

        The department the person works in (e.g. Engineering).

        :param department: The department of this EnterpriseTopazSidekickCommonPerson.
        :type department: str
        """

        self._department = department

    @property
    def desk_location(self):
        """Gets the desk_location of this EnterpriseTopazSidekickCommonPerson.

        Desk location (e.g. US-MTV-PR55-5-5B1I).

        :return: The desk_location of this EnterpriseTopazSidekickCommonPerson.
        :rtype: str
        """
        return self._desk_location

    @desk_location.setter
    def desk_location(self, desk_location):
        """Sets the desk_location of this EnterpriseTopazSidekickCommonPerson.

        Desk location (e.g. US-MTV-PR55-5-5B1I).

        :param desk_location: The desk_location of this EnterpriseTopazSidekickCommonPerson.
        :type desk_location: str
        """

        self._desk_location = desk_location

    @property
    def desk_phone(self):
        """Gets the desk_phone of this EnterpriseTopazSidekickCommonPerson.

        Work desk phone number.

        :return: The desk_phone of this EnterpriseTopazSidekickCommonPerson.
        :rtype: str
        """
        return self._desk_phone

    @desk_phone.setter
    def desk_phone(self, desk_phone):
        """Sets the desk_phone of this EnterpriseTopazSidekickCommonPerson.

        Work desk phone number.

        :param desk_phone: The desk_phone of this EnterpriseTopazSidekickCommonPerson.
        :type desk_phone: str
        """

        self._desk_phone = desk_phone

    @property
    def display_name(self):
        """Gets the display_name of this EnterpriseTopazSidekickCommonPerson.

        The full name.

        :return: The display_name of this EnterpriseTopazSidekickCommonPerson.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this EnterpriseTopazSidekickCommonPerson.

        The full name.

        :param display_name: The display_name of this EnterpriseTopazSidekickCommonPerson.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def email(self):
        """Gets the email of this EnterpriseTopazSidekickCommonPerson.

        Email.

        :return: The email of this EnterpriseTopazSidekickCommonPerson.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this EnterpriseTopazSidekickCommonPerson.

        Email.

        :param email: The email of this EnterpriseTopazSidekickCommonPerson.
        :type email: str
        """

        self._email = email

    @property
    def family_name(self):
        """Gets the family_name of this EnterpriseTopazSidekickCommonPerson.

        The last name.

        :return: The family_name of this EnterpriseTopazSidekickCommonPerson.
        :rtype: str
        """
        return self._family_name

    @family_name.setter
    def family_name(self, family_name):
        """Sets the family_name of this EnterpriseTopazSidekickCommonPerson.

        The last name.

        :param family_name: The family_name of this EnterpriseTopazSidekickCommonPerson.
        :type family_name: str
        """

        self._family_name = family_name

    @property
    def full_address(self):
        """Gets the full_address of this EnterpriseTopazSidekickCommonPerson.

        The fully formatted address (e.g. 1255 Pear Avenue, Mountain View 94043, United States).

        :return: The full_address of this EnterpriseTopazSidekickCommonPerson.
        :rtype: str
        """
        return self._full_address

    @full_address.setter
    def full_address(self, full_address):
        """Sets the full_address of this EnterpriseTopazSidekickCommonPerson.

        The fully formatted address (e.g. 1255 Pear Avenue, Mountain View 94043, United States).

        :param full_address: The full_address of this EnterpriseTopazSidekickCommonPerson.
        :type full_address: str
        """

        self._full_address = full_address

    @property
    def gaia_id(self):
        """Gets the gaia_id of this EnterpriseTopazSidekickCommonPerson.

        This field is deprecated. The obfuscated_id should be used instead.

        :return: The gaia_id of this EnterpriseTopazSidekickCommonPerson.
        :rtype: str
        """
        return self._gaia_id

    @gaia_id.setter
    def gaia_id(self, gaia_id):
        """Sets the gaia_id of this EnterpriseTopazSidekickCommonPerson.

        This field is deprecated. The obfuscated_id should be used instead.

        :param gaia_id: The gaia_id of this EnterpriseTopazSidekickCommonPerson.
        :type gaia_id: str
        """

        self._gaia_id = gaia_id

    @property
    def given_name(self):
        """Gets the given_name of this EnterpriseTopazSidekickCommonPerson.

        The first name.

        :return: The given_name of this EnterpriseTopazSidekickCommonPerson.
        :rtype: str
        """
        return self._given_name

    @given_name.setter
    def given_name(self, given_name):
        """Sets the given_name of this EnterpriseTopazSidekickCommonPerson.

        The first name.

        :param given_name: The given_name of this EnterpriseTopazSidekickCommonPerson.
        :type given_name: str
        """

        self._given_name = given_name

    @property
    def job_title(self):
        """Gets the job_title of this EnterpriseTopazSidekickCommonPerson.

        The person's job title (e.g. Software Engineer).

        :return: The job_title of this EnterpriseTopazSidekickCommonPerson.
        :rtype: str
        """
        return self._job_title

    @job_title.setter
    def job_title(self, job_title):
        """Sets the job_title of this EnterpriseTopazSidekickCommonPerson.

        The person's job title (e.g. Software Engineer).

        :param job_title: The job_title of this EnterpriseTopazSidekickCommonPerson.
        :type job_title: str
        """

        self._job_title = job_title

    @property
    def manager(self):
        """Gets the manager of this EnterpriseTopazSidekickCommonPerson.


        :return: The manager of this EnterpriseTopazSidekickCommonPerson.
        :rtype: EnterpriseTopazSidekickCommonPerson
        """
        return self._manager

    @manager.setter
    def manager(self, manager):
        """Sets the manager of this EnterpriseTopazSidekickCommonPerson.


        :param manager: The manager of this EnterpriseTopazSidekickCommonPerson.
        :type manager: EnterpriseTopazSidekickCommonPerson
        """

        self._manager = manager

    @property
    def obfuscated_id(self):
        """Gets the obfuscated_id of this EnterpriseTopazSidekickCommonPerson.

        The obfuscated GAIA ID.

        :return: The obfuscated_id of this EnterpriseTopazSidekickCommonPerson.
        :rtype: str
        """
        return self._obfuscated_id

    @obfuscated_id.setter
    def obfuscated_id(self, obfuscated_id):
        """Sets the obfuscated_id of this EnterpriseTopazSidekickCommonPerson.

        The obfuscated GAIA ID.

        :param obfuscated_id: The obfuscated_id of this EnterpriseTopazSidekickCommonPerson.
        :type obfuscated_id: str
        """

        self._obfuscated_id = obfuscated_id

    @property
    def photo_url(self):
        """Gets the photo_url of this EnterpriseTopazSidekickCommonPerson.

        The URL for the Focus profile picture.

        :return: The photo_url of this EnterpriseTopazSidekickCommonPerson.
        :rtype: str
        """
        return self._photo_url

    @photo_url.setter
    def photo_url(self, photo_url):
        """Sets the photo_url of this EnterpriseTopazSidekickCommonPerson.

        The URL for the Focus profile picture.

        :param photo_url: The photo_url of this EnterpriseTopazSidekickCommonPerson.
        :type photo_url: str
        """

        self._photo_url = photo_url

    @property
    def street_address(self):
        """Gets the street_address of this EnterpriseTopazSidekickCommonPerson.

        The street address (e.g. 1255 Pear Avenue).

        :return: The street_address of this EnterpriseTopazSidekickCommonPerson.
        :rtype: str
        """
        return self._street_address

    @street_address.setter
    def street_address(self, street_address):
        """Sets the street_address of this EnterpriseTopazSidekickCommonPerson.

        The street address (e.g. 1255 Pear Avenue).

        :param street_address: The street_address of this EnterpriseTopazSidekickCommonPerson.
        :type street_address: str
        """

        self._street_address = street_address
