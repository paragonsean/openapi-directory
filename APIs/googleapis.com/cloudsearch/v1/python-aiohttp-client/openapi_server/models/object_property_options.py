# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.property_definition import PropertyDefinition
from openapi_server import util


class ObjectPropertyOptions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, subobject_properties: List[PropertyDefinition]=None):
        """ObjectPropertyOptions - a model defined in OpenAPI

        :param subobject_properties: The subobject_properties of this ObjectPropertyOptions.
        """
        self.openapi_types = {
            'subobject_properties': List[PropertyDefinition]
        }

        self.attribute_map = {
            'subobject_properties': 'subobjectProperties'
        }

        self._subobject_properties = subobject_properties

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ObjectPropertyOptions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ObjectPropertyOptions of this ObjectPropertyOptions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def subobject_properties(self):
        """Gets the subobject_properties of this ObjectPropertyOptions.

        The properties of the sub-object. These properties represent a nested object. For example, if this property represents a postal address, the subobjectProperties might be named *street*, *city*, and *state*. The maximum number of elements is 1000.

        :return: The subobject_properties of this ObjectPropertyOptions.
        :rtype: List[PropertyDefinition]
        """
        return self._subobject_properties

    @subobject_properties.setter
    def subobject_properties(self, subobject_properties):
        """Sets the subobject_properties of this ObjectPropertyOptions.

        The properties of the sub-object. These properties represent a nested object. For example, if this property represents a postal address, the subobjectProperties might be named *street*, *city*, and *state*. The maximum number of elements is 1000.

        :param subobject_properties: The subobject_properties of this ObjectPropertyOptions.
        :type subobject_properties: List[PropertyDefinition]
        """

        self._subobject_properties = subobject_properties
