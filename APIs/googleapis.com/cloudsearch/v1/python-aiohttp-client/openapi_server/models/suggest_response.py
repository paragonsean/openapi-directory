# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.suggest_result import SuggestResult
from openapi_server import util


class SuggestResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, suggest_results: List[SuggestResult]=None):
        """SuggestResponse - a model defined in OpenAPI

        :param suggest_results: The suggest_results of this SuggestResponse.
        """
        self.openapi_types = {
            'suggest_results': List[SuggestResult]
        }

        self.attribute_map = {
            'suggest_results': 'suggestResults'
        }

        self._suggest_results = suggest_results

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SuggestResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SuggestResponse of this SuggestResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def suggest_results(self):
        """Gets the suggest_results of this SuggestResponse.

        List of suggestions.

        :return: The suggest_results of this SuggestResponse.
        :rtype: List[SuggestResult]
        """
        return self._suggest_results

    @suggest_results.setter
    def suggest_results(self, suggest_results):
        """Sets the suggest_results of this SuggestResponse.

        List of suggestions.

        :param suggest_results: The suggest_results of this SuggestResponse.
        :type suggest_results: List[SuggestResult]
        """

        self._suggest_results = suggest_results
