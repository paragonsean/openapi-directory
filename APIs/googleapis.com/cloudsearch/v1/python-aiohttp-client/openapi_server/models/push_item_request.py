# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.debug_options import DebugOptions
from openapi_server.models.push_item import PushItem
from openapi_server import util


class PushItemRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, connector_name: str=None, debug_options: DebugOptions=None, item: PushItem=None):
        """PushItemRequest - a model defined in OpenAPI

        :param connector_name: The connector_name of this PushItemRequest.
        :param debug_options: The debug_options of this PushItemRequest.
        :param item: The item of this PushItemRequest.
        """
        self.openapi_types = {
            'connector_name': str,
            'debug_options': DebugOptions,
            'item': PushItem
        }

        self.attribute_map = {
            'connector_name': 'connectorName',
            'debug_options': 'debugOptions',
            'item': 'item'
        }

        self._connector_name = connector_name
        self._debug_options = debug_options
        self._item = item

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PushItemRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PushItemRequest of this PushItemRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def connector_name(self):
        """Gets the connector_name of this PushItemRequest.

        The name of connector making this call. Format: datasources/{source_id}/connectors/{ID}

        :return: The connector_name of this PushItemRequest.
        :rtype: str
        """
        return self._connector_name

    @connector_name.setter
    def connector_name(self, connector_name):
        """Sets the connector_name of this PushItemRequest.

        The name of connector making this call. Format: datasources/{source_id}/connectors/{ID}

        :param connector_name: The connector_name of this PushItemRequest.
        :type connector_name: str
        """

        self._connector_name = connector_name

    @property
    def debug_options(self):
        """Gets the debug_options of this PushItemRequest.


        :return: The debug_options of this PushItemRequest.
        :rtype: DebugOptions
        """
        return self._debug_options

    @debug_options.setter
    def debug_options(self, debug_options):
        """Sets the debug_options of this PushItemRequest.


        :param debug_options: The debug_options of this PushItemRequest.
        :type debug_options: DebugOptions
        """

        self._debug_options = debug_options

    @property
    def item(self):
        """Gets the item of this PushItemRequest.


        :return: The item of this PushItemRequest.
        :rtype: PushItem
        """
        return self._item

    @item.setter
    def item(self, item):
        """Sets the item of this PushItemRequest.


        :param item: The item of this PushItemRequest.
        :type item: PushItem
        """

        self._item = item
