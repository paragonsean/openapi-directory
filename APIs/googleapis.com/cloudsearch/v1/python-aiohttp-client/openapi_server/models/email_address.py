# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EmailAddress(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, custom_type: str=None, email_address: str=None, email_url: str=None, primary: bool=None, type: str=None):
        """EmailAddress - a model defined in OpenAPI

        :param custom_type: The custom_type of this EmailAddress.
        :param email_address: The email_address of this EmailAddress.
        :param email_url: The email_url of this EmailAddress.
        :param primary: The primary of this EmailAddress.
        :param type: The type of this EmailAddress.
        """
        self.openapi_types = {
            'custom_type': str,
            'email_address': str,
            'email_url': str,
            'primary': bool,
            'type': str
        }

        self.attribute_map = {
            'custom_type': 'customType',
            'email_address': 'emailAddress',
            'email_url': 'emailUrl',
            'primary': 'primary',
            'type': 'type'
        }

        self._custom_type = custom_type
        self._email_address = email_address
        self._email_url = email_url
        self._primary = primary
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EmailAddress':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EmailAddress of this EmailAddress.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def custom_type(self):
        """Gets the custom_type of this EmailAddress.

        If the value of type is custom, this property contains the custom type string.

        :return: The custom_type of this EmailAddress.
        :rtype: str
        """
        return self._custom_type

    @custom_type.setter
    def custom_type(self, custom_type):
        """Sets the custom_type of this EmailAddress.

        If the value of type is custom, this property contains the custom type string.

        :param custom_type: The custom_type of this EmailAddress.
        :type custom_type: str
        """

        self._custom_type = custom_type

    @property
    def email_address(self):
        """Gets the email_address of this EmailAddress.

        The email address.

        :return: The email_address of this EmailAddress.
        :rtype: str
        """
        return self._email_address

    @email_address.setter
    def email_address(self, email_address):
        """Sets the email_address of this EmailAddress.

        The email address.

        :param email_address: The email_address of this EmailAddress.
        :type email_address: str
        """

        self._email_address = email_address

    @property
    def email_url(self):
        """Gets the email_url of this EmailAddress.

        The URL to send email.

        :return: The email_url of this EmailAddress.
        :rtype: str
        """
        return self._email_url

    @email_url.setter
    def email_url(self, email_url):
        """Sets the email_url of this EmailAddress.

        The URL to send email.

        :param email_url: The email_url of this EmailAddress.
        :type email_url: str
        """

        self._email_url = email_url

    @property
    def primary(self):
        """Gets the primary of this EmailAddress.

        Indicates if this is the user's primary email. Only one entry can be marked as primary.

        :return: The primary of this EmailAddress.
        :rtype: bool
        """
        return self._primary

    @primary.setter
    def primary(self, primary):
        """Sets the primary of this EmailAddress.

        Indicates if this is the user's primary email. Only one entry can be marked as primary.

        :param primary: The primary of this EmailAddress.
        :type primary: bool
        """

        self._primary = primary

    @property
    def type(self):
        """Gets the type of this EmailAddress.

        The type of the email account. Acceptable values are: \"custom\", \"home\", \"other\", \"work\".

        :return: The type of this EmailAddress.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this EmailAddress.

        The type of the email account. Acceptable values are: \"custom\", \"home\", \"other\", \"work\".

        :param type: The type of this EmailAddress.
        :type type: str
        """

        self._type = type
