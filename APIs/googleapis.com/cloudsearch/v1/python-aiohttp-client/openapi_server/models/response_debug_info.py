# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ResponseDebugInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, formatted_debug_info: str=None):
        """ResponseDebugInfo - a model defined in OpenAPI

        :param formatted_debug_info: The formatted_debug_info of this ResponseDebugInfo.
        """
        self.openapi_types = {
            'formatted_debug_info': str
        }

        self.attribute_map = {
            'formatted_debug_info': 'formattedDebugInfo'
        }

        self._formatted_debug_info = formatted_debug_info

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ResponseDebugInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ResponseDebugInfo of this ResponseDebugInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def formatted_debug_info(self):
        """Gets the formatted_debug_info of this ResponseDebugInfo.

        General debug info formatted for display.

        :return: The formatted_debug_info of this ResponseDebugInfo.
        :rtype: str
        """
        return self._formatted_debug_info

    @formatted_debug_info.setter
    def formatted_debug_info(self, formatted_debug_info):
        """Sets the formatted_debug_info of this ResponseDebugInfo.

        General debug info formatted for display.

        :param formatted_debug_info: The formatted_debug_info of this ResponseDebugInfo.
        :type formatted_debug_info: str
        """

        self._formatted_debug_info = formatted_debug_info
