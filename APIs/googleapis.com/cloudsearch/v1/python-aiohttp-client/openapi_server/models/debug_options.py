# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DebugOptions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, enable_debugging: bool=None):
        """DebugOptions - a model defined in OpenAPI

        :param enable_debugging: The enable_debugging of this DebugOptions.
        """
        self.openapi_types = {
            'enable_debugging': bool
        }

        self.attribute_map = {
            'enable_debugging': 'enableDebugging'
        }

        self._enable_debugging = enable_debugging

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DebugOptions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DebugOptions of this DebugOptions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def enable_debugging(self):
        """Gets the enable_debugging of this DebugOptions.

        If you are asked by Google to help with debugging, set this field. Otherwise, ignore this field.

        :return: The enable_debugging of this DebugOptions.
        :rtype: bool
        """
        return self._enable_debugging

    @enable_debugging.setter
    def enable_debugging(self, enable_debugging):
        """Sets the enable_debugging of this DebugOptions.

        If you are asked by Google to help with debugging, set this field. Otherwise, ignore this field.

        :param enable_debugging: The enable_debugging of this DebugOptions.
        :type enable_debugging: bool
        """

        self._enable_debugging = enable_debugging
