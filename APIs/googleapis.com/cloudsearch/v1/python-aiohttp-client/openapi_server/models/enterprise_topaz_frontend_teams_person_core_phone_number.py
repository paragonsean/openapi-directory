# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.safe_url_proto import SafeUrlProto
from openapi_server import util


class EnterpriseTopazFrontendTeamsPersonCorePhoneNumber(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, phone_number: str=None, phone_url: SafeUrlProto=None, type: str=None):
        """EnterpriseTopazFrontendTeamsPersonCorePhoneNumber - a model defined in OpenAPI

        :param phone_number: The phone_number of this EnterpriseTopazFrontendTeamsPersonCorePhoneNumber.
        :param phone_url: The phone_url of this EnterpriseTopazFrontendTeamsPersonCorePhoneNumber.
        :param type: The type of this EnterpriseTopazFrontendTeamsPersonCorePhoneNumber.
        """
        self.openapi_types = {
            'phone_number': str,
            'phone_url': SafeUrlProto,
            'type': str
        }

        self.attribute_map = {
            'phone_number': 'phoneNumber',
            'phone_url': 'phoneUrl',
            'type': 'type'
        }

        self._phone_number = phone_number
        self._phone_url = phone_url
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EnterpriseTopazFrontendTeamsPersonCorePhoneNumber':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EnterpriseTopazFrontendTeamsPersonCorePhoneNumber of this EnterpriseTopazFrontendTeamsPersonCorePhoneNumber.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def phone_number(self):
        """Gets the phone_number of this EnterpriseTopazFrontendTeamsPersonCorePhoneNumber.

        Phone number in no particular format (as comes from the Focus profile).

        :return: The phone_number of this EnterpriseTopazFrontendTeamsPersonCorePhoneNumber.
        :rtype: str
        """
        return self._phone_number

    @phone_number.setter
    def phone_number(self, phone_number):
        """Sets the phone_number of this EnterpriseTopazFrontendTeamsPersonCorePhoneNumber.

        Phone number in no particular format (as comes from the Focus profile).

        :param phone_number: The phone_number of this EnterpriseTopazFrontendTeamsPersonCorePhoneNumber.
        :type phone_number: str
        """

        self._phone_number = phone_number

    @property
    def phone_url(self):
        """Gets the phone_url of this EnterpriseTopazFrontendTeamsPersonCorePhoneNumber.


        :return: The phone_url of this EnterpriseTopazFrontendTeamsPersonCorePhoneNumber.
        :rtype: SafeUrlProto
        """
        return self._phone_url

    @phone_url.setter
    def phone_url(self, phone_url):
        """Sets the phone_url of this EnterpriseTopazFrontendTeamsPersonCorePhoneNumber.


        :param phone_url: The phone_url of this EnterpriseTopazFrontendTeamsPersonCorePhoneNumber.
        :type phone_url: SafeUrlProto
        """

        self._phone_url = phone_url

    @property
    def type(self):
        """Gets the type of this EnterpriseTopazFrontendTeamsPersonCorePhoneNumber.


        :return: The type of this EnterpriseTopazFrontendTeamsPersonCorePhoneNumber.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this EnterpriseTopazFrontendTeamsPersonCorePhoneNumber.


        :param type: The type of this EnterpriseTopazFrontendTeamsPersonCorePhoneNumber.
        :type type: str
        """
        allowed_values = ["UNKNOWN", "MOBILE", "OFFICE", "OTHER"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type
