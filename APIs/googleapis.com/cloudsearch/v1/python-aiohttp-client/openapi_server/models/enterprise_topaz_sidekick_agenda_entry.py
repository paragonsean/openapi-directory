# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.enterprise_topaz_sidekick_common_document import EnterpriseTopazSidekickCommonDocument
from openapi_server.models.enterprise_topaz_sidekick_person import EnterpriseTopazSidekickPerson
from openapi_server import util


class EnterpriseTopazSidekickAgendaEntry(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, agenda_item_url: str=None, chronology: str=None, creator: EnterpriseTopazSidekickPerson=None, current_user_attending_status: str=None, description: str=None, document: List[EnterpriseTopazSidekickCommonDocument]=None, end_date: str=None, end_time: str=None, end_time_ms: str=None, event_id: str=None, guests_can_invite_others: bool=None, guests_can_modify: bool=None, guests_can_see_guests: bool=None, hangout_id: str=None, hangout_url: str=None, invitee: List[EnterpriseTopazSidekickPerson]=None, is_all_day: bool=None, last_modification_time_ms: str=None, location: str=None, notify_to_user: bool=None, other_attendees_excluded: bool=None, requester_is_owner: bool=None, show_full_event_details_to_use: bool=None, start_date: str=None, start_time: str=None, start_time_ms: str=None, time_zone: str=None, title: str=None):
        """EnterpriseTopazSidekickAgendaEntry - a model defined in OpenAPI

        :param agenda_item_url: The agenda_item_url of this EnterpriseTopazSidekickAgendaEntry.
        :param chronology: The chronology of this EnterpriseTopazSidekickAgendaEntry.
        :param creator: The creator of this EnterpriseTopazSidekickAgendaEntry.
        :param current_user_attending_status: The current_user_attending_status of this EnterpriseTopazSidekickAgendaEntry.
        :param description: The description of this EnterpriseTopazSidekickAgendaEntry.
        :param document: The document of this EnterpriseTopazSidekickAgendaEntry.
        :param end_date: The end_date of this EnterpriseTopazSidekickAgendaEntry.
        :param end_time: The end_time of this EnterpriseTopazSidekickAgendaEntry.
        :param end_time_ms: The end_time_ms of this EnterpriseTopazSidekickAgendaEntry.
        :param event_id: The event_id of this EnterpriseTopazSidekickAgendaEntry.
        :param guests_can_invite_others: The guests_can_invite_others of this EnterpriseTopazSidekickAgendaEntry.
        :param guests_can_modify: The guests_can_modify of this EnterpriseTopazSidekickAgendaEntry.
        :param guests_can_see_guests: The guests_can_see_guests of this EnterpriseTopazSidekickAgendaEntry.
        :param hangout_id: The hangout_id of this EnterpriseTopazSidekickAgendaEntry.
        :param hangout_url: The hangout_url of this EnterpriseTopazSidekickAgendaEntry.
        :param invitee: The invitee of this EnterpriseTopazSidekickAgendaEntry.
        :param is_all_day: The is_all_day of this EnterpriseTopazSidekickAgendaEntry.
        :param last_modification_time_ms: The last_modification_time_ms of this EnterpriseTopazSidekickAgendaEntry.
        :param location: The location of this EnterpriseTopazSidekickAgendaEntry.
        :param notify_to_user: The notify_to_user of this EnterpriseTopazSidekickAgendaEntry.
        :param other_attendees_excluded: The other_attendees_excluded of this EnterpriseTopazSidekickAgendaEntry.
        :param requester_is_owner: The requester_is_owner of this EnterpriseTopazSidekickAgendaEntry.
        :param show_full_event_details_to_use: The show_full_event_details_to_use of this EnterpriseTopazSidekickAgendaEntry.
        :param start_date: The start_date of this EnterpriseTopazSidekickAgendaEntry.
        :param start_time: The start_time of this EnterpriseTopazSidekickAgendaEntry.
        :param start_time_ms: The start_time_ms of this EnterpriseTopazSidekickAgendaEntry.
        :param time_zone: The time_zone of this EnterpriseTopazSidekickAgendaEntry.
        :param title: The title of this EnterpriseTopazSidekickAgendaEntry.
        """
        self.openapi_types = {
            'agenda_item_url': str,
            'chronology': str,
            'creator': EnterpriseTopazSidekickPerson,
            'current_user_attending_status': str,
            'description': str,
            'document': List[EnterpriseTopazSidekickCommonDocument],
            'end_date': str,
            'end_time': str,
            'end_time_ms': str,
            'event_id': str,
            'guests_can_invite_others': bool,
            'guests_can_modify': bool,
            'guests_can_see_guests': bool,
            'hangout_id': str,
            'hangout_url': str,
            'invitee': List[EnterpriseTopazSidekickPerson],
            'is_all_day': bool,
            'last_modification_time_ms': str,
            'location': str,
            'notify_to_user': bool,
            'other_attendees_excluded': bool,
            'requester_is_owner': bool,
            'show_full_event_details_to_use': bool,
            'start_date': str,
            'start_time': str,
            'start_time_ms': str,
            'time_zone': str,
            'title': str
        }

        self.attribute_map = {
            'agenda_item_url': 'agendaItemUrl',
            'chronology': 'chronology',
            'creator': 'creator',
            'current_user_attending_status': 'currentUserAttendingStatus',
            'description': 'description',
            'document': 'document',
            'end_date': 'endDate',
            'end_time': 'endTime',
            'end_time_ms': 'endTimeMs',
            'event_id': 'eventId',
            'guests_can_invite_others': 'guestsCanInviteOthers',
            'guests_can_modify': 'guestsCanModify',
            'guests_can_see_guests': 'guestsCanSeeGuests',
            'hangout_id': 'hangoutId',
            'hangout_url': 'hangoutUrl',
            'invitee': 'invitee',
            'is_all_day': 'isAllDay',
            'last_modification_time_ms': 'lastModificationTimeMs',
            'location': 'location',
            'notify_to_user': 'notifyToUser',
            'other_attendees_excluded': 'otherAttendeesExcluded',
            'requester_is_owner': 'requesterIsOwner',
            'show_full_event_details_to_use': 'showFullEventDetailsToUse',
            'start_date': 'startDate',
            'start_time': 'startTime',
            'start_time_ms': 'startTimeMs',
            'time_zone': 'timeZone',
            'title': 'title'
        }

        self._agenda_item_url = agenda_item_url
        self._chronology = chronology
        self._creator = creator
        self._current_user_attending_status = current_user_attending_status
        self._description = description
        self._document = document
        self._end_date = end_date
        self._end_time = end_time
        self._end_time_ms = end_time_ms
        self._event_id = event_id
        self._guests_can_invite_others = guests_can_invite_others
        self._guests_can_modify = guests_can_modify
        self._guests_can_see_guests = guests_can_see_guests
        self._hangout_id = hangout_id
        self._hangout_url = hangout_url
        self._invitee = invitee
        self._is_all_day = is_all_day
        self._last_modification_time_ms = last_modification_time_ms
        self._location = location
        self._notify_to_user = notify_to_user
        self._other_attendees_excluded = other_attendees_excluded
        self._requester_is_owner = requester_is_owner
        self._show_full_event_details_to_use = show_full_event_details_to_use
        self._start_date = start_date
        self._start_time = start_time
        self._start_time_ms = start_time_ms
        self._time_zone = time_zone
        self._title = title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EnterpriseTopazSidekickAgendaEntry':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EnterpriseTopazSidekickAgendaEntry of this EnterpriseTopazSidekickAgendaEntry.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def agenda_item_url(self):
        """Gets the agenda_item_url of this EnterpriseTopazSidekickAgendaEntry.

        URL of the agenda item.

        :return: The agenda_item_url of this EnterpriseTopazSidekickAgendaEntry.
        :rtype: str
        """
        return self._agenda_item_url

    @agenda_item_url.setter
    def agenda_item_url(self, agenda_item_url):
        """Sets the agenda_item_url of this EnterpriseTopazSidekickAgendaEntry.

        URL of the agenda item.

        :param agenda_item_url: The agenda_item_url of this EnterpriseTopazSidekickAgendaEntry.
        :type agenda_item_url: str
        """

        self._agenda_item_url = agenda_item_url

    @property
    def chronology(self):
        """Gets the chronology of this EnterpriseTopazSidekickAgendaEntry.

        The chronology from the present.

        :return: The chronology of this EnterpriseTopazSidekickAgendaEntry.
        :rtype: str
        """
        return self._chronology

    @chronology.setter
    def chronology(self, chronology):
        """Sets the chronology of this EnterpriseTopazSidekickAgendaEntry.

        The chronology from the present.

        :param chronology: The chronology of this EnterpriseTopazSidekickAgendaEntry.
        :type chronology: str
        """
        allowed_values = ["STALE", "ALL_DAY", "PAST", "RECENTLY_PAST", "PRESENT", "NEAR_FUTURE", "FUTURE"]  # noqa: E501
        if chronology not in allowed_values:
            raise ValueError(
                "Invalid value for `chronology` ({0}), must be one of {1}"
                .format(chronology, allowed_values)
            )

        self._chronology = chronology

    @property
    def creator(self):
        """Gets the creator of this EnterpriseTopazSidekickAgendaEntry.


        :return: The creator of this EnterpriseTopazSidekickAgendaEntry.
        :rtype: EnterpriseTopazSidekickPerson
        """
        return self._creator

    @creator.setter
    def creator(self, creator):
        """Sets the creator of this EnterpriseTopazSidekickAgendaEntry.


        :param creator: The creator of this EnterpriseTopazSidekickAgendaEntry.
        :type creator: EnterpriseTopazSidekickPerson
        """

        self._creator = creator

    @property
    def current_user_attending_status(self):
        """Gets the current_user_attending_status of this EnterpriseTopazSidekickAgendaEntry.

        Attendance status for the current user making the request. This is a convenience data member in order to avoid figuring out the same by iterating the invitee list above on the caller side.

        :return: The current_user_attending_status of this EnterpriseTopazSidekickAgendaEntry.
        :rtype: str
        """
        return self._current_user_attending_status

    @current_user_attending_status.setter
    def current_user_attending_status(self, current_user_attending_status):
        """Sets the current_user_attending_status of this EnterpriseTopazSidekickAgendaEntry.

        Attendance status for the current user making the request. This is a convenience data member in order to avoid figuring out the same by iterating the invitee list above on the caller side.

        :param current_user_attending_status: The current_user_attending_status of this EnterpriseTopazSidekickAgendaEntry.
        :type current_user_attending_status: str
        """
        allowed_values = ["AWAITING", "true", "false", "MAYBE"]  # noqa: E501
        if current_user_attending_status not in allowed_values:
            raise ValueError(
                "Invalid value for `current_user_attending_status` ({0}), must be one of {1}"
                .format(current_user_attending_status, allowed_values)
            )

        self._current_user_attending_status = current_user_attending_status

    @property
    def description(self):
        """Gets the description of this EnterpriseTopazSidekickAgendaEntry.

        Description of the agenda item (i.e., typically, summary in calendar event).

        :return: The description of this EnterpriseTopazSidekickAgendaEntry.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this EnterpriseTopazSidekickAgendaEntry.

        Description of the agenda item (i.e., typically, summary in calendar event).

        :param description: The description of this EnterpriseTopazSidekickAgendaEntry.
        :type description: str
        """

        self._description = description

    @property
    def document(self):
        """Gets the document of this EnterpriseTopazSidekickAgendaEntry.

        Items related to the current AgendaEntry. E.g., related drive/mail/groups documents.

        :return: The document of this EnterpriseTopazSidekickAgendaEntry.
        :rtype: List[EnterpriseTopazSidekickCommonDocument]
        """
        return self._document

    @document.setter
    def document(self, document):
        """Sets the document of this EnterpriseTopazSidekickAgendaEntry.

        Items related to the current AgendaEntry. E.g., related drive/mail/groups documents.

        :param document: The document of this EnterpriseTopazSidekickAgendaEntry.
        :type document: List[EnterpriseTopazSidekickCommonDocument]
        """

        self._document = document

    @property
    def end_date(self):
        """Gets the end_date of this EnterpriseTopazSidekickAgendaEntry.

        End date \"Friday, August 26\" in the user's timezone.

        :return: The end_date of this EnterpriseTopazSidekickAgendaEntry.
        :rtype: str
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date):
        """Sets the end_date of this EnterpriseTopazSidekickAgendaEntry.

        End date \"Friday, August 26\" in the user's timezone.

        :param end_date: The end_date of this EnterpriseTopazSidekickAgendaEntry.
        :type end_date: str
        """

        self._end_date = end_date

    @property
    def end_time(self):
        """Gets the end_time of this EnterpriseTopazSidekickAgendaEntry.

        End time (HH:mm) in the user's timezone.

        :return: The end_time of this EnterpriseTopazSidekickAgendaEntry.
        :rtype: str
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this EnterpriseTopazSidekickAgendaEntry.

        End time (HH:mm) in the user's timezone.

        :param end_time: The end_time of this EnterpriseTopazSidekickAgendaEntry.
        :type end_time: str
        """

        self._end_time = end_time

    @property
    def end_time_ms(self):
        """Gets the end_time_ms of this EnterpriseTopazSidekickAgendaEntry.

        End time in milliseconds

        :return: The end_time_ms of this EnterpriseTopazSidekickAgendaEntry.
        :rtype: str
        """
        return self._end_time_ms

    @end_time_ms.setter
    def end_time_ms(self, end_time_ms):
        """Sets the end_time_ms of this EnterpriseTopazSidekickAgendaEntry.

        End time in milliseconds

        :param end_time_ms: The end_time_ms of this EnterpriseTopazSidekickAgendaEntry.
        :type end_time_ms: str
        """

        self._end_time_ms = end_time_ms

    @property
    def event_id(self):
        """Gets the event_id of this EnterpriseTopazSidekickAgendaEntry.

        Event id provided by Calendar API.

        :return: The event_id of this EnterpriseTopazSidekickAgendaEntry.
        :rtype: str
        """
        return self._event_id

    @event_id.setter
    def event_id(self, event_id):
        """Sets the event_id of this EnterpriseTopazSidekickAgendaEntry.

        Event id provided by Calendar API.

        :param event_id: The event_id of this EnterpriseTopazSidekickAgendaEntry.
        :type event_id: str
        """

        self._event_id = event_id

    @property
    def guests_can_invite_others(self):
        """Gets the guests_can_invite_others of this EnterpriseTopazSidekickAgendaEntry.

        Whether the guests can invite other guests.

        :return: The guests_can_invite_others of this EnterpriseTopazSidekickAgendaEntry.
        :rtype: bool
        """
        return self._guests_can_invite_others

    @guests_can_invite_others.setter
    def guests_can_invite_others(self, guests_can_invite_others):
        """Sets the guests_can_invite_others of this EnterpriseTopazSidekickAgendaEntry.

        Whether the guests can invite other guests.

        :param guests_can_invite_others: The guests_can_invite_others of this EnterpriseTopazSidekickAgendaEntry.
        :type guests_can_invite_others: bool
        """

        self._guests_can_invite_others = guests_can_invite_others

    @property
    def guests_can_modify(self):
        """Gets the guests_can_modify of this EnterpriseTopazSidekickAgendaEntry.

        Whether the guests can modify the event.

        :return: The guests_can_modify of this EnterpriseTopazSidekickAgendaEntry.
        :rtype: bool
        """
        return self._guests_can_modify

    @guests_can_modify.setter
    def guests_can_modify(self, guests_can_modify):
        """Sets the guests_can_modify of this EnterpriseTopazSidekickAgendaEntry.

        Whether the guests can modify the event.

        :param guests_can_modify: The guests_can_modify of this EnterpriseTopazSidekickAgendaEntry.
        :type guests_can_modify: bool
        """

        self._guests_can_modify = guests_can_modify

    @property
    def guests_can_see_guests(self):
        """Gets the guests_can_see_guests of this EnterpriseTopazSidekickAgendaEntry.

        Whether the guests of the event can be seen. If false, the user is going to be reported as the only attendee to the meeting, even though there may be more attendees.

        :return: The guests_can_see_guests of this EnterpriseTopazSidekickAgendaEntry.
        :rtype: bool
        """
        return self._guests_can_see_guests

    @guests_can_see_guests.setter
    def guests_can_see_guests(self, guests_can_see_guests):
        """Sets the guests_can_see_guests of this EnterpriseTopazSidekickAgendaEntry.

        Whether the guests of the event can be seen. If false, the user is going to be reported as the only attendee to the meeting, even though there may be more attendees.

        :param guests_can_see_guests: The guests_can_see_guests of this EnterpriseTopazSidekickAgendaEntry.
        :type guests_can_see_guests: bool
        """

        self._guests_can_see_guests = guests_can_see_guests

    @property
    def hangout_id(self):
        """Gets the hangout_id of this EnterpriseTopazSidekickAgendaEntry.

        Hangout meeting identifier.

        :return: The hangout_id of this EnterpriseTopazSidekickAgendaEntry.
        :rtype: str
        """
        return self._hangout_id

    @hangout_id.setter
    def hangout_id(self, hangout_id):
        """Sets the hangout_id of this EnterpriseTopazSidekickAgendaEntry.

        Hangout meeting identifier.

        :param hangout_id: The hangout_id of this EnterpriseTopazSidekickAgendaEntry.
        :type hangout_id: str
        """

        self._hangout_id = hangout_id

    @property
    def hangout_url(self):
        """Gets the hangout_url of this EnterpriseTopazSidekickAgendaEntry.

        Absolute URL for the Hangout meeting.

        :return: The hangout_url of this EnterpriseTopazSidekickAgendaEntry.
        :rtype: str
        """
        return self._hangout_url

    @hangout_url.setter
    def hangout_url(self, hangout_url):
        """Sets the hangout_url of this EnterpriseTopazSidekickAgendaEntry.

        Absolute URL for the Hangout meeting.

        :param hangout_url: The hangout_url of this EnterpriseTopazSidekickAgendaEntry.
        :type hangout_url: str
        """

        self._hangout_url = hangout_url

    @property
    def invitee(self):
        """Gets the invitee of this EnterpriseTopazSidekickAgendaEntry.

        People attending the meeting.

        :return: The invitee of this EnterpriseTopazSidekickAgendaEntry.
        :rtype: List[EnterpriseTopazSidekickPerson]
        """
        return self._invitee

    @invitee.setter
    def invitee(self, invitee):
        """Sets the invitee of this EnterpriseTopazSidekickAgendaEntry.

        People attending the meeting.

        :param invitee: The invitee of this EnterpriseTopazSidekickAgendaEntry.
        :type invitee: List[EnterpriseTopazSidekickPerson]
        """

        self._invitee = invitee

    @property
    def is_all_day(self):
        """Gets the is_all_day of this EnterpriseTopazSidekickAgendaEntry.

        Whether the entry lasts all day.

        :return: The is_all_day of this EnterpriseTopazSidekickAgendaEntry.
        :rtype: bool
        """
        return self._is_all_day

    @is_all_day.setter
    def is_all_day(self, is_all_day):
        """Sets the is_all_day of this EnterpriseTopazSidekickAgendaEntry.

        Whether the entry lasts all day.

        :param is_all_day: The is_all_day of this EnterpriseTopazSidekickAgendaEntry.
        :type is_all_day: bool
        """

        self._is_all_day = is_all_day

    @property
    def last_modification_time_ms(self):
        """Gets the last_modification_time_ms of this EnterpriseTopazSidekickAgendaEntry.

        Last time the event was modified.

        :return: The last_modification_time_ms of this EnterpriseTopazSidekickAgendaEntry.
        :rtype: str
        """
        return self._last_modification_time_ms

    @last_modification_time_ms.setter
    def last_modification_time_ms(self, last_modification_time_ms):
        """Sets the last_modification_time_ms of this EnterpriseTopazSidekickAgendaEntry.

        Last time the event was modified.

        :param last_modification_time_ms: The last_modification_time_ms of this EnterpriseTopazSidekickAgendaEntry.
        :type last_modification_time_ms: str
        """

        self._last_modification_time_ms = last_modification_time_ms

    @property
    def location(self):
        """Gets the location of this EnterpriseTopazSidekickAgendaEntry.

        Agenda item location.

        :return: The location of this EnterpriseTopazSidekickAgendaEntry.
        :rtype: str
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this EnterpriseTopazSidekickAgendaEntry.

        Agenda item location.

        :param location: The location of this EnterpriseTopazSidekickAgendaEntry.
        :type location: str
        """

        self._location = location

    @property
    def notify_to_user(self):
        """Gets the notify_to_user of this EnterpriseTopazSidekickAgendaEntry.

        Whether this should be notified to the user.

        :return: The notify_to_user of this EnterpriseTopazSidekickAgendaEntry.
        :rtype: bool
        """
        return self._notify_to_user

    @notify_to_user.setter
    def notify_to_user(self, notify_to_user):
        """Sets the notify_to_user of this EnterpriseTopazSidekickAgendaEntry.

        Whether this should be notified to the user.

        :param notify_to_user: The notify_to_user of this EnterpriseTopazSidekickAgendaEntry.
        :type notify_to_user: bool
        """

        self._notify_to_user = notify_to_user

    @property
    def other_attendees_excluded(self):
        """Gets the other_attendees_excluded of this EnterpriseTopazSidekickAgendaEntry.

        Whether guest list is not returned because number of attendees is too large.

        :return: The other_attendees_excluded of this EnterpriseTopazSidekickAgendaEntry.
        :rtype: bool
        """
        return self._other_attendees_excluded

    @other_attendees_excluded.setter
    def other_attendees_excluded(self, other_attendees_excluded):
        """Sets the other_attendees_excluded of this EnterpriseTopazSidekickAgendaEntry.

        Whether guest list is not returned because number of attendees is too large.

        :param other_attendees_excluded: The other_attendees_excluded of this EnterpriseTopazSidekickAgendaEntry.
        :type other_attendees_excluded: bool
        """

        self._other_attendees_excluded = other_attendees_excluded

    @property
    def requester_is_owner(self):
        """Gets the requester_is_owner of this EnterpriseTopazSidekickAgendaEntry.

        Whether the requester is the owner of the agenda entry.

        :return: The requester_is_owner of this EnterpriseTopazSidekickAgendaEntry.
        :rtype: bool
        """
        return self._requester_is_owner

    @requester_is_owner.setter
    def requester_is_owner(self, requester_is_owner):
        """Sets the requester_is_owner of this EnterpriseTopazSidekickAgendaEntry.

        Whether the requester is the owner of the agenda entry.

        :param requester_is_owner: The requester_is_owner of this EnterpriseTopazSidekickAgendaEntry.
        :type requester_is_owner: bool
        """

        self._requester_is_owner = requester_is_owner

    @property
    def show_full_event_details_to_use(self):
        """Gets the show_full_event_details_to_use of this EnterpriseTopazSidekickAgendaEntry.

        Whether the details of this entry should be displayed to the user.

        :return: The show_full_event_details_to_use of this EnterpriseTopazSidekickAgendaEntry.
        :rtype: bool
        """
        return self._show_full_event_details_to_use

    @show_full_event_details_to_use.setter
    def show_full_event_details_to_use(self, show_full_event_details_to_use):
        """Sets the show_full_event_details_to_use of this EnterpriseTopazSidekickAgendaEntry.

        Whether the details of this entry should be displayed to the user.

        :param show_full_event_details_to_use: The show_full_event_details_to_use of this EnterpriseTopazSidekickAgendaEntry.
        :type show_full_event_details_to_use: bool
        """

        self._show_full_event_details_to_use = show_full_event_details_to_use

    @property
    def start_date(self):
        """Gets the start_date of this EnterpriseTopazSidekickAgendaEntry.

        Start date \"Friday, August 26\" in the user's timezone.

        :return: The start_date of this EnterpriseTopazSidekickAgendaEntry.
        :rtype: str
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """Sets the start_date of this EnterpriseTopazSidekickAgendaEntry.

        Start date \"Friday, August 26\" in the user's timezone.

        :param start_date: The start_date of this EnterpriseTopazSidekickAgendaEntry.
        :type start_date: str
        """

        self._start_date = start_date

    @property
    def start_time(self):
        """Gets the start_time of this EnterpriseTopazSidekickAgendaEntry.

        Start time (HH:mm) in the user's timezone.

        :return: The start_time of this EnterpriseTopazSidekickAgendaEntry.
        :rtype: str
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this EnterpriseTopazSidekickAgendaEntry.

        Start time (HH:mm) in the user's timezone.

        :param start_time: The start_time of this EnterpriseTopazSidekickAgendaEntry.
        :type start_time: str
        """

        self._start_time = start_time

    @property
    def start_time_ms(self):
        """Gets the start_time_ms of this EnterpriseTopazSidekickAgendaEntry.

        Start time in milliseconds.

        :return: The start_time_ms of this EnterpriseTopazSidekickAgendaEntry.
        :rtype: str
        """
        return self._start_time_ms

    @start_time_ms.setter
    def start_time_ms(self, start_time_ms):
        """Sets the start_time_ms of this EnterpriseTopazSidekickAgendaEntry.

        Start time in milliseconds.

        :param start_time_ms: The start_time_ms of this EnterpriseTopazSidekickAgendaEntry.
        :type start_time_ms: str
        """

        self._start_time_ms = start_time_ms

    @property
    def time_zone(self):
        """Gets the time_zone of this EnterpriseTopazSidekickAgendaEntry.

        User's calendar timezone;

        :return: The time_zone of this EnterpriseTopazSidekickAgendaEntry.
        :rtype: str
        """
        return self._time_zone

    @time_zone.setter
    def time_zone(self, time_zone):
        """Sets the time_zone of this EnterpriseTopazSidekickAgendaEntry.

        User's calendar timezone;

        :param time_zone: The time_zone of this EnterpriseTopazSidekickAgendaEntry.
        :type time_zone: str
        """

        self._time_zone = time_zone

    @property
    def title(self):
        """Gets the title of this EnterpriseTopazSidekickAgendaEntry.

        Title of the agenda item.

        :return: The title of this EnterpriseTopazSidekickAgendaEntry.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this EnterpriseTopazSidekickAgendaEntry.

        Title of the agenda item.

        :param title: The title of this EnterpriseTopazSidekickAgendaEntry.
        :type title: str
        """

        self._title = title
