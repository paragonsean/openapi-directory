# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.enterprise_topaz_sidekick_common_person import EnterpriseTopazSidekickCommonPerson
from openapi_server.models.enterprise_topaz_sidekick_person_profile_card_related_people import EnterpriseTopazSidekickPersonProfileCardRelatedPeople
from openapi_server import util


class EnterpriseTopazSidekickPersonProfileCard(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, related_people: List[EnterpriseTopazSidekickPersonProfileCardRelatedPeople]=None, subject: EnterpriseTopazSidekickCommonPerson=None):
        """EnterpriseTopazSidekickPersonProfileCard - a model defined in OpenAPI

        :param related_people: The related_people of this EnterpriseTopazSidekickPersonProfileCard.
        :param subject: The subject of this EnterpriseTopazSidekickPersonProfileCard.
        """
        self.openapi_types = {
            'related_people': List[EnterpriseTopazSidekickPersonProfileCardRelatedPeople],
            'subject': EnterpriseTopazSidekickCommonPerson
        }

        self.attribute_map = {
            'related_people': 'relatedPeople',
            'subject': 'subject'
        }

        self._related_people = related_people
        self._subject = subject

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EnterpriseTopazSidekickPersonProfileCard':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EnterpriseTopazSidekickPersonProfileCard of this EnterpriseTopazSidekickPersonProfileCard.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def related_people(self):
        """Gets the related_people of this EnterpriseTopazSidekickPersonProfileCard.


        :return: The related_people of this EnterpriseTopazSidekickPersonProfileCard.
        :rtype: List[EnterpriseTopazSidekickPersonProfileCardRelatedPeople]
        """
        return self._related_people

    @related_people.setter
    def related_people(self, related_people):
        """Sets the related_people of this EnterpriseTopazSidekickPersonProfileCard.


        :param related_people: The related_people of this EnterpriseTopazSidekickPersonProfileCard.
        :type related_people: List[EnterpriseTopazSidekickPersonProfileCardRelatedPeople]
        """

        self._related_people = related_people

    @property
    def subject(self):
        """Gets the subject of this EnterpriseTopazSidekickPersonProfileCard.


        :return: The subject of this EnterpriseTopazSidekickPersonProfileCard.
        :rtype: EnterpriseTopazSidekickCommonPerson
        """
        return self._subject

    @subject.setter
    def subject(self, subject):
        """Sets the subject of this EnterpriseTopazSidekickPersonProfileCard.


        :param subject: The subject of this EnterpriseTopazSidekickPersonProfileCard.
        :type subject: EnterpriseTopazSidekickCommonPerson
        """

        self._subject = subject
