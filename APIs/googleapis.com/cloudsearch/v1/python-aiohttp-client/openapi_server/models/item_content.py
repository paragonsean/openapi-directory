# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.upload_item_ref import UploadItemRef
from openapi_server import util


class ItemContent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, content_data_ref: UploadItemRef=None, content_format: str=None, hash: str=None, inline_content: str=None):
        """ItemContent - a model defined in OpenAPI

        :param content_data_ref: The content_data_ref of this ItemContent.
        :param content_format: The content_format of this ItemContent.
        :param hash: The hash of this ItemContent.
        :param inline_content: The inline_content of this ItemContent.
        """
        self.openapi_types = {
            'content_data_ref': UploadItemRef,
            'content_format': str,
            'hash': str,
            'inline_content': str
        }

        self.attribute_map = {
            'content_data_ref': 'contentDataRef',
            'content_format': 'contentFormat',
            'hash': 'hash',
            'inline_content': 'inlineContent'
        }

        self._content_data_ref = content_data_ref
        self._content_format = content_format
        self._hash = hash
        self._inline_content = inline_content

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ItemContent':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ItemContent of this ItemContent.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def content_data_ref(self):
        """Gets the content_data_ref of this ItemContent.


        :return: The content_data_ref of this ItemContent.
        :rtype: UploadItemRef
        """
        return self._content_data_ref

    @content_data_ref.setter
    def content_data_ref(self, content_data_ref):
        """Sets the content_data_ref of this ItemContent.


        :param content_data_ref: The content_data_ref of this ItemContent.
        :type content_data_ref: UploadItemRef
        """

        self._content_data_ref = content_data_ref

    @property
    def content_format(self):
        """Gets the content_format of this ItemContent.


        :return: The content_format of this ItemContent.
        :rtype: str
        """
        return self._content_format

    @content_format.setter
    def content_format(self, content_format):
        """Sets the content_format of this ItemContent.


        :param content_format: The content_format of this ItemContent.
        :type content_format: str
        """
        allowed_values = ["UNSPECIFIED", "HTML", "TEXT", "RAW"]  # noqa: E501
        if content_format not in allowed_values:
            raise ValueError(
                "Invalid value for `content_format` ({0}), must be one of {1}"
                .format(content_format, allowed_values)
            )

        self._content_format = content_format

    @property
    def hash(self):
        """Gets the hash of this ItemContent.

        Hashing info calculated and provided by the API client for content. Can be used with the items.push method to calculate modified state. The maximum length is 2048 characters.

        :return: The hash of this ItemContent.
        :rtype: str
        """
        return self._hash

    @hash.setter
    def hash(self, hash):
        """Sets the hash of this ItemContent.

        Hashing info calculated and provided by the API client for content. Can be used with the items.push method to calculate modified state. The maximum length is 2048 characters.

        :param hash: The hash of this ItemContent.
        :type hash: str
        """

        self._hash = hash

    @property
    def inline_content(self):
        """Gets the inline_content of this ItemContent.

        Content that is supplied inlined within the update method. The maximum length is 102400 bytes (100 KiB).

        :return: The inline_content of this ItemContent.
        :rtype: str
        """
        return self._inline_content

    @inline_content.setter
    def inline_content(self, inline_content):
        """Sets the inline_content of this ItemContent.

        Content that is supplied inlined within the update method. The maximum length is 102400 bytes (100 KiB).

        :param inline_content: The inline_content of this ItemContent.
        :type inline_content: str
        """

        self._inline_content = inline_content
