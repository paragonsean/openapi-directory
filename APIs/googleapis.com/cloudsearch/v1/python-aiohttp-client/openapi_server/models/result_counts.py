# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.source_result_count import SourceResultCount
from openapi_server import util


class ResultCounts(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, source_result_counts: List[SourceResultCount]=None):
        """ResultCounts - a model defined in OpenAPI

        :param source_result_counts: The source_result_counts of this ResultCounts.
        """
        self.openapi_types = {
            'source_result_counts': List[SourceResultCount]
        }

        self.attribute_map = {
            'source_result_counts': 'sourceResultCounts'
        }

        self._source_result_counts = source_result_counts

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ResultCounts':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ResultCounts of this ResultCounts.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def source_result_counts(self):
        """Gets the source_result_counts of this ResultCounts.

        Result count information for each source with results.

        :return: The source_result_counts of this ResultCounts.
        :rtype: List[SourceResultCount]
        """
        return self._source_result_counts

    @source_result_counts.setter
    def source_result_counts(self, source_result_counts):
        """Sets the source_result_counts of this ResultCounts.

        Result count information for each source with results.

        :param source_result_counts: The source_result_counts of this ResultCounts.
        :type source_result_counts: List[SourceResultCount]
        """

        self._source_result_counts = source_result_counts
