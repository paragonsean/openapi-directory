# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.enterprise_topaz_sidekick_person import EnterpriseTopazSidekickPerson
from openapi_server.models.enterprise_topaz_sidekick_scheduled_meeting import EnterpriseTopazSidekickScheduledMeeting
from openapi_server.models.enterprise_topaz_sidekick_time_slot import EnterpriseTopazSidekickTimeSlot
from openapi_server import util


class EnterpriseTopazSidekickFindMeetingTimeCardProto(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, common_available_time_slots: List[EnterpriseTopazSidekickTimeSlot]=None, invitees: List[EnterpriseTopazSidekickPerson]=None, requester: EnterpriseTopazSidekickPerson=None, scheduled_meeting: EnterpriseTopazSidekickScheduledMeeting=None, skipped_invitees: List[EnterpriseTopazSidekickPerson]=None, time_boundaries: EnterpriseTopazSidekickTimeSlot=None, timezone_id: str=None):
        """EnterpriseTopazSidekickFindMeetingTimeCardProto - a model defined in OpenAPI

        :param common_available_time_slots: The common_available_time_slots of this EnterpriseTopazSidekickFindMeetingTimeCardProto.
        :param invitees: The invitees of this EnterpriseTopazSidekickFindMeetingTimeCardProto.
        :param requester: The requester of this EnterpriseTopazSidekickFindMeetingTimeCardProto.
        :param scheduled_meeting: The scheduled_meeting of this EnterpriseTopazSidekickFindMeetingTimeCardProto.
        :param skipped_invitees: The skipped_invitees of this EnterpriseTopazSidekickFindMeetingTimeCardProto.
        :param time_boundaries: The time_boundaries of this EnterpriseTopazSidekickFindMeetingTimeCardProto.
        :param timezone_id: The timezone_id of this EnterpriseTopazSidekickFindMeetingTimeCardProto.
        """
        self.openapi_types = {
            'common_available_time_slots': List[EnterpriseTopazSidekickTimeSlot],
            'invitees': List[EnterpriseTopazSidekickPerson],
            'requester': EnterpriseTopazSidekickPerson,
            'scheduled_meeting': EnterpriseTopazSidekickScheduledMeeting,
            'skipped_invitees': List[EnterpriseTopazSidekickPerson],
            'time_boundaries': EnterpriseTopazSidekickTimeSlot,
            'timezone_id': str
        }

        self.attribute_map = {
            'common_available_time_slots': 'commonAvailableTimeSlots',
            'invitees': 'invitees',
            'requester': 'requester',
            'scheduled_meeting': 'scheduledMeeting',
            'skipped_invitees': 'skippedInvitees',
            'time_boundaries': 'timeBoundaries',
            'timezone_id': 'timezoneId'
        }

        self._common_available_time_slots = common_available_time_slots
        self._invitees = invitees
        self._requester = requester
        self._scheduled_meeting = scheduled_meeting
        self._skipped_invitees = skipped_invitees
        self._time_boundaries = time_boundaries
        self._timezone_id = timezone_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EnterpriseTopazSidekickFindMeetingTimeCardProto':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EnterpriseTopazSidekickFindMeetingTimeCardProto of this EnterpriseTopazSidekickFindMeetingTimeCardProto.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def common_available_time_slots(self):
        """Gets the common_available_time_slots of this EnterpriseTopazSidekickFindMeetingTimeCardProto.

        Slots when all attendees have availability.

        :return: The common_available_time_slots of this EnterpriseTopazSidekickFindMeetingTimeCardProto.
        :rtype: List[EnterpriseTopazSidekickTimeSlot]
        """
        return self._common_available_time_slots

    @common_available_time_slots.setter
    def common_available_time_slots(self, common_available_time_slots):
        """Sets the common_available_time_slots of this EnterpriseTopazSidekickFindMeetingTimeCardProto.

        Slots when all attendees have availability.

        :param common_available_time_slots: The common_available_time_slots of this EnterpriseTopazSidekickFindMeetingTimeCardProto.
        :type common_available_time_slots: List[EnterpriseTopazSidekickTimeSlot]
        """

        self._common_available_time_slots = common_available_time_slots

    @property
    def invitees(self):
        """Gets the invitees of this EnterpriseTopazSidekickFindMeetingTimeCardProto.

        Invitees to the event.

        :return: The invitees of this EnterpriseTopazSidekickFindMeetingTimeCardProto.
        :rtype: List[EnterpriseTopazSidekickPerson]
        """
        return self._invitees

    @invitees.setter
    def invitees(self, invitees):
        """Sets the invitees of this EnterpriseTopazSidekickFindMeetingTimeCardProto.

        Invitees to the event.

        :param invitees: The invitees of this EnterpriseTopazSidekickFindMeetingTimeCardProto.
        :type invitees: List[EnterpriseTopazSidekickPerson]
        """

        self._invitees = invitees

    @property
    def requester(self):
        """Gets the requester of this EnterpriseTopazSidekickFindMeetingTimeCardProto.


        :return: The requester of this EnterpriseTopazSidekickFindMeetingTimeCardProto.
        :rtype: EnterpriseTopazSidekickPerson
        """
        return self._requester

    @requester.setter
    def requester(self, requester):
        """Sets the requester of this EnterpriseTopazSidekickFindMeetingTimeCardProto.


        :param requester: The requester of this EnterpriseTopazSidekickFindMeetingTimeCardProto.
        :type requester: EnterpriseTopazSidekickPerson
        """

        self._requester = requester

    @property
    def scheduled_meeting(self):
        """Gets the scheduled_meeting of this EnterpriseTopazSidekickFindMeetingTimeCardProto.


        :return: The scheduled_meeting of this EnterpriseTopazSidekickFindMeetingTimeCardProto.
        :rtype: EnterpriseTopazSidekickScheduledMeeting
        """
        return self._scheduled_meeting

    @scheduled_meeting.setter
    def scheduled_meeting(self, scheduled_meeting):
        """Sets the scheduled_meeting of this EnterpriseTopazSidekickFindMeetingTimeCardProto.


        :param scheduled_meeting: The scheduled_meeting of this EnterpriseTopazSidekickFindMeetingTimeCardProto.
        :type scheduled_meeting: EnterpriseTopazSidekickScheduledMeeting
        """

        self._scheduled_meeting = scheduled_meeting

    @property
    def skipped_invitees(self):
        """Gets the skipped_invitees of this EnterpriseTopazSidekickFindMeetingTimeCardProto.

        Invitees that have been skipped in the computation, most likely because they are groups.

        :return: The skipped_invitees of this EnterpriseTopazSidekickFindMeetingTimeCardProto.
        :rtype: List[EnterpriseTopazSidekickPerson]
        """
        return self._skipped_invitees

    @skipped_invitees.setter
    def skipped_invitees(self, skipped_invitees):
        """Sets the skipped_invitees of this EnterpriseTopazSidekickFindMeetingTimeCardProto.

        Invitees that have been skipped in the computation, most likely because they are groups.

        :param skipped_invitees: The skipped_invitees of this EnterpriseTopazSidekickFindMeetingTimeCardProto.
        :type skipped_invitees: List[EnterpriseTopazSidekickPerson]
        """

        self._skipped_invitees = skipped_invitees

    @property
    def time_boundaries(self):
        """Gets the time_boundaries of this EnterpriseTopazSidekickFindMeetingTimeCardProto.


        :return: The time_boundaries of this EnterpriseTopazSidekickFindMeetingTimeCardProto.
        :rtype: EnterpriseTopazSidekickTimeSlot
        """
        return self._time_boundaries

    @time_boundaries.setter
    def time_boundaries(self, time_boundaries):
        """Sets the time_boundaries of this EnterpriseTopazSidekickFindMeetingTimeCardProto.


        :param time_boundaries: The time_boundaries of this EnterpriseTopazSidekickFindMeetingTimeCardProto.
        :type time_boundaries: EnterpriseTopazSidekickTimeSlot
        """

        self._time_boundaries = time_boundaries

    @property
    def timezone_id(self):
        """Gets the timezone_id of this EnterpriseTopazSidekickFindMeetingTimeCardProto.

        Timezone ID.

        :return: The timezone_id of this EnterpriseTopazSidekickFindMeetingTimeCardProto.
        :rtype: str
        """
        return self._timezone_id

    @timezone_id.setter
    def timezone_id(self, timezone_id):
        """Sets the timezone_id of this EnterpriseTopazSidekickFindMeetingTimeCardProto.

        Timezone ID.

        :param timezone_id: The timezone_id of this EnterpriseTopazSidekickFindMeetingTimeCardProto.
        :type timezone_id: str
        """

        self._timezone_id = timezone_id
