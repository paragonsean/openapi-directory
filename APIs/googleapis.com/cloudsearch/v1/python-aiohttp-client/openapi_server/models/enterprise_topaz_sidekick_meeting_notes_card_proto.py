# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.enterprise_topaz_sidekick_agenda_entry import EnterpriseTopazSidekickAgendaEntry
from openapi_server import util


class EnterpriseTopazSidekickMeetingNotesCardProto(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, event: EnterpriseTopazSidekickAgendaEntry=None, file_id: str=None, title: str=None, url: str=None):
        """EnterpriseTopazSidekickMeetingNotesCardProto - a model defined in OpenAPI

        :param event: The event of this EnterpriseTopazSidekickMeetingNotesCardProto.
        :param file_id: The file_id of this EnterpriseTopazSidekickMeetingNotesCardProto.
        :param title: The title of this EnterpriseTopazSidekickMeetingNotesCardProto.
        :param url: The url of this EnterpriseTopazSidekickMeetingNotesCardProto.
        """
        self.openapi_types = {
            'event': EnterpriseTopazSidekickAgendaEntry,
            'file_id': str,
            'title': str,
            'url': str
        }

        self.attribute_map = {
            'event': 'event',
            'file_id': 'fileId',
            'title': 'title',
            'url': 'url'
        }

        self._event = event
        self._file_id = file_id
        self._title = title
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EnterpriseTopazSidekickMeetingNotesCardProto':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EnterpriseTopazSidekickMeetingNotesCardProto of this EnterpriseTopazSidekickMeetingNotesCardProto.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def event(self):
        """Gets the event of this EnterpriseTopazSidekickMeetingNotesCardProto.


        :return: The event of this EnterpriseTopazSidekickMeetingNotesCardProto.
        :rtype: EnterpriseTopazSidekickAgendaEntry
        """
        return self._event

    @event.setter
    def event(self, event):
        """Sets the event of this EnterpriseTopazSidekickMeetingNotesCardProto.


        :param event: The event of this EnterpriseTopazSidekickMeetingNotesCardProto.
        :type event: EnterpriseTopazSidekickAgendaEntry
        """

        self._event = event

    @property
    def file_id(self):
        """Gets the file_id of this EnterpriseTopazSidekickMeetingNotesCardProto.

        Google Drive ID (a.k.a. resource ID) of the file.

        :return: The file_id of this EnterpriseTopazSidekickMeetingNotesCardProto.
        :rtype: str
        """
        return self._file_id

    @file_id.setter
    def file_id(self, file_id):
        """Sets the file_id of this EnterpriseTopazSidekickMeetingNotesCardProto.

        Google Drive ID (a.k.a. resource ID) of the file.

        :param file_id: The file_id of this EnterpriseTopazSidekickMeetingNotesCardProto.
        :type file_id: str
        """

        self._file_id = file_id

    @property
    def title(self):
        """Gets the title of this EnterpriseTopazSidekickMeetingNotesCardProto.

        Title we want to show for meeting notes in the answer card

        :return: The title of this EnterpriseTopazSidekickMeetingNotesCardProto.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this EnterpriseTopazSidekickMeetingNotesCardProto.

        Title we want to show for meeting notes in the answer card

        :param title: The title of this EnterpriseTopazSidekickMeetingNotesCardProto.
        :type title: str
        """

        self._title = title

    @property
    def url(self):
        """Gets the url of this EnterpriseTopazSidekickMeetingNotesCardProto.

        New URL.

        :return: The url of this EnterpriseTopazSidekickMeetingNotesCardProto.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this EnterpriseTopazSidekickMeetingNotesCardProto.

        New URL.

        :param url: The url of this EnterpriseTopazSidekickMeetingNotesCardProto.
        :type url: str
        """

        self._url = url
