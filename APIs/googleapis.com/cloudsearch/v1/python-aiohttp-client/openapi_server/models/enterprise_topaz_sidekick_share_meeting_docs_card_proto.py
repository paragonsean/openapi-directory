# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.enterprise_topaz_sidekick_agenda_entry import EnterpriseTopazSidekickAgendaEntry
from openapi_server.models.enterprise_topaz_sidekick_common_document import EnterpriseTopazSidekickCommonDocument
from openapi_server import util


class EnterpriseTopazSidekickShareMeetingDocsCardProto(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, document: List[EnterpriseTopazSidekickCommonDocument]=None, event: EnterpriseTopazSidekickAgendaEntry=None):
        """EnterpriseTopazSidekickShareMeetingDocsCardProto - a model defined in OpenAPI

        :param document: The document of this EnterpriseTopazSidekickShareMeetingDocsCardProto.
        :param event: The event of this EnterpriseTopazSidekickShareMeetingDocsCardProto.
        """
        self.openapi_types = {
            'document': List[EnterpriseTopazSidekickCommonDocument],
            'event': EnterpriseTopazSidekickAgendaEntry
        }

        self.attribute_map = {
            'document': 'document',
            'event': 'event'
        }

        self._document = document
        self._event = event

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EnterpriseTopazSidekickShareMeetingDocsCardProto':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EnterpriseTopazSidekickShareMeetingDocsCardProto of this EnterpriseTopazSidekickShareMeetingDocsCardProto.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def document(self):
        """Gets the document of this EnterpriseTopazSidekickShareMeetingDocsCardProto.

        Documents to share for the given meeting.

        :return: The document of this EnterpriseTopazSidekickShareMeetingDocsCardProto.
        :rtype: List[EnterpriseTopazSidekickCommonDocument]
        """
        return self._document

    @document.setter
    def document(self, document):
        """Sets the document of this EnterpriseTopazSidekickShareMeetingDocsCardProto.

        Documents to share for the given meeting.

        :param document: The document of this EnterpriseTopazSidekickShareMeetingDocsCardProto.
        :type document: List[EnterpriseTopazSidekickCommonDocument]
        """

        self._document = document

    @property
    def event(self):
        """Gets the event of this EnterpriseTopazSidekickShareMeetingDocsCardProto.


        :return: The event of this EnterpriseTopazSidekickShareMeetingDocsCardProto.
        :rtype: EnterpriseTopazSidekickAgendaEntry
        """
        return self._event

    @event.setter
    def event(self, event):
        """Sets the event of this EnterpriseTopazSidekickShareMeetingDocsCardProto.


        :param event: The event of this EnterpriseTopazSidekickShareMeetingDocsCardProto.
        :type event: EnterpriseTopazSidekickAgendaEntry
        """

        self._event = event
