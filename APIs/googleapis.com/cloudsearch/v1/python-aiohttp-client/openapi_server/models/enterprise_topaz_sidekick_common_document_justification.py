# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EnterpriseTopazSidekickCommonDocumentJustification(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, justification: str=None, reason: str=None):
        """EnterpriseTopazSidekickCommonDocumentJustification - a model defined in OpenAPI

        :param justification: The justification of this EnterpriseTopazSidekickCommonDocumentJustification.
        :param reason: The reason of this EnterpriseTopazSidekickCommonDocumentJustification.
        """
        self.openapi_types = {
            'justification': str,
            'reason': str
        }

        self.attribute_map = {
            'justification': 'justification',
            'reason': 'reason'
        }

        self._justification = justification
        self._reason = reason

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EnterpriseTopazSidekickCommonDocumentJustification':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EnterpriseTopazSidekickCommonDocumentJustification of this EnterpriseTopazSidekickCommonDocumentJustification.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def justification(self):
        """Gets the justification of this EnterpriseTopazSidekickCommonDocumentJustification.

        A locale aware message that explains why this document was selected.

        :return: The justification of this EnterpriseTopazSidekickCommonDocumentJustification.
        :rtype: str
        """
        return self._justification

    @justification.setter
    def justification(self, justification):
        """Sets the justification of this EnterpriseTopazSidekickCommonDocumentJustification.

        A locale aware message that explains why this document was selected.

        :param justification: The justification of this EnterpriseTopazSidekickCommonDocumentJustification.
        :type justification: str
        """

        self._justification = justification

    @property
    def reason(self):
        """Gets the reason of this EnterpriseTopazSidekickCommonDocumentJustification.

        Reason on why the document is selected. Populate for trending documents.

        :return: The reason of this EnterpriseTopazSidekickCommonDocumentJustification.
        :rtype: str
        """
        return self._reason

    @reason.setter
    def reason(self, reason):
        """Sets the reason of this EnterpriseTopazSidekickCommonDocumentJustification.

        Reason on why the document is selected. Populate for trending documents.

        :param reason: The reason of this EnterpriseTopazSidekickCommonDocumentJustification.
        :type reason: str
        """
        allowed_values = ["UNKNOWN", "TRENDING_IN_COLLABORATORS", "TRENDING_IN_DOMAIN", "FREQUENTLY_VIEWED", "FREQUENTLY_EDITED", "NEW_UPDATES", "NEW_COMMENTS", "EVENT_DESCRIPTION", "EVENT_ATTACHMENT", "EVENT_METADATA_ATTACHMENT", "MINED_DOCUMENT", "NEW_MENTIONS", "NEW_SHARES"]  # noqa: E501
        if reason not in allowed_values:
            raise ValueError(
                "Invalid value for `reason` ({0}), must be one of {1}"
                .format(reason, allowed_values)
            )

        self._reason = reason
