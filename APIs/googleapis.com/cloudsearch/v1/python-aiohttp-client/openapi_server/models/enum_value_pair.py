# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EnumValuePair(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, integer_value: int=None, string_value: str=None):
        """EnumValuePair - a model defined in OpenAPI

        :param integer_value: The integer_value of this EnumValuePair.
        :param string_value: The string_value of this EnumValuePair.
        """
        self.openapi_types = {
            'integer_value': int,
            'string_value': str
        }

        self.attribute_map = {
            'integer_value': 'integerValue',
            'string_value': 'stringValue'
        }

        self._integer_value = integer_value
        self._string_value = string_value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EnumValuePair':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EnumValuePair of this EnumValuePair.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def integer_value(self):
        """Gets the integer_value of this EnumValuePair.

        The integer value of the EnumValuePair which must be non-negative. Optional.

        :return: The integer_value of this EnumValuePair.
        :rtype: int
        """
        return self._integer_value

    @integer_value.setter
    def integer_value(self, integer_value):
        """Sets the integer_value of this EnumValuePair.

        The integer value of the EnumValuePair which must be non-negative. Optional.

        :param integer_value: The integer_value of this EnumValuePair.
        :type integer_value: int
        """

        self._integer_value = integer_value

    @property
    def string_value(self):
        """Gets the string_value of this EnumValuePair.

        The string value of the EnumValuePair. The maximum length is 32 characters.

        :return: The string_value of this EnumValuePair.
        :rtype: str
        """
        return self._string_value

    @string_value.setter
    def string_value(self, string_value):
        """Sets the string_value of this EnumValuePair.

        The string value of the EnumValuePair. The maximum length is 32 characters.

        :param string_value: The string_value of this EnumValuePair.
        :type string_value: str
        """

        self._string_value = string_value
