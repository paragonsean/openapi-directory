/**
 * Cloud Search API
 * Cloud Search provides cloud-based search capabilities over Google Workspace data. The Cloud Search API allows indexing of non-Google Workspace data into Cloud Search.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CloudSearchApi);
  }
}(this, function(expect, CloudSearchApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CloudSearchApi.PropertyDefinition();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PropertyDefinition', function() {
    it('should create an instance of PropertyDefinition', function() {
      // uncomment below and update the code to test PropertyDefinition
      //var instance = new CloudSearchApi.PropertyDefinition();
      //expect(instance).to.be.a(CloudSearchApi.PropertyDefinition);
    });

    it('should have the property booleanPropertyOptions (base name: "booleanPropertyOptions")', function() {
      // uncomment below and update the code to test the property booleanPropertyOptions
      //var instance = new CloudSearchApi.PropertyDefinition();
      //expect(instance).to.be();
    });

    it('should have the property datePropertyOptions (base name: "datePropertyOptions")', function() {
      // uncomment below and update the code to test the property datePropertyOptions
      //var instance = new CloudSearchApi.PropertyDefinition();
      //expect(instance).to.be();
    });

    it('should have the property displayOptions (base name: "displayOptions")', function() {
      // uncomment below and update the code to test the property displayOptions
      //var instance = new CloudSearchApi.PropertyDefinition();
      //expect(instance).to.be();
    });

    it('should have the property doublePropertyOptions (base name: "doublePropertyOptions")', function() {
      // uncomment below and update the code to test the property doublePropertyOptions
      //var instance = new CloudSearchApi.PropertyDefinition();
      //expect(instance).to.be();
    });

    it('should have the property enumPropertyOptions (base name: "enumPropertyOptions")', function() {
      // uncomment below and update the code to test the property enumPropertyOptions
      //var instance = new CloudSearchApi.PropertyDefinition();
      //expect(instance).to.be();
    });

    it('should have the property htmlPropertyOptions (base name: "htmlPropertyOptions")', function() {
      // uncomment below and update the code to test the property htmlPropertyOptions
      //var instance = new CloudSearchApi.PropertyDefinition();
      //expect(instance).to.be();
    });

    it('should have the property integerPropertyOptions (base name: "integerPropertyOptions")', function() {
      // uncomment below and update the code to test the property integerPropertyOptions
      //var instance = new CloudSearchApi.PropertyDefinition();
      //expect(instance).to.be();
    });

    it('should have the property isFacetable (base name: "isFacetable")', function() {
      // uncomment below and update the code to test the property isFacetable
      //var instance = new CloudSearchApi.PropertyDefinition();
      //expect(instance).to.be();
    });

    it('should have the property isRepeatable (base name: "isRepeatable")', function() {
      // uncomment below and update the code to test the property isRepeatable
      //var instance = new CloudSearchApi.PropertyDefinition();
      //expect(instance).to.be();
    });

    it('should have the property isReturnable (base name: "isReturnable")', function() {
      // uncomment below and update the code to test the property isReturnable
      //var instance = new CloudSearchApi.PropertyDefinition();
      //expect(instance).to.be();
    });

    it('should have the property isSortable (base name: "isSortable")', function() {
      // uncomment below and update the code to test the property isSortable
      //var instance = new CloudSearchApi.PropertyDefinition();
      //expect(instance).to.be();
    });

    it('should have the property isSuggestable (base name: "isSuggestable")', function() {
      // uncomment below and update the code to test the property isSuggestable
      //var instance = new CloudSearchApi.PropertyDefinition();
      //expect(instance).to.be();
    });

    it('should have the property isWildcardSearchable (base name: "isWildcardSearchable")', function() {
      // uncomment below and update the code to test the property isWildcardSearchable
      //var instance = new CloudSearchApi.PropertyDefinition();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new CloudSearchApi.PropertyDefinition();
      //expect(instance).to.be();
    });

    it('should have the property objectPropertyOptions (base name: "objectPropertyOptions")', function() {
      // uncomment below and update the code to test the property objectPropertyOptions
      //var instance = new CloudSearchApi.PropertyDefinition();
      //expect(instance).to.be();
    });

    it('should have the property textPropertyOptions (base name: "textPropertyOptions")', function() {
      // uncomment below and update the code to test the property textPropertyOptions
      //var instance = new CloudSearchApi.PropertyDefinition();
      //expect(instance).to.be();
    });

    it('should have the property timestampPropertyOptions (base name: "timestampPropertyOptions")', function() {
      // uncomment below and update the code to test the property timestampPropertyOptions
      //var instance = new CloudSearchApi.PropertyDefinition();
      //expect(instance).to.be();
    });

  });

}));
