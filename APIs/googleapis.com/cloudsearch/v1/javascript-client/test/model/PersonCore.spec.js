/**
 * Cloud Search API
 * Cloud Search provides cloud-based search capabilities over Google Workspace data. The Cloud Search API allows indexing of non-Google Workspace data into Cloud Search.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CloudSearchApi);
  }
}(this, function(expect, CloudSearchApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CloudSearchApi.PersonCore();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PersonCore', function() {
    it('should create an instance of PersonCore', function() {
      // uncomment below and update the code to test PersonCore
      //var instance = new CloudSearchApi.PersonCore();
      //expect(instance).to.be.a(CloudSearchApi.PersonCore);
    });

    it('should have the property addressMeAs (base name: "addressMeAs")', function() {
      // uncomment below and update the code to test the property addressMeAs
      //var instance = new CloudSearchApi.PersonCore();
      //expect(instance).to.be();
    });

    it('should have the property adminTo (base name: "adminTo")', function() {
      // uncomment below and update the code to test the property adminTo
      //var instance = new CloudSearchApi.PersonCore();
      //expect(instance).to.be();
    });

    it('should have the property admins (base name: "admins")', function() {
      // uncomment below and update the code to test the property admins
      //var instance = new CloudSearchApi.PersonCore();
      //expect(instance).to.be();
    });

    it('should have the property availabilityStatus (base name: "availabilityStatus")', function() {
      // uncomment below and update the code to test the property availabilityStatus
      //var instance = new CloudSearchApi.PersonCore();
      //expect(instance).to.be();
    });

    it('should have the property birthday (base name: "birthday")', function() {
      // uncomment below and update the code to test the property birthday
      //var instance = new CloudSearchApi.PersonCore();
      //expect(instance).to.be();
    });

    it('should have the property calendarUrl (base name: "calendarUrl")', function() {
      // uncomment below and update the code to test the property calendarUrl
      //var instance = new CloudSearchApi.PersonCore();
      //expect(instance).to.be();
    });

    it('should have the property chatUrl (base name: "chatUrl")', function() {
      // uncomment below and update the code to test the property chatUrl
      //var instance = new CloudSearchApi.PersonCore();
      //expect(instance).to.be();
    });

    it('should have the property costCenter (base name: "costCenter")', function() {
      // uncomment below and update the code to test the property costCenter
      //var instance = new CloudSearchApi.PersonCore();
      //expect(instance).to.be();
    });

    it('should have the property department (base name: "department")', function() {
      // uncomment below and update the code to test the property department
      //var instance = new CloudSearchApi.PersonCore();
      //expect(instance).to.be();
    });

    it('should have the property directReports (base name: "directReports")', function() {
      // uncomment below and update the code to test the property directReports
      //var instance = new CloudSearchApi.PersonCore();
      //expect(instance).to.be();
    });

    it('should have the property dottedLineManagers (base name: "dottedLineManagers")', function() {
      // uncomment below and update the code to test the property dottedLineManagers
      //var instance = new CloudSearchApi.PersonCore();
      //expect(instance).to.be();
    });

    it('should have the property dottedLineReports (base name: "dottedLineReports")', function() {
      // uncomment below and update the code to test the property dottedLineReports
      //var instance = new CloudSearchApi.PersonCore();
      //expect(instance).to.be();
    });

    it('should have the property emails (base name: "emails")', function() {
      // uncomment below and update the code to test the property emails
      //var instance = new CloudSearchApi.PersonCore();
      //expect(instance).to.be();
    });

    it('should have the property employeeId (base name: "employeeId")', function() {
      // uncomment below and update the code to test the property employeeId
      //var instance = new CloudSearchApi.PersonCore();
      //expect(instance).to.be();
    });

    it('should have the property fingerprint (base name: "fingerprint")', function() {
      // uncomment below and update the code to test the property fingerprint
      //var instance = new CloudSearchApi.PersonCore();
      //expect(instance).to.be();
    });

    it('should have the property ftePermille (base name: "ftePermille")', function() {
      // uncomment below and update the code to test the property ftePermille
      //var instance = new CloudSearchApi.PersonCore();
      //expect(instance).to.be();
    });

    it('should have the property geoLocation (base name: "geoLocation")', function() {
      // uncomment below and update the code to test the property geoLocation
      //var instance = new CloudSearchApi.PersonCore();
      //expect(instance).to.be();
    });

    it('should have the property gmailUrl (base name: "gmailUrl")', function() {
      // uncomment below and update the code to test the property gmailUrl
      //var instance = new CloudSearchApi.PersonCore();
      //expect(instance).to.be();
    });

    it('should have the property jobTitle (base name: "jobTitle")', function() {
      // uncomment below and update the code to test the property jobTitle
      //var instance = new CloudSearchApi.PersonCore();
      //expect(instance).to.be();
    });

    it('should have the property keywordTypes (base name: "keywordTypes")', function() {
      // uncomment below and update the code to test the property keywordTypes
      //var instance = new CloudSearchApi.PersonCore();
      //expect(instance).to.be();
    });

    it('should have the property keywords (base name: "keywords")', function() {
      // uncomment below and update the code to test the property keywords
      //var instance = new CloudSearchApi.PersonCore();
      //expect(instance).to.be();
    });

    it('should have the property links (base name: "links")', function() {
      // uncomment below and update the code to test the property links
      //var instance = new CloudSearchApi.PersonCore();
      //expect(instance).to.be();
    });

    it('should have the property location (base name: "location")', function() {
      // uncomment below and update the code to test the property location
      //var instance = new CloudSearchApi.PersonCore();
      //expect(instance).to.be();
    });

    it('should have the property managers (base name: "managers")', function() {
      // uncomment below and update the code to test the property managers
      //var instance = new CloudSearchApi.PersonCore();
      //expect(instance).to.be();
    });

    it('should have the property mission (base name: "mission")', function() {
      // uncomment below and update the code to test the property mission
      //var instance = new CloudSearchApi.PersonCore();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new CloudSearchApi.PersonCore();
      //expect(instance).to.be();
    });

    it('should have the property officeLocation (base name: "officeLocation")', function() {
      // uncomment below and update the code to test the property officeLocation
      //var instance = new CloudSearchApi.PersonCore();
      //expect(instance).to.be();
    });

    it('should have the property personId (base name: "personId")', function() {
      // uncomment below and update the code to test the property personId
      //var instance = new CloudSearchApi.PersonCore();
      //expect(instance).to.be();
    });

    it('should have the property phoneNumbers (base name: "phoneNumbers")', function() {
      // uncomment below and update the code to test the property phoneNumbers
      //var instance = new CloudSearchApi.PersonCore();
      //expect(instance).to.be();
    });

    it('should have the property photoUrl (base name: "photoUrl")', function() {
      // uncomment below and update the code to test the property photoUrl
      //var instance = new CloudSearchApi.PersonCore();
      //expect(instance).to.be();
    });

    it('should have the property postalAddress (base name: "postalAddress")', function() {
      // uncomment below and update the code to test the property postalAddress
      //var instance = new CloudSearchApi.PersonCore();
      //expect(instance).to.be();
    });

    it('should have the property totalDirectReportsCount (base name: "totalDirectReportsCount")', function() {
      // uncomment below and update the code to test the property totalDirectReportsCount
      //var instance = new CloudSearchApi.PersonCore();
      //expect(instance).to.be();
    });

    it('should have the property totalDlrCount (base name: "totalDlrCount")', function() {
      // uncomment below and update the code to test the property totalDlrCount
      //var instance = new CloudSearchApi.PersonCore();
      //expect(instance).to.be();
    });

    it('should have the property totalFteCount (base name: "totalFteCount")', function() {
      // uncomment below and update the code to test the property totalFteCount
      //var instance = new CloudSearchApi.PersonCore();
      //expect(instance).to.be();
    });

    it('should have the property username (base name: "username")', function() {
      // uncomment below and update the code to test the property username
      //var instance = new CloudSearchApi.PersonCore();
      //expect(instance).to.be();
    });

    it('should have the property waldoComeBackTime (base name: "waldoComeBackTime")', function() {
      // uncomment below and update the code to test the property waldoComeBackTime
      //var instance = new CloudSearchApi.PersonCore();
      //expect(instance).to.be();
    });

  });

}));
