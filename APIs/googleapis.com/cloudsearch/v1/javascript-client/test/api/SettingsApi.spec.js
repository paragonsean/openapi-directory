/**
 * Cloud Search API
 * Cloud Search provides cloud-based search capabilities over Google Workspace data. The Cloud Search API allows indexing of non-Google Workspace data into Cloud Search.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CloudSearchApi);
  }
}(this, function(expect, CloudSearchApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CloudSearchApi.SettingsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SettingsApi', function() {
    describe('cloudsearchSettingsDatasourcesCreate', function() {
      it('should call cloudsearchSettingsDatasourcesCreate successfully', function(done) {
        //uncomment below and update the code to test cloudsearchSettingsDatasourcesCreate
        //instance.cloudsearchSettingsDatasourcesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cloudsearchSettingsDatasourcesList', function() {
      it('should call cloudsearchSettingsDatasourcesList successfully', function(done) {
        //uncomment below and update the code to test cloudsearchSettingsDatasourcesList
        //instance.cloudsearchSettingsDatasourcesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cloudsearchSettingsGetCustomer', function() {
      it('should call cloudsearchSettingsGetCustomer successfully', function(done) {
        //uncomment below and update the code to test cloudsearchSettingsGetCustomer
        //instance.cloudsearchSettingsGetCustomer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cloudsearchSettingsSearchapplicationsCreate', function() {
      it('should call cloudsearchSettingsSearchapplicationsCreate successfully', function(done) {
        //uncomment below and update the code to test cloudsearchSettingsSearchapplicationsCreate
        //instance.cloudsearchSettingsSearchapplicationsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cloudsearchSettingsSearchapplicationsDelete', function() {
      it('should call cloudsearchSettingsSearchapplicationsDelete successfully', function(done) {
        //uncomment below and update the code to test cloudsearchSettingsSearchapplicationsDelete
        //instance.cloudsearchSettingsSearchapplicationsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cloudsearchSettingsSearchapplicationsGet', function() {
      it('should call cloudsearchSettingsSearchapplicationsGet successfully', function(done) {
        //uncomment below and update the code to test cloudsearchSettingsSearchapplicationsGet
        //instance.cloudsearchSettingsSearchapplicationsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cloudsearchSettingsSearchapplicationsList', function() {
      it('should call cloudsearchSettingsSearchapplicationsList successfully', function(done) {
        //uncomment below and update the code to test cloudsearchSettingsSearchapplicationsList
        //instance.cloudsearchSettingsSearchapplicationsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cloudsearchSettingsSearchapplicationsPatch', function() {
      it('should call cloudsearchSettingsSearchapplicationsPatch successfully', function(done) {
        //uncomment below and update the code to test cloudsearchSettingsSearchapplicationsPatch
        //instance.cloudsearchSettingsSearchapplicationsPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cloudsearchSettingsSearchapplicationsReset', function() {
      it('should call cloudsearchSettingsSearchapplicationsReset successfully', function(done) {
        //uncomment below and update the code to test cloudsearchSettingsSearchapplicationsReset
        //instance.cloudsearchSettingsSearchapplicationsReset(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cloudsearchSettingsSearchapplicationsUpdate', function() {
      it('should call cloudsearchSettingsSearchapplicationsUpdate successfully', function(done) {
        //uncomment below and update the code to test cloudsearchSettingsSearchapplicationsUpdate
        //instance.cloudsearchSettingsSearchapplicationsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cloudsearchSettingsUpdateCustomer', function() {
      it('should call cloudsearchSettingsUpdateCustomer successfully', function(done) {
        //uncomment below and update the code to test cloudsearchSettingsUpdateCustomer
        //instance.cloudsearchSettingsUpdateCustomer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
