/**
 * Cloud Search API
 * Cloud Search provides cloud-based search capabilities over Google Workspace data. The Cloud Search API allows indexing of non-Google Workspace data into Cloud Search.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RetrievalImportance model module.
 * @module model/RetrievalImportance
 * @version v1
 */
class RetrievalImportance {
    /**
     * Constructs a new <code>RetrievalImportance</code>.
     * @alias module:model/RetrievalImportance
     */
    constructor() { 
        
        RetrievalImportance.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RetrievalImportance</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RetrievalImportance} obj Optional instance to populate.
     * @return {module:model/RetrievalImportance} The populated <code>RetrievalImportance</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RetrievalImportance();

            if (data.hasOwnProperty('importance')) {
                obj['importance'] = ApiClient.convertToType(data['importance'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RetrievalImportance</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RetrievalImportance</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['importance'] && !(typeof data['importance'] === 'string' || data['importance'] instanceof String)) {
            throw new Error("Expected the field `importance` to be a primitive type in the JSON string but got " + data['importance']);
        }

        return true;
    }


}



/**
 * Indicates the ranking importance given to property when it is matched during retrieval. Once set, the token importance of a property cannot be changed.
 * @member {module:model/RetrievalImportance.ImportanceEnum} importance
 */
RetrievalImportance.prototype['importance'] = undefined;





/**
 * Allowed values for the <code>importance</code> property.
 * @enum {String}
 * @readonly
 */
RetrievalImportance['ImportanceEnum'] = {

    /**
     * value: "DEFAULT"
     * @const
     */
    "DEFAULT": "DEFAULT",

    /**
     * value: "HIGHEST"
     * @const
     */
    "HIGHEST": "HIGHEST",

    /**
     * value: "HIGH"
     * @const
     */
    "HIGH": "HIGH",

    /**
     * value: "LOW"
     * @const
     */
    "LOW": "LOW",

    /**
     * value: "NONE"
     * @const
     */
    "NONE": "NONE"
};



export default RetrievalImportance;

