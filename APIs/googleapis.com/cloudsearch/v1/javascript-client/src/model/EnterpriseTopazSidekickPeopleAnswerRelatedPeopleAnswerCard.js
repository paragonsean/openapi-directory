/**
 * Cloud Search API
 * Cloud Search provides cloud-based search capabilities over Google Workspace data. The Cloud Search API allows indexing of non-Google Workspace data into Cloud Search.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EnterpriseTopazSidekickCommonPerson from './EnterpriseTopazSidekickCommonPerson';
import EnterpriseTopazSidekickPeopleAnswerDisambiguationInfo from './EnterpriseTopazSidekickPeopleAnswerDisambiguationInfo';
import EnterpriseTopazSidekickPeopleAnswerPeopleAnswerCardHeader from './EnterpriseTopazSidekickPeopleAnswerPeopleAnswerCardHeader';

/**
 * The EnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard model module.
 * @module model/EnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard
 * @version v1
 */
class EnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard {
    /**
     * Constructs a new <code>EnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard</code>.
     * An answer card for a list of people that are related to the subject of the query.
     * @alias module:model/EnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard
     */
    constructor() { 
        
        EnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard} obj Optional instance to populate.
     * @return {module:model/EnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard} The populated <code>EnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard();

            if (data.hasOwnProperty('disambiguationInfo')) {
                obj['disambiguationInfo'] = EnterpriseTopazSidekickPeopleAnswerDisambiguationInfo.constructFromObject(data['disambiguationInfo']);
            }
            if (data.hasOwnProperty('header')) {
                obj['header'] = EnterpriseTopazSidekickPeopleAnswerPeopleAnswerCardHeader.constructFromObject(data['header']);
            }
            if (data.hasOwnProperty('relatedPeople')) {
                obj['relatedPeople'] = ApiClient.convertToType(data['relatedPeople'], [EnterpriseTopazSidekickCommonPerson]);
            }
            if (data.hasOwnProperty('relationType')) {
                obj['relationType'] = ApiClient.convertToType(data['relationType'], 'String');
            }
            if (data.hasOwnProperty('responseStatus')) {
                obj['responseStatus'] = ApiClient.convertToType(data['responseStatus'], 'String');
            }
            if (data.hasOwnProperty('statusMessage')) {
                obj['statusMessage'] = ApiClient.convertToType(data['statusMessage'], 'String');
            }
            if (data.hasOwnProperty('subject')) {
                obj['subject'] = EnterpriseTopazSidekickCommonPerson.constructFromObject(data['subject']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard</code>.
     */
    static validateJSON(data) {
        // validate the optional field `disambiguationInfo`
        if (data['disambiguationInfo']) { // data not null
          EnterpriseTopazSidekickPeopleAnswerDisambiguationInfo.validateJSON(data['disambiguationInfo']);
        }
        // validate the optional field `header`
        if (data['header']) { // data not null
          EnterpriseTopazSidekickPeopleAnswerPeopleAnswerCardHeader.validateJSON(data['header']);
        }
        if (data['relatedPeople']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['relatedPeople'])) {
                throw new Error("Expected the field `relatedPeople` to be an array in the JSON data but got " + data['relatedPeople']);
            }
            // validate the optional field `relatedPeople` (array)
            for (const item of data['relatedPeople']) {
                EnterpriseTopazSidekickCommonPerson.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['relationType'] && !(typeof data['relationType'] === 'string' || data['relationType'] instanceof String)) {
            throw new Error("Expected the field `relationType` to be a primitive type in the JSON string but got " + data['relationType']);
        }
        // ensure the json data is a string
        if (data['responseStatus'] && !(typeof data['responseStatus'] === 'string' || data['responseStatus'] instanceof String)) {
            throw new Error("Expected the field `responseStatus` to be a primitive type in the JSON string but got " + data['responseStatus']);
        }
        // ensure the json data is a string
        if (data['statusMessage'] && !(typeof data['statusMessage'] === 'string' || data['statusMessage'] instanceof String)) {
            throw new Error("Expected the field `statusMessage` to be a primitive type in the JSON string but got " + data['statusMessage']);
        }
        // validate the optional field `subject`
        if (data['subject']) { // data not null
          EnterpriseTopazSidekickCommonPerson.validateJSON(data['subject']);
        }

        return true;
    }


}



/**
 * @member {module:model/EnterpriseTopazSidekickPeopleAnswerDisambiguationInfo} disambiguationInfo
 */
EnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard.prototype['disambiguationInfo'] = undefined;

/**
 * @member {module:model/EnterpriseTopazSidekickPeopleAnswerPeopleAnswerCardHeader} header
 */
EnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard.prototype['header'] = undefined;

/**
 * A list of people that are related to the query subject.
 * @member {Array.<module:model/EnterpriseTopazSidekickCommonPerson>} relatedPeople
 */
EnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard.prototype['relatedPeople'] = undefined;

/**
 * Defines the type of relation the list of people have with the subject of the card.
 * @member {module:model/EnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard.RelationTypeEnum} relationType
 */
EnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard.prototype['relationType'] = undefined;

/**
 * The response status.
 * @member {module:model/EnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard.ResponseStatusEnum} responseStatus
 */
EnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard.prototype['responseStatus'] = undefined;

/**
 * Localized user friendly message to display to the user in the case of missing data or an error.
 * @member {String} statusMessage
 */
EnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard.prototype['statusMessage'] = undefined;

/**
 * @member {module:model/EnterpriseTopazSidekickCommonPerson} subject
 */
EnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard.prototype['subject'] = undefined;





/**
 * Allowed values for the <code>relationType</code> property.
 * @enum {String}
 * @readonly
 */
EnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard['RelationTypeEnum'] = {

    /**
     * value: "UNKNOWN"
     * @const
     */
    "UNKNOWN": "UNKNOWN",

    /**
     * value: "DIRECT_REPORTS"
     * @const
     */
    "DIRECT_REPORTS": "DIRECT_REPORTS",

    /**
     * value: "MANAGER"
     * @const
     */
    "MANAGER": "MANAGER",

    /**
     * value: "PEERS"
     * @const
     */
    "PEERS": "PEERS"
};


/**
 * Allowed values for the <code>responseStatus</code> property.
 * @enum {String}
 * @readonly
 */
EnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard['ResponseStatusEnum'] = {

    /**
     * value: "UNKNOWN"
     * @const
     */
    "UNKNOWN": "UNKNOWN",

    /**
     * value: "SUCCESS"
     * @const
     */
    "SUCCESS": "SUCCESS",

    /**
     * value: "MISSING_PERSON"
     * @const
     */
    "MISSING_PERSON": "MISSING_PERSON",

    /**
     * value: "MISSING_DATA"
     * @const
     */
    "MISSING_DATA": "MISSING_DATA"
};



export default EnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard;

