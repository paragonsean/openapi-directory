/**
 * Cloud Search API
 * Cloud Search provides cloud-based search capabilities over Google Workspace data. The Cloud Search API allows indexing of non-Google Workspace data into Cloud Search.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SourceCrowdingConfig model module.
 * @module model/SourceCrowdingConfig
 * @version v1
 */
class SourceCrowdingConfig {
    /**
     * Constructs a new <code>SourceCrowdingConfig</code>.
     * Set search results crowding limits. Crowding is a situation in which multiple results from the same source or host \&quot;crowd out\&quot; other results, diminishing the quality of search for users. To foster better search quality and source diversity in search results, you can set a condition to reduce repetitive results by source.
     * @alias module:model/SourceCrowdingConfig
     */
    constructor() { 
        
        SourceCrowdingConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SourceCrowdingConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SourceCrowdingConfig} obj Optional instance to populate.
     * @return {module:model/SourceCrowdingConfig} The populated <code>SourceCrowdingConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SourceCrowdingConfig();

            if (data.hasOwnProperty('numResults')) {
                obj['numResults'] = ApiClient.convertToType(data['numResults'], 'Number');
            }
            if (data.hasOwnProperty('numSuggestions')) {
                obj['numSuggestions'] = ApiClient.convertToType(data['numSuggestions'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SourceCrowdingConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SourceCrowdingConfig</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * Maximum number of results allowed from a datasource in a result page as long as results from other sources are not exhausted. Value specified must not be negative. A default value is used if this value is equal to 0. To disable crowding, set the value greater than 100.
 * @member {Number} numResults
 */
SourceCrowdingConfig.prototype['numResults'] = undefined;

/**
 * Maximum number of suggestions allowed from a source. No limits will be set on results if this value is less than or equal to 0.
 * @member {Number} numSuggestions
 */
SourceCrowdingConfig.prototype['numSuggestions'] = undefined;






export default SourceCrowdingConfig;

