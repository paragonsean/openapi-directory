/**
 * Cloud Search API
 * Cloud Search provides cloud-based search capabilities over Google Workspace data. The Cloud Search API allows indexing of non-Google Workspace data into Cloud Search.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SafeHtmlProto model module.
 * @module model/SafeHtmlProto
 * @version v1
 */
class SafeHtmlProto {
    /**
     * Constructs a new <code>SafeHtmlProto</code>.
     * IMPORTANT: It is unsafe to accept this message from an untrusted source, since it&#39;s trivial for an attacker to forge serialized messages that don&#39;t fulfill the type&#39;s safety contract -- for example, it could contain attacker controlled script. A system which receives a SafeHtmlProto implicitly trusts the producer of the SafeHtmlProto. So, it&#39;s generally safe to return this message in RPC responses, but generally unsafe to accept it in RPC requests.
     * @alias module:model/SafeHtmlProto
     */
    constructor() { 
        
        SafeHtmlProto.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SafeHtmlProto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SafeHtmlProto} obj Optional instance to populate.
     * @return {module:model/SafeHtmlProto} The populated <code>SafeHtmlProto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SafeHtmlProto();

            if (data.hasOwnProperty('privateDoNotAccessOrElseSafeHtmlWrappedValue')) {
                obj['privateDoNotAccessOrElseSafeHtmlWrappedValue'] = ApiClient.convertToType(data['privateDoNotAccessOrElseSafeHtmlWrappedValue'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SafeHtmlProto</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SafeHtmlProto</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['privateDoNotAccessOrElseSafeHtmlWrappedValue'] && !(typeof data['privateDoNotAccessOrElseSafeHtmlWrappedValue'] === 'string' || data['privateDoNotAccessOrElseSafeHtmlWrappedValue'] instanceof String)) {
            throw new Error("Expected the field `privateDoNotAccessOrElseSafeHtmlWrappedValue` to be a primitive type in the JSON string but got " + data['privateDoNotAccessOrElseSafeHtmlWrappedValue']);
        }

        return true;
    }


}



/**
 * IMPORTANT: Never set or read this field, even from tests, it is private. See documentation at the top of .proto file for programming language packages with which to create or read this message.
 * @member {String} privateDoNotAccessOrElseSafeHtmlWrappedValue
 */
SafeHtmlProto.prototype['privateDoNotAccessOrElseSafeHtmlWrappedValue'] = undefined;






export default SafeHtmlProto;

