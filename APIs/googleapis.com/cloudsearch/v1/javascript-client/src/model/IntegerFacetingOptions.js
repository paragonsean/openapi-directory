/**
 * Cloud Search API
 * Cloud Search provides cloud-based search capabilities over Google Workspace data. The Cloud Search API allows indexing of non-Google Workspace data into Cloud Search.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The IntegerFacetingOptions model module.
 * @module model/IntegerFacetingOptions
 * @version v1
 */
class IntegerFacetingOptions {
    /**
     * Constructs a new <code>IntegerFacetingOptions</code>.
     * Used to specify integer faceting options.
     * @alias module:model/IntegerFacetingOptions
     */
    constructor() { 
        
        IntegerFacetingOptions.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>IntegerFacetingOptions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IntegerFacetingOptions} obj Optional instance to populate.
     * @return {module:model/IntegerFacetingOptions} The populated <code>IntegerFacetingOptions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IntegerFacetingOptions();

            if (data.hasOwnProperty('integerBuckets')) {
                obj['integerBuckets'] = ApiClient.convertToType(data['integerBuckets'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IntegerFacetingOptions</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IntegerFacetingOptions</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['integerBuckets'])) {
            throw new Error("Expected the field `integerBuckets` to be an array in the JSON data but got " + data['integerBuckets']);
        }

        return true;
    }


}



/**
 * Buckets for given integer values should be in strictly ascending order. For example, if values supplied are (1,5,10,100), the following facet buckets will be formed {<1, [1,5), [5-10), [10-100), >=100}.
 * @member {Array.<String>} integerBuckets
 */
IntegerFacetingOptions.prototype['integerBuckets'] = undefined;






export default IntegerFacetingOptions;

