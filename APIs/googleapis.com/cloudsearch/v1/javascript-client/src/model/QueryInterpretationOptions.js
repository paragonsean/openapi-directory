/**
 * Cloud Search API
 * Cloud Search provides cloud-based search capabilities over Google Workspace data. The Cloud Search API allows indexing of non-Google Workspace data into Cloud Search.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The QueryInterpretationOptions model module.
 * @module model/QueryInterpretationOptions
 * @version v1
 */
class QueryInterpretationOptions {
    /**
     * Constructs a new <code>QueryInterpretationOptions</code>.
     * Options to interpret user query.
     * @alias module:model/QueryInterpretationOptions
     */
    constructor() { 
        
        QueryInterpretationOptions.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>QueryInterpretationOptions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/QueryInterpretationOptions} obj Optional instance to populate.
     * @return {module:model/QueryInterpretationOptions} The populated <code>QueryInterpretationOptions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new QueryInterpretationOptions();

            if (data.hasOwnProperty('disableNlInterpretation')) {
                obj['disableNlInterpretation'] = ApiClient.convertToType(data['disableNlInterpretation'], 'Boolean');
            }
            if (data.hasOwnProperty('disableSupplementalResults')) {
                obj['disableSupplementalResults'] = ApiClient.convertToType(data['disableSupplementalResults'], 'Boolean');
            }
            if (data.hasOwnProperty('enableVerbatimMode')) {
                obj['enableVerbatimMode'] = ApiClient.convertToType(data['enableVerbatimMode'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>QueryInterpretationOptions</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>QueryInterpretationOptions</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * Flag to disable natural language (NL) interpretation of queries. Default is false, Set to true to disable natural language interpretation. NL interpretation only applies to predefined datasources.
 * @member {Boolean} disableNlInterpretation
 */
QueryInterpretationOptions.prototype['disableNlInterpretation'] = undefined;

/**
 * Use this flag to disable supplemental results for a query. Supplemental results setting chosen at SearchApplication level will take precedence if set to True.
 * @member {Boolean} disableSupplementalResults
 */
QueryInterpretationOptions.prototype['disableSupplementalResults'] = undefined;

/**
 * Enable this flag to turn off all internal optimizations like natural language (NL) interpretation of queries, supplemental result retrieval, and usage of synonyms including custom ones. Nl interpretation will be disabled if either one of the two flags is true.
 * @member {Boolean} enableVerbatimMode
 */
QueryInterpretationOptions.prototype['enableVerbatimMode'] = undefined;






export default QueryInterpretationOptions;

