/**
 * Cloud Search API
 * Cloud Search provides cloud-based search capabilities over Google Workspace data. The Cloud Search API allows indexing of non-Google Workspace data into Cloud Search.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Metadata from './Metadata';
import ResultDebugInfo from './ResultDebugInfo';
import Snippet from './Snippet';

/**
 * The SearchResult model module.
 * @module model/SearchResult
 * @version v1
 */
class SearchResult {
    /**
     * Constructs a new <code>SearchResult</code>.
     * Results containing indexed information for a document.
     * @alias module:model/SearchResult
     */
    constructor() { 
        
        SearchResult.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SearchResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SearchResult} obj Optional instance to populate.
     * @return {module:model/SearchResult} The populated <code>SearchResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SearchResult();

            if (data.hasOwnProperty('clusteredResults')) {
                obj['clusteredResults'] = ApiClient.convertToType(data['clusteredResults'], [SearchResult]);
            }
            if (data.hasOwnProperty('debugInfo')) {
                obj['debugInfo'] = ResultDebugInfo.constructFromObject(data['debugInfo']);
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = Metadata.constructFromObject(data['metadata']);
            }
            if (data.hasOwnProperty('snippet')) {
                obj['snippet'] = Snippet.constructFromObject(data['snippet']);
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SearchResult</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SearchResult</code>.
     */
    static validateJSON(data) {
        if (data['clusteredResults']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['clusteredResults'])) {
                throw new Error("Expected the field `clusteredResults` to be an array in the JSON data but got " + data['clusteredResults']);
            }
            // validate the optional field `clusteredResults` (array)
            for (const item of data['clusteredResults']) {
                SearchResult.validateJSON(item);
            };
        }
        // validate the optional field `debugInfo`
        if (data['debugInfo']) { // data not null
          ResultDebugInfo.validateJSON(data['debugInfo']);
        }
        // validate the optional field `metadata`
        if (data['metadata']) { // data not null
          Metadata.validateJSON(data['metadata']);
        }
        // validate the optional field `snippet`
        if (data['snippet']) { // data not null
          Snippet.validateJSON(data['snippet']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}



/**
 * If source is clustered, provide list of clustered results. There will only be one level of clustered results. If current source is not enabled for clustering, this field will be empty.
 * @member {Array.<module:model/SearchResult>} clusteredResults
 */
SearchResult.prototype['clusteredResults'] = undefined;

/**
 * @member {module:model/ResultDebugInfo} debugInfo
 */
SearchResult.prototype['debugInfo'] = undefined;

/**
 * @member {module:model/Metadata} metadata
 */
SearchResult.prototype['metadata'] = undefined;

/**
 * @member {module:model/Snippet} snippet
 */
SearchResult.prototype['snippet'] = undefined;

/**
 * Title of the search result.
 * @member {String} title
 */
SearchResult.prototype['title'] = undefined;

/**
 * The URL of the search result. The URL contains a Google redirect to the actual item. This URL is signed and shouldn't be changed.
 * @member {String} url
 */
SearchResult.prototype['url'] = undefined;






export default SearchResult;

