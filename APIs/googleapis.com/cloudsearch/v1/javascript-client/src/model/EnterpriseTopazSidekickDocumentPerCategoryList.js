/**
 * Cloud Search API
 * Cloud Search provides cloud-based search capabilities over Google Workspace data. The Cloud Search API allows indexing of non-Google Workspace data into Cloud Search.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EnterpriseTopazSidekickDocumentPerCategoryListDocumentPerCategoryListEntry from './EnterpriseTopazSidekickDocumentPerCategoryListDocumentPerCategoryListEntry';

/**
 * The EnterpriseTopazSidekickDocumentPerCategoryList model module.
 * @module model/EnterpriseTopazSidekickDocumentPerCategoryList
 * @version v1
 */
class EnterpriseTopazSidekickDocumentPerCategoryList {
    /**
     * Constructs a new <code>EnterpriseTopazSidekickDocumentPerCategoryList</code>.
     * @alias module:model/EnterpriseTopazSidekickDocumentPerCategoryList
     */
    constructor() { 
        
        EnterpriseTopazSidekickDocumentPerCategoryList.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EnterpriseTopazSidekickDocumentPerCategoryList</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EnterpriseTopazSidekickDocumentPerCategoryList} obj Optional instance to populate.
     * @return {module:model/EnterpriseTopazSidekickDocumentPerCategoryList} The populated <code>EnterpriseTopazSidekickDocumentPerCategoryList</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EnterpriseTopazSidekickDocumentPerCategoryList();

            if (data.hasOwnProperty('documents')) {
                obj['documents'] = ApiClient.convertToType(data['documents'], [EnterpriseTopazSidekickDocumentPerCategoryListDocumentPerCategoryListEntry]);
            }
            if (data.hasOwnProperty('helpMessage')) {
                obj['helpMessage'] = ApiClient.convertToType(data['helpMessage'], 'String');
            }
            if (data.hasOwnProperty('listType')) {
                obj['listType'] = ApiClient.convertToType(data['listType'], 'String');
            }
            if (data.hasOwnProperty('listTypeDescription')) {
                obj['listTypeDescription'] = ApiClient.convertToType(data['listTypeDescription'], 'String');
            }
            if (data.hasOwnProperty('responseMessage')) {
                obj['responseMessage'] = ApiClient.convertToType(data['responseMessage'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EnterpriseTopazSidekickDocumentPerCategoryList</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EnterpriseTopazSidekickDocumentPerCategoryList</code>.
     */
    static validateJSON(data) {
        if (data['documents']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['documents'])) {
                throw new Error("Expected the field `documents` to be an array in the JSON data but got " + data['documents']);
            }
            // validate the optional field `documents` (array)
            for (const item of data['documents']) {
                EnterpriseTopazSidekickDocumentPerCategoryListDocumentPerCategoryListEntry.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['helpMessage'] && !(typeof data['helpMessage'] === 'string' || data['helpMessage'] instanceof String)) {
            throw new Error("Expected the field `helpMessage` to be a primitive type in the JSON string but got " + data['helpMessage']);
        }
        // ensure the json data is a string
        if (data['listType'] && !(typeof data['listType'] === 'string' || data['listType'] instanceof String)) {
            throw new Error("Expected the field `listType` to be a primitive type in the JSON string but got " + data['listType']);
        }
        // ensure the json data is a string
        if (data['listTypeDescription'] && !(typeof data['listTypeDescription'] === 'string' || data['listTypeDescription'] instanceof String)) {
            throw new Error("Expected the field `listTypeDescription` to be a primitive type in the JSON string but got " + data['listTypeDescription']);
        }
        // ensure the json data is a string
        if (data['responseMessage'] && !(typeof data['responseMessage'] === 'string' || data['responseMessage'] instanceof String)) {
            throw new Error("Expected the field `responseMessage` to be a primitive type in the JSON string but got " + data['responseMessage']);
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/EnterpriseTopazSidekickDocumentPerCategoryListDocumentPerCategoryListEntry>} documents
 */
EnterpriseTopazSidekickDocumentPerCategoryList.prototype['documents'] = undefined;

/**
 * Localized message explaining how the documents were derived (e.g. from the last 30 days activity). This field is optional.
 * @member {String} helpMessage
 */
EnterpriseTopazSidekickDocumentPerCategoryList.prototype['helpMessage'] = undefined;

/**
 * @member {module:model/EnterpriseTopazSidekickDocumentPerCategoryList.ListTypeEnum} listType
 */
EnterpriseTopazSidekickDocumentPerCategoryList.prototype['listType'] = undefined;

/**
 * Description of the types of documents present in the list.
 * @member {String} listTypeDescription
 */
EnterpriseTopazSidekickDocumentPerCategoryList.prototype['listTypeDescription'] = undefined;

/**
 * Response message in case no documents are present in the card.
 * @member {String} responseMessage
 */
EnterpriseTopazSidekickDocumentPerCategoryList.prototype['responseMessage'] = undefined;





/**
 * Allowed values for the <code>listType</code> property.
 * @enum {String}
 * @readonly
 */
EnterpriseTopazSidekickDocumentPerCategoryList['ListTypeEnum'] = {

    /**
     * value: "UNKNOWN_LIST_TYPE"
     * @const
     */
    "UNKNOWN_LIST_TYPE": "UNKNOWN_LIST_TYPE",

    /**
     * value: "MENTIONS"
     * @const
     */
    "MENTIONS": "MENTIONS",

    /**
     * value: "SHARES"
     * @const
     */
    "SHARES": "SHARES",

    /**
     * value: "NEEDS_ATTENTION"
     * @const
     */
    "NEEDS_ATTENTION": "NEEDS_ATTENTION",

    /**
     * value: "VIEWS"
     * @const
     */
    "VIEWS": "VIEWS",

    /**
     * value: "EDITS"
     * @const
     */
    "EDITS": "EDITS"
};



export default EnterpriseTopazSidekickDocumentPerCategoryList;

