/**
 * Cloud Search API
 * Cloud Search provides cloud-based search capabilities over Google Workspace data. The Cloud Search API allows indexing of non-Google Workspace data into Cloud Search.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DriveMimeTypeRestrict model module.
 * @module model/DriveMimeTypeRestrict
 * @version v1
 */
class DriveMimeTypeRestrict {
    /**
     * Constructs a new <code>DriveMimeTypeRestrict</code>.
     * Drive mime-type search restricts (e.g. \&quot;type:pdf\&quot;).
     * @alias module:model/DriveMimeTypeRestrict
     */
    constructor() { 
        
        DriveMimeTypeRestrict.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DriveMimeTypeRestrict</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DriveMimeTypeRestrict} obj Optional instance to populate.
     * @return {module:model/DriveMimeTypeRestrict} The populated <code>DriveMimeTypeRestrict</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DriveMimeTypeRestrict();

            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DriveMimeTypeRestrict</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DriveMimeTypeRestrict</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * @member {module:model/DriveMimeTypeRestrict.TypeEnum} type
 */
DriveMimeTypeRestrict.prototype['type'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
DriveMimeTypeRestrict['TypeEnum'] = {

    /**
     * value: "UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "UNSPECIFIED",

    /**
     * value: "PDF"
     * @const
     */
    "PDF": "PDF",

    /**
     * value: "DOCUMENT"
     * @const
     */
    "DOCUMENT": "DOCUMENT",

    /**
     * value: "PRESENTATION"
     * @const
     */
    "PRESENTATION": "PRESENTATION",

    /**
     * value: "SPREADSHEET"
     * @const
     */
    "SPREADSHEET": "SPREADSHEET",

    /**
     * value: "FORM"
     * @const
     */
    "FORM": "FORM",

    /**
     * value: "DRAWING"
     * @const
     */
    "DRAWING": "DRAWING",

    /**
     * value: "SCRIPT"
     * @const
     */
    "SCRIPT": "SCRIPT",

    /**
     * value: "MAP"
     * @const
     */
    "MAP": "MAP",

    /**
     * value: "IMAGE"
     * @const
     */
    "IMAGE": "IMAGE",

    /**
     * value: "AUDIO"
     * @const
     */
    "AUDIO": "AUDIO",

    /**
     * value: "VIDEO"
     * @const
     */
    "VIDEO": "VIDEO",

    /**
     * value: "FOLDER"
     * @const
     */
    "FOLDER": "FOLDER",

    /**
     * value: "ARCHIVE"
     * @const
     */
    "ARCHIVE": "ARCHIVE",

    /**
     * value: "SITE"
     * @const
     */
    "SITE": "SITE"
};



export default DriveMimeTypeRestrict;

