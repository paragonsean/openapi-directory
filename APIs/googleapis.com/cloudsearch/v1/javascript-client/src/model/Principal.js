/**
 * Cloud Search API
 * Cloud Search provides cloud-based search capabilities over Google Workspace data. The Cloud Search API allows indexing of non-Google Workspace data into Cloud Search.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GSuitePrincipal from './GSuitePrincipal';

/**
 * The Principal model module.
 * @module model/Principal
 * @version v1
 */
class Principal {
    /**
     * Constructs a new <code>Principal</code>.
     * Reference to a user, group, or domain.
     * @alias module:model/Principal
     */
    constructor() { 
        
        Principal.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Principal</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Principal} obj Optional instance to populate.
     * @return {module:model/Principal} The populated <code>Principal</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Principal();

            if (data.hasOwnProperty('groupResourceName')) {
                obj['groupResourceName'] = ApiClient.convertToType(data['groupResourceName'], 'String');
            }
            if (data.hasOwnProperty('gsuitePrincipal')) {
                obj['gsuitePrincipal'] = GSuitePrincipal.constructFromObject(data['gsuitePrincipal']);
            }
            if (data.hasOwnProperty('userResourceName')) {
                obj['userResourceName'] = ApiClient.convertToType(data['userResourceName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Principal</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Principal</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['groupResourceName'] && !(typeof data['groupResourceName'] === 'string' || data['groupResourceName'] instanceof String)) {
            throw new Error("Expected the field `groupResourceName` to be a primitive type in the JSON string but got " + data['groupResourceName']);
        }
        // validate the optional field `gsuitePrincipal`
        if (data['gsuitePrincipal']) { // data not null
          GSuitePrincipal.validateJSON(data['gsuitePrincipal']);
        }
        // ensure the json data is a string
        if (data['userResourceName'] && !(typeof data['userResourceName'] === 'string' || data['userResourceName'] instanceof String)) {
            throw new Error("Expected the field `userResourceName` to be a primitive type in the JSON string but got " + data['userResourceName']);
        }

        return true;
    }


}



/**
 * This principal is a group identified using an external identity. The name field must specify the group resource name with this format: identitysources/{source_id}/groups/{ID}
 * @member {String} groupResourceName
 */
Principal.prototype['groupResourceName'] = undefined;

/**
 * @member {module:model/GSuitePrincipal} gsuitePrincipal
 */
Principal.prototype['gsuitePrincipal'] = undefined;

/**
 * This principal is a user identified using an external identity. The name field must specify the user resource name with this format: identitysources/{source_id}/users/{ID}
 * @member {String} userResourceName
 */
Principal.prototype['userResourceName'] = undefined;






export default Principal;

