/**
 * Cloud Search API
 * Cloud Search provides cloud-based search capabilities over Google Workspace data. The Cloud Search API allows indexing of non-Google Workspace data into Cloud Search.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EnterpriseTopazSidekickCommonDebugInfo from './EnterpriseTopazSidekickCommonDebugInfo';
import EnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata from './EnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata';
import EnterpriseTopazSidekickCommonDocumentJustification from './EnterpriseTopazSidekickCommonDocumentJustification';

/**
 * The EnterpriseTopazSidekickCommonDocument model module.
 * @module model/EnterpriseTopazSidekickCommonDocument
 * @version v1
 */
class EnterpriseTopazSidekickCommonDocument {
    /**
     * Constructs a new <code>EnterpriseTopazSidekickCommonDocument</code>.
     * Representation of a document. NEXT_TAG: 15
     * @alias module:model/EnterpriseTopazSidekickCommonDocument
     */
    constructor() { 
        
        EnterpriseTopazSidekickCommonDocument.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EnterpriseTopazSidekickCommonDocument</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EnterpriseTopazSidekickCommonDocument} obj Optional instance to populate.
     * @return {module:model/EnterpriseTopazSidekickCommonDocument} The populated <code>EnterpriseTopazSidekickCommonDocument</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EnterpriseTopazSidekickCommonDocument();

            if (data.hasOwnProperty('accessType')) {
                obj['accessType'] = ApiClient.convertToType(data['accessType'], 'String');
            }
            if (data.hasOwnProperty('debugInfo')) {
                obj['debugInfo'] = EnterpriseTopazSidekickCommonDebugInfo.constructFromObject(data['debugInfo']);
            }
            if (data.hasOwnProperty('documentId')) {
                obj['documentId'] = ApiClient.convertToType(data['documentId'], 'String');
            }
            if (data.hasOwnProperty('driveDocumentMetadata')) {
                obj['driveDocumentMetadata'] = EnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata.constructFromObject(data['driveDocumentMetadata']);
            }
            if (data.hasOwnProperty('genericUrl')) {
                obj['genericUrl'] = ApiClient.convertToType(data['genericUrl'], 'String');
            }
            if (data.hasOwnProperty('justification')) {
                obj['justification'] = EnterpriseTopazSidekickCommonDocumentJustification.constructFromObject(data['justification']);
            }
            if (data.hasOwnProperty('mimeType')) {
                obj['mimeType'] = ApiClient.convertToType(data['mimeType'], 'String');
            }
            if (data.hasOwnProperty('provenance')) {
                obj['provenance'] = ApiClient.convertToType(data['provenance'], 'String');
            }
            if (data.hasOwnProperty('reason')) {
                obj['reason'] = ApiClient.convertToType(data['reason'], 'String');
            }
            if (data.hasOwnProperty('snippet')) {
                obj['snippet'] = ApiClient.convertToType(data['snippet'], 'String');
            }
            if (data.hasOwnProperty('thumbnailUrl')) {
                obj['thumbnailUrl'] = ApiClient.convertToType(data['thumbnailUrl'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EnterpriseTopazSidekickCommonDocument</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EnterpriseTopazSidekickCommonDocument</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['accessType'] && !(typeof data['accessType'] === 'string' || data['accessType'] instanceof String)) {
            throw new Error("Expected the field `accessType` to be a primitive type in the JSON string but got " + data['accessType']);
        }
        // validate the optional field `debugInfo`
        if (data['debugInfo']) { // data not null
          EnterpriseTopazSidekickCommonDebugInfo.validateJSON(data['debugInfo']);
        }
        // ensure the json data is a string
        if (data['documentId'] && !(typeof data['documentId'] === 'string' || data['documentId'] instanceof String)) {
            throw new Error("Expected the field `documentId` to be a primitive type in the JSON string but got " + data['documentId']);
        }
        // validate the optional field `driveDocumentMetadata`
        if (data['driveDocumentMetadata']) { // data not null
          EnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata.validateJSON(data['driveDocumentMetadata']);
        }
        // ensure the json data is a string
        if (data['genericUrl'] && !(typeof data['genericUrl'] === 'string' || data['genericUrl'] instanceof String)) {
            throw new Error("Expected the field `genericUrl` to be a primitive type in the JSON string but got " + data['genericUrl']);
        }
        // validate the optional field `justification`
        if (data['justification']) { // data not null
          EnterpriseTopazSidekickCommonDocumentJustification.validateJSON(data['justification']);
        }
        // ensure the json data is a string
        if (data['mimeType'] && !(typeof data['mimeType'] === 'string' || data['mimeType'] instanceof String)) {
            throw new Error("Expected the field `mimeType` to be a primitive type in the JSON string but got " + data['mimeType']);
        }
        // ensure the json data is a string
        if (data['provenance'] && !(typeof data['provenance'] === 'string' || data['provenance'] instanceof String)) {
            throw new Error("Expected the field `provenance` to be a primitive type in the JSON string but got " + data['provenance']);
        }
        // ensure the json data is a string
        if (data['reason'] && !(typeof data['reason'] === 'string' || data['reason'] instanceof String)) {
            throw new Error("Expected the field `reason` to be a primitive type in the JSON string but got " + data['reason']);
        }
        // ensure the json data is a string
        if (data['snippet'] && !(typeof data['snippet'] === 'string' || data['snippet'] instanceof String)) {
            throw new Error("Expected the field `snippet` to be a primitive type in the JSON string but got " + data['snippet']);
        }
        // ensure the json data is a string
        if (data['thumbnailUrl'] && !(typeof data['thumbnailUrl'] === 'string' || data['thumbnailUrl'] instanceof String)) {
            throw new Error("Expected the field `thumbnailUrl` to be a primitive type in the JSON string but got " + data['thumbnailUrl']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}



/**
 * Access type, i.e., whether the user has access to the document or not.
 * @member {module:model/EnterpriseTopazSidekickCommonDocument.AccessTypeEnum} accessType
 */
EnterpriseTopazSidekickCommonDocument.prototype['accessType'] = undefined;

/**
 * @member {module:model/EnterpriseTopazSidekickCommonDebugInfo} debugInfo
 */
EnterpriseTopazSidekickCommonDocument.prototype['debugInfo'] = undefined;

/**
 * Document id.
 * @member {String} documentId
 */
EnterpriseTopazSidekickCommonDocument.prototype['documentId'] = undefined;

/**
 * @member {module:model/EnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata} driveDocumentMetadata
 */
EnterpriseTopazSidekickCommonDocument.prototype['driveDocumentMetadata'] = undefined;

/**
 * Generic Drive-based url in the format of drive.google.com/open to be used for deeplink
 * @member {String} genericUrl
 */
EnterpriseTopazSidekickCommonDocument.prototype['genericUrl'] = undefined;

/**
 * @member {module:model/EnterpriseTopazSidekickCommonDocumentJustification} justification
 */
EnterpriseTopazSidekickCommonDocument.prototype['justification'] = undefined;

/**
 * MIME type
 * @member {String} mimeType
 */
EnterpriseTopazSidekickCommonDocument.prototype['mimeType'] = undefined;

/**
 * Document provenance.
 * @member {module:model/EnterpriseTopazSidekickCommonDocument.ProvenanceEnum} provenance
 */
EnterpriseTopazSidekickCommonDocument.prototype['provenance'] = undefined;

/**
 * Justification of why this document is being returned.
 * @member {module:model/EnterpriseTopazSidekickCommonDocument.ReasonEnum} reason
 */
EnterpriseTopazSidekickCommonDocument.prototype['reason'] = undefined;

/**
 * A sampling of the text from the document.
 * @member {String} snippet
 */
EnterpriseTopazSidekickCommonDocument.prototype['snippet'] = undefined;

/**
 * Thumbnail URL.
 * @member {String} thumbnailUrl
 */
EnterpriseTopazSidekickCommonDocument.prototype['thumbnailUrl'] = undefined;

/**
 * Title of the document.
 * @member {String} title
 */
EnterpriseTopazSidekickCommonDocument.prototype['title'] = undefined;

/**
 * Type of the document.
 * @member {module:model/EnterpriseTopazSidekickCommonDocument.TypeEnum} type
 */
EnterpriseTopazSidekickCommonDocument.prototype['type'] = undefined;

/**
 * Absolute URL of the document.
 * @member {String} url
 */
EnterpriseTopazSidekickCommonDocument.prototype['url'] = undefined;





/**
 * Allowed values for the <code>accessType</code> property.
 * @enum {String}
 * @readonly
 */
EnterpriseTopazSidekickCommonDocument['AccessTypeEnum'] = {

    /**
     * value: "UNKNOWN_ACCESS"
     * @const
     */
    "UNKNOWN_ACCESS": "UNKNOWN_ACCESS",

    /**
     * value: "ALLOWED"
     * @const
     */
    "ALLOWED": "ALLOWED",

    /**
     * value: "NOT_ALLOWED"
     * @const
     */
    "NOT_ALLOWED": "NOT_ALLOWED"
};


/**
 * Allowed values for the <code>provenance</code> property.
 * @enum {String}
 * @readonly
 */
EnterpriseTopazSidekickCommonDocument['ProvenanceEnum'] = {

    /**
     * value: "UNKNOWN_PROVENANCE"
     * @const
     */
    "UNKNOWN_PROVENANCE": "UNKNOWN_PROVENANCE",

    /**
     * value: "CALENDAR_DESCRIPTION"
     * @const
     */
    "CALENDAR_DESCRIPTION": "CALENDAR_DESCRIPTION",

    /**
     * value: "CALENDAR_ATTACHMENT"
     * @const
     */
    "CALENDAR_ATTACHMENT": "CALENDAR_ATTACHMENT",

    /**
     * value: "MINED"
     * @const
     */
    "MINED": "MINED",

    /**
     * value: "CALENDAR_ASSIST_ATTACHMENT"
     * @const
     */
    "CALENDAR_ASSIST_ATTACHMENT": "CALENDAR_ASSIST_ATTACHMENT"
};


/**
 * Allowed values for the <code>reason</code> property.
 * @enum {String}
 * @readonly
 */
EnterpriseTopazSidekickCommonDocument['ReasonEnum'] = {

    /**
     * value: "UNKNOWN"
     * @const
     */
    "UNKNOWN": "UNKNOWN",

    /**
     * value: "TRENDING_IN_COLLABORATORS"
     * @const
     */
    "TRENDING_IN_COLLABORATORS": "TRENDING_IN_COLLABORATORS",

    /**
     * value: "TRENDING_IN_DOMAIN"
     * @const
     */
    "TRENDING_IN_DOMAIN": "TRENDING_IN_DOMAIN",

    /**
     * value: "FREQUENTLY_VIEWED"
     * @const
     */
    "FREQUENTLY_VIEWED": "FREQUENTLY_VIEWED",

    /**
     * value: "FREQUENTLY_EDITED"
     * @const
     */
    "FREQUENTLY_EDITED": "FREQUENTLY_EDITED",

    /**
     * value: "NEW_UPDATES"
     * @const
     */
    "NEW_UPDATES": "NEW_UPDATES",

    /**
     * value: "NEW_COMMENTS"
     * @const
     */
    "NEW_COMMENTS": "NEW_COMMENTS",

    /**
     * value: "EVENT_DESCRIPTION"
     * @const
     */
    "EVENT_DESCRIPTION": "EVENT_DESCRIPTION",

    /**
     * value: "EVENT_ATTACHMENT"
     * @const
     */
    "EVENT_ATTACHMENT": "EVENT_ATTACHMENT",

    /**
     * value: "EVENT_METADATA_ATTACHMENT"
     * @const
     */
    "EVENT_METADATA_ATTACHMENT": "EVENT_METADATA_ATTACHMENT",

    /**
     * value: "MINED_DOCUMENT"
     * @const
     */
    "MINED_DOCUMENT": "MINED_DOCUMENT",

    /**
     * value: "NEW_MENTIONS"
     * @const
     */
    "NEW_MENTIONS": "NEW_MENTIONS",

    /**
     * value: "NEW_SHARES"
     * @const
     */
    "NEW_SHARES": "NEW_SHARES"
};


/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
EnterpriseTopazSidekickCommonDocument['TypeEnum'] = {

    /**
     * value: "UNKNOWN"
     * @const
     */
    "UNKNOWN": "UNKNOWN",

    /**
     * value: "DOCUMENT"
     * @const
     */
    "DOCUMENT": "DOCUMENT",

    /**
     * value: "PRESENTATION"
     * @const
     */
    "PRESENTATION": "PRESENTATION",

    /**
     * value: "SPREADSHEET"
     * @const
     */
    "SPREADSHEET": "SPREADSHEET",

    /**
     * value: "PDF"
     * @const
     */
    "PDF": "PDF",

    /**
     * value: "IMAGE"
     * @const
     */
    "IMAGE": "IMAGE",

    /**
     * value: "BINARY_BLOB"
     * @const
     */
    "BINARY_BLOB": "BINARY_BLOB",

    /**
     * value: "FUSION_TABLE"
     * @const
     */
    "FUSION_TABLE": "FUSION_TABLE",

    /**
     * value: "FOLDER"
     * @const
     */
    "FOLDER": "FOLDER",

    /**
     * value: "DRAWING"
     * @const
     */
    "DRAWING": "DRAWING",

    /**
     * value: "VIDEO"
     * @const
     */
    "VIDEO": "VIDEO",

    /**
     * value: "FORM"
     * @const
     */
    "FORM": "FORM",

    /**
     * value: "LINK_URL"
     * @const
     */
    "LINK_URL": "LINK_URL",

    /**
     * value: "LINK_GO"
     * @const
     */
    "LINK_GO": "LINK_GO",

    /**
     * value: "LINK_GOO_GL"
     * @const
     */
    "LINK_GOO_GL": "LINK_GOO_GL",

    /**
     * value: "LINK_BIT_LY"
     * @const
     */
    "LINK_BIT_LY": "LINK_BIT_LY",

    /**
     * value: "LINK_GMAIL"
     * @const
     */
    "LINK_GMAIL": "LINK_GMAIL",

    /**
     * value: "LINK_MAILTO"
     * @const
     */
    "LINK_MAILTO": "LINK_MAILTO",

    /**
     * value: "VIDEO_YOUTUBE"
     * @const
     */
    "VIDEO_YOUTUBE": "VIDEO_YOUTUBE",

    /**
     * value: "VIDEO_LIVE"
     * @const
     */
    "VIDEO_LIVE": "VIDEO_LIVE",

    /**
     * value: "GROUPS"
     * @const
     */
    "GROUPS": "GROUPS",

    /**
     * value: "NEWS"
     * @const
     */
    "NEWS": "NEWS",

    /**
     * value: "SITES"
     * @const
     */
    "SITES": "SITES",

    /**
     * value: "HANGOUT"
     * @const
     */
    "HANGOUT": "HANGOUT",

    /**
     * value: "AUDIO"
     * @const
     */
    "AUDIO": "AUDIO",

    /**
     * value: "MS_WORD"
     * @const
     */
    "MS_WORD": "MS_WORD",

    /**
     * value: "MS_POWERPOINT"
     * @const
     */
    "MS_POWERPOINT": "MS_POWERPOINT",

    /**
     * value: "MS_EXCEL"
     * @const
     */
    "MS_EXCEL": "MS_EXCEL",

    /**
     * value: "MS_OUTLOOK"
     * @const
     */
    "MS_OUTLOOK": "MS_OUTLOOK"
};



export default EnterpriseTopazSidekickCommonDocument;

