/**
 * Cloud Search API
 * Cloud Search provides cloud-based search capabilities over Google Workspace data. The Cloud Search API allows indexing of non-Google Workspace data into Cloud Search.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EnterpriseTopazSidekickPeopleAnswerDisambiguationInfoDisambiguationPerson from './EnterpriseTopazSidekickPeopleAnswerDisambiguationInfoDisambiguationPerson';

/**
 * The EnterpriseTopazSidekickPeopleAnswerDisambiguationInfo model module.
 * @module model/EnterpriseTopazSidekickPeopleAnswerDisambiguationInfo
 * @version v1
 */
class EnterpriseTopazSidekickPeopleAnswerDisambiguationInfo {
    /**
     * Constructs a new <code>EnterpriseTopazSidekickPeopleAnswerDisambiguationInfo</code>.
     * Metadata for disambiguation.
     * @alias module:model/EnterpriseTopazSidekickPeopleAnswerDisambiguationInfo
     */
    constructor() { 
        
        EnterpriseTopazSidekickPeopleAnswerDisambiguationInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EnterpriseTopazSidekickPeopleAnswerDisambiguationInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EnterpriseTopazSidekickPeopleAnswerDisambiguationInfo} obj Optional instance to populate.
     * @return {module:model/EnterpriseTopazSidekickPeopleAnswerDisambiguationInfo} The populated <code>EnterpriseTopazSidekickPeopleAnswerDisambiguationInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EnterpriseTopazSidekickPeopleAnswerDisambiguationInfo();

            if (data.hasOwnProperty('disambiguation')) {
                obj['disambiguation'] = ApiClient.convertToType(data['disambiguation'], [EnterpriseTopazSidekickPeopleAnswerDisambiguationInfoDisambiguationPerson]);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EnterpriseTopazSidekickPeopleAnswerDisambiguationInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EnterpriseTopazSidekickPeopleAnswerDisambiguationInfo</code>.
     */
    static validateJSON(data) {
        if (data['disambiguation']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['disambiguation'])) {
                throw new Error("Expected the field `disambiguation` to be an array in the JSON data but got " + data['disambiguation']);
            }
            // validate the optional field `disambiguation` (array)
            for (const item of data['disambiguation']) {
                EnterpriseTopazSidekickPeopleAnswerDisambiguationInfoDisambiguationPerson.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}



/**
 * A list of people that also matched the query. This list is not complete.
 * @member {Array.<module:model/EnterpriseTopazSidekickPeopleAnswerDisambiguationInfoDisambiguationPerson>} disambiguation
 */
EnterpriseTopazSidekickPeopleAnswerDisambiguationInfo.prototype['disambiguation'] = undefined;

/**
 * The name that was extracted from the query. This may be in the form of the given name, last name, full name, LDAP, or email address. This name can be considered suitable for displaying to the user and can largely be considered to be normalized (e.g. \"Bob's\" -> \"Bob\").
 * @member {String} name
 */
EnterpriseTopazSidekickPeopleAnswerDisambiguationInfo.prototype['name'] = undefined;






export default EnterpriseTopazSidekickPeopleAnswerDisambiguationInfo;

