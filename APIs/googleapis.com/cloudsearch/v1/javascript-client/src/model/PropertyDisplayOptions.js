/**
 * Cloud Search API
 * Cloud Search provides cloud-based search capabilities over Google Workspace data. The Cloud Search API allows indexing of non-Google Workspace data into Cloud Search.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PropertyDisplayOptions model module.
 * @module model/PropertyDisplayOptions
 * @version v1
 */
class PropertyDisplayOptions {
    /**
     * Constructs a new <code>PropertyDisplayOptions</code>.
     * The display options for a property.
     * @alias module:model/PropertyDisplayOptions
     */
    constructor() { 
        
        PropertyDisplayOptions.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PropertyDisplayOptions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PropertyDisplayOptions} obj Optional instance to populate.
     * @return {module:model/PropertyDisplayOptions} The populated <code>PropertyDisplayOptions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PropertyDisplayOptions();

            if (data.hasOwnProperty('displayLabel')) {
                obj['displayLabel'] = ApiClient.convertToType(data['displayLabel'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PropertyDisplayOptions</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PropertyDisplayOptions</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['displayLabel'] && !(typeof data['displayLabel'] === 'string' || data['displayLabel'] instanceof String)) {
            throw new Error("Expected the field `displayLabel` to be a primitive type in the JSON string but got " + data['displayLabel']);
        }

        return true;
    }


}



/**
 * The user friendly label for the property that is used if the property is specified to be displayed in ObjectDisplayOptions. If provided, the display label is shown in front of the property values when the property is part of the object display options. For example, if the property value is '1', the value by itself may not be useful context for the user. If the display name given was 'priority', then the user sees 'priority : 1' in the search results which provides clear context to search users. This is OPTIONAL; if not given, only the property values are displayed. The maximum length is 64 characters.
 * @member {String} displayLabel
 */
PropertyDisplayOptions.prototype['displayLabel'] = undefined;






export default PropertyDisplayOptions;

