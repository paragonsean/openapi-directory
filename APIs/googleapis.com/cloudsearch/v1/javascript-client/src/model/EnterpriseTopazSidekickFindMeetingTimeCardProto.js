/**
 * Cloud Search API
 * Cloud Search provides cloud-based search capabilities over Google Workspace data. The Cloud Search API allows indexing of non-Google Workspace data into Cloud Search.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EnterpriseTopazSidekickPerson from './EnterpriseTopazSidekickPerson';
import EnterpriseTopazSidekickScheduledMeeting from './EnterpriseTopazSidekickScheduledMeeting';
import EnterpriseTopazSidekickTimeSlot from './EnterpriseTopazSidekickTimeSlot';

/**
 * The EnterpriseTopazSidekickFindMeetingTimeCardProto model module.
 * @module model/EnterpriseTopazSidekickFindMeetingTimeCardProto
 * @version v1
 */
class EnterpriseTopazSidekickFindMeetingTimeCardProto {
    /**
     * Constructs a new <code>EnterpriseTopazSidekickFindMeetingTimeCardProto</code>.
     * Response to find meeting time among a set of people.
     * @alias module:model/EnterpriseTopazSidekickFindMeetingTimeCardProto
     */
    constructor() { 
        
        EnterpriseTopazSidekickFindMeetingTimeCardProto.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EnterpriseTopazSidekickFindMeetingTimeCardProto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EnterpriseTopazSidekickFindMeetingTimeCardProto} obj Optional instance to populate.
     * @return {module:model/EnterpriseTopazSidekickFindMeetingTimeCardProto} The populated <code>EnterpriseTopazSidekickFindMeetingTimeCardProto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EnterpriseTopazSidekickFindMeetingTimeCardProto();

            if (data.hasOwnProperty('commonAvailableTimeSlots')) {
                obj['commonAvailableTimeSlots'] = ApiClient.convertToType(data['commonAvailableTimeSlots'], [EnterpriseTopazSidekickTimeSlot]);
            }
            if (data.hasOwnProperty('invitees')) {
                obj['invitees'] = ApiClient.convertToType(data['invitees'], [EnterpriseTopazSidekickPerson]);
            }
            if (data.hasOwnProperty('requester')) {
                obj['requester'] = EnterpriseTopazSidekickPerson.constructFromObject(data['requester']);
            }
            if (data.hasOwnProperty('scheduledMeeting')) {
                obj['scheduledMeeting'] = EnterpriseTopazSidekickScheduledMeeting.constructFromObject(data['scheduledMeeting']);
            }
            if (data.hasOwnProperty('skippedInvitees')) {
                obj['skippedInvitees'] = ApiClient.convertToType(data['skippedInvitees'], [EnterpriseTopazSidekickPerson]);
            }
            if (data.hasOwnProperty('timeBoundaries')) {
                obj['timeBoundaries'] = EnterpriseTopazSidekickTimeSlot.constructFromObject(data['timeBoundaries']);
            }
            if (data.hasOwnProperty('timezoneId')) {
                obj['timezoneId'] = ApiClient.convertToType(data['timezoneId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EnterpriseTopazSidekickFindMeetingTimeCardProto</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EnterpriseTopazSidekickFindMeetingTimeCardProto</code>.
     */
    static validateJSON(data) {
        if (data['commonAvailableTimeSlots']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['commonAvailableTimeSlots'])) {
                throw new Error("Expected the field `commonAvailableTimeSlots` to be an array in the JSON data but got " + data['commonAvailableTimeSlots']);
            }
            // validate the optional field `commonAvailableTimeSlots` (array)
            for (const item of data['commonAvailableTimeSlots']) {
                EnterpriseTopazSidekickTimeSlot.validateJSON(item);
            };
        }
        if (data['invitees']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['invitees'])) {
                throw new Error("Expected the field `invitees` to be an array in the JSON data but got " + data['invitees']);
            }
            // validate the optional field `invitees` (array)
            for (const item of data['invitees']) {
                EnterpriseTopazSidekickPerson.validateJSON(item);
            };
        }
        // validate the optional field `requester`
        if (data['requester']) { // data not null
          EnterpriseTopazSidekickPerson.validateJSON(data['requester']);
        }
        // validate the optional field `scheduledMeeting`
        if (data['scheduledMeeting']) { // data not null
          EnterpriseTopazSidekickScheduledMeeting.validateJSON(data['scheduledMeeting']);
        }
        if (data['skippedInvitees']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['skippedInvitees'])) {
                throw new Error("Expected the field `skippedInvitees` to be an array in the JSON data but got " + data['skippedInvitees']);
            }
            // validate the optional field `skippedInvitees` (array)
            for (const item of data['skippedInvitees']) {
                EnterpriseTopazSidekickPerson.validateJSON(item);
            };
        }
        // validate the optional field `timeBoundaries`
        if (data['timeBoundaries']) { // data not null
          EnterpriseTopazSidekickTimeSlot.validateJSON(data['timeBoundaries']);
        }
        // ensure the json data is a string
        if (data['timezoneId'] && !(typeof data['timezoneId'] === 'string' || data['timezoneId'] instanceof String)) {
            throw new Error("Expected the field `timezoneId` to be a primitive type in the JSON string but got " + data['timezoneId']);
        }

        return true;
    }


}



/**
 * Slots when all attendees have availability.
 * @member {Array.<module:model/EnterpriseTopazSidekickTimeSlot>} commonAvailableTimeSlots
 */
EnterpriseTopazSidekickFindMeetingTimeCardProto.prototype['commonAvailableTimeSlots'] = undefined;

/**
 * Invitees to the event.
 * @member {Array.<module:model/EnterpriseTopazSidekickPerson>} invitees
 */
EnterpriseTopazSidekickFindMeetingTimeCardProto.prototype['invitees'] = undefined;

/**
 * @member {module:model/EnterpriseTopazSidekickPerson} requester
 */
EnterpriseTopazSidekickFindMeetingTimeCardProto.prototype['requester'] = undefined;

/**
 * @member {module:model/EnterpriseTopazSidekickScheduledMeeting} scheduledMeeting
 */
EnterpriseTopazSidekickFindMeetingTimeCardProto.prototype['scheduledMeeting'] = undefined;

/**
 * Invitees that have been skipped in the computation, most likely because they are groups.
 * @member {Array.<module:model/EnterpriseTopazSidekickPerson>} skippedInvitees
 */
EnterpriseTopazSidekickFindMeetingTimeCardProto.prototype['skippedInvitees'] = undefined;

/**
 * @member {module:model/EnterpriseTopazSidekickTimeSlot} timeBoundaries
 */
EnterpriseTopazSidekickFindMeetingTimeCardProto.prototype['timeBoundaries'] = undefined;

/**
 * Timezone ID.
 * @member {String} timezoneId
 */
EnterpriseTopazSidekickFindMeetingTimeCardProto.prototype['timezoneId'] = undefined;






export default EnterpriseTopazSidekickFindMeetingTimeCardProto;

