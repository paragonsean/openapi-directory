/**
 * Cloud Search API
 * Cloud Search provides cloud-based search capabilities over Google Workspace data. The Cloud Search API allows indexing of non-Google Workspace data into Cloud Search.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DataSource from './DataSource';
import DebugOptions from './DebugOptions';

/**
 * The UpdateDataSourceRequest model module.
 * @module model/UpdateDataSourceRequest
 * @version v1
 */
class UpdateDataSourceRequest {
    /**
     * Constructs a new <code>UpdateDataSourceRequest</code>.
     * @alias module:model/UpdateDataSourceRequest
     */
    constructor() { 
        
        UpdateDataSourceRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpdateDataSourceRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateDataSourceRequest} obj Optional instance to populate.
     * @return {module:model/UpdateDataSourceRequest} The populated <code>UpdateDataSourceRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateDataSourceRequest();

            if (data.hasOwnProperty('debugOptions')) {
                obj['debugOptions'] = DebugOptions.constructFromObject(data['debugOptions']);
            }
            if (data.hasOwnProperty('source')) {
                obj['source'] = DataSource.constructFromObject(data['source']);
            }
            if (data.hasOwnProperty('updateMask')) {
                obj['updateMask'] = ApiClient.convertToType(data['updateMask'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateDataSourceRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateDataSourceRequest</code>.
     */
    static validateJSON(data) {
        // validate the optional field `debugOptions`
        if (data['debugOptions']) { // data not null
          DebugOptions.validateJSON(data['debugOptions']);
        }
        // validate the optional field `source`
        if (data['source']) { // data not null
          DataSource.validateJSON(data['source']);
        }
        // ensure the json data is a string
        if (data['updateMask'] && !(typeof data['updateMask'] === 'string' || data['updateMask'] instanceof String)) {
            throw new Error("Expected the field `updateMask` to be a primitive type in the JSON string but got " + data['updateMask']);
        }

        return true;
    }


}



/**
 * @member {module:model/DebugOptions} debugOptions
 */
UpdateDataSourceRequest.prototype['debugOptions'] = undefined;

/**
 * @member {module:model/DataSource} source
 */
UpdateDataSourceRequest.prototype['source'] = undefined;

/**
 * Only applies to [`settings.datasources.patch`](https://developers.google.com/cloud-search/docs/reference/rest/v1/settings.datasources/patch). Update mask to control which fields to update. Example field paths: `name`, `displayName`. * If `update_mask` is non-empty, then only the fields specified in the `update_mask` are updated. * If you specify a field in the `update_mask`, but don't specify its value in the source, that field is cleared. * If the `update_mask` is not present or empty or has the value `*`, then all fields are updated.
 * @member {String} updateMask
 */
UpdateDataSourceRequest.prototype['updateMask'] = undefined;






export default UpdateDataSourceRequest;

