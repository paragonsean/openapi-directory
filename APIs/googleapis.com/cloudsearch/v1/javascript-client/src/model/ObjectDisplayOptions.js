/**
 * Cloud Search API
 * Cloud Search provides cloud-based search capabilities over Google Workspace data. The Cloud Search API allows indexing of non-Google Workspace data into Cloud Search.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Metaline from './Metaline';

/**
 * The ObjectDisplayOptions model module.
 * @module model/ObjectDisplayOptions
 * @version v1
 */
class ObjectDisplayOptions {
    /**
     * Constructs a new <code>ObjectDisplayOptions</code>.
     * The display options for an object.
     * @alias module:model/ObjectDisplayOptions
     */
    constructor() { 
        
        ObjectDisplayOptions.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ObjectDisplayOptions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ObjectDisplayOptions} obj Optional instance to populate.
     * @return {module:model/ObjectDisplayOptions} The populated <code>ObjectDisplayOptions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ObjectDisplayOptions();

            if (data.hasOwnProperty('metalines')) {
                obj['metalines'] = ApiClient.convertToType(data['metalines'], [Metaline]);
            }
            if (data.hasOwnProperty('objectDisplayLabel')) {
                obj['objectDisplayLabel'] = ApiClient.convertToType(data['objectDisplayLabel'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ObjectDisplayOptions</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ObjectDisplayOptions</code>.
     */
    static validateJSON(data) {
        if (data['metalines']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['metalines'])) {
                throw new Error("Expected the field `metalines` to be an array in the JSON data but got " + data['metalines']);
            }
            // validate the optional field `metalines` (array)
            for (const item of data['metalines']) {
                Metaline.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['objectDisplayLabel'] && !(typeof data['objectDisplayLabel'] === 'string' || data['objectDisplayLabel'] instanceof String)) {
            throw new Error("Expected the field `objectDisplayLabel` to be a primitive type in the JSON string but got " + data['objectDisplayLabel']);
        }

        return true;
    }


}



/**
 * Defines the properties that are displayed in the metalines of the search results. The property values are displayed in the order given here. If a property holds multiple values, all of the values are displayed before the next properties. For this reason, it is a good practice to specify singular properties before repeated properties in this list. All of the properties must set is_returnable to true. The maximum number of metalines is 3.
 * @member {Array.<module:model/Metaline>} metalines
 */
ObjectDisplayOptions.prototype['metalines'] = undefined;

/**
 * The user friendly label to display in the search result to indicate the type of the item. This is OPTIONAL; if not provided, an object label isn't displayed on the context line of the search results. The maximum length is 64 characters.
 * @member {String} objectDisplayLabel
 */
ObjectDisplayOptions.prototype['objectDisplayLabel'] = undefined;






export default ObjectDisplayOptions;

