/**
 * Cloud Search API
 * Cloud Search provides cloud-based search capabilities over Google Workspace data. The Cloud Search API allows indexing of non-Google Workspace data into Cloud Search.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Source model module.
 * @module model/Source
 * @version v1
 */
class Source {
    /**
     * Constructs a new <code>Source</code>.
     * Defines sources for the suggest/search APIs.
     * @alias module:model/Source
     */
    constructor() { 
        
        Source.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Source</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Source} obj Optional instance to populate.
     * @return {module:model/Source} The populated <code>Source</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Source();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('predefinedSource')) {
                obj['predefinedSource'] = ApiClient.convertToType(data['predefinedSource'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Source</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Source</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['predefinedSource'] && !(typeof data['predefinedSource'] === 'string' || data['predefinedSource'] instanceof String)) {
            throw new Error("Expected the field `predefinedSource` to be a primitive type in the JSON string but got " + data['predefinedSource']);
        }

        return true;
    }


}



/**
 * Source name for content indexed by the Indexing API.
 * @member {String} name
 */
Source.prototype['name'] = undefined;

/**
 * Predefined content source for Google Apps.
 * @member {module:model/Source.PredefinedSourceEnum} predefinedSource
 */
Source.prototype['predefinedSource'] = undefined;





/**
 * Allowed values for the <code>predefinedSource</code> property.
 * @enum {String}
 * @readonly
 */
Source['PredefinedSourceEnum'] = {

    /**
     * value: "NONE"
     * @const
     */
    "NONE": "NONE",

    /**
     * value: "QUERY_HISTORY"
     * @const
     */
    "QUERY_HISTORY": "QUERY_HISTORY",

    /**
     * value: "PERSON"
     * @const
     */
    "PERSON": "PERSON",

    /**
     * value: "GOOGLE_DRIVE"
     * @const
     */
    "GOOGLE_DRIVE": "GOOGLE_DRIVE",

    /**
     * value: "GOOGLE_GMAIL"
     * @const
     */
    "GOOGLE_GMAIL": "GOOGLE_GMAIL",

    /**
     * value: "GOOGLE_SITES"
     * @const
     */
    "GOOGLE_SITES": "GOOGLE_SITES",

    /**
     * value: "GOOGLE_GROUPS"
     * @const
     */
    "GOOGLE_GROUPS": "GOOGLE_GROUPS",

    /**
     * value: "GOOGLE_CALENDAR"
     * @const
     */
    "GOOGLE_CALENDAR": "GOOGLE_CALENDAR",

    /**
     * value: "GOOGLE_KEEP"
     * @const
     */
    "GOOGLE_KEEP": "GOOGLE_KEEP"
};



export default Source;

