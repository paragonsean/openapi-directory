/**
 * Cloud Search API
 * Cloud Search provides cloud-based search capabilities over Google Workspace data. The Cloud Search API allows indexing of non-Google Workspace data into Cloud Search.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EnterpriseTopazSidekickCommonPerson from './EnterpriseTopazSidekickCommonPerson';

/**
 * The EnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata model module.
 * @module model/EnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata
 * @version v1
 */
class EnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata {
    /**
     * Constructs a new <code>EnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata</code>.
     * Meta data for drive documents.
     * @alias module:model/EnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata
     */
    constructor() { 
        
        EnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata} obj Optional instance to populate.
     * @return {module:model/EnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata} The populated <code>EnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata();

            if (data.hasOwnProperty('documentId')) {
                obj['documentId'] = ApiClient.convertToType(data['documentId'], 'String');
            }
            if (data.hasOwnProperty('isPrivate')) {
                obj['isPrivate'] = ApiClient.convertToType(data['isPrivate'], 'Boolean');
            }
            if (data.hasOwnProperty('lastCommentTimeMs')) {
                obj['lastCommentTimeMs'] = ApiClient.convertToType(data['lastCommentTimeMs'], 'String');
            }
            if (data.hasOwnProperty('lastEditTimeMs')) {
                obj['lastEditTimeMs'] = ApiClient.convertToType(data['lastEditTimeMs'], 'String');
            }
            if (data.hasOwnProperty('lastModificationTimeMillis')) {
                obj['lastModificationTimeMillis'] = ApiClient.convertToType(data['lastModificationTimeMillis'], 'String');
            }
            if (data.hasOwnProperty('lastUpdatedTimeMs')) {
                obj['lastUpdatedTimeMs'] = ApiClient.convertToType(data['lastUpdatedTimeMs'], 'String');
            }
            if (data.hasOwnProperty('lastViewTimeMs')) {
                obj['lastViewTimeMs'] = ApiClient.convertToType(data['lastViewTimeMs'], 'String');
            }
            if (data.hasOwnProperty('owner')) {
                obj['owner'] = EnterpriseTopazSidekickCommonPerson.constructFromObject(data['owner']);
            }
            if (data.hasOwnProperty('scope')) {
                obj['scope'] = ApiClient.convertToType(data['scope'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['documentId'] && !(typeof data['documentId'] === 'string' || data['documentId'] instanceof String)) {
            throw new Error("Expected the field `documentId` to be a primitive type in the JSON string but got " + data['documentId']);
        }
        // ensure the json data is a string
        if (data['lastCommentTimeMs'] && !(typeof data['lastCommentTimeMs'] === 'string' || data['lastCommentTimeMs'] instanceof String)) {
            throw new Error("Expected the field `lastCommentTimeMs` to be a primitive type in the JSON string but got " + data['lastCommentTimeMs']);
        }
        // ensure the json data is a string
        if (data['lastEditTimeMs'] && !(typeof data['lastEditTimeMs'] === 'string' || data['lastEditTimeMs'] instanceof String)) {
            throw new Error("Expected the field `lastEditTimeMs` to be a primitive type in the JSON string but got " + data['lastEditTimeMs']);
        }
        // ensure the json data is a string
        if (data['lastModificationTimeMillis'] && !(typeof data['lastModificationTimeMillis'] === 'string' || data['lastModificationTimeMillis'] instanceof String)) {
            throw new Error("Expected the field `lastModificationTimeMillis` to be a primitive type in the JSON string but got " + data['lastModificationTimeMillis']);
        }
        // ensure the json data is a string
        if (data['lastUpdatedTimeMs'] && !(typeof data['lastUpdatedTimeMs'] === 'string' || data['lastUpdatedTimeMs'] instanceof String)) {
            throw new Error("Expected the field `lastUpdatedTimeMs` to be a primitive type in the JSON string but got " + data['lastUpdatedTimeMs']);
        }
        // ensure the json data is a string
        if (data['lastViewTimeMs'] && !(typeof data['lastViewTimeMs'] === 'string' || data['lastViewTimeMs'] instanceof String)) {
            throw new Error("Expected the field `lastViewTimeMs` to be a primitive type in the JSON string but got " + data['lastViewTimeMs']);
        }
        // validate the optional field `owner`
        if (data['owner']) { // data not null
          EnterpriseTopazSidekickCommonPerson.validateJSON(data['owner']);
        }
        // ensure the json data is a string
        if (data['scope'] && !(typeof data['scope'] === 'string' || data['scope'] instanceof String)) {
            throw new Error("Expected the field `scope` to be a primitive type in the JSON string but got " + data['scope']);
        }

        return true;
    }


}



/**
 * The drive document cosmo id. Client could use the id to build a URL to open a document. Please use Document.document_id.
 * @member {String} documentId
 */
EnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata.prototype['documentId'] = undefined;

/**
 * Additional field to identify whether a document is private since scope set to LIMITED can mean both that the doc is private or that it's shared with others. is_private indicates whether the doc is not shared with anyone except for the owner.
 * @member {Boolean} isPrivate
 */
EnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata.prototype['isPrivate'] = undefined;

/**
 * Timestamp of the most recent comment added to the document in milliseconds since epoch.
 * @member {String} lastCommentTimeMs
 */
EnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata.prototype['lastCommentTimeMs'] = undefined;

/**
 * Timestamp of the most recent edit from the current user in milliseconds since epoch.
 * @member {String} lastEditTimeMs
 */
EnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata.prototype['lastEditTimeMs'] = undefined;

/**
 * Last modification time of the document (independent of the user that modified it).
 * @member {String} lastModificationTimeMillis
 */
EnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata.prototype['lastModificationTimeMillis'] = undefined;

/**
 * Timestamp of the last updated time of the document in milliseconds since epoch.
 * @member {String} lastUpdatedTimeMs
 */
EnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata.prototype['lastUpdatedTimeMs'] = undefined;

/**
 * Timestamp of the most recent view from the current user in milliseconds since epoch.
 * @member {String} lastViewTimeMs
 */
EnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata.prototype['lastViewTimeMs'] = undefined;

/**
 * @member {module:model/EnterpriseTopazSidekickCommonPerson} owner
 */
EnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata.prototype['owner'] = undefined;

/**
 * ACL scope of the document which identifies the sharing status of the doc (e.g., limited, shared with link, team drive, ...).
 * @member {module:model/EnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata.ScopeEnum} scope
 */
EnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata.prototype['scope'] = undefined;





/**
 * Allowed values for the <code>scope</code> property.
 * @enum {String}
 * @readonly
 */
EnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata['ScopeEnum'] = {

    /**
     * value: "UNKNOWN_DOCUMENT_SCOPE"
     * @const
     */
    "UNKNOWN_DOCUMENT_SCOPE": "UNKNOWN_DOCUMENT_SCOPE",

    /**
     * value: "LIMITED"
     * @const
     */
    "LIMITED": "LIMITED",

    /**
     * value: "DASHER_DOMAIN_WITH_LINK"
     * @const
     */
    "DASHER_DOMAIN_WITH_LINK": "DASHER_DOMAIN_WITH_LINK",

    /**
     * value: "DASHER_DOMAIN"
     * @const
     */
    "DASHER_DOMAIN": "DASHER_DOMAIN",

    /**
     * value: "PUBLIC_WITH_LINK"
     * @const
     */
    "PUBLIC_WITH_LINK": "PUBLIC_WITH_LINK",

    /**
     * value: "PUBLIC"
     * @const
     */
    "PUBLIC": "PUBLIC",

    /**
     * value: "TEAM_DRIVE"
     * @const
     */
    "TEAM_DRIVE": "TEAM_DRIVE"
};



export default EnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata;

