/**
 * Cloud Search API
 * Cloud Search provides cloud-based search capabilities over Google Workspace data. The Cloud Search API allows indexing of non-Google Workspace data into Cloud Search.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Content from './Content';
import Context from './Context';

/**
 * The ThirdPartyGenericCard model module.
 * @module model/ThirdPartyGenericCard
 * @version v1
 */
class ThirdPartyGenericCard {
    /**
     * Constructs a new <code>ThirdPartyGenericCard</code>.
     * @alias module:model/ThirdPartyGenericCard
     */
    constructor() { 
        
        ThirdPartyGenericCard.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ThirdPartyGenericCard</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ThirdPartyGenericCard} obj Optional instance to populate.
     * @return {module:model/ThirdPartyGenericCard} The populated <code>ThirdPartyGenericCard</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ThirdPartyGenericCard();

            if (data.hasOwnProperty('cardId')) {
                obj['cardId'] = ApiClient.convertToType(data['cardId'], 'String');
            }
            if (data.hasOwnProperty('category')) {
                obj['category'] = ApiClient.convertToType(data['category'], 'String');
            }
            if (data.hasOwnProperty('content')) {
                obj['content'] = Content.constructFromObject(data['content']);
            }
            if (data.hasOwnProperty('context')) {
                obj['context'] = Context.constructFromObject(data['context']);
            }
            if (data.hasOwnProperty('isDismissible')) {
                obj['isDismissible'] = ApiClient.convertToType(data['isDismissible'], 'Boolean');
            }
            if (data.hasOwnProperty('priority')) {
                obj['priority'] = ApiClient.convertToType(data['priority'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ThirdPartyGenericCard</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ThirdPartyGenericCard</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['cardId'] && !(typeof data['cardId'] === 'string' || data['cardId'] instanceof String)) {
            throw new Error("Expected the field `cardId` to be a primitive type in the JSON string but got " + data['cardId']);
        }
        // ensure the json data is a string
        if (data['category'] && !(typeof data['category'] === 'string' || data['category'] instanceof String)) {
            throw new Error("Expected the field `category` to be a primitive type in the JSON string but got " + data['category']);
        }
        // validate the optional field `content`
        if (data['content']) { // data not null
          Content.validateJSON(data['content']);
        }
        // validate the optional field `context`
        if (data['context']) { // data not null
          Context.validateJSON(data['context']);
        }

        return true;
    }


}



/**
 * Unique identifier for the card.
 * @member {String} cardId
 */
ThirdPartyGenericCard.prototype['cardId'] = undefined;

/**
 * Category that the card belongs to.
 * @member {String} category
 */
ThirdPartyGenericCard.prototype['category'] = undefined;

/**
 * @member {module:model/Content} content
 */
ThirdPartyGenericCard.prototype['content'] = undefined;

/**
 * @member {module:model/Context} context
 */
ThirdPartyGenericCard.prototype['context'] = undefined;

/**
 * Whether the card can be dismissed.
 * @member {Boolean} isDismissible
 */
ThirdPartyGenericCard.prototype['isDismissible'] = undefined;

/**
 * Priority of the card, where 0 is the highest priority.
 * @member {Number} priority
 */
ThirdPartyGenericCard.prototype['priority'] = undefined;






export default ThirdPartyGenericCard;

