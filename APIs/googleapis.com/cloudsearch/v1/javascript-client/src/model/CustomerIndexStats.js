/**
 * Cloud Search API
 * Cloud Search provides cloud-based search capabilities over Google Workspace data. The Cloud Search API allows indexing of non-Google Workspace data into Cloud Search.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ItemCountByStatus from './ItemCountByStatus';
import ModelDate from './ModelDate';

/**
 * The CustomerIndexStats model module.
 * @module model/CustomerIndexStats
 * @version v1
 */
class CustomerIndexStats {
    /**
     * Constructs a new <code>CustomerIndexStats</code>.
     * Aggregation of items by status code as of the specified date.
     * @alias module:model/CustomerIndexStats
     */
    constructor() { 
        
        CustomerIndexStats.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CustomerIndexStats</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CustomerIndexStats} obj Optional instance to populate.
     * @return {module:model/CustomerIndexStats} The populated <code>CustomerIndexStats</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CustomerIndexStats();

            if (data.hasOwnProperty('date')) {
                obj['date'] = ModelDate.constructFromObject(data['date']);
            }
            if (data.hasOwnProperty('itemCountByStatus')) {
                obj['itemCountByStatus'] = ApiClient.convertToType(data['itemCountByStatus'], [ItemCountByStatus]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CustomerIndexStats</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CustomerIndexStats</code>.
     */
    static validateJSON(data) {
        // validate the optional field `date`
        if (data['date']) { // data not null
          ModelDate.validateJSON(data['date']);
        }
        if (data['itemCountByStatus']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['itemCountByStatus'])) {
                throw new Error("Expected the field `itemCountByStatus` to be an array in the JSON data but got " + data['itemCountByStatus']);
            }
            // validate the optional field `itemCountByStatus` (array)
            for (const item of data['itemCountByStatus']) {
                ItemCountByStatus.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {module:model/ModelDate} date
 */
CustomerIndexStats.prototype['date'] = undefined;

/**
 * Number of items aggregrated by status code.
 * @member {Array.<module:model/ItemCountByStatus>} itemCountByStatus
 */
CustomerIndexStats.prototype['itemCountByStatus'] = undefined;






export default CustomerIndexStats;

