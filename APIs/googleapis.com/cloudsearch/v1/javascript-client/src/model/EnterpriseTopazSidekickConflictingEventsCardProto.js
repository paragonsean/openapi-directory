/**
 * Cloud Search API
 * Cloud Search provides cloud-based search capabilities over Google Workspace data. The Cloud Search API allows indexing of non-Google Workspace data into Cloud Search.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EnterpriseTopazSidekickAgendaEntry from './EnterpriseTopazSidekickAgendaEntry';

/**
 * The EnterpriseTopazSidekickConflictingEventsCardProto model module.
 * @module model/EnterpriseTopazSidekickConflictingEventsCardProto
 * @version v1
 */
class EnterpriseTopazSidekickConflictingEventsCardProto {
    /**
     * Constructs a new <code>EnterpriseTopazSidekickConflictingEventsCardProto</code>.
     * Conflicting meetings card proto.
     * @alias module:model/EnterpriseTopazSidekickConflictingEventsCardProto
     */
    constructor() { 
        
        EnterpriseTopazSidekickConflictingEventsCardProto.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EnterpriseTopazSidekickConflictingEventsCardProto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EnterpriseTopazSidekickConflictingEventsCardProto} obj Optional instance to populate.
     * @return {module:model/EnterpriseTopazSidekickConflictingEventsCardProto} The populated <code>EnterpriseTopazSidekickConflictingEventsCardProto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EnterpriseTopazSidekickConflictingEventsCardProto();

            if (data.hasOwnProperty('conflictingEvent')) {
                obj['conflictingEvent'] = ApiClient.convertToType(data['conflictingEvent'], [EnterpriseTopazSidekickAgendaEntry]);
            }
            if (data.hasOwnProperty('mainEvent')) {
                obj['mainEvent'] = EnterpriseTopazSidekickAgendaEntry.constructFromObject(data['mainEvent']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EnterpriseTopazSidekickConflictingEventsCardProto</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EnterpriseTopazSidekickConflictingEventsCardProto</code>.
     */
    static validateJSON(data) {
        if (data['conflictingEvent']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['conflictingEvent'])) {
                throw new Error("Expected the field `conflictingEvent` to be an array in the JSON data but got " + data['conflictingEvent']);
            }
            // validate the optional field `conflictingEvent` (array)
            for (const item of data['conflictingEvent']) {
                EnterpriseTopazSidekickAgendaEntry.validateJSON(item);
            };
        }
        // validate the optional field `mainEvent`
        if (data['mainEvent']) { // data not null
          EnterpriseTopazSidekickAgendaEntry.validateJSON(data['mainEvent']);
        }

        return true;
    }


}



/**
 * All the events that conflict with main_event.
 * @member {Array.<module:model/EnterpriseTopazSidekickAgendaEntry>} conflictingEvent
 */
EnterpriseTopazSidekickConflictingEventsCardProto.prototype['conflictingEvent'] = undefined;

/**
 * @member {module:model/EnterpriseTopazSidekickAgendaEntry} mainEvent
 */
EnterpriseTopazSidekickConflictingEventsCardProto.prototype['mainEvent'] = undefined;






export default EnterpriseTopazSidekickConflictingEventsCardProto;

