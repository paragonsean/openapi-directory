/**
 * Cloud Search API
 * Cloud Search provides cloud-based search capabilities over Google Workspace data. The Cloud Search API allows indexing of non-Google Workspace data into Cloud Search.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ModelDate from './ModelDate';

/**
 * The CustomerSearchApplicationStats model module.
 * @module model/CustomerSearchApplicationStats
 * @version v1
 */
class CustomerSearchApplicationStats {
    /**
     * Constructs a new <code>CustomerSearchApplicationStats</code>.
     * Search application stats for a customer for the given date.
     * @alias module:model/CustomerSearchApplicationStats
     */
    constructor() { 
        
        CustomerSearchApplicationStats.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CustomerSearchApplicationStats</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CustomerSearchApplicationStats} obj Optional instance to populate.
     * @return {module:model/CustomerSearchApplicationStats} The populated <code>CustomerSearchApplicationStats</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CustomerSearchApplicationStats();

            if (data.hasOwnProperty('count')) {
                obj['count'] = ApiClient.convertToType(data['count'], 'String');
            }
            if (data.hasOwnProperty('date')) {
                obj['date'] = ModelDate.constructFromObject(data['date']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CustomerSearchApplicationStats</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CustomerSearchApplicationStats</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['count'] && !(typeof data['count'] === 'string' || data['count'] instanceof String)) {
            throw new Error("Expected the field `count` to be a primitive type in the JSON string but got " + data['count']);
        }
        // validate the optional field `date`
        if (data['date']) { // data not null
          ModelDate.validateJSON(data['date']);
        }

        return true;
    }


}



/**
 * The count of search applications for the date.
 * @member {String} count
 */
CustomerSearchApplicationStats.prototype['count'] = undefined;

/**
 * @member {module:model/ModelDate} date
 */
CustomerSearchApplicationStats.prototype['date'] = undefined;






export default CustomerSearchApplicationStats;

