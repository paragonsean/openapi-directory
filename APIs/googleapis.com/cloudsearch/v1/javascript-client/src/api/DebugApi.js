/**
 * Cloud Search API
 * Cloud Search provides cloud-based search capabilities over Google Workspace data. The Cloud Search API allows indexing of non-Google Workspace data into Cloud Search.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CheckAccessResponse from '../model/CheckAccessResponse';
import ListItemNamesForUnmappedIdentityResponse from '../model/ListItemNamesForUnmappedIdentityResponse';
import ListUnmappedIdentitiesResponse from '../model/ListUnmappedIdentitiesResponse';
import Principal from '../model/Principal';
import SearchItemsByViewUrlRequest from '../model/SearchItemsByViewUrlRequest';
import SearchItemsByViewUrlResponse from '../model/SearchItemsByViewUrlResponse';

/**
* Debug service.
* @module api/DebugApi
* @version v1
*/
export default class DebugApi {

    /**
    * Constructs a new DebugApi. 
    * @alias module:api/DebugApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the cloudsearchDebugDatasourcesItemsCheckAccess operation.
     * @callback module:api/DebugApi~cloudsearchDebugDatasourcesItemsCheckAccessCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CheckAccessResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Checks whether an item is accessible by specified principal. Principal must be a user; groups and domain values aren't supported. **Note:** This API requires an admin account to execute.
     * @param {String} name Item name, format: datasources/{source_id}/items/{item_id}
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Boolean} [debugOptionsEnableDebugging] If you are asked by Google to help with debugging, set this field. Otherwise, ignore this field.
     * @param {module:model/Principal} [principal] 
     * @param {module:api/DebugApi~cloudsearchDebugDatasourcesItemsCheckAccessCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CheckAccessResponse}
     */
    cloudsearchDebugDatasourcesItemsCheckAccess(name, opts, callback) {
      opts = opts || {};
      let postBody = opts['principal'];
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling cloudsearchDebugDatasourcesItemsCheckAccess");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'debugOptions.enableDebugging': opts['debugOptionsEnableDebugging']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CheckAccessResponse;
      return this.apiClient.callApi(
        '/v1/debug/{name}:checkAccess', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the cloudsearchDebugDatasourcesItemsSearchByViewUrl operation.
     * @callback module:api/DebugApi~cloudsearchDebugDatasourcesItemsSearchByViewUrlCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SearchItemsByViewUrlResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Fetches the item whose viewUrl exactly matches that of the URL provided in the request. **Note:** This API requires an admin account to execute.
     * @param {String} name Source name, format: datasources/{source_id}
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/SearchItemsByViewUrlRequest} [searchItemsByViewUrlRequest] 
     * @param {module:api/DebugApi~cloudsearchDebugDatasourcesItemsSearchByViewUrlCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SearchItemsByViewUrlResponse}
     */
    cloudsearchDebugDatasourcesItemsSearchByViewUrl(name, opts, callback) {
      opts = opts || {};
      let postBody = opts['searchItemsByViewUrlRequest'];
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling cloudsearchDebugDatasourcesItemsSearchByViewUrl");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = SearchItemsByViewUrlResponse;
      return this.apiClient.callApi(
        '/v1/debug/{name}/items:searchByViewUrl', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the cloudsearchDebugIdentitysourcesItemsListForunmappedidentity operation.
     * @callback module:api/DebugApi~cloudsearchDebugIdentitysourcesItemsListForunmappedidentityCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListItemNamesForUnmappedIdentityResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists names of items associated with an unmapped identity. **Note:** This API requires an admin account to execute.
     * @param {String} parent The name of the identity source, in the following format: identitysources/{source_id}}
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Boolean} [debugOptionsEnableDebugging] If you are asked by Google to help with debugging, set this field. Otherwise, ignore this field.
     * @param {String} [groupResourceName] 
     * @param {Number} [pageSize] Maximum number of items to fetch in a request. Defaults to 100.
     * @param {String} [pageToken] The next_page_token value returned from a previous List request, if any.
     * @param {String} [userResourceName] 
     * @param {module:api/DebugApi~cloudsearchDebugIdentitysourcesItemsListForunmappedidentityCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListItemNamesForUnmappedIdentityResponse}
     */
    cloudsearchDebugIdentitysourcesItemsListForunmappedidentity(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling cloudsearchDebugIdentitysourcesItemsListForunmappedidentity");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'debugOptions.enableDebugging': opts['debugOptionsEnableDebugging'],
        'groupResourceName': opts['groupResourceName'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken'],
        'userResourceName': opts['userResourceName']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListItemNamesForUnmappedIdentityResponse;
      return this.apiClient.callApi(
        '/v1/debug/{parent}/items:forunmappedidentity', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the cloudsearchDebugIdentitysourcesUnmappedidsList operation.
     * @callback module:api/DebugApi~cloudsearchDebugIdentitysourcesUnmappedidsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListUnmappedIdentitiesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists unmapped user identities for an identity source. **Note:** This API requires an admin account to execute.
     * @param {String} parent The name of the identity source, in the following format: identitysources/{source_id}
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Boolean} [debugOptionsEnableDebugging] If you are asked by Google to help with debugging, set this field. Otherwise, ignore this field.
     * @param {Number} [pageSize] Maximum number of items to fetch in a request. Defaults to 100.
     * @param {String} [pageToken] The next_page_token value returned from a previous List request, if any.
     * @param {module:model/String} [resolutionStatusCode] Limit users selection to this status.
     * @param {module:api/DebugApi~cloudsearchDebugIdentitysourcesUnmappedidsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListUnmappedIdentitiesResponse}
     */
    cloudsearchDebugIdentitysourcesUnmappedidsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling cloudsearchDebugIdentitysourcesUnmappedidsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'debugOptions.enableDebugging': opts['debugOptionsEnableDebugging'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken'],
        'resolutionStatusCode': opts['resolutionStatusCode']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListUnmappedIdentitiesResponse;
      return this.apiClient.callApi(
        '/v1/debug/{parent}/unmappedids', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
