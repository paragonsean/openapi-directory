/**
 * Cloud Search API
 * Cloud Search provides cloud-based search capabilities over Google Workspace data. The Cloud Search API allows indexing of non-Google Workspace data into Cloud Search.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata::OAIEnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata::OAIEnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata() {
    this->initializeModel();
}

OAIEnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata::~OAIEnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata() {}

void OAIEnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata::initializeModel() {

    m_document_id_isSet = false;
    m_document_id_isValid = false;

    m_is_private_isSet = false;
    m_is_private_isValid = false;

    m_last_comment_time_ms_isSet = false;
    m_last_comment_time_ms_isValid = false;

    m_last_edit_time_ms_isSet = false;
    m_last_edit_time_ms_isValid = false;

    m_last_modification_time_millis_isSet = false;
    m_last_modification_time_millis_isValid = false;

    m_last_updated_time_ms_isSet = false;
    m_last_updated_time_ms_isValid = false;

    m_last_view_time_ms_isSet = false;
    m_last_view_time_ms_isValid = false;

    m_owner_isSet = false;
    m_owner_isValid = false;

    m_scope_isSet = false;
    m_scope_isValid = false;
}

void OAIEnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata::fromJsonObject(QJsonObject json) {

    m_document_id_isValid = ::OpenAPI::fromJsonValue(m_document_id, json[QString("documentId")]);
    m_document_id_isSet = !json[QString("documentId")].isNull() && m_document_id_isValid;

    m_is_private_isValid = ::OpenAPI::fromJsonValue(m_is_private, json[QString("isPrivate")]);
    m_is_private_isSet = !json[QString("isPrivate")].isNull() && m_is_private_isValid;

    m_last_comment_time_ms_isValid = ::OpenAPI::fromJsonValue(m_last_comment_time_ms, json[QString("lastCommentTimeMs")]);
    m_last_comment_time_ms_isSet = !json[QString("lastCommentTimeMs")].isNull() && m_last_comment_time_ms_isValid;

    m_last_edit_time_ms_isValid = ::OpenAPI::fromJsonValue(m_last_edit_time_ms, json[QString("lastEditTimeMs")]);
    m_last_edit_time_ms_isSet = !json[QString("lastEditTimeMs")].isNull() && m_last_edit_time_ms_isValid;

    m_last_modification_time_millis_isValid = ::OpenAPI::fromJsonValue(m_last_modification_time_millis, json[QString("lastModificationTimeMillis")]);
    m_last_modification_time_millis_isSet = !json[QString("lastModificationTimeMillis")].isNull() && m_last_modification_time_millis_isValid;

    m_last_updated_time_ms_isValid = ::OpenAPI::fromJsonValue(m_last_updated_time_ms, json[QString("lastUpdatedTimeMs")]);
    m_last_updated_time_ms_isSet = !json[QString("lastUpdatedTimeMs")].isNull() && m_last_updated_time_ms_isValid;

    m_last_view_time_ms_isValid = ::OpenAPI::fromJsonValue(m_last_view_time_ms, json[QString("lastViewTimeMs")]);
    m_last_view_time_ms_isSet = !json[QString("lastViewTimeMs")].isNull() && m_last_view_time_ms_isValid;

    m_owner_isValid = ::OpenAPI::fromJsonValue(m_owner, json[QString("owner")]);
    m_owner_isSet = !json[QString("owner")].isNull() && m_owner_isValid;

    m_scope_isValid = ::OpenAPI::fromJsonValue(m_scope, json[QString("scope")]);
    m_scope_isSet = !json[QString("scope")].isNull() && m_scope_isValid;
}

QString OAIEnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata::asJsonObject() const {
    QJsonObject obj;
    if (m_document_id_isSet) {
        obj.insert(QString("documentId"), ::OpenAPI::toJsonValue(m_document_id));
    }
    if (m_is_private_isSet) {
        obj.insert(QString("isPrivate"), ::OpenAPI::toJsonValue(m_is_private));
    }
    if (m_last_comment_time_ms_isSet) {
        obj.insert(QString("lastCommentTimeMs"), ::OpenAPI::toJsonValue(m_last_comment_time_ms));
    }
    if (m_last_edit_time_ms_isSet) {
        obj.insert(QString("lastEditTimeMs"), ::OpenAPI::toJsonValue(m_last_edit_time_ms));
    }
    if (m_last_modification_time_millis_isSet) {
        obj.insert(QString("lastModificationTimeMillis"), ::OpenAPI::toJsonValue(m_last_modification_time_millis));
    }
    if (m_last_updated_time_ms_isSet) {
        obj.insert(QString("lastUpdatedTimeMs"), ::OpenAPI::toJsonValue(m_last_updated_time_ms));
    }
    if (m_last_view_time_ms_isSet) {
        obj.insert(QString("lastViewTimeMs"), ::OpenAPI::toJsonValue(m_last_view_time_ms));
    }
    if (m_owner.isSet()) {
        obj.insert(QString("owner"), ::OpenAPI::toJsonValue(m_owner));
    }
    if (m_scope_isSet) {
        obj.insert(QString("scope"), ::OpenAPI::toJsonValue(m_scope));
    }
    return obj;
}

QString OAIEnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata::getDocumentId() const {
    return m_document_id;
}
void OAIEnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata::setDocumentId(const QString &document_id) {
    m_document_id = document_id;
    m_document_id_isSet = true;
}

bool OAIEnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata::is_document_id_Set() const{
    return m_document_id_isSet;
}

bool OAIEnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata::is_document_id_Valid() const{
    return m_document_id_isValid;
}

bool OAIEnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata::isIsPrivate() const {
    return m_is_private;
}
void OAIEnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata::setIsPrivate(const bool &is_private) {
    m_is_private = is_private;
    m_is_private_isSet = true;
}

bool OAIEnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata::is_is_private_Set() const{
    return m_is_private_isSet;
}

bool OAIEnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata::is_is_private_Valid() const{
    return m_is_private_isValid;
}

QString OAIEnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata::getLastCommentTimeMs() const {
    return m_last_comment_time_ms;
}
void OAIEnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata::setLastCommentTimeMs(const QString &last_comment_time_ms) {
    m_last_comment_time_ms = last_comment_time_ms;
    m_last_comment_time_ms_isSet = true;
}

bool OAIEnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata::is_last_comment_time_ms_Set() const{
    return m_last_comment_time_ms_isSet;
}

bool OAIEnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata::is_last_comment_time_ms_Valid() const{
    return m_last_comment_time_ms_isValid;
}

QString OAIEnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata::getLastEditTimeMs() const {
    return m_last_edit_time_ms;
}
void OAIEnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata::setLastEditTimeMs(const QString &last_edit_time_ms) {
    m_last_edit_time_ms = last_edit_time_ms;
    m_last_edit_time_ms_isSet = true;
}

bool OAIEnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata::is_last_edit_time_ms_Set() const{
    return m_last_edit_time_ms_isSet;
}

bool OAIEnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata::is_last_edit_time_ms_Valid() const{
    return m_last_edit_time_ms_isValid;
}

QString OAIEnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata::getLastModificationTimeMillis() const {
    return m_last_modification_time_millis;
}
void OAIEnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata::setLastModificationTimeMillis(const QString &last_modification_time_millis) {
    m_last_modification_time_millis = last_modification_time_millis;
    m_last_modification_time_millis_isSet = true;
}

bool OAIEnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata::is_last_modification_time_millis_Set() const{
    return m_last_modification_time_millis_isSet;
}

bool OAIEnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata::is_last_modification_time_millis_Valid() const{
    return m_last_modification_time_millis_isValid;
}

QString OAIEnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata::getLastUpdatedTimeMs() const {
    return m_last_updated_time_ms;
}
void OAIEnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata::setLastUpdatedTimeMs(const QString &last_updated_time_ms) {
    m_last_updated_time_ms = last_updated_time_ms;
    m_last_updated_time_ms_isSet = true;
}

bool OAIEnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata::is_last_updated_time_ms_Set() const{
    return m_last_updated_time_ms_isSet;
}

bool OAIEnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata::is_last_updated_time_ms_Valid() const{
    return m_last_updated_time_ms_isValid;
}

QString OAIEnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata::getLastViewTimeMs() const {
    return m_last_view_time_ms;
}
void OAIEnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata::setLastViewTimeMs(const QString &last_view_time_ms) {
    m_last_view_time_ms = last_view_time_ms;
    m_last_view_time_ms_isSet = true;
}

bool OAIEnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata::is_last_view_time_ms_Set() const{
    return m_last_view_time_ms_isSet;
}

bool OAIEnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata::is_last_view_time_ms_Valid() const{
    return m_last_view_time_ms_isValid;
}

OAIEnterpriseTopazSidekickCommonPerson OAIEnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata::getOwner() const {
    return m_owner;
}
void OAIEnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata::setOwner(const OAIEnterpriseTopazSidekickCommonPerson &owner) {
    m_owner = owner;
    m_owner_isSet = true;
}

bool OAIEnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata::is_owner_Set() const{
    return m_owner_isSet;
}

bool OAIEnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata::is_owner_Valid() const{
    return m_owner_isValid;
}

QString OAIEnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata::getScope() const {
    return m_scope;
}
void OAIEnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata::setScope(const QString &scope) {
    m_scope = scope;
    m_scope_isSet = true;
}

bool OAIEnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata::is_scope_Set() const{
    return m_scope_isSet;
}

bool OAIEnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata::is_scope_Valid() const{
    return m_scope_isValid;
}

bool OAIEnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_document_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_private_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_comment_time_ms_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_edit_time_ms_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modification_time_millis_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_updated_time_ms_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_view_time_ms_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_owner.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_scope_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
