/**
 * Cloud Search API
 * Cloud Search provides cloud-based search capabilities over Google Workspace data. The Cloud Search API allows indexing of non-Google Workspace data into Cloud Search.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPushItem.h
 *
 * Represents an item to be pushed to the indexing queue.
 */

#ifndef OAIPushItem_H
#define OAIPushItem_H

#include <QJsonObject>

#include "OAIRepositoryError.h"
#include <QByteArray>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRepositoryError;

class OAIPushItem : public OAIObject {
public:
    OAIPushItem();
    OAIPushItem(QString json);
    ~OAIPushItem() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getContentHash() const;
    void setContentHash(const QString &content_hash);
    bool is_content_hash_Set() const;
    bool is_content_hash_Valid() const;

    QString getMetadataHash() const;
    void setMetadataHash(const QString &metadata_hash);
    bool is_metadata_hash_Set() const;
    bool is_metadata_hash_Valid() const;

    QByteArray getPayload() const;
    void setPayload(const QByteArray &payload);
    bool is_payload_Set() const;
    bool is_payload_Valid() const;

    QString getQueue() const;
    void setQueue(const QString &queue);
    bool is_queue_Set() const;
    bool is_queue_Valid() const;

    OAIRepositoryError getRepositoryError() const;
    void setRepositoryError(const OAIRepositoryError &repository_error);
    bool is_repository_error_Set() const;
    bool is_repository_error_Valid() const;

    QString getStructuredDataHash() const;
    void setStructuredDataHash(const QString &structured_data_hash);
    bool is_structured_data_hash_Set() const;
    bool is_structured_data_hash_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_content_hash;
    bool m_content_hash_isSet;
    bool m_content_hash_isValid;

    QString m_metadata_hash;
    bool m_metadata_hash_isSet;
    bool m_metadata_hash_isValid;

    QByteArray m_payload;
    bool m_payload_isSet;
    bool m_payload_isValid;

    QString m_queue;
    bool m_queue_isSet;
    bool m_queue_isValid;

    OAIRepositoryError m_repository_error;
    bool m_repository_error_isSet;
    bool m_repository_error_isValid;

    QString m_structured_data_hash;
    bool m_structured_data_hash_isSet;
    bool m_structured_data_hash_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPushItem)

#endif // OAIPushItem_H
