/**
 * Cloud Search API
 * Cloud Search provides cloud-based search capabilities over Google Workspace data. The Cloud Search API allows indexing of non-Google Workspace data into Cloud Search.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGSuitePrincipal.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGSuitePrincipal::OAIGSuitePrincipal(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGSuitePrincipal::OAIGSuitePrincipal() {
    this->initializeModel();
}

OAIGSuitePrincipal::~OAIGSuitePrincipal() {}

void OAIGSuitePrincipal::initializeModel() {

    m_gsuite_domain_isSet = false;
    m_gsuite_domain_isValid = false;

    m_gsuite_group_email_isSet = false;
    m_gsuite_group_email_isValid = false;

    m_gsuite_user_email_isSet = false;
    m_gsuite_user_email_isValid = false;
}

void OAIGSuitePrincipal::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGSuitePrincipal::fromJsonObject(QJsonObject json) {

    m_gsuite_domain_isValid = ::OpenAPI::fromJsonValue(m_gsuite_domain, json[QString("gsuiteDomain")]);
    m_gsuite_domain_isSet = !json[QString("gsuiteDomain")].isNull() && m_gsuite_domain_isValid;

    m_gsuite_group_email_isValid = ::OpenAPI::fromJsonValue(m_gsuite_group_email, json[QString("gsuiteGroupEmail")]);
    m_gsuite_group_email_isSet = !json[QString("gsuiteGroupEmail")].isNull() && m_gsuite_group_email_isValid;

    m_gsuite_user_email_isValid = ::OpenAPI::fromJsonValue(m_gsuite_user_email, json[QString("gsuiteUserEmail")]);
    m_gsuite_user_email_isSet = !json[QString("gsuiteUserEmail")].isNull() && m_gsuite_user_email_isValid;
}

QString OAIGSuitePrincipal::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGSuitePrincipal::asJsonObject() const {
    QJsonObject obj;
    if (m_gsuite_domain_isSet) {
        obj.insert(QString("gsuiteDomain"), ::OpenAPI::toJsonValue(m_gsuite_domain));
    }
    if (m_gsuite_group_email_isSet) {
        obj.insert(QString("gsuiteGroupEmail"), ::OpenAPI::toJsonValue(m_gsuite_group_email));
    }
    if (m_gsuite_user_email_isSet) {
        obj.insert(QString("gsuiteUserEmail"), ::OpenAPI::toJsonValue(m_gsuite_user_email));
    }
    return obj;
}

bool OAIGSuitePrincipal::isGsuiteDomain() const {
    return m_gsuite_domain;
}
void OAIGSuitePrincipal::setGsuiteDomain(const bool &gsuite_domain) {
    m_gsuite_domain = gsuite_domain;
    m_gsuite_domain_isSet = true;
}

bool OAIGSuitePrincipal::is_gsuite_domain_Set() const{
    return m_gsuite_domain_isSet;
}

bool OAIGSuitePrincipal::is_gsuite_domain_Valid() const{
    return m_gsuite_domain_isValid;
}

QString OAIGSuitePrincipal::getGsuiteGroupEmail() const {
    return m_gsuite_group_email;
}
void OAIGSuitePrincipal::setGsuiteGroupEmail(const QString &gsuite_group_email) {
    m_gsuite_group_email = gsuite_group_email;
    m_gsuite_group_email_isSet = true;
}

bool OAIGSuitePrincipal::is_gsuite_group_email_Set() const{
    return m_gsuite_group_email_isSet;
}

bool OAIGSuitePrincipal::is_gsuite_group_email_Valid() const{
    return m_gsuite_group_email_isValid;
}

QString OAIGSuitePrincipal::getGsuiteUserEmail() const {
    return m_gsuite_user_email;
}
void OAIGSuitePrincipal::setGsuiteUserEmail(const QString &gsuite_user_email) {
    m_gsuite_user_email = gsuite_user_email;
    m_gsuite_user_email_isSet = true;
}

bool OAIGSuitePrincipal::is_gsuite_user_email_Set() const{
    return m_gsuite_user_email_isSet;
}

bool OAIGSuitePrincipal::is_gsuite_user_email_Valid() const{
    return m_gsuite_user_email_isValid;
}

bool OAIGSuitePrincipal::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_gsuite_domain_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gsuite_group_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gsuite_user_email_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGSuitePrincipal::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
