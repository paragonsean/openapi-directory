/**
 * Cloud Search API
 * Cloud Search provides cloud-based search capabilities over Google Workspace data. The Cloud Search API allows indexing of non-Google Workspace data into Cloud Search.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEnterpriseTopazSidekickCommonDocument.h
 *
 * Representation of a document. NEXT_TAG: 15
 */

#ifndef OAIEnterpriseTopazSidekickCommonDocument_H
#define OAIEnterpriseTopazSidekickCommonDocument_H

#include <QJsonObject>

#include "OAIEnterpriseTopazSidekickCommonDebugInfo.h"
#include "OAIEnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata.h"
#include "OAIEnterpriseTopazSidekickCommonDocumentJustification.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIEnterpriseTopazSidekickCommonDebugInfo;
class OAIEnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata;
class OAIEnterpriseTopazSidekickCommonDocumentJustification;

class OAIEnterpriseTopazSidekickCommonDocument : public OAIObject {
public:
    OAIEnterpriseTopazSidekickCommonDocument();
    OAIEnterpriseTopazSidekickCommonDocument(QString json);
    ~OAIEnterpriseTopazSidekickCommonDocument() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccessType() const;
    void setAccessType(const QString &access_type);
    bool is_access_type_Set() const;
    bool is_access_type_Valid() const;

    OAIEnterpriseTopazSidekickCommonDebugInfo getDebugInfo() const;
    void setDebugInfo(const OAIEnterpriseTopazSidekickCommonDebugInfo &debug_info);
    bool is_debug_info_Set() const;
    bool is_debug_info_Valid() const;

    QString getDocumentId() const;
    void setDocumentId(const QString &document_id);
    bool is_document_id_Set() const;
    bool is_document_id_Valid() const;

    OAIEnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata getDriveDocumentMetadata() const;
    void setDriveDocumentMetadata(const OAIEnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata &drive_document_metadata);
    bool is_drive_document_metadata_Set() const;
    bool is_drive_document_metadata_Valid() const;

    QString getGenericUrl() const;
    void setGenericUrl(const QString &generic_url);
    bool is_generic_url_Set() const;
    bool is_generic_url_Valid() const;

    OAIEnterpriseTopazSidekickCommonDocumentJustification getJustification() const;
    void setJustification(const OAIEnterpriseTopazSidekickCommonDocumentJustification &justification);
    bool is_justification_Set() const;
    bool is_justification_Valid() const;

    QString getMimeType() const;
    void setMimeType(const QString &mime_type);
    bool is_mime_type_Set() const;
    bool is_mime_type_Valid() const;

    Q_DECL_DEPRECATED QString getProvenance() const;
    Q_DECL_DEPRECATED void setProvenance(const QString &provenance);
    Q_DECL_DEPRECATED bool is_provenance_Set() const;
    Q_DECL_DEPRECATED bool is_provenance_Valid() const;

    Q_DECL_DEPRECATED QString getReason() const;
    Q_DECL_DEPRECATED void setReason(const QString &reason);
    Q_DECL_DEPRECATED bool is_reason_Set() const;
    Q_DECL_DEPRECATED bool is_reason_Valid() const;

    QString getSnippet() const;
    void setSnippet(const QString &snippet);
    bool is_snippet_Set() const;
    bool is_snippet_Valid() const;

    QString getThumbnailUrl() const;
    void setThumbnailUrl(const QString &thumbnail_url);
    bool is_thumbnail_url_Set() const;
    bool is_thumbnail_url_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_access_type;
    bool m_access_type_isSet;
    bool m_access_type_isValid;

    OAIEnterpriseTopazSidekickCommonDebugInfo m_debug_info;
    bool m_debug_info_isSet;
    bool m_debug_info_isValid;

    QString m_document_id;
    bool m_document_id_isSet;
    bool m_document_id_isValid;

    OAIEnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata m_drive_document_metadata;
    bool m_drive_document_metadata_isSet;
    bool m_drive_document_metadata_isValid;

    QString m_generic_url;
    bool m_generic_url_isSet;
    bool m_generic_url_isValid;

    OAIEnterpriseTopazSidekickCommonDocumentJustification m_justification;
    bool m_justification_isSet;
    bool m_justification_isValid;

    QString m_mime_type;
    bool m_mime_type_isSet;
    bool m_mime_type_isValid;

    QString m_provenance;
    bool m_provenance_isSet;
    bool m_provenance_isValid;

    QString m_reason;
    bool m_reason_isSet;
    bool m_reason_isValid;

    QString m_snippet;
    bool m_snippet_isSet;
    bool m_snippet_isValid;

    QString m_thumbnail_url;
    bool m_thumbnail_url_isSet;
    bool m_thumbnail_url_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEnterpriseTopazSidekickCommonDocument)

#endif // OAIEnterpriseTopazSidekickCommonDocument_H
