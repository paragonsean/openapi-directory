/**
 * Cloud Search API
 * Cloud Search provides cloud-based search capabilities over Google Workspace data. The Cloud Search API allows indexing of non-Google Workspace data into Cloud Search.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPropertyDefinition.h
 *
 * The definition of a property within an object.
 */

#ifndef OAIPropertyDefinition_H
#define OAIPropertyDefinition_H

#include <QJsonObject>

#include "OAIBooleanPropertyOptions.h"
#include "OAIDatePropertyOptions.h"
#include "OAIDoublePropertyOptions.h"
#include "OAIEnumPropertyOptions.h"
#include "OAIHtmlPropertyOptions.h"
#include "OAIIntegerPropertyOptions.h"
#include "OAIObjectPropertyOptions.h"
#include "OAIPropertyDisplayOptions.h"
#include "OAITextPropertyOptions.h"
#include "OAITimestampPropertyOptions.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBooleanPropertyOptions;
class OAIDatePropertyOptions;
class OAIPropertyDisplayOptions;
class OAIDoublePropertyOptions;
class OAIEnumPropertyOptions;
class OAIHtmlPropertyOptions;
class OAIIntegerPropertyOptions;
class OAIObjectPropertyOptions;
class OAITextPropertyOptions;
class OAITimestampPropertyOptions;

class OAIPropertyDefinition : public OAIObject {
public:
    OAIPropertyDefinition();
    OAIPropertyDefinition(QString json);
    ~OAIPropertyDefinition() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIBooleanPropertyOptions getBooleanPropertyOptions() const;
    void setBooleanPropertyOptions(const OAIBooleanPropertyOptions &boolean_property_options);
    bool is_boolean_property_options_Set() const;
    bool is_boolean_property_options_Valid() const;

    OAIDatePropertyOptions getDatePropertyOptions() const;
    void setDatePropertyOptions(const OAIDatePropertyOptions &date_property_options);
    bool is_date_property_options_Set() const;
    bool is_date_property_options_Valid() const;

    OAIPropertyDisplayOptions getDisplayOptions() const;
    void setDisplayOptions(const OAIPropertyDisplayOptions &display_options);
    bool is_display_options_Set() const;
    bool is_display_options_Valid() const;

    OAIDoublePropertyOptions getDoublePropertyOptions() const;
    void setDoublePropertyOptions(const OAIDoublePropertyOptions &double_property_options);
    bool is_double_property_options_Set() const;
    bool is_double_property_options_Valid() const;

    OAIEnumPropertyOptions getEnumPropertyOptions() const;
    void setEnumPropertyOptions(const OAIEnumPropertyOptions &enum_property_options);
    bool is_enum_property_options_Set() const;
    bool is_enum_property_options_Valid() const;

    OAIHtmlPropertyOptions getHtmlPropertyOptions() const;
    void setHtmlPropertyOptions(const OAIHtmlPropertyOptions &html_property_options);
    bool is_html_property_options_Set() const;
    bool is_html_property_options_Valid() const;

    OAIIntegerPropertyOptions getIntegerPropertyOptions() const;
    void setIntegerPropertyOptions(const OAIIntegerPropertyOptions &integer_property_options);
    bool is_integer_property_options_Set() const;
    bool is_integer_property_options_Valid() const;

    bool isIsFacetable() const;
    void setIsFacetable(const bool &is_facetable);
    bool is_is_facetable_Set() const;
    bool is_is_facetable_Valid() const;

    bool isIsRepeatable() const;
    void setIsRepeatable(const bool &is_repeatable);
    bool is_is_repeatable_Set() const;
    bool is_is_repeatable_Valid() const;

    bool isIsReturnable() const;
    void setIsReturnable(const bool &is_returnable);
    bool is_is_returnable_Set() const;
    bool is_is_returnable_Valid() const;

    bool isIsSortable() const;
    void setIsSortable(const bool &is_sortable);
    bool is_is_sortable_Set() const;
    bool is_is_sortable_Valid() const;

    bool isIsSuggestable() const;
    void setIsSuggestable(const bool &is_suggestable);
    bool is_is_suggestable_Set() const;
    bool is_is_suggestable_Valid() const;

    bool isIsWildcardSearchable() const;
    void setIsWildcardSearchable(const bool &is_wildcard_searchable);
    bool is_is_wildcard_searchable_Set() const;
    bool is_is_wildcard_searchable_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIObjectPropertyOptions getObjectPropertyOptions() const;
    void setObjectPropertyOptions(const OAIObjectPropertyOptions &object_property_options);
    bool is_object_property_options_Set() const;
    bool is_object_property_options_Valid() const;

    OAITextPropertyOptions getTextPropertyOptions() const;
    void setTextPropertyOptions(const OAITextPropertyOptions &text_property_options);
    bool is_text_property_options_Set() const;
    bool is_text_property_options_Valid() const;

    OAITimestampPropertyOptions getTimestampPropertyOptions() const;
    void setTimestampPropertyOptions(const OAITimestampPropertyOptions &timestamp_property_options);
    bool is_timestamp_property_options_Set() const;
    bool is_timestamp_property_options_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIBooleanPropertyOptions m_boolean_property_options;
    bool m_boolean_property_options_isSet;
    bool m_boolean_property_options_isValid;

    OAIDatePropertyOptions m_date_property_options;
    bool m_date_property_options_isSet;
    bool m_date_property_options_isValid;

    OAIPropertyDisplayOptions m_display_options;
    bool m_display_options_isSet;
    bool m_display_options_isValid;

    OAIDoublePropertyOptions m_double_property_options;
    bool m_double_property_options_isSet;
    bool m_double_property_options_isValid;

    OAIEnumPropertyOptions m_enum_property_options;
    bool m_enum_property_options_isSet;
    bool m_enum_property_options_isValid;

    OAIHtmlPropertyOptions m_html_property_options;
    bool m_html_property_options_isSet;
    bool m_html_property_options_isValid;

    OAIIntegerPropertyOptions m_integer_property_options;
    bool m_integer_property_options_isSet;
    bool m_integer_property_options_isValid;

    bool m_is_facetable;
    bool m_is_facetable_isSet;
    bool m_is_facetable_isValid;

    bool m_is_repeatable;
    bool m_is_repeatable_isSet;
    bool m_is_repeatable_isValid;

    bool m_is_returnable;
    bool m_is_returnable_isSet;
    bool m_is_returnable_isValid;

    bool m_is_sortable;
    bool m_is_sortable_isSet;
    bool m_is_sortable_isValid;

    bool m_is_suggestable;
    bool m_is_suggestable_isSet;
    bool m_is_suggestable_isValid;

    bool m_is_wildcard_searchable;
    bool m_is_wildcard_searchable_isSet;
    bool m_is_wildcard_searchable_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIObjectPropertyOptions m_object_property_options;
    bool m_object_property_options_isSet;
    bool m_object_property_options_isValid;

    OAITextPropertyOptions m_text_property_options;
    bool m_text_property_options_isSet;
    bool m_text_property_options_isValid;

    OAITimestampPropertyOptions m_timestamp_property_options;
    bool m_timestamp_property_options_isSet;
    bool m_timestamp_property_options_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPropertyDefinition)

#endif // OAIPropertyDefinition_H
