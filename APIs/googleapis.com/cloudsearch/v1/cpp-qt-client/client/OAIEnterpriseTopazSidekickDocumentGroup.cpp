/**
 * Cloud Search API
 * Cloud Search provides cloud-based search capabilities over Google Workspace data. The Cloud Search API allows indexing of non-Google Workspace data into Cloud Search.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEnterpriseTopazSidekickDocumentGroup.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEnterpriseTopazSidekickDocumentGroup::OAIEnterpriseTopazSidekickDocumentGroup(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEnterpriseTopazSidekickDocumentGroup::OAIEnterpriseTopazSidekickDocumentGroup() {
    this->initializeModel();
}

OAIEnterpriseTopazSidekickDocumentGroup::~OAIEnterpriseTopazSidekickDocumentGroup() {}

void OAIEnterpriseTopazSidekickDocumentGroup::initializeModel() {

    m_group_type_isSet = false;
    m_group_type_isValid = false;

    m_personalized_document_isSet = false;
    m_personalized_document_isValid = false;
}

void OAIEnterpriseTopazSidekickDocumentGroup::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEnterpriseTopazSidekickDocumentGroup::fromJsonObject(QJsonObject json) {

    m_group_type_isValid = ::OpenAPI::fromJsonValue(m_group_type, json[QString("groupType")]);
    m_group_type_isSet = !json[QString("groupType")].isNull() && m_group_type_isValid;

    m_personalized_document_isValid = ::OpenAPI::fromJsonValue(m_personalized_document, json[QString("personalizedDocument")]);
    m_personalized_document_isSet = !json[QString("personalizedDocument")].isNull() && m_personalized_document_isValid;
}

QString OAIEnterpriseTopazSidekickDocumentGroup::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEnterpriseTopazSidekickDocumentGroup::asJsonObject() const {
    QJsonObject obj;
    if (m_group_type_isSet) {
        obj.insert(QString("groupType"), ::OpenAPI::toJsonValue(m_group_type));
    }
    if (m_personalized_document.size() > 0) {
        obj.insert(QString("personalizedDocument"), ::OpenAPI::toJsonValue(m_personalized_document));
    }
    return obj;
}

QString OAIEnterpriseTopazSidekickDocumentGroup::getGroupType() const {
    return m_group_type;
}
void OAIEnterpriseTopazSidekickDocumentGroup::setGroupType(const QString &group_type) {
    m_group_type = group_type;
    m_group_type_isSet = true;
}

bool OAIEnterpriseTopazSidekickDocumentGroup::is_group_type_Set() const{
    return m_group_type_isSet;
}

bool OAIEnterpriseTopazSidekickDocumentGroup::is_group_type_Valid() const{
    return m_group_type_isValid;
}

QList<OAIEnterpriseTopazSidekickCommonDocument> OAIEnterpriseTopazSidekickDocumentGroup::getPersonalizedDocument() const {
    return m_personalized_document;
}
void OAIEnterpriseTopazSidekickDocumentGroup::setPersonalizedDocument(const QList<OAIEnterpriseTopazSidekickCommonDocument> &personalized_document) {
    m_personalized_document = personalized_document;
    m_personalized_document_isSet = true;
}

bool OAIEnterpriseTopazSidekickDocumentGroup::is_personalized_document_Set() const{
    return m_personalized_document_isSet;
}

bool OAIEnterpriseTopazSidekickDocumentGroup::is_personalized_document_Valid() const{
    return m_personalized_document_isValid;
}

bool OAIEnterpriseTopazSidekickDocumentGroup::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_group_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_personalized_document.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEnterpriseTopazSidekickDocumentGroup::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
