/**
 * Cloud Search API
 * Cloud Search provides cloud-based search capabilities over Google Workspace data. The Cloud Search API allows indexing of non-Google Workspace data into Cloud Search.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDataSource.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDataSource::OAIDataSource(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDataSource::OAIDataSource() {
    this->initializeModel();
}

OAIDataSource::~OAIDataSource() {}

void OAIDataSource::initializeModel() {

    m_disable_modifications_isSet = false;
    m_disable_modifications_isValid = false;

    m_disable_serving_isSet = false;
    m_disable_serving_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_indexing_service_accounts_isSet = false;
    m_indexing_service_accounts_isValid = false;

    m_items_visibility_isSet = false;
    m_items_visibility_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_operation_ids_isSet = false;
    m_operation_ids_isValid = false;

    m_return_thumbnail_urls_isSet = false;
    m_return_thumbnail_urls_isValid = false;

    m_short_name_isSet = false;
    m_short_name_isValid = false;
}

void OAIDataSource::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDataSource::fromJsonObject(QJsonObject json) {

    m_disable_modifications_isValid = ::OpenAPI::fromJsonValue(m_disable_modifications, json[QString("disableModifications")]);
    m_disable_modifications_isSet = !json[QString("disableModifications")].isNull() && m_disable_modifications_isValid;

    m_disable_serving_isValid = ::OpenAPI::fromJsonValue(m_disable_serving, json[QString("disableServing")]);
    m_disable_serving_isSet = !json[QString("disableServing")].isNull() && m_disable_serving_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_indexing_service_accounts_isValid = ::OpenAPI::fromJsonValue(m_indexing_service_accounts, json[QString("indexingServiceAccounts")]);
    m_indexing_service_accounts_isSet = !json[QString("indexingServiceAccounts")].isNull() && m_indexing_service_accounts_isValid;

    m_items_visibility_isValid = ::OpenAPI::fromJsonValue(m_items_visibility, json[QString("itemsVisibility")]);
    m_items_visibility_isSet = !json[QString("itemsVisibility")].isNull() && m_items_visibility_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_operation_ids_isValid = ::OpenAPI::fromJsonValue(m_operation_ids, json[QString("operationIds")]);
    m_operation_ids_isSet = !json[QString("operationIds")].isNull() && m_operation_ids_isValid;

    m_return_thumbnail_urls_isValid = ::OpenAPI::fromJsonValue(m_return_thumbnail_urls, json[QString("returnThumbnailUrls")]);
    m_return_thumbnail_urls_isSet = !json[QString("returnThumbnailUrls")].isNull() && m_return_thumbnail_urls_isValid;

    m_short_name_isValid = ::OpenAPI::fromJsonValue(m_short_name, json[QString("shortName")]);
    m_short_name_isSet = !json[QString("shortName")].isNull() && m_short_name_isValid;
}

QString OAIDataSource::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDataSource::asJsonObject() const {
    QJsonObject obj;
    if (m_disable_modifications_isSet) {
        obj.insert(QString("disableModifications"), ::OpenAPI::toJsonValue(m_disable_modifications));
    }
    if (m_disable_serving_isSet) {
        obj.insert(QString("disableServing"), ::OpenAPI::toJsonValue(m_disable_serving));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_indexing_service_accounts.size() > 0) {
        obj.insert(QString("indexingServiceAccounts"), ::OpenAPI::toJsonValue(m_indexing_service_accounts));
    }
    if (m_items_visibility.size() > 0) {
        obj.insert(QString("itemsVisibility"), ::OpenAPI::toJsonValue(m_items_visibility));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_operation_ids.size() > 0) {
        obj.insert(QString("operationIds"), ::OpenAPI::toJsonValue(m_operation_ids));
    }
    if (m_return_thumbnail_urls_isSet) {
        obj.insert(QString("returnThumbnailUrls"), ::OpenAPI::toJsonValue(m_return_thumbnail_urls));
    }
    if (m_short_name_isSet) {
        obj.insert(QString("shortName"), ::OpenAPI::toJsonValue(m_short_name));
    }
    return obj;
}

bool OAIDataSource::isDisableModifications() const {
    return m_disable_modifications;
}
void OAIDataSource::setDisableModifications(const bool &disable_modifications) {
    m_disable_modifications = disable_modifications;
    m_disable_modifications_isSet = true;
}

bool OAIDataSource::is_disable_modifications_Set() const{
    return m_disable_modifications_isSet;
}

bool OAIDataSource::is_disable_modifications_Valid() const{
    return m_disable_modifications_isValid;
}

bool OAIDataSource::isDisableServing() const {
    return m_disable_serving;
}
void OAIDataSource::setDisableServing(const bool &disable_serving) {
    m_disable_serving = disable_serving;
    m_disable_serving_isSet = true;
}

bool OAIDataSource::is_disable_serving_Set() const{
    return m_disable_serving_isSet;
}

bool OAIDataSource::is_disable_serving_Valid() const{
    return m_disable_serving_isValid;
}

QString OAIDataSource::getDisplayName() const {
    return m_display_name;
}
void OAIDataSource::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIDataSource::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIDataSource::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QList<QString> OAIDataSource::getIndexingServiceAccounts() const {
    return m_indexing_service_accounts;
}
void OAIDataSource::setIndexingServiceAccounts(const QList<QString> &indexing_service_accounts) {
    m_indexing_service_accounts = indexing_service_accounts;
    m_indexing_service_accounts_isSet = true;
}

bool OAIDataSource::is_indexing_service_accounts_Set() const{
    return m_indexing_service_accounts_isSet;
}

bool OAIDataSource::is_indexing_service_accounts_Valid() const{
    return m_indexing_service_accounts_isValid;
}

QList<OAIGSuitePrincipal> OAIDataSource::getItemsVisibility() const {
    return m_items_visibility;
}
void OAIDataSource::setItemsVisibility(const QList<OAIGSuitePrincipal> &items_visibility) {
    m_items_visibility = items_visibility;
    m_items_visibility_isSet = true;
}

bool OAIDataSource::is_items_visibility_Set() const{
    return m_items_visibility_isSet;
}

bool OAIDataSource::is_items_visibility_Valid() const{
    return m_items_visibility_isValid;
}

QString OAIDataSource::getName() const {
    return m_name;
}
void OAIDataSource::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIDataSource::is_name_Set() const{
    return m_name_isSet;
}

bool OAIDataSource::is_name_Valid() const{
    return m_name_isValid;
}

QList<QString> OAIDataSource::getOperationIds() const {
    return m_operation_ids;
}
void OAIDataSource::setOperationIds(const QList<QString> &operation_ids) {
    m_operation_ids = operation_ids;
    m_operation_ids_isSet = true;
}

bool OAIDataSource::is_operation_ids_Set() const{
    return m_operation_ids_isSet;
}

bool OAIDataSource::is_operation_ids_Valid() const{
    return m_operation_ids_isValid;
}

bool OAIDataSource::isReturnThumbnailUrls() const {
    return m_return_thumbnail_urls;
}
void OAIDataSource::setReturnThumbnailUrls(const bool &return_thumbnail_urls) {
    m_return_thumbnail_urls = return_thumbnail_urls;
    m_return_thumbnail_urls_isSet = true;
}

bool OAIDataSource::is_return_thumbnail_urls_Set() const{
    return m_return_thumbnail_urls_isSet;
}

bool OAIDataSource::is_return_thumbnail_urls_Valid() const{
    return m_return_thumbnail_urls_isValid;
}

QString OAIDataSource::getShortName() const {
    return m_short_name;
}
void OAIDataSource::setShortName(const QString &short_name) {
    m_short_name = short_name;
    m_short_name_isSet = true;
}

bool OAIDataSource::is_short_name_Set() const{
    return m_short_name_isSet;
}

bool OAIDataSource::is_short_name_Valid() const{
    return m_short_name_isValid;
}

bool OAIDataSource::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_disable_modifications_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_disable_serving_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_indexing_service_accounts.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_items_visibility.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_operation_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_return_thumbnail_urls_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_short_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDataSource::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
