/**
 * Cloud Search API
 * Cloud Search provides cloud-based search capabilities over Google Workspace data. The Cloud Search API allows indexing of non-Google Workspace data into Cloud Search.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEnterpriseTopazSidekickCommonPerson.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEnterpriseTopazSidekickCommonPerson::OAIEnterpriseTopazSidekickCommonPerson(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEnterpriseTopazSidekickCommonPerson::OAIEnterpriseTopazSidekickCommonPerson() {
    this->initializeModel();
}

OAIEnterpriseTopazSidekickCommonPerson::~OAIEnterpriseTopazSidekickCommonPerson() {}

void OAIEnterpriseTopazSidekickCommonPerson::initializeModel() {

    m_birthday_isSet = false;
    m_birthday_isValid = false;

    m_cell_phone_isSet = false;
    m_cell_phone_isValid = false;

    m_department_isSet = false;
    m_department_isValid = false;

    m_desk_location_isSet = false;
    m_desk_location_isValid = false;

    m_desk_phone_isSet = false;
    m_desk_phone_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_email_isSet = false;
    m_email_isValid = false;

    m_family_name_isSet = false;
    m_family_name_isValid = false;

    m_full_address_isSet = false;
    m_full_address_isValid = false;

    m_gaia_id_isSet = false;
    m_gaia_id_isValid = false;

    m_given_name_isSet = false;
    m_given_name_isValid = false;

    m_job_title_isSet = false;
    m_job_title_isValid = false;

    m_manager_isSet = false;
    m_manager_isValid = false;

    m_obfuscated_id_isSet = false;
    m_obfuscated_id_isValid = false;

    m_photo_url_isSet = false;
    m_photo_url_isValid = false;

    m_street_address_isSet = false;
    m_street_address_isValid = false;
}

void OAIEnterpriseTopazSidekickCommonPerson::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEnterpriseTopazSidekickCommonPerson::fromJsonObject(QJsonObject json) {

    m_birthday_isValid = ::OpenAPI::fromJsonValue(m_birthday, json[QString("birthday")]);
    m_birthday_isSet = !json[QString("birthday")].isNull() && m_birthday_isValid;

    m_cell_phone_isValid = ::OpenAPI::fromJsonValue(m_cell_phone, json[QString("cellPhone")]);
    m_cell_phone_isSet = !json[QString("cellPhone")].isNull() && m_cell_phone_isValid;

    m_department_isValid = ::OpenAPI::fromJsonValue(m_department, json[QString("department")]);
    m_department_isSet = !json[QString("department")].isNull() && m_department_isValid;

    m_desk_location_isValid = ::OpenAPI::fromJsonValue(m_desk_location, json[QString("deskLocation")]);
    m_desk_location_isSet = !json[QString("deskLocation")].isNull() && m_desk_location_isValid;

    m_desk_phone_isValid = ::OpenAPI::fromJsonValue(m_desk_phone, json[QString("deskPhone")]);
    m_desk_phone_isSet = !json[QString("deskPhone")].isNull() && m_desk_phone_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_family_name_isValid = ::OpenAPI::fromJsonValue(m_family_name, json[QString("familyName")]);
    m_family_name_isSet = !json[QString("familyName")].isNull() && m_family_name_isValid;

    m_full_address_isValid = ::OpenAPI::fromJsonValue(m_full_address, json[QString("fullAddress")]);
    m_full_address_isSet = !json[QString("fullAddress")].isNull() && m_full_address_isValid;

    m_gaia_id_isValid = ::OpenAPI::fromJsonValue(m_gaia_id, json[QString("gaiaId")]);
    m_gaia_id_isSet = !json[QString("gaiaId")].isNull() && m_gaia_id_isValid;

    m_given_name_isValid = ::OpenAPI::fromJsonValue(m_given_name, json[QString("givenName")]);
    m_given_name_isSet = !json[QString("givenName")].isNull() && m_given_name_isValid;

    m_job_title_isValid = ::OpenAPI::fromJsonValue(m_job_title, json[QString("jobTitle")]);
    m_job_title_isSet = !json[QString("jobTitle")].isNull() && m_job_title_isValid;

    m_manager_isValid = ::OpenAPI::fromJsonValue(m_manager, json[QString("manager")]);
    m_manager_isSet = !json[QString("manager")].isNull() && m_manager_isValid;

    m_obfuscated_id_isValid = ::OpenAPI::fromJsonValue(m_obfuscated_id, json[QString("obfuscatedId")]);
    m_obfuscated_id_isSet = !json[QString("obfuscatedId")].isNull() && m_obfuscated_id_isValid;

    m_photo_url_isValid = ::OpenAPI::fromJsonValue(m_photo_url, json[QString("photoUrl")]);
    m_photo_url_isSet = !json[QString("photoUrl")].isNull() && m_photo_url_isValid;

    m_street_address_isValid = ::OpenAPI::fromJsonValue(m_street_address, json[QString("streetAddress")]);
    m_street_address_isSet = !json[QString("streetAddress")].isNull() && m_street_address_isValid;
}

QString OAIEnterpriseTopazSidekickCommonPerson::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEnterpriseTopazSidekickCommonPerson::asJsonObject() const {
    QJsonObject obj;
    if (m_birthday.isSet()) {
        obj.insert(QString("birthday"), ::OpenAPI::toJsonValue(m_birthday));
    }
    if (m_cell_phone_isSet) {
        obj.insert(QString("cellPhone"), ::OpenAPI::toJsonValue(m_cell_phone));
    }
    if (m_department_isSet) {
        obj.insert(QString("department"), ::OpenAPI::toJsonValue(m_department));
    }
    if (m_desk_location_isSet) {
        obj.insert(QString("deskLocation"), ::OpenAPI::toJsonValue(m_desk_location));
    }
    if (m_desk_phone_isSet) {
        obj.insert(QString("deskPhone"), ::OpenAPI::toJsonValue(m_desk_phone));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_email_isSet) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_family_name_isSet) {
        obj.insert(QString("familyName"), ::OpenAPI::toJsonValue(m_family_name));
    }
    if (m_full_address_isSet) {
        obj.insert(QString("fullAddress"), ::OpenAPI::toJsonValue(m_full_address));
    }
    if (m_gaia_id_isSet) {
        obj.insert(QString("gaiaId"), ::OpenAPI::toJsonValue(m_gaia_id));
    }
    if (m_given_name_isSet) {
        obj.insert(QString("givenName"), ::OpenAPI::toJsonValue(m_given_name));
    }
    if (m_job_title_isSet) {
        obj.insert(QString("jobTitle"), ::OpenAPI::toJsonValue(m_job_title));
    }
    if (m_manager.isSet()) {
        obj.insert(QString("manager"), ::OpenAPI::toJsonValue(m_manager));
    }
    if (m_obfuscated_id_isSet) {
        obj.insert(QString("obfuscatedId"), ::OpenAPI::toJsonValue(m_obfuscated_id));
    }
    if (m_photo_url_isSet) {
        obj.insert(QString("photoUrl"), ::OpenAPI::toJsonValue(m_photo_url));
    }
    if (m_street_address_isSet) {
        obj.insert(QString("streetAddress"), ::OpenAPI::toJsonValue(m_street_address));
    }
    return obj;
}

OAIEnterpriseTopazSidekickCommonPersonBirthday OAIEnterpriseTopazSidekickCommonPerson::getBirthday() const {
    return m_birthday;
}
void OAIEnterpriseTopazSidekickCommonPerson::setBirthday(const OAIEnterpriseTopazSidekickCommonPersonBirthday &birthday) {
    m_birthday = birthday;
    m_birthday_isSet = true;
}

bool OAIEnterpriseTopazSidekickCommonPerson::is_birthday_Set() const{
    return m_birthday_isSet;
}

bool OAIEnterpriseTopazSidekickCommonPerson::is_birthday_Valid() const{
    return m_birthday_isValid;
}

QString OAIEnterpriseTopazSidekickCommonPerson::getCellPhone() const {
    return m_cell_phone;
}
void OAIEnterpriseTopazSidekickCommonPerson::setCellPhone(const QString &cell_phone) {
    m_cell_phone = cell_phone;
    m_cell_phone_isSet = true;
}

bool OAIEnterpriseTopazSidekickCommonPerson::is_cell_phone_Set() const{
    return m_cell_phone_isSet;
}

bool OAIEnterpriseTopazSidekickCommonPerson::is_cell_phone_Valid() const{
    return m_cell_phone_isValid;
}

QString OAIEnterpriseTopazSidekickCommonPerson::getDepartment() const {
    return m_department;
}
void OAIEnterpriseTopazSidekickCommonPerson::setDepartment(const QString &department) {
    m_department = department;
    m_department_isSet = true;
}

bool OAIEnterpriseTopazSidekickCommonPerson::is_department_Set() const{
    return m_department_isSet;
}

bool OAIEnterpriseTopazSidekickCommonPerson::is_department_Valid() const{
    return m_department_isValid;
}

QString OAIEnterpriseTopazSidekickCommonPerson::getDeskLocation() const {
    return m_desk_location;
}
void OAIEnterpriseTopazSidekickCommonPerson::setDeskLocation(const QString &desk_location) {
    m_desk_location = desk_location;
    m_desk_location_isSet = true;
}

bool OAIEnterpriseTopazSidekickCommonPerson::is_desk_location_Set() const{
    return m_desk_location_isSet;
}

bool OAIEnterpriseTopazSidekickCommonPerson::is_desk_location_Valid() const{
    return m_desk_location_isValid;
}

QString OAIEnterpriseTopazSidekickCommonPerson::getDeskPhone() const {
    return m_desk_phone;
}
void OAIEnterpriseTopazSidekickCommonPerson::setDeskPhone(const QString &desk_phone) {
    m_desk_phone = desk_phone;
    m_desk_phone_isSet = true;
}

bool OAIEnterpriseTopazSidekickCommonPerson::is_desk_phone_Set() const{
    return m_desk_phone_isSet;
}

bool OAIEnterpriseTopazSidekickCommonPerson::is_desk_phone_Valid() const{
    return m_desk_phone_isValid;
}

QString OAIEnterpriseTopazSidekickCommonPerson::getDisplayName() const {
    return m_display_name;
}
void OAIEnterpriseTopazSidekickCommonPerson::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIEnterpriseTopazSidekickCommonPerson::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIEnterpriseTopazSidekickCommonPerson::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QString OAIEnterpriseTopazSidekickCommonPerson::getEmail() const {
    return m_email;
}
void OAIEnterpriseTopazSidekickCommonPerson::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAIEnterpriseTopazSidekickCommonPerson::is_email_Set() const{
    return m_email_isSet;
}

bool OAIEnterpriseTopazSidekickCommonPerson::is_email_Valid() const{
    return m_email_isValid;
}

QString OAIEnterpriseTopazSidekickCommonPerson::getFamilyName() const {
    return m_family_name;
}
void OAIEnterpriseTopazSidekickCommonPerson::setFamilyName(const QString &family_name) {
    m_family_name = family_name;
    m_family_name_isSet = true;
}

bool OAIEnterpriseTopazSidekickCommonPerson::is_family_name_Set() const{
    return m_family_name_isSet;
}

bool OAIEnterpriseTopazSidekickCommonPerson::is_family_name_Valid() const{
    return m_family_name_isValid;
}

QString OAIEnterpriseTopazSidekickCommonPerson::getFullAddress() const {
    return m_full_address;
}
void OAIEnterpriseTopazSidekickCommonPerson::setFullAddress(const QString &full_address) {
    m_full_address = full_address;
    m_full_address_isSet = true;
}

bool OAIEnterpriseTopazSidekickCommonPerson::is_full_address_Set() const{
    return m_full_address_isSet;
}

bool OAIEnterpriseTopazSidekickCommonPerson::is_full_address_Valid() const{
    return m_full_address_isValid;
}

QString OAIEnterpriseTopazSidekickCommonPerson::getGaiaId() const {
    return m_gaia_id;
}
void OAIEnterpriseTopazSidekickCommonPerson::setGaiaId(const QString &gaia_id) {
    m_gaia_id = gaia_id;
    m_gaia_id_isSet = true;
}

bool OAIEnterpriseTopazSidekickCommonPerson::is_gaia_id_Set() const{
    return m_gaia_id_isSet;
}

bool OAIEnterpriseTopazSidekickCommonPerson::is_gaia_id_Valid() const{
    return m_gaia_id_isValid;
}

QString OAIEnterpriseTopazSidekickCommonPerson::getGivenName() const {
    return m_given_name;
}
void OAIEnterpriseTopazSidekickCommonPerson::setGivenName(const QString &given_name) {
    m_given_name = given_name;
    m_given_name_isSet = true;
}

bool OAIEnterpriseTopazSidekickCommonPerson::is_given_name_Set() const{
    return m_given_name_isSet;
}

bool OAIEnterpriseTopazSidekickCommonPerson::is_given_name_Valid() const{
    return m_given_name_isValid;
}

QString OAIEnterpriseTopazSidekickCommonPerson::getJobTitle() const {
    return m_job_title;
}
void OAIEnterpriseTopazSidekickCommonPerson::setJobTitle(const QString &job_title) {
    m_job_title = job_title;
    m_job_title_isSet = true;
}

bool OAIEnterpriseTopazSidekickCommonPerson::is_job_title_Set() const{
    return m_job_title_isSet;
}

bool OAIEnterpriseTopazSidekickCommonPerson::is_job_title_Valid() const{
    return m_job_title_isValid;
}

OAIEnterpriseTopazSidekickCommonPerson OAIEnterpriseTopazSidekickCommonPerson::getManager() const {
    return m_manager;
}
void OAIEnterpriseTopazSidekickCommonPerson::setManager(const OAIEnterpriseTopazSidekickCommonPerson &manager) {
    m_manager = manager;
    m_manager_isSet = true;
}

bool OAIEnterpriseTopazSidekickCommonPerson::is_manager_Set() const{
    return m_manager_isSet;
}

bool OAIEnterpriseTopazSidekickCommonPerson::is_manager_Valid() const{
    return m_manager_isValid;
}

QString OAIEnterpriseTopazSidekickCommonPerson::getObfuscatedId() const {
    return m_obfuscated_id;
}
void OAIEnterpriseTopazSidekickCommonPerson::setObfuscatedId(const QString &obfuscated_id) {
    m_obfuscated_id = obfuscated_id;
    m_obfuscated_id_isSet = true;
}

bool OAIEnterpriseTopazSidekickCommonPerson::is_obfuscated_id_Set() const{
    return m_obfuscated_id_isSet;
}

bool OAIEnterpriseTopazSidekickCommonPerson::is_obfuscated_id_Valid() const{
    return m_obfuscated_id_isValid;
}

QString OAIEnterpriseTopazSidekickCommonPerson::getPhotoUrl() const {
    return m_photo_url;
}
void OAIEnterpriseTopazSidekickCommonPerson::setPhotoUrl(const QString &photo_url) {
    m_photo_url = photo_url;
    m_photo_url_isSet = true;
}

bool OAIEnterpriseTopazSidekickCommonPerson::is_photo_url_Set() const{
    return m_photo_url_isSet;
}

bool OAIEnterpriseTopazSidekickCommonPerson::is_photo_url_Valid() const{
    return m_photo_url_isValid;
}

QString OAIEnterpriseTopazSidekickCommonPerson::getStreetAddress() const {
    return m_street_address;
}
void OAIEnterpriseTopazSidekickCommonPerson::setStreetAddress(const QString &street_address) {
    m_street_address = street_address;
    m_street_address_isSet = true;
}

bool OAIEnterpriseTopazSidekickCommonPerson::is_street_address_Set() const{
    return m_street_address_isSet;
}

bool OAIEnterpriseTopazSidekickCommonPerson::is_street_address_Valid() const{
    return m_street_address_isValid;
}

bool OAIEnterpriseTopazSidekickCommonPerson::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_birthday.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_cell_phone_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_department_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_desk_location_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_desk_phone_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_family_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_full_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gaia_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_given_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_job_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_manager.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_obfuscated_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_photo_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_street_address_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEnterpriseTopazSidekickCommonPerson::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
