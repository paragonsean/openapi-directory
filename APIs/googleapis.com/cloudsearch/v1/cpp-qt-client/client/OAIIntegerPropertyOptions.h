/**
 * Cloud Search API
 * Cloud Search provides cloud-based search capabilities over Google Workspace data. The Cloud Search API allows indexing of non-Google Workspace data into Cloud Search.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIIntegerPropertyOptions.h
 *
 * The options for integer properties.
 */

#ifndef OAIIntegerPropertyOptions_H
#define OAIIntegerPropertyOptions_H

#include <QJsonObject>

#include "OAIIntegerFacetingOptions.h"
#include "OAIIntegerOperatorOptions.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIIntegerFacetingOptions;
class OAIIntegerOperatorOptions;

class OAIIntegerPropertyOptions : public OAIObject {
public:
    OAIIntegerPropertyOptions();
    OAIIntegerPropertyOptions(QString json);
    ~OAIIntegerPropertyOptions() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIIntegerFacetingOptions getIntegerFacetingOptions() const;
    void setIntegerFacetingOptions(const OAIIntegerFacetingOptions &integer_faceting_options);
    bool is_integer_faceting_options_Set() const;
    bool is_integer_faceting_options_Valid() const;

    QString getMaximumValue() const;
    void setMaximumValue(const QString &maximum_value);
    bool is_maximum_value_Set() const;
    bool is_maximum_value_Valid() const;

    QString getMinimumValue() const;
    void setMinimumValue(const QString &minimum_value);
    bool is_minimum_value_Set() const;
    bool is_minimum_value_Valid() const;

    OAIIntegerOperatorOptions getOperatorOptions() const;
    void setOperatorOptions(const OAIIntegerOperatorOptions &operator_options);
    bool is_operator_options_Set() const;
    bool is_operator_options_Valid() const;

    QString getOrderedRanking() const;
    void setOrderedRanking(const QString &ordered_ranking);
    bool is_ordered_ranking_Set() const;
    bool is_ordered_ranking_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIIntegerFacetingOptions m_integer_faceting_options;
    bool m_integer_faceting_options_isSet;
    bool m_integer_faceting_options_isValid;

    QString m_maximum_value;
    bool m_maximum_value_isSet;
    bool m_maximum_value_isValid;

    QString m_minimum_value;
    bool m_minimum_value_isSet;
    bool m_minimum_value_isValid;

    OAIIntegerOperatorOptions m_operator_options;
    bool m_operator_options_isSet;
    bool m_operator_options_isValid;

    QString m_ordered_ranking;
    bool m_ordered_ranking_isSet;
    bool m_ordered_ranking_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIIntegerPropertyOptions)

#endif // OAIIntegerPropertyOptions_H
