/**
 * Cloud Search API
 * Cloud Search provides cloud-based search capabilities over Google Workspace data. The Cloud Search API allows indexing of non-Google Workspace data into Cloud Search.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMetadata.h
 *
 * Metadata of a matched search result.
 */

#ifndef OAIMetadata_H
#define OAIMetadata_H

#include <QJsonObject>

#include "OAINamedProperty.h"
#include "OAIPerson.h"
#include "OAIResultDisplayMetadata.h"
#include "OAISource.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIResultDisplayMetadata;
class OAINamedProperty;
class OAIPerson;
class OAISource;

class OAIMetadata : public OAIObject {
public:
    OAIMetadata();
    OAIMetadata(QString json);
    ~OAIMetadata() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCreateTime() const;
    void setCreateTime(const QString &create_time);
    bool is_create_time_Set() const;
    bool is_create_time_Valid() const;

    OAIResultDisplayMetadata getDisplayOptions() const;
    void setDisplayOptions(const OAIResultDisplayMetadata &display_options);
    bool is_display_options_Set() const;
    bool is_display_options_Valid() const;

    QList<OAINamedProperty> getFields() const;
    void setFields(const QList<OAINamedProperty> &fields);
    bool is_fields_Set() const;
    bool is_fields_Valid() const;

    QString getMimeType() const;
    void setMimeType(const QString &mime_type);
    bool is_mime_type_Set() const;
    bool is_mime_type_Valid() const;

    QString getObjectType() const;
    void setObjectType(const QString &object_type);
    bool is_object_type_Set() const;
    bool is_object_type_Valid() const;

    OAIPerson getOwner() const;
    void setOwner(const OAIPerson &owner);
    bool is_owner_Set() const;
    bool is_owner_Valid() const;

    OAISource getSource() const;
    void setSource(const OAISource &source);
    bool is_source_Set() const;
    bool is_source_Valid() const;

    QString getThumbnailUrl() const;
    void setThumbnailUrl(const QString &thumbnail_url);
    bool is_thumbnail_url_Set() const;
    bool is_thumbnail_url_Valid() const;

    QString getUpdateTime() const;
    void setUpdateTime(const QString &update_time);
    bool is_update_time_Set() const;
    bool is_update_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_create_time;
    bool m_create_time_isSet;
    bool m_create_time_isValid;

    OAIResultDisplayMetadata m_display_options;
    bool m_display_options_isSet;
    bool m_display_options_isValid;

    QList<OAINamedProperty> m_fields;
    bool m_fields_isSet;
    bool m_fields_isValid;

    QString m_mime_type;
    bool m_mime_type_isSet;
    bool m_mime_type_isValid;

    QString m_object_type;
    bool m_object_type_isSet;
    bool m_object_type_isValid;

    OAIPerson m_owner;
    bool m_owner_isSet;
    bool m_owner_isValid;

    OAISource m_source;
    bool m_source_isSet;
    bool m_source_isValid;

    QString m_thumbnail_url;
    bool m_thumbnail_url_isSet;
    bool m_thumbnail_url_isValid;

    QString m_update_time;
    bool m_update_time_isSet;
    bool m_update_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMetadata)

#endif // OAIMetadata_H
