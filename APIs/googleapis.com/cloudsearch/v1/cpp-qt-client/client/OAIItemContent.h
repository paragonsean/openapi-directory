/**
 * Cloud Search API
 * Cloud Search provides cloud-based search capabilities over Google Workspace data. The Cloud Search API allows indexing of non-Google Workspace data into Cloud Search.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIItemContent.h
 *
 * Content of an item to be indexed and surfaced by Cloud Search. Only UTF-8 encoded strings are allowed as inlineContent. If the content is uploaded and not binary, it must be UTF-8 encoded.
 */

#ifndef OAIItemContent_H
#define OAIItemContent_H

#include <QJsonObject>

#include "OAIUploadItemRef.h"
#include <QByteArray>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUploadItemRef;

class OAIItemContent : public OAIObject {
public:
    OAIItemContent();
    OAIItemContent(QString json);
    ~OAIItemContent() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIUploadItemRef getContentDataRef() const;
    void setContentDataRef(const OAIUploadItemRef &content_data_ref);
    bool is_content_data_ref_Set() const;
    bool is_content_data_ref_Valid() const;

    QString getContentFormat() const;
    void setContentFormat(const QString &content_format);
    bool is_content_format_Set() const;
    bool is_content_format_Valid() const;

    QString getHash() const;
    void setHash(const QString &hash);
    bool is_hash_Set() const;
    bool is_hash_Valid() const;

    QByteArray getInlineContent() const;
    void setInlineContent(const QByteArray &inline_content);
    bool is_inline_content_Set() const;
    bool is_inline_content_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIUploadItemRef m_content_data_ref;
    bool m_content_data_ref_isSet;
    bool m_content_data_ref_isValid;

    QString m_content_format;
    bool m_content_format_isSet;
    bool m_content_format_isValid;

    QString m_hash;
    bool m_hash_isSet;
    bool m_hash_isValid;

    QByteArray m_inline_content;
    bool m_inline_content_isSet;
    bool m_inline_content_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIItemContent)

#endif // OAIItemContent_H
