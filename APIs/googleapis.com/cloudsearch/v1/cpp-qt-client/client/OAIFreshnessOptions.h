/**
 * Cloud Search API
 * Cloud Search provides cloud-based search capabilities over Google Workspace data. The Cloud Search API allows indexing of non-Google Workspace data into Cloud Search.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFreshnessOptions.h
 *
 * Indicates which freshness property to use when adjusting search ranking for an item. Fresher, more recent dates indicate higher quality. Use the freshness option property that best works with your data. For fileshare documents, last modified time is most relevant. For calendar event data, the time when the event occurs is a more relevant freshness indicator. In this way, calendar events that occur closer to the time of the search query are considered higher quality and ranked accordingly.
 */

#ifndef OAIFreshnessOptions_H
#define OAIFreshnessOptions_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIFreshnessOptions : public OAIObject {
public:
    OAIFreshnessOptions();
    OAIFreshnessOptions(QString json);
    ~OAIFreshnessOptions() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getFreshnessDuration() const;
    void setFreshnessDuration(const QString &freshness_duration);
    bool is_freshness_duration_Set() const;
    bool is_freshness_duration_Valid() const;

    QString getFreshnessProperty() const;
    void setFreshnessProperty(const QString &freshness_property);
    bool is_freshness_property_Set() const;
    bool is_freshness_property_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_freshness_duration;
    bool m_freshness_duration_isSet;
    bool m_freshness_duration_isValid;

    QString m_freshness_property;
    bool m_freshness_property_isSet;
    bool m_freshness_property_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFreshnessOptions)

#endif // OAIFreshnessOptions_H
