/**
 * Cloud Search API
 * Cloud Search provides cloud-based search capabilities over Google Workspace data. The Cloud Search API allows indexing of non-Google Workspace data into Cloud Search.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInteraction.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInteraction::OAIInteraction(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInteraction::OAIInteraction() {
    this->initializeModel();
}

OAIInteraction::~OAIInteraction() {}

void OAIInteraction::initializeModel() {

    m_interaction_time_isSet = false;
    m_interaction_time_isValid = false;

    m_principal_isSet = false;
    m_principal_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIInteraction::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInteraction::fromJsonObject(QJsonObject json) {

    m_interaction_time_isValid = ::OpenAPI::fromJsonValue(m_interaction_time, json[QString("interactionTime")]);
    m_interaction_time_isSet = !json[QString("interactionTime")].isNull() && m_interaction_time_isValid;

    m_principal_isValid = ::OpenAPI::fromJsonValue(m_principal, json[QString("principal")]);
    m_principal_isSet = !json[QString("principal")].isNull() && m_principal_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIInteraction::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInteraction::asJsonObject() const {
    QJsonObject obj;
    if (m_interaction_time_isSet) {
        obj.insert(QString("interactionTime"), ::OpenAPI::toJsonValue(m_interaction_time));
    }
    if (m_principal.isSet()) {
        obj.insert(QString("principal"), ::OpenAPI::toJsonValue(m_principal));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QString OAIInteraction::getInteractionTime() const {
    return m_interaction_time;
}
void OAIInteraction::setInteractionTime(const QString &interaction_time) {
    m_interaction_time = interaction_time;
    m_interaction_time_isSet = true;
}

bool OAIInteraction::is_interaction_time_Set() const{
    return m_interaction_time_isSet;
}

bool OAIInteraction::is_interaction_time_Valid() const{
    return m_interaction_time_isValid;
}

OAIPrincipal OAIInteraction::getPrincipal() const {
    return m_principal;
}
void OAIInteraction::setPrincipal(const OAIPrincipal &principal) {
    m_principal = principal;
    m_principal_isSet = true;
}

bool OAIInteraction::is_principal_Set() const{
    return m_principal_isSet;
}

bool OAIInteraction::is_principal_Valid() const{
    return m_principal_isValid;
}

QString OAIInteraction::getType() const {
    return m_type;
}
void OAIInteraction::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIInteraction::is_type_Set() const{
    return m_type_isSet;
}

bool OAIInteraction::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIInteraction::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_interaction_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_principal.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInteraction::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
