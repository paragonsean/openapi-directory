/**
 * Cloud Search API
 * Cloud Search provides cloud-based search capabilities over Google Workspace data. The Cloud Search API allows indexing of non-Google Workspace data into Cloud Search.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISearchResponse.h
 *
 * The search API response.
 */

#ifndef OAISearchResponse_H
#define OAISearchResponse_H

#include <QJsonObject>

#include "OAIErrorInfo.h"
#include "OAIFacetResult.h"
#include "OAIQueryInterpretation.h"
#include "OAIResponseDebugInfo.h"
#include "OAIResultCounts.h"
#include "OAISearchResult.h"
#include "OAISpellResult.h"
#include "OAIStructuredResult.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIResponseDebugInfo;
class OAIErrorInfo;
class OAIFacetResult;
class OAIQueryInterpretation;
class OAIResultCounts;
class OAISearchResult;
class OAISpellResult;
class OAIStructuredResult;

class OAISearchResponse : public OAIObject {
public:
    OAISearchResponse();
    OAISearchResponse(QString json);
    ~OAISearchResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIResponseDebugInfo getDebugInfo() const;
    void setDebugInfo(const OAIResponseDebugInfo &debug_info);
    bool is_debug_info_Set() const;
    bool is_debug_info_Valid() const;

    OAIErrorInfo getErrorInfo() const;
    void setErrorInfo(const OAIErrorInfo &error_info);
    bool is_error_info_Set() const;
    bool is_error_info_Valid() const;

    QList<OAIFacetResult> getFacetResults() const;
    void setFacetResults(const QList<OAIFacetResult> &facet_results);
    bool is_facet_results_Set() const;
    bool is_facet_results_Valid() const;

    bool isHasMoreResults() const;
    void setHasMoreResults(const bool &has_more_results);
    bool is_has_more_results_Set() const;
    bool is_has_more_results_Valid() const;

    OAIQueryInterpretation getQueryInterpretation() const;
    void setQueryInterpretation(const OAIQueryInterpretation &query_interpretation);
    bool is_query_interpretation_Set() const;
    bool is_query_interpretation_Valid() const;

    QString getResultCountEstimate() const;
    void setResultCountEstimate(const QString &result_count_estimate);
    bool is_result_count_estimate_Set() const;
    bool is_result_count_estimate_Valid() const;

    QString getResultCountExact() const;
    void setResultCountExact(const QString &result_count_exact);
    bool is_result_count_exact_Set() const;
    bool is_result_count_exact_Valid() const;

    OAIResultCounts getResultCounts() const;
    void setResultCounts(const OAIResultCounts &result_counts);
    bool is_result_counts_Set() const;
    bool is_result_counts_Valid() const;

    QList<OAISearchResult> getResults() const;
    void setResults(const QList<OAISearchResult> &results);
    bool is_results_Set() const;
    bool is_results_Valid() const;

    QList<OAISpellResult> getSpellResults() const;
    void setSpellResults(const QList<OAISpellResult> &spell_results);
    bool is_spell_results_Set() const;
    bool is_spell_results_Valid() const;

    QList<OAIStructuredResult> getStructuredResults() const;
    void setStructuredResults(const QList<OAIStructuredResult> &structured_results);
    bool is_structured_results_Set() const;
    bool is_structured_results_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIResponseDebugInfo m_debug_info;
    bool m_debug_info_isSet;
    bool m_debug_info_isValid;

    OAIErrorInfo m_error_info;
    bool m_error_info_isSet;
    bool m_error_info_isValid;

    QList<OAIFacetResult> m_facet_results;
    bool m_facet_results_isSet;
    bool m_facet_results_isValid;

    bool m_has_more_results;
    bool m_has_more_results_isSet;
    bool m_has_more_results_isValid;

    OAIQueryInterpretation m_query_interpretation;
    bool m_query_interpretation_isSet;
    bool m_query_interpretation_isValid;

    QString m_result_count_estimate;
    bool m_result_count_estimate_isSet;
    bool m_result_count_estimate_isValid;

    QString m_result_count_exact;
    bool m_result_count_exact_isSet;
    bool m_result_count_exact_isValid;

    OAIResultCounts m_result_counts;
    bool m_result_counts_isSet;
    bool m_result_counts_isValid;

    QList<OAISearchResult> m_results;
    bool m_results_isSet;
    bool m_results_isValid;

    QList<OAISpellResult> m_spell_results;
    bool m_spell_results_isSet;
    bool m_spell_results_isValid;

    QList<OAIStructuredResult> m_structured_results;
    bool m_structured_results_isSet;
    bool m_structured_results_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISearchResponse)

#endif // OAISearchResponse_H
