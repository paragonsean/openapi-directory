/**
 * Cloud Search API
 * Cloud Search provides cloud-based search capabilities over Google Workspace data. The Cloud Search API allows indexing of non-Google Workspace data into Cloud Search.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIQueryOperator.h
 *
 * The definition of a operator that can be used in a Search/Suggest request.
 */

#ifndef OAIQueryOperator_H
#define OAIQueryOperator_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIQueryOperator : public OAIObject {
public:
    OAIQueryOperator();
    OAIQueryOperator(QString json);
    ~OAIQueryOperator() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    QList<QString> getEnumValues() const;
    void setEnumValues(const QList<QString> &enum_values);
    bool is_enum_values_Set() const;
    bool is_enum_values_Valid() const;

    QString getGreaterThanOperatorName() const;
    void setGreaterThanOperatorName(const QString &greater_than_operator_name);
    bool is_greater_than_operator_name_Set() const;
    bool is_greater_than_operator_name_Valid() const;

    bool isIsFacetable() const;
    void setIsFacetable(const bool &is_facetable);
    bool is_is_facetable_Set() const;
    bool is_is_facetable_Valid() const;

    bool isIsRepeatable() const;
    void setIsRepeatable(const bool &is_repeatable);
    bool is_is_repeatable_Set() const;
    bool is_is_repeatable_Valid() const;

    bool isIsReturnable() const;
    void setIsReturnable(const bool &is_returnable);
    bool is_is_returnable_Set() const;
    bool is_is_returnable_Valid() const;

    bool isIsSortable() const;
    void setIsSortable(const bool &is_sortable);
    bool is_is_sortable_Set() const;
    bool is_is_sortable_Valid() const;

    bool isIsSuggestable() const;
    void setIsSuggestable(const bool &is_suggestable);
    bool is_is_suggestable_Set() const;
    bool is_is_suggestable_Valid() const;

    QString getLessThanOperatorName() const;
    void setLessThanOperatorName(const QString &less_than_operator_name);
    bool is_less_than_operator_name_Set() const;
    bool is_less_than_operator_name_Valid() const;

    QString getObjectType() const;
    void setObjectType(const QString &object_type);
    bool is_object_type_Set() const;
    bool is_object_type_Valid() const;

    QString getOperatorName() const;
    void setOperatorName(const QString &operator_name);
    bool is_operator_name_Set() const;
    bool is_operator_name_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    QList<QString> m_enum_values;
    bool m_enum_values_isSet;
    bool m_enum_values_isValid;

    QString m_greater_than_operator_name;
    bool m_greater_than_operator_name_isSet;
    bool m_greater_than_operator_name_isValid;

    bool m_is_facetable;
    bool m_is_facetable_isSet;
    bool m_is_facetable_isValid;

    bool m_is_repeatable;
    bool m_is_repeatable_isSet;
    bool m_is_repeatable_isValid;

    bool m_is_returnable;
    bool m_is_returnable_isSet;
    bool m_is_returnable_isValid;

    bool m_is_sortable;
    bool m_is_sortable_isSet;
    bool m_is_sortable_isValid;

    bool m_is_suggestable;
    bool m_is_suggestable_isSet;
    bool m_is_suggestable_isValid;

    QString m_less_than_operator_name;
    bool m_less_than_operator_name_isSet;
    bool m_less_than_operator_name_isValid;

    QString m_object_type;
    bool m_object_type_isSet;
    bool m_object_type_isValid;

    QString m_operator_name;
    bool m_operator_name_isSet;
    bool m_operator_name_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIQueryOperator)

#endif // OAIQueryOperator_H
