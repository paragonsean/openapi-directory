/**
 * Cloud Search API
 * Cloud Search provides cloud-based search capabilities over Google Workspace data. The Cloud Search API allows indexing of non-Google Workspace data into Cloud Search.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEnterpriseTopazSidekickRecentDocumentsCardProto.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEnterpriseTopazSidekickRecentDocumentsCardProto::OAIEnterpriseTopazSidekickRecentDocumentsCardProto(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEnterpriseTopazSidekickRecentDocumentsCardProto::OAIEnterpriseTopazSidekickRecentDocumentsCardProto() {
    this->initializeModel();
}

OAIEnterpriseTopazSidekickRecentDocumentsCardProto::~OAIEnterpriseTopazSidekickRecentDocumentsCardProto() {}

void OAIEnterpriseTopazSidekickRecentDocumentsCardProto::initializeModel() {

    m_document_isSet = false;
    m_document_isValid = false;
}

void OAIEnterpriseTopazSidekickRecentDocumentsCardProto::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEnterpriseTopazSidekickRecentDocumentsCardProto::fromJsonObject(QJsonObject json) {

    m_document_isValid = ::OpenAPI::fromJsonValue(m_document, json[QString("document")]);
    m_document_isSet = !json[QString("document")].isNull() && m_document_isValid;
}

QString OAIEnterpriseTopazSidekickRecentDocumentsCardProto::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEnterpriseTopazSidekickRecentDocumentsCardProto::asJsonObject() const {
    QJsonObject obj;
    if (m_document.size() > 0) {
        obj.insert(QString("document"), ::OpenAPI::toJsonValue(m_document));
    }
    return obj;
}

QList<OAIEnterpriseTopazSidekickCommonDocument> OAIEnterpriseTopazSidekickRecentDocumentsCardProto::getDocument() const {
    return m_document;
}
void OAIEnterpriseTopazSidekickRecentDocumentsCardProto::setDocument(const QList<OAIEnterpriseTopazSidekickCommonDocument> &document) {
    m_document = document;
    m_document_isSet = true;
}

bool OAIEnterpriseTopazSidekickRecentDocumentsCardProto::is_document_Set() const{
    return m_document_isSet;
}

bool OAIEnterpriseTopazSidekickRecentDocumentsCardProto::is_document_Valid() const{
    return m_document_isValid;
}

bool OAIEnterpriseTopazSidekickRecentDocumentsCardProto::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_document.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEnterpriseTopazSidekickRecentDocumentsCardProto::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
