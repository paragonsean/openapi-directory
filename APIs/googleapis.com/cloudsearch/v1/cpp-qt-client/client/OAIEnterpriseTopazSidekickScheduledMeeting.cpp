/**
 * Cloud Search API
 * Cloud Search provides cloud-based search capabilities over Google Workspace data. The Cloud Search API allows indexing of non-Google Workspace data into Cloud Search.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEnterpriseTopazSidekickScheduledMeeting.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEnterpriseTopazSidekickScheduledMeeting::OAIEnterpriseTopazSidekickScheduledMeeting(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEnterpriseTopazSidekickScheduledMeeting::OAIEnterpriseTopazSidekickScheduledMeeting() {
    this->initializeModel();
}

OAIEnterpriseTopazSidekickScheduledMeeting::~OAIEnterpriseTopazSidekickScheduledMeeting() {}

void OAIEnterpriseTopazSidekickScheduledMeeting::initializeModel() {

    m_meeting_location_isSet = false;
    m_meeting_location_isValid = false;

    m_meeting_time_isSet = false;
    m_meeting_time_isValid = false;

    m_meeting_title_isSet = false;
    m_meeting_title_isValid = false;
}

void OAIEnterpriseTopazSidekickScheduledMeeting::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEnterpriseTopazSidekickScheduledMeeting::fromJsonObject(QJsonObject json) {

    m_meeting_location_isValid = ::OpenAPI::fromJsonValue(m_meeting_location, json[QString("meetingLocation")]);
    m_meeting_location_isSet = !json[QString("meetingLocation")].isNull() && m_meeting_location_isValid;

    m_meeting_time_isValid = ::OpenAPI::fromJsonValue(m_meeting_time, json[QString("meetingTime")]);
    m_meeting_time_isSet = !json[QString("meetingTime")].isNull() && m_meeting_time_isValid;

    m_meeting_title_isValid = ::OpenAPI::fromJsonValue(m_meeting_title, json[QString("meetingTitle")]);
    m_meeting_title_isSet = !json[QString("meetingTitle")].isNull() && m_meeting_title_isValid;
}

QString OAIEnterpriseTopazSidekickScheduledMeeting::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEnterpriseTopazSidekickScheduledMeeting::asJsonObject() const {
    QJsonObject obj;
    if (m_meeting_location_isSet) {
        obj.insert(QString("meetingLocation"), ::OpenAPI::toJsonValue(m_meeting_location));
    }
    if (m_meeting_time.isSet()) {
        obj.insert(QString("meetingTime"), ::OpenAPI::toJsonValue(m_meeting_time));
    }
    if (m_meeting_title_isSet) {
        obj.insert(QString("meetingTitle"), ::OpenAPI::toJsonValue(m_meeting_title));
    }
    return obj;
}

QString OAIEnterpriseTopazSidekickScheduledMeeting::getMeetingLocation() const {
    return m_meeting_location;
}
void OAIEnterpriseTopazSidekickScheduledMeeting::setMeetingLocation(const QString &meeting_location) {
    m_meeting_location = meeting_location;
    m_meeting_location_isSet = true;
}

bool OAIEnterpriseTopazSidekickScheduledMeeting::is_meeting_location_Set() const{
    return m_meeting_location_isSet;
}

bool OAIEnterpriseTopazSidekickScheduledMeeting::is_meeting_location_Valid() const{
    return m_meeting_location_isValid;
}

OAIEnterpriseTopazSidekickTimeSlot OAIEnterpriseTopazSidekickScheduledMeeting::getMeetingTime() const {
    return m_meeting_time;
}
void OAIEnterpriseTopazSidekickScheduledMeeting::setMeetingTime(const OAIEnterpriseTopazSidekickTimeSlot &meeting_time) {
    m_meeting_time = meeting_time;
    m_meeting_time_isSet = true;
}

bool OAIEnterpriseTopazSidekickScheduledMeeting::is_meeting_time_Set() const{
    return m_meeting_time_isSet;
}

bool OAIEnterpriseTopazSidekickScheduledMeeting::is_meeting_time_Valid() const{
    return m_meeting_time_isValid;
}

QString OAIEnterpriseTopazSidekickScheduledMeeting::getMeetingTitle() const {
    return m_meeting_title;
}
void OAIEnterpriseTopazSidekickScheduledMeeting::setMeetingTitle(const QString &meeting_title) {
    m_meeting_title = meeting_title;
    m_meeting_title_isSet = true;
}

bool OAIEnterpriseTopazSidekickScheduledMeeting::is_meeting_title_Set() const{
    return m_meeting_title_isSet;
}

bool OAIEnterpriseTopazSidekickScheduledMeeting::is_meeting_title_Valid() const{
    return m_meeting_title_isValid;
}

bool OAIEnterpriseTopazSidekickScheduledMeeting::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_meeting_location_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_meeting_time.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_meeting_title_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEnterpriseTopazSidekickScheduledMeeting::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
