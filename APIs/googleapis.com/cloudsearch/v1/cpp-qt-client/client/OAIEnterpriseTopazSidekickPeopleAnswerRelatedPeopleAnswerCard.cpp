/**
 * Cloud Search API
 * Cloud Search provides cloud-based search capabilities over Google Workspace data. The Cloud Search API allows indexing of non-Google Workspace data into Cloud Search.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard::OAIEnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard::OAIEnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard() {
    this->initializeModel();
}

OAIEnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard::~OAIEnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard() {}

void OAIEnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard::initializeModel() {

    m_disambiguation_info_isSet = false;
    m_disambiguation_info_isValid = false;

    m_header_isSet = false;
    m_header_isValid = false;

    m_related_people_isSet = false;
    m_related_people_isValid = false;

    m_relation_type_isSet = false;
    m_relation_type_isValid = false;

    m_response_status_isSet = false;
    m_response_status_isValid = false;

    m_status_message_isSet = false;
    m_status_message_isValid = false;

    m_subject_isSet = false;
    m_subject_isValid = false;
}

void OAIEnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard::fromJsonObject(QJsonObject json) {

    m_disambiguation_info_isValid = ::OpenAPI::fromJsonValue(m_disambiguation_info, json[QString("disambiguationInfo")]);
    m_disambiguation_info_isSet = !json[QString("disambiguationInfo")].isNull() && m_disambiguation_info_isValid;

    m_header_isValid = ::OpenAPI::fromJsonValue(m_header, json[QString("header")]);
    m_header_isSet = !json[QString("header")].isNull() && m_header_isValid;

    m_related_people_isValid = ::OpenAPI::fromJsonValue(m_related_people, json[QString("relatedPeople")]);
    m_related_people_isSet = !json[QString("relatedPeople")].isNull() && m_related_people_isValid;

    m_relation_type_isValid = ::OpenAPI::fromJsonValue(m_relation_type, json[QString("relationType")]);
    m_relation_type_isSet = !json[QString("relationType")].isNull() && m_relation_type_isValid;

    m_response_status_isValid = ::OpenAPI::fromJsonValue(m_response_status, json[QString("responseStatus")]);
    m_response_status_isSet = !json[QString("responseStatus")].isNull() && m_response_status_isValid;

    m_status_message_isValid = ::OpenAPI::fromJsonValue(m_status_message, json[QString("statusMessage")]);
    m_status_message_isSet = !json[QString("statusMessage")].isNull() && m_status_message_isValid;

    m_subject_isValid = ::OpenAPI::fromJsonValue(m_subject, json[QString("subject")]);
    m_subject_isSet = !json[QString("subject")].isNull() && m_subject_isValid;
}

QString OAIEnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard::asJsonObject() const {
    QJsonObject obj;
    if (m_disambiguation_info.isSet()) {
        obj.insert(QString("disambiguationInfo"), ::OpenAPI::toJsonValue(m_disambiguation_info));
    }
    if (m_header.isSet()) {
        obj.insert(QString("header"), ::OpenAPI::toJsonValue(m_header));
    }
    if (m_related_people.size() > 0) {
        obj.insert(QString("relatedPeople"), ::OpenAPI::toJsonValue(m_related_people));
    }
    if (m_relation_type_isSet) {
        obj.insert(QString("relationType"), ::OpenAPI::toJsonValue(m_relation_type));
    }
    if (m_response_status_isSet) {
        obj.insert(QString("responseStatus"), ::OpenAPI::toJsonValue(m_response_status));
    }
    if (m_status_message_isSet) {
        obj.insert(QString("statusMessage"), ::OpenAPI::toJsonValue(m_status_message));
    }
    if (m_subject.isSet()) {
        obj.insert(QString("subject"), ::OpenAPI::toJsonValue(m_subject));
    }
    return obj;
}

OAIEnterpriseTopazSidekickPeopleAnswerDisambiguationInfo OAIEnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard::getDisambiguationInfo() const {
    return m_disambiguation_info;
}
void OAIEnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard::setDisambiguationInfo(const OAIEnterpriseTopazSidekickPeopleAnswerDisambiguationInfo &disambiguation_info) {
    m_disambiguation_info = disambiguation_info;
    m_disambiguation_info_isSet = true;
}

bool OAIEnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard::is_disambiguation_info_Set() const{
    return m_disambiguation_info_isSet;
}

bool OAIEnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard::is_disambiguation_info_Valid() const{
    return m_disambiguation_info_isValid;
}

OAIEnterpriseTopazSidekickPeopleAnswerPeopleAnswerCardHeader OAIEnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard::getHeader() const {
    return m_header;
}
void OAIEnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard::setHeader(const OAIEnterpriseTopazSidekickPeopleAnswerPeopleAnswerCardHeader &header) {
    m_header = header;
    m_header_isSet = true;
}

bool OAIEnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard::is_header_Set() const{
    return m_header_isSet;
}

bool OAIEnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard::is_header_Valid() const{
    return m_header_isValid;
}

QList<OAIEnterpriseTopazSidekickCommonPerson> OAIEnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard::getRelatedPeople() const {
    return m_related_people;
}
void OAIEnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard::setRelatedPeople(const QList<OAIEnterpriseTopazSidekickCommonPerson> &related_people) {
    m_related_people = related_people;
    m_related_people_isSet = true;
}

bool OAIEnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard::is_related_people_Set() const{
    return m_related_people_isSet;
}

bool OAIEnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard::is_related_people_Valid() const{
    return m_related_people_isValid;
}

QString OAIEnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard::getRelationType() const {
    return m_relation_type;
}
void OAIEnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard::setRelationType(const QString &relation_type) {
    m_relation_type = relation_type;
    m_relation_type_isSet = true;
}

bool OAIEnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard::is_relation_type_Set() const{
    return m_relation_type_isSet;
}

bool OAIEnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard::is_relation_type_Valid() const{
    return m_relation_type_isValid;
}

QString OAIEnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard::getResponseStatus() const {
    return m_response_status;
}
void OAIEnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard::setResponseStatus(const QString &response_status) {
    m_response_status = response_status;
    m_response_status_isSet = true;
}

bool OAIEnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard::is_response_status_Set() const{
    return m_response_status_isSet;
}

bool OAIEnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard::is_response_status_Valid() const{
    return m_response_status_isValid;
}

QString OAIEnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard::getStatusMessage() const {
    return m_status_message;
}
void OAIEnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard::setStatusMessage(const QString &status_message) {
    m_status_message = status_message;
    m_status_message_isSet = true;
}

bool OAIEnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard::is_status_message_Set() const{
    return m_status_message_isSet;
}

bool OAIEnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard::is_status_message_Valid() const{
    return m_status_message_isValid;
}

OAIEnterpriseTopazSidekickCommonPerson OAIEnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard::getSubject() const {
    return m_subject;
}
void OAIEnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard::setSubject(const OAIEnterpriseTopazSidekickCommonPerson &subject) {
    m_subject = subject;
    m_subject_isSet = true;
}

bool OAIEnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard::is_subject_Set() const{
    return m_subject_isSet;
}

bool OAIEnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard::is_subject_Valid() const{
    return m_subject_isValid;
}

bool OAIEnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_disambiguation_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_header.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_related_people.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_relation_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_response_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subject.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
