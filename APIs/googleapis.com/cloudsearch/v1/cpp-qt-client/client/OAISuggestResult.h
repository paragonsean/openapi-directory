/**
 * Cloud Search API
 * Cloud Search provides cloud-based search capabilities over Google Workspace data. The Cloud Search API allows indexing of non-Google Workspace data into Cloud Search.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISuggestResult.h
 *
 * One suggestion result.
 */

#ifndef OAISuggestResult_H
#define OAISuggestResult_H

#include <QJsonObject>

#include "OAIObject.h"
#include "OAIPeopleSuggestion.h"
#include "OAISource.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPeopleSuggestion;
class OAISource;

class OAISuggestResult : public OAIObject {
public:
    OAISuggestResult();
    OAISuggestResult(QString json);
    ~OAISuggestResult() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIPeopleSuggestion getPeopleSuggestion() const;
    void setPeopleSuggestion(const OAIPeopleSuggestion &people_suggestion);
    bool is_people_suggestion_Set() const;
    bool is_people_suggestion_Valid() const;

    OAIObject getQuerySuggestion() const;
    void setQuerySuggestion(const OAIObject &query_suggestion);
    bool is_query_suggestion_Set() const;
    bool is_query_suggestion_Valid() const;

    OAISource getSource() const;
    void setSource(const OAISource &source);
    bool is_source_Set() const;
    bool is_source_Valid() const;

    QString getSuggestedQuery() const;
    void setSuggestedQuery(const QString &suggested_query);
    bool is_suggested_query_Set() const;
    bool is_suggested_query_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIPeopleSuggestion m_people_suggestion;
    bool m_people_suggestion_isSet;
    bool m_people_suggestion_isValid;

    OAIObject m_query_suggestion;
    bool m_query_suggestion_isSet;
    bool m_query_suggestion_isValid;

    OAISource m_source;
    bool m_source_isSet;
    bool m_source_isValid;

    QString m_suggested_query;
    bool m_suggested_query_isSet;
    bool m_suggested_query_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISuggestResult)

#endif // OAISuggestResult_H
