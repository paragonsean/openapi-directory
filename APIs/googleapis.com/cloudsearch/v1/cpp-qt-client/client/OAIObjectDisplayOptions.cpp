/**
 * Cloud Search API
 * Cloud Search provides cloud-based search capabilities over Google Workspace data. The Cloud Search API allows indexing of non-Google Workspace data into Cloud Search.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIObjectDisplayOptions.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIObjectDisplayOptions::OAIObjectDisplayOptions(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIObjectDisplayOptions::OAIObjectDisplayOptions() {
    this->initializeModel();
}

OAIObjectDisplayOptions::~OAIObjectDisplayOptions() {}

void OAIObjectDisplayOptions::initializeModel() {

    m_metalines_isSet = false;
    m_metalines_isValid = false;

    m_object_display_label_isSet = false;
    m_object_display_label_isValid = false;
}

void OAIObjectDisplayOptions::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIObjectDisplayOptions::fromJsonObject(QJsonObject json) {

    m_metalines_isValid = ::OpenAPI::fromJsonValue(m_metalines, json[QString("metalines")]);
    m_metalines_isSet = !json[QString("metalines")].isNull() && m_metalines_isValid;

    m_object_display_label_isValid = ::OpenAPI::fromJsonValue(m_object_display_label, json[QString("objectDisplayLabel")]);
    m_object_display_label_isSet = !json[QString("objectDisplayLabel")].isNull() && m_object_display_label_isValid;
}

QString OAIObjectDisplayOptions::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIObjectDisplayOptions::asJsonObject() const {
    QJsonObject obj;
    if (m_metalines.size() > 0) {
        obj.insert(QString("metalines"), ::OpenAPI::toJsonValue(m_metalines));
    }
    if (m_object_display_label_isSet) {
        obj.insert(QString("objectDisplayLabel"), ::OpenAPI::toJsonValue(m_object_display_label));
    }
    return obj;
}

QList<OAIMetaline> OAIObjectDisplayOptions::getMetalines() const {
    return m_metalines;
}
void OAIObjectDisplayOptions::setMetalines(const QList<OAIMetaline> &metalines) {
    m_metalines = metalines;
    m_metalines_isSet = true;
}

bool OAIObjectDisplayOptions::is_metalines_Set() const{
    return m_metalines_isSet;
}

bool OAIObjectDisplayOptions::is_metalines_Valid() const{
    return m_metalines_isValid;
}

QString OAIObjectDisplayOptions::getObjectDisplayLabel() const {
    return m_object_display_label;
}
void OAIObjectDisplayOptions::setObjectDisplayLabel(const QString &object_display_label) {
    m_object_display_label = object_display_label;
    m_object_display_label_isSet = true;
}

bool OAIObjectDisplayOptions::is_object_display_label_Set() const{
    return m_object_display_label_isSet;
}

bool OAIObjectDisplayOptions::is_object_display_label_Valid() const{
    return m_object_display_label_isValid;
}

bool OAIObjectDisplayOptions::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_metalines.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_object_display_label_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIObjectDisplayOptions::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
