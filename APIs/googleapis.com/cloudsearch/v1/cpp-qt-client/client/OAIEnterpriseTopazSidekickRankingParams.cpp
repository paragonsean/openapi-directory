/**
 * Cloud Search API
 * Cloud Search provides cloud-based search capabilities over Google Workspace data. The Cloud Search API allows indexing of non-Google Workspace data into Cloud Search.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEnterpriseTopazSidekickRankingParams.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEnterpriseTopazSidekickRankingParams::OAIEnterpriseTopazSidekickRankingParams(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEnterpriseTopazSidekickRankingParams::OAIEnterpriseTopazSidekickRankingParams() {
    this->initializeModel();
}

OAIEnterpriseTopazSidekickRankingParams::~OAIEnterpriseTopazSidekickRankingParams() {}

void OAIEnterpriseTopazSidekickRankingParams::initializeModel() {

    m_end_time_ms_isSet = false;
    m_end_time_ms_isValid = false;

    m_priority_isSet = false;
    m_priority_isValid = false;

    m_score_isSet = false;
    m_score_isValid = false;

    m_span_ms_isSet = false;
    m_span_ms_isValid = false;

    m_start_time_ms_isSet = false;
    m_start_time_ms_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIEnterpriseTopazSidekickRankingParams::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEnterpriseTopazSidekickRankingParams::fromJsonObject(QJsonObject json) {

    m_end_time_ms_isValid = ::OpenAPI::fromJsonValue(m_end_time_ms, json[QString("endTimeMs")]);
    m_end_time_ms_isSet = !json[QString("endTimeMs")].isNull() && m_end_time_ms_isValid;

    m_priority_isValid = ::OpenAPI::fromJsonValue(m_priority, json[QString("priority")]);
    m_priority_isSet = !json[QString("priority")].isNull() && m_priority_isValid;

    m_score_isValid = ::OpenAPI::fromJsonValue(m_score, json[QString("score")]);
    m_score_isSet = !json[QString("score")].isNull() && m_score_isValid;

    m_span_ms_isValid = ::OpenAPI::fromJsonValue(m_span_ms, json[QString("spanMs")]);
    m_span_ms_isSet = !json[QString("spanMs")].isNull() && m_span_ms_isValid;

    m_start_time_ms_isValid = ::OpenAPI::fromJsonValue(m_start_time_ms, json[QString("startTimeMs")]);
    m_start_time_ms_isSet = !json[QString("startTimeMs")].isNull() && m_start_time_ms_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIEnterpriseTopazSidekickRankingParams::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEnterpriseTopazSidekickRankingParams::asJsonObject() const {
    QJsonObject obj;
    if (m_end_time_ms_isSet) {
        obj.insert(QString("endTimeMs"), ::OpenAPI::toJsonValue(m_end_time_ms));
    }
    if (m_priority_isSet) {
        obj.insert(QString("priority"), ::OpenAPI::toJsonValue(m_priority));
    }
    if (m_score_isSet) {
        obj.insert(QString("score"), ::OpenAPI::toJsonValue(m_score));
    }
    if (m_span_ms_isSet) {
        obj.insert(QString("spanMs"), ::OpenAPI::toJsonValue(m_span_ms));
    }
    if (m_start_time_ms_isSet) {
        obj.insert(QString("startTimeMs"), ::OpenAPI::toJsonValue(m_start_time_ms));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QString OAIEnterpriseTopazSidekickRankingParams::getEndTimeMs() const {
    return m_end_time_ms;
}
void OAIEnterpriseTopazSidekickRankingParams::setEndTimeMs(const QString &end_time_ms) {
    m_end_time_ms = end_time_ms;
    m_end_time_ms_isSet = true;
}

bool OAIEnterpriseTopazSidekickRankingParams::is_end_time_ms_Set() const{
    return m_end_time_ms_isSet;
}

bool OAIEnterpriseTopazSidekickRankingParams::is_end_time_ms_Valid() const{
    return m_end_time_ms_isValid;
}

QString OAIEnterpriseTopazSidekickRankingParams::getPriority() const {
    return m_priority;
}
void OAIEnterpriseTopazSidekickRankingParams::setPriority(const QString &priority) {
    m_priority = priority;
    m_priority_isSet = true;
}

bool OAIEnterpriseTopazSidekickRankingParams::is_priority_Set() const{
    return m_priority_isSet;
}

bool OAIEnterpriseTopazSidekickRankingParams::is_priority_Valid() const{
    return m_priority_isValid;
}

float OAIEnterpriseTopazSidekickRankingParams::getScore() const {
    return m_score;
}
void OAIEnterpriseTopazSidekickRankingParams::setScore(const float &score) {
    m_score = score;
    m_score_isSet = true;
}

bool OAIEnterpriseTopazSidekickRankingParams::is_score_Set() const{
    return m_score_isSet;
}

bool OAIEnterpriseTopazSidekickRankingParams::is_score_Valid() const{
    return m_score_isValid;
}

QString OAIEnterpriseTopazSidekickRankingParams::getSpanMs() const {
    return m_span_ms;
}
void OAIEnterpriseTopazSidekickRankingParams::setSpanMs(const QString &span_ms) {
    m_span_ms = span_ms;
    m_span_ms_isSet = true;
}

bool OAIEnterpriseTopazSidekickRankingParams::is_span_ms_Set() const{
    return m_span_ms_isSet;
}

bool OAIEnterpriseTopazSidekickRankingParams::is_span_ms_Valid() const{
    return m_span_ms_isValid;
}

QString OAIEnterpriseTopazSidekickRankingParams::getStartTimeMs() const {
    return m_start_time_ms;
}
void OAIEnterpriseTopazSidekickRankingParams::setStartTimeMs(const QString &start_time_ms) {
    m_start_time_ms = start_time_ms;
    m_start_time_ms_isSet = true;
}

bool OAIEnterpriseTopazSidekickRankingParams::is_start_time_ms_Set() const{
    return m_start_time_ms_isSet;
}

bool OAIEnterpriseTopazSidekickRankingParams::is_start_time_ms_Valid() const{
    return m_start_time_ms_isValid;
}

QString OAIEnterpriseTopazSidekickRankingParams::getType() const {
    return m_type;
}
void OAIEnterpriseTopazSidekickRankingParams::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIEnterpriseTopazSidekickRankingParams::is_type_Set() const{
    return m_type_isSet;
}

bool OAIEnterpriseTopazSidekickRankingParams::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIEnterpriseTopazSidekickRankingParams::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_end_time_ms_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_priority_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_score_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_span_ms_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_time_ms_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEnterpriseTopazSidekickRankingParams::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
