/**
 * Cloud Search API
 * Cloud Search provides cloud-based search capabilities over Google Workspace data. The Cloud Search API allows indexing of non-Google Workspace data into Cloud Search.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPollItemsRequest.h
 *
 * 
 */

#ifndef OAIPollItemsRequest_H
#define OAIPollItemsRequest_H

#include <QJsonObject>

#include "OAIDebugOptions.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDebugOptions;

class OAIPollItemsRequest : public OAIObject {
public:
    OAIPollItemsRequest();
    OAIPollItemsRequest(QString json);
    ~OAIPollItemsRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getConnectorName() const;
    void setConnectorName(const QString &connector_name);
    bool is_connector_name_Set() const;
    bool is_connector_name_Valid() const;

    OAIDebugOptions getDebugOptions() const;
    void setDebugOptions(const OAIDebugOptions &debug_options);
    bool is_debug_options_Set() const;
    bool is_debug_options_Valid() const;

    qint32 getLimit() const;
    void setLimit(const qint32 &limit);
    bool is_limit_Set() const;
    bool is_limit_Valid() const;

    QString getQueue() const;
    void setQueue(const QString &queue);
    bool is_queue_Set() const;
    bool is_queue_Valid() const;

    QList<QString> getStatusCodes() const;
    void setStatusCodes(const QList<QString> &status_codes);
    bool is_status_codes_Set() const;
    bool is_status_codes_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_connector_name;
    bool m_connector_name_isSet;
    bool m_connector_name_isValid;

    OAIDebugOptions m_debug_options;
    bool m_debug_options_isSet;
    bool m_debug_options_isValid;

    qint32 m_limit;
    bool m_limit_isSet;
    bool m_limit_isValid;

    QString m_queue;
    bool m_queue_isSet;
    bool m_queue_isValid;

    QList<QString> m_status_codes;
    bool m_status_codes_isSet;
    bool m_status_codes_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPollItemsRequest)

#endif // OAIPollItemsRequest_H
