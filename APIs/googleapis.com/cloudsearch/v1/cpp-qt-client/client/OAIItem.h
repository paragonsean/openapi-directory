/**
 * Cloud Search API
 * Cloud Search provides cloud-based search capabilities over Google Workspace data. The Cloud Search API allows indexing of non-Google Workspace data into Cloud Search.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIItem.h
 *
 * Represents a single object that is an item in the search index, such as a file, folder, or a database record.
 */

#ifndef OAIItem_H
#define OAIItem_H

#include <QJsonObject>

#include "OAIItemAcl.h"
#include "OAIItemContent.h"
#include "OAIItemMetadata.h"
#include "OAIItemStatus.h"
#include "OAIItemStructuredData.h"
#include <QByteArray>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIItemAcl;
class OAIItemContent;
class OAIItemMetadata;
class OAIItemStatus;
class OAIItemStructuredData;

class OAIItem : public OAIObject {
public:
    OAIItem();
    OAIItem(QString json);
    ~OAIItem() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIItemAcl getAcl() const;
    void setAcl(const OAIItemAcl &acl);
    bool is_acl_Set() const;
    bool is_acl_Valid() const;

    OAIItemContent getContent() const;
    void setContent(const OAIItemContent &content);
    bool is_content_Set() const;
    bool is_content_Valid() const;

    QString getItemType() const;
    void setItemType(const QString &item_type);
    bool is_item_type_Set() const;
    bool is_item_type_Valid() const;

    OAIItemMetadata getMetadata() const;
    void setMetadata(const OAIItemMetadata &metadata);
    bool is_metadata_Set() const;
    bool is_metadata_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QByteArray getPayload() const;
    void setPayload(const QByteArray &payload);
    bool is_payload_Set() const;
    bool is_payload_Valid() const;

    QString getQueue() const;
    void setQueue(const QString &queue);
    bool is_queue_Set() const;
    bool is_queue_Valid() const;

    OAIItemStatus getStatus() const;
    void setStatus(const OAIItemStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    OAIItemStructuredData getStructuredData() const;
    void setStructuredData(const OAIItemStructuredData &structured_data);
    bool is_structured_data_Set() const;
    bool is_structured_data_Valid() const;

    QByteArray getVersion() const;
    void setVersion(const QByteArray &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIItemAcl m_acl;
    bool m_acl_isSet;
    bool m_acl_isValid;

    OAIItemContent m_content;
    bool m_content_isSet;
    bool m_content_isValid;

    QString m_item_type;
    bool m_item_type_isSet;
    bool m_item_type_isValid;

    OAIItemMetadata m_metadata;
    bool m_metadata_isSet;
    bool m_metadata_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QByteArray m_payload;
    bool m_payload_isSet;
    bool m_payload_isValid;

    QString m_queue;
    bool m_queue_isSet;
    bool m_queue_isValid;

    OAIItemStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    OAIItemStructuredData m_structured_data;
    bool m_structured_data_isSet;
    bool m_structured_data_isValid;

    QByteArray m_version;
    bool m_version_isSet;
    bool m_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIItem)

#endif // OAIItem_H
