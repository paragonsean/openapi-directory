/**
 * Cloud Search API
 * Cloud Search provides cloud-based search capabilities over Google Workspace data. The Cloud Search API allows indexing of non-Google Workspace data into Cloud Search.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDataSource.h
 *
 * Datasource is a logical namespace for items to be indexed. All items must belong to a datasource. This is the prerequisite before items can be indexed into Cloud Search. 
 */

#ifndef OAIDataSource_H
#define OAIDataSource_H

#include <QJsonObject>

#include "OAIGSuitePrincipal.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGSuitePrincipal;

class OAIDataSource : public OAIObject {
public:
    OAIDataSource();
    OAIDataSource(QString json);
    ~OAIDataSource() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isDisableModifications() const;
    void setDisableModifications(const bool &disable_modifications);
    bool is_disable_modifications_Set() const;
    bool is_disable_modifications_Valid() const;

    bool isDisableServing() const;
    void setDisableServing(const bool &disable_serving);
    bool is_disable_serving_Set() const;
    bool is_disable_serving_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    QList<QString> getIndexingServiceAccounts() const;
    void setIndexingServiceAccounts(const QList<QString> &indexing_service_accounts);
    bool is_indexing_service_accounts_Set() const;
    bool is_indexing_service_accounts_Valid() const;

    QList<OAIGSuitePrincipal> getItemsVisibility() const;
    void setItemsVisibility(const QList<OAIGSuitePrincipal> &items_visibility);
    bool is_items_visibility_Set() const;
    bool is_items_visibility_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList<QString> getOperationIds() const;
    void setOperationIds(const QList<QString> &operation_ids);
    bool is_operation_ids_Set() const;
    bool is_operation_ids_Valid() const;

    bool isReturnThumbnailUrls() const;
    void setReturnThumbnailUrls(const bool &return_thumbnail_urls);
    bool is_return_thumbnail_urls_Set() const;
    bool is_return_thumbnail_urls_Valid() const;

    QString getShortName() const;
    void setShortName(const QString &short_name);
    bool is_short_name_Set() const;
    bool is_short_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_disable_modifications;
    bool m_disable_modifications_isSet;
    bool m_disable_modifications_isValid;

    bool m_disable_serving;
    bool m_disable_serving_isSet;
    bool m_disable_serving_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    QList<QString> m_indexing_service_accounts;
    bool m_indexing_service_accounts_isSet;
    bool m_indexing_service_accounts_isValid;

    QList<OAIGSuitePrincipal> m_items_visibility;
    bool m_items_visibility_isSet;
    bool m_items_visibility_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList<QString> m_operation_ids;
    bool m_operation_ids_isSet;
    bool m_operation_ids_isValid;

    bool m_return_thumbnail_urls;
    bool m_return_thumbnail_urls_isSet;
    bool m_return_thumbnail_urls_isValid;

    QString m_short_name;
    bool m_short_name_isSet;
    bool m_short_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDataSource)

#endif // OAIDataSource_H
