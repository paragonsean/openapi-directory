/**
 * Cloud Search API
 * Cloud Search provides cloud-based search capabilities over Google Workspace data. The Cloud Search API allows indexing of non-Google Workspace data into Cloud Search.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINamedProperty.h
 *
 * A typed name-value pair for structured data. The type of the value should be the same as the registered type for the &#x60;name&#x60; property in the object definition of &#x60;objectType&#x60;.
 */

#ifndef OAINamedProperty_H
#define OAINamedProperty_H

#include <QJsonObject>

#include "OAIDateValues.h"
#include "OAIDoubleValues.h"
#include "OAIEnumValues.h"
#include "OAIHtmlValues.h"
#include "OAIIntegerValues.h"
#include "OAIObjectValues.h"
#include "OAITextValues.h"
#include "OAITimestampValues.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDateValues;
class OAIDoubleValues;
class OAIEnumValues;
class OAIHtmlValues;
class OAIIntegerValues;
class OAIObjectValues;
class OAITextValues;
class OAITimestampValues;

class OAINamedProperty : public OAIObject {
public:
    OAINamedProperty();
    OAINamedProperty(QString json);
    ~OAINamedProperty() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isBooleanValue() const;
    void setBooleanValue(const bool &boolean_value);
    bool is_boolean_value_Set() const;
    bool is_boolean_value_Valid() const;

    OAIDateValues getDateValues() const;
    void setDateValues(const OAIDateValues &date_values);
    bool is_date_values_Set() const;
    bool is_date_values_Valid() const;

    OAIDoubleValues getDoubleValues() const;
    void setDoubleValues(const OAIDoubleValues &double_values);
    bool is_double_values_Set() const;
    bool is_double_values_Valid() const;

    OAIEnumValues getEnumValues() const;
    void setEnumValues(const OAIEnumValues &enum_values);
    bool is_enum_values_Set() const;
    bool is_enum_values_Valid() const;

    OAIHtmlValues getHtmlValues() const;
    void setHtmlValues(const OAIHtmlValues &html_values);
    bool is_html_values_Set() const;
    bool is_html_values_Valid() const;

    OAIIntegerValues getIntegerValues() const;
    void setIntegerValues(const OAIIntegerValues &integer_values);
    bool is_integer_values_Set() const;
    bool is_integer_values_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIObjectValues getObjectValues() const;
    void setObjectValues(const OAIObjectValues &object_values);
    bool is_object_values_Set() const;
    bool is_object_values_Valid() const;

    OAITextValues getTextValues() const;
    void setTextValues(const OAITextValues &text_values);
    bool is_text_values_Set() const;
    bool is_text_values_Valid() const;

    OAITimestampValues getTimestampValues() const;
    void setTimestampValues(const OAITimestampValues &timestamp_values);
    bool is_timestamp_values_Set() const;
    bool is_timestamp_values_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_boolean_value;
    bool m_boolean_value_isSet;
    bool m_boolean_value_isValid;

    OAIDateValues m_date_values;
    bool m_date_values_isSet;
    bool m_date_values_isValid;

    OAIDoubleValues m_double_values;
    bool m_double_values_isSet;
    bool m_double_values_isValid;

    OAIEnumValues m_enum_values;
    bool m_enum_values_isSet;
    bool m_enum_values_isValid;

    OAIHtmlValues m_html_values;
    bool m_html_values_isSet;
    bool m_html_values_isValid;

    OAIIntegerValues m_integer_values;
    bool m_integer_values_isSet;
    bool m_integer_values_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIObjectValues m_object_values;
    bool m_object_values_isSet;
    bool m_object_values_isValid;

    OAITextValues m_text_values;
    bool m_text_values_isSet;
    bool m_text_values_isValid;

    OAITimestampValues m_timestamp_values;
    bool m_timestamp_values_isSet;
    bool m_timestamp_values_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINamedProperty)

#endif // OAINamedProperty_H
