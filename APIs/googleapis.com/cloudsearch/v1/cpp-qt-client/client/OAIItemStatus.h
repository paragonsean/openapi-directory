/**
 * Cloud Search API
 * Cloud Search provides cloud-based search capabilities over Google Workspace data. The Cloud Search API allows indexing of non-Google Workspace data into Cloud Search.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIItemStatus.h
 *
 * This contains item&#39;s status and any errors.
 */

#ifndef OAIItemStatus_H
#define OAIItemStatus_H

#include <QJsonObject>

#include "OAIProcessingError.h"
#include "OAIRepositoryError.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIProcessingError;
class OAIRepositoryError;

class OAIItemStatus : public OAIObject {
public:
    OAIItemStatus();
    OAIItemStatus(QString json);
    ~OAIItemStatus() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCode() const;
    void setCode(const QString &code);
    bool is_code_Set() const;
    bool is_code_Valid() const;

    QList<OAIProcessingError> getProcessingErrors() const;
    void setProcessingErrors(const QList<OAIProcessingError> &processing_errors);
    bool is_processing_errors_Set() const;
    bool is_processing_errors_Valid() const;

    QList<OAIRepositoryError> getRepositoryErrors() const;
    void setRepositoryErrors(const QList<OAIRepositoryError> &repository_errors);
    bool is_repository_errors_Set() const;
    bool is_repository_errors_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_code;
    bool m_code_isSet;
    bool m_code_isValid;

    QList<OAIProcessingError> m_processing_errors;
    bool m_processing_errors_isSet;
    bool m_processing_errors_isValid;

    QList<OAIRepositoryError> m_repository_errors;
    bool m_repository_errors_isSet;
    bool m_repository_errors_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIItemStatus)

#endif // OAIItemStatus_H
