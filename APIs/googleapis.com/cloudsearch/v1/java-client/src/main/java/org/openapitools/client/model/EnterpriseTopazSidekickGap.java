/*
 * Cloud Search API
 * Cloud Search provides cloud-based search capabilities over Google Workspace data. The Cloud Search API allows indexing of non-Google Workspace data into Cloud Search.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * EnterpriseTopazSidekickGap
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:35:46.641752-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class EnterpriseTopazSidekickGap {
  public static final String SERIALIZED_NAME_DISPLAY_REMAINING_TIME = "displayRemainingTime";
  @SerializedName(SERIALIZED_NAME_DISPLAY_REMAINING_TIME)
  private String displayRemainingTime;

  public static final String SERIALIZED_NAME_END_TIME = "endTime";
  @SerializedName(SERIALIZED_NAME_END_TIME)
  private String endTime;

  public static final String SERIALIZED_NAME_END_TIME_MS = "endTimeMs";
  @SerializedName(SERIALIZED_NAME_END_TIME_MS)
  private String endTimeMs;

  public static final String SERIALIZED_NAME_REMAINING_TIME = "remainingTime";
  @SerializedName(SERIALIZED_NAME_REMAINING_TIME)
  private String remainingTime;

  public static final String SERIALIZED_NAME_START_TIME = "startTime";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private String startTime;

  public static final String SERIALIZED_NAME_START_TIME_MS = "startTimeMs";
  @SerializedName(SERIALIZED_NAME_START_TIME_MS)
  private String startTimeMs;

  public EnterpriseTopazSidekickGap() {
  }

  public EnterpriseTopazSidekickGap displayRemainingTime(String displayRemainingTime) {
    this.displayRemainingTime = displayRemainingTime;
    return this;
  }

  /**
   * Localized time string in the format: 1 hour 15 minutes
   * @return displayRemainingTime
   */
  @javax.annotation.Nullable
  public String getDisplayRemainingTime() {
    return displayRemainingTime;
  }

  public void setDisplayRemainingTime(String displayRemainingTime) {
    this.displayRemainingTime = displayRemainingTime;
  }


  public EnterpriseTopazSidekickGap endTime(String endTime) {
    this.endTime = endTime;
    return this;
  }

  /**
   * Localized time string in the format:(Locale CZ) 8:30 odp.
   * @return endTime
   */
  @javax.annotation.Nullable
  public String getEndTime() {
    return endTime;
  }

  public void setEndTime(String endTime) {
    this.endTime = endTime;
  }


  public EnterpriseTopazSidekickGap endTimeMs(String endTimeMs) {
    this.endTimeMs = endTimeMs;
    return this;
  }

  /**
   * Get endTimeMs
   * @return endTimeMs
   */
  @javax.annotation.Nullable
  public String getEndTimeMs() {
    return endTimeMs;
  }

  public void setEndTimeMs(String endTimeMs) {
    this.endTimeMs = endTimeMs;
  }


  public EnterpriseTopazSidekickGap remainingTime(String remainingTime) {
    this.remainingTime = remainingTime;
    return this;
  }

  /**
   * Get remainingTime
   * @return remainingTime
   */
  @javax.annotation.Nullable
  public String getRemainingTime() {
    return remainingTime;
  }

  public void setRemainingTime(String remainingTime) {
    this.remainingTime = remainingTime;
  }


  public EnterpriseTopazSidekickGap startTime(String startTime) {
    this.startTime = startTime;
    return this;
  }

  /**
   * Localized time string in the format:(Locale CZ) 8:30 odp.
   * @return startTime
   */
  @javax.annotation.Nullable
  public String getStartTime() {
    return startTime;
  }

  public void setStartTime(String startTime) {
    this.startTime = startTime;
  }


  public EnterpriseTopazSidekickGap startTimeMs(String startTimeMs) {
    this.startTimeMs = startTimeMs;
    return this;
  }

  /**
   * Get startTimeMs
   * @return startTimeMs
   */
  @javax.annotation.Nullable
  public String getStartTimeMs() {
    return startTimeMs;
  }

  public void setStartTimeMs(String startTimeMs) {
    this.startTimeMs = startTimeMs;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EnterpriseTopazSidekickGap enterpriseTopazSidekickGap = (EnterpriseTopazSidekickGap) o;
    return Objects.equals(this.displayRemainingTime, enterpriseTopazSidekickGap.displayRemainingTime) &&
        Objects.equals(this.endTime, enterpriseTopazSidekickGap.endTime) &&
        Objects.equals(this.endTimeMs, enterpriseTopazSidekickGap.endTimeMs) &&
        Objects.equals(this.remainingTime, enterpriseTopazSidekickGap.remainingTime) &&
        Objects.equals(this.startTime, enterpriseTopazSidekickGap.startTime) &&
        Objects.equals(this.startTimeMs, enterpriseTopazSidekickGap.startTimeMs);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayRemainingTime, endTime, endTimeMs, remainingTime, startTime, startTimeMs);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EnterpriseTopazSidekickGap {\n");
    sb.append("    displayRemainingTime: ").append(toIndentedString(displayRemainingTime)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    endTimeMs: ").append(toIndentedString(endTimeMs)).append("\n");
    sb.append("    remainingTime: ").append(toIndentedString(remainingTime)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    startTimeMs: ").append(toIndentedString(startTimeMs)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("displayRemainingTime");
    openapiFields.add("endTime");
    openapiFields.add("endTimeMs");
    openapiFields.add("remainingTime");
    openapiFields.add("startTime");
    openapiFields.add("startTimeMs");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to EnterpriseTopazSidekickGap
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!EnterpriseTopazSidekickGap.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EnterpriseTopazSidekickGap is not found in the empty JSON string", EnterpriseTopazSidekickGap.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!EnterpriseTopazSidekickGap.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EnterpriseTopazSidekickGap` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("displayRemainingTime") != null && !jsonObj.get("displayRemainingTime").isJsonNull()) && !jsonObj.get("displayRemainingTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayRemainingTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayRemainingTime").toString()));
      }
      if ((jsonObj.get("endTime") != null && !jsonObj.get("endTime").isJsonNull()) && !jsonObj.get("endTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `endTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("endTime").toString()));
      }
      if ((jsonObj.get("endTimeMs") != null && !jsonObj.get("endTimeMs").isJsonNull()) && !jsonObj.get("endTimeMs").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `endTimeMs` to be a primitive type in the JSON string but got `%s`", jsonObj.get("endTimeMs").toString()));
      }
      if ((jsonObj.get("remainingTime") != null && !jsonObj.get("remainingTime").isJsonNull()) && !jsonObj.get("remainingTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `remainingTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("remainingTime").toString()));
      }
      if ((jsonObj.get("startTime") != null && !jsonObj.get("startTime").isJsonNull()) && !jsonObj.get("startTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `startTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("startTime").toString()));
      }
      if ((jsonObj.get("startTimeMs") != null && !jsonObj.get("startTimeMs").isJsonNull()) && !jsonObj.get("startTimeMs").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `startTimeMs` to be a primitive type in the JSON string but got `%s`", jsonObj.get("startTimeMs").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EnterpriseTopazSidekickGap.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EnterpriseTopazSidekickGap' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EnterpriseTopazSidekickGap> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EnterpriseTopazSidekickGap.class));

       return (TypeAdapter<T>) new TypeAdapter<EnterpriseTopazSidekickGap>() {
           @Override
           public void write(JsonWriter out, EnterpriseTopazSidekickGap value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EnterpriseTopazSidekickGap read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of EnterpriseTopazSidekickGap given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of EnterpriseTopazSidekickGap
   * @throws IOException if the JSON string is invalid with respect to EnterpriseTopazSidekickGap
   */
  public static EnterpriseTopazSidekickGap fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EnterpriseTopazSidekickGap.class);
  }

  /**
   * Convert an instance of EnterpriseTopazSidekickGap to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

