/*
 * Cloud Search API
 * Cloud Search provides cloud-based search capabilities over Google Workspace data. The Cloud Search API allows indexing of non-Google Workspace data into Cloud Search.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.GetCustomerIndexStatsResponse;
import org.openapitools.client.model.GetCustomerQueryStatsResponse;
import org.openapitools.client.model.GetCustomerSearchApplicationStatsResponse;
import org.openapitools.client.model.GetCustomerSessionStatsResponse;
import org.openapitools.client.model.GetCustomerUserStatsResponse;
import org.openapitools.client.model.GetDataSourceIndexStatsResponse;
import org.openapitools.client.model.GetSearchApplicationQueryStatsResponse;
import org.openapitools.client.model.GetSearchApplicationSessionStatsResponse;
import org.openapitools.client.model.GetSearchApplicationUserStatsResponse;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class StatsApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public StatsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public StatsApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for cloudsearchStatsGetIndex
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fromDateDay Day of month. Must be from 1 to 31 and valid for the year and month. (optional)
     * @param fromDateMonth Month of date. Must be from 1 to 12. (optional)
     * @param fromDateYear Year of date. Must be from 1 to 9999. (optional)
     * @param toDateDay Day of month. Must be from 1 to 31 and valid for the year and month. (optional)
     * @param toDateMonth Month of date. Must be from 1 to 12. (optional)
     * @param toDateYear Year of date. Must be from 1 to 9999. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call cloudsearchStatsGetIndexCall(String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, Integer fromDateDay, Integer fromDateMonth, Integer fromDateYear, Integer toDateDay, Integer toDateMonth, Integer toDateYear, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v1/stats/index";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if ($xgafv != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$.xgafv", $xgafv));
        }

        if (accessToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("access_token", accessToken));
        }

        if (alt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("alt", alt));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        if (fields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields", fields));
        }

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        if (oauthToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("oauth_token", oauthToken));
        }

        if (prettyPrint != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("prettyPrint", prettyPrint));
        }

        if (quotaUser != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("quotaUser", quotaUser));
        }

        if (uploadProtocol != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("upload_protocol", uploadProtocol));
        }

        if (uploadType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("uploadType", uploadType));
        }

        if (fromDateDay != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fromDate.day", fromDateDay));
        }

        if (fromDateMonth != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fromDate.month", fromDateMonth));
        }

        if (fromDateYear != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fromDate.year", fromDateYear));
        }

        if (toDateDay != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("toDate.day", toDateDay));
        }

        if (toDateMonth != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("toDate.month", toDateMonth));
        }

        if (toDateYear != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("toDate.year", toDateYear));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "Oauth2c", "Oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call cloudsearchStatsGetIndexValidateBeforeCall(String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, Integer fromDateDay, Integer fromDateMonth, Integer fromDateYear, Integer toDateDay, Integer toDateMonth, Integer toDateYear, final ApiCallback _callback) throws ApiException {
        return cloudsearchStatsGetIndexCall($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, fromDateDay, fromDateMonth, fromDateYear, toDateDay, toDateMonth, toDateYear, _callback);

    }

    /**
     * 
     * Gets indexed item statistics aggreggated across all data sources. This API only returns statistics for previous dates; it doesn&#39;t return statistics for the current day. **Note:** This API requires a standard end user account to execute.
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fromDateDay Day of month. Must be from 1 to 31 and valid for the year and month. (optional)
     * @param fromDateMonth Month of date. Must be from 1 to 12. (optional)
     * @param fromDateYear Year of date. Must be from 1 to 9999. (optional)
     * @param toDateDay Day of month. Must be from 1 to 31 and valid for the year and month. (optional)
     * @param toDateMonth Month of date. Must be from 1 to 12. (optional)
     * @param toDateYear Year of date. Must be from 1 to 9999. (optional)
     * @return GetCustomerIndexStatsResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public GetCustomerIndexStatsResponse cloudsearchStatsGetIndex(String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, Integer fromDateDay, Integer fromDateMonth, Integer fromDateYear, Integer toDateDay, Integer toDateMonth, Integer toDateYear) throws ApiException {
        ApiResponse<GetCustomerIndexStatsResponse> localVarResp = cloudsearchStatsGetIndexWithHttpInfo($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, fromDateDay, fromDateMonth, fromDateYear, toDateDay, toDateMonth, toDateYear);
        return localVarResp.getData();
    }

    /**
     * 
     * Gets indexed item statistics aggreggated across all data sources. This API only returns statistics for previous dates; it doesn&#39;t return statistics for the current day. **Note:** This API requires a standard end user account to execute.
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fromDateDay Day of month. Must be from 1 to 31 and valid for the year and month. (optional)
     * @param fromDateMonth Month of date. Must be from 1 to 12. (optional)
     * @param fromDateYear Year of date. Must be from 1 to 9999. (optional)
     * @param toDateDay Day of month. Must be from 1 to 31 and valid for the year and month. (optional)
     * @param toDateMonth Month of date. Must be from 1 to 12. (optional)
     * @param toDateYear Year of date. Must be from 1 to 9999. (optional)
     * @return ApiResponse&lt;GetCustomerIndexStatsResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GetCustomerIndexStatsResponse> cloudsearchStatsGetIndexWithHttpInfo(String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, Integer fromDateDay, Integer fromDateMonth, Integer fromDateYear, Integer toDateDay, Integer toDateMonth, Integer toDateYear) throws ApiException {
        okhttp3.Call localVarCall = cloudsearchStatsGetIndexValidateBeforeCall($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, fromDateDay, fromDateMonth, fromDateYear, toDateDay, toDateMonth, toDateYear, null);
        Type localVarReturnType = new TypeToken<GetCustomerIndexStatsResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Gets indexed item statistics aggreggated across all data sources. This API only returns statistics for previous dates; it doesn&#39;t return statistics for the current day. **Note:** This API requires a standard end user account to execute.
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fromDateDay Day of month. Must be from 1 to 31 and valid for the year and month. (optional)
     * @param fromDateMonth Month of date. Must be from 1 to 12. (optional)
     * @param fromDateYear Year of date. Must be from 1 to 9999. (optional)
     * @param toDateDay Day of month. Must be from 1 to 31 and valid for the year and month. (optional)
     * @param toDateMonth Month of date. Must be from 1 to 12. (optional)
     * @param toDateYear Year of date. Must be from 1 to 9999. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call cloudsearchStatsGetIndexAsync(String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, Integer fromDateDay, Integer fromDateMonth, Integer fromDateYear, Integer toDateDay, Integer toDateMonth, Integer toDateYear, final ApiCallback<GetCustomerIndexStatsResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = cloudsearchStatsGetIndexValidateBeforeCall($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, fromDateDay, fromDateMonth, fromDateYear, toDateDay, toDateMonth, toDateYear, _callback);
        Type localVarReturnType = new TypeToken<GetCustomerIndexStatsResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for cloudsearchStatsGetQuery
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fromDateDay Day of month. Must be from 1 to 31 and valid for the year and month. (optional)
     * @param fromDateMonth Month of date. Must be from 1 to 12. (optional)
     * @param fromDateYear Year of date. Must be from 1 to 9999. (optional)
     * @param toDateDay Day of month. Must be from 1 to 31 and valid for the year and month. (optional)
     * @param toDateMonth Month of date. Must be from 1 to 12. (optional)
     * @param toDateYear Year of date. Must be from 1 to 9999. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call cloudsearchStatsGetQueryCall(String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, Integer fromDateDay, Integer fromDateMonth, Integer fromDateYear, Integer toDateDay, Integer toDateMonth, Integer toDateYear, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v1/stats/query";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if ($xgafv != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$.xgafv", $xgafv));
        }

        if (accessToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("access_token", accessToken));
        }

        if (alt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("alt", alt));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        if (fields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields", fields));
        }

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        if (oauthToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("oauth_token", oauthToken));
        }

        if (prettyPrint != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("prettyPrint", prettyPrint));
        }

        if (quotaUser != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("quotaUser", quotaUser));
        }

        if (uploadProtocol != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("upload_protocol", uploadProtocol));
        }

        if (uploadType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("uploadType", uploadType));
        }

        if (fromDateDay != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fromDate.day", fromDateDay));
        }

        if (fromDateMonth != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fromDate.month", fromDateMonth));
        }

        if (fromDateYear != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fromDate.year", fromDateYear));
        }

        if (toDateDay != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("toDate.day", toDateDay));
        }

        if (toDateMonth != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("toDate.month", toDateMonth));
        }

        if (toDateYear != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("toDate.year", toDateYear));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "Oauth2c", "Oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call cloudsearchStatsGetQueryValidateBeforeCall(String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, Integer fromDateDay, Integer fromDateMonth, Integer fromDateYear, Integer toDateDay, Integer toDateMonth, Integer toDateYear, final ApiCallback _callback) throws ApiException {
        return cloudsearchStatsGetQueryCall($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, fromDateDay, fromDateMonth, fromDateYear, toDateDay, toDateMonth, toDateYear, _callback);

    }

    /**
     * 
     * Get the query statistics for customer. **Note:** This API requires a standard end user account to execute.
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fromDateDay Day of month. Must be from 1 to 31 and valid for the year and month. (optional)
     * @param fromDateMonth Month of date. Must be from 1 to 12. (optional)
     * @param fromDateYear Year of date. Must be from 1 to 9999. (optional)
     * @param toDateDay Day of month. Must be from 1 to 31 and valid for the year and month. (optional)
     * @param toDateMonth Month of date. Must be from 1 to 12. (optional)
     * @param toDateYear Year of date. Must be from 1 to 9999. (optional)
     * @return GetCustomerQueryStatsResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public GetCustomerQueryStatsResponse cloudsearchStatsGetQuery(String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, Integer fromDateDay, Integer fromDateMonth, Integer fromDateYear, Integer toDateDay, Integer toDateMonth, Integer toDateYear) throws ApiException {
        ApiResponse<GetCustomerQueryStatsResponse> localVarResp = cloudsearchStatsGetQueryWithHttpInfo($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, fromDateDay, fromDateMonth, fromDateYear, toDateDay, toDateMonth, toDateYear);
        return localVarResp.getData();
    }

    /**
     * 
     * Get the query statistics for customer. **Note:** This API requires a standard end user account to execute.
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fromDateDay Day of month. Must be from 1 to 31 and valid for the year and month. (optional)
     * @param fromDateMonth Month of date. Must be from 1 to 12. (optional)
     * @param fromDateYear Year of date. Must be from 1 to 9999. (optional)
     * @param toDateDay Day of month. Must be from 1 to 31 and valid for the year and month. (optional)
     * @param toDateMonth Month of date. Must be from 1 to 12. (optional)
     * @param toDateYear Year of date. Must be from 1 to 9999. (optional)
     * @return ApiResponse&lt;GetCustomerQueryStatsResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GetCustomerQueryStatsResponse> cloudsearchStatsGetQueryWithHttpInfo(String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, Integer fromDateDay, Integer fromDateMonth, Integer fromDateYear, Integer toDateDay, Integer toDateMonth, Integer toDateYear) throws ApiException {
        okhttp3.Call localVarCall = cloudsearchStatsGetQueryValidateBeforeCall($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, fromDateDay, fromDateMonth, fromDateYear, toDateDay, toDateMonth, toDateYear, null);
        Type localVarReturnType = new TypeToken<GetCustomerQueryStatsResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Get the query statistics for customer. **Note:** This API requires a standard end user account to execute.
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fromDateDay Day of month. Must be from 1 to 31 and valid for the year and month. (optional)
     * @param fromDateMonth Month of date. Must be from 1 to 12. (optional)
     * @param fromDateYear Year of date. Must be from 1 to 9999. (optional)
     * @param toDateDay Day of month. Must be from 1 to 31 and valid for the year and month. (optional)
     * @param toDateMonth Month of date. Must be from 1 to 12. (optional)
     * @param toDateYear Year of date. Must be from 1 to 9999. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call cloudsearchStatsGetQueryAsync(String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, Integer fromDateDay, Integer fromDateMonth, Integer fromDateYear, Integer toDateDay, Integer toDateMonth, Integer toDateYear, final ApiCallback<GetCustomerQueryStatsResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = cloudsearchStatsGetQueryValidateBeforeCall($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, fromDateDay, fromDateMonth, fromDateYear, toDateDay, toDateMonth, toDateYear, _callback);
        Type localVarReturnType = new TypeToken<GetCustomerQueryStatsResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for cloudsearchStatsGetSearchapplication
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param endDateDay Day of month. Must be from 1 to 31 and valid for the year and month. (optional)
     * @param endDateMonth Month of date. Must be from 1 to 12. (optional)
     * @param endDateYear Year of date. Must be from 1 to 9999. (optional)
     * @param startDateDay Day of month. Must be from 1 to 31 and valid for the year and month. (optional)
     * @param startDateMonth Month of date. Must be from 1 to 12. (optional)
     * @param startDateYear Year of date. Must be from 1 to 9999. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call cloudsearchStatsGetSearchapplicationCall(String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, Integer endDateDay, Integer endDateMonth, Integer endDateYear, Integer startDateDay, Integer startDateMonth, Integer startDateYear, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v1/stats/searchapplication";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if ($xgafv != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$.xgafv", $xgafv));
        }

        if (accessToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("access_token", accessToken));
        }

        if (alt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("alt", alt));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        if (fields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields", fields));
        }

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        if (oauthToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("oauth_token", oauthToken));
        }

        if (prettyPrint != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("prettyPrint", prettyPrint));
        }

        if (quotaUser != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("quotaUser", quotaUser));
        }

        if (uploadProtocol != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("upload_protocol", uploadProtocol));
        }

        if (uploadType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("uploadType", uploadType));
        }

        if (endDateDay != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("endDate.day", endDateDay));
        }

        if (endDateMonth != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("endDate.month", endDateMonth));
        }

        if (endDateYear != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("endDate.year", endDateYear));
        }

        if (startDateDay != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("startDate.day", startDateDay));
        }

        if (startDateMonth != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("startDate.month", startDateMonth));
        }

        if (startDateYear != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("startDate.year", startDateYear));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "Oauth2c", "Oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call cloudsearchStatsGetSearchapplicationValidateBeforeCall(String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, Integer endDateDay, Integer endDateMonth, Integer endDateYear, Integer startDateDay, Integer startDateMonth, Integer startDateYear, final ApiCallback _callback) throws ApiException {
        return cloudsearchStatsGetSearchapplicationCall($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, endDateDay, endDateMonth, endDateYear, startDateDay, startDateMonth, startDateYear, _callback);

    }

    /**
     * 
     * Get search application stats for customer. **Note:** This API requires a standard end user account to execute.
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param endDateDay Day of month. Must be from 1 to 31 and valid for the year and month. (optional)
     * @param endDateMonth Month of date. Must be from 1 to 12. (optional)
     * @param endDateYear Year of date. Must be from 1 to 9999. (optional)
     * @param startDateDay Day of month. Must be from 1 to 31 and valid for the year and month. (optional)
     * @param startDateMonth Month of date. Must be from 1 to 12. (optional)
     * @param startDateYear Year of date. Must be from 1 to 9999. (optional)
     * @return GetCustomerSearchApplicationStatsResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public GetCustomerSearchApplicationStatsResponse cloudsearchStatsGetSearchapplication(String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, Integer endDateDay, Integer endDateMonth, Integer endDateYear, Integer startDateDay, Integer startDateMonth, Integer startDateYear) throws ApiException {
        ApiResponse<GetCustomerSearchApplicationStatsResponse> localVarResp = cloudsearchStatsGetSearchapplicationWithHttpInfo($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, endDateDay, endDateMonth, endDateYear, startDateDay, startDateMonth, startDateYear);
        return localVarResp.getData();
    }

    /**
     * 
     * Get search application stats for customer. **Note:** This API requires a standard end user account to execute.
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param endDateDay Day of month. Must be from 1 to 31 and valid for the year and month. (optional)
     * @param endDateMonth Month of date. Must be from 1 to 12. (optional)
     * @param endDateYear Year of date. Must be from 1 to 9999. (optional)
     * @param startDateDay Day of month. Must be from 1 to 31 and valid for the year and month. (optional)
     * @param startDateMonth Month of date. Must be from 1 to 12. (optional)
     * @param startDateYear Year of date. Must be from 1 to 9999. (optional)
     * @return ApiResponse&lt;GetCustomerSearchApplicationStatsResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GetCustomerSearchApplicationStatsResponse> cloudsearchStatsGetSearchapplicationWithHttpInfo(String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, Integer endDateDay, Integer endDateMonth, Integer endDateYear, Integer startDateDay, Integer startDateMonth, Integer startDateYear) throws ApiException {
        okhttp3.Call localVarCall = cloudsearchStatsGetSearchapplicationValidateBeforeCall($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, endDateDay, endDateMonth, endDateYear, startDateDay, startDateMonth, startDateYear, null);
        Type localVarReturnType = new TypeToken<GetCustomerSearchApplicationStatsResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Get search application stats for customer. **Note:** This API requires a standard end user account to execute.
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param endDateDay Day of month. Must be from 1 to 31 and valid for the year and month. (optional)
     * @param endDateMonth Month of date. Must be from 1 to 12. (optional)
     * @param endDateYear Year of date. Must be from 1 to 9999. (optional)
     * @param startDateDay Day of month. Must be from 1 to 31 and valid for the year and month. (optional)
     * @param startDateMonth Month of date. Must be from 1 to 12. (optional)
     * @param startDateYear Year of date. Must be from 1 to 9999. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call cloudsearchStatsGetSearchapplicationAsync(String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, Integer endDateDay, Integer endDateMonth, Integer endDateYear, Integer startDateDay, Integer startDateMonth, Integer startDateYear, final ApiCallback<GetCustomerSearchApplicationStatsResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = cloudsearchStatsGetSearchapplicationValidateBeforeCall($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, endDateDay, endDateMonth, endDateYear, startDateDay, startDateMonth, startDateYear, _callback);
        Type localVarReturnType = new TypeToken<GetCustomerSearchApplicationStatsResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for cloudsearchStatsGetSession
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fromDateDay Day of month. Must be from 1 to 31 and valid for the year and month. (optional)
     * @param fromDateMonth Month of date. Must be from 1 to 12. (optional)
     * @param fromDateYear Year of date. Must be from 1 to 9999. (optional)
     * @param toDateDay Day of month. Must be from 1 to 31 and valid for the year and month. (optional)
     * @param toDateMonth Month of date. Must be from 1 to 12. (optional)
     * @param toDateYear Year of date. Must be from 1 to 9999. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call cloudsearchStatsGetSessionCall(String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, Integer fromDateDay, Integer fromDateMonth, Integer fromDateYear, Integer toDateDay, Integer toDateMonth, Integer toDateYear, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v1/stats/session";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if ($xgafv != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$.xgafv", $xgafv));
        }

        if (accessToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("access_token", accessToken));
        }

        if (alt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("alt", alt));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        if (fields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields", fields));
        }

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        if (oauthToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("oauth_token", oauthToken));
        }

        if (prettyPrint != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("prettyPrint", prettyPrint));
        }

        if (quotaUser != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("quotaUser", quotaUser));
        }

        if (uploadProtocol != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("upload_protocol", uploadProtocol));
        }

        if (uploadType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("uploadType", uploadType));
        }

        if (fromDateDay != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fromDate.day", fromDateDay));
        }

        if (fromDateMonth != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fromDate.month", fromDateMonth));
        }

        if (fromDateYear != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fromDate.year", fromDateYear));
        }

        if (toDateDay != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("toDate.day", toDateDay));
        }

        if (toDateMonth != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("toDate.month", toDateMonth));
        }

        if (toDateYear != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("toDate.year", toDateYear));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "Oauth2c", "Oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call cloudsearchStatsGetSessionValidateBeforeCall(String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, Integer fromDateDay, Integer fromDateMonth, Integer fromDateYear, Integer toDateDay, Integer toDateMonth, Integer toDateYear, final ApiCallback _callback) throws ApiException {
        return cloudsearchStatsGetSessionCall($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, fromDateDay, fromDateMonth, fromDateYear, toDateDay, toDateMonth, toDateYear, _callback);

    }

    /**
     * 
     * Get the # of search sessions, % of successful sessions with a click query statistics for customer. **Note:** This API requires a standard end user account to execute.
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fromDateDay Day of month. Must be from 1 to 31 and valid for the year and month. (optional)
     * @param fromDateMonth Month of date. Must be from 1 to 12. (optional)
     * @param fromDateYear Year of date. Must be from 1 to 9999. (optional)
     * @param toDateDay Day of month. Must be from 1 to 31 and valid for the year and month. (optional)
     * @param toDateMonth Month of date. Must be from 1 to 12. (optional)
     * @param toDateYear Year of date. Must be from 1 to 9999. (optional)
     * @return GetCustomerSessionStatsResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public GetCustomerSessionStatsResponse cloudsearchStatsGetSession(String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, Integer fromDateDay, Integer fromDateMonth, Integer fromDateYear, Integer toDateDay, Integer toDateMonth, Integer toDateYear) throws ApiException {
        ApiResponse<GetCustomerSessionStatsResponse> localVarResp = cloudsearchStatsGetSessionWithHttpInfo($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, fromDateDay, fromDateMonth, fromDateYear, toDateDay, toDateMonth, toDateYear);
        return localVarResp.getData();
    }

    /**
     * 
     * Get the # of search sessions, % of successful sessions with a click query statistics for customer. **Note:** This API requires a standard end user account to execute.
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fromDateDay Day of month. Must be from 1 to 31 and valid for the year and month. (optional)
     * @param fromDateMonth Month of date. Must be from 1 to 12. (optional)
     * @param fromDateYear Year of date. Must be from 1 to 9999. (optional)
     * @param toDateDay Day of month. Must be from 1 to 31 and valid for the year and month. (optional)
     * @param toDateMonth Month of date. Must be from 1 to 12. (optional)
     * @param toDateYear Year of date. Must be from 1 to 9999. (optional)
     * @return ApiResponse&lt;GetCustomerSessionStatsResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GetCustomerSessionStatsResponse> cloudsearchStatsGetSessionWithHttpInfo(String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, Integer fromDateDay, Integer fromDateMonth, Integer fromDateYear, Integer toDateDay, Integer toDateMonth, Integer toDateYear) throws ApiException {
        okhttp3.Call localVarCall = cloudsearchStatsGetSessionValidateBeforeCall($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, fromDateDay, fromDateMonth, fromDateYear, toDateDay, toDateMonth, toDateYear, null);
        Type localVarReturnType = new TypeToken<GetCustomerSessionStatsResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Get the # of search sessions, % of successful sessions with a click query statistics for customer. **Note:** This API requires a standard end user account to execute.
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fromDateDay Day of month. Must be from 1 to 31 and valid for the year and month. (optional)
     * @param fromDateMonth Month of date. Must be from 1 to 12. (optional)
     * @param fromDateYear Year of date. Must be from 1 to 9999. (optional)
     * @param toDateDay Day of month. Must be from 1 to 31 and valid for the year and month. (optional)
     * @param toDateMonth Month of date. Must be from 1 to 12. (optional)
     * @param toDateYear Year of date. Must be from 1 to 9999. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call cloudsearchStatsGetSessionAsync(String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, Integer fromDateDay, Integer fromDateMonth, Integer fromDateYear, Integer toDateDay, Integer toDateMonth, Integer toDateYear, final ApiCallback<GetCustomerSessionStatsResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = cloudsearchStatsGetSessionValidateBeforeCall($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, fromDateDay, fromDateMonth, fromDateYear, toDateDay, toDateMonth, toDateYear, _callback);
        Type localVarReturnType = new TypeToken<GetCustomerSessionStatsResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for cloudsearchStatsGetUser
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fromDateDay Day of month. Must be from 1 to 31 and valid for the year and month. (optional)
     * @param fromDateMonth Month of date. Must be from 1 to 12. (optional)
     * @param fromDateYear Year of date. Must be from 1 to 9999. (optional)
     * @param toDateDay Day of month. Must be from 1 to 31 and valid for the year and month. (optional)
     * @param toDateMonth Month of date. Must be from 1 to 12. (optional)
     * @param toDateYear Year of date. Must be from 1 to 9999. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call cloudsearchStatsGetUserCall(String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, Integer fromDateDay, Integer fromDateMonth, Integer fromDateYear, Integer toDateDay, Integer toDateMonth, Integer toDateYear, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v1/stats/user";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if ($xgafv != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$.xgafv", $xgafv));
        }

        if (accessToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("access_token", accessToken));
        }

        if (alt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("alt", alt));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        if (fields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields", fields));
        }

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        if (oauthToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("oauth_token", oauthToken));
        }

        if (prettyPrint != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("prettyPrint", prettyPrint));
        }

        if (quotaUser != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("quotaUser", quotaUser));
        }

        if (uploadProtocol != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("upload_protocol", uploadProtocol));
        }

        if (uploadType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("uploadType", uploadType));
        }

        if (fromDateDay != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fromDate.day", fromDateDay));
        }

        if (fromDateMonth != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fromDate.month", fromDateMonth));
        }

        if (fromDateYear != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fromDate.year", fromDateYear));
        }

        if (toDateDay != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("toDate.day", toDateDay));
        }

        if (toDateMonth != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("toDate.month", toDateMonth));
        }

        if (toDateYear != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("toDate.year", toDateYear));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "Oauth2c", "Oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call cloudsearchStatsGetUserValidateBeforeCall(String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, Integer fromDateDay, Integer fromDateMonth, Integer fromDateYear, Integer toDateDay, Integer toDateMonth, Integer toDateYear, final ApiCallback _callback) throws ApiException {
        return cloudsearchStatsGetUserCall($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, fromDateDay, fromDateMonth, fromDateYear, toDateDay, toDateMonth, toDateYear, _callback);

    }

    /**
     * 
     * Get the users statistics for customer. **Note:** This API requires a standard end user account to execute.
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fromDateDay Day of month. Must be from 1 to 31 and valid for the year and month. (optional)
     * @param fromDateMonth Month of date. Must be from 1 to 12. (optional)
     * @param fromDateYear Year of date. Must be from 1 to 9999. (optional)
     * @param toDateDay Day of month. Must be from 1 to 31 and valid for the year and month. (optional)
     * @param toDateMonth Month of date. Must be from 1 to 12. (optional)
     * @param toDateYear Year of date. Must be from 1 to 9999. (optional)
     * @return GetCustomerUserStatsResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public GetCustomerUserStatsResponse cloudsearchStatsGetUser(String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, Integer fromDateDay, Integer fromDateMonth, Integer fromDateYear, Integer toDateDay, Integer toDateMonth, Integer toDateYear) throws ApiException {
        ApiResponse<GetCustomerUserStatsResponse> localVarResp = cloudsearchStatsGetUserWithHttpInfo($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, fromDateDay, fromDateMonth, fromDateYear, toDateDay, toDateMonth, toDateYear);
        return localVarResp.getData();
    }

    /**
     * 
     * Get the users statistics for customer. **Note:** This API requires a standard end user account to execute.
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fromDateDay Day of month. Must be from 1 to 31 and valid for the year and month. (optional)
     * @param fromDateMonth Month of date. Must be from 1 to 12. (optional)
     * @param fromDateYear Year of date. Must be from 1 to 9999. (optional)
     * @param toDateDay Day of month. Must be from 1 to 31 and valid for the year and month. (optional)
     * @param toDateMonth Month of date. Must be from 1 to 12. (optional)
     * @param toDateYear Year of date. Must be from 1 to 9999. (optional)
     * @return ApiResponse&lt;GetCustomerUserStatsResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GetCustomerUserStatsResponse> cloudsearchStatsGetUserWithHttpInfo(String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, Integer fromDateDay, Integer fromDateMonth, Integer fromDateYear, Integer toDateDay, Integer toDateMonth, Integer toDateYear) throws ApiException {
        okhttp3.Call localVarCall = cloudsearchStatsGetUserValidateBeforeCall($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, fromDateDay, fromDateMonth, fromDateYear, toDateDay, toDateMonth, toDateYear, null);
        Type localVarReturnType = new TypeToken<GetCustomerUserStatsResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Get the users statistics for customer. **Note:** This API requires a standard end user account to execute.
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fromDateDay Day of month. Must be from 1 to 31 and valid for the year and month. (optional)
     * @param fromDateMonth Month of date. Must be from 1 to 12. (optional)
     * @param fromDateYear Year of date. Must be from 1 to 9999. (optional)
     * @param toDateDay Day of month. Must be from 1 to 31 and valid for the year and month. (optional)
     * @param toDateMonth Month of date. Must be from 1 to 12. (optional)
     * @param toDateYear Year of date. Must be from 1 to 9999. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call cloudsearchStatsGetUserAsync(String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, Integer fromDateDay, Integer fromDateMonth, Integer fromDateYear, Integer toDateDay, Integer toDateMonth, Integer toDateYear, final ApiCallback<GetCustomerUserStatsResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = cloudsearchStatsGetUserValidateBeforeCall($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, fromDateDay, fromDateMonth, fromDateYear, toDateDay, toDateMonth, toDateYear, _callback);
        Type localVarReturnType = new TypeToken<GetCustomerUserStatsResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for cloudsearchStatsIndexDatasourcesGet
     * @param name The resource id of the data source to retrieve statistics for, in the following format: \&quot;datasources/{source_id}\&quot; (required)
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fromDateDay Day of month. Must be from 1 to 31 and valid for the year and month. (optional)
     * @param fromDateMonth Month of date. Must be from 1 to 12. (optional)
     * @param fromDateYear Year of date. Must be from 1 to 9999. (optional)
     * @param toDateDay Day of month. Must be from 1 to 31 and valid for the year and month. (optional)
     * @param toDateMonth Month of date. Must be from 1 to 12. (optional)
     * @param toDateYear Year of date. Must be from 1 to 9999. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call cloudsearchStatsIndexDatasourcesGetCall(String name, String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, Integer fromDateDay, Integer fromDateMonth, Integer fromDateYear, Integer toDateDay, Integer toDateMonth, Integer toDateYear, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v1/stats/index/{name}"
            .replace("{" + "name" + "}", localVarApiClient.escapeString(name.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if ($xgafv != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$.xgafv", $xgafv));
        }

        if (accessToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("access_token", accessToken));
        }

        if (alt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("alt", alt));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        if (fields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields", fields));
        }

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        if (oauthToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("oauth_token", oauthToken));
        }

        if (prettyPrint != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("prettyPrint", prettyPrint));
        }

        if (quotaUser != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("quotaUser", quotaUser));
        }

        if (uploadProtocol != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("upload_protocol", uploadProtocol));
        }

        if (uploadType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("uploadType", uploadType));
        }

        if (fromDateDay != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fromDate.day", fromDateDay));
        }

        if (fromDateMonth != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fromDate.month", fromDateMonth));
        }

        if (fromDateYear != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fromDate.year", fromDateYear));
        }

        if (toDateDay != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("toDate.day", toDateDay));
        }

        if (toDateMonth != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("toDate.month", toDateMonth));
        }

        if (toDateYear != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("toDate.year", toDateYear));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "Oauth2c", "Oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call cloudsearchStatsIndexDatasourcesGetValidateBeforeCall(String name, String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, Integer fromDateDay, Integer fromDateMonth, Integer fromDateYear, Integer toDateDay, Integer toDateMonth, Integer toDateYear, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'name' is set
        if (name == null) {
            throw new ApiException("Missing the required parameter 'name' when calling cloudsearchStatsIndexDatasourcesGet(Async)");
        }

        return cloudsearchStatsIndexDatasourcesGetCall(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, fromDateDay, fromDateMonth, fromDateYear, toDateDay, toDateMonth, toDateYear, _callback);

    }

    /**
     * 
     * Gets indexed item statistics for a single data source. **Note:** This API requires a standard end user account to execute.
     * @param name The resource id of the data source to retrieve statistics for, in the following format: \&quot;datasources/{source_id}\&quot; (required)
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fromDateDay Day of month. Must be from 1 to 31 and valid for the year and month. (optional)
     * @param fromDateMonth Month of date. Must be from 1 to 12. (optional)
     * @param fromDateYear Year of date. Must be from 1 to 9999. (optional)
     * @param toDateDay Day of month. Must be from 1 to 31 and valid for the year and month. (optional)
     * @param toDateMonth Month of date. Must be from 1 to 12. (optional)
     * @param toDateYear Year of date. Must be from 1 to 9999. (optional)
     * @return GetDataSourceIndexStatsResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public GetDataSourceIndexStatsResponse cloudsearchStatsIndexDatasourcesGet(String name, String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, Integer fromDateDay, Integer fromDateMonth, Integer fromDateYear, Integer toDateDay, Integer toDateMonth, Integer toDateYear) throws ApiException {
        ApiResponse<GetDataSourceIndexStatsResponse> localVarResp = cloudsearchStatsIndexDatasourcesGetWithHttpInfo(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, fromDateDay, fromDateMonth, fromDateYear, toDateDay, toDateMonth, toDateYear);
        return localVarResp.getData();
    }

    /**
     * 
     * Gets indexed item statistics for a single data source. **Note:** This API requires a standard end user account to execute.
     * @param name The resource id of the data source to retrieve statistics for, in the following format: \&quot;datasources/{source_id}\&quot; (required)
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fromDateDay Day of month. Must be from 1 to 31 and valid for the year and month. (optional)
     * @param fromDateMonth Month of date. Must be from 1 to 12. (optional)
     * @param fromDateYear Year of date. Must be from 1 to 9999. (optional)
     * @param toDateDay Day of month. Must be from 1 to 31 and valid for the year and month. (optional)
     * @param toDateMonth Month of date. Must be from 1 to 12. (optional)
     * @param toDateYear Year of date. Must be from 1 to 9999. (optional)
     * @return ApiResponse&lt;GetDataSourceIndexStatsResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GetDataSourceIndexStatsResponse> cloudsearchStatsIndexDatasourcesGetWithHttpInfo(String name, String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, Integer fromDateDay, Integer fromDateMonth, Integer fromDateYear, Integer toDateDay, Integer toDateMonth, Integer toDateYear) throws ApiException {
        okhttp3.Call localVarCall = cloudsearchStatsIndexDatasourcesGetValidateBeforeCall(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, fromDateDay, fromDateMonth, fromDateYear, toDateDay, toDateMonth, toDateYear, null);
        Type localVarReturnType = new TypeToken<GetDataSourceIndexStatsResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Gets indexed item statistics for a single data source. **Note:** This API requires a standard end user account to execute.
     * @param name The resource id of the data source to retrieve statistics for, in the following format: \&quot;datasources/{source_id}\&quot; (required)
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fromDateDay Day of month. Must be from 1 to 31 and valid for the year and month. (optional)
     * @param fromDateMonth Month of date. Must be from 1 to 12. (optional)
     * @param fromDateYear Year of date. Must be from 1 to 9999. (optional)
     * @param toDateDay Day of month. Must be from 1 to 31 and valid for the year and month. (optional)
     * @param toDateMonth Month of date. Must be from 1 to 12. (optional)
     * @param toDateYear Year of date. Must be from 1 to 9999. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call cloudsearchStatsIndexDatasourcesGetAsync(String name, String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, Integer fromDateDay, Integer fromDateMonth, Integer fromDateYear, Integer toDateDay, Integer toDateMonth, Integer toDateYear, final ApiCallback<GetDataSourceIndexStatsResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = cloudsearchStatsIndexDatasourcesGetValidateBeforeCall(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, fromDateDay, fromDateMonth, fromDateYear, toDateDay, toDateMonth, toDateYear, _callback);
        Type localVarReturnType = new TypeToken<GetDataSourceIndexStatsResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for cloudsearchStatsQuerySearchapplicationsGet
     * @param name The resource id of the search application query stats, in the following format: searchapplications/{application_id} (required)
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fromDateDay Day of month. Must be from 1 to 31 and valid for the year and month. (optional)
     * @param fromDateMonth Month of date. Must be from 1 to 12. (optional)
     * @param fromDateYear Year of date. Must be from 1 to 9999. (optional)
     * @param toDateDay Day of month. Must be from 1 to 31 and valid for the year and month. (optional)
     * @param toDateMonth Month of date. Must be from 1 to 12. (optional)
     * @param toDateYear Year of date. Must be from 1 to 9999. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call cloudsearchStatsQuerySearchapplicationsGetCall(String name, String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, Integer fromDateDay, Integer fromDateMonth, Integer fromDateYear, Integer toDateDay, Integer toDateMonth, Integer toDateYear, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v1/stats/query/{name}"
            .replace("{" + "name" + "}", localVarApiClient.escapeString(name.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if ($xgafv != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$.xgafv", $xgafv));
        }

        if (accessToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("access_token", accessToken));
        }

        if (alt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("alt", alt));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        if (fields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields", fields));
        }

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        if (oauthToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("oauth_token", oauthToken));
        }

        if (prettyPrint != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("prettyPrint", prettyPrint));
        }

        if (quotaUser != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("quotaUser", quotaUser));
        }

        if (uploadProtocol != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("upload_protocol", uploadProtocol));
        }

        if (uploadType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("uploadType", uploadType));
        }

        if (fromDateDay != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fromDate.day", fromDateDay));
        }

        if (fromDateMonth != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fromDate.month", fromDateMonth));
        }

        if (fromDateYear != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fromDate.year", fromDateYear));
        }

        if (toDateDay != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("toDate.day", toDateDay));
        }

        if (toDateMonth != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("toDate.month", toDateMonth));
        }

        if (toDateYear != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("toDate.year", toDateYear));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "Oauth2c", "Oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call cloudsearchStatsQuerySearchapplicationsGetValidateBeforeCall(String name, String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, Integer fromDateDay, Integer fromDateMonth, Integer fromDateYear, Integer toDateDay, Integer toDateMonth, Integer toDateYear, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'name' is set
        if (name == null) {
            throw new ApiException("Missing the required parameter 'name' when calling cloudsearchStatsQuerySearchapplicationsGet(Async)");
        }

        return cloudsearchStatsQuerySearchapplicationsGetCall(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, fromDateDay, fromDateMonth, fromDateYear, toDateDay, toDateMonth, toDateYear, _callback);

    }

    /**
     * 
     * Get the query statistics for search application. **Note:** This API requires a standard end user account to execute.
     * @param name The resource id of the search application query stats, in the following format: searchapplications/{application_id} (required)
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fromDateDay Day of month. Must be from 1 to 31 and valid for the year and month. (optional)
     * @param fromDateMonth Month of date. Must be from 1 to 12. (optional)
     * @param fromDateYear Year of date. Must be from 1 to 9999. (optional)
     * @param toDateDay Day of month. Must be from 1 to 31 and valid for the year and month. (optional)
     * @param toDateMonth Month of date. Must be from 1 to 12. (optional)
     * @param toDateYear Year of date. Must be from 1 to 9999. (optional)
     * @return GetSearchApplicationQueryStatsResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public GetSearchApplicationQueryStatsResponse cloudsearchStatsQuerySearchapplicationsGet(String name, String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, Integer fromDateDay, Integer fromDateMonth, Integer fromDateYear, Integer toDateDay, Integer toDateMonth, Integer toDateYear) throws ApiException {
        ApiResponse<GetSearchApplicationQueryStatsResponse> localVarResp = cloudsearchStatsQuerySearchapplicationsGetWithHttpInfo(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, fromDateDay, fromDateMonth, fromDateYear, toDateDay, toDateMonth, toDateYear);
        return localVarResp.getData();
    }

    /**
     * 
     * Get the query statistics for search application. **Note:** This API requires a standard end user account to execute.
     * @param name The resource id of the search application query stats, in the following format: searchapplications/{application_id} (required)
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fromDateDay Day of month. Must be from 1 to 31 and valid for the year and month. (optional)
     * @param fromDateMonth Month of date. Must be from 1 to 12. (optional)
     * @param fromDateYear Year of date. Must be from 1 to 9999. (optional)
     * @param toDateDay Day of month. Must be from 1 to 31 and valid for the year and month. (optional)
     * @param toDateMonth Month of date. Must be from 1 to 12. (optional)
     * @param toDateYear Year of date. Must be from 1 to 9999. (optional)
     * @return ApiResponse&lt;GetSearchApplicationQueryStatsResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GetSearchApplicationQueryStatsResponse> cloudsearchStatsQuerySearchapplicationsGetWithHttpInfo(String name, String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, Integer fromDateDay, Integer fromDateMonth, Integer fromDateYear, Integer toDateDay, Integer toDateMonth, Integer toDateYear) throws ApiException {
        okhttp3.Call localVarCall = cloudsearchStatsQuerySearchapplicationsGetValidateBeforeCall(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, fromDateDay, fromDateMonth, fromDateYear, toDateDay, toDateMonth, toDateYear, null);
        Type localVarReturnType = new TypeToken<GetSearchApplicationQueryStatsResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Get the query statistics for search application. **Note:** This API requires a standard end user account to execute.
     * @param name The resource id of the search application query stats, in the following format: searchapplications/{application_id} (required)
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fromDateDay Day of month. Must be from 1 to 31 and valid for the year and month. (optional)
     * @param fromDateMonth Month of date. Must be from 1 to 12. (optional)
     * @param fromDateYear Year of date. Must be from 1 to 9999. (optional)
     * @param toDateDay Day of month. Must be from 1 to 31 and valid for the year and month. (optional)
     * @param toDateMonth Month of date. Must be from 1 to 12. (optional)
     * @param toDateYear Year of date. Must be from 1 to 9999. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call cloudsearchStatsQuerySearchapplicationsGetAsync(String name, String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, Integer fromDateDay, Integer fromDateMonth, Integer fromDateYear, Integer toDateDay, Integer toDateMonth, Integer toDateYear, final ApiCallback<GetSearchApplicationQueryStatsResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = cloudsearchStatsQuerySearchapplicationsGetValidateBeforeCall(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, fromDateDay, fromDateMonth, fromDateYear, toDateDay, toDateMonth, toDateYear, _callback);
        Type localVarReturnType = new TypeToken<GetSearchApplicationQueryStatsResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for cloudsearchStatsSessionSearchapplicationsGet
     * @param name The resource id of the search application session stats, in the following format: searchapplications/{application_id} (required)
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fromDateDay Day of month. Must be from 1 to 31 and valid for the year and month. (optional)
     * @param fromDateMonth Month of date. Must be from 1 to 12. (optional)
     * @param fromDateYear Year of date. Must be from 1 to 9999. (optional)
     * @param toDateDay Day of month. Must be from 1 to 31 and valid for the year and month. (optional)
     * @param toDateMonth Month of date. Must be from 1 to 12. (optional)
     * @param toDateYear Year of date. Must be from 1 to 9999. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call cloudsearchStatsSessionSearchapplicationsGetCall(String name, String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, Integer fromDateDay, Integer fromDateMonth, Integer fromDateYear, Integer toDateDay, Integer toDateMonth, Integer toDateYear, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v1/stats/session/{name}"
            .replace("{" + "name" + "}", localVarApiClient.escapeString(name.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if ($xgafv != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$.xgafv", $xgafv));
        }

        if (accessToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("access_token", accessToken));
        }

        if (alt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("alt", alt));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        if (fields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields", fields));
        }

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        if (oauthToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("oauth_token", oauthToken));
        }

        if (prettyPrint != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("prettyPrint", prettyPrint));
        }

        if (quotaUser != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("quotaUser", quotaUser));
        }

        if (uploadProtocol != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("upload_protocol", uploadProtocol));
        }

        if (uploadType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("uploadType", uploadType));
        }

        if (fromDateDay != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fromDate.day", fromDateDay));
        }

        if (fromDateMonth != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fromDate.month", fromDateMonth));
        }

        if (fromDateYear != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fromDate.year", fromDateYear));
        }

        if (toDateDay != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("toDate.day", toDateDay));
        }

        if (toDateMonth != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("toDate.month", toDateMonth));
        }

        if (toDateYear != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("toDate.year", toDateYear));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "Oauth2c", "Oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call cloudsearchStatsSessionSearchapplicationsGetValidateBeforeCall(String name, String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, Integer fromDateDay, Integer fromDateMonth, Integer fromDateYear, Integer toDateDay, Integer toDateMonth, Integer toDateYear, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'name' is set
        if (name == null) {
            throw new ApiException("Missing the required parameter 'name' when calling cloudsearchStatsSessionSearchapplicationsGet(Async)");
        }

        return cloudsearchStatsSessionSearchapplicationsGetCall(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, fromDateDay, fromDateMonth, fromDateYear, toDateDay, toDateMonth, toDateYear, _callback);

    }

    /**
     * 
     * Get the # of search sessions, % of successful sessions with a click query statistics for search application. **Note:** This API requires a standard end user account to execute.
     * @param name The resource id of the search application session stats, in the following format: searchapplications/{application_id} (required)
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fromDateDay Day of month. Must be from 1 to 31 and valid for the year and month. (optional)
     * @param fromDateMonth Month of date. Must be from 1 to 12. (optional)
     * @param fromDateYear Year of date. Must be from 1 to 9999. (optional)
     * @param toDateDay Day of month. Must be from 1 to 31 and valid for the year and month. (optional)
     * @param toDateMonth Month of date. Must be from 1 to 12. (optional)
     * @param toDateYear Year of date. Must be from 1 to 9999. (optional)
     * @return GetSearchApplicationSessionStatsResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public GetSearchApplicationSessionStatsResponse cloudsearchStatsSessionSearchapplicationsGet(String name, String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, Integer fromDateDay, Integer fromDateMonth, Integer fromDateYear, Integer toDateDay, Integer toDateMonth, Integer toDateYear) throws ApiException {
        ApiResponse<GetSearchApplicationSessionStatsResponse> localVarResp = cloudsearchStatsSessionSearchapplicationsGetWithHttpInfo(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, fromDateDay, fromDateMonth, fromDateYear, toDateDay, toDateMonth, toDateYear);
        return localVarResp.getData();
    }

    /**
     * 
     * Get the # of search sessions, % of successful sessions with a click query statistics for search application. **Note:** This API requires a standard end user account to execute.
     * @param name The resource id of the search application session stats, in the following format: searchapplications/{application_id} (required)
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fromDateDay Day of month. Must be from 1 to 31 and valid for the year and month. (optional)
     * @param fromDateMonth Month of date. Must be from 1 to 12. (optional)
     * @param fromDateYear Year of date. Must be from 1 to 9999. (optional)
     * @param toDateDay Day of month. Must be from 1 to 31 and valid for the year and month. (optional)
     * @param toDateMonth Month of date. Must be from 1 to 12. (optional)
     * @param toDateYear Year of date. Must be from 1 to 9999. (optional)
     * @return ApiResponse&lt;GetSearchApplicationSessionStatsResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GetSearchApplicationSessionStatsResponse> cloudsearchStatsSessionSearchapplicationsGetWithHttpInfo(String name, String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, Integer fromDateDay, Integer fromDateMonth, Integer fromDateYear, Integer toDateDay, Integer toDateMonth, Integer toDateYear) throws ApiException {
        okhttp3.Call localVarCall = cloudsearchStatsSessionSearchapplicationsGetValidateBeforeCall(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, fromDateDay, fromDateMonth, fromDateYear, toDateDay, toDateMonth, toDateYear, null);
        Type localVarReturnType = new TypeToken<GetSearchApplicationSessionStatsResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Get the # of search sessions, % of successful sessions with a click query statistics for search application. **Note:** This API requires a standard end user account to execute.
     * @param name The resource id of the search application session stats, in the following format: searchapplications/{application_id} (required)
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fromDateDay Day of month. Must be from 1 to 31 and valid for the year and month. (optional)
     * @param fromDateMonth Month of date. Must be from 1 to 12. (optional)
     * @param fromDateYear Year of date. Must be from 1 to 9999. (optional)
     * @param toDateDay Day of month. Must be from 1 to 31 and valid for the year and month. (optional)
     * @param toDateMonth Month of date. Must be from 1 to 12. (optional)
     * @param toDateYear Year of date. Must be from 1 to 9999. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call cloudsearchStatsSessionSearchapplicationsGetAsync(String name, String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, Integer fromDateDay, Integer fromDateMonth, Integer fromDateYear, Integer toDateDay, Integer toDateMonth, Integer toDateYear, final ApiCallback<GetSearchApplicationSessionStatsResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = cloudsearchStatsSessionSearchapplicationsGetValidateBeforeCall(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, fromDateDay, fromDateMonth, fromDateYear, toDateDay, toDateMonth, toDateYear, _callback);
        Type localVarReturnType = new TypeToken<GetSearchApplicationSessionStatsResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for cloudsearchStatsUserSearchapplicationsGet
     * @param name The resource id of the search application session stats, in the following format: searchapplications/{application_id} (required)
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fromDateDay Day of month. Must be from 1 to 31 and valid for the year and month. (optional)
     * @param fromDateMonth Month of date. Must be from 1 to 12. (optional)
     * @param fromDateYear Year of date. Must be from 1 to 9999. (optional)
     * @param toDateDay Day of month. Must be from 1 to 31 and valid for the year and month. (optional)
     * @param toDateMonth Month of date. Must be from 1 to 12. (optional)
     * @param toDateYear Year of date. Must be from 1 to 9999. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call cloudsearchStatsUserSearchapplicationsGetCall(String name, String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, Integer fromDateDay, Integer fromDateMonth, Integer fromDateYear, Integer toDateDay, Integer toDateMonth, Integer toDateYear, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v1/stats/user/{name}"
            .replace("{" + "name" + "}", localVarApiClient.escapeString(name.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if ($xgafv != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$.xgafv", $xgafv));
        }

        if (accessToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("access_token", accessToken));
        }

        if (alt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("alt", alt));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        if (fields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields", fields));
        }

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        if (oauthToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("oauth_token", oauthToken));
        }

        if (prettyPrint != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("prettyPrint", prettyPrint));
        }

        if (quotaUser != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("quotaUser", quotaUser));
        }

        if (uploadProtocol != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("upload_protocol", uploadProtocol));
        }

        if (uploadType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("uploadType", uploadType));
        }

        if (fromDateDay != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fromDate.day", fromDateDay));
        }

        if (fromDateMonth != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fromDate.month", fromDateMonth));
        }

        if (fromDateYear != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fromDate.year", fromDateYear));
        }

        if (toDateDay != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("toDate.day", toDateDay));
        }

        if (toDateMonth != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("toDate.month", toDateMonth));
        }

        if (toDateYear != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("toDate.year", toDateYear));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "Oauth2c", "Oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call cloudsearchStatsUserSearchapplicationsGetValidateBeforeCall(String name, String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, Integer fromDateDay, Integer fromDateMonth, Integer fromDateYear, Integer toDateDay, Integer toDateMonth, Integer toDateYear, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'name' is set
        if (name == null) {
            throw new ApiException("Missing the required parameter 'name' when calling cloudsearchStatsUserSearchapplicationsGet(Async)");
        }

        return cloudsearchStatsUserSearchapplicationsGetCall(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, fromDateDay, fromDateMonth, fromDateYear, toDateDay, toDateMonth, toDateYear, _callback);

    }

    /**
     * 
     * Get the users statistics for search application. **Note:** This API requires a standard end user account to execute.
     * @param name The resource id of the search application session stats, in the following format: searchapplications/{application_id} (required)
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fromDateDay Day of month. Must be from 1 to 31 and valid for the year and month. (optional)
     * @param fromDateMonth Month of date. Must be from 1 to 12. (optional)
     * @param fromDateYear Year of date. Must be from 1 to 9999. (optional)
     * @param toDateDay Day of month. Must be from 1 to 31 and valid for the year and month. (optional)
     * @param toDateMonth Month of date. Must be from 1 to 12. (optional)
     * @param toDateYear Year of date. Must be from 1 to 9999. (optional)
     * @return GetSearchApplicationUserStatsResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public GetSearchApplicationUserStatsResponse cloudsearchStatsUserSearchapplicationsGet(String name, String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, Integer fromDateDay, Integer fromDateMonth, Integer fromDateYear, Integer toDateDay, Integer toDateMonth, Integer toDateYear) throws ApiException {
        ApiResponse<GetSearchApplicationUserStatsResponse> localVarResp = cloudsearchStatsUserSearchapplicationsGetWithHttpInfo(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, fromDateDay, fromDateMonth, fromDateYear, toDateDay, toDateMonth, toDateYear);
        return localVarResp.getData();
    }

    /**
     * 
     * Get the users statistics for search application. **Note:** This API requires a standard end user account to execute.
     * @param name The resource id of the search application session stats, in the following format: searchapplications/{application_id} (required)
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fromDateDay Day of month. Must be from 1 to 31 and valid for the year and month. (optional)
     * @param fromDateMonth Month of date. Must be from 1 to 12. (optional)
     * @param fromDateYear Year of date. Must be from 1 to 9999. (optional)
     * @param toDateDay Day of month. Must be from 1 to 31 and valid for the year and month. (optional)
     * @param toDateMonth Month of date. Must be from 1 to 12. (optional)
     * @param toDateYear Year of date. Must be from 1 to 9999. (optional)
     * @return ApiResponse&lt;GetSearchApplicationUserStatsResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GetSearchApplicationUserStatsResponse> cloudsearchStatsUserSearchapplicationsGetWithHttpInfo(String name, String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, Integer fromDateDay, Integer fromDateMonth, Integer fromDateYear, Integer toDateDay, Integer toDateMonth, Integer toDateYear) throws ApiException {
        okhttp3.Call localVarCall = cloudsearchStatsUserSearchapplicationsGetValidateBeforeCall(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, fromDateDay, fromDateMonth, fromDateYear, toDateDay, toDateMonth, toDateYear, null);
        Type localVarReturnType = new TypeToken<GetSearchApplicationUserStatsResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Get the users statistics for search application. **Note:** This API requires a standard end user account to execute.
     * @param name The resource id of the search application session stats, in the following format: searchapplications/{application_id} (required)
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fromDateDay Day of month. Must be from 1 to 31 and valid for the year and month. (optional)
     * @param fromDateMonth Month of date. Must be from 1 to 12. (optional)
     * @param fromDateYear Year of date. Must be from 1 to 9999. (optional)
     * @param toDateDay Day of month. Must be from 1 to 31 and valid for the year and month. (optional)
     * @param toDateMonth Month of date. Must be from 1 to 12. (optional)
     * @param toDateYear Year of date. Must be from 1 to 9999. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call cloudsearchStatsUserSearchapplicationsGetAsync(String name, String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, Integer fromDateDay, Integer fromDateMonth, Integer fromDateYear, Integer toDateDay, Integer toDateMonth, Integer toDateYear, final ApiCallback<GetSearchApplicationUserStatsResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = cloudsearchStatsUserSearchapplicationsGetValidateBeforeCall(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, fromDateDay, fromDateMonth, fromDateYear, toDateDay, toDateMonth, toDateYear, _callback);
        Type localVarReturnType = new TypeToken<GetSearchApplicationUserStatsResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
