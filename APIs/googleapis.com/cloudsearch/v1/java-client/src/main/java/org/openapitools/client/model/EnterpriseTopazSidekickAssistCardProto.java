/*
 * Cloud Search API
 * Cloud Search provides cloud-based search capabilities over Google Workspace data. The Cloud Search API allows indexing of non-Google Workspace data into Cloud Search.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.EnterpriseTopazSidekickAgendaEntry;
import org.openapitools.client.model.EnterpriseTopazSidekickAgendaGroupCardProto;
import org.openapitools.client.model.EnterpriseTopazSidekickAnswerSuggestedQueryAnswerCard;
import org.openapitools.client.model.EnterpriseTopazSidekickCardMetadata;
import org.openapitools.client.model.EnterpriseTopazSidekickConflictingEventsCardProto;
import org.openapitools.client.model.EnterpriseTopazSidekickDocumentPerCategoryList;
import org.openapitools.client.model.EnterpriseTopazSidekickFindMeetingTimeCardProto;
import org.openapitools.client.model.EnterpriseTopazSidekickGenericAnswerCard;
import org.openapitools.client.model.EnterpriseTopazSidekickGetAndKeepAheadCardProto;
import org.openapitools.client.model.EnterpriseTopazSidekickMeetingNotesCardProto;
import org.openapitools.client.model.EnterpriseTopazSidekickMeetingNotesCardRequest;
import org.openapitools.client.model.EnterpriseTopazSidekickPeopleAnswerPersonAnswerCard;
import org.openapitools.client.model.EnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard;
import org.openapitools.client.model.EnterpriseTopazSidekickPeopleDisambiguationCard;
import org.openapitools.client.model.EnterpriseTopazSidekickPersonProfileCard;
import org.openapitools.client.model.EnterpriseTopazSidekickPersonalizedDocsCardProto;
import org.openapitools.client.model.EnterpriseTopazSidekickRecentDocumentsCardProto;
import org.openapitools.client.model.EnterpriseTopazSidekickShareMeetingDocsCardProto;
import org.openapitools.client.model.PeoplePromotionCard;
import org.openapitools.client.model.ThirdPartyGenericCard;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Wrapper proto for the Assist cards.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:35:46.641752-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class EnterpriseTopazSidekickAssistCardProto {
  public static final String SERIALIZED_NAME_AGENDA_GROUP_CARD_PROTO = "agendaGroupCardProto";
  @SerializedName(SERIALIZED_NAME_AGENDA_GROUP_CARD_PROTO)
  private EnterpriseTopazSidekickAgendaGroupCardProto agendaGroupCardProto;

  public static final String SERIALIZED_NAME_CARD_METADATA = "cardMetadata";
  @SerializedName(SERIALIZED_NAME_CARD_METADATA)
  private EnterpriseTopazSidekickCardMetadata cardMetadata;

  /**
   * Card type.
   */
  @JsonAdapter(CardTypeEnum.Adapter.class)
  public enum CardTypeEnum {
    UNKNOWN_TYPE("UNKNOWN_TYPE"),
    
    AGENDA("AGENDA"),
    
    CHANGELISTS("CHANGELISTS"),
    
    CONFLICTING_MEETINGS("CONFLICTING_MEETINGS"),
    
    CREATE_NOTES_FOR_MEETING("CREATE_NOTES_FOR_MEETING"),
    
    CREATE_NOTES_FOR_MEETING_REQUEST("CREATE_NOTES_FOR_MEETING_REQUEST"),
    
    CUSTOMER_NEWS("CUSTOMER_NEWS"),
    
    FIND_MEETING_TIME("FIND_MEETING_TIME"),
    
    NEXT_MEETING("NEXT_MEETING"),
    
    PERSONALIZED_DOCS("PERSONALIZED_DOCS"),
    
    TRENDING_DOCS("TRENDING_DOCS"),
    
    UPCOMING_TRIP("UPCOMING_TRIP"),
    
    SUMMARY("SUMMARY"),
    
    MEETINGS("MEETINGS"),
    
    HOMEPAGE("HOMEPAGE"),
    
    SHARE_MEETING_DOCS("SHARE_MEETING_DOCS"),
    
    DISCOVER_PEOPLE("DISCOVER_PEOPLE"),
    
    HOMEPAGE_V3("HOMEPAGE_V3"),
    
    AGENDA_GROUP("AGENDA_GROUP"),
    
    WORK_IN_PROGRESS("WORK_IN_PROGRESS"),
    
    GET_AND_KEEP_AHEAD("GET_AND_KEEP_AHEAD"),
    
    GENERIC_ANSWER_CARD("GENERIC_ANSWER_CARD"),
    
    THIRD_PARTY_ANSWER_CARD("THIRD_PARTY_ANSWER_CARD"),
    
    DOMAIN_TRENDING_DOCS("DOMAIN_TRENDING_DOCS"),
    
    TEAM_TRENDING_DOCS("TEAM_TRENDING_DOCS"),
    
    DOCUMENT_LIST_ANSWER_CARD("DOCUMENT_LIST_ANSWER_CARD"),
    
    SUGGESTED_QUERY_ANSWER_CARD("SUGGESTED_QUERY_ANSWER_CARD"),
    
    PERSON_ANSWER_CARD("PERSON_ANSWER_CARD"),
    
    RELATED_PEOPLE_ANSWER_CARD("RELATED_PEOPLE_ANSWER_CARD"),
    
    PERSON_KNOWLEDGE_CARD("PERSON_KNOWLEDGE_CARD"),
    
    PEOPLE_SEARCH_PROMOTION_CARD("PEOPLE_SEARCH_PROMOTION_CARD");

    private String value;

    CardTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static CardTypeEnum fromValue(String value) {
      for (CardTypeEnum b : CardTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<CardTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CardTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CardTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return CardTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      CardTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_CARD_TYPE = "cardType";
  @SerializedName(SERIALIZED_NAME_CARD_TYPE)
  private CardTypeEnum cardType;

  public static final String SERIALIZED_NAME_CONFLICTING_MEETINGS_CARD = "conflictingMeetingsCard";
  @SerializedName(SERIALIZED_NAME_CONFLICTING_MEETINGS_CARD)
  private EnterpriseTopazSidekickConflictingEventsCardProto conflictingMeetingsCard;

  public static final String SERIALIZED_NAME_DOCUMENT_LIST_CARD = "documentListCard";
  @SerializedName(SERIALIZED_NAME_DOCUMENT_LIST_CARD)
  private EnterpriseTopazSidekickDocumentPerCategoryList documentListCard;

  public static final String SERIALIZED_NAME_DOCUMENTS_WITH_MENTIONS = "documentsWithMentions";
  @SerializedName(SERIALIZED_NAME_DOCUMENTS_WITH_MENTIONS)
  private EnterpriseTopazSidekickDocumentPerCategoryList documentsWithMentions;

  public static final String SERIALIZED_NAME_FIND_MEETING_TIME_CARD = "findMeetingTimeCard";
  @SerializedName(SERIALIZED_NAME_FIND_MEETING_TIME_CARD)
  private EnterpriseTopazSidekickFindMeetingTimeCardProto findMeetingTimeCard;

  public static final String SERIALIZED_NAME_GENERIC_ANSWER_CARD = "genericAnswerCard";
  @SerializedName(SERIALIZED_NAME_GENERIC_ANSWER_CARD)
  private EnterpriseTopazSidekickGenericAnswerCard genericAnswerCard;

  public static final String SERIALIZED_NAME_GET_AND_KEEP_AHEAD_CARD = "getAndKeepAheadCard";
  @SerializedName(SERIALIZED_NAME_GET_AND_KEEP_AHEAD_CARD)
  private EnterpriseTopazSidekickGetAndKeepAheadCardProto getAndKeepAheadCard;

  public static final String SERIALIZED_NAME_MEETING = "meeting";
  @SerializedName(SERIALIZED_NAME_MEETING)
  private EnterpriseTopazSidekickAgendaEntry meeting;

  public static final String SERIALIZED_NAME_MEETING_NOTES_CARD = "meetingNotesCard";
  @SerializedName(SERIALIZED_NAME_MEETING_NOTES_CARD)
  private EnterpriseTopazSidekickMeetingNotesCardProto meetingNotesCard;

  public static final String SERIALIZED_NAME_MEETING_NOTES_CARD_REQUEST = "meetingNotesCardRequest";
  @SerializedName(SERIALIZED_NAME_MEETING_NOTES_CARD_REQUEST)
  private EnterpriseTopazSidekickMeetingNotesCardRequest meetingNotesCardRequest;

  public static final String SERIALIZED_NAME_PEOPLE_DISAMBIGUATION_CARD = "peopleDisambiguationCard";
  @SerializedName(SERIALIZED_NAME_PEOPLE_DISAMBIGUATION_CARD)
  private EnterpriseTopazSidekickPeopleDisambiguationCard peopleDisambiguationCard;

  public static final String SERIALIZED_NAME_PEOPLE_PROMOTION_CARD = "peoplePromotionCard";
  @SerializedName(SERIALIZED_NAME_PEOPLE_PROMOTION_CARD)
  private PeoplePromotionCard peoplePromotionCard;

  public static final String SERIALIZED_NAME_PERSON_ANSWER_CARD = "personAnswerCard";
  @SerializedName(SERIALIZED_NAME_PERSON_ANSWER_CARD)
  private EnterpriseTopazSidekickPeopleAnswerPersonAnswerCard personAnswerCard;

  public static final String SERIALIZED_NAME_PERSON_PROFILE_CARD = "personProfileCard";
  @SerializedName(SERIALIZED_NAME_PERSON_PROFILE_CARD)
  private EnterpriseTopazSidekickPersonProfileCard personProfileCard;

  public static final String SERIALIZED_NAME_PERSONALIZED_DOCS_CARD = "personalizedDocsCard";
  @SerializedName(SERIALIZED_NAME_PERSONALIZED_DOCS_CARD)
  private EnterpriseTopazSidekickPersonalizedDocsCardProto personalizedDocsCard;

  public static final String SERIALIZED_NAME_RELATED_PEOPLE_ANSWER_CARD = "relatedPeopleAnswerCard";
  @SerializedName(SERIALIZED_NAME_RELATED_PEOPLE_ANSWER_CARD)
  private EnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard relatedPeopleAnswerCard;

  public static final String SERIALIZED_NAME_SHARE_MEETING_DOCS_CARD = "shareMeetingDocsCard";
  @SerializedName(SERIALIZED_NAME_SHARE_MEETING_DOCS_CARD)
  private EnterpriseTopazSidekickShareMeetingDocsCardProto shareMeetingDocsCard;

  public static final String SERIALIZED_NAME_SHARED_DOCUMENTS = "sharedDocuments";
  @SerializedName(SERIALIZED_NAME_SHARED_DOCUMENTS)
  private EnterpriseTopazSidekickDocumentPerCategoryList sharedDocuments;

  public static final String SERIALIZED_NAME_SUGGESTED_QUERY_ANSWER_CARD = "suggestedQueryAnswerCard";
  @SerializedName(SERIALIZED_NAME_SUGGESTED_QUERY_ANSWER_CARD)
  private EnterpriseTopazSidekickAnswerSuggestedQueryAnswerCard suggestedQueryAnswerCard;

  public static final String SERIALIZED_NAME_THIRD_PARTY_ANSWER_CARD = "thirdPartyAnswerCard";
  @SerializedName(SERIALIZED_NAME_THIRD_PARTY_ANSWER_CARD)
  private ThirdPartyGenericCard thirdPartyAnswerCard;

  public static final String SERIALIZED_NAME_WORK_IN_PROGRESS_CARD_PROTO = "workInProgressCardProto";
  @SerializedName(SERIALIZED_NAME_WORK_IN_PROGRESS_CARD_PROTO)
  private EnterpriseTopazSidekickRecentDocumentsCardProto workInProgressCardProto;

  public EnterpriseTopazSidekickAssistCardProto() {
  }

  public EnterpriseTopazSidekickAssistCardProto agendaGroupCardProto(EnterpriseTopazSidekickAgendaGroupCardProto agendaGroupCardProto) {
    this.agendaGroupCardProto = agendaGroupCardProto;
    return this;
  }

  /**
   * Get agendaGroupCardProto
   * @return agendaGroupCardProto
   */
  @javax.annotation.Nullable
  public EnterpriseTopazSidekickAgendaGroupCardProto getAgendaGroupCardProto() {
    return agendaGroupCardProto;
  }

  public void setAgendaGroupCardProto(EnterpriseTopazSidekickAgendaGroupCardProto agendaGroupCardProto) {
    this.agendaGroupCardProto = agendaGroupCardProto;
  }


  public EnterpriseTopazSidekickAssistCardProto cardMetadata(EnterpriseTopazSidekickCardMetadata cardMetadata) {
    this.cardMetadata = cardMetadata;
    return this;
  }

  /**
   * Get cardMetadata
   * @return cardMetadata
   */
  @javax.annotation.Nullable
  public EnterpriseTopazSidekickCardMetadata getCardMetadata() {
    return cardMetadata;
  }

  public void setCardMetadata(EnterpriseTopazSidekickCardMetadata cardMetadata) {
    this.cardMetadata = cardMetadata;
  }


  public EnterpriseTopazSidekickAssistCardProto cardType(CardTypeEnum cardType) {
    this.cardType = cardType;
    return this;
  }

  /**
   * Card type.
   * @return cardType
   */
  @javax.annotation.Nullable
  public CardTypeEnum getCardType() {
    return cardType;
  }

  public void setCardType(CardTypeEnum cardType) {
    this.cardType = cardType;
  }


  public EnterpriseTopazSidekickAssistCardProto conflictingMeetingsCard(EnterpriseTopazSidekickConflictingEventsCardProto conflictingMeetingsCard) {
    this.conflictingMeetingsCard = conflictingMeetingsCard;
    return this;
  }

  /**
   * Get conflictingMeetingsCard
   * @return conflictingMeetingsCard
   */
  @javax.annotation.Nullable
  public EnterpriseTopazSidekickConflictingEventsCardProto getConflictingMeetingsCard() {
    return conflictingMeetingsCard;
  }

  public void setConflictingMeetingsCard(EnterpriseTopazSidekickConflictingEventsCardProto conflictingMeetingsCard) {
    this.conflictingMeetingsCard = conflictingMeetingsCard;
  }


  public EnterpriseTopazSidekickAssistCardProto documentListCard(EnterpriseTopazSidekickDocumentPerCategoryList documentListCard) {
    this.documentListCard = documentListCard;
    return this;
  }

  /**
   * Get documentListCard
   * @return documentListCard
   */
  @javax.annotation.Nullable
  public EnterpriseTopazSidekickDocumentPerCategoryList getDocumentListCard() {
    return documentListCard;
  }

  public void setDocumentListCard(EnterpriseTopazSidekickDocumentPerCategoryList documentListCard) {
    this.documentListCard = documentListCard;
  }


  public EnterpriseTopazSidekickAssistCardProto documentsWithMentions(EnterpriseTopazSidekickDocumentPerCategoryList documentsWithMentions) {
    this.documentsWithMentions = documentsWithMentions;
    return this;
  }

  /**
   * Get documentsWithMentions
   * @return documentsWithMentions
   */
  @javax.annotation.Nullable
  public EnterpriseTopazSidekickDocumentPerCategoryList getDocumentsWithMentions() {
    return documentsWithMentions;
  }

  public void setDocumentsWithMentions(EnterpriseTopazSidekickDocumentPerCategoryList documentsWithMentions) {
    this.documentsWithMentions = documentsWithMentions;
  }


  public EnterpriseTopazSidekickAssistCardProto findMeetingTimeCard(EnterpriseTopazSidekickFindMeetingTimeCardProto findMeetingTimeCard) {
    this.findMeetingTimeCard = findMeetingTimeCard;
    return this;
  }

  /**
   * Get findMeetingTimeCard
   * @return findMeetingTimeCard
   */
  @javax.annotation.Nullable
  public EnterpriseTopazSidekickFindMeetingTimeCardProto getFindMeetingTimeCard() {
    return findMeetingTimeCard;
  }

  public void setFindMeetingTimeCard(EnterpriseTopazSidekickFindMeetingTimeCardProto findMeetingTimeCard) {
    this.findMeetingTimeCard = findMeetingTimeCard;
  }


  public EnterpriseTopazSidekickAssistCardProto genericAnswerCard(EnterpriseTopazSidekickGenericAnswerCard genericAnswerCard) {
    this.genericAnswerCard = genericAnswerCard;
    return this;
  }

  /**
   * Get genericAnswerCard
   * @return genericAnswerCard
   */
  @javax.annotation.Nullable
  public EnterpriseTopazSidekickGenericAnswerCard getGenericAnswerCard() {
    return genericAnswerCard;
  }

  public void setGenericAnswerCard(EnterpriseTopazSidekickGenericAnswerCard genericAnswerCard) {
    this.genericAnswerCard = genericAnswerCard;
  }


  public EnterpriseTopazSidekickAssistCardProto getAndKeepAheadCard(EnterpriseTopazSidekickGetAndKeepAheadCardProto getAndKeepAheadCard) {
    this.getAndKeepAheadCard = getAndKeepAheadCard;
    return this;
  }

  /**
   * Get getAndKeepAheadCard
   * @return getAndKeepAheadCard
   */
  @javax.annotation.Nullable
  public EnterpriseTopazSidekickGetAndKeepAheadCardProto getGetAndKeepAheadCard() {
    return getAndKeepAheadCard;
  }

  public void setGetAndKeepAheadCard(EnterpriseTopazSidekickGetAndKeepAheadCardProto getAndKeepAheadCard) {
    this.getAndKeepAheadCard = getAndKeepAheadCard;
  }


  public EnterpriseTopazSidekickAssistCardProto meeting(EnterpriseTopazSidekickAgendaEntry meeting) {
    this.meeting = meeting;
    return this;
  }

  /**
   * Get meeting
   * @return meeting
   */
  @javax.annotation.Nullable
  public EnterpriseTopazSidekickAgendaEntry getMeeting() {
    return meeting;
  }

  public void setMeeting(EnterpriseTopazSidekickAgendaEntry meeting) {
    this.meeting = meeting;
  }


  public EnterpriseTopazSidekickAssistCardProto meetingNotesCard(EnterpriseTopazSidekickMeetingNotesCardProto meetingNotesCard) {
    this.meetingNotesCard = meetingNotesCard;
    return this;
  }

  /**
   * Get meetingNotesCard
   * @return meetingNotesCard
   */
  @javax.annotation.Nullable
  public EnterpriseTopazSidekickMeetingNotesCardProto getMeetingNotesCard() {
    return meetingNotesCard;
  }

  public void setMeetingNotesCard(EnterpriseTopazSidekickMeetingNotesCardProto meetingNotesCard) {
    this.meetingNotesCard = meetingNotesCard;
  }


  public EnterpriseTopazSidekickAssistCardProto meetingNotesCardRequest(EnterpriseTopazSidekickMeetingNotesCardRequest meetingNotesCardRequest) {
    this.meetingNotesCardRequest = meetingNotesCardRequest;
    return this;
  }

  /**
   * Get meetingNotesCardRequest
   * @return meetingNotesCardRequest
   */
  @javax.annotation.Nullable
  public EnterpriseTopazSidekickMeetingNotesCardRequest getMeetingNotesCardRequest() {
    return meetingNotesCardRequest;
  }

  public void setMeetingNotesCardRequest(EnterpriseTopazSidekickMeetingNotesCardRequest meetingNotesCardRequest) {
    this.meetingNotesCardRequest = meetingNotesCardRequest;
  }


  public EnterpriseTopazSidekickAssistCardProto peopleDisambiguationCard(EnterpriseTopazSidekickPeopleDisambiguationCard peopleDisambiguationCard) {
    this.peopleDisambiguationCard = peopleDisambiguationCard;
    return this;
  }

  /**
   * Get peopleDisambiguationCard
   * @return peopleDisambiguationCard
   */
  @javax.annotation.Nullable
  public EnterpriseTopazSidekickPeopleDisambiguationCard getPeopleDisambiguationCard() {
    return peopleDisambiguationCard;
  }

  public void setPeopleDisambiguationCard(EnterpriseTopazSidekickPeopleDisambiguationCard peopleDisambiguationCard) {
    this.peopleDisambiguationCard = peopleDisambiguationCard;
  }


  public EnterpriseTopazSidekickAssistCardProto peoplePromotionCard(PeoplePromotionCard peoplePromotionCard) {
    this.peoplePromotionCard = peoplePromotionCard;
    return this;
  }

  /**
   * Get peoplePromotionCard
   * @return peoplePromotionCard
   */
  @javax.annotation.Nullable
  public PeoplePromotionCard getPeoplePromotionCard() {
    return peoplePromotionCard;
  }

  public void setPeoplePromotionCard(PeoplePromotionCard peoplePromotionCard) {
    this.peoplePromotionCard = peoplePromotionCard;
  }


  public EnterpriseTopazSidekickAssistCardProto personAnswerCard(EnterpriseTopazSidekickPeopleAnswerPersonAnswerCard personAnswerCard) {
    this.personAnswerCard = personAnswerCard;
    return this;
  }

  /**
   * Get personAnswerCard
   * @return personAnswerCard
   */
  @javax.annotation.Nullable
  public EnterpriseTopazSidekickPeopleAnswerPersonAnswerCard getPersonAnswerCard() {
    return personAnswerCard;
  }

  public void setPersonAnswerCard(EnterpriseTopazSidekickPeopleAnswerPersonAnswerCard personAnswerCard) {
    this.personAnswerCard = personAnswerCard;
  }


  public EnterpriseTopazSidekickAssistCardProto personProfileCard(EnterpriseTopazSidekickPersonProfileCard personProfileCard) {
    this.personProfileCard = personProfileCard;
    return this;
  }

  /**
   * Get personProfileCard
   * @return personProfileCard
   */
  @javax.annotation.Nullable
  public EnterpriseTopazSidekickPersonProfileCard getPersonProfileCard() {
    return personProfileCard;
  }

  public void setPersonProfileCard(EnterpriseTopazSidekickPersonProfileCard personProfileCard) {
    this.personProfileCard = personProfileCard;
  }


  public EnterpriseTopazSidekickAssistCardProto personalizedDocsCard(EnterpriseTopazSidekickPersonalizedDocsCardProto personalizedDocsCard) {
    this.personalizedDocsCard = personalizedDocsCard;
    return this;
  }

  /**
   * Get personalizedDocsCard
   * @return personalizedDocsCard
   */
  @javax.annotation.Nullable
  public EnterpriseTopazSidekickPersonalizedDocsCardProto getPersonalizedDocsCard() {
    return personalizedDocsCard;
  }

  public void setPersonalizedDocsCard(EnterpriseTopazSidekickPersonalizedDocsCardProto personalizedDocsCard) {
    this.personalizedDocsCard = personalizedDocsCard;
  }


  public EnterpriseTopazSidekickAssistCardProto relatedPeopleAnswerCard(EnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard relatedPeopleAnswerCard) {
    this.relatedPeopleAnswerCard = relatedPeopleAnswerCard;
    return this;
  }

  /**
   * Get relatedPeopleAnswerCard
   * @return relatedPeopleAnswerCard
   */
  @javax.annotation.Nullable
  public EnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard getRelatedPeopleAnswerCard() {
    return relatedPeopleAnswerCard;
  }

  public void setRelatedPeopleAnswerCard(EnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard relatedPeopleAnswerCard) {
    this.relatedPeopleAnswerCard = relatedPeopleAnswerCard;
  }


  public EnterpriseTopazSidekickAssistCardProto shareMeetingDocsCard(EnterpriseTopazSidekickShareMeetingDocsCardProto shareMeetingDocsCard) {
    this.shareMeetingDocsCard = shareMeetingDocsCard;
    return this;
  }

  /**
   * Get shareMeetingDocsCard
   * @return shareMeetingDocsCard
   */
  @javax.annotation.Nullable
  public EnterpriseTopazSidekickShareMeetingDocsCardProto getShareMeetingDocsCard() {
    return shareMeetingDocsCard;
  }

  public void setShareMeetingDocsCard(EnterpriseTopazSidekickShareMeetingDocsCardProto shareMeetingDocsCard) {
    this.shareMeetingDocsCard = shareMeetingDocsCard;
  }


  public EnterpriseTopazSidekickAssistCardProto sharedDocuments(EnterpriseTopazSidekickDocumentPerCategoryList sharedDocuments) {
    this.sharedDocuments = sharedDocuments;
    return this;
  }

  /**
   * Get sharedDocuments
   * @return sharedDocuments
   */
  @javax.annotation.Nullable
  public EnterpriseTopazSidekickDocumentPerCategoryList getSharedDocuments() {
    return sharedDocuments;
  }

  public void setSharedDocuments(EnterpriseTopazSidekickDocumentPerCategoryList sharedDocuments) {
    this.sharedDocuments = sharedDocuments;
  }


  public EnterpriseTopazSidekickAssistCardProto suggestedQueryAnswerCard(EnterpriseTopazSidekickAnswerSuggestedQueryAnswerCard suggestedQueryAnswerCard) {
    this.suggestedQueryAnswerCard = suggestedQueryAnswerCard;
    return this;
  }

  /**
   * Get suggestedQueryAnswerCard
   * @return suggestedQueryAnswerCard
   */
  @javax.annotation.Nullable
  public EnterpriseTopazSidekickAnswerSuggestedQueryAnswerCard getSuggestedQueryAnswerCard() {
    return suggestedQueryAnswerCard;
  }

  public void setSuggestedQueryAnswerCard(EnterpriseTopazSidekickAnswerSuggestedQueryAnswerCard suggestedQueryAnswerCard) {
    this.suggestedQueryAnswerCard = suggestedQueryAnswerCard;
  }


  public EnterpriseTopazSidekickAssistCardProto thirdPartyAnswerCard(ThirdPartyGenericCard thirdPartyAnswerCard) {
    this.thirdPartyAnswerCard = thirdPartyAnswerCard;
    return this;
  }

  /**
   * Get thirdPartyAnswerCard
   * @return thirdPartyAnswerCard
   */
  @javax.annotation.Nullable
  public ThirdPartyGenericCard getThirdPartyAnswerCard() {
    return thirdPartyAnswerCard;
  }

  public void setThirdPartyAnswerCard(ThirdPartyGenericCard thirdPartyAnswerCard) {
    this.thirdPartyAnswerCard = thirdPartyAnswerCard;
  }


  public EnterpriseTopazSidekickAssistCardProto workInProgressCardProto(EnterpriseTopazSidekickRecentDocumentsCardProto workInProgressCardProto) {
    this.workInProgressCardProto = workInProgressCardProto;
    return this;
  }

  /**
   * Get workInProgressCardProto
   * @return workInProgressCardProto
   */
  @javax.annotation.Nullable
  public EnterpriseTopazSidekickRecentDocumentsCardProto getWorkInProgressCardProto() {
    return workInProgressCardProto;
  }

  public void setWorkInProgressCardProto(EnterpriseTopazSidekickRecentDocumentsCardProto workInProgressCardProto) {
    this.workInProgressCardProto = workInProgressCardProto;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EnterpriseTopazSidekickAssistCardProto enterpriseTopazSidekickAssistCardProto = (EnterpriseTopazSidekickAssistCardProto) o;
    return Objects.equals(this.agendaGroupCardProto, enterpriseTopazSidekickAssistCardProto.agendaGroupCardProto) &&
        Objects.equals(this.cardMetadata, enterpriseTopazSidekickAssistCardProto.cardMetadata) &&
        Objects.equals(this.cardType, enterpriseTopazSidekickAssistCardProto.cardType) &&
        Objects.equals(this.conflictingMeetingsCard, enterpriseTopazSidekickAssistCardProto.conflictingMeetingsCard) &&
        Objects.equals(this.documentListCard, enterpriseTopazSidekickAssistCardProto.documentListCard) &&
        Objects.equals(this.documentsWithMentions, enterpriseTopazSidekickAssistCardProto.documentsWithMentions) &&
        Objects.equals(this.findMeetingTimeCard, enterpriseTopazSidekickAssistCardProto.findMeetingTimeCard) &&
        Objects.equals(this.genericAnswerCard, enterpriseTopazSidekickAssistCardProto.genericAnswerCard) &&
        Objects.equals(this.getAndKeepAheadCard, enterpriseTopazSidekickAssistCardProto.getAndKeepAheadCard) &&
        Objects.equals(this.meeting, enterpriseTopazSidekickAssistCardProto.meeting) &&
        Objects.equals(this.meetingNotesCard, enterpriseTopazSidekickAssistCardProto.meetingNotesCard) &&
        Objects.equals(this.meetingNotesCardRequest, enterpriseTopazSidekickAssistCardProto.meetingNotesCardRequest) &&
        Objects.equals(this.peopleDisambiguationCard, enterpriseTopazSidekickAssistCardProto.peopleDisambiguationCard) &&
        Objects.equals(this.peoplePromotionCard, enterpriseTopazSidekickAssistCardProto.peoplePromotionCard) &&
        Objects.equals(this.personAnswerCard, enterpriseTopazSidekickAssistCardProto.personAnswerCard) &&
        Objects.equals(this.personProfileCard, enterpriseTopazSidekickAssistCardProto.personProfileCard) &&
        Objects.equals(this.personalizedDocsCard, enterpriseTopazSidekickAssistCardProto.personalizedDocsCard) &&
        Objects.equals(this.relatedPeopleAnswerCard, enterpriseTopazSidekickAssistCardProto.relatedPeopleAnswerCard) &&
        Objects.equals(this.shareMeetingDocsCard, enterpriseTopazSidekickAssistCardProto.shareMeetingDocsCard) &&
        Objects.equals(this.sharedDocuments, enterpriseTopazSidekickAssistCardProto.sharedDocuments) &&
        Objects.equals(this.suggestedQueryAnswerCard, enterpriseTopazSidekickAssistCardProto.suggestedQueryAnswerCard) &&
        Objects.equals(this.thirdPartyAnswerCard, enterpriseTopazSidekickAssistCardProto.thirdPartyAnswerCard) &&
        Objects.equals(this.workInProgressCardProto, enterpriseTopazSidekickAssistCardProto.workInProgressCardProto);
  }

  @Override
  public int hashCode() {
    return Objects.hash(agendaGroupCardProto, cardMetadata, cardType, conflictingMeetingsCard, documentListCard, documentsWithMentions, findMeetingTimeCard, genericAnswerCard, getAndKeepAheadCard, meeting, meetingNotesCard, meetingNotesCardRequest, peopleDisambiguationCard, peoplePromotionCard, personAnswerCard, personProfileCard, personalizedDocsCard, relatedPeopleAnswerCard, shareMeetingDocsCard, sharedDocuments, suggestedQueryAnswerCard, thirdPartyAnswerCard, workInProgressCardProto);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EnterpriseTopazSidekickAssistCardProto {\n");
    sb.append("    agendaGroupCardProto: ").append(toIndentedString(agendaGroupCardProto)).append("\n");
    sb.append("    cardMetadata: ").append(toIndentedString(cardMetadata)).append("\n");
    sb.append("    cardType: ").append(toIndentedString(cardType)).append("\n");
    sb.append("    conflictingMeetingsCard: ").append(toIndentedString(conflictingMeetingsCard)).append("\n");
    sb.append("    documentListCard: ").append(toIndentedString(documentListCard)).append("\n");
    sb.append("    documentsWithMentions: ").append(toIndentedString(documentsWithMentions)).append("\n");
    sb.append("    findMeetingTimeCard: ").append(toIndentedString(findMeetingTimeCard)).append("\n");
    sb.append("    genericAnswerCard: ").append(toIndentedString(genericAnswerCard)).append("\n");
    sb.append("    getAndKeepAheadCard: ").append(toIndentedString(getAndKeepAheadCard)).append("\n");
    sb.append("    meeting: ").append(toIndentedString(meeting)).append("\n");
    sb.append("    meetingNotesCard: ").append(toIndentedString(meetingNotesCard)).append("\n");
    sb.append("    meetingNotesCardRequest: ").append(toIndentedString(meetingNotesCardRequest)).append("\n");
    sb.append("    peopleDisambiguationCard: ").append(toIndentedString(peopleDisambiguationCard)).append("\n");
    sb.append("    peoplePromotionCard: ").append(toIndentedString(peoplePromotionCard)).append("\n");
    sb.append("    personAnswerCard: ").append(toIndentedString(personAnswerCard)).append("\n");
    sb.append("    personProfileCard: ").append(toIndentedString(personProfileCard)).append("\n");
    sb.append("    personalizedDocsCard: ").append(toIndentedString(personalizedDocsCard)).append("\n");
    sb.append("    relatedPeopleAnswerCard: ").append(toIndentedString(relatedPeopleAnswerCard)).append("\n");
    sb.append("    shareMeetingDocsCard: ").append(toIndentedString(shareMeetingDocsCard)).append("\n");
    sb.append("    sharedDocuments: ").append(toIndentedString(sharedDocuments)).append("\n");
    sb.append("    suggestedQueryAnswerCard: ").append(toIndentedString(suggestedQueryAnswerCard)).append("\n");
    sb.append("    thirdPartyAnswerCard: ").append(toIndentedString(thirdPartyAnswerCard)).append("\n");
    sb.append("    workInProgressCardProto: ").append(toIndentedString(workInProgressCardProto)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("agendaGroupCardProto");
    openapiFields.add("cardMetadata");
    openapiFields.add("cardType");
    openapiFields.add("conflictingMeetingsCard");
    openapiFields.add("documentListCard");
    openapiFields.add("documentsWithMentions");
    openapiFields.add("findMeetingTimeCard");
    openapiFields.add("genericAnswerCard");
    openapiFields.add("getAndKeepAheadCard");
    openapiFields.add("meeting");
    openapiFields.add("meetingNotesCard");
    openapiFields.add("meetingNotesCardRequest");
    openapiFields.add("peopleDisambiguationCard");
    openapiFields.add("peoplePromotionCard");
    openapiFields.add("personAnswerCard");
    openapiFields.add("personProfileCard");
    openapiFields.add("personalizedDocsCard");
    openapiFields.add("relatedPeopleAnswerCard");
    openapiFields.add("shareMeetingDocsCard");
    openapiFields.add("sharedDocuments");
    openapiFields.add("suggestedQueryAnswerCard");
    openapiFields.add("thirdPartyAnswerCard");
    openapiFields.add("workInProgressCardProto");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to EnterpriseTopazSidekickAssistCardProto
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!EnterpriseTopazSidekickAssistCardProto.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EnterpriseTopazSidekickAssistCardProto is not found in the empty JSON string", EnterpriseTopazSidekickAssistCardProto.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!EnterpriseTopazSidekickAssistCardProto.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EnterpriseTopazSidekickAssistCardProto` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `agendaGroupCardProto`
      if (jsonObj.get("agendaGroupCardProto") != null && !jsonObj.get("agendaGroupCardProto").isJsonNull()) {
        EnterpriseTopazSidekickAgendaGroupCardProto.validateJsonElement(jsonObj.get("agendaGroupCardProto"));
      }
      // validate the optional field `cardMetadata`
      if (jsonObj.get("cardMetadata") != null && !jsonObj.get("cardMetadata").isJsonNull()) {
        EnterpriseTopazSidekickCardMetadata.validateJsonElement(jsonObj.get("cardMetadata"));
      }
      if ((jsonObj.get("cardType") != null && !jsonObj.get("cardType").isJsonNull()) && !jsonObj.get("cardType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cardType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cardType").toString()));
      }
      // validate the optional field `cardType`
      if (jsonObj.get("cardType") != null && !jsonObj.get("cardType").isJsonNull()) {
        CardTypeEnum.validateJsonElement(jsonObj.get("cardType"));
      }
      // validate the optional field `conflictingMeetingsCard`
      if (jsonObj.get("conflictingMeetingsCard") != null && !jsonObj.get("conflictingMeetingsCard").isJsonNull()) {
        EnterpriseTopazSidekickConflictingEventsCardProto.validateJsonElement(jsonObj.get("conflictingMeetingsCard"));
      }
      // validate the optional field `documentListCard`
      if (jsonObj.get("documentListCard") != null && !jsonObj.get("documentListCard").isJsonNull()) {
        EnterpriseTopazSidekickDocumentPerCategoryList.validateJsonElement(jsonObj.get("documentListCard"));
      }
      // validate the optional field `documentsWithMentions`
      if (jsonObj.get("documentsWithMentions") != null && !jsonObj.get("documentsWithMentions").isJsonNull()) {
        EnterpriseTopazSidekickDocumentPerCategoryList.validateJsonElement(jsonObj.get("documentsWithMentions"));
      }
      // validate the optional field `findMeetingTimeCard`
      if (jsonObj.get("findMeetingTimeCard") != null && !jsonObj.get("findMeetingTimeCard").isJsonNull()) {
        EnterpriseTopazSidekickFindMeetingTimeCardProto.validateJsonElement(jsonObj.get("findMeetingTimeCard"));
      }
      // validate the optional field `genericAnswerCard`
      if (jsonObj.get("genericAnswerCard") != null && !jsonObj.get("genericAnswerCard").isJsonNull()) {
        EnterpriseTopazSidekickGenericAnswerCard.validateJsonElement(jsonObj.get("genericAnswerCard"));
      }
      // validate the optional field `getAndKeepAheadCard`
      if (jsonObj.get("getAndKeepAheadCard") != null && !jsonObj.get("getAndKeepAheadCard").isJsonNull()) {
        EnterpriseTopazSidekickGetAndKeepAheadCardProto.validateJsonElement(jsonObj.get("getAndKeepAheadCard"));
      }
      // validate the optional field `meeting`
      if (jsonObj.get("meeting") != null && !jsonObj.get("meeting").isJsonNull()) {
        EnterpriseTopazSidekickAgendaEntry.validateJsonElement(jsonObj.get("meeting"));
      }
      // validate the optional field `meetingNotesCard`
      if (jsonObj.get("meetingNotesCard") != null && !jsonObj.get("meetingNotesCard").isJsonNull()) {
        EnterpriseTopazSidekickMeetingNotesCardProto.validateJsonElement(jsonObj.get("meetingNotesCard"));
      }
      // validate the optional field `meetingNotesCardRequest`
      if (jsonObj.get("meetingNotesCardRequest") != null && !jsonObj.get("meetingNotesCardRequest").isJsonNull()) {
        EnterpriseTopazSidekickMeetingNotesCardRequest.validateJsonElement(jsonObj.get("meetingNotesCardRequest"));
      }
      // validate the optional field `peopleDisambiguationCard`
      if (jsonObj.get("peopleDisambiguationCard") != null && !jsonObj.get("peopleDisambiguationCard").isJsonNull()) {
        EnterpriseTopazSidekickPeopleDisambiguationCard.validateJsonElement(jsonObj.get("peopleDisambiguationCard"));
      }
      // validate the optional field `peoplePromotionCard`
      if (jsonObj.get("peoplePromotionCard") != null && !jsonObj.get("peoplePromotionCard").isJsonNull()) {
        PeoplePromotionCard.validateJsonElement(jsonObj.get("peoplePromotionCard"));
      }
      // validate the optional field `personAnswerCard`
      if (jsonObj.get("personAnswerCard") != null && !jsonObj.get("personAnswerCard").isJsonNull()) {
        EnterpriseTopazSidekickPeopleAnswerPersonAnswerCard.validateJsonElement(jsonObj.get("personAnswerCard"));
      }
      // validate the optional field `personProfileCard`
      if (jsonObj.get("personProfileCard") != null && !jsonObj.get("personProfileCard").isJsonNull()) {
        EnterpriseTopazSidekickPersonProfileCard.validateJsonElement(jsonObj.get("personProfileCard"));
      }
      // validate the optional field `personalizedDocsCard`
      if (jsonObj.get("personalizedDocsCard") != null && !jsonObj.get("personalizedDocsCard").isJsonNull()) {
        EnterpriseTopazSidekickPersonalizedDocsCardProto.validateJsonElement(jsonObj.get("personalizedDocsCard"));
      }
      // validate the optional field `relatedPeopleAnswerCard`
      if (jsonObj.get("relatedPeopleAnswerCard") != null && !jsonObj.get("relatedPeopleAnswerCard").isJsonNull()) {
        EnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard.validateJsonElement(jsonObj.get("relatedPeopleAnswerCard"));
      }
      // validate the optional field `shareMeetingDocsCard`
      if (jsonObj.get("shareMeetingDocsCard") != null && !jsonObj.get("shareMeetingDocsCard").isJsonNull()) {
        EnterpriseTopazSidekickShareMeetingDocsCardProto.validateJsonElement(jsonObj.get("shareMeetingDocsCard"));
      }
      // validate the optional field `sharedDocuments`
      if (jsonObj.get("sharedDocuments") != null && !jsonObj.get("sharedDocuments").isJsonNull()) {
        EnterpriseTopazSidekickDocumentPerCategoryList.validateJsonElement(jsonObj.get("sharedDocuments"));
      }
      // validate the optional field `suggestedQueryAnswerCard`
      if (jsonObj.get("suggestedQueryAnswerCard") != null && !jsonObj.get("suggestedQueryAnswerCard").isJsonNull()) {
        EnterpriseTopazSidekickAnswerSuggestedQueryAnswerCard.validateJsonElement(jsonObj.get("suggestedQueryAnswerCard"));
      }
      // validate the optional field `thirdPartyAnswerCard`
      if (jsonObj.get("thirdPartyAnswerCard") != null && !jsonObj.get("thirdPartyAnswerCard").isJsonNull()) {
        ThirdPartyGenericCard.validateJsonElement(jsonObj.get("thirdPartyAnswerCard"));
      }
      // validate the optional field `workInProgressCardProto`
      if (jsonObj.get("workInProgressCardProto") != null && !jsonObj.get("workInProgressCardProto").isJsonNull()) {
        EnterpriseTopazSidekickRecentDocumentsCardProto.validateJsonElement(jsonObj.get("workInProgressCardProto"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EnterpriseTopazSidekickAssistCardProto.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EnterpriseTopazSidekickAssistCardProto' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EnterpriseTopazSidekickAssistCardProto> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EnterpriseTopazSidekickAssistCardProto.class));

       return (TypeAdapter<T>) new TypeAdapter<EnterpriseTopazSidekickAssistCardProto>() {
           @Override
           public void write(JsonWriter out, EnterpriseTopazSidekickAssistCardProto value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EnterpriseTopazSidekickAssistCardProto read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of EnterpriseTopazSidekickAssistCardProto given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of EnterpriseTopazSidekickAssistCardProto
   * @throws IOException if the JSON string is invalid with respect to EnterpriseTopazSidekickAssistCardProto
   */
  public static EnterpriseTopazSidekickAssistCardProto fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EnterpriseTopazSidekickAssistCardProto.class);
  }

  /**
   * Convert an instance of EnterpriseTopazSidekickAssistCardProto to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

