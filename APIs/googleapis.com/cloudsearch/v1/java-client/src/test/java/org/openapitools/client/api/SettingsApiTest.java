/*
 * Cloud Search API
 * Cloud Search provides cloud-based search capabilities over Google Workspace data. The Cloud Search API allows indexing of non-Google Workspace data into Cloud Search.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CustomerSettings;
import org.openapitools.client.model.DataSource;
import org.openapitools.client.model.ListDataSourceResponse;
import org.openapitools.client.model.ListSearchApplicationsResponse;
import org.openapitools.client.model.Operation;
import org.openapitools.client.model.ResetSearchApplicationRequest;
import org.openapitools.client.model.SearchApplication;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SettingsApi
 */
@Disabled
public class SettingsApiTest {

    private final SettingsApi api = new SettingsApi();

    /**
     * Creates a datasource. **Note:** This API requires an admin account to execute.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudsearchSettingsDatasourcesCreateTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        DataSource dataSource = null;
        Operation response = api.cloudsearchSettingsDatasourcesCreate($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, dataSource);
        // TODO: test validations
    }

    /**
     * Lists datasources. **Note:** This API requires an admin account to execute.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudsearchSettingsDatasourcesListTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Boolean debugOptionsEnableDebugging = null;
        Integer pageSize = null;
        String pageToken = null;
        ListDataSourceResponse response = api.cloudsearchSettingsDatasourcesList($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, debugOptionsEnableDebugging, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Get customer settings. **Note:** This API requires an admin account to execute.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudsearchSettingsGetCustomerTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        CustomerSettings response = api.cloudsearchSettingsGetCustomer($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType);
        // TODO: test validations
    }

    /**
     * Creates a search application. **Note:** This API requires an admin account to execute.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudsearchSettingsSearchapplicationsCreateTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        SearchApplication searchApplication = null;
        Operation response = api.cloudsearchSettingsSearchapplicationsCreate($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, searchApplication);
        // TODO: test validations
    }

    /**
     * Deletes a search application. **Note:** This API requires an admin account to execute.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudsearchSettingsSearchapplicationsDeleteTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Boolean debugOptionsEnableDebugging = null;
        Operation response = api.cloudsearchSettingsSearchapplicationsDelete(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, debugOptionsEnableDebugging);
        // TODO: test validations
    }

    /**
     * Gets the specified search application. **Note:** This API requires an admin account to execute.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudsearchSettingsSearchapplicationsGetTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Boolean debugOptionsEnableDebugging = null;
        SearchApplication response = api.cloudsearchSettingsSearchapplicationsGet(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, debugOptionsEnableDebugging);
        // TODO: test validations
    }

    /**
     * Lists all search applications. **Note:** This API requires an admin account to execute.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudsearchSettingsSearchapplicationsListTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Boolean debugOptionsEnableDebugging = null;
        Integer pageSize = null;
        String pageToken = null;
        ListSearchApplicationsResponse response = api.cloudsearchSettingsSearchapplicationsList($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, debugOptionsEnableDebugging, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Updates a search application. **Note:** This API requires an admin account to execute.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudsearchSettingsSearchapplicationsPatchTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String updateMask = null;
        SearchApplication searchApplication = null;
        Operation response = api.cloudsearchSettingsSearchapplicationsPatch(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, updateMask, searchApplication);
        // TODO: test validations
    }

    /**
     * Resets a search application to default settings. This will return an empty response. **Note:** This API requires an admin account to execute.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudsearchSettingsSearchapplicationsResetTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        ResetSearchApplicationRequest resetSearchApplicationRequest = null;
        Operation response = api.cloudsearchSettingsSearchapplicationsReset(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, resetSearchApplicationRequest);
        // TODO: test validations
    }

    /**
     * Updates a search application. **Note:** This API requires an admin account to execute.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudsearchSettingsSearchapplicationsUpdateTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String updateMask = null;
        SearchApplication searchApplication = null;
        Operation response = api.cloudsearchSettingsSearchapplicationsUpdate(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, updateMask, searchApplication);
        // TODO: test validations
    }

    /**
     * Update customer settings. **Note:** This API requires an admin account to execute.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudsearchSettingsUpdateCustomerTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String updateMask = null;
        CustomerSettings customerSettings = null;
        Operation response = api.cloudsearchSettingsUpdateCustomer($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, updateMask, customerSettings);
        // TODO: test validations
    }

}
