/**
 * Bare Metal Solution API
 * Provides ways to manage Bare Metal Solution hardware installed in a regional extension located near a Google Cloud data center.
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ListProvisioningQuotasResponse from '../model/ListProvisioningQuotasResponse';
import ProvisioningConfig from '../model/ProvisioningConfig';
import SubmitProvisioningConfigRequest from '../model/SubmitProvisioningConfigRequest';

/**
* Projects service.
* @module api/ProjectsApi
* @version v1alpha1
*/
export default class ProjectsApi {

    /**
    * Constructs a new ProjectsApi. 
    * @alias module:api/ProjectsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the baremetalsolutionProjectsLocationsSubmitProvisioningConfig operation.
     * @callback module:api/ProjectsApi~baremetalsolutionProjectsLocationsSubmitProvisioningConfigCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ProvisioningConfig} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Submit a provisiong configuration for a given project.
     * @param {String} project Required. The target project of the provisioning request.
     * @param {String} location Required. The target location of the provisioning request.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/SubmitProvisioningConfigRequest} [submitProvisioningConfigRequest] 
     * @param {module:api/ProjectsApi~baremetalsolutionProjectsLocationsSubmitProvisioningConfigCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ProvisioningConfig}
     */
    baremetalsolutionProjectsLocationsSubmitProvisioningConfig(project, location, opts, callback) {
      opts = opts || {};
      let postBody = opts['submitProvisioningConfigRequest'];
      // verify the required parameter 'project' is set
      if (project === undefined || project === null) {
        throw new Error("Missing the required parameter 'project' when calling baremetalsolutionProjectsLocationsSubmitProvisioningConfig");
      }
      // verify the required parameter 'location' is set
      if (location === undefined || location === null) {
        throw new Error("Missing the required parameter 'location' when calling baremetalsolutionProjectsLocationsSubmitProvisioningConfig");
      }

      let pathParams = {
        'project': project,
        'location': location
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ProvisioningConfig;
      return this.apiClient.callApi(
        '/v1alpha1/{project}/{location}:submitProvisioningConfig', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the baremetalsolutionProjectsProvisioningQuotasList operation.
     * @callback module:api/ProjectsApi~baremetalsolutionProjectsProvisioningQuotasListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListProvisioningQuotasResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List the budget details to provision resources on a given project.
     * @param {String} parent Required. The parent project containing the provisioning quotas.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Number} [pageSize] The maximum number of items to return.
     * @param {String} [pageToken] The next_page_token value returned from a previous List request, if any.
     * @param {module:api/ProjectsApi~baremetalsolutionProjectsProvisioningQuotasListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListProvisioningQuotasResponse}
     */
    baremetalsolutionProjectsProvisioningQuotasList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling baremetalsolutionProjectsProvisioningQuotasList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListProvisioningQuotasResponse;
      return this.apiClient.callApi(
        '/v1alpha1/{parent}/provisioningQuotas', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
