/**
 * Bare Metal Solution API
 * Provides ways to manage Bare Metal Solution hardware installed in a regional extension located near a Google Cloud data center.
 *
 * The version of the OpenAPI document: v1alpha1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProvisioningQuota.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProvisioningQuota::OAIProvisioningQuota(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProvisioningQuota::OAIProvisioningQuota() {
    this->initializeModel();
}

OAIProvisioningQuota::~OAIProvisioningQuota() {}

void OAIProvisioningQuota::initializeModel() {

    m_instance_quota_isSet = false;
    m_instance_quota_isValid = false;
}

void OAIProvisioningQuota::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProvisioningQuota::fromJsonObject(QJsonObject json) {

    m_instance_quota_isValid = ::OpenAPI::fromJsonValue(m_instance_quota, json[QString("instanceQuota")]);
    m_instance_quota_isSet = !json[QString("instanceQuota")].isNull() && m_instance_quota_isValid;
}

QString OAIProvisioningQuota::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProvisioningQuota::asJsonObject() const {
    QJsonObject obj;
    if (m_instance_quota.isSet()) {
        obj.insert(QString("instanceQuota"), ::OpenAPI::toJsonValue(m_instance_quota));
    }
    return obj;
}

OAIInstanceQuota OAIProvisioningQuota::getInstanceQuota() const {
    return m_instance_quota;
}
void OAIProvisioningQuota::setInstanceQuota(const OAIInstanceQuota &instance_quota) {
    m_instance_quota = instance_quota;
    m_instance_quota_isSet = true;
}

bool OAIProvisioningQuota::is_instance_quota_Set() const{
    return m_instance_quota_isSet;
}

bool OAIProvisioningQuota::is_instance_quota_Valid() const{
    return m_instance_quota_isValid;
}

bool OAIProvisioningQuota::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_instance_quota.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProvisioningQuota::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
