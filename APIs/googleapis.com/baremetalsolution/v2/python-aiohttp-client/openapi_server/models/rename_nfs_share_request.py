# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RenameNfsShareRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, new_nfsshare_id: str=None):
        """RenameNfsShareRequest - a model defined in OpenAPI

        :param new_nfsshare_id: The new_nfsshare_id of this RenameNfsShareRequest.
        """
        self.openapi_types = {
            'new_nfsshare_id': str
        }

        self.attribute_map = {
            'new_nfsshare_id': 'newNfsshareId'
        }

        self._new_nfsshare_id = new_nfsshare_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RenameNfsShareRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RenameNfsShareRequest of this RenameNfsShareRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def new_nfsshare_id(self):
        """Gets the new_nfsshare_id of this RenameNfsShareRequest.

        Required. The new `id` of the nfsshare.

        :return: The new_nfsshare_id of this RenameNfsShareRequest.
        :rtype: str
        """
        return self._new_nfsshare_id

    @new_nfsshare_id.setter
    def new_nfsshare_id(self, new_nfsshare_id):
        """Sets the new_nfsshare_id of this RenameNfsShareRequest.

        Required. The new `id` of the nfsshare.

        :param new_nfsshare_id: The new_nfsshare_id of this RenameNfsShareRequest.
        :type new_nfsshare_id: str
        """

        self._new_nfsshare_id = new_nfsshare_id
