# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DetachLunRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, lun: str=None, skip_reboot: bool=None):
        """DetachLunRequest - a model defined in OpenAPI

        :param lun: The lun of this DetachLunRequest.
        :param skip_reboot: The skip_reboot of this DetachLunRequest.
        """
        self.openapi_types = {
            'lun': str,
            'skip_reboot': bool
        }

        self.attribute_map = {
            'lun': 'lun',
            'skip_reboot': 'skipReboot'
        }

        self._lun = lun
        self._skip_reboot = skip_reboot

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DetachLunRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DetachLunRequest of this DetachLunRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def lun(self):
        """Gets the lun of this DetachLunRequest.

        Required. Name of the Lun to detach.

        :return: The lun of this DetachLunRequest.
        :rtype: str
        """
        return self._lun

    @lun.setter
    def lun(self, lun):
        """Sets the lun of this DetachLunRequest.

        Required. Name of the Lun to detach.

        :param lun: The lun of this DetachLunRequest.
        :type lun: str
        """

        self._lun = lun

    @property
    def skip_reboot(self):
        """Gets the skip_reboot of this DetachLunRequest.

        If true, performs lun unmapping without instance reboot.

        :return: The skip_reboot of this DetachLunRequest.
        :rtype: bool
        """
        return self._skip_reboot

    @skip_reboot.setter
    def skip_reboot(self, skip_reboot):
        """Sets the skip_reboot of this DetachLunRequest.

        If true, performs lun unmapping without instance reboot.

        :param skip_reboot: The skip_reboot of this DetachLunRequest.
        :type skip_reboot: bool
        """

        self._skip_reboot = skip_reboot
