# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UserAccount(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, encrypted_password: str=None, kms_key_version: str=None):
        """UserAccount - a model defined in OpenAPI

        :param encrypted_password: The encrypted_password of this UserAccount.
        :param kms_key_version: The kms_key_version of this UserAccount.
        """
        self.openapi_types = {
            'encrypted_password': str,
            'kms_key_version': str
        }

        self.attribute_map = {
            'encrypted_password': 'encryptedPassword',
            'kms_key_version': 'kmsKeyVersion'
        }

        self._encrypted_password = encrypted_password
        self._kms_key_version = kms_key_version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UserAccount':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UserAccount of this UserAccount.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def encrypted_password(self):
        """Gets the encrypted_password of this UserAccount.

        Encrypted initial password value.

        :return: The encrypted_password of this UserAccount.
        :rtype: str
        """
        return self._encrypted_password

    @encrypted_password.setter
    def encrypted_password(self, encrypted_password):
        """Sets the encrypted_password of this UserAccount.

        Encrypted initial password value.

        :param encrypted_password: The encrypted_password of this UserAccount.
        :type encrypted_password: str
        """

        self._encrypted_password = encrypted_password

    @property
    def kms_key_version(self):
        """Gets the kms_key_version of this UserAccount.

        KMS CryptoKey Version used to encrypt the password.

        :return: The kms_key_version of this UserAccount.
        :rtype: str
        """
        return self._kms_key_version

    @kms_key_version.setter
    def kms_key_version(self, kms_key_version):
        """Sets the kms_key_version of this UserAccount.

        KMS CryptoKey Version used to encrypt the password.

        :param kms_key_version: The kms_key_version of this UserAccount.
        :type kms_key_version: str
        """

        self._kms_key_version = kms_key_version
