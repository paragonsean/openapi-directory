# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class NetworkAddressReservation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, end_address: str=None, note: str=None, start_address: str=None):
        """NetworkAddressReservation - a model defined in OpenAPI

        :param end_address: The end_address of this NetworkAddressReservation.
        :param note: The note of this NetworkAddressReservation.
        :param start_address: The start_address of this NetworkAddressReservation.
        """
        self.openapi_types = {
            'end_address': str,
            'note': str,
            'start_address': str
        }

        self.attribute_map = {
            'end_address': 'endAddress',
            'note': 'note',
            'start_address': 'startAddress'
        }

        self._end_address = end_address
        self._note = note
        self._start_address = start_address

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NetworkAddressReservation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NetworkAddressReservation of this NetworkAddressReservation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def end_address(self):
        """Gets the end_address of this NetworkAddressReservation.

        The last address of this reservation block, inclusive. I.e., for cases when reservations are only single addresses, end_address and start_address will be the same. Must be specified as a single IPv4 address, e.g. 10.1.2.2.

        :return: The end_address of this NetworkAddressReservation.
        :rtype: str
        """
        return self._end_address

    @end_address.setter
    def end_address(self, end_address):
        """Sets the end_address of this NetworkAddressReservation.

        The last address of this reservation block, inclusive. I.e., for cases when reservations are only single addresses, end_address and start_address will be the same. Must be specified as a single IPv4 address, e.g. 10.1.2.2.

        :param end_address: The end_address of this NetworkAddressReservation.
        :type end_address: str
        """

        self._end_address = end_address

    @property
    def note(self):
        """Gets the note of this NetworkAddressReservation.

        A note about this reservation, intended for human consumption.

        :return: The note of this NetworkAddressReservation.
        :rtype: str
        """
        return self._note

    @note.setter
    def note(self, note):
        """Sets the note of this NetworkAddressReservation.

        A note about this reservation, intended for human consumption.

        :param note: The note of this NetworkAddressReservation.
        :type note: str
        """

        self._note = note

    @property
    def start_address(self):
        """Gets the start_address of this NetworkAddressReservation.

        The first address of this reservation block. Must be specified as a single IPv4 address, e.g. 10.1.2.2.

        :return: The start_address of this NetworkAddressReservation.
        :rtype: str
        """
        return self._start_address

    @start_address.setter
    def start_address(self, start_address):
        """Sets the start_address of this NetworkAddressReservation.

        The first address of this reservation block. Must be specified as a single IPv4 address, e.g. 10.1.2.2.

        :param start_address: The start_address of this NetworkAddressReservation.
        :type start_address: str
        """

        self._start_address = start_address
