# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SnapshotReservationDetail(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, reserved_space_gib: str=None, reserved_space_percent: int=None, reserved_space_remaining_gib: str=None, reserved_space_used_percent: int=None):
        """SnapshotReservationDetail - a model defined in OpenAPI

        :param reserved_space_gib: The reserved_space_gib of this SnapshotReservationDetail.
        :param reserved_space_percent: The reserved_space_percent of this SnapshotReservationDetail.
        :param reserved_space_remaining_gib: The reserved_space_remaining_gib of this SnapshotReservationDetail.
        :param reserved_space_used_percent: The reserved_space_used_percent of this SnapshotReservationDetail.
        """
        self.openapi_types = {
            'reserved_space_gib': str,
            'reserved_space_percent': int,
            'reserved_space_remaining_gib': str,
            'reserved_space_used_percent': int
        }

        self.attribute_map = {
            'reserved_space_gib': 'reservedSpaceGib',
            'reserved_space_percent': 'reservedSpacePercent',
            'reserved_space_remaining_gib': 'reservedSpaceRemainingGib',
            'reserved_space_used_percent': 'reservedSpaceUsedPercent'
        }

        self._reserved_space_gib = reserved_space_gib
        self._reserved_space_percent = reserved_space_percent
        self._reserved_space_remaining_gib = reserved_space_remaining_gib
        self._reserved_space_used_percent = reserved_space_used_percent

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SnapshotReservationDetail':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SnapshotReservationDetail of this SnapshotReservationDetail.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def reserved_space_gib(self):
        """Gets the reserved_space_gib of this SnapshotReservationDetail.

        The space on this storage volume reserved for snapshots, shown in GiB.

        :return: The reserved_space_gib of this SnapshotReservationDetail.
        :rtype: str
        """
        return self._reserved_space_gib

    @reserved_space_gib.setter
    def reserved_space_gib(self, reserved_space_gib):
        """Sets the reserved_space_gib of this SnapshotReservationDetail.

        The space on this storage volume reserved for snapshots, shown in GiB.

        :param reserved_space_gib: The reserved_space_gib of this SnapshotReservationDetail.
        :type reserved_space_gib: str
        """

        self._reserved_space_gib = reserved_space_gib

    @property
    def reserved_space_percent(self):
        """Gets the reserved_space_percent of this SnapshotReservationDetail.

        Percent of the total Volume size reserved for snapshot copies. Enabling snapshots requires reserving 20% or more of the storage volume space for snapshots. Maximum reserved space for snapshots is 40%. Setting this field will effectively set snapshot_enabled to true.

        :return: The reserved_space_percent of this SnapshotReservationDetail.
        :rtype: int
        """
        return self._reserved_space_percent

    @reserved_space_percent.setter
    def reserved_space_percent(self, reserved_space_percent):
        """Sets the reserved_space_percent of this SnapshotReservationDetail.

        Percent of the total Volume size reserved for snapshot copies. Enabling snapshots requires reserving 20% or more of the storage volume space for snapshots. Maximum reserved space for snapshots is 40%. Setting this field will effectively set snapshot_enabled to true.

        :param reserved_space_percent: The reserved_space_percent of this SnapshotReservationDetail.
        :type reserved_space_percent: int
        """

        self._reserved_space_percent = reserved_space_percent

    @property
    def reserved_space_remaining_gib(self):
        """Gets the reserved_space_remaining_gib of this SnapshotReservationDetail.

        The amount, in GiB, of available space in this storage volume's reserved snapshot space.

        :return: The reserved_space_remaining_gib of this SnapshotReservationDetail.
        :rtype: str
        """
        return self._reserved_space_remaining_gib

    @reserved_space_remaining_gib.setter
    def reserved_space_remaining_gib(self, reserved_space_remaining_gib):
        """Sets the reserved_space_remaining_gib of this SnapshotReservationDetail.

        The amount, in GiB, of available space in this storage volume's reserved snapshot space.

        :param reserved_space_remaining_gib: The reserved_space_remaining_gib of this SnapshotReservationDetail.
        :type reserved_space_remaining_gib: str
        """

        self._reserved_space_remaining_gib = reserved_space_remaining_gib

    @property
    def reserved_space_used_percent(self):
        """Gets the reserved_space_used_percent of this SnapshotReservationDetail.

        The percent of snapshot space on this storage volume actually being used by the snapshot copies. This value might be higher than 100% if the snapshot copies have overflowed into the data portion of the storage volume.

        :return: The reserved_space_used_percent of this SnapshotReservationDetail.
        :rtype: int
        """
        return self._reserved_space_used_percent

    @reserved_space_used_percent.setter
    def reserved_space_used_percent(self, reserved_space_used_percent):
        """Sets the reserved_space_used_percent of this SnapshotReservationDetail.

        The percent of snapshot space on this storage volume actually being used by the snapshot copies. This value might be higher than 100% if the snapshot copies have overflowed into the data portion of the storage volume.

        :param reserved_space_used_percent: The reserved_space_used_percent of this SnapshotReservationDetail.
        :type reserved_space_used_percent: int
        """

        self._reserved_space_used_percent = reserved_space_used_percent
