/**
 * Bare Metal Solution API
 * Provides ways to manage Bare Metal Solution hardware installed in a regional extension located near a Google Cloud data center.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The NetworkMountPoint model module.
 * @module model/NetworkMountPoint
 * @version v2
 */
class NetworkMountPoint {
    /**
     * Constructs a new <code>NetworkMountPoint</code>.
     * Mount point for a network.
     * @alias module:model/NetworkMountPoint
     */
    constructor() { 
        
        NetworkMountPoint.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>NetworkMountPoint</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NetworkMountPoint} obj Optional instance to populate.
     * @return {module:model/NetworkMountPoint} The populated <code>NetworkMountPoint</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NetworkMountPoint();

            if (data.hasOwnProperty('defaultGateway')) {
                obj['defaultGateway'] = ApiClient.convertToType(data['defaultGateway'], 'Boolean');
            }
            if (data.hasOwnProperty('instance')) {
                obj['instance'] = ApiClient.convertToType(data['instance'], 'String');
            }
            if (data.hasOwnProperty('ipAddress')) {
                obj['ipAddress'] = ApiClient.convertToType(data['ipAddress'], 'String');
            }
            if (data.hasOwnProperty('logicalInterface')) {
                obj['logicalInterface'] = ApiClient.convertToType(data['logicalInterface'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NetworkMountPoint</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NetworkMountPoint</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['instance'] && !(typeof data['instance'] === 'string' || data['instance'] instanceof String)) {
            throw new Error("Expected the field `instance` to be a primitive type in the JSON string but got " + data['instance']);
        }
        // ensure the json data is a string
        if (data['ipAddress'] && !(typeof data['ipAddress'] === 'string' || data['ipAddress'] instanceof String)) {
            throw new Error("Expected the field `ipAddress` to be a primitive type in the JSON string but got " + data['ipAddress']);
        }
        // ensure the json data is a string
        if (data['logicalInterface'] && !(typeof data['logicalInterface'] === 'string' || data['logicalInterface'] instanceof String)) {
            throw new Error("Expected the field `logicalInterface` to be a primitive type in the JSON string but got " + data['logicalInterface']);
        }

        return true;
    }


}



/**
 * Network should be a default gateway.
 * @member {Boolean} defaultGateway
 */
NetworkMountPoint.prototype['defaultGateway'] = undefined;

/**
 * Instance to attach network to.
 * @member {String} instance
 */
NetworkMountPoint.prototype['instance'] = undefined;

/**
 * Ip address of the server.
 * @member {String} ipAddress
 */
NetworkMountPoint.prototype['ipAddress'] = undefined;

/**
 * Logical interface to detach from.
 * @member {String} logicalInterface
 */
NetworkMountPoint.prototype['logicalInterface'] = undefined;






export default NetworkMountPoint;

