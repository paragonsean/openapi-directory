/**
 * Bare Metal Solution API
 * Provides ways to manage Bare Metal Solution hardware installed in a regional extension located near a Google Cloud data center.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The LogicalNetworkInterface model module.
 * @module model/LogicalNetworkInterface
 * @version v2
 */
class LogicalNetworkInterface {
    /**
     * Constructs a new <code>LogicalNetworkInterface</code>.
     * Each logical network interface is effectively a network and IP pair.
     * @alias module:model/LogicalNetworkInterface
     */
    constructor() { 
        
        LogicalNetworkInterface.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LogicalNetworkInterface</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LogicalNetworkInterface} obj Optional instance to populate.
     * @return {module:model/LogicalNetworkInterface} The populated <code>LogicalNetworkInterface</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LogicalNetworkInterface();

            if (data.hasOwnProperty('defaultGateway')) {
                obj['defaultGateway'] = ApiClient.convertToType(data['defaultGateway'], 'Boolean');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('ipAddress')) {
                obj['ipAddress'] = ApiClient.convertToType(data['ipAddress'], 'String');
            }
            if (data.hasOwnProperty('network')) {
                obj['network'] = ApiClient.convertToType(data['network'], 'String');
            }
            if (data.hasOwnProperty('networkType')) {
                obj['networkType'] = ApiClient.convertToType(data['networkType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LogicalNetworkInterface</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LogicalNetworkInterface</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['ipAddress'] && !(typeof data['ipAddress'] === 'string' || data['ipAddress'] instanceof String)) {
            throw new Error("Expected the field `ipAddress` to be a primitive type in the JSON string but got " + data['ipAddress']);
        }
        // ensure the json data is a string
        if (data['network'] && !(typeof data['network'] === 'string' || data['network'] instanceof String)) {
            throw new Error("Expected the field `network` to be a primitive type in the JSON string but got " + data['network']);
        }
        // ensure the json data is a string
        if (data['networkType'] && !(typeof data['networkType'] === 'string' || data['networkType'] instanceof String)) {
            throw new Error("Expected the field `networkType` to be a primitive type in the JSON string but got " + data['networkType']);
        }

        return true;
    }


}



/**
 * Whether this interface is the default gateway for the instance. Only one interface can be the default gateway for the instance.
 * @member {Boolean} defaultGateway
 */
LogicalNetworkInterface.prototype['defaultGateway'] = undefined;

/**
 * An identifier for the `Network`, generated by the backend.
 * @member {String} id
 */
LogicalNetworkInterface.prototype['id'] = undefined;

/**
 * IP address in the network
 * @member {String} ipAddress
 */
LogicalNetworkInterface.prototype['ipAddress'] = undefined;

/**
 * Name of the network
 * @member {String} network
 */
LogicalNetworkInterface.prototype['network'] = undefined;

/**
 * Type of network.
 * @member {module:model/LogicalNetworkInterface.NetworkTypeEnum} networkType
 */
LogicalNetworkInterface.prototype['networkType'] = undefined;





/**
 * Allowed values for the <code>networkType</code> property.
 * @enum {String}
 * @readonly
 */
LogicalNetworkInterface['NetworkTypeEnum'] = {

    /**
     * value: "TYPE_UNSPECIFIED"
     * @const
     */
    "TYPE_UNSPECIFIED": "TYPE_UNSPECIFIED",

    /**
     * value: "CLIENT"
     * @const
     */
    "CLIENT": "CLIENT",

    /**
     * value: "PRIVATE"
     * @const
     */
    "PRIVATE": "PRIVATE"
};



export default LogicalNetworkInterface;

