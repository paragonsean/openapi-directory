/**
 * Bare Metal Solution API
 * Provides ways to manage Bare Metal Solution hardware installed in a regional extension located near a Google Cloud data center.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InstanceQuota from './InstanceQuota';

/**
 * The ProvisioningQuota model module.
 * @module model/ProvisioningQuota
 * @version v2
 */
class ProvisioningQuota {
    /**
     * Constructs a new <code>ProvisioningQuota</code>.
     * A provisioning quota for a given project.
     * @alias module:model/ProvisioningQuota
     */
    constructor() { 
        
        ProvisioningQuota.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ProvisioningQuota</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProvisioningQuota} obj Optional instance to populate.
     * @return {module:model/ProvisioningQuota} The populated <code>ProvisioningQuota</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProvisioningQuota();

            if (data.hasOwnProperty('assetType')) {
                obj['assetType'] = ApiClient.convertToType(data['assetType'], 'String');
            }
            if (data.hasOwnProperty('availableCount')) {
                obj['availableCount'] = ApiClient.convertToType(data['availableCount'], 'Number');
            }
            if (data.hasOwnProperty('gcpService')) {
                obj['gcpService'] = ApiClient.convertToType(data['gcpService'], 'String');
            }
            if (data.hasOwnProperty('instanceQuota')) {
                obj['instanceQuota'] = InstanceQuota.constructFromObject(data['instanceQuota']);
            }
            if (data.hasOwnProperty('location')) {
                obj['location'] = ApiClient.convertToType(data['location'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('networkBandwidth')) {
                obj['networkBandwidth'] = ApiClient.convertToType(data['networkBandwidth'], 'String');
            }
            if (data.hasOwnProperty('serverCount')) {
                obj['serverCount'] = ApiClient.convertToType(data['serverCount'], 'String');
            }
            if (data.hasOwnProperty('storageGib')) {
                obj['storageGib'] = ApiClient.convertToType(data['storageGib'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProvisioningQuota</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProvisioningQuota</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['assetType'] && !(typeof data['assetType'] === 'string' || data['assetType'] instanceof String)) {
            throw new Error("Expected the field `assetType` to be a primitive type in the JSON string but got " + data['assetType']);
        }
        // ensure the json data is a string
        if (data['gcpService'] && !(typeof data['gcpService'] === 'string' || data['gcpService'] instanceof String)) {
            throw new Error("Expected the field `gcpService` to be a primitive type in the JSON string but got " + data['gcpService']);
        }
        // validate the optional field `instanceQuota`
        if (data['instanceQuota']) { // data not null
          InstanceQuota.validateJSON(data['instanceQuota']);
        }
        // ensure the json data is a string
        if (data['location'] && !(typeof data['location'] === 'string' || data['location'] instanceof String)) {
            throw new Error("Expected the field `location` to be a primitive type in the JSON string but got " + data['location']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['networkBandwidth'] && !(typeof data['networkBandwidth'] === 'string' || data['networkBandwidth'] instanceof String)) {
            throw new Error("Expected the field `networkBandwidth` to be a primitive type in the JSON string but got " + data['networkBandwidth']);
        }
        // ensure the json data is a string
        if (data['serverCount'] && !(typeof data['serverCount'] === 'string' || data['serverCount'] instanceof String)) {
            throw new Error("Expected the field `serverCount` to be a primitive type in the JSON string but got " + data['serverCount']);
        }
        // ensure the json data is a string
        if (data['storageGib'] && !(typeof data['storageGib'] === 'string' || data['storageGib'] instanceof String)) {
            throw new Error("Expected the field `storageGib` to be a primitive type in the JSON string but got " + data['storageGib']);
        }

        return true;
    }


}



/**
 * The asset type of this provisioning quota.
 * @member {module:model/ProvisioningQuota.AssetTypeEnum} assetType
 */
ProvisioningQuota.prototype['assetType'] = undefined;

/**
 * The available count of the provisioning quota.
 * @member {Number} availableCount
 */
ProvisioningQuota.prototype['availableCount'] = undefined;

/**
 * The gcp service of the provisioning quota.
 * @member {String} gcpService
 */
ProvisioningQuota.prototype['gcpService'] = undefined;

/**
 * @member {module:model/InstanceQuota} instanceQuota
 */
ProvisioningQuota.prototype['instanceQuota'] = undefined;

/**
 * The specific location of the provisioining quota.
 * @member {String} location
 */
ProvisioningQuota.prototype['location'] = undefined;

/**
 * Output only. The name of the provisioning quota.
 * @member {String} name
 */
ProvisioningQuota.prototype['name'] = undefined;

/**
 * Network bandwidth, Gbps
 * @member {String} networkBandwidth
 */
ProvisioningQuota.prototype['networkBandwidth'] = undefined;

/**
 * Server count.
 * @member {String} serverCount
 */
ProvisioningQuota.prototype['serverCount'] = undefined;

/**
 * Storage size (GB).
 * @member {String} storageGib
 */
ProvisioningQuota.prototype['storageGib'] = undefined;





/**
 * Allowed values for the <code>assetType</code> property.
 * @enum {String}
 * @readonly
 */
ProvisioningQuota['AssetTypeEnum'] = {

    /**
     * value: "ASSET_TYPE_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "ASSET_TYPE_UNSPECIFIED",

    /**
     * value: "ASSET_TYPE_SERVER"
     * @const
     */
    "SERVER": "ASSET_TYPE_SERVER",

    /**
     * value: "ASSET_TYPE_STORAGE"
     * @const
     */
    "STORAGE": "ASSET_TYPE_STORAGE",

    /**
     * value: "ASSET_TYPE_NETWORK"
     * @const
     */
    "NETWORK": "ASSET_TYPE_NETWORK"
};



export default ProvisioningQuota;

