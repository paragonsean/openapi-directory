/**
 * Bare Metal Solution API
 * Provides ways to manage Bare Metal Solution hardware installed in a regional extension located near a Google Cloud data center.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterface from './GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterface';

/**
 * The ServerNetworkTemplate model module.
 * @module model/ServerNetworkTemplate
 * @version v2
 */
class ServerNetworkTemplate {
    /**
     * Constructs a new <code>ServerNetworkTemplate</code>.
     * Network template.
     * @alias module:model/ServerNetworkTemplate
     */
    constructor() { 
        
        ServerNetworkTemplate.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ServerNetworkTemplate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ServerNetworkTemplate} obj Optional instance to populate.
     * @return {module:model/ServerNetworkTemplate} The populated <code>ServerNetworkTemplate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ServerNetworkTemplate();

            if (data.hasOwnProperty('applicableInstanceTypes')) {
                obj['applicableInstanceTypes'] = ApiClient.convertToType(data['applicableInstanceTypes'], ['String']);
            }
            if (data.hasOwnProperty('logicalInterfaces')) {
                obj['logicalInterfaces'] = ApiClient.convertToType(data['logicalInterfaces'], [GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterface]);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ServerNetworkTemplate</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ServerNetworkTemplate</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['applicableInstanceTypes'])) {
            throw new Error("Expected the field `applicableInstanceTypes` to be an array in the JSON data but got " + data['applicableInstanceTypes']);
        }
        if (data['logicalInterfaces']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['logicalInterfaces'])) {
                throw new Error("Expected the field `logicalInterfaces` to be an array in the JSON data but got " + data['logicalInterfaces']);
            }
            // validate the optional field `logicalInterfaces` (array)
            for (const item of data['logicalInterfaces']) {
                GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterface.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}



/**
 * Instance types this template is applicable to.
 * @member {Array.<String>} applicableInstanceTypes
 */
ServerNetworkTemplate.prototype['applicableInstanceTypes'] = undefined;

/**
 * Logical interfaces.
 * @member {Array.<module:model/GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterface>} logicalInterfaces
 */
ServerNetworkTemplate.prototype['logicalInterfaces'] = undefined;

/**
 * Output only. Template's unique name. The full resource name follows the pattern: `projects/{project}/locations/{location}/serverNetworkTemplate/{server_network_template}` Generally, the {server_network_template} follows the syntax of \"bond\" or \"nic\".
 * @member {String} name
 */
ServerNetworkTemplate.prototype['name'] = undefined;






export default ServerNetworkTemplate;

