/**
 * Bare Metal Solution API
 * Provides ways to manage Bare Metal Solution hardware installed in a regional extension located near a Google Cloud data center.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Network from './Network';

/**
 * The NetworkUsage model module.
 * @module model/NetworkUsage
 * @version v2
 */
class NetworkUsage {
    /**
     * Constructs a new <code>NetworkUsage</code>.
     * Network with all used IP addresses.
     * @alias module:model/NetworkUsage
     */
    constructor() { 
        
        NetworkUsage.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>NetworkUsage</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NetworkUsage} obj Optional instance to populate.
     * @return {module:model/NetworkUsage} The populated <code>NetworkUsage</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NetworkUsage();

            if (data.hasOwnProperty('network')) {
                obj['network'] = Network.constructFromObject(data['network']);
            }
            if (data.hasOwnProperty('usedIps')) {
                obj['usedIps'] = ApiClient.convertToType(data['usedIps'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NetworkUsage</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NetworkUsage</code>.
     */
    static validateJSON(data) {
        // validate the optional field `network`
        if (data['network']) { // data not null
          Network.validateJSON(data['network']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['usedIps'])) {
            throw new Error("Expected the field `usedIps` to be an array in the JSON data but got " + data['usedIps']);
        }

        return true;
    }


}



/**
 * @member {module:model/Network} network
 */
NetworkUsage.prototype['network'] = undefined;

/**
 * All used IP addresses in this network.
 * @member {Array.<String>} usedIps
 */
NetworkUsage.prototype['usedIps'] = undefined;






export default NetworkUsage;

