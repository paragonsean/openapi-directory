/**
 * Bare Metal Solution API
 * Provides ways to manage Bare Metal Solution hardware installed in a regional extension located near a Google Cloud data center.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ProvisioningConfig from './ProvisioningConfig';

/**
 * The SubmitProvisioningConfigRequest model module.
 * @module model/SubmitProvisioningConfigRequest
 * @version v2
 */
class SubmitProvisioningConfigRequest {
    /**
     * Constructs a new <code>SubmitProvisioningConfigRequest</code>.
     * Request for SubmitProvisioningConfig.
     * @alias module:model/SubmitProvisioningConfigRequest
     */
    constructor() { 
        
        SubmitProvisioningConfigRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SubmitProvisioningConfigRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SubmitProvisioningConfigRequest} obj Optional instance to populate.
     * @return {module:model/SubmitProvisioningConfigRequest} The populated <code>SubmitProvisioningConfigRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SubmitProvisioningConfigRequest();

            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('provisioningConfig')) {
                obj['provisioningConfig'] = ProvisioningConfig.constructFromObject(data['provisioningConfig']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SubmitProvisioningConfigRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SubmitProvisioningConfigRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
            throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
        }
        // validate the optional field `provisioningConfig`
        if (data['provisioningConfig']) { // data not null
          ProvisioningConfig.validateJSON(data['provisioningConfig']);
        }

        return true;
    }


}



/**
 * Optional. Email provided to send a confirmation with provisioning config to.
 * @member {String} email
 */
SubmitProvisioningConfigRequest.prototype['email'] = undefined;

/**
 * @member {module:model/ProvisioningConfig} provisioningConfig
 */
SubmitProvisioningConfigRequest.prototype['provisioningConfig'] = undefined;






export default SubmitProvisioningConfigRequest;

