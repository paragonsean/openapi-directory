/**
 * Bare Metal Solution API
 * Provides ways to manage Bare Metal Solution hardware installed in a regional extension located near a Google Cloud data center.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InstanceQuota model module.
 * @module model/InstanceQuota
 * @version v2
 */
class InstanceQuota {
    /**
     * Constructs a new <code>InstanceQuota</code>.
     * A resource budget.
     * @alias module:model/InstanceQuota
     */
    constructor() { 
        
        InstanceQuota.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InstanceQuota</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InstanceQuota} obj Optional instance to populate.
     * @return {module:model/InstanceQuota} The populated <code>InstanceQuota</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InstanceQuota();

            if (data.hasOwnProperty('availableMachineCount')) {
                obj['availableMachineCount'] = ApiClient.convertToType(data['availableMachineCount'], 'Number');
            }
            if (data.hasOwnProperty('gcpService')) {
                obj['gcpService'] = ApiClient.convertToType(data['gcpService'], 'String');
            }
            if (data.hasOwnProperty('instanceType')) {
                obj['instanceType'] = ApiClient.convertToType(data['instanceType'], 'String');
            }
            if (data.hasOwnProperty('location')) {
                obj['location'] = ApiClient.convertToType(data['location'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InstanceQuota</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InstanceQuota</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['gcpService'] && !(typeof data['gcpService'] === 'string' || data['gcpService'] instanceof String)) {
            throw new Error("Expected the field `gcpService` to be a primitive type in the JSON string but got " + data['gcpService']);
        }
        // ensure the json data is a string
        if (data['instanceType'] && !(typeof data['instanceType'] === 'string' || data['instanceType'] instanceof String)) {
            throw new Error("Expected the field `instanceType` to be a primitive type in the JSON string but got " + data['instanceType']);
        }
        // ensure the json data is a string
        if (data['location'] && !(typeof data['location'] === 'string' || data['location'] instanceof String)) {
            throw new Error("Expected the field `location` to be a primitive type in the JSON string but got " + data['location']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}



/**
 * Number of machines than can be created for the given location and instance_type.
 * @member {Number} availableMachineCount
 */
InstanceQuota.prototype['availableMachineCount'] = undefined;

/**
 * The gcp service of the provisioning quota.
 * @member {String} gcpService
 */
InstanceQuota.prototype['gcpService'] = undefined;

/**
 * Instance type. Deprecated: use gcp_service.
 * @member {String} instanceType
 */
InstanceQuota.prototype['instanceType'] = undefined;

/**
 * Location where the quota applies.
 * @member {String} location
 */
InstanceQuota.prototype['location'] = undefined;

/**
 * Output only. The name of the instance quota.
 * @member {String} name
 */
InstanceQuota.prototype['name'] = undefined;






export default InstanceQuota;

