/**
 * Bare Metal Solution API
 * Provides ways to manage Bare Metal Solution hardware installed in a regional extension located near a Google Cloud data center.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudBaremetalsolutionV2LogicalInterface from './GoogleCloudBaremetalsolutionV2LogicalInterface';
import NetworkAddress from './NetworkAddress';

/**
 * The InstanceConfig model module.
 * @module model/InstanceConfig
 * @version v2
 */
class InstanceConfig {
    /**
     * Constructs a new <code>InstanceConfig</code>.
     * Configuration parameters for a new instance.
     * @alias module:model/InstanceConfig
     */
    constructor() { 
        
        InstanceConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InstanceConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InstanceConfig} obj Optional instance to populate.
     * @return {module:model/InstanceConfig} The populated <code>InstanceConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InstanceConfig();

            if (data.hasOwnProperty('accountNetworksEnabled')) {
                obj['accountNetworksEnabled'] = ApiClient.convertToType(data['accountNetworksEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('clientNetwork')) {
                obj['clientNetwork'] = NetworkAddress.constructFromObject(data['clientNetwork']);
            }
            if (data.hasOwnProperty('hyperthreading')) {
                obj['hyperthreading'] = ApiClient.convertToType(data['hyperthreading'], 'Boolean');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('instanceType')) {
                obj['instanceType'] = ApiClient.convertToType(data['instanceType'], 'String');
            }
            if (data.hasOwnProperty('kmsKeyVersion')) {
                obj['kmsKeyVersion'] = ApiClient.convertToType(data['kmsKeyVersion'], 'String');
            }
            if (data.hasOwnProperty('logicalInterfaces')) {
                obj['logicalInterfaces'] = ApiClient.convertToType(data['logicalInterfaces'], [GoogleCloudBaremetalsolutionV2LogicalInterface]);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('networkConfig')) {
                obj['networkConfig'] = ApiClient.convertToType(data['networkConfig'], 'String');
            }
            if (data.hasOwnProperty('networkTemplate')) {
                obj['networkTemplate'] = ApiClient.convertToType(data['networkTemplate'], 'String');
            }
            if (data.hasOwnProperty('osImage')) {
                obj['osImage'] = ApiClient.convertToType(data['osImage'], 'String');
            }
            if (data.hasOwnProperty('privateNetwork')) {
                obj['privateNetwork'] = NetworkAddress.constructFromObject(data['privateNetwork']);
            }
            if (data.hasOwnProperty('sshKeyNames')) {
                obj['sshKeyNames'] = ApiClient.convertToType(data['sshKeyNames'], ['String']);
            }
            if (data.hasOwnProperty('userNote')) {
                obj['userNote'] = ApiClient.convertToType(data['userNote'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InstanceConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InstanceConfig</code>.
     */
    static validateJSON(data) {
        // validate the optional field `clientNetwork`
        if (data['clientNetwork']) { // data not null
          NetworkAddress.validateJSON(data['clientNetwork']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['instanceType'] && !(typeof data['instanceType'] === 'string' || data['instanceType'] instanceof String)) {
            throw new Error("Expected the field `instanceType` to be a primitive type in the JSON string but got " + data['instanceType']);
        }
        // ensure the json data is a string
        if (data['kmsKeyVersion'] && !(typeof data['kmsKeyVersion'] === 'string' || data['kmsKeyVersion'] instanceof String)) {
            throw new Error("Expected the field `kmsKeyVersion` to be a primitive type in the JSON string but got " + data['kmsKeyVersion']);
        }
        if (data['logicalInterfaces']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['logicalInterfaces'])) {
                throw new Error("Expected the field `logicalInterfaces` to be an array in the JSON data but got " + data['logicalInterfaces']);
            }
            // validate the optional field `logicalInterfaces` (array)
            for (const item of data['logicalInterfaces']) {
                GoogleCloudBaremetalsolutionV2LogicalInterface.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['networkConfig'] && !(typeof data['networkConfig'] === 'string' || data['networkConfig'] instanceof String)) {
            throw new Error("Expected the field `networkConfig` to be a primitive type in the JSON string but got " + data['networkConfig']);
        }
        // ensure the json data is a string
        if (data['networkTemplate'] && !(typeof data['networkTemplate'] === 'string' || data['networkTemplate'] instanceof String)) {
            throw new Error("Expected the field `networkTemplate` to be a primitive type in the JSON string but got " + data['networkTemplate']);
        }
        // ensure the json data is a string
        if (data['osImage'] && !(typeof data['osImage'] === 'string' || data['osImage'] instanceof String)) {
            throw new Error("Expected the field `osImage` to be a primitive type in the JSON string but got " + data['osImage']);
        }
        // validate the optional field `privateNetwork`
        if (data['privateNetwork']) { // data not null
          NetworkAddress.validateJSON(data['privateNetwork']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['sshKeyNames'])) {
            throw new Error("Expected the field `sshKeyNames` to be an array in the JSON data but got " + data['sshKeyNames']);
        }
        // ensure the json data is a string
        if (data['userNote'] && !(typeof data['userNote'] === 'string' || data['userNote'] instanceof String)) {
            throw new Error("Expected the field `userNote` to be a primitive type in the JSON string but got " + data['userNote']);
        }

        return true;
    }


}



/**
 * If true networks can be from different projects of the same vendor account.
 * @member {Boolean} accountNetworksEnabled
 */
InstanceConfig.prototype['accountNetworksEnabled'] = undefined;

/**
 * @member {module:model/NetworkAddress} clientNetwork
 */
InstanceConfig.prototype['clientNetwork'] = undefined;

/**
 * Whether the instance should be provisioned with Hyperthreading enabled.
 * @member {Boolean} hyperthreading
 */
InstanceConfig.prototype['hyperthreading'] = undefined;

/**
 * A transient unique identifier to idenfity an instance within an ProvisioningConfig request.
 * @member {String} id
 */
InstanceConfig.prototype['id'] = undefined;

/**
 * Instance type. [Available types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)
 * @member {String} instanceType
 */
InstanceConfig.prototype['instanceType'] = undefined;

/**
 * Name of the KMS crypto key version used to encrypt the initial passwords. The key has to have ASYMMETRIC_DECRYPT purpose.
 * @member {String} kmsKeyVersion
 */
InstanceConfig.prototype['kmsKeyVersion'] = undefined;

/**
 * List of logical interfaces for the instance. The number of logical interfaces will be the same as number of hardware bond/nic on the chosen network template. Filled if InstanceConfig.multivlan_config is true.
 * @member {Array.<module:model/GoogleCloudBaremetalsolutionV2LogicalInterface>} logicalInterfaces
 */
InstanceConfig.prototype['logicalInterfaces'] = undefined;

/**
 * The name of the instance config.
 * @member {String} name
 */
InstanceConfig.prototype['name'] = undefined;

/**
 * The type of network configuration on the instance.
 * @member {module:model/InstanceConfig.NetworkConfigEnum} networkConfig
 */
InstanceConfig.prototype['networkConfig'] = undefined;

/**
 * Server network template name. Filled if InstanceConfig.multivlan_config is true.
 * @member {String} networkTemplate
 */
InstanceConfig.prototype['networkTemplate'] = undefined;

/**
 * OS image to initialize the instance. [Available images](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)
 * @member {String} osImage
 */
InstanceConfig.prototype['osImage'] = undefined;

/**
 * @member {module:model/NetworkAddress} privateNetwork
 */
InstanceConfig.prototype['privateNetwork'] = undefined;

/**
 * Optional. List of names of ssh keys used to provision the instance.
 * @member {Array.<String>} sshKeyNames
 */
InstanceConfig.prototype['sshKeyNames'] = undefined;

/**
 * User note field, it can be used by customers to add additional information for the BMS Ops team .
 * @member {String} userNote
 */
InstanceConfig.prototype['userNote'] = undefined;





/**
 * Allowed values for the <code>networkConfig</code> property.
 * @enum {String}
 * @readonly
 */
InstanceConfig['NetworkConfigEnum'] = {

    /**
     * value: "NETWORKCONFIG_UNSPECIFIED"
     * @const
     */
    "NETWORKCONFIG_UNSPECIFIED": "NETWORKCONFIG_UNSPECIFIED",

    /**
     * value: "SINGLE_VLAN"
     * @const
     */
    "SINGLE_VLAN": "SINGLE_VLAN",

    /**
     * value: "MULTI_VLAN"
     * @const
     */
    "MULTI_VLAN": "MULTI_VLAN"
};



export default InstanceConfig;

