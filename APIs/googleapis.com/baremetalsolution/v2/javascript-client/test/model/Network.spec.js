/**
 * Bare Metal Solution API
 * Provides ways to manage Bare Metal Solution hardware installed in a regional extension located near a Google Cloud data center.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BareMetalSolutionApi);
  }
}(this, function(expect, BareMetalSolutionApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new BareMetalSolutionApi.Network();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Network', function() {
    it('should create an instance of Network', function() {
      // uncomment below and update the code to test Network
      //var instance = new BareMetalSolutionApi.Network();
      //expect(instance).to.be.a(BareMetalSolutionApi.Network);
    });

    it('should have the property cidr (base name: "cidr")', function() {
      // uncomment below and update the code to test the property cidr
      //var instance = new BareMetalSolutionApi.Network();
      //expect(instance).to.be();
    });

    it('should have the property gatewayIp (base name: "gatewayIp")', function() {
      // uncomment below and update the code to test the property gatewayIp
      //var instance = new BareMetalSolutionApi.Network();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new BareMetalSolutionApi.Network();
      //expect(instance).to.be();
    });

    it('should have the property ipAddress (base name: "ipAddress")', function() {
      // uncomment below and update the code to test the property ipAddress
      //var instance = new BareMetalSolutionApi.Network();
      //expect(instance).to.be();
    });

    it('should have the property jumboFramesEnabled (base name: "jumboFramesEnabled")', function() {
      // uncomment below and update the code to test the property jumboFramesEnabled
      //var instance = new BareMetalSolutionApi.Network();
      //expect(instance).to.be();
    });

    it('should have the property labels (base name: "labels")', function() {
      // uncomment below and update the code to test the property labels
      //var instance = new BareMetalSolutionApi.Network();
      //expect(instance).to.be();
    });

    it('should have the property macAddress (base name: "macAddress")', function() {
      // uncomment below and update the code to test the property macAddress
      //var instance = new BareMetalSolutionApi.Network();
      //expect(instance).to.be();
    });

    it('should have the property mountPoints (base name: "mountPoints")', function() {
      // uncomment below and update the code to test the property mountPoints
      //var instance = new BareMetalSolutionApi.Network();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new BareMetalSolutionApi.Network();
      //expect(instance).to.be();
    });

    it('should have the property pod (base name: "pod")', function() {
      // uncomment below and update the code to test the property pod
      //var instance = new BareMetalSolutionApi.Network();
      //expect(instance).to.be();
    });

    it('should have the property reservations (base name: "reservations")', function() {
      // uncomment below and update the code to test the property reservations
      //var instance = new BareMetalSolutionApi.Network();
      //expect(instance).to.be();
    });

    it('should have the property servicesCidr (base name: "servicesCidr")', function() {
      // uncomment below and update the code to test the property servicesCidr
      //var instance = new BareMetalSolutionApi.Network();
      //expect(instance).to.be();
    });

    it('should have the property state (base name: "state")', function() {
      // uncomment below and update the code to test the property state
      //var instance = new BareMetalSolutionApi.Network();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new BareMetalSolutionApi.Network();
      //expect(instance).to.be();
    });

    it('should have the property vlanId (base name: "vlanId")', function() {
      // uncomment below and update the code to test the property vlanId
      //var instance = new BareMetalSolutionApi.Network();
      //expect(instance).to.be();
    });

    it('should have the property vrf (base name: "vrf")', function() {
      // uncomment below and update the code to test the property vrf
      //var instance = new BareMetalSolutionApi.Network();
      //expect(instance).to.be();
    });

    it('should have the property vrfAttachment (base name: "vrfAttachment")', function() {
      // uncomment below and update the code to test the property vrfAttachment
      //var instance = new BareMetalSolutionApi.Network();
      //expect(instance).to.be();
    });

  });

}));
