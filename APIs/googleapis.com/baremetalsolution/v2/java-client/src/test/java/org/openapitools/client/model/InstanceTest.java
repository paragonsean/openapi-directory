/*
 * Bare Metal Solution API
 * Provides ways to manage Bare Metal Solution hardware installed in a regional extension located near a Google Cloud data center.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.GoogleCloudBaremetalsolutionV2LogicalInterface;
import org.openapitools.client.model.Lun;
import org.openapitools.client.model.Network;
import org.openapitools.client.model.Volume;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Instance
 */
public class InstanceTest {
    private final Instance model = new Instance();

    /**
     * Model tests for Instance
     */
    @Test
    public void testInstance() {
        // TODO: test Instance
    }

    /**
     * Test the property 'createTime'
     */
    @Test
    public void createTimeTest() {
        // TODO: test createTime
    }

    /**
     * Test the property 'firmwareVersion'
     */
    @Test
    public void firmwareVersionTest() {
        // TODO: test firmwareVersion
    }

    /**
     * Test the property 'hyperthreadingEnabled'
     */
    @Test
    public void hyperthreadingEnabledTest() {
        // TODO: test hyperthreadingEnabled
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'interactiveSerialConsoleEnabled'
     */
    @Test
    public void interactiveSerialConsoleEnabledTest() {
        // TODO: test interactiveSerialConsoleEnabled
    }

    /**
     * Test the property 'kmsKeyVersion'
     */
    @Test
    public void kmsKeyVersionTest() {
        // TODO: test kmsKeyVersion
    }

    /**
     * Test the property 'labels'
     */
    @Test
    public void labelsTest() {
        // TODO: test labels
    }

    /**
     * Test the property 'logicalInterfaces'
     */
    @Test
    public void logicalInterfacesTest() {
        // TODO: test logicalInterfaces
    }

    /**
     * Test the property 'loginInfo'
     */
    @Test
    public void loginInfoTest() {
        // TODO: test loginInfo
    }

    /**
     * Test the property 'luns'
     */
    @Test
    public void lunsTest() {
        // TODO: test luns
    }

    /**
     * Test the property 'machineType'
     */
    @Test
    public void machineTypeTest() {
        // TODO: test machineType
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'networkTemplate'
     */
    @Test
    public void networkTemplateTest() {
        // TODO: test networkTemplate
    }

    /**
     * Test the property 'networks'
     */
    @Test
    public void networksTest() {
        // TODO: test networks
    }

    /**
     * Test the property 'osImage'
     */
    @Test
    public void osImageTest() {
        // TODO: test osImage
    }

    /**
     * Test the property 'pod'
     */
    @Test
    public void podTest() {
        // TODO: test pod
    }

    /**
     * Test the property 'sshKeys'
     */
    @Test
    public void sshKeysTest() {
        // TODO: test sshKeys
    }

    /**
     * Test the property 'state'
     */
    @Test
    public void stateTest() {
        // TODO: test state
    }

    /**
     * Test the property 'updateTime'
     */
    @Test
    public void updateTimeTest() {
        // TODO: test updateTime
    }

    /**
     * Test the property 'volumes'
     */
    @Test
    public void volumesTest() {
        // TODO: test volumes
    }

    /**
     * Test the property 'workloadProfile'
     */
    @Test
    public void workloadProfileTest() {
        // TODO: test workloadProfile
    }

}
