/**
 * Bare Metal Solution API
 * Provides ways to manage Bare Metal Solution hardware installed in a regional extension located near a Google Cloud data center.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDetachLunRequest.h
 *
 * Message for detach specific LUN from an Instance.
 */

#ifndef OAIDetachLunRequest_H
#define OAIDetachLunRequest_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDetachLunRequest : public OAIObject {
public:
    OAIDetachLunRequest();
    OAIDetachLunRequest(QString json);
    ~OAIDetachLunRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getLun() const;
    void setLun(const QString &lun);
    bool is_lun_Set() const;
    bool is_lun_Valid() const;

    bool isSkipReboot() const;
    void setSkipReboot(const bool &skip_reboot);
    bool is_skip_reboot_Set() const;
    bool is_skip_reboot_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_lun;
    bool m_lun_isSet;
    bool m_lun_isValid;

    bool m_skip_reboot;
    bool m_skip_reboot_isSet;
    bool m_skip_reboot_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDetachLunRequest)

#endif // OAIDetachLunRequest_H
