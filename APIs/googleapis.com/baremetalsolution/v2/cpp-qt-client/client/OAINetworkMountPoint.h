/**
 * Bare Metal Solution API
 * Provides ways to manage Bare Metal Solution hardware installed in a regional extension located near a Google Cloud data center.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINetworkMountPoint.h
 *
 * Mount point for a network.
 */

#ifndef OAINetworkMountPoint_H
#define OAINetworkMountPoint_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAINetworkMountPoint : public OAIObject {
public:
    OAINetworkMountPoint();
    OAINetworkMountPoint(QString json);
    ~OAINetworkMountPoint() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isDefaultGateway() const;
    void setDefaultGateway(const bool &default_gateway);
    bool is_default_gateway_Set() const;
    bool is_default_gateway_Valid() const;

    QString getInstance() const;
    void setInstance(const QString &instance);
    bool is_instance_Set() const;
    bool is_instance_Valid() const;

    QString getIpAddress() const;
    void setIpAddress(const QString &ip_address);
    bool is_ip_address_Set() const;
    bool is_ip_address_Valid() const;

    QString getLogicalInterface() const;
    void setLogicalInterface(const QString &logical_interface);
    bool is_logical_interface_Set() const;
    bool is_logical_interface_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_default_gateway;
    bool m_default_gateway_isSet;
    bool m_default_gateway_isValid;

    QString m_instance;
    bool m_instance_isSet;
    bool m_instance_isValid;

    QString m_ip_address;
    bool m_ip_address_isSet;
    bool m_ip_address_isValid;

    QString m_logical_interface;
    bool m_logical_interface_isSet;
    bool m_logical_interface_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINetworkMountPoint)

#endif // OAINetworkMountPoint_H
