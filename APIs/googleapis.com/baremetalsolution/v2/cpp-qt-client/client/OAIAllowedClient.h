/**
 * Bare Metal Solution API
 * Provides ways to manage Bare Metal Solution hardware installed in a regional extension located near a Google Cloud data center.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAllowedClient.h
 *
 * Represents an &#39;access point&#39; for the share.
 */

#ifndef OAIAllowedClient_H
#define OAIAllowedClient_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAllowedClient : public OAIObject {
public:
    OAIAllowedClient();
    OAIAllowedClient(QString json);
    ~OAIAllowedClient() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAllowDev() const;
    void setAllowDev(const bool &allow_dev);
    bool is_allow_dev_Set() const;
    bool is_allow_dev_Valid() const;

    bool isAllowSuid() const;
    void setAllowSuid(const bool &allow_suid);
    bool is_allow_suid_Set() const;
    bool is_allow_suid_Valid() const;

    QString getAllowedClientsCidr() const;
    void setAllowedClientsCidr(const QString &allowed_clients_cidr);
    bool is_allowed_clients_cidr_Set() const;
    bool is_allowed_clients_cidr_Valid() const;

    QString getMountPermissions() const;
    void setMountPermissions(const QString &mount_permissions);
    bool is_mount_permissions_Set() const;
    bool is_mount_permissions_Valid() const;

    QString getNetwork() const;
    void setNetwork(const QString &network);
    bool is_network_Set() const;
    bool is_network_Valid() const;

    QString getNfsPath() const;
    void setNfsPath(const QString &nfs_path);
    bool is_nfs_path_Set() const;
    bool is_nfs_path_Valid() const;

    bool isNoRootSquash() const;
    void setNoRootSquash(const bool &no_root_squash);
    bool is_no_root_squash_Set() const;
    bool is_no_root_squash_Valid() const;

    QString getShareIp() const;
    void setShareIp(const QString &share_ip);
    bool is_share_ip_Set() const;
    bool is_share_ip_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_allow_dev;
    bool m_allow_dev_isSet;
    bool m_allow_dev_isValid;

    bool m_allow_suid;
    bool m_allow_suid_isSet;
    bool m_allow_suid_isValid;

    QString m_allowed_clients_cidr;
    bool m_allowed_clients_cidr_isSet;
    bool m_allowed_clients_cidr_isValid;

    QString m_mount_permissions;
    bool m_mount_permissions_isSet;
    bool m_mount_permissions_isValid;

    QString m_network;
    bool m_network_isSet;
    bool m_network_isValid;

    QString m_nfs_path;
    bool m_nfs_path_isSet;
    bool m_nfs_path_isValid;

    bool m_no_root_squash;
    bool m_no_root_squash_isSet;
    bool m_no_root_squash_isValid;

    QString m_share_ip;
    bool m_share_ip_isSet;
    bool m_share_ip_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAllowedClient)

#endif // OAIAllowedClient_H
