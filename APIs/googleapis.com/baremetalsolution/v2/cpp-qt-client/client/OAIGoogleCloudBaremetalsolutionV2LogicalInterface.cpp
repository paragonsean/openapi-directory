/**
 * Bare Metal Solution API
 * Provides ways to manage Bare Metal Solution hardware installed in a regional extension located near a Google Cloud data center.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudBaremetalsolutionV2LogicalInterface.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudBaremetalsolutionV2LogicalInterface::OAIGoogleCloudBaremetalsolutionV2LogicalInterface(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudBaremetalsolutionV2LogicalInterface::OAIGoogleCloudBaremetalsolutionV2LogicalInterface() {
    this->initializeModel();
}

OAIGoogleCloudBaremetalsolutionV2LogicalInterface::~OAIGoogleCloudBaremetalsolutionV2LogicalInterface() {}

void OAIGoogleCloudBaremetalsolutionV2LogicalInterface::initializeModel() {

    m_interface_index_isSet = false;
    m_interface_index_isValid = false;

    m_logical_network_interfaces_isSet = false;
    m_logical_network_interfaces_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAIGoogleCloudBaremetalsolutionV2LogicalInterface::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudBaremetalsolutionV2LogicalInterface::fromJsonObject(QJsonObject json) {

    m_interface_index_isValid = ::OpenAPI::fromJsonValue(m_interface_index, json[QString("interfaceIndex")]);
    m_interface_index_isSet = !json[QString("interfaceIndex")].isNull() && m_interface_index_isValid;

    m_logical_network_interfaces_isValid = ::OpenAPI::fromJsonValue(m_logical_network_interfaces, json[QString("logicalNetworkInterfaces")]);
    m_logical_network_interfaces_isSet = !json[QString("logicalNetworkInterfaces")].isNull() && m_logical_network_interfaces_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;
}

QString OAIGoogleCloudBaremetalsolutionV2LogicalInterface::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudBaremetalsolutionV2LogicalInterface::asJsonObject() const {
    QJsonObject obj;
    if (m_interface_index_isSet) {
        obj.insert(QString("interfaceIndex"), ::OpenAPI::toJsonValue(m_interface_index));
    }
    if (m_logical_network_interfaces.size() > 0) {
        obj.insert(QString("logicalNetworkInterfaces"), ::OpenAPI::toJsonValue(m_logical_network_interfaces));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

qint32 OAIGoogleCloudBaremetalsolutionV2LogicalInterface::getInterfaceIndex() const {
    return m_interface_index;
}
void OAIGoogleCloudBaremetalsolutionV2LogicalInterface::setInterfaceIndex(const qint32 &interface_index) {
    m_interface_index = interface_index;
    m_interface_index_isSet = true;
}

bool OAIGoogleCloudBaremetalsolutionV2LogicalInterface::is_interface_index_Set() const{
    return m_interface_index_isSet;
}

bool OAIGoogleCloudBaremetalsolutionV2LogicalInterface::is_interface_index_Valid() const{
    return m_interface_index_isValid;
}

QList<OAILogicalNetworkInterface> OAIGoogleCloudBaremetalsolutionV2LogicalInterface::getLogicalNetworkInterfaces() const {
    return m_logical_network_interfaces;
}
void OAIGoogleCloudBaremetalsolutionV2LogicalInterface::setLogicalNetworkInterfaces(const QList<OAILogicalNetworkInterface> &logical_network_interfaces) {
    m_logical_network_interfaces = logical_network_interfaces;
    m_logical_network_interfaces_isSet = true;
}

bool OAIGoogleCloudBaremetalsolutionV2LogicalInterface::is_logical_network_interfaces_Set() const{
    return m_logical_network_interfaces_isSet;
}

bool OAIGoogleCloudBaremetalsolutionV2LogicalInterface::is_logical_network_interfaces_Valid() const{
    return m_logical_network_interfaces_isValid;
}

QString OAIGoogleCloudBaremetalsolutionV2LogicalInterface::getName() const {
    return m_name;
}
void OAIGoogleCloudBaremetalsolutionV2LogicalInterface::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudBaremetalsolutionV2LogicalInterface::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudBaremetalsolutionV2LogicalInterface::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIGoogleCloudBaremetalsolutionV2LogicalInterface::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_interface_index_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_logical_network_interfaces.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudBaremetalsolutionV2LogicalInterface::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
