/**
 * Bare Metal Solution API
 * Provides ways to manage Bare Metal Solution hardware installed in a regional extension located near a Google Cloud data center.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIProvisioningConfig.h
 *
 * A provisioning configuration.
 */

#ifndef OAIProvisioningConfig_H
#define OAIProvisioningConfig_H

#include <QJsonObject>

#include "OAIInstanceConfig.h"
#include "OAINetworkConfig.h"
#include "OAIVolumeConfig.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIInstanceConfig;
class OAINetworkConfig;
class OAIVolumeConfig;

class OAIProvisioningConfig : public OAIObject {
public:
    OAIProvisioningConfig();
    OAIProvisioningConfig(QString json);
    ~OAIProvisioningConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCloudConsoleUri() const;
    void setCloudConsoleUri(const QString &cloud_console_uri);
    bool is_cloud_console_uri_Set() const;
    bool is_cloud_console_uri_Valid() const;

    QString getCustomId() const;
    void setCustomId(const QString &custom_id);
    bool is_custom_id_Set() const;
    bool is_custom_id_Valid() const;

    Q_DECL_DEPRECATED QString getEmail() const;
    Q_DECL_DEPRECATED void setEmail(const QString &email);
    Q_DECL_DEPRECATED bool is_email_Set() const;
    Q_DECL_DEPRECATED bool is_email_Valid() const;

    QString getHandoverServiceAccount() const;
    void setHandoverServiceAccount(const QString &handover_service_account);
    bool is_handover_service_account_Set() const;
    bool is_handover_service_account_Valid() const;

    QList<OAIInstanceConfig> getInstances() const;
    void setInstances(const QList<OAIInstanceConfig> &instances);
    bool is_instances_Set() const;
    bool is_instances_Valid() const;

    QString getLocation() const;
    void setLocation(const QString &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList<OAINetworkConfig> getNetworks() const;
    void setNetworks(const QList<OAINetworkConfig> &networks);
    bool is_networks_Set() const;
    bool is_networks_Valid() const;

    QString getPod() const;
    void setPod(const QString &pod);
    bool is_pod_Set() const;
    bool is_pod_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QString getStatusMessage() const;
    void setStatusMessage(const QString &status_message);
    bool is_status_message_Set() const;
    bool is_status_message_Valid() const;

    QString getTicketId() const;
    void setTicketId(const QString &ticket_id);
    bool is_ticket_id_Set() const;
    bool is_ticket_id_Valid() const;

    QString getUpdateTime() const;
    void setUpdateTime(const QString &update_time);
    bool is_update_time_Set() const;
    bool is_update_time_Valid() const;

    QList<OAIVolumeConfig> getVolumes() const;
    void setVolumes(const QList<OAIVolumeConfig> &volumes);
    bool is_volumes_Set() const;
    bool is_volumes_Valid() const;

    bool isVpcScEnabled() const;
    void setVpcScEnabled(const bool &vpc_sc_enabled);
    bool is_vpc_sc_enabled_Set() const;
    bool is_vpc_sc_enabled_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_cloud_console_uri;
    bool m_cloud_console_uri_isSet;
    bool m_cloud_console_uri_isValid;

    QString m_custom_id;
    bool m_custom_id_isSet;
    bool m_custom_id_isValid;

    QString m_email;
    bool m_email_isSet;
    bool m_email_isValid;

    QString m_handover_service_account;
    bool m_handover_service_account_isSet;
    bool m_handover_service_account_isValid;

    QList<OAIInstanceConfig> m_instances;
    bool m_instances_isSet;
    bool m_instances_isValid;

    QString m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList<OAINetworkConfig> m_networks;
    bool m_networks_isSet;
    bool m_networks_isValid;

    QString m_pod;
    bool m_pod_isSet;
    bool m_pod_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QString m_status_message;
    bool m_status_message_isSet;
    bool m_status_message_isValid;

    QString m_ticket_id;
    bool m_ticket_id_isSet;
    bool m_ticket_id_isValid;

    QString m_update_time;
    bool m_update_time_isSet;
    bool m_update_time_isValid;

    QList<OAIVolumeConfig> m_volumes;
    bool m_volumes_isSet;
    bool m_volumes_isValid;

    bool m_vpc_sc_enabled;
    bool m_vpc_sc_enabled_isSet;
    bool m_vpc_sc_enabled_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIProvisioningConfig)

#endif // OAIProvisioningConfig_H
