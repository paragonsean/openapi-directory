/**
 * Bare Metal Solution API
 * Provides ways to manage Bare Metal Solution hardware installed in a regional extension located near a Google Cloud data center.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudBaremetalsolutionV2LogicalInterface.h
 *
 * Each logical interface represents a logical abstraction of the underlying physical interface (for eg. bond, nic) of the instance. Each logical interface can effectively map to multiple network-IP pairs and still be mapped to one underlying physical interface.
 */

#ifndef OAIGoogleCloudBaremetalsolutionV2LogicalInterface_H
#define OAIGoogleCloudBaremetalsolutionV2LogicalInterface_H

#include <QJsonObject>

#include "OAILogicalNetworkInterface.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAILogicalNetworkInterface;

class OAIGoogleCloudBaremetalsolutionV2LogicalInterface : public OAIObject {
public:
    OAIGoogleCloudBaremetalsolutionV2LogicalInterface();
    OAIGoogleCloudBaremetalsolutionV2LogicalInterface(QString json);
    ~OAIGoogleCloudBaremetalsolutionV2LogicalInterface() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    Q_DECL_DEPRECATED qint32 getInterfaceIndex() const;
    Q_DECL_DEPRECATED void setInterfaceIndex(const qint32 &interface_index);
    Q_DECL_DEPRECATED bool is_interface_index_Set() const;
    Q_DECL_DEPRECATED bool is_interface_index_Valid() const;

    QList<OAILogicalNetworkInterface> getLogicalNetworkInterfaces() const;
    void setLogicalNetworkInterfaces(const QList<OAILogicalNetworkInterface> &logical_network_interfaces);
    bool is_logical_network_interfaces_Set() const;
    bool is_logical_network_interfaces_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_interface_index;
    bool m_interface_index_isSet;
    bool m_interface_index_isValid;

    QList<OAILogicalNetworkInterface> m_logical_network_interfaces;
    bool m_logical_network_interfaces_isSet;
    bool m_logical_network_interfaces_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudBaremetalsolutionV2LogicalInterface)

#endif // OAIGoogleCloudBaremetalsolutionV2LogicalInterface_H
