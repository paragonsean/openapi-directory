/**
 * Bare Metal Solution API
 * Provides ways to manage Bare Metal Solution hardware installed in a regional extension located near a Google Cloud data center.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINfsExport.h
 *
 * A NFS export entry.
 */

#ifndef OAINfsExport_H
#define OAINfsExport_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAINfsExport : public OAIObject {
public:
    OAINfsExport();
    OAINfsExport(QString json);
    ~OAINfsExport() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAllowDev() const;
    void setAllowDev(const bool &allow_dev);
    bool is_allow_dev_Set() const;
    bool is_allow_dev_Valid() const;

    bool isAllowSuid() const;
    void setAllowSuid(const bool &allow_suid);
    bool is_allow_suid_Set() const;
    bool is_allow_suid_Valid() const;

    QString getCidr() const;
    void setCidr(const QString &cidr);
    bool is_cidr_Set() const;
    bool is_cidr_Valid() const;

    QString getMachineId() const;
    void setMachineId(const QString &machine_id);
    bool is_machine_id_Set() const;
    bool is_machine_id_Valid() const;

    QString getNetworkId() const;
    void setNetworkId(const QString &network_id);
    bool is_network_id_Set() const;
    bool is_network_id_Valid() const;

    bool isNoRootSquash() const;
    void setNoRootSquash(const bool &no_root_squash);
    bool is_no_root_squash_Set() const;
    bool is_no_root_squash_Valid() const;

    QString getPermissions() const;
    void setPermissions(const QString &permissions);
    bool is_permissions_Set() const;
    bool is_permissions_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_allow_dev;
    bool m_allow_dev_isSet;
    bool m_allow_dev_isValid;

    bool m_allow_suid;
    bool m_allow_suid_isSet;
    bool m_allow_suid_isValid;

    QString m_cidr;
    bool m_cidr_isSet;
    bool m_cidr_isValid;

    QString m_machine_id;
    bool m_machine_id_isSet;
    bool m_machine_id_isValid;

    QString m_network_id;
    bool m_network_id_isSet;
    bool m_network_id_isValid;

    bool m_no_root_squash;
    bool m_no_root_squash_isSet;
    bool m_no_root_squash_isValid;

    QString m_permissions;
    bool m_permissions_isSet;
    bool m_permissions_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINfsExport)

#endif // OAINfsExport_H
