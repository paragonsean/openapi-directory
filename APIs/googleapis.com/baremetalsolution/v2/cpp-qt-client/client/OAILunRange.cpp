/**
 * Bare Metal Solution API
 * Provides ways to manage Bare Metal Solution hardware installed in a regional extension located near a Google Cloud data center.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILunRange.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILunRange::OAILunRange(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILunRange::OAILunRange() {
    this->initializeModel();
}

OAILunRange::~OAILunRange() {}

void OAILunRange::initializeModel() {

    m_quantity_isSet = false;
    m_quantity_isValid = false;

    m_size_gb_isSet = false;
    m_size_gb_isValid = false;
}

void OAILunRange::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILunRange::fromJsonObject(QJsonObject json) {

    m_quantity_isValid = ::OpenAPI::fromJsonValue(m_quantity, json[QString("quantity")]);
    m_quantity_isSet = !json[QString("quantity")].isNull() && m_quantity_isValid;

    m_size_gb_isValid = ::OpenAPI::fromJsonValue(m_size_gb, json[QString("sizeGb")]);
    m_size_gb_isSet = !json[QString("sizeGb")].isNull() && m_size_gb_isValid;
}

QString OAILunRange::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILunRange::asJsonObject() const {
    QJsonObject obj;
    if (m_quantity_isSet) {
        obj.insert(QString("quantity"), ::OpenAPI::toJsonValue(m_quantity));
    }
    if (m_size_gb_isSet) {
        obj.insert(QString("sizeGb"), ::OpenAPI::toJsonValue(m_size_gb));
    }
    return obj;
}

qint32 OAILunRange::getQuantity() const {
    return m_quantity;
}
void OAILunRange::setQuantity(const qint32 &quantity) {
    m_quantity = quantity;
    m_quantity_isSet = true;
}

bool OAILunRange::is_quantity_Set() const{
    return m_quantity_isSet;
}

bool OAILunRange::is_quantity_Valid() const{
    return m_quantity_isValid;
}

qint32 OAILunRange::getSizeGb() const {
    return m_size_gb;
}
void OAILunRange::setSizeGb(const qint32 &size_gb) {
    m_size_gb = size_gb;
    m_size_gb_isSet = true;
}

bool OAILunRange::is_size_gb_Set() const{
    return m_size_gb_isSet;
}

bool OAILunRange::is_size_gb_Valid() const{
    return m_size_gb_isValid;
}

bool OAILunRange::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_quantity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_size_gb_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILunRange::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
