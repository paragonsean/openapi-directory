/**
 * Bare Metal Solution API
 * Provides ways to manage Bare Metal Solution hardware installed in a regional extension located near a Google Cloud data center.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInstanceConfig.h
 *
 * Configuration parameters for a new instance.
 */

#ifndef OAIInstanceConfig_H
#define OAIInstanceConfig_H

#include <QJsonObject>

#include "OAIGoogleCloudBaremetalsolutionV2LogicalInterface.h"
#include "OAINetworkAddress.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAINetworkAddress;
class OAIGoogleCloudBaremetalsolutionV2LogicalInterface;

class OAIInstanceConfig : public OAIObject {
public:
    OAIInstanceConfig();
    OAIInstanceConfig(QString json);
    ~OAIInstanceConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAccountNetworksEnabled() const;
    void setAccountNetworksEnabled(const bool &account_networks_enabled);
    bool is_account_networks_enabled_Set() const;
    bool is_account_networks_enabled_Valid() const;

    OAINetworkAddress getClientNetwork() const;
    void setClientNetwork(const OAINetworkAddress &client_network);
    bool is_client_network_Set() const;
    bool is_client_network_Valid() const;

    bool isHyperthreading() const;
    void setHyperthreading(const bool &hyperthreading);
    bool is_hyperthreading_Set() const;
    bool is_hyperthreading_Valid() const;

    Q_DECL_DEPRECATED QString getId() const;
    Q_DECL_DEPRECATED void setId(const QString &id);
    Q_DECL_DEPRECATED bool is_id_Set() const;
    Q_DECL_DEPRECATED bool is_id_Valid() const;

    QString getInstanceType() const;
    void setInstanceType(const QString &instance_type);
    bool is_instance_type_Set() const;
    bool is_instance_type_Valid() const;

    QString getKmsKeyVersion() const;
    void setKmsKeyVersion(const QString &kms_key_version);
    bool is_kms_key_version_Set() const;
    bool is_kms_key_version_Valid() const;

    QList<OAIGoogleCloudBaremetalsolutionV2LogicalInterface> getLogicalInterfaces() const;
    void setLogicalInterfaces(const QList<OAIGoogleCloudBaremetalsolutionV2LogicalInterface> &logical_interfaces);
    bool is_logical_interfaces_Set() const;
    bool is_logical_interfaces_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getNetworkConfig() const;
    void setNetworkConfig(const QString &network_config);
    bool is_network_config_Set() const;
    bool is_network_config_Valid() const;

    QString getNetworkTemplate() const;
    void setNetworkTemplate(const QString &network_template);
    bool is_network_template_Set() const;
    bool is_network_template_Valid() const;

    QString getOsImage() const;
    void setOsImage(const QString &os_image);
    bool is_os_image_Set() const;
    bool is_os_image_Valid() const;

    OAINetworkAddress getPrivateNetwork() const;
    void setPrivateNetwork(const OAINetworkAddress &private_network);
    bool is_private_network_Set() const;
    bool is_private_network_Valid() const;

    QList<QString> getSshKeyNames() const;
    void setSshKeyNames(const QList<QString> &ssh_key_names);
    bool is_ssh_key_names_Set() const;
    bool is_ssh_key_names_Valid() const;

    QString getUserNote() const;
    void setUserNote(const QString &user_note);
    bool is_user_note_Set() const;
    bool is_user_note_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_account_networks_enabled;
    bool m_account_networks_enabled_isSet;
    bool m_account_networks_enabled_isValid;

    OAINetworkAddress m_client_network;
    bool m_client_network_isSet;
    bool m_client_network_isValid;

    bool m_hyperthreading;
    bool m_hyperthreading_isSet;
    bool m_hyperthreading_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_instance_type;
    bool m_instance_type_isSet;
    bool m_instance_type_isValid;

    QString m_kms_key_version;
    bool m_kms_key_version_isSet;
    bool m_kms_key_version_isValid;

    QList<OAIGoogleCloudBaremetalsolutionV2LogicalInterface> m_logical_interfaces;
    bool m_logical_interfaces_isSet;
    bool m_logical_interfaces_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_network_config;
    bool m_network_config_isSet;
    bool m_network_config_isValid;

    QString m_network_template;
    bool m_network_template_isSet;
    bool m_network_template_isValid;

    QString m_os_image;
    bool m_os_image_isSet;
    bool m_os_image_isValid;

    OAINetworkAddress m_private_network;
    bool m_private_network_isSet;
    bool m_private_network_isValid;

    QList<QString> m_ssh_key_names;
    bool m_ssh_key_names_isSet;
    bool m_ssh_key_names_isValid;

    QString m_user_note;
    bool m_user_note_isSet;
    bool m_user_note_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInstanceConfig)

#endif // OAIInstanceConfig_H
