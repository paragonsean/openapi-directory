/**
 * Bare Metal Solution API
 * Provides ways to manage Bare Metal Solution hardware installed in a regional extension located near a Google Cloud data center.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInstance.h
 *
 * A server.
 */

#ifndef OAIInstance_H
#define OAIInstance_H

#include <QJsonObject>

#include "OAIGoogleCloudBaremetalsolutionV2LogicalInterface.h"
#include "OAILun.h"
#include "OAINetwork.h"
#include "OAIVolume.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleCloudBaremetalsolutionV2LogicalInterface;
class OAILun;
class OAINetwork;
class OAIVolume;

class OAIInstance : public OAIObject {
public:
    OAIInstance();
    OAIInstance(QString json);
    ~OAIInstance() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCreateTime() const;
    void setCreateTime(const QString &create_time);
    bool is_create_time_Set() const;
    bool is_create_time_Valid() const;

    QString getFirmwareVersion() const;
    void setFirmwareVersion(const QString &firmware_version);
    bool is_firmware_version_Set() const;
    bool is_firmware_version_Valid() const;

    bool isHyperthreadingEnabled() const;
    void setHyperthreadingEnabled(const bool &hyperthreading_enabled);
    bool is_hyperthreading_enabled_Set() const;
    bool is_hyperthreading_enabled_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    bool isInteractiveSerialConsoleEnabled() const;
    void setInteractiveSerialConsoleEnabled(const bool &interactive_serial_console_enabled);
    bool is_interactive_serial_console_enabled_Set() const;
    bool is_interactive_serial_console_enabled_Valid() const;

    QString getKmsKeyVersion() const;
    void setKmsKeyVersion(const QString &kms_key_version);
    bool is_kms_key_version_Set() const;
    bool is_kms_key_version_Valid() const;

    QMap<QString, QString> getLabels() const;
    void setLabels(const QMap<QString, QString> &labels);
    bool is_labels_Set() const;
    bool is_labels_Valid() const;

    QList<OAIGoogleCloudBaremetalsolutionV2LogicalInterface> getLogicalInterfaces() const;
    void setLogicalInterfaces(const QList<OAIGoogleCloudBaremetalsolutionV2LogicalInterface> &logical_interfaces);
    bool is_logical_interfaces_Set() const;
    bool is_logical_interfaces_Valid() const;

    QString getLoginInfo() const;
    void setLoginInfo(const QString &login_info);
    bool is_login_info_Set() const;
    bool is_login_info_Valid() const;

    QList<OAILun> getLuns() const;
    void setLuns(const QList<OAILun> &luns);
    bool is_luns_Set() const;
    bool is_luns_Valid() const;

    QString getMachineType() const;
    void setMachineType(const QString &machine_type);
    bool is_machine_type_Set() const;
    bool is_machine_type_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getNetworkTemplate() const;
    void setNetworkTemplate(const QString &network_template);
    bool is_network_template_Set() const;
    bool is_network_template_Valid() const;

    QList<OAINetwork> getNetworks() const;
    void setNetworks(const QList<OAINetwork> &networks);
    bool is_networks_Set() const;
    bool is_networks_Valid() const;

    QString getOsImage() const;
    void setOsImage(const QString &os_image);
    bool is_os_image_Set() const;
    bool is_os_image_Valid() const;

    QString getPod() const;
    void setPod(const QString &pod);
    bool is_pod_Set() const;
    bool is_pod_Valid() const;

    QList<QString> getSshKeys() const;
    void setSshKeys(const QList<QString> &ssh_keys);
    bool is_ssh_keys_Set() const;
    bool is_ssh_keys_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QString getUpdateTime() const;
    void setUpdateTime(const QString &update_time);
    bool is_update_time_Set() const;
    bool is_update_time_Valid() const;

    QList<OAIVolume> getVolumes() const;
    void setVolumes(const QList<OAIVolume> &volumes);
    bool is_volumes_Set() const;
    bool is_volumes_Valid() const;

    QString getWorkloadProfile() const;
    void setWorkloadProfile(const QString &workload_profile);
    bool is_workload_profile_Set() const;
    bool is_workload_profile_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_create_time;
    bool m_create_time_isSet;
    bool m_create_time_isValid;

    QString m_firmware_version;
    bool m_firmware_version_isSet;
    bool m_firmware_version_isValid;

    bool m_hyperthreading_enabled;
    bool m_hyperthreading_enabled_isSet;
    bool m_hyperthreading_enabled_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    bool m_interactive_serial_console_enabled;
    bool m_interactive_serial_console_enabled_isSet;
    bool m_interactive_serial_console_enabled_isValid;

    QString m_kms_key_version;
    bool m_kms_key_version_isSet;
    bool m_kms_key_version_isValid;

    QMap<QString, QString> m_labels;
    bool m_labels_isSet;
    bool m_labels_isValid;

    QList<OAIGoogleCloudBaremetalsolutionV2LogicalInterface> m_logical_interfaces;
    bool m_logical_interfaces_isSet;
    bool m_logical_interfaces_isValid;

    QString m_login_info;
    bool m_login_info_isSet;
    bool m_login_info_isValid;

    QList<OAILun> m_luns;
    bool m_luns_isSet;
    bool m_luns_isValid;

    QString m_machine_type;
    bool m_machine_type_isSet;
    bool m_machine_type_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_network_template;
    bool m_network_template_isSet;
    bool m_network_template_isValid;

    QList<OAINetwork> m_networks;
    bool m_networks_isSet;
    bool m_networks_isValid;

    QString m_os_image;
    bool m_os_image_isSet;
    bool m_os_image_isValid;

    QString m_pod;
    bool m_pod_isSet;
    bool m_pod_isValid;

    QList<QString> m_ssh_keys;
    bool m_ssh_keys_isSet;
    bool m_ssh_keys_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QString m_update_time;
    bool m_update_time_isSet;
    bool m_update_time_isValid;

    QList<OAIVolume> m_volumes;
    bool m_volumes_isSet;
    bool m_volumes_isValid;

    QString m_workload_profile;
    bool m_workload_profile_isSet;
    bool m_workload_profile_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInstance)

#endif // OAIInstance_H
