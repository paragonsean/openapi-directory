/**
 * Migration Center API
 * A unified platform that helps you accelerate your end-to-end cloud journey from your current on-premises or cloud environments to Google Cloud.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAssetPerformanceData.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAssetPerformanceData::OAIAssetPerformanceData(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAssetPerformanceData::OAIAssetPerformanceData() {
    this->initializeModel();
}

OAIAssetPerformanceData::~OAIAssetPerformanceData() {}

void OAIAssetPerformanceData::initializeModel() {

    m_daily_resource_usage_aggregations_isSet = false;
    m_daily_resource_usage_aggregations_isValid = false;
}

void OAIAssetPerformanceData::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAssetPerformanceData::fromJsonObject(QJsonObject json) {

    m_daily_resource_usage_aggregations_isValid = ::OpenAPI::fromJsonValue(m_daily_resource_usage_aggregations, json[QString("dailyResourceUsageAggregations")]);
    m_daily_resource_usage_aggregations_isSet = !json[QString("dailyResourceUsageAggregations")].isNull() && m_daily_resource_usage_aggregations_isValid;
}

QString OAIAssetPerformanceData::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAssetPerformanceData::asJsonObject() const {
    QJsonObject obj;
    if (m_daily_resource_usage_aggregations.size() > 0) {
        obj.insert(QString("dailyResourceUsageAggregations"), ::OpenAPI::toJsonValue(m_daily_resource_usage_aggregations));
    }
    return obj;
}

QList<OAIDailyResourceUsageAggregation> OAIAssetPerformanceData::getDailyResourceUsageAggregations() const {
    return m_daily_resource_usage_aggregations;
}
void OAIAssetPerformanceData::setDailyResourceUsageAggregations(const QList<OAIDailyResourceUsageAggregation> &daily_resource_usage_aggregations) {
    m_daily_resource_usage_aggregations = daily_resource_usage_aggregations;
    m_daily_resource_usage_aggregations_isSet = true;
}

bool OAIAssetPerformanceData::is_daily_resource_usage_aggregations_Set() const{
    return m_daily_resource_usage_aggregations_isSet;
}

bool OAIAssetPerformanceData::is_daily_resource_usage_aggregations_Valid() const{
    return m_daily_resource_usage_aggregations_isValid;
}

bool OAIAssetPerformanceData::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_daily_resource_usage_aggregations.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAssetPerformanceData::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
