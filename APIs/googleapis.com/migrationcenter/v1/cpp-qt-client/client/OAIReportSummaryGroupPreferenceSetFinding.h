/**
 * Migration Center API
 * A unified platform that helps you accelerate your end-to-end cloud journey from your current on-premises or cloud environments to Google Cloud.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIReportSummaryGroupPreferenceSetFinding.h
 *
 * Summary Findings for a specific Group/PreferenceSet combination.
 */

#ifndef OAIReportSummaryGroupPreferenceSetFinding_H
#define OAIReportSummaryGroupPreferenceSetFinding_H

#include <QJsonObject>

#include "OAIMoney.h"
#include "OAIReportSummaryComputeEngineFinding.h"
#include "OAIReportSummarySoleTenantFinding.h"
#include "OAIReportSummaryVmwareEngineFinding.h"
#include "OAIVirtualMachinePreferences.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIReportSummaryComputeEngineFinding;
class OAIVirtualMachinePreferences;
class OAIMoney;
class OAIReportSummarySoleTenantFinding;
class OAIReportSummaryVmwareEngineFinding;

class OAIReportSummaryGroupPreferenceSetFinding : public OAIObject {
public:
    OAIReportSummaryGroupPreferenceSetFinding();
    OAIReportSummaryGroupPreferenceSetFinding(QString json);
    ~OAIReportSummaryGroupPreferenceSetFinding() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIReportSummaryComputeEngineFinding getComputeEngineFinding() const;
    void setComputeEngineFinding(const OAIReportSummaryComputeEngineFinding &compute_engine_finding);
    bool is_compute_engine_finding_Set() const;
    bool is_compute_engine_finding_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    OAIVirtualMachinePreferences getMachinePreferences() const;
    void setMachinePreferences(const OAIVirtualMachinePreferences &machine_preferences);
    bool is_machine_preferences_Set() const;
    bool is_machine_preferences_Valid() const;

    OAIMoney getMonthlyCostCompute() const;
    void setMonthlyCostCompute(const OAIMoney &monthly_cost_compute);
    bool is_monthly_cost_compute_Set() const;
    bool is_monthly_cost_compute_Valid() const;

    OAIMoney getMonthlyCostNetworkEgress() const;
    void setMonthlyCostNetworkEgress(const OAIMoney &monthly_cost_network_egress);
    bool is_monthly_cost_network_egress_Set() const;
    bool is_monthly_cost_network_egress_Valid() const;

    OAIMoney getMonthlyCostOsLicense() const;
    void setMonthlyCostOsLicense(const OAIMoney &monthly_cost_os_license);
    bool is_monthly_cost_os_license_Set() const;
    bool is_monthly_cost_os_license_Valid() const;

    OAIMoney getMonthlyCostOther() const;
    void setMonthlyCostOther(const OAIMoney &monthly_cost_other);
    bool is_monthly_cost_other_Set() const;
    bool is_monthly_cost_other_Valid() const;

    OAIMoney getMonthlyCostStorage() const;
    void setMonthlyCostStorage(const OAIMoney &monthly_cost_storage);
    bool is_monthly_cost_storage_Set() const;
    bool is_monthly_cost_storage_Valid() const;

    OAIMoney getMonthlyCostTotal() const;
    void setMonthlyCostTotal(const OAIMoney &monthly_cost_total);
    bool is_monthly_cost_total_Set() const;
    bool is_monthly_cost_total_Valid() const;

    OAIReportSummarySoleTenantFinding getSoleTenantFinding() const;
    void setSoleTenantFinding(const OAIReportSummarySoleTenantFinding &sole_tenant_finding);
    bool is_sole_tenant_finding_Set() const;
    bool is_sole_tenant_finding_Valid() const;

    OAIReportSummaryVmwareEngineFinding getVmwareEngineFinding() const;
    void setVmwareEngineFinding(const OAIReportSummaryVmwareEngineFinding &vmware_engine_finding);
    bool is_vmware_engine_finding_Set() const;
    bool is_vmware_engine_finding_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIReportSummaryComputeEngineFinding m_compute_engine_finding;
    bool m_compute_engine_finding_isSet;
    bool m_compute_engine_finding_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    OAIVirtualMachinePreferences m_machine_preferences;
    bool m_machine_preferences_isSet;
    bool m_machine_preferences_isValid;

    OAIMoney m_monthly_cost_compute;
    bool m_monthly_cost_compute_isSet;
    bool m_monthly_cost_compute_isValid;

    OAIMoney m_monthly_cost_network_egress;
    bool m_monthly_cost_network_egress_isSet;
    bool m_monthly_cost_network_egress_isValid;

    OAIMoney m_monthly_cost_os_license;
    bool m_monthly_cost_os_license_isSet;
    bool m_monthly_cost_os_license_isValid;

    OAIMoney m_monthly_cost_other;
    bool m_monthly_cost_other_isSet;
    bool m_monthly_cost_other_isValid;

    OAIMoney m_monthly_cost_storage;
    bool m_monthly_cost_storage_isSet;
    bool m_monthly_cost_storage_isValid;

    OAIMoney m_monthly_cost_total;
    bool m_monthly_cost_total_isSet;
    bool m_monthly_cost_total_isValid;

    OAIReportSummarySoleTenantFinding m_sole_tenant_finding;
    bool m_sole_tenant_finding_isSet;
    bool m_sole_tenant_finding_isValid;

    OAIReportSummaryVmwareEngineFinding m_vmware_engine_finding;
    bool m_vmware_engine_finding_isSet;
    bool m_vmware_engine_finding_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIReportSummaryGroupPreferenceSetFinding)

#endif // OAIReportSummaryGroupPreferenceSetFinding_H
