/**
 * Migration Center API
 * A unified platform that helps you accelerate your end-to-end cloud journey from your current on-premises or cloud environments to Google Cloud.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIReportSummaryChartData.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIReportSummaryChartData::OAIReportSummaryChartData(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIReportSummaryChartData::OAIReportSummaryChartData() {
    this->initializeModel();
}

OAIReportSummaryChartData::~OAIReportSummaryChartData() {}

void OAIReportSummaryChartData::initializeModel() {

    m_data_points_isSet = false;
    m_data_points_isValid = false;
}

void OAIReportSummaryChartData::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIReportSummaryChartData::fromJsonObject(QJsonObject json) {

    m_data_points_isValid = ::OpenAPI::fromJsonValue(m_data_points, json[QString("dataPoints")]);
    m_data_points_isSet = !json[QString("dataPoints")].isNull() && m_data_points_isValid;
}

QString OAIReportSummaryChartData::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIReportSummaryChartData::asJsonObject() const {
    QJsonObject obj;
    if (m_data_points.size() > 0) {
        obj.insert(QString("dataPoints"), ::OpenAPI::toJsonValue(m_data_points));
    }
    return obj;
}

QList<OAIReportSummaryChartDataDataPoint> OAIReportSummaryChartData::getDataPoints() const {
    return m_data_points;
}
void OAIReportSummaryChartData::setDataPoints(const QList<OAIReportSummaryChartDataDataPoint> &data_points) {
    m_data_points = data_points;
    m_data_points_isSet = true;
}

bool OAIReportSummaryChartData::is_data_points_Set() const{
    return m_data_points_isSet;
}

bool OAIReportSummaryChartData::is_data_points_Valid() const{
    return m_data_points_isValid;
}

bool OAIReportSummaryChartData::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_data_points.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIReportSummaryChartData::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
