/**
 * Migration Center API
 * A unified platform that helps you accelerate your end-to-end cloud journey from your current on-premises or cloud environments to Google Cloud.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInsight.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInsight::OAIInsight(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInsight::OAIInsight() {
    this->initializeModel();
}

OAIInsight::~OAIInsight() {}

void OAIInsight::initializeModel() {

    m_generic_insight_isSet = false;
    m_generic_insight_isValid = false;

    m_migration_insight_isSet = false;
    m_migration_insight_isValid = false;
}

void OAIInsight::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInsight::fromJsonObject(QJsonObject json) {

    m_generic_insight_isValid = ::OpenAPI::fromJsonValue(m_generic_insight, json[QString("genericInsight")]);
    m_generic_insight_isSet = !json[QString("genericInsight")].isNull() && m_generic_insight_isValid;

    m_migration_insight_isValid = ::OpenAPI::fromJsonValue(m_migration_insight, json[QString("migrationInsight")]);
    m_migration_insight_isSet = !json[QString("migrationInsight")].isNull() && m_migration_insight_isValid;
}

QString OAIInsight::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInsight::asJsonObject() const {
    QJsonObject obj;
    if (m_generic_insight.isSet()) {
        obj.insert(QString("genericInsight"), ::OpenAPI::toJsonValue(m_generic_insight));
    }
    if (m_migration_insight.isSet()) {
        obj.insert(QString("migrationInsight"), ::OpenAPI::toJsonValue(m_migration_insight));
    }
    return obj;
}

OAIGenericInsight OAIInsight::getGenericInsight() const {
    return m_generic_insight;
}
void OAIInsight::setGenericInsight(const OAIGenericInsight &generic_insight) {
    m_generic_insight = generic_insight;
    m_generic_insight_isSet = true;
}

bool OAIInsight::is_generic_insight_Set() const{
    return m_generic_insight_isSet;
}

bool OAIInsight::is_generic_insight_Valid() const{
    return m_generic_insight_isValid;
}

OAIMigrationInsight OAIInsight::getMigrationInsight() const {
    return m_migration_insight;
}
void OAIInsight::setMigrationInsight(const OAIMigrationInsight &migration_insight) {
    m_migration_insight = migration_insight;
    m_migration_insight_isSet = true;
}

bool OAIInsight::is_migration_insight_Set() const{
    return m_migration_insight_isSet;
}

bool OAIInsight::is_migration_insight_Valid() const{
    return m_migration_insight_isValid;
}

bool OAIInsight::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_generic_insight.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_migration_insight.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInsight::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
