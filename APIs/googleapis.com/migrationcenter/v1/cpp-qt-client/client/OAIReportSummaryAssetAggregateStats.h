/**
 * Migration Center API
 * A unified platform that helps you accelerate your end-to-end cloud journey from your current on-premises or cloud environments to Google Cloud.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIReportSummaryAssetAggregateStats.h
 *
 * Aggregate statistics for a collection of assets.
 */

#ifndef OAIReportSummaryAssetAggregateStats_H
#define OAIReportSummaryAssetAggregateStats_H

#include <QJsonObject>

#include "OAIReportSummaryChartData.h"
#include "OAIReportSummaryHistogramChartData.h"
#include "OAIReportSummaryUtilizationChartData.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIReportSummaryHistogramChartData;
class OAIReportSummaryUtilizationChartData;
class OAIReportSummaryChartData;

class OAIReportSummaryAssetAggregateStats : public OAIObject {
public:
    OAIReportSummaryAssetAggregateStats();
    OAIReportSummaryAssetAggregateStats(QString json);
    ~OAIReportSummaryAssetAggregateStats() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIReportSummaryHistogramChartData getCoreCountHistogram() const;
    void setCoreCountHistogram(const OAIReportSummaryHistogramChartData &core_count_histogram);
    bool is_core_count_histogram_Set() const;
    bool is_core_count_histogram_Valid() const;

    OAIReportSummaryHistogramChartData getMemoryBytesHistogram() const;
    void setMemoryBytesHistogram(const OAIReportSummaryHistogramChartData &memory_bytes_histogram);
    bool is_memory_bytes_histogram_Set() const;
    bool is_memory_bytes_histogram_Valid() const;

    OAIReportSummaryUtilizationChartData getMemoryUtilizationChart() const;
    void setMemoryUtilizationChart(const OAIReportSummaryUtilizationChartData &memory_utilization_chart);
    bool is_memory_utilization_chart_Set() const;
    bool is_memory_utilization_chart_Valid() const;

    OAIReportSummaryChartData getOperatingSystem() const;
    void setOperatingSystem(const OAIReportSummaryChartData &operating_system);
    bool is_operating_system_Set() const;
    bool is_operating_system_Valid() const;

    OAIReportSummaryHistogramChartData getStorageBytesHistogram() const;
    void setStorageBytesHistogram(const OAIReportSummaryHistogramChartData &storage_bytes_histogram);
    bool is_storage_bytes_histogram_Set() const;
    bool is_storage_bytes_histogram_Valid() const;

    OAIReportSummaryUtilizationChartData getStorageUtilizationChart() const;
    void setStorageUtilizationChart(const OAIReportSummaryUtilizationChartData &storage_utilization_chart);
    bool is_storage_utilization_chart_Set() const;
    bool is_storage_utilization_chart_Valid() const;

    QString getTotalAssets() const;
    void setTotalAssets(const QString &total_assets);
    bool is_total_assets_Set() const;
    bool is_total_assets_Valid() const;

    QString getTotalCores() const;
    void setTotalCores(const QString &total_cores);
    bool is_total_cores_Set() const;
    bool is_total_cores_Valid() const;

    QString getTotalMemoryBytes() const;
    void setTotalMemoryBytes(const QString &total_memory_bytes);
    bool is_total_memory_bytes_Set() const;
    bool is_total_memory_bytes_Valid() const;

    QString getTotalStorageBytes() const;
    void setTotalStorageBytes(const QString &total_storage_bytes);
    bool is_total_storage_bytes_Set() const;
    bool is_total_storage_bytes_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIReportSummaryHistogramChartData m_core_count_histogram;
    bool m_core_count_histogram_isSet;
    bool m_core_count_histogram_isValid;

    OAIReportSummaryHistogramChartData m_memory_bytes_histogram;
    bool m_memory_bytes_histogram_isSet;
    bool m_memory_bytes_histogram_isValid;

    OAIReportSummaryUtilizationChartData m_memory_utilization_chart;
    bool m_memory_utilization_chart_isSet;
    bool m_memory_utilization_chart_isValid;

    OAIReportSummaryChartData m_operating_system;
    bool m_operating_system_isSet;
    bool m_operating_system_isValid;

    OAIReportSummaryHistogramChartData m_storage_bytes_histogram;
    bool m_storage_bytes_histogram_isSet;
    bool m_storage_bytes_histogram_isValid;

    OAIReportSummaryUtilizationChartData m_storage_utilization_chart;
    bool m_storage_utilization_chart_isSet;
    bool m_storage_utilization_chart_isValid;

    QString m_total_assets;
    bool m_total_assets_isSet;
    bool m_total_assets_isValid;

    QString m_total_cores;
    bool m_total_cores_isSet;
    bool m_total_cores_isValid;

    QString m_total_memory_bytes;
    bool m_total_memory_bytes_isSet;
    bool m_total_memory_bytes_isValid;

    QString m_total_storage_bytes;
    bool m_total_storage_bytes_isSet;
    bool m_total_storage_bytes_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIReportSummaryAssetAggregateStats)

#endif // OAIReportSummaryAssetAggregateStats_H
