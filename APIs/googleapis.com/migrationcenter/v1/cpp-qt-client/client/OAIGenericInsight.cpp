/**
 * Migration Center API
 * A unified platform that helps you accelerate your end-to-end cloud journey from your current on-premises or cloud environments to Google Cloud.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGenericInsight.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGenericInsight::OAIGenericInsight(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGenericInsight::OAIGenericInsight() {
    this->initializeModel();
}

OAIGenericInsight::~OAIGenericInsight() {}

void OAIGenericInsight::initializeModel() {

    m_additional_information_isSet = false;
    m_additional_information_isValid = false;

    m_default_message_isSet = false;
    m_default_message_isValid = false;

    m_message_id_isSet = false;
    m_message_id_isValid = false;
}

void OAIGenericInsight::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGenericInsight::fromJsonObject(QJsonObject json) {

    m_additional_information_isValid = ::OpenAPI::fromJsonValue(m_additional_information, json[QString("additionalInformation")]);
    m_additional_information_isSet = !json[QString("additionalInformation")].isNull() && m_additional_information_isValid;

    m_default_message_isValid = ::OpenAPI::fromJsonValue(m_default_message, json[QString("defaultMessage")]);
    m_default_message_isSet = !json[QString("defaultMessage")].isNull() && m_default_message_isValid;

    m_message_id_isValid = ::OpenAPI::fromJsonValue(m_message_id, json[QString("messageId")]);
    m_message_id_isSet = !json[QString("messageId")].isNull() && m_message_id_isValid;
}

QString OAIGenericInsight::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGenericInsight::asJsonObject() const {
    QJsonObject obj;
    if (m_additional_information.size() > 0) {
        obj.insert(QString("additionalInformation"), ::OpenAPI::toJsonValue(m_additional_information));
    }
    if (m_default_message_isSet) {
        obj.insert(QString("defaultMessage"), ::OpenAPI::toJsonValue(m_default_message));
    }
    if (m_message_id_isSet) {
        obj.insert(QString("messageId"), ::OpenAPI::toJsonValue(m_message_id));
    }
    return obj;
}

QList<QString> OAIGenericInsight::getAdditionalInformation() const {
    return m_additional_information;
}
void OAIGenericInsight::setAdditionalInformation(const QList<QString> &additional_information) {
    m_additional_information = additional_information;
    m_additional_information_isSet = true;
}

bool OAIGenericInsight::is_additional_information_Set() const{
    return m_additional_information_isSet;
}

bool OAIGenericInsight::is_additional_information_Valid() const{
    return m_additional_information_isValid;
}

QString OAIGenericInsight::getDefaultMessage() const {
    return m_default_message;
}
void OAIGenericInsight::setDefaultMessage(const QString &default_message) {
    m_default_message = default_message;
    m_default_message_isSet = true;
}

bool OAIGenericInsight::is_default_message_Set() const{
    return m_default_message_isSet;
}

bool OAIGenericInsight::is_default_message_Valid() const{
    return m_default_message_isValid;
}

QString OAIGenericInsight::getMessageId() const {
    return m_message_id;
}
void OAIGenericInsight::setMessageId(const QString &message_id) {
    m_message_id = message_id;
    m_message_id_isSet = true;
}

bool OAIGenericInsight::is_message_id_Set() const{
    return m_message_id_isSet;
}

bool OAIGenericInsight::is_message_id_Valid() const{
    return m_message_id_isValid;
}

bool OAIGenericInsight::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_additional_information.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_default_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_message_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGenericInsight::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
