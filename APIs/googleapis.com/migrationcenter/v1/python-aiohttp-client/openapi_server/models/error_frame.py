# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.asset_frame import AssetFrame
from openapi_server.models.frame_violation_entry import FrameViolationEntry
from openapi_server import util


class ErrorFrame(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ingestion_time: str=None, name: str=None, original_frame: AssetFrame=None, violations: List[FrameViolationEntry]=None):
        """ErrorFrame - a model defined in OpenAPI

        :param ingestion_time: The ingestion_time of this ErrorFrame.
        :param name: The name of this ErrorFrame.
        :param original_frame: The original_frame of this ErrorFrame.
        :param violations: The violations of this ErrorFrame.
        """
        self.openapi_types = {
            'ingestion_time': str,
            'name': str,
            'original_frame': AssetFrame,
            'violations': List[FrameViolationEntry]
        }

        self.attribute_map = {
            'ingestion_time': 'ingestionTime',
            'name': 'name',
            'original_frame': 'originalFrame',
            'violations': 'violations'
        }

        self._ingestion_time = ingestion_time
        self._name = name
        self._original_frame = original_frame
        self._violations = violations

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ErrorFrame':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ErrorFrame of this ErrorFrame.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ingestion_time(self):
        """Gets the ingestion_time of this ErrorFrame.

        Output only. Frame ingestion time.

        :return: The ingestion_time of this ErrorFrame.
        :rtype: str
        """
        return self._ingestion_time

    @ingestion_time.setter
    def ingestion_time(self, ingestion_time):
        """Sets the ingestion_time of this ErrorFrame.

        Output only. Frame ingestion time.

        :param ingestion_time: The ingestion_time of this ErrorFrame.
        :type ingestion_time: str
        """

        self._ingestion_time = ingestion_time

    @property
    def name(self):
        """Gets the name of this ErrorFrame.

        Output only. The identifier of the ErrorFrame.

        :return: The name of this ErrorFrame.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ErrorFrame.

        Output only. The identifier of the ErrorFrame.

        :param name: The name of this ErrorFrame.
        :type name: str
        """

        self._name = name

    @property
    def original_frame(self):
        """Gets the original_frame of this ErrorFrame.


        :return: The original_frame of this ErrorFrame.
        :rtype: AssetFrame
        """
        return self._original_frame

    @original_frame.setter
    def original_frame(self, original_frame):
        """Sets the original_frame of this ErrorFrame.


        :param original_frame: The original_frame of this ErrorFrame.
        :type original_frame: AssetFrame
        """

        self._original_frame = original_frame

    @property
    def violations(self):
        """Gets the violations of this ErrorFrame.

        Output only. All the violations that were detected for the frame.

        :return: The violations of this ErrorFrame.
        :rtype: List[FrameViolationEntry]
        """
        return self._violations

    @violations.setter
    def violations(self, violations):
        """Sets the violations of this ErrorFrame.

        Output only. All the violations that were detected for the frame.

        :param violations: The violations of this ErrorFrame.
        :type violations: List[FrameViolationEntry]
        """

        self._violations = violations
