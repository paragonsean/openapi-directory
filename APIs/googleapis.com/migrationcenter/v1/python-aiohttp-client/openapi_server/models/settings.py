# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Settings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, disable_cloud_logging: bool=None, name: str=None, preference_set: str=None):
        """Settings - a model defined in OpenAPI

        :param disable_cloud_logging: The disable_cloud_logging of this Settings.
        :param name: The name of this Settings.
        :param preference_set: The preference_set of this Settings.
        """
        self.openapi_types = {
            'disable_cloud_logging': bool,
            'name': str,
            'preference_set': str
        }

        self.attribute_map = {
            'disable_cloud_logging': 'disableCloudLogging',
            'name': 'name',
            'preference_set': 'preferenceSet'
        }

        self._disable_cloud_logging = disable_cloud_logging
        self._name = name
        self._preference_set = preference_set

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Settings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Settings of this Settings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def disable_cloud_logging(self):
        """Gets the disable_cloud_logging of this Settings.

        Disable Cloud Logging for the Migration Center API. Users are billed for the logs.

        :return: The disable_cloud_logging of this Settings.
        :rtype: bool
        """
        return self._disable_cloud_logging

    @disable_cloud_logging.setter
    def disable_cloud_logging(self, disable_cloud_logging):
        """Sets the disable_cloud_logging of this Settings.

        Disable Cloud Logging for the Migration Center API. Users are billed for the logs.

        :param disable_cloud_logging: The disable_cloud_logging of this Settings.
        :type disable_cloud_logging: bool
        """

        self._disable_cloud_logging = disable_cloud_logging

    @property
    def name(self):
        """Gets the name of this Settings.

        Output only. The name of the resource.

        :return: The name of this Settings.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Settings.

        Output only. The name of the resource.

        :param name: The name of this Settings.
        :type name: str
        """

        self._name = name

    @property
    def preference_set(self):
        """Gets the preference_set of this Settings.

        The preference set used by default for a project.

        :return: The preference_set of this Settings.
        :rtype: str
        """
        return self._preference_set

    @preference_set.setter
    def preference_set(self, preference_set):
        """Sets the preference_set of this Settings.

        The preference set used by default for a project.

        :param preference_set: The preference_set of this Settings.
        :type preference_set: str
        """

        self._preference_set = preference_set
