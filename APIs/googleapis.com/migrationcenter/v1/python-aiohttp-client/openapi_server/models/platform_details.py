# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.aws_ec2_platform_details import AwsEc2PlatformDetails
from openapi_server.models.azure_vm_platform_details import AzureVmPlatformDetails
from openapi_server.models.generic_platform_details import GenericPlatformDetails
from openapi_server.models.physical_platform_details import PhysicalPlatformDetails
from openapi_server.models.vmware_platform_details import VmwarePlatformDetails
from openapi_server import util


class PlatformDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, aws_ec2_details: AwsEc2PlatformDetails=None, azure_vm_details: AzureVmPlatformDetails=None, generic_details: GenericPlatformDetails=None, physical_details: PhysicalPlatformDetails=None, vmware_details: VmwarePlatformDetails=None):
        """PlatformDetails - a model defined in OpenAPI

        :param aws_ec2_details: The aws_ec2_details of this PlatformDetails.
        :param azure_vm_details: The azure_vm_details of this PlatformDetails.
        :param generic_details: The generic_details of this PlatformDetails.
        :param physical_details: The physical_details of this PlatformDetails.
        :param vmware_details: The vmware_details of this PlatformDetails.
        """
        self.openapi_types = {
            'aws_ec2_details': AwsEc2PlatformDetails,
            'azure_vm_details': AzureVmPlatformDetails,
            'generic_details': GenericPlatformDetails,
            'physical_details': PhysicalPlatformDetails,
            'vmware_details': VmwarePlatformDetails
        }

        self.attribute_map = {
            'aws_ec2_details': 'awsEc2Details',
            'azure_vm_details': 'azureVmDetails',
            'generic_details': 'genericDetails',
            'physical_details': 'physicalDetails',
            'vmware_details': 'vmwareDetails'
        }

        self._aws_ec2_details = aws_ec2_details
        self._azure_vm_details = azure_vm_details
        self._generic_details = generic_details
        self._physical_details = physical_details
        self._vmware_details = vmware_details

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PlatformDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PlatformDetails of this PlatformDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def aws_ec2_details(self):
        """Gets the aws_ec2_details of this PlatformDetails.


        :return: The aws_ec2_details of this PlatformDetails.
        :rtype: AwsEc2PlatformDetails
        """
        return self._aws_ec2_details

    @aws_ec2_details.setter
    def aws_ec2_details(self, aws_ec2_details):
        """Sets the aws_ec2_details of this PlatformDetails.


        :param aws_ec2_details: The aws_ec2_details of this PlatformDetails.
        :type aws_ec2_details: AwsEc2PlatformDetails
        """

        self._aws_ec2_details = aws_ec2_details

    @property
    def azure_vm_details(self):
        """Gets the azure_vm_details of this PlatformDetails.


        :return: The azure_vm_details of this PlatformDetails.
        :rtype: AzureVmPlatformDetails
        """
        return self._azure_vm_details

    @azure_vm_details.setter
    def azure_vm_details(self, azure_vm_details):
        """Sets the azure_vm_details of this PlatformDetails.


        :param azure_vm_details: The azure_vm_details of this PlatformDetails.
        :type azure_vm_details: AzureVmPlatformDetails
        """

        self._azure_vm_details = azure_vm_details

    @property
    def generic_details(self):
        """Gets the generic_details of this PlatformDetails.


        :return: The generic_details of this PlatformDetails.
        :rtype: GenericPlatformDetails
        """
        return self._generic_details

    @generic_details.setter
    def generic_details(self, generic_details):
        """Sets the generic_details of this PlatformDetails.


        :param generic_details: The generic_details of this PlatformDetails.
        :type generic_details: GenericPlatformDetails
        """

        self._generic_details = generic_details

    @property
    def physical_details(self):
        """Gets the physical_details of this PlatformDetails.


        :return: The physical_details of this PlatformDetails.
        :rtype: PhysicalPlatformDetails
        """
        return self._physical_details

    @physical_details.setter
    def physical_details(self, physical_details):
        """Sets the physical_details of this PlatformDetails.


        :param physical_details: The physical_details of this PlatformDetails.
        :type physical_details: PhysicalPlatformDetails
        """

        self._physical_details = physical_details

    @property
    def vmware_details(self):
        """Gets the vmware_details of this PlatformDetails.


        :return: The vmware_details of this PlatformDetails.
        :rtype: VmwarePlatformDetails
        """
        return self._vmware_details

    @vmware_details.setter
    def vmware_details(self, vmware_details):
        """Sets the vmware_details of this PlatformDetails.


        :param vmware_details: The vmware_details of this PlatformDetails.
        :type vmware_details: VmwarePlatformDetails
        """

        self._vmware_details = vmware_details
