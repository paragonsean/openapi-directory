# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class VmwarePlatformDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, esx_version: str=None, osid: str=None, vcenter_folder: str=None, vcenter_uri: str=None, vcenter_version: str=None, vcenter_vm_id: str=None):
        """VmwarePlatformDetails - a model defined in OpenAPI

        :param esx_version: The esx_version of this VmwarePlatformDetails.
        :param osid: The osid of this VmwarePlatformDetails.
        :param vcenter_folder: The vcenter_folder of this VmwarePlatformDetails.
        :param vcenter_uri: The vcenter_uri of this VmwarePlatformDetails.
        :param vcenter_version: The vcenter_version of this VmwarePlatformDetails.
        :param vcenter_vm_id: The vcenter_vm_id of this VmwarePlatformDetails.
        """
        self.openapi_types = {
            'esx_version': str,
            'osid': str,
            'vcenter_folder': str,
            'vcenter_uri': str,
            'vcenter_version': str,
            'vcenter_vm_id': str
        }

        self.attribute_map = {
            'esx_version': 'esxVersion',
            'osid': 'osid',
            'vcenter_folder': 'vcenterFolder',
            'vcenter_uri': 'vcenterUri',
            'vcenter_version': 'vcenterVersion',
            'vcenter_vm_id': 'vcenterVmId'
        }

        self._esx_version = esx_version
        self._osid = osid
        self._vcenter_folder = vcenter_folder
        self._vcenter_uri = vcenter_uri
        self._vcenter_version = vcenter_version
        self._vcenter_vm_id = vcenter_vm_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VmwarePlatformDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VmwarePlatformDetails of this VmwarePlatformDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def esx_version(self):
        """Gets the esx_version of this VmwarePlatformDetails.

        ESX version.

        :return: The esx_version of this VmwarePlatformDetails.
        :rtype: str
        """
        return self._esx_version

    @esx_version.setter
    def esx_version(self, esx_version):
        """Sets the esx_version of this VmwarePlatformDetails.

        ESX version.

        :param esx_version: The esx_version of this VmwarePlatformDetails.
        :type esx_version: str
        """

        self._esx_version = esx_version

    @property
    def osid(self):
        """Gets the osid of this VmwarePlatformDetails.

        VMware os enum - https://vdc-repo.vmware.com/vmwb-repository/dcr-public/da47f910-60ac-438b-8b9b-6122f4d14524/16b7274a-bf8b-4b4c-a05e-746f2aa93c8c/doc/vim.vm.GuestOsDescriptor.GuestOsIdentifier.html.

        :return: The osid of this VmwarePlatformDetails.
        :rtype: str
        """
        return self._osid

    @osid.setter
    def osid(self, osid):
        """Sets the osid of this VmwarePlatformDetails.

        VMware os enum - https://vdc-repo.vmware.com/vmwb-repository/dcr-public/da47f910-60ac-438b-8b9b-6122f4d14524/16b7274a-bf8b-4b4c-a05e-746f2aa93c8c/doc/vim.vm.GuestOsDescriptor.GuestOsIdentifier.html.

        :param osid: The osid of this VmwarePlatformDetails.
        :type osid: str
        """

        self._osid = osid

    @property
    def vcenter_folder(self):
        """Gets the vcenter_folder of this VmwarePlatformDetails.

        Folder name in vCenter where asset resides.

        :return: The vcenter_folder of this VmwarePlatformDetails.
        :rtype: str
        """
        return self._vcenter_folder

    @vcenter_folder.setter
    def vcenter_folder(self, vcenter_folder):
        """Sets the vcenter_folder of this VmwarePlatformDetails.

        Folder name in vCenter where asset resides.

        :param vcenter_folder: The vcenter_folder of this VmwarePlatformDetails.
        :type vcenter_folder: str
        """

        self._vcenter_folder = vcenter_folder

    @property
    def vcenter_uri(self):
        """Gets the vcenter_uri of this VmwarePlatformDetails.

        vCenter URI used in collection.

        :return: The vcenter_uri of this VmwarePlatformDetails.
        :rtype: str
        """
        return self._vcenter_uri

    @vcenter_uri.setter
    def vcenter_uri(self, vcenter_uri):
        """Sets the vcenter_uri of this VmwarePlatformDetails.

        vCenter URI used in collection.

        :param vcenter_uri: The vcenter_uri of this VmwarePlatformDetails.
        :type vcenter_uri: str
        """

        self._vcenter_uri = vcenter_uri

    @property
    def vcenter_version(self):
        """Gets the vcenter_version of this VmwarePlatformDetails.

        vCenter version.

        :return: The vcenter_version of this VmwarePlatformDetails.
        :rtype: str
        """
        return self._vcenter_version

    @vcenter_version.setter
    def vcenter_version(self, vcenter_version):
        """Sets the vcenter_version of this VmwarePlatformDetails.

        vCenter version.

        :param vcenter_version: The vcenter_version of this VmwarePlatformDetails.
        :type vcenter_version: str
        """

        self._vcenter_version = vcenter_version

    @property
    def vcenter_vm_id(self):
        """Gets the vcenter_vm_id of this VmwarePlatformDetails.

        vCenter VM ID.

        :return: The vcenter_vm_id of this VmwarePlatformDetails.
        :rtype: str
        """
        return self._vcenter_vm_id

    @vcenter_vm_id.setter
    def vcenter_vm_id(self, vcenter_vm_id):
        """Sets the vcenter_vm_id of this VmwarePlatformDetails.

        vCenter VM ID.

        :param vcenter_vm_id: The vcenter_vm_id of this VmwarePlatformDetails.
        :type vcenter_vm_id: str
        """

        self._vcenter_vm_id = vcenter_vm_id
