# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.fstab_entry_list import FstabEntryList
from openapi_server.models.hosts_entry_list import HostsEntryList
from openapi_server.models.nfs_export_list import NfsExportList
from openapi_server import util


class GuestConfigDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, fstab: FstabEntryList=None, hosts: HostsEntryList=None, issue: str=None, nfs_exports: NfsExportList=None, selinux_mode: str=None):
        """GuestConfigDetails - a model defined in OpenAPI

        :param fstab: The fstab of this GuestConfigDetails.
        :param hosts: The hosts of this GuestConfigDetails.
        :param issue: The issue of this GuestConfigDetails.
        :param nfs_exports: The nfs_exports of this GuestConfigDetails.
        :param selinux_mode: The selinux_mode of this GuestConfigDetails.
        """
        self.openapi_types = {
            'fstab': FstabEntryList,
            'hosts': HostsEntryList,
            'issue': str,
            'nfs_exports': NfsExportList,
            'selinux_mode': str
        }

        self.attribute_map = {
            'fstab': 'fstab',
            'hosts': 'hosts',
            'issue': 'issue',
            'nfs_exports': 'nfsExports',
            'selinux_mode': 'selinuxMode'
        }

        self._fstab = fstab
        self._hosts = hosts
        self._issue = issue
        self._nfs_exports = nfs_exports
        self._selinux_mode = selinux_mode

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GuestConfigDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GuestConfigDetails of this GuestConfigDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def fstab(self):
        """Gets the fstab of this GuestConfigDetails.


        :return: The fstab of this GuestConfigDetails.
        :rtype: FstabEntryList
        """
        return self._fstab

    @fstab.setter
    def fstab(self, fstab):
        """Sets the fstab of this GuestConfigDetails.


        :param fstab: The fstab of this GuestConfigDetails.
        :type fstab: FstabEntryList
        """

        self._fstab = fstab

    @property
    def hosts(self):
        """Gets the hosts of this GuestConfigDetails.


        :return: The hosts of this GuestConfigDetails.
        :rtype: HostsEntryList
        """
        return self._hosts

    @hosts.setter
    def hosts(self, hosts):
        """Sets the hosts of this GuestConfigDetails.


        :param hosts: The hosts of this GuestConfigDetails.
        :type hosts: HostsEntryList
        """

        self._hosts = hosts

    @property
    def issue(self):
        """Gets the issue of this GuestConfigDetails.

        OS issue (typically /etc/issue in Linux).

        :return: The issue of this GuestConfigDetails.
        :rtype: str
        """
        return self._issue

    @issue.setter
    def issue(self, issue):
        """Sets the issue of this GuestConfigDetails.

        OS issue (typically /etc/issue in Linux).

        :param issue: The issue of this GuestConfigDetails.
        :type issue: str
        """

        self._issue = issue

    @property
    def nfs_exports(self):
        """Gets the nfs_exports of this GuestConfigDetails.


        :return: The nfs_exports of this GuestConfigDetails.
        :rtype: NfsExportList
        """
        return self._nfs_exports

    @nfs_exports.setter
    def nfs_exports(self, nfs_exports):
        """Sets the nfs_exports of this GuestConfigDetails.


        :param nfs_exports: The nfs_exports of this GuestConfigDetails.
        :type nfs_exports: NfsExportList
        """

        self._nfs_exports = nfs_exports

    @property
    def selinux_mode(self):
        """Gets the selinux_mode of this GuestConfigDetails.

        Security-Enhanced Linux (SELinux) mode.

        :return: The selinux_mode of this GuestConfigDetails.
        :rtype: str
        """
        return self._selinux_mode

    @selinux_mode.setter
    def selinux_mode(self, selinux_mode):
        """Sets the selinux_mode of this GuestConfigDetails.

        Security-Enhanced Linux (SELinux) mode.

        :param selinux_mode: The selinux_mode of this GuestConfigDetails.
        :type selinux_mode: str
        """
        allowed_values = ["SE_LINUX_MODE_UNSPECIFIED", "SE_LINUX_MODE_DISABLED", "SE_LINUX_MODE_PERMISSIVE", "SE_LINUX_MODE_ENFORCING"]  # noqa: E501
        if selinux_mode not in allowed_values:
            raise ValueError(
                "Invalid value for `selinux_mode` ({0}), must be one of {1}"
                .format(selinux_mode, allowed_values)
            )

        self._selinux_mode = selinux_mode
