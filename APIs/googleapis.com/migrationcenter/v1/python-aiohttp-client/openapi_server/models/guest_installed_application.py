# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GuestInstalledApplication(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, application_name: str=None, install_time: str=None, licenses: List[str]=None, path: str=None, vendor: str=None, version: str=None):
        """GuestInstalledApplication - a model defined in OpenAPI

        :param application_name: The application_name of this GuestInstalledApplication.
        :param install_time: The install_time of this GuestInstalledApplication.
        :param licenses: The licenses of this GuestInstalledApplication.
        :param path: The path of this GuestInstalledApplication.
        :param vendor: The vendor of this GuestInstalledApplication.
        :param version: The version of this GuestInstalledApplication.
        """
        self.openapi_types = {
            'application_name': str,
            'install_time': str,
            'licenses': List[str],
            'path': str,
            'vendor': str,
            'version': str
        }

        self.attribute_map = {
            'application_name': 'applicationName',
            'install_time': 'installTime',
            'licenses': 'licenses',
            'path': 'path',
            'vendor': 'vendor',
            'version': 'version'
        }

        self._application_name = application_name
        self._install_time = install_time
        self._licenses = licenses
        self._path = path
        self._vendor = vendor
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GuestInstalledApplication':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GuestInstalledApplication of this GuestInstalledApplication.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def application_name(self):
        """Gets the application_name of this GuestInstalledApplication.

        Installed application name.

        :return: The application_name of this GuestInstalledApplication.
        :rtype: str
        """
        return self._application_name

    @application_name.setter
    def application_name(self, application_name):
        """Sets the application_name of this GuestInstalledApplication.

        Installed application name.

        :param application_name: The application_name of this GuestInstalledApplication.
        :type application_name: str
        """

        self._application_name = application_name

    @property
    def install_time(self):
        """Gets the install_time of this GuestInstalledApplication.

        The time when the application was installed.

        :return: The install_time of this GuestInstalledApplication.
        :rtype: str
        """
        return self._install_time

    @install_time.setter
    def install_time(self, install_time):
        """Sets the install_time of this GuestInstalledApplication.

        The time when the application was installed.

        :param install_time: The install_time of this GuestInstalledApplication.
        :type install_time: str
        """

        self._install_time = install_time

    @property
    def licenses(self):
        """Gets the licenses of this GuestInstalledApplication.

        License strings associated with the installed application.

        :return: The licenses of this GuestInstalledApplication.
        :rtype: List[str]
        """
        return self._licenses

    @licenses.setter
    def licenses(self, licenses):
        """Sets the licenses of this GuestInstalledApplication.

        License strings associated with the installed application.

        :param licenses: The licenses of this GuestInstalledApplication.
        :type licenses: List[str]
        """

        self._licenses = licenses

    @property
    def path(self):
        """Gets the path of this GuestInstalledApplication.

        Source path.

        :return: The path of this GuestInstalledApplication.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this GuestInstalledApplication.

        Source path.

        :param path: The path of this GuestInstalledApplication.
        :type path: str
        """

        self._path = path

    @property
    def vendor(self):
        """Gets the vendor of this GuestInstalledApplication.

        Installed application vendor.

        :return: The vendor of this GuestInstalledApplication.
        :rtype: str
        """
        return self._vendor

    @vendor.setter
    def vendor(self, vendor):
        """Sets the vendor of this GuestInstalledApplication.

        Installed application vendor.

        :param vendor: The vendor of this GuestInstalledApplication.
        :type vendor: str
        """

        self._vendor = vendor

    @property
    def version(self):
        """Gets the version of this GuestInstalledApplication.

        Installed application version.

        :return: The version of this GuestInstalledApplication.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this GuestInstalledApplication.

        Installed application version.

        :param version: The version of this GuestInstalledApplication.
        :type version: str
        """

        self._version = version
