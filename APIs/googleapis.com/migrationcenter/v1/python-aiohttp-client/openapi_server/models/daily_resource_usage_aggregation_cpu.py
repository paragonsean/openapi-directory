# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.daily_resource_usage_aggregation_stats import DailyResourceUsageAggregationStats
from openapi_server import util


class DailyResourceUsageAggregationCPU(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, utilization_percentage: DailyResourceUsageAggregationStats=None):
        """DailyResourceUsageAggregationCPU - a model defined in OpenAPI

        :param utilization_percentage: The utilization_percentage of this DailyResourceUsageAggregationCPU.
        """
        self.openapi_types = {
            'utilization_percentage': DailyResourceUsageAggregationStats
        }

        self.attribute_map = {
            'utilization_percentage': 'utilizationPercentage'
        }

        self._utilization_percentage = utilization_percentage

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DailyResourceUsageAggregationCPU':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DailyResourceUsageAggregationCPU of this DailyResourceUsageAggregationCPU.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def utilization_percentage(self):
        """Gets the utilization_percentage of this DailyResourceUsageAggregationCPU.


        :return: The utilization_percentage of this DailyResourceUsageAggregationCPU.
        :rtype: DailyResourceUsageAggregationStats
        """
        return self._utilization_percentage

    @utilization_percentage.setter
    def utilization_percentage(self, utilization_percentage):
        """Sets the utilization_percentage of this DailyResourceUsageAggregationCPU.


        :param utilization_percentage: The utilization_percentage of this DailyResourceUsageAggregationCPU.
        :type utilization_percentage: DailyResourceUsageAggregationStats
        """

        self._utilization_percentage = utilization_percentage
