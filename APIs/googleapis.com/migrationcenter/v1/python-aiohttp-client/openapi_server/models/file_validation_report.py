# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.import_error import ImportError
from openapi_server.models.import_row_error import ImportRowError
from openapi_server import util


class FileValidationReport(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, file_errors: List[ImportError]=None, file_name: str=None, partial_report: bool=None, row_errors: List[ImportRowError]=None):
        """FileValidationReport - a model defined in OpenAPI

        :param file_errors: The file_errors of this FileValidationReport.
        :param file_name: The file_name of this FileValidationReport.
        :param partial_report: The partial_report of this FileValidationReport.
        :param row_errors: The row_errors of this FileValidationReport.
        """
        self.openapi_types = {
            'file_errors': List[ImportError],
            'file_name': str,
            'partial_report': bool,
            'row_errors': List[ImportRowError]
        }

        self.attribute_map = {
            'file_errors': 'fileErrors',
            'file_name': 'fileName',
            'partial_report': 'partialReport',
            'row_errors': 'rowErrors'
        }

        self._file_errors = file_errors
        self._file_name = file_name
        self._partial_report = partial_report
        self._row_errors = row_errors

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FileValidationReport':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FileValidationReport of this FileValidationReport.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def file_errors(self):
        """Gets the file_errors of this FileValidationReport.

        List of file level errors.

        :return: The file_errors of this FileValidationReport.
        :rtype: List[ImportError]
        """
        return self._file_errors

    @file_errors.setter
    def file_errors(self, file_errors):
        """Sets the file_errors of this FileValidationReport.

        List of file level errors.

        :param file_errors: The file_errors of this FileValidationReport.
        :type file_errors: List[ImportError]
        """

        self._file_errors = file_errors

    @property
    def file_name(self):
        """Gets the file_name of this FileValidationReport.

        The name of the file.

        :return: The file_name of this FileValidationReport.
        :rtype: str
        """
        return self._file_name

    @file_name.setter
    def file_name(self, file_name):
        """Sets the file_name of this FileValidationReport.

        The name of the file.

        :param file_name: The file_name of this FileValidationReport.
        :type file_name: str
        """

        self._file_name = file_name

    @property
    def partial_report(self):
        """Gets the partial_report of this FileValidationReport.

        Flag indicating that processing was aborted due to maximum number of errors.

        :return: The partial_report of this FileValidationReport.
        :rtype: bool
        """
        return self._partial_report

    @partial_report.setter
    def partial_report(self, partial_report):
        """Sets the partial_report of this FileValidationReport.

        Flag indicating that processing was aborted due to maximum number of errors.

        :param partial_report: The partial_report of this FileValidationReport.
        :type partial_report: bool
        """

        self._partial_report = partial_report

    @property
    def row_errors(self):
        """Gets the row_errors of this FileValidationReport.

        Partial list of rows that encountered validation error.

        :return: The row_errors of this FileValidationReport.
        :rtype: List[ImportRowError]
        """
        return self._row_errors

    @row_errors.setter
    def row_errors(self, row_errors):
        """Sets the row_errors of this FileValidationReport.

        Partial list of rows that encountered validation error.

        :param row_errors: The row_errors of this FileValidationReport.
        :type row_errors: List[ImportRowError]
        """

        self._row_errors = row_errors
