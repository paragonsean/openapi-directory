# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ReportSummaryUtilizationChartData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, free: str=None, used: str=None):
        """ReportSummaryUtilizationChartData - a model defined in OpenAPI

        :param free: The free of this ReportSummaryUtilizationChartData.
        :param used: The used of this ReportSummaryUtilizationChartData.
        """
        self.openapi_types = {
            'free': str,
            'used': str
        }

        self.attribute_map = {
            'free': 'free',
            'used': 'used'
        }

        self._free = free
        self._used = used

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReportSummaryUtilizationChartData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReportSummaryUtilizationChartData of this ReportSummaryUtilizationChartData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def free(self):
        """Gets the free of this ReportSummaryUtilizationChartData.

        Aggregate value which falls into the \"Free\" bucket.

        :return: The free of this ReportSummaryUtilizationChartData.
        :rtype: str
        """
        return self._free

    @free.setter
    def free(self, free):
        """Sets the free of this ReportSummaryUtilizationChartData.

        Aggregate value which falls into the \"Free\" bucket.

        :param free: The free of this ReportSummaryUtilizationChartData.
        :type free: str
        """

        self._free = free

    @property
    def used(self):
        """Gets the used of this ReportSummaryUtilizationChartData.

        Aggregate value which falls into the \"Used\" bucket.

        :return: The used of this ReportSummaryUtilizationChartData.
        :rtype: str
        """
        return self._used

    @used.setter
    def used(self, used):
        """Sets the used of this ReportSummaryUtilizationChartData.

        Aggregate value which falls into the \"Used\" bucket.

        :param used: The used of this ReportSummaryUtilizationChartData.
        :type used: str
        """

        self._used = used
