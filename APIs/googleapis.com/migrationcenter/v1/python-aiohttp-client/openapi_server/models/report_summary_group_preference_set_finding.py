# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.money import Money
from openapi_server.models.report_summary_compute_engine_finding import ReportSummaryComputeEngineFinding
from openapi_server.models.report_summary_sole_tenant_finding import ReportSummarySoleTenantFinding
from openapi_server.models.report_summary_vmware_engine_finding import ReportSummaryVmwareEngineFinding
from openapi_server.models.virtual_machine_preferences import VirtualMachinePreferences
from openapi_server import util


class ReportSummaryGroupPreferenceSetFinding(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, compute_engine_finding: ReportSummaryComputeEngineFinding=None, description: str=None, display_name: str=None, machine_preferences: VirtualMachinePreferences=None, monthly_cost_compute: Money=None, monthly_cost_network_egress: Money=None, monthly_cost_os_license: Money=None, monthly_cost_other: Money=None, monthly_cost_storage: Money=None, monthly_cost_total: Money=None, sole_tenant_finding: ReportSummarySoleTenantFinding=None, vmware_engine_finding: ReportSummaryVmwareEngineFinding=None):
        """ReportSummaryGroupPreferenceSetFinding - a model defined in OpenAPI

        :param compute_engine_finding: The compute_engine_finding of this ReportSummaryGroupPreferenceSetFinding.
        :param description: The description of this ReportSummaryGroupPreferenceSetFinding.
        :param display_name: The display_name of this ReportSummaryGroupPreferenceSetFinding.
        :param machine_preferences: The machine_preferences of this ReportSummaryGroupPreferenceSetFinding.
        :param monthly_cost_compute: The monthly_cost_compute of this ReportSummaryGroupPreferenceSetFinding.
        :param monthly_cost_network_egress: The monthly_cost_network_egress of this ReportSummaryGroupPreferenceSetFinding.
        :param monthly_cost_os_license: The monthly_cost_os_license of this ReportSummaryGroupPreferenceSetFinding.
        :param monthly_cost_other: The monthly_cost_other of this ReportSummaryGroupPreferenceSetFinding.
        :param monthly_cost_storage: The monthly_cost_storage of this ReportSummaryGroupPreferenceSetFinding.
        :param monthly_cost_total: The monthly_cost_total of this ReportSummaryGroupPreferenceSetFinding.
        :param sole_tenant_finding: The sole_tenant_finding of this ReportSummaryGroupPreferenceSetFinding.
        :param vmware_engine_finding: The vmware_engine_finding of this ReportSummaryGroupPreferenceSetFinding.
        """
        self.openapi_types = {
            'compute_engine_finding': ReportSummaryComputeEngineFinding,
            'description': str,
            'display_name': str,
            'machine_preferences': VirtualMachinePreferences,
            'monthly_cost_compute': Money,
            'monthly_cost_network_egress': Money,
            'monthly_cost_os_license': Money,
            'monthly_cost_other': Money,
            'monthly_cost_storage': Money,
            'monthly_cost_total': Money,
            'sole_tenant_finding': ReportSummarySoleTenantFinding,
            'vmware_engine_finding': ReportSummaryVmwareEngineFinding
        }

        self.attribute_map = {
            'compute_engine_finding': 'computeEngineFinding',
            'description': 'description',
            'display_name': 'displayName',
            'machine_preferences': 'machinePreferences',
            'monthly_cost_compute': 'monthlyCostCompute',
            'monthly_cost_network_egress': 'monthlyCostNetworkEgress',
            'monthly_cost_os_license': 'monthlyCostOsLicense',
            'monthly_cost_other': 'monthlyCostOther',
            'monthly_cost_storage': 'monthlyCostStorage',
            'monthly_cost_total': 'monthlyCostTotal',
            'sole_tenant_finding': 'soleTenantFinding',
            'vmware_engine_finding': 'vmwareEngineFinding'
        }

        self._compute_engine_finding = compute_engine_finding
        self._description = description
        self._display_name = display_name
        self._machine_preferences = machine_preferences
        self._monthly_cost_compute = monthly_cost_compute
        self._monthly_cost_network_egress = monthly_cost_network_egress
        self._monthly_cost_os_license = monthly_cost_os_license
        self._monthly_cost_other = monthly_cost_other
        self._monthly_cost_storage = monthly_cost_storage
        self._monthly_cost_total = monthly_cost_total
        self._sole_tenant_finding = sole_tenant_finding
        self._vmware_engine_finding = vmware_engine_finding

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReportSummaryGroupPreferenceSetFinding':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReportSummaryGroupPreferenceSetFinding of this ReportSummaryGroupPreferenceSetFinding.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def compute_engine_finding(self):
        """Gets the compute_engine_finding of this ReportSummaryGroupPreferenceSetFinding.


        :return: The compute_engine_finding of this ReportSummaryGroupPreferenceSetFinding.
        :rtype: ReportSummaryComputeEngineFinding
        """
        return self._compute_engine_finding

    @compute_engine_finding.setter
    def compute_engine_finding(self, compute_engine_finding):
        """Sets the compute_engine_finding of this ReportSummaryGroupPreferenceSetFinding.


        :param compute_engine_finding: The compute_engine_finding of this ReportSummaryGroupPreferenceSetFinding.
        :type compute_engine_finding: ReportSummaryComputeEngineFinding
        """

        self._compute_engine_finding = compute_engine_finding

    @property
    def description(self):
        """Gets the description of this ReportSummaryGroupPreferenceSetFinding.

        Description for the Preference Set.

        :return: The description of this ReportSummaryGroupPreferenceSetFinding.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ReportSummaryGroupPreferenceSetFinding.

        Description for the Preference Set.

        :param description: The description of this ReportSummaryGroupPreferenceSetFinding.
        :type description: str
        """

        self._description = description

    @property
    def display_name(self):
        """Gets the display_name of this ReportSummaryGroupPreferenceSetFinding.

        Display Name of the Preference Set

        :return: The display_name of this ReportSummaryGroupPreferenceSetFinding.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this ReportSummaryGroupPreferenceSetFinding.

        Display Name of the Preference Set

        :param display_name: The display_name of this ReportSummaryGroupPreferenceSetFinding.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def machine_preferences(self):
        """Gets the machine_preferences of this ReportSummaryGroupPreferenceSetFinding.


        :return: The machine_preferences of this ReportSummaryGroupPreferenceSetFinding.
        :rtype: VirtualMachinePreferences
        """
        return self._machine_preferences

    @machine_preferences.setter
    def machine_preferences(self, machine_preferences):
        """Sets the machine_preferences of this ReportSummaryGroupPreferenceSetFinding.


        :param machine_preferences: The machine_preferences of this ReportSummaryGroupPreferenceSetFinding.
        :type machine_preferences: VirtualMachinePreferences
        """

        self._machine_preferences = machine_preferences

    @property
    def monthly_cost_compute(self):
        """Gets the monthly_cost_compute of this ReportSummaryGroupPreferenceSetFinding.


        :return: The monthly_cost_compute of this ReportSummaryGroupPreferenceSetFinding.
        :rtype: Money
        """
        return self._monthly_cost_compute

    @monthly_cost_compute.setter
    def monthly_cost_compute(self, monthly_cost_compute):
        """Sets the monthly_cost_compute of this ReportSummaryGroupPreferenceSetFinding.


        :param monthly_cost_compute: The monthly_cost_compute of this ReportSummaryGroupPreferenceSetFinding.
        :type monthly_cost_compute: Money
        """

        self._monthly_cost_compute = monthly_cost_compute

    @property
    def monthly_cost_network_egress(self):
        """Gets the monthly_cost_network_egress of this ReportSummaryGroupPreferenceSetFinding.


        :return: The monthly_cost_network_egress of this ReportSummaryGroupPreferenceSetFinding.
        :rtype: Money
        """
        return self._monthly_cost_network_egress

    @monthly_cost_network_egress.setter
    def monthly_cost_network_egress(self, monthly_cost_network_egress):
        """Sets the monthly_cost_network_egress of this ReportSummaryGroupPreferenceSetFinding.


        :param monthly_cost_network_egress: The monthly_cost_network_egress of this ReportSummaryGroupPreferenceSetFinding.
        :type monthly_cost_network_egress: Money
        """

        self._monthly_cost_network_egress = monthly_cost_network_egress

    @property
    def monthly_cost_os_license(self):
        """Gets the monthly_cost_os_license of this ReportSummaryGroupPreferenceSetFinding.


        :return: The monthly_cost_os_license of this ReportSummaryGroupPreferenceSetFinding.
        :rtype: Money
        """
        return self._monthly_cost_os_license

    @monthly_cost_os_license.setter
    def monthly_cost_os_license(self, monthly_cost_os_license):
        """Sets the monthly_cost_os_license of this ReportSummaryGroupPreferenceSetFinding.


        :param monthly_cost_os_license: The monthly_cost_os_license of this ReportSummaryGroupPreferenceSetFinding.
        :type monthly_cost_os_license: Money
        """

        self._monthly_cost_os_license = monthly_cost_os_license

    @property
    def monthly_cost_other(self):
        """Gets the monthly_cost_other of this ReportSummaryGroupPreferenceSetFinding.


        :return: The monthly_cost_other of this ReportSummaryGroupPreferenceSetFinding.
        :rtype: Money
        """
        return self._monthly_cost_other

    @monthly_cost_other.setter
    def monthly_cost_other(self, monthly_cost_other):
        """Sets the monthly_cost_other of this ReportSummaryGroupPreferenceSetFinding.


        :param monthly_cost_other: The monthly_cost_other of this ReportSummaryGroupPreferenceSetFinding.
        :type monthly_cost_other: Money
        """

        self._monthly_cost_other = monthly_cost_other

    @property
    def monthly_cost_storage(self):
        """Gets the monthly_cost_storage of this ReportSummaryGroupPreferenceSetFinding.


        :return: The monthly_cost_storage of this ReportSummaryGroupPreferenceSetFinding.
        :rtype: Money
        """
        return self._monthly_cost_storage

    @monthly_cost_storage.setter
    def monthly_cost_storage(self, monthly_cost_storage):
        """Sets the monthly_cost_storage of this ReportSummaryGroupPreferenceSetFinding.


        :param monthly_cost_storage: The monthly_cost_storage of this ReportSummaryGroupPreferenceSetFinding.
        :type monthly_cost_storage: Money
        """

        self._monthly_cost_storage = monthly_cost_storage

    @property
    def monthly_cost_total(self):
        """Gets the monthly_cost_total of this ReportSummaryGroupPreferenceSetFinding.


        :return: The monthly_cost_total of this ReportSummaryGroupPreferenceSetFinding.
        :rtype: Money
        """
        return self._monthly_cost_total

    @monthly_cost_total.setter
    def monthly_cost_total(self, monthly_cost_total):
        """Sets the monthly_cost_total of this ReportSummaryGroupPreferenceSetFinding.


        :param monthly_cost_total: The monthly_cost_total of this ReportSummaryGroupPreferenceSetFinding.
        :type monthly_cost_total: Money
        """

        self._monthly_cost_total = monthly_cost_total

    @property
    def sole_tenant_finding(self):
        """Gets the sole_tenant_finding of this ReportSummaryGroupPreferenceSetFinding.


        :return: The sole_tenant_finding of this ReportSummaryGroupPreferenceSetFinding.
        :rtype: ReportSummarySoleTenantFinding
        """
        return self._sole_tenant_finding

    @sole_tenant_finding.setter
    def sole_tenant_finding(self, sole_tenant_finding):
        """Sets the sole_tenant_finding of this ReportSummaryGroupPreferenceSetFinding.


        :param sole_tenant_finding: The sole_tenant_finding of this ReportSummaryGroupPreferenceSetFinding.
        :type sole_tenant_finding: ReportSummarySoleTenantFinding
        """

        self._sole_tenant_finding = sole_tenant_finding

    @property
    def vmware_engine_finding(self):
        """Gets the vmware_engine_finding of this ReportSummaryGroupPreferenceSetFinding.


        :return: The vmware_engine_finding of this ReportSummaryGroupPreferenceSetFinding.
        :rtype: ReportSummaryVmwareEngineFinding
        """
        return self._vmware_engine_finding

    @vmware_engine_finding.setter
    def vmware_engine_finding(self, vmware_engine_finding):
        """Sets the vmware_engine_finding of this ReportSummaryGroupPreferenceSetFinding.


        :param vmware_engine_finding: The vmware_engine_finding of this ReportSummaryGroupPreferenceSetFinding.
        :type vmware_engine_finding: ReportSummaryVmwareEngineFinding
        """

        self._vmware_engine_finding = vmware_engine_finding
