# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.daily_resource_usage_aggregation_stats import DailyResourceUsageAggregationStats
from openapi_server import util


class DailyResourceUsageAggregationNetwork(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, egress_bps: DailyResourceUsageAggregationStats=None, ingress_bps: DailyResourceUsageAggregationStats=None):
        """DailyResourceUsageAggregationNetwork - a model defined in OpenAPI

        :param egress_bps: The egress_bps of this DailyResourceUsageAggregationNetwork.
        :param ingress_bps: The ingress_bps of this DailyResourceUsageAggregationNetwork.
        """
        self.openapi_types = {
            'egress_bps': DailyResourceUsageAggregationStats,
            'ingress_bps': DailyResourceUsageAggregationStats
        }

        self.attribute_map = {
            'egress_bps': 'egressBps',
            'ingress_bps': 'ingressBps'
        }

        self._egress_bps = egress_bps
        self._ingress_bps = ingress_bps

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DailyResourceUsageAggregationNetwork':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DailyResourceUsageAggregationNetwork of this DailyResourceUsageAggregationNetwork.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def egress_bps(self):
        """Gets the egress_bps of this DailyResourceUsageAggregationNetwork.


        :return: The egress_bps of this DailyResourceUsageAggregationNetwork.
        :rtype: DailyResourceUsageAggregationStats
        """
        return self._egress_bps

    @egress_bps.setter
    def egress_bps(self, egress_bps):
        """Sets the egress_bps of this DailyResourceUsageAggregationNetwork.


        :param egress_bps: The egress_bps of this DailyResourceUsageAggregationNetwork.
        :type egress_bps: DailyResourceUsageAggregationStats
        """

        self._egress_bps = egress_bps

    @property
    def ingress_bps(self):
        """Gets the ingress_bps of this DailyResourceUsageAggregationNetwork.


        :return: The ingress_bps of this DailyResourceUsageAggregationNetwork.
        :rtype: DailyResourceUsageAggregationStats
        """
        return self._ingress_bps

    @ingress_bps.setter
    def ingress_bps(self, ingress_bps):
        """Sets the ingress_bps of this DailyResourceUsageAggregationNetwork.


        :param ingress_bps: The ingress_bps of this DailyResourceUsageAggregationNetwork.
        :type ingress_bps: DailyResourceUsageAggregationStats
        """

        self._ingress_bps = ingress_bps
