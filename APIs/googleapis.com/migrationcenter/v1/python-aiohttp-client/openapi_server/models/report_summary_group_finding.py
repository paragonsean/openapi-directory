# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.report_summary_asset_aggregate_stats import ReportSummaryAssetAggregateStats
from openapi_server.models.report_summary_group_preference_set_finding import ReportSummaryGroupPreferenceSetFinding
from openapi_server import util


class ReportSummaryGroupFinding(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, asset_aggregate_stats: ReportSummaryAssetAggregateStats=None, description: str=None, display_name: str=None, overlapping_asset_count: str=None, preference_set_findings: List[ReportSummaryGroupPreferenceSetFinding]=None):
        """ReportSummaryGroupFinding - a model defined in OpenAPI

        :param asset_aggregate_stats: The asset_aggregate_stats of this ReportSummaryGroupFinding.
        :param description: The description of this ReportSummaryGroupFinding.
        :param display_name: The display_name of this ReportSummaryGroupFinding.
        :param overlapping_asset_count: The overlapping_asset_count of this ReportSummaryGroupFinding.
        :param preference_set_findings: The preference_set_findings of this ReportSummaryGroupFinding.
        """
        self.openapi_types = {
            'asset_aggregate_stats': ReportSummaryAssetAggregateStats,
            'description': str,
            'display_name': str,
            'overlapping_asset_count': str,
            'preference_set_findings': List[ReportSummaryGroupPreferenceSetFinding]
        }

        self.attribute_map = {
            'asset_aggregate_stats': 'assetAggregateStats',
            'description': 'description',
            'display_name': 'displayName',
            'overlapping_asset_count': 'overlappingAssetCount',
            'preference_set_findings': 'preferenceSetFindings'
        }

        self._asset_aggregate_stats = asset_aggregate_stats
        self._description = description
        self._display_name = display_name
        self._overlapping_asset_count = overlapping_asset_count
        self._preference_set_findings = preference_set_findings

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReportSummaryGroupFinding':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReportSummaryGroupFinding of this ReportSummaryGroupFinding.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def asset_aggregate_stats(self):
        """Gets the asset_aggregate_stats of this ReportSummaryGroupFinding.


        :return: The asset_aggregate_stats of this ReportSummaryGroupFinding.
        :rtype: ReportSummaryAssetAggregateStats
        """
        return self._asset_aggregate_stats

    @asset_aggregate_stats.setter
    def asset_aggregate_stats(self, asset_aggregate_stats):
        """Sets the asset_aggregate_stats of this ReportSummaryGroupFinding.


        :param asset_aggregate_stats: The asset_aggregate_stats of this ReportSummaryGroupFinding.
        :type asset_aggregate_stats: ReportSummaryAssetAggregateStats
        """

        self._asset_aggregate_stats = asset_aggregate_stats

    @property
    def description(self):
        """Gets the description of this ReportSummaryGroupFinding.

        Description for the Group.

        :return: The description of this ReportSummaryGroupFinding.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ReportSummaryGroupFinding.

        Description for the Group.

        :param description: The description of this ReportSummaryGroupFinding.
        :type description: str
        """

        self._description = description

    @property
    def display_name(self):
        """Gets the display_name of this ReportSummaryGroupFinding.

        Display Name for the Group.

        :return: The display_name of this ReportSummaryGroupFinding.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this ReportSummaryGroupFinding.

        Display Name for the Group.

        :param display_name: The display_name of this ReportSummaryGroupFinding.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def overlapping_asset_count(self):
        """Gets the overlapping_asset_count of this ReportSummaryGroupFinding.

        This field is deprecated, do not rely on it having a value.

        :return: The overlapping_asset_count of this ReportSummaryGroupFinding.
        :rtype: str
        """
        return self._overlapping_asset_count

    @overlapping_asset_count.setter
    def overlapping_asset_count(self, overlapping_asset_count):
        """Sets the overlapping_asset_count of this ReportSummaryGroupFinding.

        This field is deprecated, do not rely on it having a value.

        :param overlapping_asset_count: The overlapping_asset_count of this ReportSummaryGroupFinding.
        :type overlapping_asset_count: str
        """

        self._overlapping_asset_count = overlapping_asset_count

    @property
    def preference_set_findings(self):
        """Gets the preference_set_findings of this ReportSummaryGroupFinding.

        Findings for each of the PreferenceSets for this group.

        :return: The preference_set_findings of this ReportSummaryGroupFinding.
        :rtype: List[ReportSummaryGroupPreferenceSetFinding]
        """
        return self._preference_set_findings

    @preference_set_findings.setter
    def preference_set_findings(self, preference_set_findings):
        """Sets the preference_set_findings of this ReportSummaryGroupFinding.

        Findings for each of the PreferenceSets for this group.

        :param preference_set_findings: The preference_set_findings of this ReportSummaryGroupFinding.
        :type preference_set_findings: List[ReportSummaryGroupPreferenceSetFinding]
        """

        self._preference_set_findings = preference_set_findings
