# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class HostsEntry(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, host_names: List[str]=None, ip: str=None):
        """HostsEntry - a model defined in OpenAPI

        :param host_names: The host_names of this HostsEntry.
        :param ip: The ip of this HostsEntry.
        """
        self.openapi_types = {
            'host_names': List[str],
            'ip': str
        }

        self.attribute_map = {
            'host_names': 'hostNames',
            'ip': 'ip'
        }

        self._host_names = host_names
        self._ip = ip

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HostsEntry':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HostsEntry of this HostsEntry.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def host_names(self):
        """Gets the host_names of this HostsEntry.

        List of host names / aliases.

        :return: The host_names of this HostsEntry.
        :rtype: List[str]
        """
        return self._host_names

    @host_names.setter
    def host_names(self, host_names):
        """Sets the host_names of this HostsEntry.

        List of host names / aliases.

        :param host_names: The host_names of this HostsEntry.
        :type host_names: List[str]
        """

        self._host_names = host_names

    @property
    def ip(self):
        """Gets the ip of this HostsEntry.

        IP (raw, IPv4/6 agnostic).

        :return: The ip of this HostsEntry.
        :rtype: str
        """
        return self._ip

    @ip.setter
    def ip(self, ip):
        """Sets the ip of this HostsEntry.

        IP (raw, IPv4/6 agnostic).

        :param ip: The ip of this HostsEntry.
        :type ip: str
        """

        self._ip = ip
