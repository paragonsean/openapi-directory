# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.compute_engine_shape_descriptor import ComputeEngineShapeDescriptor
from openapi_server import util


class ComputeEngineMigrationTarget(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, shape: ComputeEngineShapeDescriptor=None):
        """ComputeEngineMigrationTarget - a model defined in OpenAPI

        :param shape: The shape of this ComputeEngineMigrationTarget.
        """
        self.openapi_types = {
            'shape': ComputeEngineShapeDescriptor
        }

        self.attribute_map = {
            'shape': 'shape'
        }

        self._shape = shape

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ComputeEngineMigrationTarget':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ComputeEngineMigrationTarget of this ComputeEngineMigrationTarget.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def shape(self):
        """Gets the shape of this ComputeEngineMigrationTarget.


        :return: The shape of this ComputeEngineMigrationTarget.
        :rtype: ComputeEngineShapeDescriptor
        """
        return self._shape

    @shape.setter
    def shape(self, shape):
        """Sets the shape of this ComputeEngineMigrationTarget.


        :param shape: The shape of this ComputeEngineMigrationTarget.
        :type shape: ComputeEngineShapeDescriptor
        """

        self._shape = shape
