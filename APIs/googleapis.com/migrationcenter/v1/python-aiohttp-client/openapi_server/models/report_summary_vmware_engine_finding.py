# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.report_summary_vmware_node_allocation import ReportSummaryVmwareNodeAllocation
from openapi_server import util


class ReportSummaryVmwareEngineFinding(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, allocated_asset_count: str=None, allocated_regions: List[str]=None, node_allocations: List[ReportSummaryVmwareNodeAllocation]=None):
        """ReportSummaryVmwareEngineFinding - a model defined in OpenAPI

        :param allocated_asset_count: The allocated_asset_count of this ReportSummaryVmwareEngineFinding.
        :param allocated_regions: The allocated_regions of this ReportSummaryVmwareEngineFinding.
        :param node_allocations: The node_allocations of this ReportSummaryVmwareEngineFinding.
        """
        self.openapi_types = {
            'allocated_asset_count': str,
            'allocated_regions': List[str],
            'node_allocations': List[ReportSummaryVmwareNodeAllocation]
        }

        self.attribute_map = {
            'allocated_asset_count': 'allocatedAssetCount',
            'allocated_regions': 'allocatedRegions',
            'node_allocations': 'nodeAllocations'
        }

        self._allocated_asset_count = allocated_asset_count
        self._allocated_regions = allocated_regions
        self._node_allocations = node_allocations

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReportSummaryVmwareEngineFinding':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReportSummaryVmwareEngineFinding of this ReportSummaryVmwareEngineFinding.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allocated_asset_count(self):
        """Gets the allocated_asset_count of this ReportSummaryVmwareEngineFinding.

        Count of assets which are allocated

        :return: The allocated_asset_count of this ReportSummaryVmwareEngineFinding.
        :rtype: str
        """
        return self._allocated_asset_count

    @allocated_asset_count.setter
    def allocated_asset_count(self, allocated_asset_count):
        """Sets the allocated_asset_count of this ReportSummaryVmwareEngineFinding.

        Count of assets which are allocated

        :param allocated_asset_count: The allocated_asset_count of this ReportSummaryVmwareEngineFinding.
        :type allocated_asset_count: str
        """

        self._allocated_asset_count = allocated_asset_count

    @property
    def allocated_regions(self):
        """Gets the allocated_regions of this ReportSummaryVmwareEngineFinding.

        Set of regions in which the assets were allocated

        :return: The allocated_regions of this ReportSummaryVmwareEngineFinding.
        :rtype: List[str]
        """
        return self._allocated_regions

    @allocated_regions.setter
    def allocated_regions(self, allocated_regions):
        """Sets the allocated_regions of this ReportSummaryVmwareEngineFinding.

        Set of regions in which the assets were allocated

        :param allocated_regions: The allocated_regions of this ReportSummaryVmwareEngineFinding.
        :type allocated_regions: List[str]
        """

        self._allocated_regions = allocated_regions

    @property
    def node_allocations(self):
        """Gets the node_allocations of this ReportSummaryVmwareEngineFinding.

        Set of per-nodetype allocation records

        :return: The node_allocations of this ReportSummaryVmwareEngineFinding.
        :rtype: List[ReportSummaryVmwareNodeAllocation]
        """
        return self._node_allocations

    @node_allocations.setter
    def node_allocations(self, node_allocations):
        """Sets the node_allocations of this ReportSummaryVmwareEngineFinding.

        Set of per-nodetype allocation records

        :param node_allocations: The node_allocations of this ReportSummaryVmwareEngineFinding.
        :type node_allocations: List[ReportSummaryVmwareNodeAllocation]
        """

        self._node_allocations = node_allocations
