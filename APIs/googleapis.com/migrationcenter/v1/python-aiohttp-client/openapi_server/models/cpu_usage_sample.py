# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CpuUsageSample(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, utilized_percentage: float=None):
        """CpuUsageSample - a model defined in OpenAPI

        :param utilized_percentage: The utilized_percentage of this CpuUsageSample.
        """
        self.openapi_types = {
            'utilized_percentage': float
        }

        self.attribute_map = {
            'utilized_percentage': 'utilizedPercentage'
        }

        self._utilized_percentage = utilized_percentage

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CpuUsageSample':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CpuUsageSample of this CpuUsageSample.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def utilized_percentage(self):
        """Gets the utilized_percentage of this CpuUsageSample.

        Percentage of total CPU capacity utilized. Must be in the interval [0, 100]. On most systems can be calculated using 100 - idle percentage.

        :return: The utilized_percentage of this CpuUsageSample.
        :rtype: float
        """
        return self._utilized_percentage

    @utilized_percentage.setter
    def utilized_percentage(self, utilized_percentage):
        """Sets the utilized_percentage of this CpuUsageSample.

        Percentage of total CPU capacity utilized. Must be in the interval [0, 100]. On most systems can be calculated using 100 - idle percentage.

        :param utilized_percentage: The utilized_percentage of this CpuUsageSample.
        :type utilized_percentage: float
        """

        self._utilized_percentage = utilized_percentage
