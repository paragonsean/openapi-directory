# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.machine_series import MachineSeries
from openapi_server import util


class ReportSummaryMachineSeriesAllocation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, allocated_asset_count: str=None, machine_series: MachineSeries=None):
        """ReportSummaryMachineSeriesAllocation - a model defined in OpenAPI

        :param allocated_asset_count: The allocated_asset_count of this ReportSummaryMachineSeriesAllocation.
        :param machine_series: The machine_series of this ReportSummaryMachineSeriesAllocation.
        """
        self.openapi_types = {
            'allocated_asset_count': str,
            'machine_series': MachineSeries
        }

        self.attribute_map = {
            'allocated_asset_count': 'allocatedAssetCount',
            'machine_series': 'machineSeries'
        }

        self._allocated_asset_count = allocated_asset_count
        self._machine_series = machine_series

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReportSummaryMachineSeriesAllocation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReportSummaryMachineSeriesAllocation of this ReportSummaryMachineSeriesAllocation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allocated_asset_count(self):
        """Gets the allocated_asset_count of this ReportSummaryMachineSeriesAllocation.

        Count of assets allocated to this machine series.

        :return: The allocated_asset_count of this ReportSummaryMachineSeriesAllocation.
        :rtype: str
        """
        return self._allocated_asset_count

    @allocated_asset_count.setter
    def allocated_asset_count(self, allocated_asset_count):
        """Sets the allocated_asset_count of this ReportSummaryMachineSeriesAllocation.

        Count of assets allocated to this machine series.

        :param allocated_asset_count: The allocated_asset_count of this ReportSummaryMachineSeriesAllocation.
        :type allocated_asset_count: str
        """

        self._allocated_asset_count = allocated_asset_count

    @property
    def machine_series(self):
        """Gets the machine_series of this ReportSummaryMachineSeriesAllocation.


        :return: The machine_series of this ReportSummaryMachineSeriesAllocation.
        :rtype: MachineSeries
        """
        return self._machine_series

    @machine_series.setter
    def machine_series(self, machine_series):
        """Sets the machine_series of this ReportSummaryMachineSeriesAllocation.


        :param machine_series: The machine_series of this ReportSummaryMachineSeriesAllocation.
        :type machine_series: MachineSeries
        """

        self._machine_series = machine_series
