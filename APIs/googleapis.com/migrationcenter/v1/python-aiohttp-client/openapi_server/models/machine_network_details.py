# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.network_adapter_list import NetworkAdapterList
from openapi_server import util


class MachineNetworkDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, adapters: NetworkAdapterList=None, primary_ip_address: str=None, primary_mac_address: str=None, public_ip_address: str=None):
        """MachineNetworkDetails - a model defined in OpenAPI

        :param adapters: The adapters of this MachineNetworkDetails.
        :param primary_ip_address: The primary_ip_address of this MachineNetworkDetails.
        :param primary_mac_address: The primary_mac_address of this MachineNetworkDetails.
        :param public_ip_address: The public_ip_address of this MachineNetworkDetails.
        """
        self.openapi_types = {
            'adapters': NetworkAdapterList,
            'primary_ip_address': str,
            'primary_mac_address': str,
            'public_ip_address': str
        }

        self.attribute_map = {
            'adapters': 'adapters',
            'primary_ip_address': 'primaryIpAddress',
            'primary_mac_address': 'primaryMacAddress',
            'public_ip_address': 'publicIpAddress'
        }

        self._adapters = adapters
        self._primary_ip_address = primary_ip_address
        self._primary_mac_address = primary_mac_address
        self._public_ip_address = public_ip_address

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MachineNetworkDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MachineNetworkDetails of this MachineNetworkDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def adapters(self):
        """Gets the adapters of this MachineNetworkDetails.


        :return: The adapters of this MachineNetworkDetails.
        :rtype: NetworkAdapterList
        """
        return self._adapters

    @adapters.setter
    def adapters(self, adapters):
        """Sets the adapters of this MachineNetworkDetails.


        :param adapters: The adapters of this MachineNetworkDetails.
        :type adapters: NetworkAdapterList
        """

        self._adapters = adapters

    @property
    def primary_ip_address(self):
        """Gets the primary_ip_address of this MachineNetworkDetails.

        The primary IP address of the machine.

        :return: The primary_ip_address of this MachineNetworkDetails.
        :rtype: str
        """
        return self._primary_ip_address

    @primary_ip_address.setter
    def primary_ip_address(self, primary_ip_address):
        """Sets the primary_ip_address of this MachineNetworkDetails.

        The primary IP address of the machine.

        :param primary_ip_address: The primary_ip_address of this MachineNetworkDetails.
        :type primary_ip_address: str
        """

        self._primary_ip_address = primary_ip_address

    @property
    def primary_mac_address(self):
        """Gets the primary_mac_address of this MachineNetworkDetails.

        MAC address of the machine. This property is used to uniqly identify the machine.

        :return: The primary_mac_address of this MachineNetworkDetails.
        :rtype: str
        """
        return self._primary_mac_address

    @primary_mac_address.setter
    def primary_mac_address(self, primary_mac_address):
        """Sets the primary_mac_address of this MachineNetworkDetails.

        MAC address of the machine. This property is used to uniqly identify the machine.

        :param primary_mac_address: The primary_mac_address of this MachineNetworkDetails.
        :type primary_mac_address: str
        """

        self._primary_mac_address = primary_mac_address

    @property
    def public_ip_address(self):
        """Gets the public_ip_address of this MachineNetworkDetails.

        The public IP address of the machine.

        :return: The public_ip_address of this MachineNetworkDetails.
        :rtype: str
        """
        return self._public_ip_address

    @public_ip_address.setter
    def public_ip_address(self, public_ip_address):
        """Sets the public_ip_address of this MachineNetworkDetails.

        The public IP address of the machine.

        :param public_ip_address: The public_ip_address of this MachineNetworkDetails.
        :type public_ip_address: str
        """

        self._public_ip_address = public_ip_address
