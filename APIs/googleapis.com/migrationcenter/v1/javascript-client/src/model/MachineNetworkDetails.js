/**
 * Migration Center API
 * A unified platform that helps you accelerate your end-to-end cloud journey from your current on-premises or cloud environments to Google Cloud.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import NetworkAdapterList from './NetworkAdapterList';

/**
 * The MachineNetworkDetails model module.
 * @module model/MachineNetworkDetails
 * @version v1
 */
class MachineNetworkDetails {
    /**
     * Constructs a new <code>MachineNetworkDetails</code>.
     * Details of network adapters and settings.
     * @alias module:model/MachineNetworkDetails
     */
    constructor() { 
        
        MachineNetworkDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MachineNetworkDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MachineNetworkDetails} obj Optional instance to populate.
     * @return {module:model/MachineNetworkDetails} The populated <code>MachineNetworkDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MachineNetworkDetails();

            if (data.hasOwnProperty('adapters')) {
                obj['adapters'] = NetworkAdapterList.constructFromObject(data['adapters']);
            }
            if (data.hasOwnProperty('primaryIpAddress')) {
                obj['primaryIpAddress'] = ApiClient.convertToType(data['primaryIpAddress'], 'String');
            }
            if (data.hasOwnProperty('primaryMacAddress')) {
                obj['primaryMacAddress'] = ApiClient.convertToType(data['primaryMacAddress'], 'String');
            }
            if (data.hasOwnProperty('publicIpAddress')) {
                obj['publicIpAddress'] = ApiClient.convertToType(data['publicIpAddress'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MachineNetworkDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MachineNetworkDetails</code>.
     */
    static validateJSON(data) {
        // validate the optional field `adapters`
        if (data['adapters']) { // data not null
          NetworkAdapterList.validateJSON(data['adapters']);
        }
        // ensure the json data is a string
        if (data['primaryIpAddress'] && !(typeof data['primaryIpAddress'] === 'string' || data['primaryIpAddress'] instanceof String)) {
            throw new Error("Expected the field `primaryIpAddress` to be a primitive type in the JSON string but got " + data['primaryIpAddress']);
        }
        // ensure the json data is a string
        if (data['primaryMacAddress'] && !(typeof data['primaryMacAddress'] === 'string' || data['primaryMacAddress'] instanceof String)) {
            throw new Error("Expected the field `primaryMacAddress` to be a primitive type in the JSON string but got " + data['primaryMacAddress']);
        }
        // ensure the json data is a string
        if (data['publicIpAddress'] && !(typeof data['publicIpAddress'] === 'string' || data['publicIpAddress'] instanceof String)) {
            throw new Error("Expected the field `publicIpAddress` to be a primitive type in the JSON string but got " + data['publicIpAddress']);
        }

        return true;
    }


}



/**
 * @member {module:model/NetworkAdapterList} adapters
 */
MachineNetworkDetails.prototype['adapters'] = undefined;

/**
 * The primary IP address of the machine.
 * @member {String} primaryIpAddress
 */
MachineNetworkDetails.prototype['primaryIpAddress'] = undefined;

/**
 * MAC address of the machine. This property is used to uniqly identify the machine.
 * @member {String} primaryMacAddress
 */
MachineNetworkDetails.prototype['primaryMacAddress'] = undefined;

/**
 * The public IP address of the machine.
 * @member {String} publicIpAddress
 */
MachineNetworkDetails.prototype['publicIpAddress'] = undefined;






export default MachineNetworkDetails;

