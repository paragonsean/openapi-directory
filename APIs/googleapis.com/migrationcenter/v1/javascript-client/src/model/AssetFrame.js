/**
 * Migration Center API
 * A unified platform that helps you accelerate your end-to-end cloud journey from your current on-premises or cloud environments to Google Cloud.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MachineDetails from './MachineDetails';
import PerformanceSample from './PerformanceSample';

/**
 * The AssetFrame model module.
 * @module model/AssetFrame
 * @version v1
 */
class AssetFrame {
    /**
     * Constructs a new <code>AssetFrame</code>.
     * Contains data reported from an inventory source on an asset.
     * @alias module:model/AssetFrame
     */
    constructor() { 
        
        AssetFrame.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AssetFrame</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AssetFrame} obj Optional instance to populate.
     * @return {module:model/AssetFrame} The populated <code>AssetFrame</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AssetFrame();

            if (data.hasOwnProperty('attributes')) {
                obj['attributes'] = ApiClient.convertToType(data['attributes'], {'String': 'String'});
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ApiClient.convertToType(data['labels'], {'String': 'String'});
            }
            if (data.hasOwnProperty('machineDetails')) {
                obj['machineDetails'] = MachineDetails.constructFromObject(data['machineDetails']);
            }
            if (data.hasOwnProperty('performanceSamples')) {
                obj['performanceSamples'] = ApiClient.convertToType(data['performanceSamples'], [PerformanceSample]);
            }
            if (data.hasOwnProperty('reportTime')) {
                obj['reportTime'] = ApiClient.convertToType(data['reportTime'], 'String');
            }
            if (data.hasOwnProperty('traceToken')) {
                obj['traceToken'] = ApiClient.convertToType(data['traceToken'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AssetFrame</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AssetFrame</code>.
     */
    static validateJSON(data) {
        // validate the optional field `machineDetails`
        if (data['machineDetails']) { // data not null
          MachineDetails.validateJSON(data['machineDetails']);
        }
        if (data['performanceSamples']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['performanceSamples'])) {
                throw new Error("Expected the field `performanceSamples` to be an array in the JSON data but got " + data['performanceSamples']);
            }
            // validate the optional field `performanceSamples` (array)
            for (const item of data['performanceSamples']) {
                PerformanceSample.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['reportTime'] && !(typeof data['reportTime'] === 'string' || data['reportTime'] instanceof String)) {
            throw new Error("Expected the field `reportTime` to be a primitive type in the JSON string but got " + data['reportTime']);
        }
        // ensure the json data is a string
        if (data['traceToken'] && !(typeof data['traceToken'] === 'string' || data['traceToken'] instanceof String)) {
            throw new Error("Expected the field `traceToken` to be a primitive type in the JSON string but got " + data['traceToken']);
        }

        return true;
    }


}



/**
 * Generic asset attributes.
 * @member {Object.<String, String>} attributes
 */
AssetFrame.prototype['attributes'] = undefined;

/**
 * Labels as key value pairs.
 * @member {Object.<String, String>} labels
 */
AssetFrame.prototype['labels'] = undefined;

/**
 * @member {module:model/MachineDetails} machineDetails
 */
AssetFrame.prototype['machineDetails'] = undefined;

/**
 * Asset performance data samples. Samples that are from more than 40 days ago or after tomorrow are ignored.
 * @member {Array.<module:model/PerformanceSample>} performanceSamples
 */
AssetFrame.prototype['performanceSamples'] = undefined;

/**
 * The time the data was reported.
 * @member {String} reportTime
 */
AssetFrame.prototype['reportTime'] = undefined;

/**
 * Optional. Trace token is optionally provided to assist with debugging and traceability.
 * @member {String} traceToken
 */
AssetFrame.prototype['traceToken'] = undefined;






export default AssetFrame;

