/**
 * Migration Center API
 * A unified platform that helps you accelerate your end-to-end cloud journey from your current on-premises or cloud environments to Google Cloud.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ReportSummaryAssetAggregateStats from './ReportSummaryAssetAggregateStats';
import ReportSummaryGroupPreferenceSetFinding from './ReportSummaryGroupPreferenceSetFinding';

/**
 * The ReportSummaryGroupFinding model module.
 * @module model/ReportSummaryGroupFinding
 * @version v1
 */
class ReportSummaryGroupFinding {
    /**
     * Constructs a new <code>ReportSummaryGroupFinding</code>.
     * Summary Findings for a specific Group.
     * @alias module:model/ReportSummaryGroupFinding
     */
    constructor() { 
        
        ReportSummaryGroupFinding.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ReportSummaryGroupFinding</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReportSummaryGroupFinding} obj Optional instance to populate.
     * @return {module:model/ReportSummaryGroupFinding} The populated <code>ReportSummaryGroupFinding</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReportSummaryGroupFinding();

            if (data.hasOwnProperty('assetAggregateStats')) {
                obj['assetAggregateStats'] = ReportSummaryAssetAggregateStats.constructFromObject(data['assetAggregateStats']);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('overlappingAssetCount')) {
                obj['overlappingAssetCount'] = ApiClient.convertToType(data['overlappingAssetCount'], 'String');
            }
            if (data.hasOwnProperty('preferenceSetFindings')) {
                obj['preferenceSetFindings'] = ApiClient.convertToType(data['preferenceSetFindings'], [ReportSummaryGroupPreferenceSetFinding]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReportSummaryGroupFinding</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReportSummaryGroupFinding</code>.
     */
    static validateJSON(data) {
        // validate the optional field `assetAggregateStats`
        if (data['assetAggregateStats']) { // data not null
          ReportSummaryAssetAggregateStats.validateJSON(data['assetAggregateStats']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['overlappingAssetCount'] && !(typeof data['overlappingAssetCount'] === 'string' || data['overlappingAssetCount'] instanceof String)) {
            throw new Error("Expected the field `overlappingAssetCount` to be a primitive type in the JSON string but got " + data['overlappingAssetCount']);
        }
        if (data['preferenceSetFindings']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['preferenceSetFindings'])) {
                throw new Error("Expected the field `preferenceSetFindings` to be an array in the JSON data but got " + data['preferenceSetFindings']);
            }
            // validate the optional field `preferenceSetFindings` (array)
            for (const item of data['preferenceSetFindings']) {
                ReportSummaryGroupPreferenceSetFinding.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {module:model/ReportSummaryAssetAggregateStats} assetAggregateStats
 */
ReportSummaryGroupFinding.prototype['assetAggregateStats'] = undefined;

/**
 * Description for the Group.
 * @member {String} description
 */
ReportSummaryGroupFinding.prototype['description'] = undefined;

/**
 * Display Name for the Group.
 * @member {String} displayName
 */
ReportSummaryGroupFinding.prototype['displayName'] = undefined;

/**
 * This field is deprecated, do not rely on it having a value.
 * @member {String} overlappingAssetCount
 */
ReportSummaryGroupFinding.prototype['overlappingAssetCount'] = undefined;

/**
 * Findings for each of the PreferenceSets for this group.
 * @member {Array.<module:model/ReportSummaryGroupPreferenceSetFinding>} preferenceSetFindings
 */
ReportSummaryGroupFinding.prototype['preferenceSetFindings'] = undefined;






export default ReportSummaryGroupFinding;

