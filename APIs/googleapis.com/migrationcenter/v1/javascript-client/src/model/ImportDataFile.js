/**
 * Migration Center API
 * A unified platform that helps you accelerate your end-to-end cloud journey from your current on-premises or cloud environments to Google Cloud.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UploadFileInfo from './UploadFileInfo';

/**
 * The ImportDataFile model module.
 * @module model/ImportDataFile
 * @version v1
 */
class ImportDataFile {
    /**
     * Constructs a new <code>ImportDataFile</code>.
     * A resource that represents a payload file in an import job.
     * @alias module:model/ImportDataFile
     */
    constructor() { 
        
        ImportDataFile.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ImportDataFile</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ImportDataFile} obj Optional instance to populate.
     * @return {module:model/ImportDataFile} The populated <code>ImportDataFile</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ImportDataFile();

            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('format')) {
                obj['format'] = ApiClient.convertToType(data['format'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('uploadFileInfo')) {
                obj['uploadFileInfo'] = UploadFileInfo.constructFromObject(data['uploadFileInfo']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ImportDataFile</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ImportDataFile</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['format'] && !(typeof data['format'] === 'string' || data['format'] instanceof String)) {
            throw new Error("Expected the field `format` to be a primitive type in the JSON string but got " + data['format']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // validate the optional field `uploadFileInfo`
        if (data['uploadFileInfo']) { // data not null
          UploadFileInfo.validateJSON(data['uploadFileInfo']);
        }

        return true;
    }


}



/**
 * Output only. The timestamp when the file was created.
 * @member {String} createTime
 */
ImportDataFile.prototype['createTime'] = undefined;

/**
 * User-friendly display name. Maximum length is 63 characters.
 * @member {String} displayName
 */
ImportDataFile.prototype['displayName'] = undefined;

/**
 * Required. The payload format.
 * @member {module:model/ImportDataFile.FormatEnum} format
 */
ImportDataFile.prototype['format'] = undefined;

/**
 * Output only. The name of the file.
 * @member {String} name
 */
ImportDataFile.prototype['name'] = undefined;

/**
 * Output only. The state of the import data file.
 * @member {module:model/ImportDataFile.StateEnum} state
 */
ImportDataFile.prototype['state'] = undefined;

/**
 * @member {module:model/UploadFileInfo} uploadFileInfo
 */
ImportDataFile.prototype['uploadFileInfo'] = undefined;





/**
 * Allowed values for the <code>format</code> property.
 * @enum {String}
 * @readonly
 */
ImportDataFile['FormatEnum'] = {

    /**
     * value: "IMPORT_JOB_FORMAT_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "IMPORT_JOB_FORMAT_UNSPECIFIED",

    /**
     * value: "IMPORT_JOB_FORMAT_RVTOOLS_XLSX"
     * @const
     */
    "RVTOOLS_XLSX": "IMPORT_JOB_FORMAT_RVTOOLS_XLSX",

    /**
     * value: "IMPORT_JOB_FORMAT_RVTOOLS_CSV"
     * @const
     */
    "RVTOOLS_CSV": "IMPORT_JOB_FORMAT_RVTOOLS_CSV",

    /**
     * value: "IMPORT_JOB_FORMAT_EXPORTED_AWS_CSV"
     * @const
     */
    "EXPORTED_AWS_CSV": "IMPORT_JOB_FORMAT_EXPORTED_AWS_CSV",

    /**
     * value: "IMPORT_JOB_FORMAT_EXPORTED_AZURE_CSV"
     * @const
     */
    "EXPORTED_AZURE_CSV": "IMPORT_JOB_FORMAT_EXPORTED_AZURE_CSV",

    /**
     * value: "IMPORT_JOB_FORMAT_STRATOZONE_CSV"
     * @const
     */
    "STRATOZONE_CSV": "IMPORT_JOB_FORMAT_STRATOZONE_CSV"
};


/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
ImportDataFile['StateEnum'] = {

    /**
     * value: "STATE_UNSPECIFIED"
     * @const
     */
    "STATE_UNSPECIFIED": "STATE_UNSPECIFIED",

    /**
     * value: "CREATING"
     * @const
     */
    "CREATING": "CREATING",

    /**
     * value: "ACTIVE"
     * @const
     */
    "ACTIVE": "ACTIVE"
};



export default ImportDataFile;

