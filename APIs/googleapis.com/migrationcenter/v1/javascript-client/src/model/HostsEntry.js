/**
 * Migration Center API
 * A unified platform that helps you accelerate your end-to-end cloud journey from your current on-premises or cloud environments to Google Cloud.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The HostsEntry model module.
 * @module model/HostsEntry
 * @version v1
 */
class HostsEntry {
    /**
     * Constructs a new <code>HostsEntry</code>.
     * Single /etc/hosts entry.
     * @alias module:model/HostsEntry
     */
    constructor() { 
        
        HostsEntry.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>HostsEntry</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HostsEntry} obj Optional instance to populate.
     * @return {module:model/HostsEntry} The populated <code>HostsEntry</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HostsEntry();

            if (data.hasOwnProperty('hostNames')) {
                obj['hostNames'] = ApiClient.convertToType(data['hostNames'], ['String']);
            }
            if (data.hasOwnProperty('ip')) {
                obj['ip'] = ApiClient.convertToType(data['ip'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>HostsEntry</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>HostsEntry</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['hostNames'])) {
            throw new Error("Expected the field `hostNames` to be an array in the JSON data but got " + data['hostNames']);
        }
        // ensure the json data is a string
        if (data['ip'] && !(typeof data['ip'] === 'string' || data['ip'] instanceof String)) {
            throw new Error("Expected the field `ip` to be a primitive type in the JSON string but got " + data['ip']);
        }

        return true;
    }


}



/**
 * List of host names / aliases.
 * @member {Array.<String>} hostNames
 */
HostsEntry.prototype['hostNames'] = undefined;

/**
 * IP (raw, IPv4/6 agnostic).
 * @member {String} ip
 */
HostsEntry.prototype['ip'] = undefined;






export default HostsEntry;

