/**
 * Migration Center API
 * A unified platform that helps you accelerate your end-to-end cloud journey from your current on-premises or cloud environments to Google Cloud.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GuestConfigDetails from './GuestConfigDetails';
import GuestRuntimeDetails from './GuestRuntimeDetails';

/**
 * The GuestOsDetails model module.
 * @module model/GuestOsDetails
 * @version v1
 */
class GuestOsDetails {
    /**
     * Constructs a new <code>GuestOsDetails</code>.
     * Information from Guest-level collections.
     * @alias module:model/GuestOsDetails
     */
    constructor() { 
        
        GuestOsDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GuestOsDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GuestOsDetails} obj Optional instance to populate.
     * @return {module:model/GuestOsDetails} The populated <code>GuestOsDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GuestOsDetails();

            if (data.hasOwnProperty('config')) {
                obj['config'] = GuestConfigDetails.constructFromObject(data['config']);
            }
            if (data.hasOwnProperty('family')) {
                obj['family'] = ApiClient.convertToType(data['family'], 'String');
            }
            if (data.hasOwnProperty('osName')) {
                obj['osName'] = ApiClient.convertToType(data['osName'], 'String');
            }
            if (data.hasOwnProperty('runtime')) {
                obj['runtime'] = GuestRuntimeDetails.constructFromObject(data['runtime']);
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GuestOsDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GuestOsDetails</code>.
     */
    static validateJSON(data) {
        // validate the optional field `config`
        if (data['config']) { // data not null
          GuestConfigDetails.validateJSON(data['config']);
        }
        // ensure the json data is a string
        if (data['family'] && !(typeof data['family'] === 'string' || data['family'] instanceof String)) {
            throw new Error("Expected the field `family` to be a primitive type in the JSON string but got " + data['family']);
        }
        // ensure the json data is a string
        if (data['osName'] && !(typeof data['osName'] === 'string' || data['osName'] instanceof String)) {
            throw new Error("Expected the field `osName` to be a primitive type in the JSON string but got " + data['osName']);
        }
        // validate the optional field `runtime`
        if (data['runtime']) { // data not null
          GuestRuntimeDetails.validateJSON(data['runtime']);
        }
        // ensure the json data is a string
        if (data['version'] && !(typeof data['version'] === 'string' || data['version'] instanceof String)) {
            throw new Error("Expected the field `version` to be a primitive type in the JSON string but got " + data['version']);
        }

        return true;
    }


}



/**
 * @member {module:model/GuestConfigDetails} config
 */
GuestOsDetails.prototype['config'] = undefined;

/**
 * What family the OS belong to, if known.
 * @member {module:model/GuestOsDetails.FamilyEnum} family
 */
GuestOsDetails.prototype['family'] = undefined;

/**
 * The name of the operating system.
 * @member {String} osName
 */
GuestOsDetails.prototype['osName'] = undefined;

/**
 * @member {module:model/GuestRuntimeDetails} runtime
 */
GuestOsDetails.prototype['runtime'] = undefined;

/**
 * The version of the operating system.
 * @member {String} version
 */
GuestOsDetails.prototype['version'] = undefined;





/**
 * Allowed values for the <code>family</code> property.
 * @enum {String}
 * @readonly
 */
GuestOsDetails['FamilyEnum'] = {

    /**
     * value: "OS_FAMILY_UNKNOWN"
     * @const
     */
    "UNKNOWN": "OS_FAMILY_UNKNOWN",

    /**
     * value: "OS_FAMILY_WINDOWS"
     * @const
     */
    "WINDOWS": "OS_FAMILY_WINDOWS",

    /**
     * value: "OS_FAMILY_LINUX"
     * @const
     */
    "LINUX": "OS_FAMILY_LINUX",

    /**
     * value: "OS_FAMILY_UNIX"
     * @const
     */
    "UNIX": "OS_FAMILY_UNIX"
};



export default GuestOsDetails;

