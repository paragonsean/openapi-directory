/**
 * Migration Center API
 * A unified platform that helps you accelerate your end-to-end cloud journey from your current on-premises or cloud environments to Google Cloud.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FileValidationReport from './FileValidationReport';
import ImportError from './ImportError';

/**
 * The ValidationReport model module.
 * @module model/ValidationReport
 * @version v1
 */
class ValidationReport {
    /**
     * Constructs a new <code>ValidationReport</code>.
     * A resource that aggregates errors across import job files.
     * @alias module:model/ValidationReport
     */
    constructor() { 
        
        ValidationReport.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ValidationReport</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ValidationReport} obj Optional instance to populate.
     * @return {module:model/ValidationReport} The populated <code>ValidationReport</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ValidationReport();

            if (data.hasOwnProperty('fileValidations')) {
                obj['fileValidations'] = ApiClient.convertToType(data['fileValidations'], [FileValidationReport]);
            }
            if (data.hasOwnProperty('jobErrors')) {
                obj['jobErrors'] = ApiClient.convertToType(data['jobErrors'], [ImportError]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ValidationReport</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ValidationReport</code>.
     */
    static validateJSON(data) {
        if (data['fileValidations']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['fileValidations'])) {
                throw new Error("Expected the field `fileValidations` to be an array in the JSON data but got " + data['fileValidations']);
            }
            // validate the optional field `fileValidations` (array)
            for (const item of data['fileValidations']) {
                FileValidationReport.validateJSON(item);
            };
        }
        if (data['jobErrors']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['jobErrors'])) {
                throw new Error("Expected the field `jobErrors` to be an array in the JSON data but got " + data['jobErrors']);
            }
            // validate the optional field `jobErrors` (array)
            for (const item of data['jobErrors']) {
                ImportError.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * List of errors found in files.
 * @member {Array.<module:model/FileValidationReport>} fileValidations
 */
ValidationReport.prototype['fileValidations'] = undefined;

/**
 * List of job level errors.
 * @member {Array.<module:model/ImportError>} jobErrors
 */
ValidationReport.prototype['jobErrors'] = undefined;






export default ValidationReport;

