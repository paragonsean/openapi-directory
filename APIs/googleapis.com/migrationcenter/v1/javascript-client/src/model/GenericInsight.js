/**
 * Migration Center API
 * A unified platform that helps you accelerate your end-to-end cloud journey from your current on-premises or cloud environments to Google Cloud.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GenericInsight model module.
 * @module model/GenericInsight
 * @version v1
 */
class GenericInsight {
    /**
     * Constructs a new <code>GenericInsight</code>.
     * A generic insight about an asset.
     * @alias module:model/GenericInsight
     */
    constructor() { 
        
        GenericInsight.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GenericInsight</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GenericInsight} obj Optional instance to populate.
     * @return {module:model/GenericInsight} The populated <code>GenericInsight</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GenericInsight();

            if (data.hasOwnProperty('additionalInformation')) {
                obj['additionalInformation'] = ApiClient.convertToType(data['additionalInformation'], ['String']);
            }
            if (data.hasOwnProperty('defaultMessage')) {
                obj['defaultMessage'] = ApiClient.convertToType(data['defaultMessage'], 'String');
            }
            if (data.hasOwnProperty('messageId')) {
                obj['messageId'] = ApiClient.convertToType(data['messageId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GenericInsight</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GenericInsight</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['additionalInformation'])) {
            throw new Error("Expected the field `additionalInformation` to be an array in the JSON data but got " + data['additionalInformation']);
        }
        // ensure the json data is a string
        if (data['defaultMessage'] && !(typeof data['defaultMessage'] === 'string' || data['defaultMessage'] instanceof String)) {
            throw new Error("Expected the field `defaultMessage` to be a primitive type in the JSON string but got " + data['defaultMessage']);
        }
        // ensure the json data is a string
        if (data['messageId'] && !(typeof data['messageId'] === 'string' || data['messageId'] instanceof String)) {
            throw new Error("Expected the field `messageId` to be a primitive type in the JSON string but got " + data['messageId']);
        }

        return true;
    }


}



/**
 * Output only. Additional information about the insight, each entry can be a logical entry and must make sense if it is displayed with line breaks between each entry. Text can contain md style links.
 * @member {Array.<String>} additionalInformation
 */
GenericInsight.prototype['additionalInformation'] = undefined;

/**
 * Output only. In case message_code is not yet known by the client default_message will be the message to be used instead.
 * @member {String} defaultMessage
 */
GenericInsight.prototype['defaultMessage'] = undefined;

/**
 * Output only. Represents a globally unique message id for this insight, can be used for localization purposes, in case message_code is not yet known by the client use default_message instead.
 * @member {String} messageId
 */
GenericInsight.prototype['messageId'] = undefined;






export default GenericInsight;

