/**
 * Migration Center API
 * A unified platform that helps you accelerate your end-to-end cloud journey from your current on-premises or cloud environments to Google Cloud.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FstabEntryList from './FstabEntryList';
import HostsEntryList from './HostsEntryList';
import NfsExportList from './NfsExportList';

/**
 * The GuestConfigDetails model module.
 * @module model/GuestConfigDetails
 * @version v1
 */
class GuestConfigDetails {
    /**
     * Constructs a new <code>GuestConfigDetails</code>.
     * Guest OS config information.
     * @alias module:model/GuestConfigDetails
     */
    constructor() { 
        
        GuestConfigDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GuestConfigDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GuestConfigDetails} obj Optional instance to populate.
     * @return {module:model/GuestConfigDetails} The populated <code>GuestConfigDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GuestConfigDetails();

            if (data.hasOwnProperty('fstab')) {
                obj['fstab'] = FstabEntryList.constructFromObject(data['fstab']);
            }
            if (data.hasOwnProperty('hosts')) {
                obj['hosts'] = HostsEntryList.constructFromObject(data['hosts']);
            }
            if (data.hasOwnProperty('issue')) {
                obj['issue'] = ApiClient.convertToType(data['issue'], 'String');
            }
            if (data.hasOwnProperty('nfsExports')) {
                obj['nfsExports'] = NfsExportList.constructFromObject(data['nfsExports']);
            }
            if (data.hasOwnProperty('selinuxMode')) {
                obj['selinuxMode'] = ApiClient.convertToType(data['selinuxMode'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GuestConfigDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GuestConfigDetails</code>.
     */
    static validateJSON(data) {
        // validate the optional field `fstab`
        if (data['fstab']) { // data not null
          FstabEntryList.validateJSON(data['fstab']);
        }
        // validate the optional field `hosts`
        if (data['hosts']) { // data not null
          HostsEntryList.validateJSON(data['hosts']);
        }
        // ensure the json data is a string
        if (data['issue'] && !(typeof data['issue'] === 'string' || data['issue'] instanceof String)) {
            throw new Error("Expected the field `issue` to be a primitive type in the JSON string but got " + data['issue']);
        }
        // validate the optional field `nfsExports`
        if (data['nfsExports']) { // data not null
          NfsExportList.validateJSON(data['nfsExports']);
        }
        // ensure the json data is a string
        if (data['selinuxMode'] && !(typeof data['selinuxMode'] === 'string' || data['selinuxMode'] instanceof String)) {
            throw new Error("Expected the field `selinuxMode` to be a primitive type in the JSON string but got " + data['selinuxMode']);
        }

        return true;
    }


}



/**
 * @member {module:model/FstabEntryList} fstab
 */
GuestConfigDetails.prototype['fstab'] = undefined;

/**
 * @member {module:model/HostsEntryList} hosts
 */
GuestConfigDetails.prototype['hosts'] = undefined;

/**
 * OS issue (typically /etc/issue in Linux).
 * @member {String} issue
 */
GuestConfigDetails.prototype['issue'] = undefined;

/**
 * @member {module:model/NfsExportList} nfsExports
 */
GuestConfigDetails.prototype['nfsExports'] = undefined;

/**
 * Security-Enhanced Linux (SELinux) mode.
 * @member {module:model/GuestConfigDetails.SelinuxModeEnum} selinuxMode
 */
GuestConfigDetails.prototype['selinuxMode'] = undefined;





/**
 * Allowed values for the <code>selinuxMode</code> property.
 * @enum {String}
 * @readonly
 */
GuestConfigDetails['SelinuxModeEnum'] = {

    /**
     * value: "SE_LINUX_MODE_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "SE_LINUX_MODE_UNSPECIFIED",

    /**
     * value: "SE_LINUX_MODE_DISABLED"
     * @const
     */
    "DISABLED": "SE_LINUX_MODE_DISABLED",

    /**
     * value: "SE_LINUX_MODE_PERMISSIVE"
     * @const
     */
    "PERMISSIVE": "SE_LINUX_MODE_PERMISSIVE",

    /**
     * value: "SE_LINUX_MODE_ENFORCING"
     * @const
     */
    "ENFORCING": "SE_LINUX_MODE_ENFORCING"
};



export default GuestConfigDetails;

