/**
 * Migration Center API
 * A unified platform that helps you accelerate your end-to-end cloud journey from your current on-premises or cloud environments to Google Cloud.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ReportSummaryUtilizationChartData model module.
 * @module model/ReportSummaryUtilizationChartData
 * @version v1
 */
class ReportSummaryUtilizationChartData {
    /**
     * Constructs a new <code>ReportSummaryUtilizationChartData</code>.
     * Utilization Chart is a specific type of visualization which displays a metric classified into \&quot;Used\&quot; and \&quot;Free\&quot; buckets.
     * @alias module:model/ReportSummaryUtilizationChartData
     */
    constructor() { 
        
        ReportSummaryUtilizationChartData.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ReportSummaryUtilizationChartData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReportSummaryUtilizationChartData} obj Optional instance to populate.
     * @return {module:model/ReportSummaryUtilizationChartData} The populated <code>ReportSummaryUtilizationChartData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReportSummaryUtilizationChartData();

            if (data.hasOwnProperty('free')) {
                obj['free'] = ApiClient.convertToType(data['free'], 'String');
            }
            if (data.hasOwnProperty('used')) {
                obj['used'] = ApiClient.convertToType(data['used'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReportSummaryUtilizationChartData</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReportSummaryUtilizationChartData</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['free'] && !(typeof data['free'] === 'string' || data['free'] instanceof String)) {
            throw new Error("Expected the field `free` to be a primitive type in the JSON string but got " + data['free']);
        }
        // ensure the json data is a string
        if (data['used'] && !(typeof data['used'] === 'string' || data['used'] instanceof String)) {
            throw new Error("Expected the field `used` to be a primitive type in the JSON string but got " + data['used']);
        }

        return true;
    }


}



/**
 * Aggregate value which falls into the \"Free\" bucket.
 * @member {String} free
 */
ReportSummaryUtilizationChartData.prototype['free'] = undefined;

/**
 * Aggregate value which falls into the \"Used\" bucket.
 * @member {String} used
 */
ReportSummaryUtilizationChartData.prototype['used'] = undefined;






export default ReportSummaryUtilizationChartData;

