/**
 * Migration Center API
 * A unified platform that helps you accelerate your end-to-end cloud journey from your current on-premises or cloud environments to Google Cloud.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The FitDescriptor model module.
 * @module model/FitDescriptor
 * @version v1
 */
class FitDescriptor {
    /**
     * Constructs a new <code>FitDescriptor</code>.
     * Describes the fit level of an asset for migration to a specific target.
     * @alias module:model/FitDescriptor
     */
    constructor() { 
        
        FitDescriptor.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FitDescriptor</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FitDescriptor} obj Optional instance to populate.
     * @return {module:model/FitDescriptor} The populated <code>FitDescriptor</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FitDescriptor();

            if (data.hasOwnProperty('fitLevel')) {
                obj['fitLevel'] = ApiClient.convertToType(data['fitLevel'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FitDescriptor</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FitDescriptor</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['fitLevel'] && !(typeof data['fitLevel'] === 'string' || data['fitLevel'] instanceof String)) {
            throw new Error("Expected the field `fitLevel` to be a primitive type in the JSON string but got " + data['fitLevel']);
        }

        return true;
    }


}



/**
 * Fit level.
 * @member {module:model/FitDescriptor.FitLevelEnum} fitLevel
 */
FitDescriptor.prototype['fitLevel'] = undefined;





/**
 * Allowed values for the <code>fitLevel</code> property.
 * @enum {String}
 * @readonly
 */
FitDescriptor['FitLevelEnum'] = {

    /**
     * value: "FIT_LEVEL_UNSPECIFIED"
     * @const
     */
    "FIT_LEVEL_UNSPECIFIED": "FIT_LEVEL_UNSPECIFIED",

    /**
     * value: "FIT"
     * @const
     */
    "FIT": "FIT",

    /**
     * value: "NO_FIT"
     * @const
     */
    "NO_FIT": "NO_FIT",

    /**
     * value: "REQUIRES_EFFORT"
     * @const
     */
    "REQUIRES_EFFORT": "REQUIRES_EFFORT"
};



export default FitDescriptor;

