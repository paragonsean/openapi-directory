/**
 * Migration Center API
 * A unified platform that helps you accelerate your end-to-end cloud journey from your current on-premises or cloud environments to Google Cloud.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The NfsExport model module.
 * @module model/NfsExport
 * @version v1
 */
class NfsExport {
    /**
     * Constructs a new <code>NfsExport</code>.
     * NFS export.
     * @alias module:model/NfsExport
     */
    constructor() { 
        
        NfsExport.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>NfsExport</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NfsExport} obj Optional instance to populate.
     * @return {module:model/NfsExport} The populated <code>NfsExport</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NfsExport();

            if (data.hasOwnProperty('exportDirectory')) {
                obj['exportDirectory'] = ApiClient.convertToType(data['exportDirectory'], 'String');
            }
            if (data.hasOwnProperty('hosts')) {
                obj['hosts'] = ApiClient.convertToType(data['hosts'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NfsExport</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NfsExport</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['exportDirectory'] && !(typeof data['exportDirectory'] === 'string' || data['exportDirectory'] instanceof String)) {
            throw new Error("Expected the field `exportDirectory` to be a primitive type in the JSON string but got " + data['exportDirectory']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['hosts'])) {
            throw new Error("Expected the field `hosts` to be an array in the JSON data but got " + data['hosts']);
        }

        return true;
    }


}



/**
 * The directory being exported.
 * @member {String} exportDirectory
 */
NfsExport.prototype['exportDirectory'] = undefined;

/**
 * The hosts or networks to which the export is being shared.
 * @member {Array.<String>} hosts
 */
NfsExport.prototype['hosts'] = undefined;






export default NfsExport;

