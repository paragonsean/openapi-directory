/**
 * Migration Center API
 * A unified platform that helps you accelerate your end-to-end cloud journey from your current on-premises or cloud environments to Google Cloud.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ExecutionReport from './ExecutionReport';
import ValidationReport from './ValidationReport';

/**
 * The ImportJob model module.
 * @module model/ImportJob
 * @version v1
 */
class ImportJob {
    /**
     * Constructs a new <code>ImportJob</code>.
     * A resource that represents the background job that imports asset frames.
     * @alias module:model/ImportJob
     */
    constructor() { 
        
        ImportJob.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ImportJob</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ImportJob} obj Optional instance to populate.
     * @return {module:model/ImportJob} The populated <code>ImportJob</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ImportJob();

            if (data.hasOwnProperty('assetSource')) {
                obj['assetSource'] = ApiClient.convertToType(data['assetSource'], 'String');
            }
            if (data.hasOwnProperty('completeTime')) {
                obj['completeTime'] = ApiClient.convertToType(data['completeTime'], 'String');
            }
            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('executionReport')) {
                obj['executionReport'] = ExecutionReport.constructFromObject(data['executionReport']);
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ApiClient.convertToType(data['labels'], {'String': 'String'});
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('updateTime')) {
                obj['updateTime'] = ApiClient.convertToType(data['updateTime'], 'String');
            }
            if (data.hasOwnProperty('validationReport')) {
                obj['validationReport'] = ValidationReport.constructFromObject(data['validationReport']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ImportJob</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ImportJob</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['assetSource'] && !(typeof data['assetSource'] === 'string' || data['assetSource'] instanceof String)) {
            throw new Error("Expected the field `assetSource` to be a primitive type in the JSON string but got " + data['assetSource']);
        }
        // ensure the json data is a string
        if (data['completeTime'] && !(typeof data['completeTime'] === 'string' || data['completeTime'] instanceof String)) {
            throw new Error("Expected the field `completeTime` to be a primitive type in the JSON string but got " + data['completeTime']);
        }
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // validate the optional field `executionReport`
        if (data['executionReport']) { // data not null
          ExecutionReport.validateJSON(data['executionReport']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // ensure the json data is a string
        if (data['updateTime'] && !(typeof data['updateTime'] === 'string' || data['updateTime'] instanceof String)) {
            throw new Error("Expected the field `updateTime` to be a primitive type in the JSON string but got " + data['updateTime']);
        }
        // validate the optional field `validationReport`
        if (data['validationReport']) { // data not null
          ValidationReport.validateJSON(data['validationReport']);
        }

        return true;
    }


}



/**
 * Required. Reference to a source.
 * @member {String} assetSource
 */
ImportJob.prototype['assetSource'] = undefined;

/**
 * Output only. The timestamp when the import job was completed.
 * @member {String} completeTime
 */
ImportJob.prototype['completeTime'] = undefined;

/**
 * Output only. The timestamp when the import job was created.
 * @member {String} createTime
 */
ImportJob.prototype['createTime'] = undefined;

/**
 * Optional. User-friendly display name. Maximum length is 256 characters.
 * @member {String} displayName
 */
ImportJob.prototype['displayName'] = undefined;

/**
 * @member {module:model/ExecutionReport} executionReport
 */
ImportJob.prototype['executionReport'] = undefined;

/**
 * Labels as key value pairs.
 * @member {Object.<String, String>} labels
 */
ImportJob.prototype['labels'] = undefined;

/**
 * Output only. The full name of the import job.
 * @member {String} name
 */
ImportJob.prototype['name'] = undefined;

/**
 * Output only. The state of the import job.
 * @member {module:model/ImportJob.StateEnum} state
 */
ImportJob.prototype['state'] = undefined;

/**
 * Output only. The timestamp when the import job was last updated.
 * @member {String} updateTime
 */
ImportJob.prototype['updateTime'] = undefined;

/**
 * @member {module:model/ValidationReport} validationReport
 */
ImportJob.prototype['validationReport'] = undefined;





/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
ImportJob['StateEnum'] = {

    /**
     * value: "IMPORT_JOB_STATE_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "IMPORT_JOB_STATE_UNSPECIFIED",

    /**
     * value: "IMPORT_JOB_STATE_PENDING"
     * @const
     */
    "PENDING": "IMPORT_JOB_STATE_PENDING",

    /**
     * value: "IMPORT_JOB_STATE_RUNNING"
     * @const
     */
    "RUNNING": "IMPORT_JOB_STATE_RUNNING",

    /**
     * value: "IMPORT_JOB_STATE_COMPLETED"
     * @const
     */
    "COMPLETED": "IMPORT_JOB_STATE_COMPLETED",

    /**
     * value: "IMPORT_JOB_STATE_FAILED"
     * @const
     */
    "FAILED": "IMPORT_JOB_STATE_FAILED",

    /**
     * value: "IMPORT_JOB_STATE_VALIDATING"
     * @const
     */
    "VALIDATING": "IMPORT_JOB_STATE_VALIDATING",

    /**
     * value: "IMPORT_JOB_STATE_FAILED_VALIDATION"
     * @const
     */
    "FAILED_VALIDATION": "IMPORT_JOB_STATE_FAILED_VALIDATION",

    /**
     * value: "IMPORT_JOB_STATE_READY"
     * @const
     */
    "READY": "IMPORT_JOB_STATE_READY"
};



export default ImportJob;

