/*
 * Migration Center API
 * A unified platform that helps you accelerate your end-to-end cloud journey from your current on-premises or cloud environments to Google Cloud.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.AwsEc2PlatformDetails;
import org.openapitools.client.model.AzureVmPlatformDetails;
import org.openapitools.client.model.GenericPlatformDetails;
import org.openapitools.client.model.PhysicalPlatformDetails;
import org.openapitools.client.model.VmwarePlatformDetails;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Information about the platform.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:30:29.567455-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class PlatformDetails {
  public static final String SERIALIZED_NAME_AWS_EC2_DETAILS = "awsEc2Details";
  @SerializedName(SERIALIZED_NAME_AWS_EC2_DETAILS)
  private AwsEc2PlatformDetails awsEc2Details;

  public static final String SERIALIZED_NAME_AZURE_VM_DETAILS = "azureVmDetails";
  @SerializedName(SERIALIZED_NAME_AZURE_VM_DETAILS)
  private AzureVmPlatformDetails azureVmDetails;

  public static final String SERIALIZED_NAME_GENERIC_DETAILS = "genericDetails";
  @SerializedName(SERIALIZED_NAME_GENERIC_DETAILS)
  private GenericPlatformDetails genericDetails;

  public static final String SERIALIZED_NAME_PHYSICAL_DETAILS = "physicalDetails";
  @SerializedName(SERIALIZED_NAME_PHYSICAL_DETAILS)
  private PhysicalPlatformDetails physicalDetails;

  public static final String SERIALIZED_NAME_VMWARE_DETAILS = "vmwareDetails";
  @SerializedName(SERIALIZED_NAME_VMWARE_DETAILS)
  private VmwarePlatformDetails vmwareDetails;

  public PlatformDetails() {
  }

  public PlatformDetails awsEc2Details(AwsEc2PlatformDetails awsEc2Details) {
    this.awsEc2Details = awsEc2Details;
    return this;
  }

  /**
   * Get awsEc2Details
   * @return awsEc2Details
   */
  @javax.annotation.Nullable
  public AwsEc2PlatformDetails getAwsEc2Details() {
    return awsEc2Details;
  }

  public void setAwsEc2Details(AwsEc2PlatformDetails awsEc2Details) {
    this.awsEc2Details = awsEc2Details;
  }


  public PlatformDetails azureVmDetails(AzureVmPlatformDetails azureVmDetails) {
    this.azureVmDetails = azureVmDetails;
    return this;
  }

  /**
   * Get azureVmDetails
   * @return azureVmDetails
   */
  @javax.annotation.Nullable
  public AzureVmPlatformDetails getAzureVmDetails() {
    return azureVmDetails;
  }

  public void setAzureVmDetails(AzureVmPlatformDetails azureVmDetails) {
    this.azureVmDetails = azureVmDetails;
  }


  public PlatformDetails genericDetails(GenericPlatformDetails genericDetails) {
    this.genericDetails = genericDetails;
    return this;
  }

  /**
   * Get genericDetails
   * @return genericDetails
   */
  @javax.annotation.Nullable
  public GenericPlatformDetails getGenericDetails() {
    return genericDetails;
  }

  public void setGenericDetails(GenericPlatformDetails genericDetails) {
    this.genericDetails = genericDetails;
  }


  public PlatformDetails physicalDetails(PhysicalPlatformDetails physicalDetails) {
    this.physicalDetails = physicalDetails;
    return this;
  }

  /**
   * Get physicalDetails
   * @return physicalDetails
   */
  @javax.annotation.Nullable
  public PhysicalPlatformDetails getPhysicalDetails() {
    return physicalDetails;
  }

  public void setPhysicalDetails(PhysicalPlatformDetails physicalDetails) {
    this.physicalDetails = physicalDetails;
  }


  public PlatformDetails vmwareDetails(VmwarePlatformDetails vmwareDetails) {
    this.vmwareDetails = vmwareDetails;
    return this;
  }

  /**
   * Get vmwareDetails
   * @return vmwareDetails
   */
  @javax.annotation.Nullable
  public VmwarePlatformDetails getVmwareDetails() {
    return vmwareDetails;
  }

  public void setVmwareDetails(VmwarePlatformDetails vmwareDetails) {
    this.vmwareDetails = vmwareDetails;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PlatformDetails platformDetails = (PlatformDetails) o;
    return Objects.equals(this.awsEc2Details, platformDetails.awsEc2Details) &&
        Objects.equals(this.azureVmDetails, platformDetails.azureVmDetails) &&
        Objects.equals(this.genericDetails, platformDetails.genericDetails) &&
        Objects.equals(this.physicalDetails, platformDetails.physicalDetails) &&
        Objects.equals(this.vmwareDetails, platformDetails.vmwareDetails);
  }

  @Override
  public int hashCode() {
    return Objects.hash(awsEc2Details, azureVmDetails, genericDetails, physicalDetails, vmwareDetails);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PlatformDetails {\n");
    sb.append("    awsEc2Details: ").append(toIndentedString(awsEc2Details)).append("\n");
    sb.append("    azureVmDetails: ").append(toIndentedString(azureVmDetails)).append("\n");
    sb.append("    genericDetails: ").append(toIndentedString(genericDetails)).append("\n");
    sb.append("    physicalDetails: ").append(toIndentedString(physicalDetails)).append("\n");
    sb.append("    vmwareDetails: ").append(toIndentedString(vmwareDetails)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("awsEc2Details");
    openapiFields.add("azureVmDetails");
    openapiFields.add("genericDetails");
    openapiFields.add("physicalDetails");
    openapiFields.add("vmwareDetails");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PlatformDetails
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PlatformDetails.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PlatformDetails is not found in the empty JSON string", PlatformDetails.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PlatformDetails.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PlatformDetails` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `awsEc2Details`
      if (jsonObj.get("awsEc2Details") != null && !jsonObj.get("awsEc2Details").isJsonNull()) {
        AwsEc2PlatformDetails.validateJsonElement(jsonObj.get("awsEc2Details"));
      }
      // validate the optional field `azureVmDetails`
      if (jsonObj.get("azureVmDetails") != null && !jsonObj.get("azureVmDetails").isJsonNull()) {
        AzureVmPlatformDetails.validateJsonElement(jsonObj.get("azureVmDetails"));
      }
      // validate the optional field `genericDetails`
      if (jsonObj.get("genericDetails") != null && !jsonObj.get("genericDetails").isJsonNull()) {
        GenericPlatformDetails.validateJsonElement(jsonObj.get("genericDetails"));
      }
      // validate the optional field `physicalDetails`
      if (jsonObj.get("physicalDetails") != null && !jsonObj.get("physicalDetails").isJsonNull()) {
        PhysicalPlatformDetails.validateJsonElement(jsonObj.get("physicalDetails"));
      }
      // validate the optional field `vmwareDetails`
      if (jsonObj.get("vmwareDetails") != null && !jsonObj.get("vmwareDetails").isJsonNull()) {
        VmwarePlatformDetails.validateJsonElement(jsonObj.get("vmwareDetails"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PlatformDetails.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PlatformDetails' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PlatformDetails> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PlatformDetails.class));

       return (TypeAdapter<T>) new TypeAdapter<PlatformDetails>() {
           @Override
           public void write(JsonWriter out, PlatformDetails value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PlatformDetails read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PlatformDetails given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PlatformDetails
   * @throws IOException if the JSON string is invalid with respect to PlatformDetails
   */
  public static PlatformDetails fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PlatformDetails.class);
  }

  /**
   * Convert an instance of PlatformDetails to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

