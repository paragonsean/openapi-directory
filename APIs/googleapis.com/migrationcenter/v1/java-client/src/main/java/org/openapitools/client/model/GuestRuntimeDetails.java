/*
 * Migration Center API
 * A unified platform that helps you accelerate your end-to-end cloud journey from your current on-premises or cloud environments to Google Cloud.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GuestInstalledApplicationList;
import org.openapitools.client.model.OpenFileList;
import org.openapitools.client.model.RunningProcessList;
import org.openapitools.client.model.RunningServiceList;
import org.openapitools.client.model.RuntimeNetworkInfo;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Guest OS runtime information.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:30:29.567455-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GuestRuntimeDetails {
  public static final String SERIALIZED_NAME_DOMAIN = "domain";
  @SerializedName(SERIALIZED_NAME_DOMAIN)
  private String domain;

  public static final String SERIALIZED_NAME_INSTALLED_APPS = "installedApps";
  @SerializedName(SERIALIZED_NAME_INSTALLED_APPS)
  private GuestInstalledApplicationList installedApps;

  public static final String SERIALIZED_NAME_LAST_BOOT_TIME = "lastBootTime";
  @SerializedName(SERIALIZED_NAME_LAST_BOOT_TIME)
  private String lastBootTime;

  public static final String SERIALIZED_NAME_MACHINE_NAME = "machineName";
  @SerializedName(SERIALIZED_NAME_MACHINE_NAME)
  private String machineName;

  public static final String SERIALIZED_NAME_NETWORK = "network";
  @SerializedName(SERIALIZED_NAME_NETWORK)
  private RuntimeNetworkInfo network;

  public static final String SERIALIZED_NAME_OPEN_FILE_LIST = "openFileList";
  @SerializedName(SERIALIZED_NAME_OPEN_FILE_LIST)
  private OpenFileList openFileList;

  public static final String SERIALIZED_NAME_PROCESSES = "processes";
  @SerializedName(SERIALIZED_NAME_PROCESSES)
  private RunningProcessList processes;

  public static final String SERIALIZED_NAME_SERVICES = "services";
  @SerializedName(SERIALIZED_NAME_SERVICES)
  private RunningServiceList services;

  public GuestRuntimeDetails() {
  }

  public GuestRuntimeDetails domain(String domain) {
    this.domain = domain;
    return this;
  }

  /**
   * Domain, e.g. c.stratozone-development.internal.
   * @return domain
   */
  @javax.annotation.Nullable
  public String getDomain() {
    return domain;
  }

  public void setDomain(String domain) {
    this.domain = domain;
  }


  public GuestRuntimeDetails installedApps(GuestInstalledApplicationList installedApps) {
    this.installedApps = installedApps;
    return this;
  }

  /**
   * Get installedApps
   * @return installedApps
   */
  @javax.annotation.Nullable
  public GuestInstalledApplicationList getInstalledApps() {
    return installedApps;
  }

  public void setInstalledApps(GuestInstalledApplicationList installedApps) {
    this.installedApps = installedApps;
  }


  public GuestRuntimeDetails lastBootTime(String lastBootTime) {
    this.lastBootTime = lastBootTime;
    return this;
  }

  /**
   * Last time the OS was booted.
   * @return lastBootTime
   */
  @javax.annotation.Nullable
  public String getLastBootTime() {
    return lastBootTime;
  }

  public void setLastBootTime(String lastBootTime) {
    this.lastBootTime = lastBootTime;
  }


  public GuestRuntimeDetails machineName(String machineName) {
    this.machineName = machineName;
    return this;
  }

  /**
   * Machine name.
   * @return machineName
   */
  @javax.annotation.Nullable
  public String getMachineName() {
    return machineName;
  }

  public void setMachineName(String machineName) {
    this.machineName = machineName;
  }


  public GuestRuntimeDetails network(RuntimeNetworkInfo network) {
    this.network = network;
    return this;
  }

  /**
   * Get network
   * @return network
   */
  @javax.annotation.Nullable
  public RuntimeNetworkInfo getNetwork() {
    return network;
  }

  public void setNetwork(RuntimeNetworkInfo network) {
    this.network = network;
  }


  public GuestRuntimeDetails openFileList(OpenFileList openFileList) {
    this.openFileList = openFileList;
    return this;
  }

  /**
   * Get openFileList
   * @return openFileList
   */
  @javax.annotation.Nullable
  public OpenFileList getOpenFileList() {
    return openFileList;
  }

  public void setOpenFileList(OpenFileList openFileList) {
    this.openFileList = openFileList;
  }


  public GuestRuntimeDetails processes(RunningProcessList processes) {
    this.processes = processes;
    return this;
  }

  /**
   * Get processes
   * @return processes
   */
  @javax.annotation.Nullable
  public RunningProcessList getProcesses() {
    return processes;
  }

  public void setProcesses(RunningProcessList processes) {
    this.processes = processes;
  }


  public GuestRuntimeDetails services(RunningServiceList services) {
    this.services = services;
    return this;
  }

  /**
   * Get services
   * @return services
   */
  @javax.annotation.Nullable
  public RunningServiceList getServices() {
    return services;
  }

  public void setServices(RunningServiceList services) {
    this.services = services;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GuestRuntimeDetails guestRuntimeDetails = (GuestRuntimeDetails) o;
    return Objects.equals(this.domain, guestRuntimeDetails.domain) &&
        Objects.equals(this.installedApps, guestRuntimeDetails.installedApps) &&
        Objects.equals(this.lastBootTime, guestRuntimeDetails.lastBootTime) &&
        Objects.equals(this.machineName, guestRuntimeDetails.machineName) &&
        Objects.equals(this.network, guestRuntimeDetails.network) &&
        Objects.equals(this.openFileList, guestRuntimeDetails.openFileList) &&
        Objects.equals(this.processes, guestRuntimeDetails.processes) &&
        Objects.equals(this.services, guestRuntimeDetails.services);
  }

  @Override
  public int hashCode() {
    return Objects.hash(domain, installedApps, lastBootTime, machineName, network, openFileList, processes, services);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GuestRuntimeDetails {\n");
    sb.append("    domain: ").append(toIndentedString(domain)).append("\n");
    sb.append("    installedApps: ").append(toIndentedString(installedApps)).append("\n");
    sb.append("    lastBootTime: ").append(toIndentedString(lastBootTime)).append("\n");
    sb.append("    machineName: ").append(toIndentedString(machineName)).append("\n");
    sb.append("    network: ").append(toIndentedString(network)).append("\n");
    sb.append("    openFileList: ").append(toIndentedString(openFileList)).append("\n");
    sb.append("    processes: ").append(toIndentedString(processes)).append("\n");
    sb.append("    services: ").append(toIndentedString(services)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("domain");
    openapiFields.add("installedApps");
    openapiFields.add("lastBootTime");
    openapiFields.add("machineName");
    openapiFields.add("network");
    openapiFields.add("openFileList");
    openapiFields.add("processes");
    openapiFields.add("services");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GuestRuntimeDetails
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GuestRuntimeDetails.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GuestRuntimeDetails is not found in the empty JSON string", GuestRuntimeDetails.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GuestRuntimeDetails.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GuestRuntimeDetails` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("domain") != null && !jsonObj.get("domain").isJsonNull()) && !jsonObj.get("domain").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `domain` to be a primitive type in the JSON string but got `%s`", jsonObj.get("domain").toString()));
      }
      // validate the optional field `installedApps`
      if (jsonObj.get("installedApps") != null && !jsonObj.get("installedApps").isJsonNull()) {
        GuestInstalledApplicationList.validateJsonElement(jsonObj.get("installedApps"));
      }
      if ((jsonObj.get("lastBootTime") != null && !jsonObj.get("lastBootTime").isJsonNull()) && !jsonObj.get("lastBootTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastBootTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastBootTime").toString()));
      }
      if ((jsonObj.get("machineName") != null && !jsonObj.get("machineName").isJsonNull()) && !jsonObj.get("machineName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `machineName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("machineName").toString()));
      }
      // validate the optional field `network`
      if (jsonObj.get("network") != null && !jsonObj.get("network").isJsonNull()) {
        RuntimeNetworkInfo.validateJsonElement(jsonObj.get("network"));
      }
      // validate the optional field `openFileList`
      if (jsonObj.get("openFileList") != null && !jsonObj.get("openFileList").isJsonNull()) {
        OpenFileList.validateJsonElement(jsonObj.get("openFileList"));
      }
      // validate the optional field `processes`
      if (jsonObj.get("processes") != null && !jsonObj.get("processes").isJsonNull()) {
        RunningProcessList.validateJsonElement(jsonObj.get("processes"));
      }
      // validate the optional field `services`
      if (jsonObj.get("services") != null && !jsonObj.get("services").isJsonNull()) {
        RunningServiceList.validateJsonElement(jsonObj.get("services"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GuestRuntimeDetails.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GuestRuntimeDetails' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GuestRuntimeDetails> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GuestRuntimeDetails.class));

       return (TypeAdapter<T>) new TypeAdapter<GuestRuntimeDetails>() {
           @Override
           public void write(JsonWriter out, GuestRuntimeDetails value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GuestRuntimeDetails read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GuestRuntimeDetails given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GuestRuntimeDetails
   * @throws IOException if the JSON string is invalid with respect to GuestRuntimeDetails
   */
  public static GuestRuntimeDetails fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GuestRuntimeDetails.class);
  }

  /**
   * Convert an instance of GuestRuntimeDetails to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

