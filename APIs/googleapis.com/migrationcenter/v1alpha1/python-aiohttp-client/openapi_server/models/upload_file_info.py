# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UploadFileInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, headers: Dict[str, str]=None, signed_uri: str=None, uri_expiration_time: str=None):
        """UploadFileInfo - a model defined in OpenAPI

        :param headers: The headers of this UploadFileInfo.
        :param signed_uri: The signed_uri of this UploadFileInfo.
        :param uri_expiration_time: The uri_expiration_time of this UploadFileInfo.
        """
        self.openapi_types = {
            'headers': Dict[str, str],
            'signed_uri': str,
            'uri_expiration_time': str
        }

        self.attribute_map = {
            'headers': 'headers',
            'signed_uri': 'signedUri',
            'uri_expiration_time': 'uriExpirationTime'
        }

        self._headers = headers
        self._signed_uri = signed_uri
        self._uri_expiration_time = uri_expiration_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UploadFileInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UploadFileInfo of this UploadFileInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def headers(self):
        """Gets the headers of this UploadFileInfo.

        Output only. The headers that were used to sign the URL.

        :return: The headers of this UploadFileInfo.
        :rtype: Dict[str, str]
        """
        return self._headers

    @headers.setter
    def headers(self, headers):
        """Sets the headers of this UploadFileInfo.

        Output only. The headers that were used to sign the URL.

        :param headers: The headers of this UploadFileInfo.
        :type headers: Dict[str, str]
        """

        self._headers = headers

    @property
    def signed_uri(self):
        """Gets the signed_uri of this UploadFileInfo.

        Output only. Upload URI for the file.

        :return: The signed_uri of this UploadFileInfo.
        :rtype: str
        """
        return self._signed_uri

    @signed_uri.setter
    def signed_uri(self, signed_uri):
        """Sets the signed_uri of this UploadFileInfo.

        Output only. Upload URI for the file.

        :param signed_uri: The signed_uri of this UploadFileInfo.
        :type signed_uri: str
        """

        self._signed_uri = signed_uri

    @property
    def uri_expiration_time(self):
        """Gets the uri_expiration_time of this UploadFileInfo.

        Output only. Expiration time of the upload URI.

        :return: The uri_expiration_time of this UploadFileInfo.
        :rtype: str
        """
        return self._uri_expiration_time

    @uri_expiration_time.setter
    def uri_expiration_time(self, uri_expiration_time):
        """Sets the uri_expiration_time of this UploadFileInfo.

        Output only. Expiration time of the upload URI.

        :param uri_expiration_time: The uri_expiration_time of this UploadFileInfo.
        :type uri_expiration_time: str
        """

        self._uri_expiration_time = uri_expiration_time
