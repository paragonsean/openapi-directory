# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.network_adapter_details import NetworkAdapterDetails
from openapi_server import util


class NetworkAdapterList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, network_adapters: List[NetworkAdapterDetails]=None):
        """NetworkAdapterList - a model defined in OpenAPI

        :param network_adapters: The network_adapters of this NetworkAdapterList.
        """
        self.openapi_types = {
            'network_adapters': List[NetworkAdapterDetails]
        }

        self.attribute_map = {
            'network_adapters': 'networkAdapters'
        }

        self._network_adapters = network_adapters

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NetworkAdapterList':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NetworkAdapterList of this NetworkAdapterList.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def network_adapters(self):
        """Gets the network_adapters of this NetworkAdapterList.

        Network adapter descriptions.

        :return: The network_adapters of this NetworkAdapterList.
        :rtype: List[NetworkAdapterDetails]
        """
        return self._network_adapters

    @network_adapters.setter
    def network_adapters(self, network_adapters):
        """Sets the network_adapters of this NetworkAdapterList.

        Network adapter descriptions.

        :param network_adapters: The network_adapters of this NetworkAdapterList.
        :type network_adapters: List[NetworkAdapterDetails]
        """

        self._network_adapters = network_adapters
