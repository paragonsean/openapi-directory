# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.machine_series import MachineSeries
from openapi_server import util


class MachinePreferences(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, allowed_machine_series: List[MachineSeries]=None):
        """MachinePreferences - a model defined in OpenAPI

        :param allowed_machine_series: The allowed_machine_series of this MachinePreferences.
        """
        self.openapi_types = {
            'allowed_machine_series': List[MachineSeries]
        }

        self.attribute_map = {
            'allowed_machine_series': 'allowedMachineSeries'
        }

        self._allowed_machine_series = allowed_machine_series

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MachinePreferences':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MachinePreferences of this MachinePreferences.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allowed_machine_series(self):
        """Gets the allowed_machine_series of this MachinePreferences.

        Compute Engine machine series to consider for insights and recommendations. If empty, no restriction is applied on the machine series.

        :return: The allowed_machine_series of this MachinePreferences.
        :rtype: List[MachineSeries]
        """
        return self._allowed_machine_series

    @allowed_machine_series.setter
    def allowed_machine_series(self, allowed_machine_series):
        """Sets the allowed_machine_series of this MachinePreferences.

        Compute Engine machine series to consider for insights and recommendations. If empty, no restriction is applied on the machine series.

        :param allowed_machine_series: The allowed_machine_series of this MachinePreferences.
        :type allowed_machine_series: List[MachineSeries]
        """

        self._allowed_machine_series = allowed_machine_series
