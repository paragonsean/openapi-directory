# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.network_connection_list import NetworkConnectionList
from openapi_server import util


class RuntimeNetworkInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, connections: NetworkConnectionList=None, netstat: str=None, netstat_time: datetime=None):
        """RuntimeNetworkInfo - a model defined in OpenAPI

        :param connections: The connections of this RuntimeNetworkInfo.
        :param netstat: The netstat of this RuntimeNetworkInfo.
        :param netstat_time: The netstat_time of this RuntimeNetworkInfo.
        """
        self.openapi_types = {
            'connections': NetworkConnectionList,
            'netstat': str,
            'netstat_time': datetime
        }

        self.attribute_map = {
            'connections': 'connections',
            'netstat': 'netstat',
            'netstat_time': 'netstatTime'
        }

        self._connections = connections
        self._netstat = netstat
        self._netstat_time = netstat_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RuntimeNetworkInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RuntimeNetworkInfo of this RuntimeNetworkInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def connections(self):
        """Gets the connections of this RuntimeNetworkInfo.


        :return: The connections of this RuntimeNetworkInfo.
        :rtype: NetworkConnectionList
        """
        return self._connections

    @connections.setter
    def connections(self, connections):
        """Sets the connections of this RuntimeNetworkInfo.


        :param connections: The connections of this RuntimeNetworkInfo.
        :type connections: NetworkConnectionList
        """

        self._connections = connections

    @property
    def netstat(self):
        """Gets the netstat of this RuntimeNetworkInfo.

        Netstat (raw, OS-agnostic).

        :return: The netstat of this RuntimeNetworkInfo.
        :rtype: str
        """
        return self._netstat

    @netstat.setter
    def netstat(self, netstat):
        """Sets the netstat of this RuntimeNetworkInfo.

        Netstat (raw, OS-agnostic).

        :param netstat: The netstat of this RuntimeNetworkInfo.
        :type netstat: str
        """

        self._netstat = netstat

    @property
    def netstat_time(self):
        """Gets the netstat_time of this RuntimeNetworkInfo.


        :return: The netstat_time of this RuntimeNetworkInfo.
        :rtype: datetime
        """
        return self._netstat_time

    @netstat_time.setter
    def netstat_time(self, netstat_time):
        """Sets the netstat_time of this RuntimeNetworkInfo.


        :param netstat_time: The netstat_time of this RuntimeNetworkInfo.
        :type netstat_time: datetime
        """

        self._netstat_time = netstat_time
