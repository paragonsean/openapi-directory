# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FitDescriptor(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, fit_level: str=None):
        """FitDescriptor - a model defined in OpenAPI

        :param fit_level: The fit_level of this FitDescriptor.
        """
        self.openapi_types = {
            'fit_level': str
        }

        self.attribute_map = {
            'fit_level': 'fitLevel'
        }

        self._fit_level = fit_level

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FitDescriptor':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FitDescriptor of this FitDescriptor.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def fit_level(self):
        """Gets the fit_level of this FitDescriptor.

        Fit level.

        :return: The fit_level of this FitDescriptor.
        :rtype: str
        """
        return self._fit_level

    @fit_level.setter
    def fit_level(self, fit_level):
        """Sets the fit_level of this FitDescriptor.

        Fit level.

        :param fit_level: The fit_level of this FitDescriptor.
        :type fit_level: str
        """
        allowed_values = ["FIT_LEVEL_UNSPECIFIED", "FIT", "NO_FIT", "REQUIRES_EFFORT"]  # noqa: E501
        if fit_level not in allowed_values:
            raise ValueError(
                "Invalid value for `fit_level` ({0}), must be one of {1}"
                .format(fit_level, allowed_values)
            )

        self._fit_level = fit_level
