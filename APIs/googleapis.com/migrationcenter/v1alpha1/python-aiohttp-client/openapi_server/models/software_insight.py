# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.detected_software import DetectedSoftware
from openapi_server import util


class SoftwareInsight(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, detected_software: DetectedSoftware=None):
        """SoftwareInsight - a model defined in OpenAPI

        :param detected_software: The detected_software of this SoftwareInsight.
        """
        self.openapi_types = {
            'detected_software': DetectedSoftware
        }

        self.attribute_map = {
            'detected_software': 'detectedSoftware'
        }

        self._detected_software = detected_software

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SoftwareInsight':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SoftwareInsight of this SoftwareInsight.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def detected_software(self):
        """Gets the detected_software of this SoftwareInsight.


        :return: The detected_software of this SoftwareInsight.
        :rtype: DetectedSoftware
        """
        return self._detected_software

    @detected_software.setter
    def detected_software(self, detected_software):
        """Sets the detected_software of this SoftwareInsight.


        :param detected_software: The detected_software of this SoftwareInsight.
        :type detected_software: DetectedSoftware
        """

        self._detected_software = detected_software
