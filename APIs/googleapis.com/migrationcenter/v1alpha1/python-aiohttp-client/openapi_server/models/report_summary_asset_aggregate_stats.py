# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.report_summary_chart_data import ReportSummaryChartData
from openapi_server.models.report_summary_histogram_chart_data import ReportSummaryHistogramChartData
from openapi_server.models.report_summary_utilization_chart_data import ReportSummaryUtilizationChartData
from openapi_server import util


class ReportSummaryAssetAggregateStats(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, asset_age: ReportSummaryChartData=None, core_count_histogram: ReportSummaryHistogramChartData=None, memory_bytes_histogram: ReportSummaryHistogramChartData=None, memory_utilization: ReportSummaryChartData=None, memory_utilization_chart: ReportSummaryUtilizationChartData=None, operating_system: ReportSummaryChartData=None, storage_bytes_histogram: ReportSummaryHistogramChartData=None, storage_utilization: ReportSummaryChartData=None, storage_utilization_chart: ReportSummaryUtilizationChartData=None, total_assets: str=None, total_cores: str=None, total_memory_bytes: str=None, total_storage_bytes: str=None):
        """ReportSummaryAssetAggregateStats - a model defined in OpenAPI

        :param asset_age: The asset_age of this ReportSummaryAssetAggregateStats.
        :param core_count_histogram: The core_count_histogram of this ReportSummaryAssetAggregateStats.
        :param memory_bytes_histogram: The memory_bytes_histogram of this ReportSummaryAssetAggregateStats.
        :param memory_utilization: The memory_utilization of this ReportSummaryAssetAggregateStats.
        :param memory_utilization_chart: The memory_utilization_chart of this ReportSummaryAssetAggregateStats.
        :param operating_system: The operating_system of this ReportSummaryAssetAggregateStats.
        :param storage_bytes_histogram: The storage_bytes_histogram of this ReportSummaryAssetAggregateStats.
        :param storage_utilization: The storage_utilization of this ReportSummaryAssetAggregateStats.
        :param storage_utilization_chart: The storage_utilization_chart of this ReportSummaryAssetAggregateStats.
        :param total_assets: The total_assets of this ReportSummaryAssetAggregateStats.
        :param total_cores: The total_cores of this ReportSummaryAssetAggregateStats.
        :param total_memory_bytes: The total_memory_bytes of this ReportSummaryAssetAggregateStats.
        :param total_storage_bytes: The total_storage_bytes of this ReportSummaryAssetAggregateStats.
        """
        self.openapi_types = {
            'asset_age': ReportSummaryChartData,
            'core_count_histogram': ReportSummaryHistogramChartData,
            'memory_bytes_histogram': ReportSummaryHistogramChartData,
            'memory_utilization': ReportSummaryChartData,
            'memory_utilization_chart': ReportSummaryUtilizationChartData,
            'operating_system': ReportSummaryChartData,
            'storage_bytes_histogram': ReportSummaryHistogramChartData,
            'storage_utilization': ReportSummaryChartData,
            'storage_utilization_chart': ReportSummaryUtilizationChartData,
            'total_assets': str,
            'total_cores': str,
            'total_memory_bytes': str,
            'total_storage_bytes': str
        }

        self.attribute_map = {
            'asset_age': 'assetAge',
            'core_count_histogram': 'coreCountHistogram',
            'memory_bytes_histogram': 'memoryBytesHistogram',
            'memory_utilization': 'memoryUtilization',
            'memory_utilization_chart': 'memoryUtilizationChart',
            'operating_system': 'operatingSystem',
            'storage_bytes_histogram': 'storageBytesHistogram',
            'storage_utilization': 'storageUtilization',
            'storage_utilization_chart': 'storageUtilizationChart',
            'total_assets': 'totalAssets',
            'total_cores': 'totalCores',
            'total_memory_bytes': 'totalMemoryBytes',
            'total_storage_bytes': 'totalStorageBytes'
        }

        self._asset_age = asset_age
        self._core_count_histogram = core_count_histogram
        self._memory_bytes_histogram = memory_bytes_histogram
        self._memory_utilization = memory_utilization
        self._memory_utilization_chart = memory_utilization_chart
        self._operating_system = operating_system
        self._storage_bytes_histogram = storage_bytes_histogram
        self._storage_utilization = storage_utilization
        self._storage_utilization_chart = storage_utilization_chart
        self._total_assets = total_assets
        self._total_cores = total_cores
        self._total_memory_bytes = total_memory_bytes
        self._total_storage_bytes = total_storage_bytes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReportSummaryAssetAggregateStats':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReportSummaryAssetAggregateStats of this ReportSummaryAssetAggregateStats.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def asset_age(self):
        """Gets the asset_age of this ReportSummaryAssetAggregateStats.


        :return: The asset_age of this ReportSummaryAssetAggregateStats.
        :rtype: ReportSummaryChartData
        """
        return self._asset_age

    @asset_age.setter
    def asset_age(self, asset_age):
        """Sets the asset_age of this ReportSummaryAssetAggregateStats.


        :param asset_age: The asset_age of this ReportSummaryAssetAggregateStats.
        :type asset_age: ReportSummaryChartData
        """

        self._asset_age = asset_age

    @property
    def core_count_histogram(self):
        """Gets the core_count_histogram of this ReportSummaryAssetAggregateStats.


        :return: The core_count_histogram of this ReportSummaryAssetAggregateStats.
        :rtype: ReportSummaryHistogramChartData
        """
        return self._core_count_histogram

    @core_count_histogram.setter
    def core_count_histogram(self, core_count_histogram):
        """Sets the core_count_histogram of this ReportSummaryAssetAggregateStats.


        :param core_count_histogram: The core_count_histogram of this ReportSummaryAssetAggregateStats.
        :type core_count_histogram: ReportSummaryHistogramChartData
        """

        self._core_count_histogram = core_count_histogram

    @property
    def memory_bytes_histogram(self):
        """Gets the memory_bytes_histogram of this ReportSummaryAssetAggregateStats.


        :return: The memory_bytes_histogram of this ReportSummaryAssetAggregateStats.
        :rtype: ReportSummaryHistogramChartData
        """
        return self._memory_bytes_histogram

    @memory_bytes_histogram.setter
    def memory_bytes_histogram(self, memory_bytes_histogram):
        """Sets the memory_bytes_histogram of this ReportSummaryAssetAggregateStats.


        :param memory_bytes_histogram: The memory_bytes_histogram of this ReportSummaryAssetAggregateStats.
        :type memory_bytes_histogram: ReportSummaryHistogramChartData
        """

        self._memory_bytes_histogram = memory_bytes_histogram

    @property
    def memory_utilization(self):
        """Gets the memory_utilization of this ReportSummaryAssetAggregateStats.


        :return: The memory_utilization of this ReportSummaryAssetAggregateStats.
        :rtype: ReportSummaryChartData
        """
        return self._memory_utilization

    @memory_utilization.setter
    def memory_utilization(self, memory_utilization):
        """Sets the memory_utilization of this ReportSummaryAssetAggregateStats.


        :param memory_utilization: The memory_utilization of this ReportSummaryAssetAggregateStats.
        :type memory_utilization: ReportSummaryChartData
        """

        self._memory_utilization = memory_utilization

    @property
    def memory_utilization_chart(self):
        """Gets the memory_utilization_chart of this ReportSummaryAssetAggregateStats.


        :return: The memory_utilization_chart of this ReportSummaryAssetAggregateStats.
        :rtype: ReportSummaryUtilizationChartData
        """
        return self._memory_utilization_chart

    @memory_utilization_chart.setter
    def memory_utilization_chart(self, memory_utilization_chart):
        """Sets the memory_utilization_chart of this ReportSummaryAssetAggregateStats.


        :param memory_utilization_chart: The memory_utilization_chart of this ReportSummaryAssetAggregateStats.
        :type memory_utilization_chart: ReportSummaryUtilizationChartData
        """

        self._memory_utilization_chart = memory_utilization_chart

    @property
    def operating_system(self):
        """Gets the operating_system of this ReportSummaryAssetAggregateStats.


        :return: The operating_system of this ReportSummaryAssetAggregateStats.
        :rtype: ReportSummaryChartData
        """
        return self._operating_system

    @operating_system.setter
    def operating_system(self, operating_system):
        """Sets the operating_system of this ReportSummaryAssetAggregateStats.


        :param operating_system: The operating_system of this ReportSummaryAssetAggregateStats.
        :type operating_system: ReportSummaryChartData
        """

        self._operating_system = operating_system

    @property
    def storage_bytes_histogram(self):
        """Gets the storage_bytes_histogram of this ReportSummaryAssetAggregateStats.


        :return: The storage_bytes_histogram of this ReportSummaryAssetAggregateStats.
        :rtype: ReportSummaryHistogramChartData
        """
        return self._storage_bytes_histogram

    @storage_bytes_histogram.setter
    def storage_bytes_histogram(self, storage_bytes_histogram):
        """Sets the storage_bytes_histogram of this ReportSummaryAssetAggregateStats.


        :param storage_bytes_histogram: The storage_bytes_histogram of this ReportSummaryAssetAggregateStats.
        :type storage_bytes_histogram: ReportSummaryHistogramChartData
        """

        self._storage_bytes_histogram = storage_bytes_histogram

    @property
    def storage_utilization(self):
        """Gets the storage_utilization of this ReportSummaryAssetAggregateStats.


        :return: The storage_utilization of this ReportSummaryAssetAggregateStats.
        :rtype: ReportSummaryChartData
        """
        return self._storage_utilization

    @storage_utilization.setter
    def storage_utilization(self, storage_utilization):
        """Sets the storage_utilization of this ReportSummaryAssetAggregateStats.


        :param storage_utilization: The storage_utilization of this ReportSummaryAssetAggregateStats.
        :type storage_utilization: ReportSummaryChartData
        """

        self._storage_utilization = storage_utilization

    @property
    def storage_utilization_chart(self):
        """Gets the storage_utilization_chart of this ReportSummaryAssetAggregateStats.


        :return: The storage_utilization_chart of this ReportSummaryAssetAggregateStats.
        :rtype: ReportSummaryUtilizationChartData
        """
        return self._storage_utilization_chart

    @storage_utilization_chart.setter
    def storage_utilization_chart(self, storage_utilization_chart):
        """Sets the storage_utilization_chart of this ReportSummaryAssetAggregateStats.


        :param storage_utilization_chart: The storage_utilization_chart of this ReportSummaryAssetAggregateStats.
        :type storage_utilization_chart: ReportSummaryUtilizationChartData
        """

        self._storage_utilization_chart = storage_utilization_chart

    @property
    def total_assets(self):
        """Gets the total_assets of this ReportSummaryAssetAggregateStats.

        Count of the number of unique assets in this collection.

        :return: The total_assets of this ReportSummaryAssetAggregateStats.
        :rtype: str
        """
        return self._total_assets

    @total_assets.setter
    def total_assets(self, total_assets):
        """Sets the total_assets of this ReportSummaryAssetAggregateStats.

        Count of the number of unique assets in this collection.

        :param total_assets: The total_assets of this ReportSummaryAssetAggregateStats.
        :type total_assets: str
        """

        self._total_assets = total_assets

    @property
    def total_cores(self):
        """Gets the total_cores of this ReportSummaryAssetAggregateStats.

        Sum of the CPU core count of all the assets in this collection.

        :return: The total_cores of this ReportSummaryAssetAggregateStats.
        :rtype: str
        """
        return self._total_cores

    @total_cores.setter
    def total_cores(self, total_cores):
        """Sets the total_cores of this ReportSummaryAssetAggregateStats.

        Sum of the CPU core count of all the assets in this collection.

        :param total_cores: The total_cores of this ReportSummaryAssetAggregateStats.
        :type total_cores: str
        """

        self._total_cores = total_cores

    @property
    def total_memory_bytes(self):
        """Gets the total_memory_bytes of this ReportSummaryAssetAggregateStats.

        Sum of the memory in bytes of all the assets in this collection.

        :return: The total_memory_bytes of this ReportSummaryAssetAggregateStats.
        :rtype: str
        """
        return self._total_memory_bytes

    @total_memory_bytes.setter
    def total_memory_bytes(self, total_memory_bytes):
        """Sets the total_memory_bytes of this ReportSummaryAssetAggregateStats.

        Sum of the memory in bytes of all the assets in this collection.

        :param total_memory_bytes: The total_memory_bytes of this ReportSummaryAssetAggregateStats.
        :type total_memory_bytes: str
        """

        self._total_memory_bytes = total_memory_bytes

    @property
    def total_storage_bytes(self):
        """Gets the total_storage_bytes of this ReportSummaryAssetAggregateStats.

        Sum of persistent storage in bytes of all the assets in this collection.

        :return: The total_storage_bytes of this ReportSummaryAssetAggregateStats.
        :rtype: str
        """
        return self._total_storage_bytes

    @total_storage_bytes.setter
    def total_storage_bytes(self, total_storage_bytes):
        """Sets the total_storage_bytes of this ReportSummaryAssetAggregateStats.

        Sum of persistent storage in bytes of all the assets in this collection.

        :param total_storage_bytes: The total_storage_bytes of this ReportSummaryAssetAggregateStats.
        :type total_storage_bytes: str
        """

        self._total_storage_bytes = total_storage_bytes
