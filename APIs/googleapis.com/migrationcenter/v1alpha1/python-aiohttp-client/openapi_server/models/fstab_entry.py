# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FstabEntry(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, file: str=None, freq: int=None, mntops: str=None, passno: int=None, spec: str=None, vfstype: str=None):
        """FstabEntry - a model defined in OpenAPI

        :param file: The file of this FstabEntry.
        :param freq: The freq of this FstabEntry.
        :param mntops: The mntops of this FstabEntry.
        :param passno: The passno of this FstabEntry.
        :param spec: The spec of this FstabEntry.
        :param vfstype: The vfstype of this FstabEntry.
        """
        self.openapi_types = {
            'file': str,
            'freq': int,
            'mntops': str,
            'passno': int,
            'spec': str,
            'vfstype': str
        }

        self.attribute_map = {
            'file': 'file',
            'freq': 'freq',
            'mntops': 'mntops',
            'passno': 'passno',
            'spec': 'spec',
            'vfstype': 'vfstype'
        }

        self._file = file
        self._freq = freq
        self._mntops = mntops
        self._passno = passno
        self._spec = spec
        self._vfstype = vfstype

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FstabEntry':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FstabEntry of this FstabEntry.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def file(self):
        """Gets the file of this FstabEntry.

        The mount point for the filesystem.

        :return: The file of this FstabEntry.
        :rtype: str
        """
        return self._file

    @file.setter
    def file(self, file):
        """Sets the file of this FstabEntry.

        The mount point for the filesystem.

        :param file: The file of this FstabEntry.
        :type file: str
        """

        self._file = file

    @property
    def freq(self):
        """Gets the freq of this FstabEntry.

        Used by dump to determine which filesystems need to be dumped.

        :return: The freq of this FstabEntry.
        :rtype: int
        """
        return self._freq

    @freq.setter
    def freq(self, freq):
        """Sets the freq of this FstabEntry.

        Used by dump to determine which filesystems need to be dumped.

        :param freq: The freq of this FstabEntry.
        :type freq: int
        """

        self._freq = freq

    @property
    def mntops(self):
        """Gets the mntops of this FstabEntry.

        Mount options associated with the filesystem.

        :return: The mntops of this FstabEntry.
        :rtype: str
        """
        return self._mntops

    @mntops.setter
    def mntops(self, mntops):
        """Sets the mntops of this FstabEntry.

        Mount options associated with the filesystem.

        :param mntops: The mntops of this FstabEntry.
        :type mntops: str
        """

        self._mntops = mntops

    @property
    def passno(self):
        """Gets the passno of this FstabEntry.

        Used by the fsck(8) program to determine the order in which filesystem checks are done at reboot time.

        :return: The passno of this FstabEntry.
        :rtype: int
        """
        return self._passno

    @passno.setter
    def passno(self, passno):
        """Sets the passno of this FstabEntry.

        Used by the fsck(8) program to determine the order in which filesystem checks are done at reboot time.

        :param passno: The passno of this FstabEntry.
        :type passno: int
        """

        self._passno = passno

    @property
    def spec(self):
        """Gets the spec of this FstabEntry.

        The block special device or remote filesystem to be mounted.

        :return: The spec of this FstabEntry.
        :rtype: str
        """
        return self._spec

    @spec.setter
    def spec(self, spec):
        """Sets the spec of this FstabEntry.

        The block special device or remote filesystem to be mounted.

        :param spec: The spec of this FstabEntry.
        :type spec: str
        """

        self._spec = spec

    @property
    def vfstype(self):
        """Gets the vfstype of this FstabEntry.

        The type of the filesystem.

        :return: The vfstype of this FstabEntry.
        :rtype: str
        """
        return self._vfstype

    @vfstype.setter
    def vfstype(self, vfstype):
        """Sets the vfstype of this FstabEntry.

        The type of the filesystem.

        :param vfstype: The vfstype of this FstabEntry.
        :type vfstype: str
        """

        self._vfstype = vfstype
