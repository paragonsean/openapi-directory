# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.insight import Insight
from openapi_server import util


class InsightList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, insights: List[Insight]=None, update_time: str=None):
        """InsightList - a model defined in OpenAPI

        :param insights: The insights of this InsightList.
        :param update_time: The update_time of this InsightList.
        """
        self.openapi_types = {
            'insights': List[Insight],
            'update_time': str
        }

        self.attribute_map = {
            'insights': 'insights',
            'update_time': 'updateTime'
        }

        self._insights = insights
        self._update_time = update_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InsightList':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InsightList of this InsightList.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def insights(self):
        """Gets the insights of this InsightList.

        Output only. Insights of the list.

        :return: The insights of this InsightList.
        :rtype: List[Insight]
        """
        return self._insights

    @insights.setter
    def insights(self, insights):
        """Sets the insights of this InsightList.

        Output only. Insights of the list.

        :param insights: The insights of this InsightList.
        :type insights: List[Insight]
        """

        self._insights = insights

    @property
    def update_time(self):
        """Gets the update_time of this InsightList.

        Output only. Update timestamp.

        :return: The update_time of this InsightList.
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this InsightList.

        Output only. Update timestamp.

        :param update_time: The update_time of this InsightList.
        :type update_time: str
        """

        self._update_time = update_time
