# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.network_address_list import NetworkAddressList
from openapi_server import util


class NetworkAdapterDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, adapter_type: str=None, addresses: NetworkAddressList=None, mac_address: str=None):
        """NetworkAdapterDetails - a model defined in OpenAPI

        :param adapter_type: The adapter_type of this NetworkAdapterDetails.
        :param addresses: The addresses of this NetworkAdapterDetails.
        :param mac_address: The mac_address of this NetworkAdapterDetails.
        """
        self.openapi_types = {
            'adapter_type': str,
            'addresses': NetworkAddressList,
            'mac_address': str
        }

        self.attribute_map = {
            'adapter_type': 'adapterType',
            'addresses': 'addresses',
            'mac_address': 'macAddress'
        }

        self._adapter_type = adapter_type
        self._addresses = addresses
        self._mac_address = mac_address

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NetworkAdapterDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NetworkAdapterDetails of this NetworkAdapterDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def adapter_type(self):
        """Gets the adapter_type of this NetworkAdapterDetails.

        Network adapter type (e.g. VMXNET3).

        :return: The adapter_type of this NetworkAdapterDetails.
        :rtype: str
        """
        return self._adapter_type

    @adapter_type.setter
    def adapter_type(self, adapter_type):
        """Sets the adapter_type of this NetworkAdapterDetails.

        Network adapter type (e.g. VMXNET3).

        :param adapter_type: The adapter_type of this NetworkAdapterDetails.
        :type adapter_type: str
        """

        self._adapter_type = adapter_type

    @property
    def addresses(self):
        """Gets the addresses of this NetworkAdapterDetails.


        :return: The addresses of this NetworkAdapterDetails.
        :rtype: NetworkAddressList
        """
        return self._addresses

    @addresses.setter
    def addresses(self, addresses):
        """Sets the addresses of this NetworkAdapterDetails.


        :param addresses: The addresses of this NetworkAdapterDetails.
        :type addresses: NetworkAddressList
        """

        self._addresses = addresses

    @property
    def mac_address(self):
        """Gets the mac_address of this NetworkAdapterDetails.

        MAC address.

        :return: The mac_address of this NetworkAdapterDetails.
        :rtype: str
        """
        return self._mac_address

    @mac_address.setter
    def mac_address(self, mac_address):
        """Sets the mac_address of this NetworkAdapterDetails.

        MAC address.

        :param mac_address: The mac_address of this NetworkAdapterDetails.
        :type mac_address: str
        """

        self._mac_address = mac_address
