# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class VmwareDiskConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, backing_type: str=None, rdm_compatibility_mode: str=None, shared: bool=None, vmdk_disk_mode: str=None):
        """VmwareDiskConfig - a model defined in OpenAPI

        :param backing_type: The backing_type of this VmwareDiskConfig.
        :param rdm_compatibility_mode: The rdm_compatibility_mode of this VmwareDiskConfig.
        :param shared: The shared of this VmwareDiskConfig.
        :param vmdk_disk_mode: The vmdk_disk_mode of this VmwareDiskConfig.
        """
        self.openapi_types = {
            'backing_type': str,
            'rdm_compatibility_mode': str,
            'shared': bool,
            'vmdk_disk_mode': str
        }

        self.attribute_map = {
            'backing_type': 'backingType',
            'rdm_compatibility_mode': 'rdmCompatibilityMode',
            'shared': 'shared',
            'vmdk_disk_mode': 'vmdkDiskMode'
        }

        self._backing_type = backing_type
        self._rdm_compatibility_mode = rdm_compatibility_mode
        self._shared = shared
        self._vmdk_disk_mode = vmdk_disk_mode

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VmwareDiskConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VmwareDiskConfig of this VmwareDiskConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def backing_type(self):
        """Gets the backing_type of this VmwareDiskConfig.

        VMDK backing type.

        :return: The backing_type of this VmwareDiskConfig.
        :rtype: str
        """
        return self._backing_type

    @backing_type.setter
    def backing_type(self, backing_type):
        """Sets the backing_type of this VmwareDiskConfig.

        VMDK backing type.

        :param backing_type: The backing_type of this VmwareDiskConfig.
        :type backing_type: str
        """
        allowed_values = ["BACKING_TYPE_UNSPECIFIED", "BACKING_TYPE_FLAT_V1", "BACKING_TYPE_FLAT_V2", "BACKING_TYPE_PMEM", "BACKING_TYPE_RDM_V1", "BACKING_TYPE_RDM_V2", "BACKING_TYPE_SESPARSE", "BACKING_TYPE_SESPARSE_V1", "BACKING_TYPE_SESPARSE_V2"]  # noqa: E501
        if backing_type not in allowed_values:
            raise ValueError(
                "Invalid value for `backing_type` ({0}), must be one of {1}"
                .format(backing_type, allowed_values)
            )

        self._backing_type = backing_type

    @property
    def rdm_compatibility_mode(self):
        """Gets the rdm_compatibility_mode of this VmwareDiskConfig.

        RDM compatibility mode.

        :return: The rdm_compatibility_mode of this VmwareDiskConfig.
        :rtype: str
        """
        return self._rdm_compatibility_mode

    @rdm_compatibility_mode.setter
    def rdm_compatibility_mode(self, rdm_compatibility_mode):
        """Sets the rdm_compatibility_mode of this VmwareDiskConfig.

        RDM compatibility mode.

        :param rdm_compatibility_mode: The rdm_compatibility_mode of this VmwareDiskConfig.
        :type rdm_compatibility_mode: str
        """

        self._rdm_compatibility_mode = rdm_compatibility_mode

    @property
    def shared(self):
        """Gets the shared of this VmwareDiskConfig.

        Is VMDK shared with other VMs.

        :return: The shared of this VmwareDiskConfig.
        :rtype: bool
        """
        return self._shared

    @shared.setter
    def shared(self, shared):
        """Sets the shared of this VmwareDiskConfig.

        Is VMDK shared with other VMs.

        :param shared: The shared of this VmwareDiskConfig.
        :type shared: bool
        """

        self._shared = shared

    @property
    def vmdk_disk_mode(self):
        """Gets the vmdk_disk_mode of this VmwareDiskConfig.

        VMDK disk mode.

        :return: The vmdk_disk_mode of this VmwareDiskConfig.
        :rtype: str
        """
        return self._vmdk_disk_mode

    @vmdk_disk_mode.setter
    def vmdk_disk_mode(self, vmdk_disk_mode):
        """Sets the vmdk_disk_mode of this VmwareDiskConfig.

        VMDK disk mode.

        :param vmdk_disk_mode: The vmdk_disk_mode of this VmwareDiskConfig.
        :type vmdk_disk_mode: str
        """

        self._vmdk_disk_mode = vmdk_disk_mode
