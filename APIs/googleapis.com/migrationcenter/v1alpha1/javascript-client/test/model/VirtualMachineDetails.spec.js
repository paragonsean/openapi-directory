/**
 * Migration Center API
 * A unified platform that helps you accelerate your end-to-end cloud journey from your current on-premises or cloud environments to Google Cloud.
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MigrationCenterApi);
  }
}(this, function(expect, MigrationCenterApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MigrationCenterApi.VirtualMachineDetails();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('VirtualMachineDetails', function() {
    it('should create an instance of VirtualMachineDetails', function() {
      // uncomment below and update the code to test VirtualMachineDetails
      //var instance = new MigrationCenterApi.VirtualMachineDetails();
      //expect(instance).to.be.a(MigrationCenterApi.VirtualMachineDetails);
    });

    it('should have the property coreCount (base name: "coreCount")', function() {
      // uncomment below and update the code to test the property coreCount
      //var instance = new MigrationCenterApi.VirtualMachineDetails();
      //expect(instance).to.be();
    });

    it('should have the property createTime (base name: "createTime")', function() {
      // uncomment below and update the code to test the property createTime
      //var instance = new MigrationCenterApi.VirtualMachineDetails();
      //expect(instance).to.be();
    });

    it('should have the property guestOs (base name: "guestOs")', function() {
      // uncomment below and update the code to test the property guestOs
      //var instance = new MigrationCenterApi.VirtualMachineDetails();
      //expect(instance).to.be();
    });

    it('should have the property memoryMb (base name: "memoryMb")', function() {
      // uncomment below and update the code to test the property memoryMb
      //var instance = new MigrationCenterApi.VirtualMachineDetails();
      //expect(instance).to.be();
    });

    it('should have the property osFamily (base name: "osFamily")', function() {
      // uncomment below and update the code to test the property osFamily
      //var instance = new MigrationCenterApi.VirtualMachineDetails();
      //expect(instance).to.be();
    });

    it('should have the property osName (base name: "osName")', function() {
      // uncomment below and update the code to test the property osName
      //var instance = new MigrationCenterApi.VirtualMachineDetails();
      //expect(instance).to.be();
    });

    it('should have the property osVersion (base name: "osVersion")', function() {
      // uncomment below and update the code to test the property osVersion
      //var instance = new MigrationCenterApi.VirtualMachineDetails();
      //expect(instance).to.be();
    });

    it('should have the property platform (base name: "platform")', function() {
      // uncomment below and update the code to test the property platform
      //var instance = new MigrationCenterApi.VirtualMachineDetails();
      //expect(instance).to.be();
    });

    it('should have the property powerState (base name: "powerState")', function() {
      // uncomment below and update the code to test the property powerState
      //var instance = new MigrationCenterApi.VirtualMachineDetails();
      //expect(instance).to.be();
    });

    it('should have the property vcenterFolder (base name: "vcenterFolder")', function() {
      // uncomment below and update the code to test the property vcenterFolder
      //var instance = new MigrationCenterApi.VirtualMachineDetails();
      //expect(instance).to.be();
    });

    it('should have the property vcenterUrl (base name: "vcenterUrl")', function() {
      // uncomment below and update the code to test the property vcenterUrl
      //var instance = new MigrationCenterApi.VirtualMachineDetails();
      //expect(instance).to.be();
    });

    it('should have the property vcenterVmId (base name: "vcenterVmId")', function() {
      // uncomment below and update the code to test the property vcenterVmId
      //var instance = new MigrationCenterApi.VirtualMachineDetails();
      //expect(instance).to.be();
    });

    it('should have the property vmArchitecture (base name: "vmArchitecture")', function() {
      // uncomment below and update the code to test the property vmArchitecture
      //var instance = new MigrationCenterApi.VirtualMachineDetails();
      //expect(instance).to.be();
    });

    it('should have the property vmDisks (base name: "vmDisks")', function() {
      // uncomment below and update the code to test the property vmDisks
      //var instance = new MigrationCenterApi.VirtualMachineDetails();
      //expect(instance).to.be();
    });

    it('should have the property vmName (base name: "vmName")', function() {
      // uncomment below and update the code to test the property vmName
      //var instance = new MigrationCenterApi.VirtualMachineDetails();
      //expect(instance).to.be();
    });

    it('should have the property vmNetwork (base name: "vmNetwork")', function() {
      // uncomment below and update the code to test the property vmNetwork
      //var instance = new MigrationCenterApi.VirtualMachineDetails();
      //expect(instance).to.be();
    });

    it('should have the property vmUuid (base name: "vmUuid")', function() {
      // uncomment below and update the code to test the property vmUuid
      //var instance = new MigrationCenterApi.VirtualMachineDetails();
      //expect(instance).to.be();
    });

  });

}));
