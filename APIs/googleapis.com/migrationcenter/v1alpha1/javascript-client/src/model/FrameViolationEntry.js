/**
 * Migration Center API
 * A unified platform that helps you accelerate your end-to-end cloud journey from your current on-premises or cloud environments to Google Cloud.
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The FrameViolationEntry model module.
 * @module model/FrameViolationEntry
 * @version v1alpha1
 */
class FrameViolationEntry {
    /**
     * Constructs a new <code>FrameViolationEntry</code>.
     * A resource that contains a single violation of a reported &#x60;AssetFrame&#x60; resource.
     * @alias module:model/FrameViolationEntry
     */
    constructor() { 
        
        FrameViolationEntry.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FrameViolationEntry</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FrameViolationEntry} obj Optional instance to populate.
     * @return {module:model/FrameViolationEntry} The populated <code>FrameViolationEntry</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FrameViolationEntry();

            if (data.hasOwnProperty('field')) {
                obj['field'] = ApiClient.convertToType(data['field'], 'String');
            }
            if (data.hasOwnProperty('violation')) {
                obj['violation'] = ApiClient.convertToType(data['violation'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FrameViolationEntry</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FrameViolationEntry</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['field'] && !(typeof data['field'] === 'string' || data['field'] instanceof String)) {
            throw new Error("Expected the field `field` to be a primitive type in the JSON string but got " + data['field']);
        }
        // ensure the json data is a string
        if (data['violation'] && !(typeof data['violation'] === 'string' || data['violation'] instanceof String)) {
            throw new Error("Expected the field `violation` to be a primitive type in the JSON string but got " + data['violation']);
        }

        return true;
    }


}



/**
 * The field of the original frame where the violation occurred.
 * @member {String} field
 */
FrameViolationEntry.prototype['field'] = undefined;

/**
 * A message describing the violation.
 * @member {String} violation
 */
FrameViolationEntry.prototype['violation'] = undefined;






export default FrameViolationEntry;

