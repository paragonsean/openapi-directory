/**
 * Migration Center API
 * A unified platform that helps you accelerate your end-to-end cloud journey from your current on-premises or cloud environments to Google Cloud.
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BiosDetails model module.
 * @module model/BiosDetails
 * @version v1alpha1
 */
class BiosDetails {
    /**
     * Constructs a new <code>BiosDetails</code>.
     * Details about the BIOS.
     * @alias module:model/BiosDetails
     */
    constructor() { 
        
        BiosDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BiosDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BiosDetails} obj Optional instance to populate.
     * @return {module:model/BiosDetails} The populated <code>BiosDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BiosDetails();

            if (data.hasOwnProperty('biosManufacturer')) {
                obj['biosManufacturer'] = ApiClient.convertToType(data['biosManufacturer'], 'String');
            }
            if (data.hasOwnProperty('biosName')) {
                obj['biosName'] = ApiClient.convertToType(data['biosName'], 'String');
            }
            if (data.hasOwnProperty('biosReleaseDate')) {
                obj['biosReleaseDate'] = ApiClient.convertToType(data['biosReleaseDate'], 'String');
            }
            if (data.hasOwnProperty('biosVersion')) {
                obj['biosVersion'] = ApiClient.convertToType(data['biosVersion'], 'String');
            }
            if (data.hasOwnProperty('smbiosUuid')) {
                obj['smbiosUuid'] = ApiClient.convertToType(data['smbiosUuid'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BiosDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BiosDetails</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['biosManufacturer'] && !(typeof data['biosManufacturer'] === 'string' || data['biosManufacturer'] instanceof String)) {
            throw new Error("Expected the field `biosManufacturer` to be a primitive type in the JSON string but got " + data['biosManufacturer']);
        }
        // ensure the json data is a string
        if (data['biosName'] && !(typeof data['biosName'] === 'string' || data['biosName'] instanceof String)) {
            throw new Error("Expected the field `biosName` to be a primitive type in the JSON string but got " + data['biosName']);
        }
        // ensure the json data is a string
        if (data['biosReleaseDate'] && !(typeof data['biosReleaseDate'] === 'string' || data['biosReleaseDate'] instanceof String)) {
            throw new Error("Expected the field `biosReleaseDate` to be a primitive type in the JSON string but got " + data['biosReleaseDate']);
        }
        // ensure the json data is a string
        if (data['biosVersion'] && !(typeof data['biosVersion'] === 'string' || data['biosVersion'] instanceof String)) {
            throw new Error("Expected the field `biosVersion` to be a primitive type in the JSON string but got " + data['biosVersion']);
        }
        // ensure the json data is a string
        if (data['smbiosUuid'] && !(typeof data['smbiosUuid'] === 'string' || data['smbiosUuid'] instanceof String)) {
            throw new Error("Expected the field `smbiosUuid` to be a primitive type in the JSON string but got " + data['smbiosUuid']);
        }

        return true;
    }


}



/**
 * BIOS manufacturer.
 * @member {String} biosManufacturer
 */
BiosDetails.prototype['biosManufacturer'] = undefined;

/**
 * BIOS name.
 * @member {String} biosName
 */
BiosDetails.prototype['biosName'] = undefined;

/**
 * BIOS release date.
 * @member {String} biosReleaseDate
 */
BiosDetails.prototype['biosReleaseDate'] = undefined;

/**
 * BIOS version.
 * @member {String} biosVersion
 */
BiosDetails.prototype['biosVersion'] = undefined;

/**
 * SMBIOS UUID.
 * @member {String} smbiosUuid
 */
BiosDetails.prototype['smbiosUuid'] = undefined;






export default BiosDetails;

