/**
 * Migration Center API
 * A unified platform that helps you accelerate your end-to-end cloud journey from your current on-premises or cloud environments to Google Cloud.
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ComputeEnginePreferences from './ComputeEnginePreferences';
import RegionPreferences from './RegionPreferences';
import SoleTenancyPreferences from './SoleTenancyPreferences';
import VirtualMachinePreferencesNetworkCostParameters from './VirtualMachinePreferencesNetworkCostParameters';
import VirtualMachinePreferencesSizingOptimizationCustomParameters from './VirtualMachinePreferencesSizingOptimizationCustomParameters';
import VmwareEnginePreferences from './VmwareEnginePreferences';

/**
 * The VirtualMachinePreferences model module.
 * @module model/VirtualMachinePreferences
 * @version v1alpha1
 */
class VirtualMachinePreferences {
    /**
     * Constructs a new <code>VirtualMachinePreferences</code>.
     * VirtualMachinePreferences enables you to create sets of preferences, for example, a geographical location and pricing track, for your migrated virtual machines. The set of preferences influence recommendations for migrating virtual machine assets.
     * @alias module:model/VirtualMachinePreferences
     */
    constructor() { 
        
        VirtualMachinePreferences.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VirtualMachinePreferences</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VirtualMachinePreferences} obj Optional instance to populate.
     * @return {module:model/VirtualMachinePreferences} The populated <code>VirtualMachinePreferences</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VirtualMachinePreferences();

            if (data.hasOwnProperty('commitmentPlan')) {
                obj['commitmentPlan'] = ApiClient.convertToType(data['commitmentPlan'], 'String');
            }
            if (data.hasOwnProperty('computeEnginePreferences')) {
                obj['computeEnginePreferences'] = ComputeEnginePreferences.constructFromObject(data['computeEnginePreferences']);
            }
            if (data.hasOwnProperty('networkCostParameters')) {
                obj['networkCostParameters'] = VirtualMachinePreferencesNetworkCostParameters.constructFromObject(data['networkCostParameters']);
            }
            if (data.hasOwnProperty('regionPreferences')) {
                obj['regionPreferences'] = RegionPreferences.constructFromObject(data['regionPreferences']);
            }
            if (data.hasOwnProperty('sizingOptimizationCustomParameters')) {
                obj['sizingOptimizationCustomParameters'] = VirtualMachinePreferencesSizingOptimizationCustomParameters.constructFromObject(data['sizingOptimizationCustomParameters']);
            }
            if (data.hasOwnProperty('sizingOptimizationStrategy')) {
                obj['sizingOptimizationStrategy'] = ApiClient.convertToType(data['sizingOptimizationStrategy'], 'String');
            }
            if (data.hasOwnProperty('soleTenancyPreferences')) {
                obj['soleTenancyPreferences'] = SoleTenancyPreferences.constructFromObject(data['soleTenancyPreferences']);
            }
            if (data.hasOwnProperty('targetProduct')) {
                obj['targetProduct'] = ApiClient.convertToType(data['targetProduct'], 'String');
            }
            if (data.hasOwnProperty('vmwareEnginePreferences')) {
                obj['vmwareEnginePreferences'] = VmwareEnginePreferences.constructFromObject(data['vmwareEnginePreferences']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VirtualMachinePreferences</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VirtualMachinePreferences</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['commitmentPlan'] && !(typeof data['commitmentPlan'] === 'string' || data['commitmentPlan'] instanceof String)) {
            throw new Error("Expected the field `commitmentPlan` to be a primitive type in the JSON string but got " + data['commitmentPlan']);
        }
        // validate the optional field `computeEnginePreferences`
        if (data['computeEnginePreferences']) { // data not null
          ComputeEnginePreferences.validateJSON(data['computeEnginePreferences']);
        }
        // validate the optional field `networkCostParameters`
        if (data['networkCostParameters']) { // data not null
          VirtualMachinePreferencesNetworkCostParameters.validateJSON(data['networkCostParameters']);
        }
        // validate the optional field `regionPreferences`
        if (data['regionPreferences']) { // data not null
          RegionPreferences.validateJSON(data['regionPreferences']);
        }
        // validate the optional field `sizingOptimizationCustomParameters`
        if (data['sizingOptimizationCustomParameters']) { // data not null
          VirtualMachinePreferencesSizingOptimizationCustomParameters.validateJSON(data['sizingOptimizationCustomParameters']);
        }
        // ensure the json data is a string
        if (data['sizingOptimizationStrategy'] && !(typeof data['sizingOptimizationStrategy'] === 'string' || data['sizingOptimizationStrategy'] instanceof String)) {
            throw new Error("Expected the field `sizingOptimizationStrategy` to be a primitive type in the JSON string but got " + data['sizingOptimizationStrategy']);
        }
        // validate the optional field `soleTenancyPreferences`
        if (data['soleTenancyPreferences']) { // data not null
          SoleTenancyPreferences.validateJSON(data['soleTenancyPreferences']);
        }
        // ensure the json data is a string
        if (data['targetProduct'] && !(typeof data['targetProduct'] === 'string' || data['targetProduct'] instanceof String)) {
            throw new Error("Expected the field `targetProduct` to be a primitive type in the JSON string but got " + data['targetProduct']);
        }
        // validate the optional field `vmwareEnginePreferences`
        if (data['vmwareEnginePreferences']) { // data not null
          VmwareEnginePreferences.validateJSON(data['vmwareEnginePreferences']);
        }

        return true;
    }


}



/**
 * Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with.
 * @member {module:model/VirtualMachinePreferences.CommitmentPlanEnum} commitmentPlan
 */
VirtualMachinePreferences.prototype['commitmentPlan'] = undefined;

/**
 * @member {module:model/ComputeEnginePreferences} computeEnginePreferences
 */
VirtualMachinePreferences.prototype['computeEnginePreferences'] = undefined;

/**
 * @member {module:model/VirtualMachinePreferencesNetworkCostParameters} networkCostParameters
 */
VirtualMachinePreferences.prototype['networkCostParameters'] = undefined;

/**
 * @member {module:model/RegionPreferences} regionPreferences
 */
VirtualMachinePreferences.prototype['regionPreferences'] = undefined;

/**
 * @member {module:model/VirtualMachinePreferencesSizingOptimizationCustomParameters} sizingOptimizationCustomParameters
 */
VirtualMachinePreferences.prototype['sizingOptimizationCustomParameters'] = undefined;

/**
 * Sizing optimization strategy specifies the preferred strategy used when extrapolating usage data to calculate insights and recommendations for a virtual machine. If you are unsure which value to set, a moderate sizing optimization strategy is often a good value to start with.
 * @member {module:model/VirtualMachinePreferences.SizingOptimizationStrategyEnum} sizingOptimizationStrategy
 */
VirtualMachinePreferences.prototype['sizingOptimizationStrategy'] = undefined;

/**
 * @member {module:model/SoleTenancyPreferences} soleTenancyPreferences
 */
VirtualMachinePreferences.prototype['soleTenancyPreferences'] = undefined;

/**
 * Target product for assets using this preference set. Specify either target product or business goal, but not both.
 * @member {module:model/VirtualMachinePreferences.TargetProductEnum} targetProduct
 */
VirtualMachinePreferences.prototype['targetProduct'] = undefined;

/**
 * @member {module:model/VmwareEnginePreferences} vmwareEnginePreferences
 */
VirtualMachinePreferences.prototype['vmwareEnginePreferences'] = undefined;





/**
 * Allowed values for the <code>commitmentPlan</code> property.
 * @enum {String}
 * @readonly
 */
VirtualMachinePreferences['CommitmentPlanEnum'] = {

    /**
     * value: "COMMITMENT_PLAN_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "COMMITMENT_PLAN_UNSPECIFIED",

    /**
     * value: "COMMITMENT_PLAN_NONE"
     * @const
     */
    "NONE": "COMMITMENT_PLAN_NONE",

    /**
     * value: "COMMITMENT_PLAN_ONE_YEAR"
     * @const
     */
    "ONE_YEAR": "COMMITMENT_PLAN_ONE_YEAR",

    /**
     * value: "COMMITMENT_PLAN_THREE_YEARS"
     * @const
     */
    "THREE_YEARS": "COMMITMENT_PLAN_THREE_YEARS"
};


/**
 * Allowed values for the <code>sizingOptimizationStrategy</code> property.
 * @enum {String}
 * @readonly
 */
VirtualMachinePreferences['SizingOptimizationStrategyEnum'] = {

    /**
     * value: "SIZING_OPTIMIZATION_STRATEGY_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "SIZING_OPTIMIZATION_STRATEGY_UNSPECIFIED",

    /**
     * value: "SIZING_OPTIMIZATION_STRATEGY_SAME_AS_SOURCE"
     * @const
     */
    "SAME_AS_SOURCE": "SIZING_OPTIMIZATION_STRATEGY_SAME_AS_SOURCE",

    /**
     * value: "SIZING_OPTIMIZATION_STRATEGY_MODERATE"
     * @const
     */
    "MODERATE": "SIZING_OPTIMIZATION_STRATEGY_MODERATE",

    /**
     * value: "SIZING_OPTIMIZATION_STRATEGY_AGGRESSIVE"
     * @const
     */
    "AGGRESSIVE": "SIZING_OPTIMIZATION_STRATEGY_AGGRESSIVE",

    /**
     * value: "SIZING_OPTIMIZATION_STRATEGY_CUSTOM"
     * @const
     */
    "CUSTOM": "SIZING_OPTIMIZATION_STRATEGY_CUSTOM"
};


/**
 * Allowed values for the <code>targetProduct</code> property.
 * @enum {String}
 * @readonly
 */
VirtualMachinePreferences['TargetProductEnum'] = {

    /**
     * value: "COMPUTE_MIGRATION_TARGET_PRODUCT_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "COMPUTE_MIGRATION_TARGET_PRODUCT_UNSPECIFIED",

    /**
     * value: "COMPUTE_MIGRATION_TARGET_PRODUCT_COMPUTE_ENGINE"
     * @const
     */
    "COMPUTE_ENGINE": "COMPUTE_MIGRATION_TARGET_PRODUCT_COMPUTE_ENGINE",

    /**
     * value: "COMPUTE_MIGRATION_TARGET_PRODUCT_VMWARE_ENGINE"
     * @const
     */
    "VMWARE_ENGINE": "COMPUTE_MIGRATION_TARGET_PRODUCT_VMWARE_ENGINE",

    /**
     * value: "COMPUTE_MIGRATION_TARGET_PRODUCT_SOLE_TENANCY"
     * @const
     */
    "SOLE_TENANCY": "COMPUTE_MIGRATION_TARGET_PRODUCT_SOLE_TENANCY"
};



export default VirtualMachinePreferences;

