/**
 * Migration Center API
 * A unified platform that helps you accelerate your end-to-end cloud journey from your current on-premises or cloud environments to Google Cloud.
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ImportError from './ImportError';
import ImportRowError from './ImportRowError';

/**
 * The FileValidationReport model module.
 * @module model/FileValidationReport
 * @version v1alpha1
 */
class FileValidationReport {
    /**
     * Constructs a new <code>FileValidationReport</code>.
     * A resource that aggregates the validation errors found in an import job file.
     * @alias module:model/FileValidationReport
     */
    constructor() { 
        
        FileValidationReport.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FileValidationReport</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FileValidationReport} obj Optional instance to populate.
     * @return {module:model/FileValidationReport} The populated <code>FileValidationReport</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FileValidationReport();

            if (data.hasOwnProperty('fileErrors')) {
                obj['fileErrors'] = ApiClient.convertToType(data['fileErrors'], [ImportError]);
            }
            if (data.hasOwnProperty('fileName')) {
                obj['fileName'] = ApiClient.convertToType(data['fileName'], 'String');
            }
            if (data.hasOwnProperty('partialReport')) {
                obj['partialReport'] = ApiClient.convertToType(data['partialReport'], 'Boolean');
            }
            if (data.hasOwnProperty('rowErrors')) {
                obj['rowErrors'] = ApiClient.convertToType(data['rowErrors'], [ImportRowError]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FileValidationReport</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FileValidationReport</code>.
     */
    static validateJSON(data) {
        if (data['fileErrors']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['fileErrors'])) {
                throw new Error("Expected the field `fileErrors` to be an array in the JSON data but got " + data['fileErrors']);
            }
            // validate the optional field `fileErrors` (array)
            for (const item of data['fileErrors']) {
                ImportError.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['fileName'] && !(typeof data['fileName'] === 'string' || data['fileName'] instanceof String)) {
            throw new Error("Expected the field `fileName` to be a primitive type in the JSON string but got " + data['fileName']);
        }
        if (data['rowErrors']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['rowErrors'])) {
                throw new Error("Expected the field `rowErrors` to be an array in the JSON data but got " + data['rowErrors']);
            }
            // validate the optional field `rowErrors` (array)
            for (const item of data['rowErrors']) {
                ImportRowError.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * List of file level errors.
 * @member {Array.<module:model/ImportError>} fileErrors
 */
FileValidationReport.prototype['fileErrors'] = undefined;

/**
 * The name of the file.
 * @member {String} fileName
 */
FileValidationReport.prototype['fileName'] = undefined;

/**
 * Flag indicating that processing was aborted due to maximum number of errors.
 * @member {Boolean} partialReport
 */
FileValidationReport.prototype['partialReport'] = undefined;

/**
 * Partial list of rows that encountered validation error.
 * @member {Array.<module:model/ImportRowError>} rowErrors
 */
FileValidationReport.prototype['rowErrors'] = undefined;






export default FileValidationReport;

