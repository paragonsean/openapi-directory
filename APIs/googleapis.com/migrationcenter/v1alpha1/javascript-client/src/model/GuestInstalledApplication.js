/**
 * Migration Center API
 * A unified platform that helps you accelerate your end-to-end cloud journey from your current on-premises or cloud environments to Google Cloud.
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GuestInstalledApplication model module.
 * @module model/GuestInstalledApplication
 * @version v1alpha1
 */
class GuestInstalledApplication {
    /**
     * Constructs a new <code>GuestInstalledApplication</code>.
     * Guest installed application information.
     * @alias module:model/GuestInstalledApplication
     */
    constructor() { 
        
        GuestInstalledApplication.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GuestInstalledApplication</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GuestInstalledApplication} obj Optional instance to populate.
     * @return {module:model/GuestInstalledApplication} The populated <code>GuestInstalledApplication</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GuestInstalledApplication();

            if (data.hasOwnProperty('licenses')) {
                obj['licenses'] = ApiClient.convertToType(data['licenses'], ['String']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('path')) {
                obj['path'] = ApiClient.convertToType(data['path'], 'String');
            }
            if (data.hasOwnProperty('time')) {
                obj['time'] = ApiClient.convertToType(data['time'], 'String');
            }
            if (data.hasOwnProperty('vendor')) {
                obj['vendor'] = ApiClient.convertToType(data['vendor'], 'String');
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GuestInstalledApplication</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GuestInstalledApplication</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['licenses'])) {
            throw new Error("Expected the field `licenses` to be an array in the JSON data but got " + data['licenses']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['path'] && !(typeof data['path'] === 'string' || data['path'] instanceof String)) {
            throw new Error("Expected the field `path` to be a primitive type in the JSON string but got " + data['path']);
        }
        // ensure the json data is a string
        if (data['time'] && !(typeof data['time'] === 'string' || data['time'] instanceof String)) {
            throw new Error("Expected the field `time` to be a primitive type in the JSON string but got " + data['time']);
        }
        // ensure the json data is a string
        if (data['vendor'] && !(typeof data['vendor'] === 'string' || data['vendor'] instanceof String)) {
            throw new Error("Expected the field `vendor` to be a primitive type in the JSON string but got " + data['vendor']);
        }
        // ensure the json data is a string
        if (data['version'] && !(typeof data['version'] === 'string' || data['version'] instanceof String)) {
            throw new Error("Expected the field `version` to be a primitive type in the JSON string but got " + data['version']);
        }

        return true;
    }


}



/**
 * License strings associated with the installed application.
 * @member {Array.<String>} licenses
 */
GuestInstalledApplication.prototype['licenses'] = undefined;

/**
 * Installed application name.
 * @member {String} name
 */
GuestInstalledApplication.prototype['name'] = undefined;

/**
 * Source path.
 * @member {String} path
 */
GuestInstalledApplication.prototype['path'] = undefined;

/**
 * Date application was installed.
 * @member {String} time
 */
GuestInstalledApplication.prototype['time'] = undefined;

/**
 * Installed application vendor.
 * @member {String} vendor
 */
GuestInstalledApplication.prototype['vendor'] = undefined;

/**
 * Installed application version.
 * @member {String} version
 */
GuestInstalledApplication.prototype['version'] = undefined;






export default GuestInstalledApplication;

