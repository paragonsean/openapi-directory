/**
 * Migration Center API
 * A unified platform that helps you accelerate your end-to-end cloud journey from your current on-premises or cloud environments to Google Cloud.
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AssetFrame from './AssetFrame';
import FrameViolationEntry from './FrameViolationEntry';

/**
 * The ErrorFrame model module.
 * @module model/ErrorFrame
 * @version v1alpha1
 */
class ErrorFrame {
    /**
     * Constructs a new <code>ErrorFrame</code>.
     * Message representing a frame which failed to be processed due to an error.
     * @alias module:model/ErrorFrame
     */
    constructor() { 
        
        ErrorFrame.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ErrorFrame</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ErrorFrame} obj Optional instance to populate.
     * @return {module:model/ErrorFrame} The populated <code>ErrorFrame</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ErrorFrame();

            if (data.hasOwnProperty('ingestionTime')) {
                obj['ingestionTime'] = ApiClient.convertToType(data['ingestionTime'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('originalFrame')) {
                obj['originalFrame'] = AssetFrame.constructFromObject(data['originalFrame']);
            }
            if (data.hasOwnProperty('violations')) {
                obj['violations'] = ApiClient.convertToType(data['violations'], [FrameViolationEntry]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ErrorFrame</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ErrorFrame</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['ingestionTime'] && !(typeof data['ingestionTime'] === 'string' || data['ingestionTime'] instanceof String)) {
            throw new Error("Expected the field `ingestionTime` to be a primitive type in the JSON string but got " + data['ingestionTime']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `originalFrame`
        if (data['originalFrame']) { // data not null
          AssetFrame.validateJSON(data['originalFrame']);
        }
        if (data['violations']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['violations'])) {
                throw new Error("Expected the field `violations` to be an array in the JSON data but got " + data['violations']);
            }
            // validate the optional field `violations` (array)
            for (const item of data['violations']) {
                FrameViolationEntry.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Output only. Frame ingestion time.
 * @member {String} ingestionTime
 */
ErrorFrame.prototype['ingestionTime'] = undefined;

/**
 * Output only. The identifier of the ErrorFrame.
 * @member {String} name
 */
ErrorFrame.prototype['name'] = undefined;

/**
 * @member {module:model/AssetFrame} originalFrame
 */
ErrorFrame.prototype['originalFrame'] = undefined;

/**
 * Output only. All the violations that were detected for the frame.
 * @member {Array.<module:model/FrameViolationEntry>} violations
 */
ErrorFrame.prototype['violations'] = undefined;






export default ErrorFrame;

