/**
 * Migration Center API
 * A unified platform that helps you accelerate your end-to-end cloud journey from your current on-premises or cloud environments to Google Cloud.
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DailyResourceUsageAggregation from './DailyResourceUsageAggregation';

/**
 * The AssetPerformanceData model module.
 * @module model/AssetPerformanceData
 * @version v1alpha1
 */
class AssetPerformanceData {
    /**
     * Constructs a new <code>AssetPerformanceData</code>.
     * Performance data for an asset.
     * @alias module:model/AssetPerformanceData
     */
    constructor() { 
        
        AssetPerformanceData.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AssetPerformanceData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AssetPerformanceData} obj Optional instance to populate.
     * @return {module:model/AssetPerformanceData} The populated <code>AssetPerformanceData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AssetPerformanceData();

            if (data.hasOwnProperty('dailyResourceUsageAggregations')) {
                obj['dailyResourceUsageAggregations'] = ApiClient.convertToType(data['dailyResourceUsageAggregations'], [DailyResourceUsageAggregation]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AssetPerformanceData</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AssetPerformanceData</code>.
     */
    static validateJSON(data) {
        if (data['dailyResourceUsageAggregations']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['dailyResourceUsageAggregations'])) {
                throw new Error("Expected the field `dailyResourceUsageAggregations` to be an array in the JSON data but got " + data['dailyResourceUsageAggregations']);
            }
            // validate the optional field `dailyResourceUsageAggregations` (array)
            for (const item of data['dailyResourceUsageAggregations']) {
                DailyResourceUsageAggregation.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Daily resource usage aggregations. Contains all of the data available for an asset, up to the last 420 days. Aggregations are sorted from oldest to most recent.
 * @member {Array.<module:model/DailyResourceUsageAggregation>} dailyResourceUsageAggregations
 */
AssetPerformanceData.prototype['dailyResourceUsageAggregations'] = undefined;






export default AssetPerformanceData;

