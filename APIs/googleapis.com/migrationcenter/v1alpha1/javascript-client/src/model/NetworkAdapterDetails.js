/**
 * Migration Center API
 * A unified platform that helps you accelerate your end-to-end cloud journey from your current on-premises or cloud environments to Google Cloud.
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import NetworkAddressList from './NetworkAddressList';

/**
 * The NetworkAdapterDetails model module.
 * @module model/NetworkAdapterDetails
 * @version v1alpha1
 */
class NetworkAdapterDetails {
    /**
     * Constructs a new <code>NetworkAdapterDetails</code>.
     * Details of network adapter.
     * @alias module:model/NetworkAdapterDetails
     */
    constructor() { 
        
        NetworkAdapterDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>NetworkAdapterDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NetworkAdapterDetails} obj Optional instance to populate.
     * @return {module:model/NetworkAdapterDetails} The populated <code>NetworkAdapterDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NetworkAdapterDetails();

            if (data.hasOwnProperty('adapterType')) {
                obj['adapterType'] = ApiClient.convertToType(data['adapterType'], 'String');
            }
            if (data.hasOwnProperty('addresses')) {
                obj['addresses'] = NetworkAddressList.constructFromObject(data['addresses']);
            }
            if (data.hasOwnProperty('macAddress')) {
                obj['macAddress'] = ApiClient.convertToType(data['macAddress'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NetworkAdapterDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NetworkAdapterDetails</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['adapterType'] && !(typeof data['adapterType'] === 'string' || data['adapterType'] instanceof String)) {
            throw new Error("Expected the field `adapterType` to be a primitive type in the JSON string but got " + data['adapterType']);
        }
        // validate the optional field `addresses`
        if (data['addresses']) { // data not null
          NetworkAddressList.validateJSON(data['addresses']);
        }
        // ensure the json data is a string
        if (data['macAddress'] && !(typeof data['macAddress'] === 'string' || data['macAddress'] instanceof String)) {
            throw new Error("Expected the field `macAddress` to be a primitive type in the JSON string but got " + data['macAddress']);
        }

        return true;
    }


}



/**
 * Network adapter type (e.g. VMXNET3).
 * @member {String} adapterType
 */
NetworkAdapterDetails.prototype['adapterType'] = undefined;

/**
 * @member {module:model/NetworkAddressList} addresses
 */
NetworkAdapterDetails.prototype['addresses'] = undefined;

/**
 * MAC address.
 * @member {String} macAddress
 */
NetworkAdapterDetails.prototype['macAddress'] = undefined;






export default NetworkAdapterDetails;

