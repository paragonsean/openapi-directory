/**
 * Migration Center API
 * A unified platform that helps you accelerate your end-to-end cloud journey from your current on-premises or cloud environments to Google Cloud.
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Aggregation from './Aggregation';

/**
 * The AggregateAssetsValuesRequest model module.
 * @module model/AggregateAssetsValuesRequest
 * @version v1alpha1
 */
class AggregateAssetsValuesRequest {
    /**
     * Constructs a new <code>AggregateAssetsValuesRequest</code>.
     * A request to aggregate one or more values.
     * @alias module:model/AggregateAssetsValuesRequest
     */
    constructor() { 
        
        AggregateAssetsValuesRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AggregateAssetsValuesRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AggregateAssetsValuesRequest} obj Optional instance to populate.
     * @return {module:model/AggregateAssetsValuesRequest} The populated <code>AggregateAssetsValuesRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AggregateAssetsValuesRequest();

            if (data.hasOwnProperty('aggregations')) {
                obj['aggregations'] = ApiClient.convertToType(data['aggregations'], [Aggregation]);
            }
            if (data.hasOwnProperty('filter')) {
                obj['filter'] = ApiClient.convertToType(data['filter'], 'String');
            }
            if (data.hasOwnProperty('showHidden')) {
                obj['showHidden'] = ApiClient.convertToType(data['showHidden'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AggregateAssetsValuesRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AggregateAssetsValuesRequest</code>.
     */
    static validateJSON(data) {
        if (data['aggregations']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['aggregations'])) {
                throw new Error("Expected the field `aggregations` to be an array in the JSON data but got " + data['aggregations']);
            }
            // validate the optional field `aggregations` (array)
            for (const item of data['aggregations']) {
                Aggregation.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['filter'] && !(typeof data['filter'] === 'string' || data['filter'] instanceof String)) {
            throw new Error("Expected the field `filter` to be a primitive type in the JSON string but got " + data['filter']);
        }

        return true;
    }


}



/**
 * Array of aggregations to perform. Up to 25 aggregations can be defined.
 * @member {Array.<module:model/Aggregation>} aggregations
 */
AggregateAssetsValuesRequest.prototype['aggregations'] = undefined;

/**
 * The aggregation will be performed on assets that match the provided filter.
 * @member {String} filter
 */
AggregateAssetsValuesRequest.prototype['filter'] = undefined;

/**
 * Optional. When this value is set to 'true' the response will include all assets, including those that are hidden.
 * @member {Boolean} showHidden
 */
AggregateAssetsValuesRequest.prototype['showHidden'] = undefined;






export default AggregateAssetsValuesRequest;

