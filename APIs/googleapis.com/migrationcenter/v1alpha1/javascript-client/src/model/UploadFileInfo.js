/**
 * Migration Center API
 * A unified platform that helps you accelerate your end-to-end cloud journey from your current on-premises or cloud environments to Google Cloud.
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UploadFileInfo model module.
 * @module model/UploadFileInfo
 * @version v1alpha1
 */
class UploadFileInfo {
    /**
     * Constructs a new <code>UploadFileInfo</code>.
     * A resource that contains a URI to which a data file can be uploaded.
     * @alias module:model/UploadFileInfo
     */
    constructor() { 
        
        UploadFileInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UploadFileInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UploadFileInfo} obj Optional instance to populate.
     * @return {module:model/UploadFileInfo} The populated <code>UploadFileInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UploadFileInfo();

            if (data.hasOwnProperty('headers')) {
                obj['headers'] = ApiClient.convertToType(data['headers'], {'String': 'String'});
            }
            if (data.hasOwnProperty('signedUri')) {
                obj['signedUri'] = ApiClient.convertToType(data['signedUri'], 'String');
            }
            if (data.hasOwnProperty('uriExpirationTime')) {
                obj['uriExpirationTime'] = ApiClient.convertToType(data['uriExpirationTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UploadFileInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UploadFileInfo</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['signedUri'] && !(typeof data['signedUri'] === 'string' || data['signedUri'] instanceof String)) {
            throw new Error("Expected the field `signedUri` to be a primitive type in the JSON string but got " + data['signedUri']);
        }
        // ensure the json data is a string
        if (data['uriExpirationTime'] && !(typeof data['uriExpirationTime'] === 'string' || data['uriExpirationTime'] instanceof String)) {
            throw new Error("Expected the field `uriExpirationTime` to be a primitive type in the JSON string but got " + data['uriExpirationTime']);
        }

        return true;
    }


}



/**
 * Output only. The headers that were used to sign the URL.
 * @member {Object.<String, String>} headers
 */
UploadFileInfo.prototype['headers'] = undefined;

/**
 * Output only. Upload URI for the file.
 * @member {String} signedUri
 */
UploadFileInfo.prototype['signedUri'] = undefined;

/**
 * Output only. Expiration time of the upload URI.
 * @member {String} uriExpirationTime
 */
UploadFileInfo.prototype['uriExpirationTime'] = undefined;






export default UploadFileInfo;

