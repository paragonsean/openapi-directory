/**
 * Migration Center API
 * A unified platform that helps you accelerate your end-to-end cloud journey from your current on-premises or cloud environments to Google Cloud.
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BatchDeleteAssetsRequest model module.
 * @module model/BatchDeleteAssetsRequest
 * @version v1alpha1
 */
class BatchDeleteAssetsRequest {
    /**
     * Constructs a new <code>BatchDeleteAssetsRequest</code>.
     * A request to delete a list of asset.
     * @alias module:model/BatchDeleteAssetsRequest
     */
    constructor() { 
        
        BatchDeleteAssetsRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BatchDeleteAssetsRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BatchDeleteAssetsRequest} obj Optional instance to populate.
     * @return {module:model/BatchDeleteAssetsRequest} The populated <code>BatchDeleteAssetsRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BatchDeleteAssetsRequest();

            if (data.hasOwnProperty('allowMissing')) {
                obj['allowMissing'] = ApiClient.convertToType(data['allowMissing'], 'Boolean');
            }
            if (data.hasOwnProperty('names')) {
                obj['names'] = ApiClient.convertToType(data['names'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BatchDeleteAssetsRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BatchDeleteAssetsRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['names'])) {
            throw new Error("Expected the field `names` to be an array in the JSON data but got " + data['names']);
        }

        return true;
    }


}



/**
 * Optional. When this value is set to `true` the request is a no-op for non-existing assets. See https://google.aip.dev/135#delete-if-existing for additional details. Default value is `false`.
 * @member {Boolean} allowMissing
 */
BatchDeleteAssetsRequest.prototype['allowMissing'] = undefined;

/**
 * Required. The IDs of the assets to delete. A maximum of 1000 assets can be deleted in a batch. Format: projects/{project}/locations/{location}/assets/{name}.
 * @member {Array.<String>} names
 */
BatchDeleteAssetsRequest.prototype['names'] = undefined;






export default BatchDeleteAssetsRequest;

