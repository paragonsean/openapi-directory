/*
 * Migration Center API
 * A unified platform that helps you accelerate your end-to-end cloud journey from your current on-premises or cloud environments to Google Cloud.
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Custom data to use for sizing optimizations.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:30:29.928675-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class VirtualMachinePreferencesSizingOptimizationCustomParameters {
  /**
   * Optional. Type of statistical aggregation of a resource utilization data, on which to base the sizing metrics.
   */
  @JsonAdapter(AggregationMethodEnum.Adapter.class)
  public enum AggregationMethodEnum {
    UNSPECIFIED("AGGREGATION_METHOD_UNSPECIFIED"),
    
    AVERAGE("AGGREGATION_METHOD_AVERAGE"),
    
    MEDIAN("AGGREGATION_METHOD_MEDIAN"),
    
    NINETY_FIFTH_PERCENTILE("AGGREGATION_METHOD_NINETY_FIFTH_PERCENTILE"),
    
    PEAK("AGGREGATION_METHOD_PEAK");

    private String value;

    AggregationMethodEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AggregationMethodEnum fromValue(String value) {
      for (AggregationMethodEnum b : AggregationMethodEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<AggregationMethodEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AggregationMethodEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AggregationMethodEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return AggregationMethodEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      AggregationMethodEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_AGGREGATION_METHOD = "aggregationMethod";
  @SerializedName(SERIALIZED_NAME_AGGREGATION_METHOD)
  private AggregationMethodEnum aggregationMethod;

  public static final String SERIALIZED_NAME_CPU_USAGE_PERCENTAGE = "cpuUsagePercentage";
  @SerializedName(SERIALIZED_NAME_CPU_USAGE_PERCENTAGE)
  private Integer cpuUsagePercentage;

  public static final String SERIALIZED_NAME_MEMORY_USAGE_PERCENTAGE = "memoryUsagePercentage";
  @SerializedName(SERIALIZED_NAME_MEMORY_USAGE_PERCENTAGE)
  private Integer memoryUsagePercentage;

  public static final String SERIALIZED_NAME_STORAGE_MULTIPLIER = "storageMultiplier";
  @SerializedName(SERIALIZED_NAME_STORAGE_MULTIPLIER)
  private Double storageMultiplier;

  public VirtualMachinePreferencesSizingOptimizationCustomParameters() {
  }

  public VirtualMachinePreferencesSizingOptimizationCustomParameters aggregationMethod(AggregationMethodEnum aggregationMethod) {
    this.aggregationMethod = aggregationMethod;
    return this;
  }

  /**
   * Optional. Type of statistical aggregation of a resource utilization data, on which to base the sizing metrics.
   * @return aggregationMethod
   */
  @javax.annotation.Nullable
  public AggregationMethodEnum getAggregationMethod() {
    return aggregationMethod;
  }

  public void setAggregationMethod(AggregationMethodEnum aggregationMethod) {
    this.aggregationMethod = aggregationMethod;
  }


  public VirtualMachinePreferencesSizingOptimizationCustomParameters cpuUsagePercentage(Integer cpuUsagePercentage) {
    this.cpuUsagePercentage = cpuUsagePercentage;
    return this;
  }

  /**
   * Optional. Desired percentage of CPU usage. Must be in the interval [1, 100] (or 0 for default value).
   * @return cpuUsagePercentage
   */
  @javax.annotation.Nullable
  public Integer getCpuUsagePercentage() {
    return cpuUsagePercentage;
  }

  public void setCpuUsagePercentage(Integer cpuUsagePercentage) {
    this.cpuUsagePercentage = cpuUsagePercentage;
  }


  public VirtualMachinePreferencesSizingOptimizationCustomParameters memoryUsagePercentage(Integer memoryUsagePercentage) {
    this.memoryUsagePercentage = memoryUsagePercentage;
    return this;
  }

  /**
   * Optional. Desired percentage of memory usage. Must be in the interval [1, 100] (or 0 for default value).
   * @return memoryUsagePercentage
   */
  @javax.annotation.Nullable
  public Integer getMemoryUsagePercentage() {
    return memoryUsagePercentage;
  }

  public void setMemoryUsagePercentage(Integer memoryUsagePercentage) {
    this.memoryUsagePercentage = memoryUsagePercentage;
  }


  public VirtualMachinePreferencesSizingOptimizationCustomParameters storageMultiplier(Double storageMultiplier) {
    this.storageMultiplier = storageMultiplier;
    return this;
  }

  /**
   * Optional. Desired increase factor of storage, relative to currently used storage. Must be in the interval [1.0, 2.0] (or 0 for default value).
   * @return storageMultiplier
   */
  @javax.annotation.Nullable
  public Double getStorageMultiplier() {
    return storageMultiplier;
  }

  public void setStorageMultiplier(Double storageMultiplier) {
    this.storageMultiplier = storageMultiplier;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VirtualMachinePreferencesSizingOptimizationCustomParameters virtualMachinePreferencesSizingOptimizationCustomParameters = (VirtualMachinePreferencesSizingOptimizationCustomParameters) o;
    return Objects.equals(this.aggregationMethod, virtualMachinePreferencesSizingOptimizationCustomParameters.aggregationMethod) &&
        Objects.equals(this.cpuUsagePercentage, virtualMachinePreferencesSizingOptimizationCustomParameters.cpuUsagePercentage) &&
        Objects.equals(this.memoryUsagePercentage, virtualMachinePreferencesSizingOptimizationCustomParameters.memoryUsagePercentage) &&
        Objects.equals(this.storageMultiplier, virtualMachinePreferencesSizingOptimizationCustomParameters.storageMultiplier);
  }

  @Override
  public int hashCode() {
    return Objects.hash(aggregationMethod, cpuUsagePercentage, memoryUsagePercentage, storageMultiplier);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VirtualMachinePreferencesSizingOptimizationCustomParameters {\n");
    sb.append("    aggregationMethod: ").append(toIndentedString(aggregationMethod)).append("\n");
    sb.append("    cpuUsagePercentage: ").append(toIndentedString(cpuUsagePercentage)).append("\n");
    sb.append("    memoryUsagePercentage: ").append(toIndentedString(memoryUsagePercentage)).append("\n");
    sb.append("    storageMultiplier: ").append(toIndentedString(storageMultiplier)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("aggregationMethod");
    openapiFields.add("cpuUsagePercentage");
    openapiFields.add("memoryUsagePercentage");
    openapiFields.add("storageMultiplier");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to VirtualMachinePreferencesSizingOptimizationCustomParameters
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!VirtualMachinePreferencesSizingOptimizationCustomParameters.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in VirtualMachinePreferencesSizingOptimizationCustomParameters is not found in the empty JSON string", VirtualMachinePreferencesSizingOptimizationCustomParameters.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!VirtualMachinePreferencesSizingOptimizationCustomParameters.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `VirtualMachinePreferencesSizingOptimizationCustomParameters` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("aggregationMethod") != null && !jsonObj.get("aggregationMethod").isJsonNull()) && !jsonObj.get("aggregationMethod").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `aggregationMethod` to be a primitive type in the JSON string but got `%s`", jsonObj.get("aggregationMethod").toString()));
      }
      // validate the optional field `aggregationMethod`
      if (jsonObj.get("aggregationMethod") != null && !jsonObj.get("aggregationMethod").isJsonNull()) {
        AggregationMethodEnum.validateJsonElement(jsonObj.get("aggregationMethod"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!VirtualMachinePreferencesSizingOptimizationCustomParameters.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'VirtualMachinePreferencesSizingOptimizationCustomParameters' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<VirtualMachinePreferencesSizingOptimizationCustomParameters> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(VirtualMachinePreferencesSizingOptimizationCustomParameters.class));

       return (TypeAdapter<T>) new TypeAdapter<VirtualMachinePreferencesSizingOptimizationCustomParameters>() {
           @Override
           public void write(JsonWriter out, VirtualMachinePreferencesSizingOptimizationCustomParameters value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public VirtualMachinePreferencesSizingOptimizationCustomParameters read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of VirtualMachinePreferencesSizingOptimizationCustomParameters given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of VirtualMachinePreferencesSizingOptimizationCustomParameters
   * @throws IOException if the JSON string is invalid with respect to VirtualMachinePreferencesSizingOptimizationCustomParameters
   */
  public static VirtualMachinePreferencesSizingOptimizationCustomParameters fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, VirtualMachinePreferencesSizingOptimizationCustomParameters.class);
  }

  /**
   * Convert an instance of VirtualMachinePreferencesSizingOptimizationCustomParameters to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

