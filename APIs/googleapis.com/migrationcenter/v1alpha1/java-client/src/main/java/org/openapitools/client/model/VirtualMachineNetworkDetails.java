/*
 * Migration Center API
 * A unified platform that helps you accelerate your end-to-end cloud journey from your current on-premises or cloud environments to Google Cloud.
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.NetworkAdapterList;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Details of network adapters and settings.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:30:29.928675-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class VirtualMachineNetworkDetails {
  public static final String SERIALIZED_NAME_DEFAULT_GW = "defaultGw";
  @SerializedName(SERIALIZED_NAME_DEFAULT_GW)
  private String defaultGw;

  public static final String SERIALIZED_NAME_NETWORK_ADAPTERS = "networkAdapters";
  @SerializedName(SERIALIZED_NAME_NETWORK_ADAPTERS)
  private NetworkAdapterList networkAdapters;

  public static final String SERIALIZED_NAME_PRIMARY_IP_ADDRESS = "primaryIpAddress";
  @SerializedName(SERIALIZED_NAME_PRIMARY_IP_ADDRESS)
  private String primaryIpAddress;

  public static final String SERIALIZED_NAME_PRIMARY_MAC_ADDRESS = "primaryMacAddress";
  @SerializedName(SERIALIZED_NAME_PRIMARY_MAC_ADDRESS)
  private String primaryMacAddress;

  public static final String SERIALIZED_NAME_PUBLIC_IP_ADDRESS = "publicIpAddress";
  @SerializedName(SERIALIZED_NAME_PUBLIC_IP_ADDRESS)
  private String publicIpAddress;

  public VirtualMachineNetworkDetails() {
  }

  public VirtualMachineNetworkDetails defaultGw(String defaultGw) {
    this.defaultGw = defaultGw;
    return this;
  }

  /**
   * Default gateway address.
   * @return defaultGw
   */
  @javax.annotation.Nullable
  public String getDefaultGw() {
    return defaultGw;
  }

  public void setDefaultGw(String defaultGw) {
    this.defaultGw = defaultGw;
  }


  public VirtualMachineNetworkDetails networkAdapters(NetworkAdapterList networkAdapters) {
    this.networkAdapters = networkAdapters;
    return this;
  }

  /**
   * Get networkAdapters
   * @return networkAdapters
   */
  @javax.annotation.Nullable
  public NetworkAdapterList getNetworkAdapters() {
    return networkAdapters;
  }

  public void setNetworkAdapters(NetworkAdapterList networkAdapters) {
    this.networkAdapters = networkAdapters;
  }


  public VirtualMachineNetworkDetails primaryIpAddress(String primaryIpAddress) {
    this.primaryIpAddress = primaryIpAddress;
    return this;
  }

  /**
   * IP address of the machine.
   * @return primaryIpAddress
   */
  @javax.annotation.Nullable
  public String getPrimaryIpAddress() {
    return primaryIpAddress;
  }

  public void setPrimaryIpAddress(String primaryIpAddress) {
    this.primaryIpAddress = primaryIpAddress;
  }


  public VirtualMachineNetworkDetails primaryMacAddress(String primaryMacAddress) {
    this.primaryMacAddress = primaryMacAddress;
    return this;
  }

  /**
   * MAC address of the machine. This property is used to uniqly identify the machine.
   * @return primaryMacAddress
   */
  @javax.annotation.Nullable
  public String getPrimaryMacAddress() {
    return primaryMacAddress;
  }

  public void setPrimaryMacAddress(String primaryMacAddress) {
    this.primaryMacAddress = primaryMacAddress;
  }


  public VirtualMachineNetworkDetails publicIpAddress(String publicIpAddress) {
    this.publicIpAddress = publicIpAddress;
    return this;
  }

  /**
   * Public IP address of the machine.
   * @return publicIpAddress
   */
  @javax.annotation.Nullable
  public String getPublicIpAddress() {
    return publicIpAddress;
  }

  public void setPublicIpAddress(String publicIpAddress) {
    this.publicIpAddress = publicIpAddress;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VirtualMachineNetworkDetails virtualMachineNetworkDetails = (VirtualMachineNetworkDetails) o;
    return Objects.equals(this.defaultGw, virtualMachineNetworkDetails.defaultGw) &&
        Objects.equals(this.networkAdapters, virtualMachineNetworkDetails.networkAdapters) &&
        Objects.equals(this.primaryIpAddress, virtualMachineNetworkDetails.primaryIpAddress) &&
        Objects.equals(this.primaryMacAddress, virtualMachineNetworkDetails.primaryMacAddress) &&
        Objects.equals(this.publicIpAddress, virtualMachineNetworkDetails.publicIpAddress);
  }

  @Override
  public int hashCode() {
    return Objects.hash(defaultGw, networkAdapters, primaryIpAddress, primaryMacAddress, publicIpAddress);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VirtualMachineNetworkDetails {\n");
    sb.append("    defaultGw: ").append(toIndentedString(defaultGw)).append("\n");
    sb.append("    networkAdapters: ").append(toIndentedString(networkAdapters)).append("\n");
    sb.append("    primaryIpAddress: ").append(toIndentedString(primaryIpAddress)).append("\n");
    sb.append("    primaryMacAddress: ").append(toIndentedString(primaryMacAddress)).append("\n");
    sb.append("    publicIpAddress: ").append(toIndentedString(publicIpAddress)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("defaultGw");
    openapiFields.add("networkAdapters");
    openapiFields.add("primaryIpAddress");
    openapiFields.add("primaryMacAddress");
    openapiFields.add("publicIpAddress");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to VirtualMachineNetworkDetails
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!VirtualMachineNetworkDetails.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in VirtualMachineNetworkDetails is not found in the empty JSON string", VirtualMachineNetworkDetails.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!VirtualMachineNetworkDetails.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `VirtualMachineNetworkDetails` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("defaultGw") != null && !jsonObj.get("defaultGw").isJsonNull()) && !jsonObj.get("defaultGw").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `defaultGw` to be a primitive type in the JSON string but got `%s`", jsonObj.get("defaultGw").toString()));
      }
      // validate the optional field `networkAdapters`
      if (jsonObj.get("networkAdapters") != null && !jsonObj.get("networkAdapters").isJsonNull()) {
        NetworkAdapterList.validateJsonElement(jsonObj.get("networkAdapters"));
      }
      if ((jsonObj.get("primaryIpAddress") != null && !jsonObj.get("primaryIpAddress").isJsonNull()) && !jsonObj.get("primaryIpAddress").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `primaryIpAddress` to be a primitive type in the JSON string but got `%s`", jsonObj.get("primaryIpAddress").toString()));
      }
      if ((jsonObj.get("primaryMacAddress") != null && !jsonObj.get("primaryMacAddress").isJsonNull()) && !jsonObj.get("primaryMacAddress").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `primaryMacAddress` to be a primitive type in the JSON string but got `%s`", jsonObj.get("primaryMacAddress").toString()));
      }
      if ((jsonObj.get("publicIpAddress") != null && !jsonObj.get("publicIpAddress").isJsonNull()) && !jsonObj.get("publicIpAddress").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `publicIpAddress` to be a primitive type in the JSON string but got `%s`", jsonObj.get("publicIpAddress").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!VirtualMachineNetworkDetails.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'VirtualMachineNetworkDetails' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<VirtualMachineNetworkDetails> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(VirtualMachineNetworkDetails.class));

       return (TypeAdapter<T>) new TypeAdapter<VirtualMachineNetworkDetails>() {
           @Override
           public void write(JsonWriter out, VirtualMachineNetworkDetails value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public VirtualMachineNetworkDetails read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of VirtualMachineNetworkDetails given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of VirtualMachineNetworkDetails
   * @throws IOException if the JSON string is invalid with respect to VirtualMachineNetworkDetails
   */
  public static VirtualMachineNetworkDetails fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, VirtualMachineNetworkDetails.class);
  }

  /**
   * Convert an instance of VirtualMachineNetworkDetails to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

