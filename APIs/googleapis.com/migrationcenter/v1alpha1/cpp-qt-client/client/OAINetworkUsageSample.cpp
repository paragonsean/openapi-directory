/**
 * Migration Center API
 * A unified platform that helps you accelerate your end-to-end cloud journey from your current on-premises or cloud environments to Google Cloud.
 *
 * The version of the OpenAPI document: v1alpha1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINetworkUsageSample.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINetworkUsageSample::OAINetworkUsageSample(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINetworkUsageSample::OAINetworkUsageSample() {
    this->initializeModel();
}

OAINetworkUsageSample::~OAINetworkUsageSample() {}

void OAINetworkUsageSample::initializeModel() {

    m_average_egress_bps_isSet = false;
    m_average_egress_bps_isValid = false;

    m_average_ingress_bps_isSet = false;
    m_average_ingress_bps_isValid = false;
}

void OAINetworkUsageSample::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAINetworkUsageSample::fromJsonObject(QJsonObject json) {

    m_average_egress_bps_isValid = ::OpenAPI::fromJsonValue(m_average_egress_bps, json[QString("averageEgressBps")]);
    m_average_egress_bps_isSet = !json[QString("averageEgressBps")].isNull() && m_average_egress_bps_isValid;

    m_average_ingress_bps_isValid = ::OpenAPI::fromJsonValue(m_average_ingress_bps, json[QString("averageIngressBps")]);
    m_average_ingress_bps_isSet = !json[QString("averageIngressBps")].isNull() && m_average_ingress_bps_isValid;
}

QString OAINetworkUsageSample::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAINetworkUsageSample::asJsonObject() const {
    QJsonObject obj;
    if (m_average_egress_bps_isSet) {
        obj.insert(QString("averageEgressBps"), ::OpenAPI::toJsonValue(m_average_egress_bps));
    }
    if (m_average_ingress_bps_isSet) {
        obj.insert(QString("averageIngressBps"), ::OpenAPI::toJsonValue(m_average_ingress_bps));
    }
    return obj;
}

float OAINetworkUsageSample::getAverageEgressBps() const {
    return m_average_egress_bps;
}
void OAINetworkUsageSample::setAverageEgressBps(const float &average_egress_bps) {
    m_average_egress_bps = average_egress_bps;
    m_average_egress_bps_isSet = true;
}

bool OAINetworkUsageSample::is_average_egress_bps_Set() const{
    return m_average_egress_bps_isSet;
}

bool OAINetworkUsageSample::is_average_egress_bps_Valid() const{
    return m_average_egress_bps_isValid;
}

float OAINetworkUsageSample::getAverageIngressBps() const {
    return m_average_ingress_bps;
}
void OAINetworkUsageSample::setAverageIngressBps(const float &average_ingress_bps) {
    m_average_ingress_bps = average_ingress_bps;
    m_average_ingress_bps_isSet = true;
}

bool OAINetworkUsageSample::is_average_ingress_bps_Set() const{
    return m_average_ingress_bps_isSet;
}

bool OAINetworkUsageSample::is_average_ingress_bps_Valid() const{
    return m_average_ingress_bps_isValid;
}

bool OAINetworkUsageSample::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_average_egress_bps_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_average_ingress_bps_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAINetworkUsageSample::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
