/**
 * Migration Center API
 * A unified platform that helps you accelerate your end-to-end cloud journey from your current on-premises or cloud environments to Google Cloud.
 *
 * The version of the OpenAPI document: v1alpha1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGuestOsDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGuestOsDetails::OAIGuestOsDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGuestOsDetails::OAIGuestOsDetails() {
    this->initializeModel();
}

OAIGuestOsDetails::~OAIGuestOsDetails() {}

void OAIGuestOsDetails::initializeModel() {

    m_config_isSet = false;
    m_config_isValid = false;

    m_runtime_isSet = false;
    m_runtime_isValid = false;
}

void OAIGuestOsDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGuestOsDetails::fromJsonObject(QJsonObject json) {

    m_config_isValid = ::OpenAPI::fromJsonValue(m_config, json[QString("config")]);
    m_config_isSet = !json[QString("config")].isNull() && m_config_isValid;

    m_runtime_isValid = ::OpenAPI::fromJsonValue(m_runtime, json[QString("runtime")]);
    m_runtime_isSet = !json[QString("runtime")].isNull() && m_runtime_isValid;
}

QString OAIGuestOsDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGuestOsDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_config.isSet()) {
        obj.insert(QString("config"), ::OpenAPI::toJsonValue(m_config));
    }
    if (m_runtime.isSet()) {
        obj.insert(QString("runtime"), ::OpenAPI::toJsonValue(m_runtime));
    }
    return obj;
}

OAIGuestConfigDetails OAIGuestOsDetails::getConfig() const {
    return m_config;
}
void OAIGuestOsDetails::setConfig(const OAIGuestConfigDetails &config) {
    m_config = config;
    m_config_isSet = true;
}

bool OAIGuestOsDetails::is_config_Set() const{
    return m_config_isSet;
}

bool OAIGuestOsDetails::is_config_Valid() const{
    return m_config_isValid;
}

OAIGuestRuntimeDetails OAIGuestOsDetails::getRuntime() const {
    return m_runtime;
}
void OAIGuestOsDetails::setRuntime(const OAIGuestRuntimeDetails &runtime) {
    m_runtime = runtime;
    m_runtime_isSet = true;
}

bool OAIGuestOsDetails::is_runtime_Set() const{
    return m_runtime_isSet;
}

bool OAIGuestOsDetails::is_runtime_Valid() const{
    return m_runtime_isValid;
}

bool OAIGuestOsDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_runtime.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGuestOsDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
