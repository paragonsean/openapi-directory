/**
 * Migration Center API
 * A unified platform that helps you accelerate your end-to-end cloud journey from your current on-premises or cloud environments to Google Cloud.
 *
 * The version of the OpenAPI document: v1alpha1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDiskEntry.h
 *
 * Single disk entry.
 */

#ifndef OAIDiskEntry_H
#define OAIDiskEntry_H

#include <QJsonObject>

#include "OAIDiskPartitionList.h"
#include "OAIVmwareDiskConfig.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDiskPartitionList;
class OAIVmwareDiskConfig;

class OAIDiskEntry : public OAIObject {
public:
    OAIDiskEntry();
    OAIDiskEntry(QString json);
    ~OAIDiskEntry() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDiskLabel() const;
    void setDiskLabel(const QString &disk_label);
    bool is_disk_label_Set() const;
    bool is_disk_label_Valid() const;

    QString getDiskLabelType() const;
    void setDiskLabelType(const QString &disk_label_type);
    bool is_disk_label_type_Set() const;
    bool is_disk_label_type_Valid() const;

    QString getHwAddress() const;
    void setHwAddress(const QString &hw_address);
    bool is_hw_address_Set() const;
    bool is_hw_address_Valid() const;

    QString getInterfaceType() const;
    void setInterfaceType(const QString &interface_type);
    bool is_interface_type_Set() const;
    bool is_interface_type_Valid() const;

    OAIDiskPartitionList getPartitions() const;
    void setPartitions(const OAIDiskPartitionList &partitions);
    bool is_partitions_Set() const;
    bool is_partitions_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getTotalCapacityBytes() const;
    void setTotalCapacityBytes(const QString &total_capacity_bytes);
    bool is_total_capacity_bytes_Set() const;
    bool is_total_capacity_bytes_Valid() const;

    QString getTotalFreeBytes() const;
    void setTotalFreeBytes(const QString &total_free_bytes);
    bool is_total_free_bytes_Set() const;
    bool is_total_free_bytes_Valid() const;

    OAIVmwareDiskConfig getVmwareConfig() const;
    void setVmwareConfig(const OAIVmwareDiskConfig &vmware_config);
    bool is_vmware_config_Set() const;
    bool is_vmware_config_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_disk_label;
    bool m_disk_label_isSet;
    bool m_disk_label_isValid;

    QString m_disk_label_type;
    bool m_disk_label_type_isSet;
    bool m_disk_label_type_isValid;

    QString m_hw_address;
    bool m_hw_address_isSet;
    bool m_hw_address_isValid;

    QString m_interface_type;
    bool m_interface_type_isSet;
    bool m_interface_type_isValid;

    OAIDiskPartitionList m_partitions;
    bool m_partitions_isSet;
    bool m_partitions_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_total_capacity_bytes;
    bool m_total_capacity_bytes_isSet;
    bool m_total_capacity_bytes_isValid;

    QString m_total_free_bytes;
    bool m_total_free_bytes_isSet;
    bool m_total_free_bytes_isValid;

    OAIVmwareDiskConfig m_vmware_config;
    bool m_vmware_config_isSet;
    bool m_vmware_config_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDiskEntry)

#endif // OAIDiskEntry_H
