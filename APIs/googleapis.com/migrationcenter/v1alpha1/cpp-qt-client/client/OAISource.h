/**
 * Migration Center API
 * A unified platform that helps you accelerate your end-to-end cloud journey from your current on-premises or cloud environments to Google Cloud.
 *
 * The version of the OpenAPI document: v1alpha1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISource.h
 *
 * Source represents an object from which asset information is streamed to Migration Center.
 */

#ifndef OAISource_H
#define OAISource_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISource : public OAIObject {
public:
    OAISource();
    OAISource(QString json);
    ~OAISource() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCreateTime() const;
    void setCreateTime(const QString &create_time);
    bool is_create_time_Set() const;
    bool is_create_time_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    qint32 getErrorFrameCount() const;
    void setErrorFrameCount(const qint32 &error_frame_count);
    bool is_error_frame_count_Set() const;
    bool is_error_frame_count_Valid() const;

    bool isIsManaged() const;
    void setIsManaged(const bool &is_managed);
    bool is_is_managed_Set() const;
    bool is_is_managed_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint32 getPendingFrameCount() const;
    void setPendingFrameCount(const qint32 &pending_frame_count);
    bool is_pending_frame_count_Set() const;
    bool is_pending_frame_count_Valid() const;

    qint32 getPriority() const;
    void setPriority(const qint32 &priority);
    bool is_priority_Set() const;
    bool is_priority_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getUpdateTime() const;
    void setUpdateTime(const QString &update_time);
    bool is_update_time_Set() const;
    bool is_update_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_create_time;
    bool m_create_time_isSet;
    bool m_create_time_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    qint32 m_error_frame_count;
    bool m_error_frame_count_isSet;
    bool m_error_frame_count_isValid;

    bool m_is_managed;
    bool m_is_managed_isSet;
    bool m_is_managed_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint32 m_pending_frame_count;
    bool m_pending_frame_count_isSet;
    bool m_pending_frame_count_isValid;

    qint32 m_priority;
    bool m_priority_isSet;
    bool m_priority_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_update_time;
    bool m_update_time_isSet;
    bool m_update_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISource)

#endif // OAISource_H
