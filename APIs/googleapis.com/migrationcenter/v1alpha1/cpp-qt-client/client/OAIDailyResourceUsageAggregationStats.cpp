/**
 * Migration Center API
 * A unified platform that helps you accelerate your end-to-end cloud journey from your current on-premises or cloud environments to Google Cloud.
 *
 * The version of the OpenAPI document: v1alpha1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDailyResourceUsageAggregationStats.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDailyResourceUsageAggregationStats::OAIDailyResourceUsageAggregationStats(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDailyResourceUsageAggregationStats::OAIDailyResourceUsageAggregationStats() {
    this->initializeModel();
}

OAIDailyResourceUsageAggregationStats::~OAIDailyResourceUsageAggregationStats() {}

void OAIDailyResourceUsageAggregationStats::initializeModel() {

    m_average_isSet = false;
    m_average_isValid = false;

    m_median_isSet = false;
    m_median_isValid = false;

    m_nintey_fifth_percentile_isSet = false;
    m_nintey_fifth_percentile_isValid = false;

    m_peak_isSet = false;
    m_peak_isValid = false;
}

void OAIDailyResourceUsageAggregationStats::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDailyResourceUsageAggregationStats::fromJsonObject(QJsonObject json) {

    m_average_isValid = ::OpenAPI::fromJsonValue(m_average, json[QString("average")]);
    m_average_isSet = !json[QString("average")].isNull() && m_average_isValid;

    m_median_isValid = ::OpenAPI::fromJsonValue(m_median, json[QString("median")]);
    m_median_isSet = !json[QString("median")].isNull() && m_median_isValid;

    m_nintey_fifth_percentile_isValid = ::OpenAPI::fromJsonValue(m_nintey_fifth_percentile, json[QString("ninteyFifthPercentile")]);
    m_nintey_fifth_percentile_isSet = !json[QString("ninteyFifthPercentile")].isNull() && m_nintey_fifth_percentile_isValid;

    m_peak_isValid = ::OpenAPI::fromJsonValue(m_peak, json[QString("peak")]);
    m_peak_isSet = !json[QString("peak")].isNull() && m_peak_isValid;
}

QString OAIDailyResourceUsageAggregationStats::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDailyResourceUsageAggregationStats::asJsonObject() const {
    QJsonObject obj;
    if (m_average_isSet) {
        obj.insert(QString("average"), ::OpenAPI::toJsonValue(m_average));
    }
    if (m_median_isSet) {
        obj.insert(QString("median"), ::OpenAPI::toJsonValue(m_median));
    }
    if (m_nintey_fifth_percentile_isSet) {
        obj.insert(QString("ninteyFifthPercentile"), ::OpenAPI::toJsonValue(m_nintey_fifth_percentile));
    }
    if (m_peak_isSet) {
        obj.insert(QString("peak"), ::OpenAPI::toJsonValue(m_peak));
    }
    return obj;
}

float OAIDailyResourceUsageAggregationStats::getAverage() const {
    return m_average;
}
void OAIDailyResourceUsageAggregationStats::setAverage(const float &average) {
    m_average = average;
    m_average_isSet = true;
}

bool OAIDailyResourceUsageAggregationStats::is_average_Set() const{
    return m_average_isSet;
}

bool OAIDailyResourceUsageAggregationStats::is_average_Valid() const{
    return m_average_isValid;
}

float OAIDailyResourceUsageAggregationStats::getMedian() const {
    return m_median;
}
void OAIDailyResourceUsageAggregationStats::setMedian(const float &median) {
    m_median = median;
    m_median_isSet = true;
}

bool OAIDailyResourceUsageAggregationStats::is_median_Set() const{
    return m_median_isSet;
}

bool OAIDailyResourceUsageAggregationStats::is_median_Valid() const{
    return m_median_isValid;
}

float OAIDailyResourceUsageAggregationStats::getNinteyFifthPercentile() const {
    return m_nintey_fifth_percentile;
}
void OAIDailyResourceUsageAggregationStats::setNinteyFifthPercentile(const float &nintey_fifth_percentile) {
    m_nintey_fifth_percentile = nintey_fifth_percentile;
    m_nintey_fifth_percentile_isSet = true;
}

bool OAIDailyResourceUsageAggregationStats::is_nintey_fifth_percentile_Set() const{
    return m_nintey_fifth_percentile_isSet;
}

bool OAIDailyResourceUsageAggregationStats::is_nintey_fifth_percentile_Valid() const{
    return m_nintey_fifth_percentile_isValid;
}

float OAIDailyResourceUsageAggregationStats::getPeak() const {
    return m_peak;
}
void OAIDailyResourceUsageAggregationStats::setPeak(const float &peak) {
    m_peak = peak;
    m_peak_isSet = true;
}

bool OAIDailyResourceUsageAggregationStats::is_peak_Set() const{
    return m_peak_isSet;
}

bool OAIDailyResourceUsageAggregationStats::is_peak_Valid() const{
    return m_peak_isValid;
}

bool OAIDailyResourceUsageAggregationStats::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_average_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_median_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_nintey_fifth_percentile_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_peak_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDailyResourceUsageAggregationStats::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
