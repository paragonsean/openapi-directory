/**
 * Migration Center API
 * A unified platform that helps you accelerate your end-to-end cloud journey from your current on-premises or cloud environments to Google Cloud.
 *
 * The version of the OpenAPI document: v1alpha1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIComputeEngineShapeDescriptor.h
 *
 * Compute Engine target shape descriptor.
 */

#ifndef OAIComputeEngineShapeDescriptor_H
#define OAIComputeEngineShapeDescriptor_H

#include <QJsonObject>

#include "OAIComputeStorageDescriptor.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIComputeStorageDescriptor;

class OAIComputeEngineShapeDescriptor : public OAIObject {
public:
    OAIComputeEngineShapeDescriptor();
    OAIComputeEngineShapeDescriptor(QString json);
    ~OAIComputeEngineShapeDescriptor() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getLogicalCoreCount() const;
    void setLogicalCoreCount(const qint32 &logical_core_count);
    bool is_logical_core_count_Set() const;
    bool is_logical_core_count_Valid() const;

    QString getMachineType() const;
    void setMachineType(const QString &machine_type);
    bool is_machine_type_Set() const;
    bool is_machine_type_Valid() const;

    qint32 getMemoryMb() const;
    void setMemoryMb(const qint32 &memory_mb);
    bool is_memory_mb_Set() const;
    bool is_memory_mb_Valid() const;

    qint32 getPhysicalCoreCount() const;
    void setPhysicalCoreCount(const qint32 &physical_core_count);
    bool is_physical_core_count_Set() const;
    bool is_physical_core_count_Valid() const;

    QString getSeries() const;
    void setSeries(const QString &series);
    bool is_series_Set() const;
    bool is_series_Valid() const;

    QList<OAIComputeStorageDescriptor> getStorage() const;
    void setStorage(const QList<OAIComputeStorageDescriptor> &storage);
    bool is_storage_Set() const;
    bool is_storage_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_logical_core_count;
    bool m_logical_core_count_isSet;
    bool m_logical_core_count_isValid;

    QString m_machine_type;
    bool m_machine_type_isSet;
    bool m_machine_type_isValid;

    qint32 m_memory_mb;
    bool m_memory_mb_isSet;
    bool m_memory_mb_isValid;

    qint32 m_physical_core_count;
    bool m_physical_core_count_isSet;
    bool m_physical_core_count_isValid;

    QString m_series;
    bool m_series_isSet;
    bool m_series_isValid;

    QList<OAIComputeStorageDescriptor> m_storage;
    bool m_storage_isSet;
    bool m_storage_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIComputeEngineShapeDescriptor)

#endif // OAIComputeEngineShapeDescriptor_H
