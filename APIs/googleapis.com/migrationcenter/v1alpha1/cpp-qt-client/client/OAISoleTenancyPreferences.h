/**
 * Migration Center API
 * A unified platform that helps you accelerate your end-to-end cloud journey from your current on-premises or cloud environments to Google Cloud.
 *
 * The version of the OpenAPI document: v1alpha1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISoleTenancyPreferences.h
 *
 * Preferences concerning Sole Tenancy nodes and VMs.
 */

#ifndef OAISoleTenancyPreferences_H
#define OAISoleTenancyPreferences_H

#include <QJsonObject>

#include "OAISoleTenantNodeType.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISoleTenantNodeType;

class OAISoleTenancyPreferences : public OAIObject {
public:
    OAISoleTenancyPreferences();
    OAISoleTenancyPreferences(QString json);
    ~OAISoleTenancyPreferences() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCommitmentPlan() const;
    void setCommitmentPlan(const QString &commitment_plan);
    bool is_commitment_plan_Set() const;
    bool is_commitment_plan_Valid() const;

    double getCpuOvercommitRatio() const;
    void setCpuOvercommitRatio(const double &cpu_overcommit_ratio);
    bool is_cpu_overcommit_ratio_Set() const;
    bool is_cpu_overcommit_ratio_Valid() const;

    QString getHostMaintenancePolicy() const;
    void setHostMaintenancePolicy(const QString &host_maintenance_policy);
    bool is_host_maintenance_policy_Set() const;
    bool is_host_maintenance_policy_Valid() const;

    QList<OAISoleTenantNodeType> getNodeTypes() const;
    void setNodeTypes(const QList<OAISoleTenantNodeType> &node_types);
    bool is_node_types_Set() const;
    bool is_node_types_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_commitment_plan;
    bool m_commitment_plan_isSet;
    bool m_commitment_plan_isValid;

    double m_cpu_overcommit_ratio;
    bool m_cpu_overcommit_ratio_isSet;
    bool m_cpu_overcommit_ratio_isValid;

    QString m_host_maintenance_policy;
    bool m_host_maintenance_policy_isSet;
    bool m_host_maintenance_policy_isValid;

    QList<OAISoleTenantNodeType> m_node_types;
    bool m_node_types_isSet;
    bool m_node_types_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISoleTenancyPreferences)

#endif // OAISoleTenancyPreferences_H
