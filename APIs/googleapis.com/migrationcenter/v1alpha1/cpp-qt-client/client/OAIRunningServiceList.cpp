/**
 * Migration Center API
 * A unified platform that helps you accelerate your end-to-end cloud journey from your current on-premises or cloud environments to Google Cloud.
 *
 * The version of the OpenAPI document: v1alpha1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRunningServiceList.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRunningServiceList::OAIRunningServiceList(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRunningServiceList::OAIRunningServiceList() {
    this->initializeModel();
}

OAIRunningServiceList::~OAIRunningServiceList() {}

void OAIRunningServiceList::initializeModel() {

    m_services_isSet = false;
    m_services_isValid = false;
}

void OAIRunningServiceList::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRunningServiceList::fromJsonObject(QJsonObject json) {

    m_services_isValid = ::OpenAPI::fromJsonValue(m_services, json[QString("services")]);
    m_services_isSet = !json[QString("services")].isNull() && m_services_isValid;
}

QString OAIRunningServiceList::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRunningServiceList::asJsonObject() const {
    QJsonObject obj;
    if (m_services.size() > 0) {
        obj.insert(QString("services"), ::OpenAPI::toJsonValue(m_services));
    }
    return obj;
}

QList<OAIRunningService> OAIRunningServiceList::getServices() const {
    return m_services;
}
void OAIRunningServiceList::setServices(const QList<OAIRunningService> &services) {
    m_services = services;
    m_services_isSet = true;
}

bool OAIRunningServiceList::is_services_Set() const{
    return m_services_isSet;
}

bool OAIRunningServiceList::is_services_Valid() const{
    return m_services_isValid;
}

bool OAIRunningServiceList::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_services.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRunningServiceList::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
