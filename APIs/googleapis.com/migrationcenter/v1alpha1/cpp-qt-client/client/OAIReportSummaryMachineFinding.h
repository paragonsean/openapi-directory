/**
 * Migration Center API
 * A unified platform that helps you accelerate your end-to-end cloud journey from your current on-premises or cloud environments to Google Cloud.
 *
 * The version of the OpenAPI document: v1alpha1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIReportSummaryMachineFinding.h
 *
 * A set of findings that applies to assets of type Virtual/Physical Machine.
 */

#ifndef OAIReportSummaryMachineFinding_H
#define OAIReportSummaryMachineFinding_H

#include <QJsonObject>

#include "OAIReportSummaryMachineSeriesAllocation.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIReportSummaryMachineSeriesAllocation;

class OAIReportSummaryMachineFinding : public OAIObject {
public:
    OAIReportSummaryMachineFinding();
    OAIReportSummaryMachineFinding(QString json);
    ~OAIReportSummaryMachineFinding() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAllocatedAssetCount() const;
    void setAllocatedAssetCount(const QString &allocated_asset_count);
    bool is_allocated_asset_count_Set() const;
    bool is_allocated_asset_count_Valid() const;

    QList<QString> getAllocatedDiskTypes() const;
    void setAllocatedDiskTypes(const QList<QString> &allocated_disk_types);
    bool is_allocated_disk_types_Set() const;
    bool is_allocated_disk_types_Valid() const;

    QList<QString> getAllocatedRegions() const;
    void setAllocatedRegions(const QList<QString> &allocated_regions);
    bool is_allocated_regions_Set() const;
    bool is_allocated_regions_Valid() const;

    QList<OAIReportSummaryMachineSeriesAllocation> getMachineSeriesAllocations() const;
    void setMachineSeriesAllocations(const QList<OAIReportSummaryMachineSeriesAllocation> &machine_series_allocations);
    bool is_machine_series_allocations_Set() const;
    bool is_machine_series_allocations_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_allocated_asset_count;
    bool m_allocated_asset_count_isSet;
    bool m_allocated_asset_count_isValid;

    QList<QString> m_allocated_disk_types;
    bool m_allocated_disk_types_isSet;
    bool m_allocated_disk_types_isValid;

    QList<QString> m_allocated_regions;
    bool m_allocated_regions_isSet;
    bool m_allocated_regions_isValid;

    QList<OAIReportSummaryMachineSeriesAllocation> m_machine_series_allocations;
    bool m_machine_series_allocations_isSet;
    bool m_machine_series_allocations_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIReportSummaryMachineFinding)

#endif // OAIReportSummaryMachineFinding_H
