/**
 * Migration Center API
 * A unified platform that helps you accelerate your end-to-end cloud journey from your current on-premises or cloud environments to Google Cloud.
 *
 * The version of the OpenAPI document: v1alpha1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAggregationResult.h
 *
 * Message describing a result of an aggregation.
 */

#ifndef OAIAggregationResult_H
#define OAIAggregationResult_H

#include <QJsonObject>

#include "OAIAggregationResultCount.h"
#include "OAIAggregationResultFrequency.h"
#include "OAIAggregationResultHistogram.h"
#include "OAIAggregationResultSum.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAggregationResultCount;
class OAIAggregationResultFrequency;
class OAIAggregationResultHistogram;
class OAIAggregationResultSum;

class OAIAggregationResult : public OAIObject {
public:
    OAIAggregationResult();
    OAIAggregationResult(QString json);
    ~OAIAggregationResult() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAggregationResultCount getCount() const;
    void setCount(const OAIAggregationResultCount &count);
    bool is_count_Set() const;
    bool is_count_Valid() const;

    QString getField() const;
    void setField(const QString &field);
    bool is_field_Set() const;
    bool is_field_Valid() const;

    OAIAggregationResultFrequency getFrequency() const;
    void setFrequency(const OAIAggregationResultFrequency &frequency);
    bool is_frequency_Set() const;
    bool is_frequency_Valid() const;

    OAIAggregationResultHistogram getHistogram() const;
    void setHistogram(const OAIAggregationResultHistogram &histogram);
    bool is_histogram_Set() const;
    bool is_histogram_Valid() const;

    OAIAggregationResultSum getSum() const;
    void setSum(const OAIAggregationResultSum &sum);
    bool is_sum_Set() const;
    bool is_sum_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAggregationResultCount m_count;
    bool m_count_isSet;
    bool m_count_isValid;

    QString m_field;
    bool m_field_isSet;
    bool m_field_isValid;

    OAIAggregationResultFrequency m_frequency;
    bool m_frequency_isSet;
    bool m_frequency_isValid;

    OAIAggregationResultHistogram m_histogram;
    bool m_histogram_isSet;
    bool m_histogram_isValid;

    OAIAggregationResultSum m_sum;
    bool m_sum_isSet;
    bool m_sum_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAggregationResult)

#endif // OAIAggregationResult_H
