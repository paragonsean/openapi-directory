/**
 * Migration Center API
 * A unified platform that helps you accelerate your end-to-end cloud journey from your current on-premises or cloud environments to Google Cloud.
 *
 * The version of the OpenAPI document: v1alpha1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAssetFrame.h
 *
 * Contains data reported from an inventory source on an asset.
 */

#ifndef OAIAssetFrame_H
#define OAIAssetFrame_H

#include <QJsonObject>

#include "OAIPerformanceSample.h"
#include "OAIVirtualMachineDetails.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPerformanceSample;
class OAIVirtualMachineDetails;

class OAIAssetFrame : public OAIObject {
public:
    OAIAssetFrame();
    OAIAssetFrame(QString json);
    ~OAIAssetFrame() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QMap<QString, QString> getAttributes() const;
    void setAttributes(const QMap<QString, QString> &attributes);
    bool is_attributes_Set() const;
    bool is_attributes_Valid() const;

    QMap<QString, QString> getLabels() const;
    void setLabels(const QMap<QString, QString> &labels);
    bool is_labels_Set() const;
    bool is_labels_Valid() const;

    QList<OAIPerformanceSample> getPerformanceSamples() const;
    void setPerformanceSamples(const QList<OAIPerformanceSample> &performance_samples);
    bool is_performance_samples_Set() const;
    bool is_performance_samples_Valid() const;

    QString getReportTime() const;
    void setReportTime(const QString &report_time);
    bool is_report_time_Set() const;
    bool is_report_time_Valid() const;

    QString getTraceToken() const;
    void setTraceToken(const QString &trace_token);
    bool is_trace_token_Set() const;
    bool is_trace_token_Valid() const;

    OAIVirtualMachineDetails getVirtualMachineDetails() const;
    void setVirtualMachineDetails(const OAIVirtualMachineDetails &virtual_machine_details);
    bool is_virtual_machine_details_Set() const;
    bool is_virtual_machine_details_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QMap<QString, QString> m_attributes;
    bool m_attributes_isSet;
    bool m_attributes_isValid;

    QMap<QString, QString> m_labels;
    bool m_labels_isSet;
    bool m_labels_isValid;

    QList<OAIPerformanceSample> m_performance_samples;
    bool m_performance_samples_isSet;
    bool m_performance_samples_isValid;

    QString m_report_time;
    bool m_report_time_isSet;
    bool m_report_time_isValid;

    QString m_trace_token;
    bool m_trace_token_isSet;
    bool m_trace_token_isValid;

    OAIVirtualMachineDetails m_virtual_machine_details;
    bool m_virtual_machine_details_isSet;
    bool m_virtual_machine_details_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAssetFrame)

#endif // OAIAssetFrame_H
