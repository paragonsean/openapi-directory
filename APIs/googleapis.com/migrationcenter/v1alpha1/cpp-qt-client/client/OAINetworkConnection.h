/**
 * Migration Center API
 * A unified platform that helps you accelerate your end-to-end cloud journey from your current on-premises or cloud environments to Google Cloud.
 *
 * The version of the OpenAPI document: v1alpha1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINetworkConnection.h
 *
 * 
 */

#ifndef OAINetworkConnection_H
#define OAINetworkConnection_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAINetworkConnection : public OAIObject {
public:
    OAINetworkConnection();
    OAINetworkConnection(QString json);
    ~OAINetworkConnection() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getLocalIpAddress() const;
    void setLocalIpAddress(const QString &local_ip_address);
    bool is_local_ip_address_Set() const;
    bool is_local_ip_address_Valid() const;

    qint32 getLocalPort() const;
    void setLocalPort(const qint32 &local_port);
    bool is_local_port_Set() const;
    bool is_local_port_Valid() const;

    QString getPid() const;
    void setPid(const QString &pid);
    bool is_pid_Set() const;
    bool is_pid_Valid() const;

    QString getProcessName() const;
    void setProcessName(const QString &process_name);
    bool is_process_name_Set() const;
    bool is_process_name_Valid() const;

    QString getProtocol() const;
    void setProtocol(const QString &protocol);
    bool is_protocol_Set() const;
    bool is_protocol_Valid() const;

    QString getRemoteIpAddress() const;
    void setRemoteIpAddress(const QString &remote_ip_address);
    bool is_remote_ip_address_Set() const;
    bool is_remote_ip_address_Valid() const;

    qint32 getRemotePort() const;
    void setRemotePort(const qint32 &remote_port);
    bool is_remote_port_Set() const;
    bool is_remote_port_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_local_ip_address;
    bool m_local_ip_address_isSet;
    bool m_local_ip_address_isValid;

    qint32 m_local_port;
    bool m_local_port_isSet;
    bool m_local_port_isValid;

    QString m_pid;
    bool m_pid_isSet;
    bool m_pid_isValid;

    QString m_process_name;
    bool m_process_name_isSet;
    bool m_process_name_isValid;

    QString m_protocol;
    bool m_protocol_isSet;
    bool m_protocol_isValid;

    QString m_remote_ip_address;
    bool m_remote_ip_address_isSet;
    bool m_remote_ip_address_isValid;

    qint32 m_remote_port;
    bool m_remote_port_isSet;
    bool m_remote_port_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINetworkConnection)

#endif // OAINetworkConnection_H
