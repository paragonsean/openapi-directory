/*
 * Discovery Engine API
 * Discovery Engine API.
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A specification for configuring the extractive content in a search response.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:39:37.233219-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecExtractiveContentSpec {
  public static final String SERIALIZED_NAME_MAX_EXTRACTIVE_ANSWER_COUNT = "maxExtractiveAnswerCount";
  @SerializedName(SERIALIZED_NAME_MAX_EXTRACTIVE_ANSWER_COUNT)
  private Integer maxExtractiveAnswerCount;

  public static final String SERIALIZED_NAME_MAX_EXTRACTIVE_SEGMENT_COUNT = "maxExtractiveSegmentCount";
  @SerializedName(SERIALIZED_NAME_MAX_EXTRACTIVE_SEGMENT_COUNT)
  private Integer maxExtractiveSegmentCount;

  public static final String SERIALIZED_NAME_NUM_NEXT_SEGMENTS = "numNextSegments";
  @SerializedName(SERIALIZED_NAME_NUM_NEXT_SEGMENTS)
  private Integer numNextSegments;

  public static final String SERIALIZED_NAME_NUM_PREVIOUS_SEGMENTS = "numPreviousSegments";
  @SerializedName(SERIALIZED_NAME_NUM_PREVIOUS_SEGMENTS)
  private Integer numPreviousSegments;

  public GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecExtractiveContentSpec() {
  }

  public GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecExtractiveContentSpec maxExtractiveAnswerCount(Integer maxExtractiveAnswerCount) {
    this.maxExtractiveAnswerCount = maxExtractiveAnswerCount;
    return this;
  }

  /**
   * The maximum number of extractive answers returned in each search result. An extractive answer is a verbatim answer extracted from the original document, which provides a precise and contextually relevant answer to the search query. If the number of matching answers is less than the &#x60;max_extractive_answer_count&#x60;, return all of the answers. Otherwise, return the &#x60;max_extractive_answer_count&#x60;. At most five answers are returned for each SearchResult.
   * @return maxExtractiveAnswerCount
   */
  @javax.annotation.Nullable
  public Integer getMaxExtractiveAnswerCount() {
    return maxExtractiveAnswerCount;
  }

  public void setMaxExtractiveAnswerCount(Integer maxExtractiveAnswerCount) {
    this.maxExtractiveAnswerCount = maxExtractiveAnswerCount;
  }


  public GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecExtractiveContentSpec maxExtractiveSegmentCount(Integer maxExtractiveSegmentCount) {
    this.maxExtractiveSegmentCount = maxExtractiveSegmentCount;
    return this;
  }

  /**
   * The max number of extractive segments returned in each search result. Only applied if the DataStore is set to DataStore.ContentConfig.CONTENT_REQUIRED or DataStore.solution_types is SOLUTION_TYPE_CHAT. An extractive segment is a text segment extracted from the original document that is relevant to the search query, and, in general, more verbose than an extractive answer. The segment could then be used as input for LLMs to generate summaries and answers. If the number of matching segments is less than &#x60;max_extractive_segment_count&#x60;, return all of the segments. Otherwise, return the &#x60;max_extractive_segment_count&#x60;.
   * @return maxExtractiveSegmentCount
   */
  @javax.annotation.Nullable
  public Integer getMaxExtractiveSegmentCount() {
    return maxExtractiveSegmentCount;
  }

  public void setMaxExtractiveSegmentCount(Integer maxExtractiveSegmentCount) {
    this.maxExtractiveSegmentCount = maxExtractiveSegmentCount;
  }


  public GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecExtractiveContentSpec numNextSegments(Integer numNextSegments) {
    this.numNextSegments = numNextSegments;
    return this;
  }

  /**
   * Return at most &#x60;num_next_segments&#x60; segments after each selected segments.
   * @return numNextSegments
   */
  @javax.annotation.Nullable
  public Integer getNumNextSegments() {
    return numNextSegments;
  }

  public void setNumNextSegments(Integer numNextSegments) {
    this.numNextSegments = numNextSegments;
  }


  public GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecExtractiveContentSpec numPreviousSegments(Integer numPreviousSegments) {
    this.numPreviousSegments = numPreviousSegments;
    return this;
  }

  /**
   * Specifies whether to also include the adjacent from each selected segments. Return at most &#x60;num_previous_segments&#x60; segments before each selected segments.
   * @return numPreviousSegments
   */
  @javax.annotation.Nullable
  public Integer getNumPreviousSegments() {
    return numPreviousSegments;
  }

  public void setNumPreviousSegments(Integer numPreviousSegments) {
    this.numPreviousSegments = numPreviousSegments;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecExtractiveContentSpec googleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecExtractiveContentSpec = (GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecExtractiveContentSpec) o;
    return Objects.equals(this.maxExtractiveAnswerCount, googleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecExtractiveContentSpec.maxExtractiveAnswerCount) &&
        Objects.equals(this.maxExtractiveSegmentCount, googleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecExtractiveContentSpec.maxExtractiveSegmentCount) &&
        Objects.equals(this.numNextSegments, googleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecExtractiveContentSpec.numNextSegments) &&
        Objects.equals(this.numPreviousSegments, googleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecExtractiveContentSpec.numPreviousSegments);
  }

  @Override
  public int hashCode() {
    return Objects.hash(maxExtractiveAnswerCount, maxExtractiveSegmentCount, numNextSegments, numPreviousSegments);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecExtractiveContentSpec {\n");
    sb.append("    maxExtractiveAnswerCount: ").append(toIndentedString(maxExtractiveAnswerCount)).append("\n");
    sb.append("    maxExtractiveSegmentCount: ").append(toIndentedString(maxExtractiveSegmentCount)).append("\n");
    sb.append("    numNextSegments: ").append(toIndentedString(numNextSegments)).append("\n");
    sb.append("    numPreviousSegments: ").append(toIndentedString(numPreviousSegments)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("maxExtractiveAnswerCount");
    openapiFields.add("maxExtractiveSegmentCount");
    openapiFields.add("numNextSegments");
    openapiFields.add("numPreviousSegments");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecExtractiveContentSpec
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecExtractiveContentSpec.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecExtractiveContentSpec is not found in the empty JSON string", GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecExtractiveContentSpec.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecExtractiveContentSpec.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecExtractiveContentSpec` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecExtractiveContentSpec.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecExtractiveContentSpec' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecExtractiveContentSpec> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecExtractiveContentSpec.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecExtractiveContentSpec>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecExtractiveContentSpec value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecExtractiveContentSpec read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecExtractiveContentSpec given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecExtractiveContentSpec
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecExtractiveContentSpec
   */
  public static GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecExtractiveContentSpec fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecExtractiveContentSpec.class);
  }

  /**
   * Convert an instance of GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecExtractiveContentSpec to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

