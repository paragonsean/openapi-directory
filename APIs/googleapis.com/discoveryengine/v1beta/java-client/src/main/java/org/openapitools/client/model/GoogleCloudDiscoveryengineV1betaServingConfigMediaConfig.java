/*
 * Discovery Engine API
 * Discovery Engine API.
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Specifies the configurations needed for Media Discovery. Currently we support: * &#x60;demote_content_watched&#x60;: Threshold for watched content demotion. Customers can specify if using watched content demotion or use viewed detail page. Using the content watched demotion, customers need to specify the watched minutes or percentage exceeds the threshold, the content will be demoted in the recommendation result. * &#x60;promote_fresh_content&#x60;: cutoff days for fresh content promotion. Customers can specify if using content freshness promotion. If the content was published within the cutoff days, the content will be promoted in the recommendation result. Can only be set if SolutionType is SOLUTION_TYPE_RECOMMENDATION.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:39:37.233219-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDiscoveryengineV1betaServingConfigMediaConfig {
  public static final String SERIALIZED_NAME_CONTENT_FRESHNESS_CUTOFF_DAYS = "contentFreshnessCutoffDays";
  @SerializedName(SERIALIZED_NAME_CONTENT_FRESHNESS_CUTOFF_DAYS)
  private Integer contentFreshnessCutoffDays;

  public static final String SERIALIZED_NAME_CONTENT_WATCHED_MINUTES_THRESHOLD = "contentWatchedMinutesThreshold";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_CONTENT_WATCHED_MINUTES_THRESHOLD)
  private Float contentWatchedMinutesThreshold;

  public static final String SERIALIZED_NAME_CONTENT_WATCHED_PERCENTAGE_THRESHOLD = "contentWatchedPercentageThreshold";
  @SerializedName(SERIALIZED_NAME_CONTENT_WATCHED_PERCENTAGE_THRESHOLD)
  private Float contentWatchedPercentageThreshold;

  public static final String SERIALIZED_NAME_CONTENT_WATCHED_SECONDS_THRESHOLD = "contentWatchedSecondsThreshold";
  @SerializedName(SERIALIZED_NAME_CONTENT_WATCHED_SECONDS_THRESHOLD)
  private Float contentWatchedSecondsThreshold;

  public static final String SERIALIZED_NAME_DEMOTION_EVENT_TYPE = "demotionEventType";
  @SerializedName(SERIALIZED_NAME_DEMOTION_EVENT_TYPE)
  private String demotionEventType;

  public GoogleCloudDiscoveryengineV1betaServingConfigMediaConfig() {
  }

  public GoogleCloudDiscoveryengineV1betaServingConfigMediaConfig contentFreshnessCutoffDays(Integer contentFreshnessCutoffDays) {
    this.contentFreshnessCutoffDays = contentFreshnessCutoffDays;
    return this;
  }

  /**
   * Specifies the content freshness used for recommendation result. Contents will be demoted if contents were published for more than content freshness cutoff days.
   * @return contentFreshnessCutoffDays
   */
  @javax.annotation.Nullable
  public Integer getContentFreshnessCutoffDays() {
    return contentFreshnessCutoffDays;
  }

  public void setContentFreshnessCutoffDays(Integer contentFreshnessCutoffDays) {
    this.contentFreshnessCutoffDays = contentFreshnessCutoffDays;
  }


  @Deprecated
  public GoogleCloudDiscoveryengineV1betaServingConfigMediaConfig contentWatchedMinutesThreshold(Float contentWatchedMinutesThreshold) {
    this.contentWatchedMinutesThreshold = contentWatchedMinutesThreshold;
    return this;
  }

  /**
   * Specifies the content watched minutes threshold for demotion.
   * @return contentWatchedMinutesThreshold
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public Float getContentWatchedMinutesThreshold() {
    return contentWatchedMinutesThreshold;
  }

  @Deprecated
  public void setContentWatchedMinutesThreshold(Float contentWatchedMinutesThreshold) {
    this.contentWatchedMinutesThreshold = contentWatchedMinutesThreshold;
  }


  public GoogleCloudDiscoveryengineV1betaServingConfigMediaConfig contentWatchedPercentageThreshold(Float contentWatchedPercentageThreshold) {
    this.contentWatchedPercentageThreshold = contentWatchedPercentageThreshold;
    return this;
  }

  /**
   * Specifies the content watched percentage threshold for demotion. Threshold value must be between [0, 1.0] inclusive.
   * @return contentWatchedPercentageThreshold
   */
  @javax.annotation.Nullable
  public Float getContentWatchedPercentageThreshold() {
    return contentWatchedPercentageThreshold;
  }

  public void setContentWatchedPercentageThreshold(Float contentWatchedPercentageThreshold) {
    this.contentWatchedPercentageThreshold = contentWatchedPercentageThreshold;
  }


  public GoogleCloudDiscoveryengineV1betaServingConfigMediaConfig contentWatchedSecondsThreshold(Float contentWatchedSecondsThreshold) {
    this.contentWatchedSecondsThreshold = contentWatchedSecondsThreshold;
    return this;
  }

  /**
   * Specifies the content watched minutes threshold for demotion.
   * @return contentWatchedSecondsThreshold
   */
  @javax.annotation.Nullable
  public Float getContentWatchedSecondsThreshold() {
    return contentWatchedSecondsThreshold;
  }

  public void setContentWatchedSecondsThreshold(Float contentWatchedSecondsThreshold) {
    this.contentWatchedSecondsThreshold = contentWatchedSecondsThreshold;
  }


  public GoogleCloudDiscoveryengineV1betaServingConfigMediaConfig demotionEventType(String demotionEventType) {
    this.demotionEventType = demotionEventType;
    return this;
  }

  /**
   * Specifies the event type used for demoting recommendation result. Currently supported values: * &#x60;view-item&#x60;: Item viewed. * &#x60;media-play&#x60;: Start/resume watching a video, playing a song, etc. * &#x60;media-complete&#x60;: Finished or stopped midway through a video, song, etc. If unset, watch history demotion will not be applied. Content freshness demotion will still be applied.
   * @return demotionEventType
   */
  @javax.annotation.Nullable
  public String getDemotionEventType() {
    return demotionEventType;
  }

  public void setDemotionEventType(String demotionEventType) {
    this.demotionEventType = demotionEventType;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDiscoveryengineV1betaServingConfigMediaConfig googleCloudDiscoveryengineV1betaServingConfigMediaConfig = (GoogleCloudDiscoveryengineV1betaServingConfigMediaConfig) o;
    return Objects.equals(this.contentFreshnessCutoffDays, googleCloudDiscoveryengineV1betaServingConfigMediaConfig.contentFreshnessCutoffDays) &&
        Objects.equals(this.contentWatchedMinutesThreshold, googleCloudDiscoveryengineV1betaServingConfigMediaConfig.contentWatchedMinutesThreshold) &&
        Objects.equals(this.contentWatchedPercentageThreshold, googleCloudDiscoveryengineV1betaServingConfigMediaConfig.contentWatchedPercentageThreshold) &&
        Objects.equals(this.contentWatchedSecondsThreshold, googleCloudDiscoveryengineV1betaServingConfigMediaConfig.contentWatchedSecondsThreshold) &&
        Objects.equals(this.demotionEventType, googleCloudDiscoveryengineV1betaServingConfigMediaConfig.demotionEventType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(contentFreshnessCutoffDays, contentWatchedMinutesThreshold, contentWatchedPercentageThreshold, contentWatchedSecondsThreshold, demotionEventType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDiscoveryengineV1betaServingConfigMediaConfig {\n");
    sb.append("    contentFreshnessCutoffDays: ").append(toIndentedString(contentFreshnessCutoffDays)).append("\n");
    sb.append("    contentWatchedMinutesThreshold: ").append(toIndentedString(contentWatchedMinutesThreshold)).append("\n");
    sb.append("    contentWatchedPercentageThreshold: ").append(toIndentedString(contentWatchedPercentageThreshold)).append("\n");
    sb.append("    contentWatchedSecondsThreshold: ").append(toIndentedString(contentWatchedSecondsThreshold)).append("\n");
    sb.append("    demotionEventType: ").append(toIndentedString(demotionEventType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("contentFreshnessCutoffDays");
    openapiFields.add("contentWatchedMinutesThreshold");
    openapiFields.add("contentWatchedPercentageThreshold");
    openapiFields.add("contentWatchedSecondsThreshold");
    openapiFields.add("demotionEventType");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDiscoveryengineV1betaServingConfigMediaConfig
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDiscoveryengineV1betaServingConfigMediaConfig.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDiscoveryengineV1betaServingConfigMediaConfig is not found in the empty JSON string", GoogleCloudDiscoveryengineV1betaServingConfigMediaConfig.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDiscoveryengineV1betaServingConfigMediaConfig.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDiscoveryengineV1betaServingConfigMediaConfig` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("demotionEventType") != null && !jsonObj.get("demotionEventType").isJsonNull()) && !jsonObj.get("demotionEventType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `demotionEventType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("demotionEventType").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDiscoveryengineV1betaServingConfigMediaConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDiscoveryengineV1betaServingConfigMediaConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDiscoveryengineV1betaServingConfigMediaConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDiscoveryengineV1betaServingConfigMediaConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDiscoveryengineV1betaServingConfigMediaConfig>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDiscoveryengineV1betaServingConfigMediaConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDiscoveryengineV1betaServingConfigMediaConfig read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDiscoveryengineV1betaServingConfigMediaConfig given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDiscoveryengineV1betaServingConfigMediaConfig
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDiscoveryengineV1betaServingConfigMediaConfig
   */
  public static GoogleCloudDiscoveryengineV1betaServingConfigMediaConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDiscoveryengineV1betaServingConfigMediaConfig.class);
  }

  /**
   * Convert an instance of GoogleCloudDiscoveryengineV1betaServingConfigMediaConfig to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

