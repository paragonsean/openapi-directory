/*
 * Discovery Engine API
 * Discovery Engine API.
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudDiscoveryengineV1alphaImportErrorConfig;
import org.openapitools.client.model.GoogleRpcStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Response of the ImportUserEventsRequest. If the long running operation was successful, then this message is returned by the google.longrunning.Operations.response field if the operation was successful.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:39:37.233219-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDiscoveryengineV1alphaImportUserEventsResponse {
  public static final String SERIALIZED_NAME_ERROR_CONFIG = "errorConfig";
  @SerializedName(SERIALIZED_NAME_ERROR_CONFIG)
  private GoogleCloudDiscoveryengineV1alphaImportErrorConfig errorConfig;

  public static final String SERIALIZED_NAME_ERROR_SAMPLES = "errorSamples";
  @SerializedName(SERIALIZED_NAME_ERROR_SAMPLES)
  private List<GoogleRpcStatus> errorSamples = new ArrayList<>();

  public static final String SERIALIZED_NAME_JOINED_EVENTS_COUNT = "joinedEventsCount";
  @SerializedName(SERIALIZED_NAME_JOINED_EVENTS_COUNT)
  private String joinedEventsCount;

  public static final String SERIALIZED_NAME_UNJOINED_EVENTS_COUNT = "unjoinedEventsCount";
  @SerializedName(SERIALIZED_NAME_UNJOINED_EVENTS_COUNT)
  private String unjoinedEventsCount;

  public GoogleCloudDiscoveryengineV1alphaImportUserEventsResponse() {
  }

  public GoogleCloudDiscoveryengineV1alphaImportUserEventsResponse errorConfig(GoogleCloudDiscoveryengineV1alphaImportErrorConfig errorConfig) {
    this.errorConfig = errorConfig;
    return this;
  }

  /**
   * Get errorConfig
   * @return errorConfig
   */
  @javax.annotation.Nullable
  public GoogleCloudDiscoveryengineV1alphaImportErrorConfig getErrorConfig() {
    return errorConfig;
  }

  public void setErrorConfig(GoogleCloudDiscoveryengineV1alphaImportErrorConfig errorConfig) {
    this.errorConfig = errorConfig;
  }


  public GoogleCloudDiscoveryengineV1alphaImportUserEventsResponse errorSamples(List<GoogleRpcStatus> errorSamples) {
    this.errorSamples = errorSamples;
    return this;
  }

  public GoogleCloudDiscoveryengineV1alphaImportUserEventsResponse addErrorSamplesItem(GoogleRpcStatus errorSamplesItem) {
    if (this.errorSamples == null) {
      this.errorSamples = new ArrayList<>();
    }
    this.errorSamples.add(errorSamplesItem);
    return this;
  }

  /**
   * A sample of errors encountered while processing the request.
   * @return errorSamples
   */
  @javax.annotation.Nullable
  public List<GoogleRpcStatus> getErrorSamples() {
    return errorSamples;
  }

  public void setErrorSamples(List<GoogleRpcStatus> errorSamples) {
    this.errorSamples = errorSamples;
  }


  public GoogleCloudDiscoveryengineV1alphaImportUserEventsResponse joinedEventsCount(String joinedEventsCount) {
    this.joinedEventsCount = joinedEventsCount;
    return this;
  }

  /**
   * Count of user events imported with complete existing Documents.
   * @return joinedEventsCount
   */
  @javax.annotation.Nullable
  public String getJoinedEventsCount() {
    return joinedEventsCount;
  }

  public void setJoinedEventsCount(String joinedEventsCount) {
    this.joinedEventsCount = joinedEventsCount;
  }


  public GoogleCloudDiscoveryengineV1alphaImportUserEventsResponse unjoinedEventsCount(String unjoinedEventsCount) {
    this.unjoinedEventsCount = unjoinedEventsCount;
    return this;
  }

  /**
   * Count of user events imported, but with Document information not found in the existing Branch.
   * @return unjoinedEventsCount
   */
  @javax.annotation.Nullable
  public String getUnjoinedEventsCount() {
    return unjoinedEventsCount;
  }

  public void setUnjoinedEventsCount(String unjoinedEventsCount) {
    this.unjoinedEventsCount = unjoinedEventsCount;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDiscoveryengineV1alphaImportUserEventsResponse googleCloudDiscoveryengineV1alphaImportUserEventsResponse = (GoogleCloudDiscoveryengineV1alphaImportUserEventsResponse) o;
    return Objects.equals(this.errorConfig, googleCloudDiscoveryengineV1alphaImportUserEventsResponse.errorConfig) &&
        Objects.equals(this.errorSamples, googleCloudDiscoveryengineV1alphaImportUserEventsResponse.errorSamples) &&
        Objects.equals(this.joinedEventsCount, googleCloudDiscoveryengineV1alphaImportUserEventsResponse.joinedEventsCount) &&
        Objects.equals(this.unjoinedEventsCount, googleCloudDiscoveryengineV1alphaImportUserEventsResponse.unjoinedEventsCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(errorConfig, errorSamples, joinedEventsCount, unjoinedEventsCount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDiscoveryengineV1alphaImportUserEventsResponse {\n");
    sb.append("    errorConfig: ").append(toIndentedString(errorConfig)).append("\n");
    sb.append("    errorSamples: ").append(toIndentedString(errorSamples)).append("\n");
    sb.append("    joinedEventsCount: ").append(toIndentedString(joinedEventsCount)).append("\n");
    sb.append("    unjoinedEventsCount: ").append(toIndentedString(unjoinedEventsCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("errorConfig");
    openapiFields.add("errorSamples");
    openapiFields.add("joinedEventsCount");
    openapiFields.add("unjoinedEventsCount");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDiscoveryengineV1alphaImportUserEventsResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDiscoveryengineV1alphaImportUserEventsResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDiscoveryengineV1alphaImportUserEventsResponse is not found in the empty JSON string", GoogleCloudDiscoveryengineV1alphaImportUserEventsResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDiscoveryengineV1alphaImportUserEventsResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDiscoveryengineV1alphaImportUserEventsResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `errorConfig`
      if (jsonObj.get("errorConfig") != null && !jsonObj.get("errorConfig").isJsonNull()) {
        GoogleCloudDiscoveryengineV1alphaImportErrorConfig.validateJsonElement(jsonObj.get("errorConfig"));
      }
      if (jsonObj.get("errorSamples") != null && !jsonObj.get("errorSamples").isJsonNull()) {
        JsonArray jsonArrayerrorSamples = jsonObj.getAsJsonArray("errorSamples");
        if (jsonArrayerrorSamples != null) {
          // ensure the json data is an array
          if (!jsonObj.get("errorSamples").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `errorSamples` to be an array in the JSON string but got `%s`", jsonObj.get("errorSamples").toString()));
          }

          // validate the optional field `errorSamples` (array)
          for (int i = 0; i < jsonArrayerrorSamples.size(); i++) {
            GoogleRpcStatus.validateJsonElement(jsonArrayerrorSamples.get(i));
          };
        }
      }
      if ((jsonObj.get("joinedEventsCount") != null && !jsonObj.get("joinedEventsCount").isJsonNull()) && !jsonObj.get("joinedEventsCount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `joinedEventsCount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("joinedEventsCount").toString()));
      }
      if ((jsonObj.get("unjoinedEventsCount") != null && !jsonObj.get("unjoinedEventsCount").isJsonNull()) && !jsonObj.get("unjoinedEventsCount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `unjoinedEventsCount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("unjoinedEventsCount").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDiscoveryengineV1alphaImportUserEventsResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDiscoveryengineV1alphaImportUserEventsResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDiscoveryengineV1alphaImportUserEventsResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDiscoveryengineV1alphaImportUserEventsResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDiscoveryengineV1alphaImportUserEventsResponse>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDiscoveryengineV1alphaImportUserEventsResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDiscoveryengineV1alphaImportUserEventsResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDiscoveryengineV1alphaImportUserEventsResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDiscoveryengineV1alphaImportUserEventsResponse
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDiscoveryengineV1alphaImportUserEventsResponse
   */
  public static GoogleCloudDiscoveryengineV1alphaImportUserEventsResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDiscoveryengineV1alphaImportUserEventsResponse.class);
  }

  /**
   * Convert an instance of GoogleCloudDiscoveryengineV1alphaImportUserEventsResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

