/*
 * Discovery Engine API
 * Discovery Engine API.
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Metadata related to the progress of the SiteSearchEngineService.RecrawlUris operation. This will be returned by the google.longrunning.Operation.metadata field.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:39:37.233219-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDiscoveryengineV1alphaRecrawlUrisMetadata {
  public static final String SERIALIZED_NAME_CREATE_TIME = "createTime";
  @SerializedName(SERIALIZED_NAME_CREATE_TIME)
  private String createTime;

  public static final String SERIALIZED_NAME_INVALID_URIS = "invalidUris";
  @SerializedName(SERIALIZED_NAME_INVALID_URIS)
  private List<String> invalidUris = new ArrayList<>();

  public static final String SERIALIZED_NAME_PENDING_COUNT = "pendingCount";
  @SerializedName(SERIALIZED_NAME_PENDING_COUNT)
  private Integer pendingCount;

  public static final String SERIALIZED_NAME_QUOTA_EXCEEDED_COUNT = "quotaExceededCount";
  @SerializedName(SERIALIZED_NAME_QUOTA_EXCEEDED_COUNT)
  private Integer quotaExceededCount;

  public static final String SERIALIZED_NAME_SUCCESS_COUNT = "successCount";
  @SerializedName(SERIALIZED_NAME_SUCCESS_COUNT)
  private Integer successCount;

  public static final String SERIALIZED_NAME_UPDATE_TIME = "updateTime";
  @SerializedName(SERIALIZED_NAME_UPDATE_TIME)
  private String updateTime;

  public static final String SERIALIZED_NAME_VALID_URIS_COUNT = "validUrisCount";
  @SerializedName(SERIALIZED_NAME_VALID_URIS_COUNT)
  private Integer validUrisCount;

  public GoogleCloudDiscoveryengineV1alphaRecrawlUrisMetadata() {
  }

  public GoogleCloudDiscoveryengineV1alphaRecrawlUrisMetadata createTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Operation create time.
   * @return createTime
   */
  @javax.annotation.Nullable
  public String getCreateTime() {
    return createTime;
  }

  public void setCreateTime(String createTime) {
    this.createTime = createTime;
  }


  public GoogleCloudDiscoveryengineV1alphaRecrawlUrisMetadata invalidUris(List<String> invalidUris) {
    this.invalidUris = invalidUris;
    return this;
  }

  public GoogleCloudDiscoveryengineV1alphaRecrawlUrisMetadata addInvalidUrisItem(String invalidUrisItem) {
    if (this.invalidUris == null) {
      this.invalidUris = new ArrayList<>();
    }
    this.invalidUris.add(invalidUrisItem);
    return this;
  }

  /**
   * Unique URIs in the request that don&#39;t match any TargetSite in the DataStore, only match TargetSites that haven&#39;t been fully indexed, or match a TargetSite with type EXCLUDE.
   * @return invalidUris
   */
  @javax.annotation.Nullable
  public List<String> getInvalidUris() {
    return invalidUris;
  }

  public void setInvalidUris(List<String> invalidUris) {
    this.invalidUris = invalidUris;
  }


  public GoogleCloudDiscoveryengineV1alphaRecrawlUrisMetadata pendingCount(Integer pendingCount) {
    this.pendingCount = pendingCount;
    return this;
  }

  /**
   * Total number of URIs that have yet to be crawled.
   * @return pendingCount
   */
  @javax.annotation.Nullable
  public Integer getPendingCount() {
    return pendingCount;
  }

  public void setPendingCount(Integer pendingCount) {
    this.pendingCount = pendingCount;
  }


  public GoogleCloudDiscoveryengineV1alphaRecrawlUrisMetadata quotaExceededCount(Integer quotaExceededCount) {
    this.quotaExceededCount = quotaExceededCount;
    return this;
  }

  /**
   * Total number of URIs that were rejected due to insufficient indexing resources.
   * @return quotaExceededCount
   */
  @javax.annotation.Nullable
  public Integer getQuotaExceededCount() {
    return quotaExceededCount;
  }

  public void setQuotaExceededCount(Integer quotaExceededCount) {
    this.quotaExceededCount = quotaExceededCount;
  }


  public GoogleCloudDiscoveryengineV1alphaRecrawlUrisMetadata successCount(Integer successCount) {
    this.successCount = successCount;
    return this;
  }

  /**
   * Total number of URIs that have been crawled so far.
   * @return successCount
   */
  @javax.annotation.Nullable
  public Integer getSuccessCount() {
    return successCount;
  }

  public void setSuccessCount(Integer successCount) {
    this.successCount = successCount;
  }


  public GoogleCloudDiscoveryengineV1alphaRecrawlUrisMetadata updateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  /**
   * Operation last update time. If the operation is done, this is also the finish time.
   * @return updateTime
   */
  @javax.annotation.Nullable
  public String getUpdateTime() {
    return updateTime;
  }

  public void setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
  }


  public GoogleCloudDiscoveryengineV1alphaRecrawlUrisMetadata validUrisCount(Integer validUrisCount) {
    this.validUrisCount = validUrisCount;
    return this;
  }

  /**
   * Total number of unique URIs in the request that are not in invalid_uris.
   * @return validUrisCount
   */
  @javax.annotation.Nullable
  public Integer getValidUrisCount() {
    return validUrisCount;
  }

  public void setValidUrisCount(Integer validUrisCount) {
    this.validUrisCount = validUrisCount;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDiscoveryengineV1alphaRecrawlUrisMetadata googleCloudDiscoveryengineV1alphaRecrawlUrisMetadata = (GoogleCloudDiscoveryengineV1alphaRecrawlUrisMetadata) o;
    return Objects.equals(this.createTime, googleCloudDiscoveryengineV1alphaRecrawlUrisMetadata.createTime) &&
        Objects.equals(this.invalidUris, googleCloudDiscoveryengineV1alphaRecrawlUrisMetadata.invalidUris) &&
        Objects.equals(this.pendingCount, googleCloudDiscoveryengineV1alphaRecrawlUrisMetadata.pendingCount) &&
        Objects.equals(this.quotaExceededCount, googleCloudDiscoveryengineV1alphaRecrawlUrisMetadata.quotaExceededCount) &&
        Objects.equals(this.successCount, googleCloudDiscoveryengineV1alphaRecrawlUrisMetadata.successCount) &&
        Objects.equals(this.updateTime, googleCloudDiscoveryengineV1alphaRecrawlUrisMetadata.updateTime) &&
        Objects.equals(this.validUrisCount, googleCloudDiscoveryengineV1alphaRecrawlUrisMetadata.validUrisCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createTime, invalidUris, pendingCount, quotaExceededCount, successCount, updateTime, validUrisCount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDiscoveryengineV1alphaRecrawlUrisMetadata {\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    invalidUris: ").append(toIndentedString(invalidUris)).append("\n");
    sb.append("    pendingCount: ").append(toIndentedString(pendingCount)).append("\n");
    sb.append("    quotaExceededCount: ").append(toIndentedString(quotaExceededCount)).append("\n");
    sb.append("    successCount: ").append(toIndentedString(successCount)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("    validUrisCount: ").append(toIndentedString(validUrisCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("createTime");
    openapiFields.add("invalidUris");
    openapiFields.add("pendingCount");
    openapiFields.add("quotaExceededCount");
    openapiFields.add("successCount");
    openapiFields.add("updateTime");
    openapiFields.add("validUrisCount");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDiscoveryengineV1alphaRecrawlUrisMetadata
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDiscoveryengineV1alphaRecrawlUrisMetadata.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDiscoveryengineV1alphaRecrawlUrisMetadata is not found in the empty JSON string", GoogleCloudDiscoveryengineV1alphaRecrawlUrisMetadata.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDiscoveryengineV1alphaRecrawlUrisMetadata.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDiscoveryengineV1alphaRecrawlUrisMetadata` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("createTime") != null && !jsonObj.get("createTime").isJsonNull()) && !jsonObj.get("createTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createTime").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("invalidUris") != null && !jsonObj.get("invalidUris").isJsonNull() && !jsonObj.get("invalidUris").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `invalidUris` to be an array in the JSON string but got `%s`", jsonObj.get("invalidUris").toString()));
      }
      if ((jsonObj.get("updateTime") != null && !jsonObj.get("updateTime").isJsonNull()) && !jsonObj.get("updateTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updateTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updateTime").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDiscoveryengineV1alphaRecrawlUrisMetadata.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDiscoveryengineV1alphaRecrawlUrisMetadata' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDiscoveryengineV1alphaRecrawlUrisMetadata> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDiscoveryengineV1alphaRecrawlUrisMetadata.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDiscoveryengineV1alphaRecrawlUrisMetadata>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDiscoveryengineV1alphaRecrawlUrisMetadata value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDiscoveryengineV1alphaRecrawlUrisMetadata read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDiscoveryengineV1alphaRecrawlUrisMetadata given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDiscoveryengineV1alphaRecrawlUrisMetadata
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDiscoveryengineV1alphaRecrawlUrisMetadata
   */
  public static GoogleCloudDiscoveryengineV1alphaRecrawlUrisMetadata fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDiscoveryengineV1alphaRecrawlUrisMetadata.class);
  }

  /**
   * Convert an instance of GoogleCloudDiscoveryengineV1alphaRecrawlUrisMetadata to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

