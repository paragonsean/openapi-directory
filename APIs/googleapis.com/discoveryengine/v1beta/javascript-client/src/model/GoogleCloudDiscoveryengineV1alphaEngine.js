/**
 * Discovery Engine API
 * Discovery Engine API.
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudDiscoveryengineV1alphaEngineChatEngineConfig from './GoogleCloudDiscoveryengineV1alphaEngineChatEngineConfig';
import GoogleCloudDiscoveryengineV1alphaEngineChatEngineMetadata from './GoogleCloudDiscoveryengineV1alphaEngineChatEngineMetadata';
import GoogleCloudDiscoveryengineV1alphaEngineCommonConfig from './GoogleCloudDiscoveryengineV1alphaEngineCommonConfig';
import GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig from './GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig';
import GoogleCloudDiscoveryengineV1alphaEngineRecommendationMetadata from './GoogleCloudDiscoveryengineV1alphaEngineRecommendationMetadata';
import GoogleCloudDiscoveryengineV1alphaEngineSearchEngineConfig from './GoogleCloudDiscoveryengineV1alphaEngineSearchEngineConfig';

/**
 * The GoogleCloudDiscoveryengineV1alphaEngine model module.
 * @module model/GoogleCloudDiscoveryengineV1alphaEngine
 * @version v1beta
 */
class GoogleCloudDiscoveryengineV1alphaEngine {
    /**
     * Constructs a new <code>GoogleCloudDiscoveryengineV1alphaEngine</code>.
     * Metadata that describes the training and serving parameters of an Engine.
     * @alias module:model/GoogleCloudDiscoveryengineV1alphaEngine
     */
    constructor() { 
        
        GoogleCloudDiscoveryengineV1alphaEngine.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDiscoveryengineV1alphaEngine</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDiscoveryengineV1alphaEngine} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDiscoveryengineV1alphaEngine} The populated <code>GoogleCloudDiscoveryengineV1alphaEngine</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDiscoveryengineV1alphaEngine();

            if (data.hasOwnProperty('allowMultipleDataStoresSearchEngine')) {
                obj['allowMultipleDataStoresSearchEngine'] = ApiClient.convertToType(data['allowMultipleDataStoresSearchEngine'], 'Boolean');
            }
            if (data.hasOwnProperty('chatEngineConfig')) {
                obj['chatEngineConfig'] = GoogleCloudDiscoveryengineV1alphaEngineChatEngineConfig.constructFromObject(data['chatEngineConfig']);
            }
            if (data.hasOwnProperty('chatEngineMetadata')) {
                obj['chatEngineMetadata'] = GoogleCloudDiscoveryengineV1alphaEngineChatEngineMetadata.constructFromObject(data['chatEngineMetadata']);
            }
            if (data.hasOwnProperty('commonConfig')) {
                obj['commonConfig'] = GoogleCloudDiscoveryengineV1alphaEngineCommonConfig.constructFromObject(data['commonConfig']);
            }
            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('dataStoreIds')) {
                obj['dataStoreIds'] = ApiClient.convertToType(data['dataStoreIds'], ['String']);
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('industryVertical')) {
                obj['industryVertical'] = ApiClient.convertToType(data['industryVertical'], 'String');
            }
            if (data.hasOwnProperty('mediaRecommendationEngineConfig')) {
                obj['mediaRecommendationEngineConfig'] = GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig.constructFromObject(data['mediaRecommendationEngineConfig']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('recommendationMetadata')) {
                obj['recommendationMetadata'] = GoogleCloudDiscoveryengineV1alphaEngineRecommendationMetadata.constructFromObject(data['recommendationMetadata']);
            }
            if (data.hasOwnProperty('searchEngineConfig')) {
                obj['searchEngineConfig'] = GoogleCloudDiscoveryengineV1alphaEngineSearchEngineConfig.constructFromObject(data['searchEngineConfig']);
            }
            if (data.hasOwnProperty('similarDocumentsConfig')) {
                obj['similarDocumentsConfig'] = ApiClient.convertToType(data['similarDocumentsConfig'], Object);
            }
            if (data.hasOwnProperty('solutionType')) {
                obj['solutionType'] = ApiClient.convertToType(data['solutionType'], 'String');
            }
            if (data.hasOwnProperty('updateTime')) {
                obj['updateTime'] = ApiClient.convertToType(data['updateTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDiscoveryengineV1alphaEngine</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDiscoveryengineV1alphaEngine</code>.
     */
    static validateJSON(data) {
        // validate the optional field `chatEngineConfig`
        if (data['chatEngineConfig']) { // data not null
          GoogleCloudDiscoveryengineV1alphaEngineChatEngineConfig.validateJSON(data['chatEngineConfig']);
        }
        // validate the optional field `chatEngineMetadata`
        if (data['chatEngineMetadata']) { // data not null
          GoogleCloudDiscoveryengineV1alphaEngineChatEngineMetadata.validateJSON(data['chatEngineMetadata']);
        }
        // validate the optional field `commonConfig`
        if (data['commonConfig']) { // data not null
          GoogleCloudDiscoveryengineV1alphaEngineCommonConfig.validateJSON(data['commonConfig']);
        }
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['dataStoreIds'])) {
            throw new Error("Expected the field `dataStoreIds` to be an array in the JSON data but got " + data['dataStoreIds']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['industryVertical'] && !(typeof data['industryVertical'] === 'string' || data['industryVertical'] instanceof String)) {
            throw new Error("Expected the field `industryVertical` to be a primitive type in the JSON string but got " + data['industryVertical']);
        }
        // validate the optional field `mediaRecommendationEngineConfig`
        if (data['mediaRecommendationEngineConfig']) { // data not null
          GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig.validateJSON(data['mediaRecommendationEngineConfig']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `recommendationMetadata`
        if (data['recommendationMetadata']) { // data not null
          GoogleCloudDiscoveryengineV1alphaEngineRecommendationMetadata.validateJSON(data['recommendationMetadata']);
        }
        // validate the optional field `searchEngineConfig`
        if (data['searchEngineConfig']) { // data not null
          GoogleCloudDiscoveryengineV1alphaEngineSearchEngineConfig.validateJSON(data['searchEngineConfig']);
        }
        // ensure the json data is a string
        if (data['solutionType'] && !(typeof data['solutionType'] === 'string' || data['solutionType'] instanceof String)) {
            throw new Error("Expected the field `solutionType` to be a primitive type in the JSON string but got " + data['solutionType']);
        }
        // ensure the json data is a string
        if (data['updateTime'] && !(typeof data['updateTime'] === 'string' || data['updateTime'] instanceof String)) {
            throw new Error("Expected the field `updateTime` to be a primitive type in the JSON string but got " + data['updateTime']);
        }

        return true;
    }


}



/**
 * Whether the search engine can associate with multiple data stores. If true, the generic search engine can associate with one or more data stores. This is an input-only field.
 * @member {Boolean} allowMultipleDataStoresSearchEngine
 */
GoogleCloudDiscoveryengineV1alphaEngine.prototype['allowMultipleDataStoresSearchEngine'] = undefined;

/**
 * @member {module:model/GoogleCloudDiscoveryengineV1alphaEngineChatEngineConfig} chatEngineConfig
 */
GoogleCloudDiscoveryengineV1alphaEngine.prototype['chatEngineConfig'] = undefined;

/**
 * @member {module:model/GoogleCloudDiscoveryengineV1alphaEngineChatEngineMetadata} chatEngineMetadata
 */
GoogleCloudDiscoveryengineV1alphaEngine.prototype['chatEngineMetadata'] = undefined;

/**
 * @member {module:model/GoogleCloudDiscoveryengineV1alphaEngineCommonConfig} commonConfig
 */
GoogleCloudDiscoveryengineV1alphaEngine.prototype['commonConfig'] = undefined;

/**
 * Output only. Timestamp the Recommendation Engine was created at.
 * @member {String} createTime
 */
GoogleCloudDiscoveryengineV1alphaEngine.prototype['createTime'] = undefined;

/**
 * The data stores associated with this engine. For SOLUTION_TYPE_SEARCH and SOLUTION_TYPE_RECOMMENDATION type of engines, they can only associate with at most one data store. If solution_type is SOLUTION_TYPE_CHAT, multiple DataStores in the same Collection can be associated here. Note that when used in CreateEngineRequest, one DataStore id must be provided as the system will use it for necessary initializations.
 * @member {Array.<String>} dataStoreIds
 */
GoogleCloudDiscoveryengineV1alphaEngine.prototype['dataStoreIds'] = undefined;

/**
 * Required. The display name of the engine. Should be human readable. UTF-8 encoded string with limit of 1024 characters.
 * @member {String} displayName
 */
GoogleCloudDiscoveryengineV1alphaEngine.prototype['displayName'] = undefined;

/**
 * The industry vertical that the engine registers. The restriction of the Engine industry vertical is based on DataStore: If unspecified, default to `GENERIC`. Vertical on Engine has to match vertical of the DataStore liniked to the engine.
 * @member {module:model/GoogleCloudDiscoveryengineV1alphaEngine.IndustryVerticalEnum} industryVertical
 */
GoogleCloudDiscoveryengineV1alphaEngine.prototype['industryVertical'] = undefined;

/**
 * @member {module:model/GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig} mediaRecommendationEngineConfig
 */
GoogleCloudDiscoveryengineV1alphaEngine.prototype['mediaRecommendationEngineConfig'] = undefined;

/**
 * Immutable. The fully qualified resource name of the engine. This field must be a UTF-8 encoded string with a length limit of 1024 characters. Format: `projects/{project_number}/locations/{location}/collections/{collection}/engines/{engine}` engine should be 1-63 characters, and valid characters are /a-z0-9*_/. Otherwise, an INVALID_ARGUMENT error is returned.
 * @member {String} name
 */
GoogleCloudDiscoveryengineV1alphaEngine.prototype['name'] = undefined;

/**
 * @member {module:model/GoogleCloudDiscoveryengineV1alphaEngineRecommendationMetadata} recommendationMetadata
 */
GoogleCloudDiscoveryengineV1alphaEngine.prototype['recommendationMetadata'] = undefined;

/**
 * @member {module:model/GoogleCloudDiscoveryengineV1alphaEngineSearchEngineConfig} searchEngineConfig
 */
GoogleCloudDiscoveryengineV1alphaEngine.prototype['searchEngineConfig'] = undefined;

/**
 * Additional config specs for a `similar-items` engine.
 * @member {Object} similarDocumentsConfig
 */
GoogleCloudDiscoveryengineV1alphaEngine.prototype['similarDocumentsConfig'] = undefined;

/**
 * Required. The solutions of the engine.
 * @member {module:model/GoogleCloudDiscoveryengineV1alphaEngine.SolutionTypeEnum} solutionType
 */
GoogleCloudDiscoveryengineV1alphaEngine.prototype['solutionType'] = undefined;

/**
 * Output only. Timestamp the Recommendation Engine was last updated.
 * @member {String} updateTime
 */
GoogleCloudDiscoveryengineV1alphaEngine.prototype['updateTime'] = undefined;





/**
 * Allowed values for the <code>industryVertical</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudDiscoveryengineV1alphaEngine['IndustryVerticalEnum'] = {

    /**
     * value: "INDUSTRY_VERTICAL_UNSPECIFIED"
     * @const
     */
    "INDUSTRY_VERTICAL_UNSPECIFIED": "INDUSTRY_VERTICAL_UNSPECIFIED",

    /**
     * value: "GENERIC"
     * @const
     */
    "GENERIC": "GENERIC",

    /**
     * value: "MEDIA"
     * @const
     */
    "MEDIA": "MEDIA"
};


/**
 * Allowed values for the <code>solutionType</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudDiscoveryengineV1alphaEngine['SolutionTypeEnum'] = {

    /**
     * value: "SOLUTION_TYPE_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "SOLUTION_TYPE_UNSPECIFIED",

    /**
     * value: "SOLUTION_TYPE_RECOMMENDATION"
     * @const
     */
    "RECOMMENDATION": "SOLUTION_TYPE_RECOMMENDATION",

    /**
     * value: "SOLUTION_TYPE_SEARCH"
     * @const
     */
    "SEARCH": "SOLUTION_TYPE_SEARCH",

    /**
     * value: "SOLUTION_TYPE_CHAT"
     * @const
     */
    "CHAT": "SOLUTION_TYPE_CHAT"
};



export default GoogleCloudDiscoveryengineV1alphaEngine;

