/**
 * Discovery Engine API
 * Discovery Engine API.
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudDiscoveryengineV1betaDocumentProcessingConfig from './GoogleCloudDiscoveryengineV1betaDocumentProcessingConfig';
import GoogleCloudDiscoveryengineV1betaSchema from './GoogleCloudDiscoveryengineV1betaSchema';

/**
 * The GoogleCloudDiscoveryengineV1betaDataStore model module.
 * @module model/GoogleCloudDiscoveryengineV1betaDataStore
 * @version v1beta
 */
class GoogleCloudDiscoveryengineV1betaDataStore {
    /**
     * Constructs a new <code>GoogleCloudDiscoveryengineV1betaDataStore</code>.
     * DataStore captures global settings and configs at the DataStore level.
     * @alias module:model/GoogleCloudDiscoveryengineV1betaDataStore
     */
    constructor() { 
        
        GoogleCloudDiscoveryengineV1betaDataStore.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDiscoveryengineV1betaDataStore</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDiscoveryengineV1betaDataStore} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDiscoveryengineV1betaDataStore} The populated <code>GoogleCloudDiscoveryengineV1betaDataStore</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDiscoveryengineV1betaDataStore();

            if (data.hasOwnProperty('contentConfig')) {
                obj['contentConfig'] = ApiClient.convertToType(data['contentConfig'], 'String');
            }
            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('defaultSchemaId')) {
                obj['defaultSchemaId'] = ApiClient.convertToType(data['defaultSchemaId'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('documentProcessingConfig')) {
                obj['documentProcessingConfig'] = GoogleCloudDiscoveryengineV1betaDocumentProcessingConfig.constructFromObject(data['documentProcessingConfig']);
            }
            if (data.hasOwnProperty('industryVertical')) {
                obj['industryVertical'] = ApiClient.convertToType(data['industryVertical'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('solutionTypes')) {
                obj['solutionTypes'] = ApiClient.convertToType(data['solutionTypes'], ['String']);
            }
            if (data.hasOwnProperty('startingSchema')) {
                obj['startingSchema'] = GoogleCloudDiscoveryengineV1betaSchema.constructFromObject(data['startingSchema']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDiscoveryengineV1betaDataStore</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDiscoveryengineV1betaDataStore</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['contentConfig'] && !(typeof data['contentConfig'] === 'string' || data['contentConfig'] instanceof String)) {
            throw new Error("Expected the field `contentConfig` to be a primitive type in the JSON string but got " + data['contentConfig']);
        }
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // ensure the json data is a string
        if (data['defaultSchemaId'] && !(typeof data['defaultSchemaId'] === 'string' || data['defaultSchemaId'] instanceof String)) {
            throw new Error("Expected the field `defaultSchemaId` to be a primitive type in the JSON string but got " + data['defaultSchemaId']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // validate the optional field `documentProcessingConfig`
        if (data['documentProcessingConfig']) { // data not null
          GoogleCloudDiscoveryengineV1betaDocumentProcessingConfig.validateJSON(data['documentProcessingConfig']);
        }
        // ensure the json data is a string
        if (data['industryVertical'] && !(typeof data['industryVertical'] === 'string' || data['industryVertical'] instanceof String)) {
            throw new Error("Expected the field `industryVertical` to be a primitive type in the JSON string but got " + data['industryVertical']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['solutionTypes'])) {
            throw new Error("Expected the field `solutionTypes` to be an array in the JSON data but got " + data['solutionTypes']);
        }
        // validate the optional field `startingSchema`
        if (data['startingSchema']) { // data not null
          GoogleCloudDiscoveryengineV1betaSchema.validateJSON(data['startingSchema']);
        }

        return true;
    }


}



/**
 * Immutable. The content config of the data store. If this field is unset, the server behavior defaults to ContentConfig.NO_CONTENT.
 * @member {module:model/GoogleCloudDiscoveryengineV1betaDataStore.ContentConfigEnum} contentConfig
 */
GoogleCloudDiscoveryengineV1betaDataStore.prototype['contentConfig'] = undefined;

/**
 * Output only. Timestamp the DataStore was created at.
 * @member {String} createTime
 */
GoogleCloudDiscoveryengineV1betaDataStore.prototype['createTime'] = undefined;

/**
 * Output only. The id of the default Schema asscociated to this data store.
 * @member {String} defaultSchemaId
 */
GoogleCloudDiscoveryengineV1betaDataStore.prototype['defaultSchemaId'] = undefined;

/**
 * Required. The data store display name. This field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned.
 * @member {String} displayName
 */
GoogleCloudDiscoveryengineV1betaDataStore.prototype['displayName'] = undefined;

/**
 * @member {module:model/GoogleCloudDiscoveryengineV1betaDocumentProcessingConfig} documentProcessingConfig
 */
GoogleCloudDiscoveryengineV1betaDataStore.prototype['documentProcessingConfig'] = undefined;

/**
 * Immutable. The industry vertical that the data store registers.
 * @member {module:model/GoogleCloudDiscoveryengineV1betaDataStore.IndustryVerticalEnum} industryVertical
 */
GoogleCloudDiscoveryengineV1betaDataStore.prototype['industryVertical'] = undefined;

/**
 * Immutable. The full resource name of the data store. Format: `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}`. This field must be a UTF-8 encoded string with a length limit of 1024 characters.
 * @member {String} name
 */
GoogleCloudDiscoveryengineV1betaDataStore.prototype['name'] = undefined;

/**
 * The solutions that the data store enrolls. Available solutions for each industry_vertical: * `MEDIA`: `SOLUTION_TYPE_RECOMMENDATION` and `SOLUTION_TYPE_SEARCH`. * `SITE_SEARCH`: `SOLUTION_TYPE_SEARCH` is automatically enrolled. Other solutions cannot be enrolled.
 * @member {Array.<module:model/GoogleCloudDiscoveryengineV1betaDataStore.SolutionTypesEnum>} solutionTypes
 */
GoogleCloudDiscoveryengineV1betaDataStore.prototype['solutionTypes'] = undefined;

/**
 * @member {module:model/GoogleCloudDiscoveryengineV1betaSchema} startingSchema
 */
GoogleCloudDiscoveryengineV1betaDataStore.prototype['startingSchema'] = undefined;





/**
 * Allowed values for the <code>contentConfig</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudDiscoveryengineV1betaDataStore['ContentConfigEnum'] = {

    /**
     * value: "CONTENT_CONFIG_UNSPECIFIED"
     * @const
     */
    "CONTENT_CONFIG_UNSPECIFIED": "CONTENT_CONFIG_UNSPECIFIED",

    /**
     * value: "NO_CONTENT"
     * @const
     */
    "NO_CONTENT": "NO_CONTENT",

    /**
     * value: "CONTENT_REQUIRED"
     * @const
     */
    "CONTENT_REQUIRED": "CONTENT_REQUIRED",

    /**
     * value: "PUBLIC_WEBSITE"
     * @const
     */
    "PUBLIC_WEBSITE": "PUBLIC_WEBSITE"
};


/**
 * Allowed values for the <code>industryVertical</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudDiscoveryengineV1betaDataStore['IndustryVerticalEnum'] = {

    /**
     * value: "INDUSTRY_VERTICAL_UNSPECIFIED"
     * @const
     */
    "INDUSTRY_VERTICAL_UNSPECIFIED": "INDUSTRY_VERTICAL_UNSPECIFIED",

    /**
     * value: "GENERIC"
     * @const
     */
    "GENERIC": "GENERIC",

    /**
     * value: "MEDIA"
     * @const
     */
    "MEDIA": "MEDIA"
};


/**
 * Allowed values for the <code>solutionTypes</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudDiscoveryengineV1betaDataStore['SolutionTypesEnum'] = {

    /**
     * value: "SOLUTION_TYPE_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "SOLUTION_TYPE_UNSPECIFIED",

    /**
     * value: "SOLUTION_TYPE_RECOMMENDATION"
     * @const
     */
    "RECOMMENDATION": "SOLUTION_TYPE_RECOMMENDATION",

    /**
     * value: "SOLUTION_TYPE_SEARCH"
     * @const
     */
    "SEARCH": "SOLUTION_TYPE_SEARCH",

    /**
     * value: "SOLUTION_TYPE_CHAT"
     * @const
     */
    "CHAT": "SOLUTION_TYPE_CHAT"
};



export default GoogleCloudDiscoveryengineV1betaDataStore;

