/**
 * Discovery Engine API
 * Discovery Engine API.
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudDiscoveryengineV1betaInterval from './GoogleCloudDiscoveryengineV1betaInterval';

/**
 * The GoogleCloudDiscoveryengineV1betaSearchResponseFacetFacetValue model module.
 * @module model/GoogleCloudDiscoveryengineV1betaSearchResponseFacetFacetValue
 * @version v1beta
 */
class GoogleCloudDiscoveryengineV1betaSearchResponseFacetFacetValue {
    /**
     * Constructs a new <code>GoogleCloudDiscoveryengineV1betaSearchResponseFacetFacetValue</code>.
     * A facet value which contains value names and their count.
     * @alias module:model/GoogleCloudDiscoveryengineV1betaSearchResponseFacetFacetValue
     */
    constructor() { 
        
        GoogleCloudDiscoveryengineV1betaSearchResponseFacetFacetValue.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDiscoveryengineV1betaSearchResponseFacetFacetValue</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDiscoveryengineV1betaSearchResponseFacetFacetValue} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDiscoveryengineV1betaSearchResponseFacetFacetValue} The populated <code>GoogleCloudDiscoveryengineV1betaSearchResponseFacetFacetValue</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDiscoveryengineV1betaSearchResponseFacetFacetValue();

            if (data.hasOwnProperty('count')) {
                obj['count'] = ApiClient.convertToType(data['count'], 'String');
            }
            if (data.hasOwnProperty('interval')) {
                obj['interval'] = GoogleCloudDiscoveryengineV1betaInterval.constructFromObject(data['interval']);
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDiscoveryengineV1betaSearchResponseFacetFacetValue</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDiscoveryengineV1betaSearchResponseFacetFacetValue</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['count'] && !(typeof data['count'] === 'string' || data['count'] instanceof String)) {
            throw new Error("Expected the field `count` to be a primitive type in the JSON string but got " + data['count']);
        }
        // validate the optional field `interval`
        if (data['interval']) { // data not null
          GoogleCloudDiscoveryengineV1betaInterval.validateJSON(data['interval']);
        }
        // ensure the json data is a string
        if (data['value'] && !(typeof data['value'] === 'string' || data['value'] instanceof String)) {
            throw new Error("Expected the field `value` to be a primitive type in the JSON string but got " + data['value']);
        }

        return true;
    }


}



/**
 * Number of items that have this facet value.
 * @member {String} count
 */
GoogleCloudDiscoveryengineV1betaSearchResponseFacetFacetValue.prototype['count'] = undefined;

/**
 * @member {module:model/GoogleCloudDiscoveryengineV1betaInterval} interval
 */
GoogleCloudDiscoveryengineV1betaSearchResponseFacetFacetValue.prototype['interval'] = undefined;

/**
 * Text value of a facet, such as \"Black\" for facet \"colors\".
 * @member {String} value
 */
GoogleCloudDiscoveryengineV1betaSearchResponseFacetFacetValue.prototype['value'] = undefined;






export default GoogleCloudDiscoveryengineV1betaSearchResponseFacetFacetValue;

