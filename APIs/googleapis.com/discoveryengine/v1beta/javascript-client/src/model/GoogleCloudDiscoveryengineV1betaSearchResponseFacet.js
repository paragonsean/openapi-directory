/**
 * Discovery Engine API
 * Discovery Engine API.
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudDiscoveryengineV1betaSearchResponseFacetFacetValue from './GoogleCloudDiscoveryengineV1betaSearchResponseFacetFacetValue';

/**
 * The GoogleCloudDiscoveryengineV1betaSearchResponseFacet model module.
 * @module model/GoogleCloudDiscoveryengineV1betaSearchResponseFacet
 * @version v1beta
 */
class GoogleCloudDiscoveryengineV1betaSearchResponseFacet {
    /**
     * Constructs a new <code>GoogleCloudDiscoveryengineV1betaSearchResponseFacet</code>.
     * A facet result.
     * @alias module:model/GoogleCloudDiscoveryengineV1betaSearchResponseFacet
     */
    constructor() { 
        
        GoogleCloudDiscoveryengineV1betaSearchResponseFacet.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDiscoveryengineV1betaSearchResponseFacet</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDiscoveryengineV1betaSearchResponseFacet} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDiscoveryengineV1betaSearchResponseFacet} The populated <code>GoogleCloudDiscoveryengineV1betaSearchResponseFacet</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDiscoveryengineV1betaSearchResponseFacet();

            if (data.hasOwnProperty('dynamicFacet')) {
                obj['dynamicFacet'] = ApiClient.convertToType(data['dynamicFacet'], 'Boolean');
            }
            if (data.hasOwnProperty('key')) {
                obj['key'] = ApiClient.convertToType(data['key'], 'String');
            }
            if (data.hasOwnProperty('values')) {
                obj['values'] = ApiClient.convertToType(data['values'], [GoogleCloudDiscoveryengineV1betaSearchResponseFacetFacetValue]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDiscoveryengineV1betaSearchResponseFacet</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDiscoveryengineV1betaSearchResponseFacet</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['key'] && !(typeof data['key'] === 'string' || data['key'] instanceof String)) {
            throw new Error("Expected the field `key` to be a primitive type in the JSON string but got " + data['key']);
        }
        if (data['values']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['values'])) {
                throw new Error("Expected the field `values` to be an array in the JSON data but got " + data['values']);
            }
            // validate the optional field `values` (array)
            for (const item of data['values']) {
                GoogleCloudDiscoveryengineV1betaSearchResponseFacetFacetValue.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Whether the facet is dynamically generated.
 * @member {Boolean} dynamicFacet
 */
GoogleCloudDiscoveryengineV1betaSearchResponseFacet.prototype['dynamicFacet'] = undefined;

/**
 * The key for this facet. E.g., \"colors\" or \"price\". It matches SearchRequest.FacetSpec.FacetKey.key.
 * @member {String} key
 */
GoogleCloudDiscoveryengineV1betaSearchResponseFacet.prototype['key'] = undefined;

/**
 * The facet values for this field.
 * @member {Array.<module:model/GoogleCloudDiscoveryengineV1betaSearchResponseFacetFacetValue>} values
 */
GoogleCloudDiscoveryengineV1betaSearchResponseFacet.prototype['values'] = undefined;






export default GoogleCloudDiscoveryengineV1betaSearchResponseFacet;

