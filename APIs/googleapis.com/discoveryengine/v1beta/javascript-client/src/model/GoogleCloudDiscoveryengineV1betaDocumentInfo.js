/**
 * Discovery Engine API
 * Discovery Engine API.
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudDiscoveryengineV1betaDocumentInfo model module.
 * @module model/GoogleCloudDiscoveryengineV1betaDocumentInfo
 * @version v1beta
 */
class GoogleCloudDiscoveryengineV1betaDocumentInfo {
    /**
     * Constructs a new <code>GoogleCloudDiscoveryengineV1betaDocumentInfo</code>.
     * Detailed document information associated with a user event.
     * @alias module:model/GoogleCloudDiscoveryengineV1betaDocumentInfo
     */
    constructor() { 
        
        GoogleCloudDiscoveryengineV1betaDocumentInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDiscoveryengineV1betaDocumentInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDiscoveryengineV1betaDocumentInfo} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDiscoveryengineV1betaDocumentInfo} The populated <code>GoogleCloudDiscoveryengineV1betaDocumentInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDiscoveryengineV1betaDocumentInfo();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('promotionIds')) {
                obj['promotionIds'] = ApiClient.convertToType(data['promotionIds'], ['String']);
            }
            if (data.hasOwnProperty('quantity')) {
                obj['quantity'] = ApiClient.convertToType(data['quantity'], 'Number');
            }
            if (data.hasOwnProperty('uri')) {
                obj['uri'] = ApiClient.convertToType(data['uri'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDiscoveryengineV1betaDocumentInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDiscoveryengineV1betaDocumentInfo</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['promotionIds'])) {
            throw new Error("Expected the field `promotionIds` to be an array in the JSON data but got " + data['promotionIds']);
        }
        // ensure the json data is a string
        if (data['uri'] && !(typeof data['uri'] === 'string' || data['uri'] instanceof String)) {
            throw new Error("Expected the field `uri` to be a primitive type in the JSON string but got " + data['uri']);
        }

        return true;
    }


}



/**
 * The Document resource ID.
 * @member {String} id
 */
GoogleCloudDiscoveryengineV1betaDocumentInfo.prototype['id'] = undefined;

/**
 * The Document resource full name, of the form: `projects/{project_id}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}/branches/{branch_id}/documents/{document_id}`
 * @member {String} name
 */
GoogleCloudDiscoveryengineV1betaDocumentInfo.prototype['name'] = undefined;

/**
 * The promotion IDs associated with this Document. Currently, this field is restricted to at most one ID.
 * @member {Array.<String>} promotionIds
 */
GoogleCloudDiscoveryengineV1betaDocumentInfo.prototype['promotionIds'] = undefined;

/**
 * Quantity of the Document associated with the user event. Defaults to 1. For example, this field will be 2 if two quantities of the same Document are involved in a `add-to-cart` event. Required for events of the following event types: * `add-to-cart` * `purchase`
 * @member {Number} quantity
 */
GoogleCloudDiscoveryengineV1betaDocumentInfo.prototype['quantity'] = undefined;

/**
 * The Document URI - only allowed for website data stores.
 * @member {String} uri
 */
GoogleCloudDiscoveryengineV1betaDocumentInfo.prototype['uri'] = undefined;






export default GoogleCloudDiscoveryengineV1betaDocumentInfo;

