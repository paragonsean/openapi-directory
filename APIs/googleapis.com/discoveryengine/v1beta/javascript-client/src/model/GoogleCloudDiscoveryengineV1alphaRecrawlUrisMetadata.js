/**
 * Discovery Engine API
 * Discovery Engine API.
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudDiscoveryengineV1alphaRecrawlUrisMetadata model module.
 * @module model/GoogleCloudDiscoveryengineV1alphaRecrawlUrisMetadata
 * @version v1beta
 */
class GoogleCloudDiscoveryengineV1alphaRecrawlUrisMetadata {
    /**
     * Constructs a new <code>GoogleCloudDiscoveryengineV1alphaRecrawlUrisMetadata</code>.
     * Metadata related to the progress of the SiteSearchEngineService.RecrawlUris operation. This will be returned by the google.longrunning.Operation.metadata field.
     * @alias module:model/GoogleCloudDiscoveryengineV1alphaRecrawlUrisMetadata
     */
    constructor() { 
        
        GoogleCloudDiscoveryengineV1alphaRecrawlUrisMetadata.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDiscoveryengineV1alphaRecrawlUrisMetadata</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDiscoveryengineV1alphaRecrawlUrisMetadata} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDiscoveryengineV1alphaRecrawlUrisMetadata} The populated <code>GoogleCloudDiscoveryengineV1alphaRecrawlUrisMetadata</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDiscoveryengineV1alphaRecrawlUrisMetadata();

            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('invalidUris')) {
                obj['invalidUris'] = ApiClient.convertToType(data['invalidUris'], ['String']);
            }
            if (data.hasOwnProperty('pendingCount')) {
                obj['pendingCount'] = ApiClient.convertToType(data['pendingCount'], 'Number');
            }
            if (data.hasOwnProperty('quotaExceededCount')) {
                obj['quotaExceededCount'] = ApiClient.convertToType(data['quotaExceededCount'], 'Number');
            }
            if (data.hasOwnProperty('successCount')) {
                obj['successCount'] = ApiClient.convertToType(data['successCount'], 'Number');
            }
            if (data.hasOwnProperty('updateTime')) {
                obj['updateTime'] = ApiClient.convertToType(data['updateTime'], 'String');
            }
            if (data.hasOwnProperty('validUrisCount')) {
                obj['validUrisCount'] = ApiClient.convertToType(data['validUrisCount'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDiscoveryengineV1alphaRecrawlUrisMetadata</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDiscoveryengineV1alphaRecrawlUrisMetadata</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['invalidUris'])) {
            throw new Error("Expected the field `invalidUris` to be an array in the JSON data but got " + data['invalidUris']);
        }
        // ensure the json data is a string
        if (data['updateTime'] && !(typeof data['updateTime'] === 'string' || data['updateTime'] instanceof String)) {
            throw new Error("Expected the field `updateTime` to be a primitive type in the JSON string but got " + data['updateTime']);
        }

        return true;
    }


}



/**
 * Operation create time.
 * @member {String} createTime
 */
GoogleCloudDiscoveryengineV1alphaRecrawlUrisMetadata.prototype['createTime'] = undefined;

/**
 * Unique URIs in the request that don't match any TargetSite in the DataStore, only match TargetSites that haven't been fully indexed, or match a TargetSite with type EXCLUDE.
 * @member {Array.<String>} invalidUris
 */
GoogleCloudDiscoveryengineV1alphaRecrawlUrisMetadata.prototype['invalidUris'] = undefined;

/**
 * Total number of URIs that have yet to be crawled.
 * @member {Number} pendingCount
 */
GoogleCloudDiscoveryengineV1alphaRecrawlUrisMetadata.prototype['pendingCount'] = undefined;

/**
 * Total number of URIs that were rejected due to insufficient indexing resources.
 * @member {Number} quotaExceededCount
 */
GoogleCloudDiscoveryengineV1alphaRecrawlUrisMetadata.prototype['quotaExceededCount'] = undefined;

/**
 * Total number of URIs that have been crawled so far.
 * @member {Number} successCount
 */
GoogleCloudDiscoveryengineV1alphaRecrawlUrisMetadata.prototype['successCount'] = undefined;

/**
 * Operation last update time. If the operation is done, this is also the finish time.
 * @member {String} updateTime
 */
GoogleCloudDiscoveryengineV1alphaRecrawlUrisMetadata.prototype['updateTime'] = undefined;

/**
 * Total number of unique URIs in the request that are not in invalid_uris.
 * @member {Number} validUrisCount
 */
GoogleCloudDiscoveryengineV1alphaRecrawlUrisMetadata.prototype['validUrisCount'] = undefined;






export default GoogleCloudDiscoveryengineV1alphaRecrawlUrisMetadata;

