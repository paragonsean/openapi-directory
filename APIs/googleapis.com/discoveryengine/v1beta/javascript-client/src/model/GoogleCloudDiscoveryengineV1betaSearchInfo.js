/**
 * Discovery Engine API
 * Discovery Engine API.
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudDiscoveryengineV1betaSearchInfo model module.
 * @module model/GoogleCloudDiscoveryengineV1betaSearchInfo
 * @version v1beta
 */
class GoogleCloudDiscoveryengineV1betaSearchInfo {
    /**
     * Constructs a new <code>GoogleCloudDiscoveryengineV1betaSearchInfo</code>.
     * Detailed search information.
     * @alias module:model/GoogleCloudDiscoveryengineV1betaSearchInfo
     */
    constructor() { 
        
        GoogleCloudDiscoveryengineV1betaSearchInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDiscoveryengineV1betaSearchInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDiscoveryengineV1betaSearchInfo} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDiscoveryengineV1betaSearchInfo} The populated <code>GoogleCloudDiscoveryengineV1betaSearchInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDiscoveryengineV1betaSearchInfo();

            if (data.hasOwnProperty('offset')) {
                obj['offset'] = ApiClient.convertToType(data['offset'], 'Number');
            }
            if (data.hasOwnProperty('orderBy')) {
                obj['orderBy'] = ApiClient.convertToType(data['orderBy'], 'String');
            }
            if (data.hasOwnProperty('searchQuery')) {
                obj['searchQuery'] = ApiClient.convertToType(data['searchQuery'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDiscoveryengineV1betaSearchInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDiscoveryengineV1betaSearchInfo</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['orderBy'] && !(typeof data['orderBy'] === 'string' || data['orderBy'] instanceof String)) {
            throw new Error("Expected the field `orderBy` to be a primitive type in the JSON string but got " + data['orderBy']);
        }
        // ensure the json data is a string
        if (data['searchQuery'] && !(typeof data['searchQuery'] === 'string' || data['searchQuery'] instanceof String)) {
            throw new Error("Expected the field `searchQuery` to be a primitive type in the JSON string but got " + data['searchQuery']);
        }

        return true;
    }


}



/**
 * An integer that specifies the current offset for pagination (the 0-indexed starting location, amongst the products deemed by the API as relevant). See SearchRequest.offset for definition. If this field is negative, an `INVALID_ARGUMENT` is returned. This can only be set for `search` events. Other event types should not set this field. Otherwise, an `INVALID_ARGUMENT` error is returned.
 * @member {Number} offset
 */
GoogleCloudDiscoveryengineV1betaSearchInfo.prototype['offset'] = undefined;

/**
 * The order in which products are returned, if applicable. See SearchRequest.order_by for definition and syntax. The value must be a UTF-8 encoded string with a length limit of 1,000 characters. Otherwise, an `INVALID_ARGUMENT` error is returned. This can only be set for `search` events. Other event types should not set this field. Otherwise, an `INVALID_ARGUMENT` error is returned.
 * @member {String} orderBy
 */
GoogleCloudDiscoveryengineV1betaSearchInfo.prototype['orderBy'] = undefined;

/**
 * The user's search query. See SearchRequest.query for definition. The value must be a UTF-8 encoded string with a length limit of 5,000 characters. Otherwise, an `INVALID_ARGUMENT` error is returned. At least one of search_query or PageInfo.page_category is required for `search` events. Other event types should not set this field. Otherwise, an `INVALID_ARGUMENT` error is returned.
 * @member {String} searchQuery
 */
GoogleCloudDiscoveryengineV1betaSearchInfo.prototype['searchQuery'] = undefined;






export default GoogleCloudDiscoveryengineV1betaSearchInfo;

