/**
 * Discovery Engine API
 * Discovery Engine API.
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudDiscoveryengineV1OcrParsingConfig model module.
 * @module model/GoogleCloudDiscoveryengineV1OcrParsingConfig
 * @version v1beta
 */
class GoogleCloudDiscoveryengineV1OcrParsingConfig {
    /**
     * Constructs a new <code>GoogleCloudDiscoveryengineV1OcrParsingConfig</code>.
     * The OCR parsing configurations for documents.
     * @alias module:model/GoogleCloudDiscoveryengineV1OcrParsingConfig
     */
    constructor() { 
        
        GoogleCloudDiscoveryengineV1OcrParsingConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDiscoveryengineV1OcrParsingConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDiscoveryengineV1OcrParsingConfig} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDiscoveryengineV1OcrParsingConfig} The populated <code>GoogleCloudDiscoveryengineV1OcrParsingConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDiscoveryengineV1OcrParsingConfig();

            if (data.hasOwnProperty('enhancedDocumentElements')) {
                obj['enhancedDocumentElements'] = ApiClient.convertToType(data['enhancedDocumentElements'], ['String']);
            }
            if (data.hasOwnProperty('useNativeText')) {
                obj['useNativeText'] = ApiClient.convertToType(data['useNativeText'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDiscoveryengineV1OcrParsingConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDiscoveryengineV1OcrParsingConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['enhancedDocumentElements'])) {
            throw new Error("Expected the field `enhancedDocumentElements` to be an array in the JSON data but got " + data['enhancedDocumentElements']);
        }

        return true;
    }


}



/**
 * Apply additional enhanced OCR processing to a list of document elements. Supported values: * `table`: advanced table parsing model.
 * @member {Array.<String>} enhancedDocumentElements
 */
GoogleCloudDiscoveryengineV1OcrParsingConfig.prototype['enhancedDocumentElements'] = undefined;

/**
 * If true, will use native text instead of OCR text on pages containing native text.
 * @member {Boolean} useNativeText
 */
GoogleCloudDiscoveryengineV1OcrParsingConfig.prototype['useNativeText'] = undefined;






export default GoogleCloudDiscoveryengineV1OcrParsingConfig;

