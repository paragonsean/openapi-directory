/**
 * Discovery Engine API
 * Discovery Engine API.
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecExtractiveContentSpec model module.
 * @module model/GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecExtractiveContentSpec
 * @version v1beta
 */
class GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecExtractiveContentSpec {
    /**
     * Constructs a new <code>GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecExtractiveContentSpec</code>.
     * A specification for configuring the extractive content in a search response.
     * @alias module:model/GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecExtractiveContentSpec
     */
    constructor() { 
        
        GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecExtractiveContentSpec.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecExtractiveContentSpec</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecExtractiveContentSpec} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecExtractiveContentSpec} The populated <code>GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecExtractiveContentSpec</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecExtractiveContentSpec();

            if (data.hasOwnProperty('maxExtractiveAnswerCount')) {
                obj['maxExtractiveAnswerCount'] = ApiClient.convertToType(data['maxExtractiveAnswerCount'], 'Number');
            }
            if (data.hasOwnProperty('maxExtractiveSegmentCount')) {
                obj['maxExtractiveSegmentCount'] = ApiClient.convertToType(data['maxExtractiveSegmentCount'], 'Number');
            }
            if (data.hasOwnProperty('numNextSegments')) {
                obj['numNextSegments'] = ApiClient.convertToType(data['numNextSegments'], 'Number');
            }
            if (data.hasOwnProperty('numPreviousSegments')) {
                obj['numPreviousSegments'] = ApiClient.convertToType(data['numPreviousSegments'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecExtractiveContentSpec</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecExtractiveContentSpec</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * The maximum number of extractive answers returned in each search result. An extractive answer is a verbatim answer extracted from the original document, which provides a precise and contextually relevant answer to the search query. If the number of matching answers is less than the `max_extractive_answer_count`, return all of the answers. Otherwise, return the `max_extractive_answer_count`. At most five answers are returned for each SearchResult.
 * @member {Number} maxExtractiveAnswerCount
 */
GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecExtractiveContentSpec.prototype['maxExtractiveAnswerCount'] = undefined;

/**
 * The max number of extractive segments returned in each search result. Only applied if the DataStore is set to DataStore.ContentConfig.CONTENT_REQUIRED or DataStore.solution_types is SOLUTION_TYPE_CHAT. An extractive segment is a text segment extracted from the original document that is relevant to the search query, and, in general, more verbose than an extractive answer. The segment could then be used as input for LLMs to generate summaries and answers. If the number of matching segments is less than `max_extractive_segment_count`, return all of the segments. Otherwise, return the `max_extractive_segment_count`.
 * @member {Number} maxExtractiveSegmentCount
 */
GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecExtractiveContentSpec.prototype['maxExtractiveSegmentCount'] = undefined;

/**
 * Return at most `num_next_segments` segments after each selected segments.
 * @member {Number} numNextSegments
 */
GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecExtractiveContentSpec.prototype['numNextSegments'] = undefined;

/**
 * Specifies whether to also include the adjacent from each selected segments. Return at most `num_previous_segments` segments before each selected segments.
 * @member {Number} numPreviousSegments
 */
GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecExtractiveContentSpec.prototype['numPreviousSegments'] = undefined;






export default GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecExtractiveContentSpec;

