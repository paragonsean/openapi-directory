/**
 * Discovery Engine API
 * Discovery Engine API.
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudDiscoveryengineV1betaConversation from './GoogleCloudDiscoveryengineV1betaConversation';
import GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpec from './GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpec';
import GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpec from './GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpec';
import GoogleCloudDiscoveryengineV1betaTextInput from './GoogleCloudDiscoveryengineV1betaTextInput';

/**
 * The GoogleCloudDiscoveryengineV1betaConverseConversationRequest model module.
 * @module model/GoogleCloudDiscoveryengineV1betaConverseConversationRequest
 * @version v1beta
 */
class GoogleCloudDiscoveryengineV1betaConverseConversationRequest {
    /**
     * Constructs a new <code>GoogleCloudDiscoveryengineV1betaConverseConversationRequest</code>.
     * Request message for ConversationalSearchService.ConverseConversation method.
     * @alias module:model/GoogleCloudDiscoveryengineV1betaConverseConversationRequest
     */
    constructor() { 
        
        GoogleCloudDiscoveryengineV1betaConverseConversationRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDiscoveryengineV1betaConverseConversationRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDiscoveryengineV1betaConverseConversationRequest} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDiscoveryengineV1betaConverseConversationRequest} The populated <code>GoogleCloudDiscoveryengineV1betaConverseConversationRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDiscoveryengineV1betaConverseConversationRequest();

            if (data.hasOwnProperty('boostSpec')) {
                obj['boostSpec'] = GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpec.constructFromObject(data['boostSpec']);
            }
            if (data.hasOwnProperty('conversation')) {
                obj['conversation'] = GoogleCloudDiscoveryengineV1betaConversation.constructFromObject(data['conversation']);
            }
            if (data.hasOwnProperty('filter')) {
                obj['filter'] = ApiClient.convertToType(data['filter'], 'String');
            }
            if (data.hasOwnProperty('query')) {
                obj['query'] = GoogleCloudDiscoveryengineV1betaTextInput.constructFromObject(data['query']);
            }
            if (data.hasOwnProperty('safeSearch')) {
                obj['safeSearch'] = ApiClient.convertToType(data['safeSearch'], 'Boolean');
            }
            if (data.hasOwnProperty('servingConfig')) {
                obj['servingConfig'] = ApiClient.convertToType(data['servingConfig'], 'String');
            }
            if (data.hasOwnProperty('summarySpec')) {
                obj['summarySpec'] = GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpec.constructFromObject(data['summarySpec']);
            }
            if (data.hasOwnProperty('userLabels')) {
                obj['userLabels'] = ApiClient.convertToType(data['userLabels'], {'String': 'String'});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDiscoveryengineV1betaConverseConversationRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDiscoveryengineV1betaConverseConversationRequest</code>.
     */
    static validateJSON(data) {
        // validate the optional field `boostSpec`
        if (data['boostSpec']) { // data not null
          GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpec.validateJSON(data['boostSpec']);
        }
        // validate the optional field `conversation`
        if (data['conversation']) { // data not null
          GoogleCloudDiscoveryengineV1betaConversation.validateJSON(data['conversation']);
        }
        // ensure the json data is a string
        if (data['filter'] && !(typeof data['filter'] === 'string' || data['filter'] instanceof String)) {
            throw new Error("Expected the field `filter` to be a primitive type in the JSON string but got " + data['filter']);
        }
        // validate the optional field `query`
        if (data['query']) { // data not null
          GoogleCloudDiscoveryengineV1betaTextInput.validateJSON(data['query']);
        }
        // ensure the json data is a string
        if (data['servingConfig'] && !(typeof data['servingConfig'] === 'string' || data['servingConfig'] instanceof String)) {
            throw new Error("Expected the field `servingConfig` to be a primitive type in the JSON string but got " + data['servingConfig']);
        }
        // validate the optional field `summarySpec`
        if (data['summarySpec']) { // data not null
          GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpec.validateJSON(data['summarySpec']);
        }

        return true;
    }


}



/**
 * @member {module:model/GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpec} boostSpec
 */
GoogleCloudDiscoveryengineV1betaConverseConversationRequest.prototype['boostSpec'] = undefined;

/**
 * @member {module:model/GoogleCloudDiscoveryengineV1betaConversation} conversation
 */
GoogleCloudDiscoveryengineV1betaConverseConversationRequest.prototype['conversation'] = undefined;

/**
 * The filter syntax consists of an expression language for constructing a predicate from one or more fields of the documents being filtered. Filter expression is case-sensitive. This will be used to filter search results which may affect the summary response. If this field is unrecognizable, an `INVALID_ARGUMENT` is returned. Filtering in Vertex AI Search is done by mapping the LHS filter key to a key property defined in the Vertex AI Search backend -- this mapping is defined by the customer in their schema. For example a media customer might have a field 'name' in their schema. In this case the filter would look like this: filter --> name:'ANY(\"king kong\")' For more information about filtering including syntax and filter operators, see [Filter](https://cloud.google.com/generative-ai-app-builder/docs/filter-search-metadata)
 * @member {String} filter
 */
GoogleCloudDiscoveryengineV1betaConverseConversationRequest.prototype['filter'] = undefined;

/**
 * @member {module:model/GoogleCloudDiscoveryengineV1betaTextInput} query
 */
GoogleCloudDiscoveryengineV1betaConverseConversationRequest.prototype['query'] = undefined;

/**
 * Whether to turn on safe search.
 * @member {Boolean} safeSearch
 */
GoogleCloudDiscoveryengineV1betaConverseConversationRequest.prototype['safeSearch'] = undefined;

/**
 * The resource name of the Serving Config to use. Format: `projects/{project_number}/locations/{location_id}/collections/{collection}/dataStores/{data_store_id}/servingConfigs/{serving_config_id}` If this is not set, the default serving config will be used.
 * @member {String} servingConfig
 */
GoogleCloudDiscoveryengineV1betaConverseConversationRequest.prototype['servingConfig'] = undefined;

/**
 * @member {module:model/GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpec} summarySpec
 */
GoogleCloudDiscoveryengineV1betaConverseConversationRequest.prototype['summarySpec'] = undefined;

/**
 * The user labels applied to a resource must meet the following requirements: * Each resource can have multiple labels, up to a maximum of 64. * Each label must be a key-value pair. * Keys have a minimum length of 1 character and a maximum length of 63 characters and cannot be empty. Values can be empty and have a maximum length of 63 characters. * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. All characters must use UTF-8 encoding, and international characters are allowed. * The key portion of a label must be unique. However, you can use the same key with multiple resources. * Keys must start with a lowercase letter or international character. See [Google Cloud Document](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements) for more details.
 * @member {Object.<String, String>} userLabels
 */
GoogleCloudDiscoveryengineV1betaConverseConversationRequest.prototype['userLabels'] = undefined;






export default GoogleCloudDiscoveryengineV1betaConverseConversationRequest;

