/**
 * Discovery Engine API
 * Discovery Engine API.
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudDiscoveryengineV1betaInterval from './GoogleCloudDiscoveryengineV1betaInterval';

/**
 * The GoogleCloudDiscoveryengineV1betaSearchRequestFacetSpecFacetKey model module.
 * @module model/GoogleCloudDiscoveryengineV1betaSearchRequestFacetSpecFacetKey
 * @version v1beta
 */
class GoogleCloudDiscoveryengineV1betaSearchRequestFacetSpecFacetKey {
    /**
     * Constructs a new <code>GoogleCloudDiscoveryengineV1betaSearchRequestFacetSpecFacetKey</code>.
     * Specifies how a facet is computed.
     * @alias module:model/GoogleCloudDiscoveryengineV1betaSearchRequestFacetSpecFacetKey
     */
    constructor() { 
        
        GoogleCloudDiscoveryengineV1betaSearchRequestFacetSpecFacetKey.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDiscoveryengineV1betaSearchRequestFacetSpecFacetKey</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDiscoveryengineV1betaSearchRequestFacetSpecFacetKey} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDiscoveryengineV1betaSearchRequestFacetSpecFacetKey} The populated <code>GoogleCloudDiscoveryengineV1betaSearchRequestFacetSpecFacetKey</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDiscoveryengineV1betaSearchRequestFacetSpecFacetKey();

            if (data.hasOwnProperty('caseInsensitive')) {
                obj['caseInsensitive'] = ApiClient.convertToType(data['caseInsensitive'], 'Boolean');
            }
            if (data.hasOwnProperty('contains')) {
                obj['contains'] = ApiClient.convertToType(data['contains'], ['String']);
            }
            if (data.hasOwnProperty('intervals')) {
                obj['intervals'] = ApiClient.convertToType(data['intervals'], [GoogleCloudDiscoveryengineV1betaInterval]);
            }
            if (data.hasOwnProperty('key')) {
                obj['key'] = ApiClient.convertToType(data['key'], 'String');
            }
            if (data.hasOwnProperty('orderBy')) {
                obj['orderBy'] = ApiClient.convertToType(data['orderBy'], 'String');
            }
            if (data.hasOwnProperty('prefixes')) {
                obj['prefixes'] = ApiClient.convertToType(data['prefixes'], ['String']);
            }
            if (data.hasOwnProperty('restrictedValues')) {
                obj['restrictedValues'] = ApiClient.convertToType(data['restrictedValues'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDiscoveryengineV1betaSearchRequestFacetSpecFacetKey</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDiscoveryengineV1betaSearchRequestFacetSpecFacetKey</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['contains'])) {
            throw new Error("Expected the field `contains` to be an array in the JSON data but got " + data['contains']);
        }
        if (data['intervals']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['intervals'])) {
                throw new Error("Expected the field `intervals` to be an array in the JSON data but got " + data['intervals']);
            }
            // validate the optional field `intervals` (array)
            for (const item of data['intervals']) {
                GoogleCloudDiscoveryengineV1betaInterval.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['key'] && !(typeof data['key'] === 'string' || data['key'] instanceof String)) {
            throw new Error("Expected the field `key` to be a primitive type in the JSON string but got " + data['key']);
        }
        // ensure the json data is a string
        if (data['orderBy'] && !(typeof data['orderBy'] === 'string' || data['orderBy'] instanceof String)) {
            throw new Error("Expected the field `orderBy` to be a primitive type in the JSON string but got " + data['orderBy']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['prefixes'])) {
            throw new Error("Expected the field `prefixes` to be an array in the JSON data but got " + data['prefixes']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['restrictedValues'])) {
            throw new Error("Expected the field `restrictedValues` to be an array in the JSON data but got " + data['restrictedValues']);
        }

        return true;
    }


}



/**
 * True to make facet keys case insensitive when getting faceting values with prefixes or contains; false otherwise.
 * @member {Boolean} caseInsensitive
 */
GoogleCloudDiscoveryengineV1betaSearchRequestFacetSpecFacetKey.prototype['caseInsensitive'] = undefined;

/**
 * Only get facet values that contains the given strings. For example, suppose \"category\" has three values \"Action > 2022\", \"Action > 2021\" and \"Sci-Fi > 2022\". If set \"contains\" to \"2022\", the \"category\" facet only contains \"Action > 2022\" and \"Sci-Fi > 2022\". Only supported on textual fields. Maximum is 10.
 * @member {Array.<String>} contains
 */
GoogleCloudDiscoveryengineV1betaSearchRequestFacetSpecFacetKey.prototype['contains'] = undefined;

/**
 * Set only if values should be bucketed into intervals. Must be set for facets with numerical values. Must not be set for facet with text values. Maximum number of intervals is 30.
 * @member {Array.<module:model/GoogleCloudDiscoveryengineV1betaInterval>} intervals
 */
GoogleCloudDiscoveryengineV1betaSearchRequestFacetSpecFacetKey.prototype['intervals'] = undefined;

/**
 * Required. Supported textual and numerical facet keys in Document object, over which the facet values are computed. Facet key is case-sensitive.
 * @member {String} key
 */
GoogleCloudDiscoveryengineV1betaSearchRequestFacetSpecFacetKey.prototype['key'] = undefined;

/**
 * The order in which documents are returned. Allowed values are: * \"count desc\", which means order by SearchResponse.Facet.values.count descending. * \"value desc\", which means order by SearchResponse.Facet.values.value descending. Only applies to textual facets. If not set, textual values are sorted in [natural order](https://en.wikipedia.org/wiki/Natural_sort_order); numerical intervals are sorted in the order given by FacetSpec.FacetKey.intervals.
 * @member {String} orderBy
 */
GoogleCloudDiscoveryengineV1betaSearchRequestFacetSpecFacetKey.prototype['orderBy'] = undefined;

/**
 * Only get facet values that start with the given string prefix. For example, suppose \"category\" has three values \"Action > 2022\", \"Action > 2021\" and \"Sci-Fi > 2022\". If set \"prefixes\" to \"Action\", the \"category\" facet only contains \"Action > 2022\" and \"Action > 2021\". Only supported on textual fields. Maximum is 10.
 * @member {Array.<String>} prefixes
 */
GoogleCloudDiscoveryengineV1betaSearchRequestFacetSpecFacetKey.prototype['prefixes'] = undefined;

/**
 * Only get facet for the given restricted values. Only supported on textual fields. For example, suppose \"category\" has three values \"Action > 2022\", \"Action > 2021\" and \"Sci-Fi > 2022\". If set \"restricted_values\" to \"Action > 2022\", the \"category\" facet only contains \"Action > 2022\". Only supported on textual fields. Maximum is 10.
 * @member {Array.<String>} restrictedValues
 */
GoogleCloudDiscoveryengineV1betaSearchRequestFacetSpecFacetKey.prototype['restrictedValues'] = undefined;






export default GoogleCloudDiscoveryengineV1betaSearchRequestFacetSpecFacetKey;

