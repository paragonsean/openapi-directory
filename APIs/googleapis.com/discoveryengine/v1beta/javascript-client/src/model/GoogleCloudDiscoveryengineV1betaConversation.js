/**
 * Discovery Engine API
 * Discovery Engine API.
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudDiscoveryengineV1betaConversationMessage from './GoogleCloudDiscoveryengineV1betaConversationMessage';

/**
 * The GoogleCloudDiscoveryengineV1betaConversation model module.
 * @module model/GoogleCloudDiscoveryengineV1betaConversation
 * @version v1beta
 */
class GoogleCloudDiscoveryengineV1betaConversation {
    /**
     * Constructs a new <code>GoogleCloudDiscoveryengineV1betaConversation</code>.
     * External conversation proto definition.
     * @alias module:model/GoogleCloudDiscoveryengineV1betaConversation
     */
    constructor() { 
        
        GoogleCloudDiscoveryengineV1betaConversation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDiscoveryengineV1betaConversation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDiscoveryengineV1betaConversation} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDiscoveryengineV1betaConversation} The populated <code>GoogleCloudDiscoveryengineV1betaConversation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDiscoveryengineV1betaConversation();

            if (data.hasOwnProperty('endTime')) {
                obj['endTime'] = ApiClient.convertToType(data['endTime'], 'String');
            }
            if (data.hasOwnProperty('messages')) {
                obj['messages'] = ApiClient.convertToType(data['messages'], [GoogleCloudDiscoveryengineV1betaConversationMessage]);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('startTime')) {
                obj['startTime'] = ApiClient.convertToType(data['startTime'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('userPseudoId')) {
                obj['userPseudoId'] = ApiClient.convertToType(data['userPseudoId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDiscoveryengineV1betaConversation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDiscoveryengineV1betaConversation</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['endTime'] && !(typeof data['endTime'] === 'string' || data['endTime'] instanceof String)) {
            throw new Error("Expected the field `endTime` to be a primitive type in the JSON string but got " + data['endTime']);
        }
        if (data['messages']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['messages'])) {
                throw new Error("Expected the field `messages` to be an array in the JSON data but got " + data['messages']);
            }
            // validate the optional field `messages` (array)
            for (const item of data['messages']) {
                GoogleCloudDiscoveryengineV1betaConversationMessage.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['startTime'] && !(typeof data['startTime'] === 'string' || data['startTime'] instanceof String)) {
            throw new Error("Expected the field `startTime` to be a primitive type in the JSON string but got " + data['startTime']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // ensure the json data is a string
        if (data['userPseudoId'] && !(typeof data['userPseudoId'] === 'string' || data['userPseudoId'] instanceof String)) {
            throw new Error("Expected the field `userPseudoId` to be a primitive type in the JSON string but got " + data['userPseudoId']);
        }

        return true;
    }


}



/**
 * Output only. The time the conversation finished.
 * @member {String} endTime
 */
GoogleCloudDiscoveryengineV1betaConversation.prototype['endTime'] = undefined;

/**
 * Conversation messages.
 * @member {Array.<module:model/GoogleCloudDiscoveryengineV1betaConversationMessage>} messages
 */
GoogleCloudDiscoveryengineV1betaConversation.prototype['messages'] = undefined;

/**
 * Immutable. Fully qualified name `project/_*_/locations/global/collections/{collection}/dataStore/_*_/conversations/_*` or `project/_*_/locations/global/collections/{collection}/engines/_*_/conversations/_*`.
 * @member {String} name
 */
GoogleCloudDiscoveryengineV1betaConversation.prototype['name'] = undefined;

/**
 * Output only. The time the conversation started.
 * @member {String} startTime
 */
GoogleCloudDiscoveryengineV1betaConversation.prototype['startTime'] = undefined;

/**
 * The state of the Conversation.
 * @member {module:model/GoogleCloudDiscoveryengineV1betaConversation.StateEnum} state
 */
GoogleCloudDiscoveryengineV1betaConversation.prototype['state'] = undefined;

/**
 * A unique identifier for tracking users.
 * @member {String} userPseudoId
 */
GoogleCloudDiscoveryengineV1betaConversation.prototype['userPseudoId'] = undefined;





/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudDiscoveryengineV1betaConversation['StateEnum'] = {

    /**
     * value: "STATE_UNSPECIFIED"
     * @const
     */
    "STATE_UNSPECIFIED": "STATE_UNSPECIFIED",

    /**
     * value: "IN_PROGRESS"
     * @const
     */
    "IN_PROGRESS": "IN_PROGRESS",

    /**
     * value: "COMPLETED"
     * @const
     */
    "COMPLETED": "COMPLETED"
};



export default GoogleCloudDiscoveryengineV1betaConversation;

