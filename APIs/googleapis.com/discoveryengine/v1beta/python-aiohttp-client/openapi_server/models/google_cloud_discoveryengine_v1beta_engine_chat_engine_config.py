# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_discoveryengine_v1beta_engine_chat_engine_config_agent_creation_config import GoogleCloudDiscoveryengineV1betaEngineChatEngineConfigAgentCreationConfig
from openapi_server import util


class GoogleCloudDiscoveryengineV1betaEngineChatEngineConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, agent_creation_config: GoogleCloudDiscoveryengineV1betaEngineChatEngineConfigAgentCreationConfig=None, dialogflow_agent_to_link: str=None):
        """GoogleCloudDiscoveryengineV1betaEngineChatEngineConfig - a model defined in OpenAPI

        :param agent_creation_config: The agent_creation_config of this GoogleCloudDiscoveryengineV1betaEngineChatEngineConfig.
        :param dialogflow_agent_to_link: The dialogflow_agent_to_link of this GoogleCloudDiscoveryengineV1betaEngineChatEngineConfig.
        """
        self.openapi_types = {
            'agent_creation_config': GoogleCloudDiscoveryengineV1betaEngineChatEngineConfigAgentCreationConfig,
            'dialogflow_agent_to_link': str
        }

        self.attribute_map = {
            'agent_creation_config': 'agentCreationConfig',
            'dialogflow_agent_to_link': 'dialogflowAgentToLink'
        }

        self._agent_creation_config = agent_creation_config
        self._dialogflow_agent_to_link = dialogflow_agent_to_link

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDiscoveryengineV1betaEngineChatEngineConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDiscoveryengineV1betaEngineChatEngineConfig of this GoogleCloudDiscoveryengineV1betaEngineChatEngineConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def agent_creation_config(self):
        """Gets the agent_creation_config of this GoogleCloudDiscoveryengineV1betaEngineChatEngineConfig.


        :return: The agent_creation_config of this GoogleCloudDiscoveryengineV1betaEngineChatEngineConfig.
        :rtype: GoogleCloudDiscoveryengineV1betaEngineChatEngineConfigAgentCreationConfig
        """
        return self._agent_creation_config

    @agent_creation_config.setter
    def agent_creation_config(self, agent_creation_config):
        """Sets the agent_creation_config of this GoogleCloudDiscoveryengineV1betaEngineChatEngineConfig.


        :param agent_creation_config: The agent_creation_config of this GoogleCloudDiscoveryengineV1betaEngineChatEngineConfig.
        :type agent_creation_config: GoogleCloudDiscoveryengineV1betaEngineChatEngineConfigAgentCreationConfig
        """

        self._agent_creation_config = agent_creation_config

    @property
    def dialogflow_agent_to_link(self):
        """Gets the dialogflow_agent_to_link of this GoogleCloudDiscoveryengineV1betaEngineChatEngineConfig.

        The resource name of an exist Dialogflow agent to link to this Chat Engine. Customers can either provide `agent_creation_config` to create agent or provide an agent name that links the agent with the Chat engine. Format: `projects//locations//agents/`. Note that the `dialogflow_agent_to_link` are one-time consumed by and passed to Dialogflow service. It means they cannot be retrieved using EngineService.GetEngine or EngineService.ListEngines API after engine creation. Please use ChatEngineMetadata.dialogflow_agent for actual agent association after Engine is created.

        :return: The dialogflow_agent_to_link of this GoogleCloudDiscoveryengineV1betaEngineChatEngineConfig.
        :rtype: str
        """
        return self._dialogflow_agent_to_link

    @dialogflow_agent_to_link.setter
    def dialogflow_agent_to_link(self, dialogflow_agent_to_link):
        """Sets the dialogflow_agent_to_link of this GoogleCloudDiscoveryengineV1betaEngineChatEngineConfig.

        The resource name of an exist Dialogflow agent to link to this Chat Engine. Customers can either provide `agent_creation_config` to create agent or provide an agent name that links the agent with the Chat engine. Format: `projects//locations//agents/`. Note that the `dialogflow_agent_to_link` are one-time consumed by and passed to Dialogflow service. It means they cannot be retrieved using EngineService.GetEngine or EngineService.ListEngines API after engine creation. Please use ChatEngineMetadata.dialogflow_agent for actual agent association after Engine is created.

        :param dialogflow_agent_to_link: The dialogflow_agent_to_link of this GoogleCloudDiscoveryengineV1betaEngineChatEngineConfig.
        :type dialogflow_agent_to_link: str
        """

        self._dialogflow_agent_to_link = dialogflow_agent_to_link
