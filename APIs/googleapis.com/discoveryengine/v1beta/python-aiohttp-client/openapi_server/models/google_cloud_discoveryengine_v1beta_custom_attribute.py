# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDiscoveryengineV1betaCustomAttribute(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, numbers: List[float]=None, text: List[str]=None):
        """GoogleCloudDiscoveryengineV1betaCustomAttribute - a model defined in OpenAPI

        :param numbers: The numbers of this GoogleCloudDiscoveryengineV1betaCustomAttribute.
        :param text: The text of this GoogleCloudDiscoveryengineV1betaCustomAttribute.
        """
        self.openapi_types = {
            'numbers': List[float],
            'text': List[str]
        }

        self.attribute_map = {
            'numbers': 'numbers',
            'text': 'text'
        }

        self._numbers = numbers
        self._text = text

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDiscoveryengineV1betaCustomAttribute':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDiscoveryengineV1betaCustomAttribute of this GoogleCloudDiscoveryengineV1betaCustomAttribute.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def numbers(self):
        """Gets the numbers of this GoogleCloudDiscoveryengineV1betaCustomAttribute.

        The numerical values of this custom attribute. For example, `[2.3, 15.4]` when the key is \"lengths_cm\". Exactly one of CustomAttribute.text or CustomAttribute.numbers should be set. Otherwise, an `INVALID_ARGUMENT` error is returned.

        :return: The numbers of this GoogleCloudDiscoveryengineV1betaCustomAttribute.
        :rtype: List[float]
        """
        return self._numbers

    @numbers.setter
    def numbers(self, numbers):
        """Sets the numbers of this GoogleCloudDiscoveryengineV1betaCustomAttribute.

        The numerical values of this custom attribute. For example, `[2.3, 15.4]` when the key is \"lengths_cm\". Exactly one of CustomAttribute.text or CustomAttribute.numbers should be set. Otherwise, an `INVALID_ARGUMENT` error is returned.

        :param numbers: The numbers of this GoogleCloudDiscoveryengineV1betaCustomAttribute.
        :type numbers: List[float]
        """

        self._numbers = numbers

    @property
    def text(self):
        """Gets the text of this GoogleCloudDiscoveryengineV1betaCustomAttribute.

        The textual values of this custom attribute. For example, `[\"yellow\", \"green\"]` when the key is \"color\". Empty string is not allowed. Otherwise, an `INVALID_ARGUMENT` error is returned. Exactly one of CustomAttribute.text or CustomAttribute.numbers should be set. Otherwise, an `INVALID_ARGUMENT` error is returned.

        :return: The text of this GoogleCloudDiscoveryengineV1betaCustomAttribute.
        :rtype: List[str]
        """
        return self._text

    @text.setter
    def text(self, text):
        """Sets the text of this GoogleCloudDiscoveryengineV1betaCustomAttribute.

        The textual values of this custom attribute. For example, `[\"yellow\", \"green\"]` when the key is \"color\". Empty string is not allowed. Otherwise, an `INVALID_ARGUMENT` error is returned. Exactly one of CustomAttribute.text or CustomAttribute.numbers should be set. Otherwise, an `INVALID_ARGUMENT` error is returned.

        :param text: The text of this GoogleCloudDiscoveryengineV1betaCustomAttribute.
        :type text: List[str]
        """

        self._text = text
