# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDiscoveryengineV1betaMediaInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, media_progress_duration: str=None, media_progress_percentage: float=None):
        """GoogleCloudDiscoveryengineV1betaMediaInfo - a model defined in OpenAPI

        :param media_progress_duration: The media_progress_duration of this GoogleCloudDiscoveryengineV1betaMediaInfo.
        :param media_progress_percentage: The media_progress_percentage of this GoogleCloudDiscoveryengineV1betaMediaInfo.
        """
        self.openapi_types = {
            'media_progress_duration': str,
            'media_progress_percentage': float
        }

        self.attribute_map = {
            'media_progress_duration': 'mediaProgressDuration',
            'media_progress_percentage': 'mediaProgressPercentage'
        }

        self._media_progress_duration = media_progress_duration
        self._media_progress_percentage = media_progress_percentage

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDiscoveryengineV1betaMediaInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDiscoveryengineV1betaMediaInfo of this GoogleCloudDiscoveryengineV1betaMediaInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def media_progress_duration(self):
        """Gets the media_progress_duration of this GoogleCloudDiscoveryengineV1betaMediaInfo.

        The media progress time in seconds, if applicable. For example, if the end user has finished 90 seconds of a playback video, then MediaInfo.media_progress_duration.seconds should be set to 90.

        :return: The media_progress_duration of this GoogleCloudDiscoveryengineV1betaMediaInfo.
        :rtype: str
        """
        return self._media_progress_duration

    @media_progress_duration.setter
    def media_progress_duration(self, media_progress_duration):
        """Sets the media_progress_duration of this GoogleCloudDiscoveryengineV1betaMediaInfo.

        The media progress time in seconds, if applicable. For example, if the end user has finished 90 seconds of a playback video, then MediaInfo.media_progress_duration.seconds should be set to 90.

        :param media_progress_duration: The media_progress_duration of this GoogleCloudDiscoveryengineV1betaMediaInfo.
        :type media_progress_duration: str
        """

        self._media_progress_duration = media_progress_duration

    @property
    def media_progress_percentage(self):
        """Gets the media_progress_percentage of this GoogleCloudDiscoveryengineV1betaMediaInfo.

        Media progress should be computed using only the media_progress_duration relative to the media total length. This value must be between `[0, 1.0]` inclusive. If this is not a playback or the progress cannot be computed (e.g. ongoing livestream), this field should be unset.

        :return: The media_progress_percentage of this GoogleCloudDiscoveryengineV1betaMediaInfo.
        :rtype: float
        """
        return self._media_progress_percentage

    @media_progress_percentage.setter
    def media_progress_percentage(self, media_progress_percentage):
        """Sets the media_progress_percentage of this GoogleCloudDiscoveryengineV1betaMediaInfo.

        Media progress should be computed using only the media_progress_duration relative to the media total length. This value must be between `[0, 1.0]` inclusive. If this is not a playback or the progress cannot be computed (e.g. ongoing livestream), this field should be unset.

        :param media_progress_percentage: The media_progress_percentage of this GoogleCloudDiscoveryengineV1betaMediaInfo.
        :type media_progress_percentage: float
        """

        self._media_progress_percentage = media_progress_percentage
