# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSnippetSpec(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, max_snippet_count: int=None, reference_only: bool=None, return_snippet: bool=None):
        """GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSnippetSpec - a model defined in OpenAPI

        :param max_snippet_count: The max_snippet_count of this GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSnippetSpec.
        :param reference_only: The reference_only of this GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSnippetSpec.
        :param return_snippet: The return_snippet of this GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSnippetSpec.
        """
        self.openapi_types = {
            'max_snippet_count': int,
            'reference_only': bool,
            'return_snippet': bool
        }

        self.attribute_map = {
            'max_snippet_count': 'maxSnippetCount',
            'reference_only': 'referenceOnly',
            'return_snippet': 'returnSnippet'
        }

        self._max_snippet_count = max_snippet_count
        self._reference_only = reference_only
        self._return_snippet = return_snippet

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSnippetSpec':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSnippetSpec of this GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSnippetSpec.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def max_snippet_count(self):
        """Gets the max_snippet_count of this GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSnippetSpec.

        [DEPRECATED] This field is deprecated. To control snippet return, use `return_snippet` field. For backwards compatibility, we will return snippet if max_snippet_count > 0.

        :return: The max_snippet_count of this GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSnippetSpec.
        :rtype: int
        """
        return self._max_snippet_count

    @max_snippet_count.setter
    def max_snippet_count(self, max_snippet_count):
        """Sets the max_snippet_count of this GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSnippetSpec.

        [DEPRECATED] This field is deprecated. To control snippet return, use `return_snippet` field. For backwards compatibility, we will return snippet if max_snippet_count > 0.

        :param max_snippet_count: The max_snippet_count of this GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSnippetSpec.
        :type max_snippet_count: int
        """

        self._max_snippet_count = max_snippet_count

    @property
    def reference_only(self):
        """Gets the reference_only of this GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSnippetSpec.

        [DEPRECATED] This field is deprecated and will have no affect on the snippet.

        :return: The reference_only of this GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSnippetSpec.
        :rtype: bool
        """
        return self._reference_only

    @reference_only.setter
    def reference_only(self, reference_only):
        """Sets the reference_only of this GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSnippetSpec.

        [DEPRECATED] This field is deprecated and will have no affect on the snippet.

        :param reference_only: The reference_only of this GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSnippetSpec.
        :type reference_only: bool
        """

        self._reference_only = reference_only

    @property
    def return_snippet(self):
        """Gets the return_snippet of this GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSnippetSpec.

        If `true`, then return snippet. If no snippet can be generated, we return \"No snippet is available for this page.\" A `snippet_status` with `SUCCESS` or `NO_SNIPPET_AVAILABLE` will also be returned.

        :return: The return_snippet of this GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSnippetSpec.
        :rtype: bool
        """
        return self._return_snippet

    @return_snippet.setter
    def return_snippet(self, return_snippet):
        """Sets the return_snippet of this GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSnippetSpec.

        If `true`, then return snippet. If no snippet can be generated, we return \"No snippet is available for this page.\" A `snippet_status` with `SUCCESS` or `NO_SNIPPET_AVAILABLE` will also be returned.

        :param return_snippet: The return_snippet of this GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSnippetSpec.
        :type return_snippet: bool
        """

        self._return_snippet = return_snippet
