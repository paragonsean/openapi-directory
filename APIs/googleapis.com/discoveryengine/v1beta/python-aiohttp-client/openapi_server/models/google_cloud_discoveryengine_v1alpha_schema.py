# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_discoveryengine_v1alpha_field_config import GoogleCloudDiscoveryengineV1alphaFieldConfig
from openapi_server import util


class GoogleCloudDiscoveryengineV1alphaSchema(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, field_configs: List[GoogleCloudDiscoveryengineV1alphaFieldConfig]=None, json_schema: str=None, name: str=None, struct_schema: Dict[str, object]=None):
        """GoogleCloudDiscoveryengineV1alphaSchema - a model defined in OpenAPI

        :param field_configs: The field_configs of this GoogleCloudDiscoveryengineV1alphaSchema.
        :param json_schema: The json_schema of this GoogleCloudDiscoveryengineV1alphaSchema.
        :param name: The name of this GoogleCloudDiscoveryengineV1alphaSchema.
        :param struct_schema: The struct_schema of this GoogleCloudDiscoveryengineV1alphaSchema.
        """
        self.openapi_types = {
            'field_configs': List[GoogleCloudDiscoveryengineV1alphaFieldConfig],
            'json_schema': str,
            'name': str,
            'struct_schema': Dict[str, object]
        }

        self.attribute_map = {
            'field_configs': 'fieldConfigs',
            'json_schema': 'jsonSchema',
            'name': 'name',
            'struct_schema': 'structSchema'
        }

        self._field_configs = field_configs
        self._json_schema = json_schema
        self._name = name
        self._struct_schema = struct_schema

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDiscoveryengineV1alphaSchema':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDiscoveryengineV1alphaSchema of this GoogleCloudDiscoveryengineV1alphaSchema.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def field_configs(self):
        """Gets the field_configs of this GoogleCloudDiscoveryengineV1alphaSchema.

        Output only. Configurations for fields of the schema.

        :return: The field_configs of this GoogleCloudDiscoveryengineV1alphaSchema.
        :rtype: List[GoogleCloudDiscoveryengineV1alphaFieldConfig]
        """
        return self._field_configs

    @field_configs.setter
    def field_configs(self, field_configs):
        """Sets the field_configs of this GoogleCloudDiscoveryengineV1alphaSchema.

        Output only. Configurations for fields of the schema.

        :param field_configs: The field_configs of this GoogleCloudDiscoveryengineV1alphaSchema.
        :type field_configs: List[GoogleCloudDiscoveryengineV1alphaFieldConfig]
        """

        self._field_configs = field_configs

    @property
    def json_schema(self):
        """Gets the json_schema of this GoogleCloudDiscoveryengineV1alphaSchema.

        The JSON representation of the schema.

        :return: The json_schema of this GoogleCloudDiscoveryengineV1alphaSchema.
        :rtype: str
        """
        return self._json_schema

    @json_schema.setter
    def json_schema(self, json_schema):
        """Sets the json_schema of this GoogleCloudDiscoveryengineV1alphaSchema.

        The JSON representation of the schema.

        :param json_schema: The json_schema of this GoogleCloudDiscoveryengineV1alphaSchema.
        :type json_schema: str
        """

        self._json_schema = json_schema

    @property
    def name(self):
        """Gets the name of this GoogleCloudDiscoveryengineV1alphaSchema.

        Immutable. The full resource name of the schema, in the format of `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/schemas/{schema}`. This field must be a UTF-8 encoded string with a length limit of 1024 characters.

        :return: The name of this GoogleCloudDiscoveryengineV1alphaSchema.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudDiscoveryengineV1alphaSchema.

        Immutable. The full resource name of the schema, in the format of `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/schemas/{schema}`. This field must be a UTF-8 encoded string with a length limit of 1024 characters.

        :param name: The name of this GoogleCloudDiscoveryengineV1alphaSchema.
        :type name: str
        """

        self._name = name

    @property
    def struct_schema(self):
        """Gets the struct_schema of this GoogleCloudDiscoveryengineV1alphaSchema.

        The structured representation of the schema.

        :return: The struct_schema of this GoogleCloudDiscoveryengineV1alphaSchema.
        :rtype: Dict[str, object]
        """
        return self._struct_schema

    @struct_schema.setter
    def struct_schema(self, struct_schema):
        """Sets the struct_schema of this GoogleCloudDiscoveryengineV1alphaSchema.

        The structured representation of the schema.

        :param struct_schema: The struct_schema of this GoogleCloudDiscoveryengineV1alphaSchema.
        :type struct_schema: Dict[str, object]
        """

        self._struct_schema = struct_schema
