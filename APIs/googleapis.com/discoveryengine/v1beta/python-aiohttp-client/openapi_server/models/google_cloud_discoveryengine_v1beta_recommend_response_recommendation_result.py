# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_discoveryengine_v1beta_document import GoogleCloudDiscoveryengineV1betaDocument
from openapi_server import util


class GoogleCloudDiscoveryengineV1betaRecommendResponseRecommendationResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, document: GoogleCloudDiscoveryengineV1betaDocument=None, id: str=None, metadata: Dict[str, object]=None):
        """GoogleCloudDiscoveryengineV1betaRecommendResponseRecommendationResult - a model defined in OpenAPI

        :param document: The document of this GoogleCloudDiscoveryengineV1betaRecommendResponseRecommendationResult.
        :param id: The id of this GoogleCloudDiscoveryengineV1betaRecommendResponseRecommendationResult.
        :param metadata: The metadata of this GoogleCloudDiscoveryengineV1betaRecommendResponseRecommendationResult.
        """
        self.openapi_types = {
            'document': GoogleCloudDiscoveryengineV1betaDocument,
            'id': str,
            'metadata': Dict[str, object]
        }

        self.attribute_map = {
            'document': 'document',
            'id': 'id',
            'metadata': 'metadata'
        }

        self._document = document
        self._id = id
        self._metadata = metadata

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDiscoveryengineV1betaRecommendResponseRecommendationResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDiscoveryengineV1betaRecommendResponseRecommendationResult of this GoogleCloudDiscoveryengineV1betaRecommendResponseRecommendationResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def document(self):
        """Gets the document of this GoogleCloudDiscoveryengineV1betaRecommendResponseRecommendationResult.


        :return: The document of this GoogleCloudDiscoveryengineV1betaRecommendResponseRecommendationResult.
        :rtype: GoogleCloudDiscoveryengineV1betaDocument
        """
        return self._document

    @document.setter
    def document(self, document):
        """Sets the document of this GoogleCloudDiscoveryengineV1betaRecommendResponseRecommendationResult.


        :param document: The document of this GoogleCloudDiscoveryengineV1betaRecommendResponseRecommendationResult.
        :type document: GoogleCloudDiscoveryengineV1betaDocument
        """

        self._document = document

    @property
    def id(self):
        """Gets the id of this GoogleCloudDiscoveryengineV1betaRecommendResponseRecommendationResult.

        Resource ID of the recommended Document.

        :return: The id of this GoogleCloudDiscoveryengineV1betaRecommendResponseRecommendationResult.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this GoogleCloudDiscoveryengineV1betaRecommendResponseRecommendationResult.

        Resource ID of the recommended Document.

        :param id: The id of this GoogleCloudDiscoveryengineV1betaRecommendResponseRecommendationResult.
        :type id: str
        """

        self._id = id

    @property
    def metadata(self):
        """Gets the metadata of this GoogleCloudDiscoveryengineV1betaRecommendResponseRecommendationResult.

        Additional Document metadata / annotations. Possible values: * `score`: Recommendation score in double value. Is set if `returnScore` is set to true in RecommendRequest.params.

        :return: The metadata of this GoogleCloudDiscoveryengineV1betaRecommendResponseRecommendationResult.
        :rtype: Dict[str, object]
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this GoogleCloudDiscoveryengineV1betaRecommendResponseRecommendationResult.

        Additional Document metadata / annotations. Possible values: * `score`: Recommendation score in double value. Is set if `returnScore` is set to true in RecommendRequest.params.

        :param metadata: The metadata of this GoogleCloudDiscoveryengineV1betaRecommendResponseRecommendationResult.
        :type metadata: Dict[str, object]
        """

        self._metadata = metadata
