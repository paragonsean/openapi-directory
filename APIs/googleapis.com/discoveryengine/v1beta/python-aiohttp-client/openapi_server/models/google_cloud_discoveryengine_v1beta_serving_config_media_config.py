# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDiscoveryengineV1betaServingConfigMediaConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, content_freshness_cutoff_days: int=None, content_watched_minutes_threshold: float=None, content_watched_percentage_threshold: float=None, content_watched_seconds_threshold: float=None, demotion_event_type: str=None):
        """GoogleCloudDiscoveryengineV1betaServingConfigMediaConfig - a model defined in OpenAPI

        :param content_freshness_cutoff_days: The content_freshness_cutoff_days of this GoogleCloudDiscoveryengineV1betaServingConfigMediaConfig.
        :param content_watched_minutes_threshold: The content_watched_minutes_threshold of this GoogleCloudDiscoveryengineV1betaServingConfigMediaConfig.
        :param content_watched_percentage_threshold: The content_watched_percentage_threshold of this GoogleCloudDiscoveryengineV1betaServingConfigMediaConfig.
        :param content_watched_seconds_threshold: The content_watched_seconds_threshold of this GoogleCloudDiscoveryengineV1betaServingConfigMediaConfig.
        :param demotion_event_type: The demotion_event_type of this GoogleCloudDiscoveryengineV1betaServingConfigMediaConfig.
        """
        self.openapi_types = {
            'content_freshness_cutoff_days': int,
            'content_watched_minutes_threshold': float,
            'content_watched_percentage_threshold': float,
            'content_watched_seconds_threshold': float,
            'demotion_event_type': str
        }

        self.attribute_map = {
            'content_freshness_cutoff_days': 'contentFreshnessCutoffDays',
            'content_watched_minutes_threshold': 'contentWatchedMinutesThreshold',
            'content_watched_percentage_threshold': 'contentWatchedPercentageThreshold',
            'content_watched_seconds_threshold': 'contentWatchedSecondsThreshold',
            'demotion_event_type': 'demotionEventType'
        }

        self._content_freshness_cutoff_days = content_freshness_cutoff_days
        self._content_watched_minutes_threshold = content_watched_minutes_threshold
        self._content_watched_percentage_threshold = content_watched_percentage_threshold
        self._content_watched_seconds_threshold = content_watched_seconds_threshold
        self._demotion_event_type = demotion_event_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDiscoveryengineV1betaServingConfigMediaConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDiscoveryengineV1betaServingConfigMediaConfig of this GoogleCloudDiscoveryengineV1betaServingConfigMediaConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def content_freshness_cutoff_days(self):
        """Gets the content_freshness_cutoff_days of this GoogleCloudDiscoveryengineV1betaServingConfigMediaConfig.

        Specifies the content freshness used for recommendation result. Contents will be demoted if contents were published for more than content freshness cutoff days.

        :return: The content_freshness_cutoff_days of this GoogleCloudDiscoveryengineV1betaServingConfigMediaConfig.
        :rtype: int
        """
        return self._content_freshness_cutoff_days

    @content_freshness_cutoff_days.setter
    def content_freshness_cutoff_days(self, content_freshness_cutoff_days):
        """Sets the content_freshness_cutoff_days of this GoogleCloudDiscoveryengineV1betaServingConfigMediaConfig.

        Specifies the content freshness used for recommendation result. Contents will be demoted if contents were published for more than content freshness cutoff days.

        :param content_freshness_cutoff_days: The content_freshness_cutoff_days of this GoogleCloudDiscoveryengineV1betaServingConfigMediaConfig.
        :type content_freshness_cutoff_days: int
        """

        self._content_freshness_cutoff_days = content_freshness_cutoff_days

    @property
    def content_watched_minutes_threshold(self):
        """Gets the content_watched_minutes_threshold of this GoogleCloudDiscoveryengineV1betaServingConfigMediaConfig.

        Specifies the content watched minutes threshold for demotion.

        :return: The content_watched_minutes_threshold of this GoogleCloudDiscoveryengineV1betaServingConfigMediaConfig.
        :rtype: float
        """
        return self._content_watched_minutes_threshold

    @content_watched_minutes_threshold.setter
    def content_watched_minutes_threshold(self, content_watched_minutes_threshold):
        """Sets the content_watched_minutes_threshold of this GoogleCloudDiscoveryengineV1betaServingConfigMediaConfig.

        Specifies the content watched minutes threshold for demotion.

        :param content_watched_minutes_threshold: The content_watched_minutes_threshold of this GoogleCloudDiscoveryengineV1betaServingConfigMediaConfig.
        :type content_watched_minutes_threshold: float
        """

        self._content_watched_minutes_threshold = content_watched_minutes_threshold

    @property
    def content_watched_percentage_threshold(self):
        """Gets the content_watched_percentage_threshold of this GoogleCloudDiscoveryengineV1betaServingConfigMediaConfig.

        Specifies the content watched percentage threshold for demotion. Threshold value must be between [0, 1.0] inclusive.

        :return: The content_watched_percentage_threshold of this GoogleCloudDiscoveryengineV1betaServingConfigMediaConfig.
        :rtype: float
        """
        return self._content_watched_percentage_threshold

    @content_watched_percentage_threshold.setter
    def content_watched_percentage_threshold(self, content_watched_percentage_threshold):
        """Sets the content_watched_percentage_threshold of this GoogleCloudDiscoveryengineV1betaServingConfigMediaConfig.

        Specifies the content watched percentage threshold for demotion. Threshold value must be between [0, 1.0] inclusive.

        :param content_watched_percentage_threshold: The content_watched_percentage_threshold of this GoogleCloudDiscoveryengineV1betaServingConfigMediaConfig.
        :type content_watched_percentage_threshold: float
        """

        self._content_watched_percentage_threshold = content_watched_percentage_threshold

    @property
    def content_watched_seconds_threshold(self):
        """Gets the content_watched_seconds_threshold of this GoogleCloudDiscoveryengineV1betaServingConfigMediaConfig.

        Specifies the content watched minutes threshold for demotion.

        :return: The content_watched_seconds_threshold of this GoogleCloudDiscoveryengineV1betaServingConfigMediaConfig.
        :rtype: float
        """
        return self._content_watched_seconds_threshold

    @content_watched_seconds_threshold.setter
    def content_watched_seconds_threshold(self, content_watched_seconds_threshold):
        """Sets the content_watched_seconds_threshold of this GoogleCloudDiscoveryengineV1betaServingConfigMediaConfig.

        Specifies the content watched minutes threshold for demotion.

        :param content_watched_seconds_threshold: The content_watched_seconds_threshold of this GoogleCloudDiscoveryengineV1betaServingConfigMediaConfig.
        :type content_watched_seconds_threshold: float
        """

        self._content_watched_seconds_threshold = content_watched_seconds_threshold

    @property
    def demotion_event_type(self):
        """Gets the demotion_event_type of this GoogleCloudDiscoveryengineV1betaServingConfigMediaConfig.

        Specifies the event type used for demoting recommendation result. Currently supported values: * `view-item`: Item viewed. * `media-play`: Start/resume watching a video, playing a song, etc. * `media-complete`: Finished or stopped midway through a video, song, etc. If unset, watch history demotion will not be applied. Content freshness demotion will still be applied.

        :return: The demotion_event_type of this GoogleCloudDiscoveryengineV1betaServingConfigMediaConfig.
        :rtype: str
        """
        return self._demotion_event_type

    @demotion_event_type.setter
    def demotion_event_type(self, demotion_event_type):
        """Sets the demotion_event_type of this GoogleCloudDiscoveryengineV1betaServingConfigMediaConfig.

        Specifies the event type used for demoting recommendation result. Currently supported values: * `view-item`: Item viewed. * `media-play`: Start/resume watching a video, playing a song, etc. * `media-complete`: Finished or stopped midway through a video, song, etc. If unset, watch history demotion will not be applied. Content freshness demotion will still be applied.

        :param demotion_event_type: The demotion_event_type of this GoogleCloudDiscoveryengineV1betaServingConfigMediaConfig.
        :type demotion_event_type: str
        """

        self._demotion_event_type = demotion_event_type
