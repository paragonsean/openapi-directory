# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_discoveryengine_v1beta_conversation_context import GoogleCloudDiscoveryengineV1betaConversationContext
from openapi_server import util


class GoogleCloudDiscoveryengineV1betaTextInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, context: GoogleCloudDiscoveryengineV1betaConversationContext=None, input: str=None):
        """GoogleCloudDiscoveryengineV1betaTextInput - a model defined in OpenAPI

        :param context: The context of this GoogleCloudDiscoveryengineV1betaTextInput.
        :param input: The input of this GoogleCloudDiscoveryengineV1betaTextInput.
        """
        self.openapi_types = {
            'context': GoogleCloudDiscoveryengineV1betaConversationContext,
            'input': str
        }

        self.attribute_map = {
            'context': 'context',
            'input': 'input'
        }

        self._context = context
        self._input = input

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDiscoveryengineV1betaTextInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDiscoveryengineV1betaTextInput of this GoogleCloudDiscoveryengineV1betaTextInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def context(self):
        """Gets the context of this GoogleCloudDiscoveryengineV1betaTextInput.


        :return: The context of this GoogleCloudDiscoveryengineV1betaTextInput.
        :rtype: GoogleCloudDiscoveryengineV1betaConversationContext
        """
        return self._context

    @context.setter
    def context(self, context):
        """Sets the context of this GoogleCloudDiscoveryengineV1betaTextInput.


        :param context: The context of this GoogleCloudDiscoveryengineV1betaTextInput.
        :type context: GoogleCloudDiscoveryengineV1betaConversationContext
        """

        self._context = context

    @property
    def input(self):
        """Gets the input of this GoogleCloudDiscoveryengineV1betaTextInput.

        Text input.

        :return: The input of this GoogleCloudDiscoveryengineV1betaTextInput.
        :rtype: str
        """
        return self._input

    @input.setter
    def input(self, input):
        """Sets the input of this GoogleCloudDiscoveryengineV1betaTextInput.

        Text input.

        :param input: The input of this GoogleCloudDiscoveryengineV1betaTextInput.
        :type input: str
        """

        self._input = input
