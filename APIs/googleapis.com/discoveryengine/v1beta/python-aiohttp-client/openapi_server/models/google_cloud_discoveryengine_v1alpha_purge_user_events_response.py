# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDiscoveryengineV1alphaPurgeUserEventsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, purge_count: str=None):
        """GoogleCloudDiscoveryengineV1alphaPurgeUserEventsResponse - a model defined in OpenAPI

        :param purge_count: The purge_count of this GoogleCloudDiscoveryengineV1alphaPurgeUserEventsResponse.
        """
        self.openapi_types = {
            'purge_count': str
        }

        self.attribute_map = {
            'purge_count': 'purgeCount'
        }

        self._purge_count = purge_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDiscoveryengineV1alphaPurgeUserEventsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDiscoveryengineV1alphaPurgeUserEventsResponse of this GoogleCloudDiscoveryengineV1alphaPurgeUserEventsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def purge_count(self):
        """Gets the purge_count of this GoogleCloudDiscoveryengineV1alphaPurgeUserEventsResponse.

        The total count of events purged as a result of the operation.

        :return: The purge_count of this GoogleCloudDiscoveryengineV1alphaPurgeUserEventsResponse.
        :rtype: str
        """
        return self._purge_count

    @purge_count.setter
    def purge_count(self, purge_count):
        """Sets the purge_count of this GoogleCloudDiscoveryengineV1alphaPurgeUserEventsResponse.

        The total count of events purged as a result of the operation.

        :param purge_count: The purge_count of this GoogleCloudDiscoveryengineV1alphaPurgeUserEventsResponse.
        :type purge_count: str
        """

        self._purge_count = purge_count
