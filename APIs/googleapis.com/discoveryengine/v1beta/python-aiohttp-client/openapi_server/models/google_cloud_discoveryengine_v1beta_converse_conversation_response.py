# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_discoveryengine_v1beta_conversation import GoogleCloudDiscoveryengineV1betaConversation
from openapi_server.models.google_cloud_discoveryengine_v1beta_reply import GoogleCloudDiscoveryengineV1betaReply
from openapi_server.models.google_cloud_discoveryengine_v1beta_search_response_search_result import GoogleCloudDiscoveryengineV1betaSearchResponseSearchResult
from openapi_server import util


class GoogleCloudDiscoveryengineV1betaConverseConversationResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, conversation: GoogleCloudDiscoveryengineV1betaConversation=None, related_questions: List[str]=None, reply: GoogleCloudDiscoveryengineV1betaReply=None, search_results: List[GoogleCloudDiscoveryengineV1betaSearchResponseSearchResult]=None):
        """GoogleCloudDiscoveryengineV1betaConverseConversationResponse - a model defined in OpenAPI

        :param conversation: The conversation of this GoogleCloudDiscoveryengineV1betaConverseConversationResponse.
        :param related_questions: The related_questions of this GoogleCloudDiscoveryengineV1betaConverseConversationResponse.
        :param reply: The reply of this GoogleCloudDiscoveryengineV1betaConverseConversationResponse.
        :param search_results: The search_results of this GoogleCloudDiscoveryengineV1betaConverseConversationResponse.
        """
        self.openapi_types = {
            'conversation': GoogleCloudDiscoveryengineV1betaConversation,
            'related_questions': List[str],
            'reply': GoogleCloudDiscoveryengineV1betaReply,
            'search_results': List[GoogleCloudDiscoveryengineV1betaSearchResponseSearchResult]
        }

        self.attribute_map = {
            'conversation': 'conversation',
            'related_questions': 'relatedQuestions',
            'reply': 'reply',
            'search_results': 'searchResults'
        }

        self._conversation = conversation
        self._related_questions = related_questions
        self._reply = reply
        self._search_results = search_results

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDiscoveryengineV1betaConverseConversationResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDiscoveryengineV1betaConverseConversationResponse of this GoogleCloudDiscoveryengineV1betaConverseConversationResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def conversation(self):
        """Gets the conversation of this GoogleCloudDiscoveryengineV1betaConverseConversationResponse.


        :return: The conversation of this GoogleCloudDiscoveryengineV1betaConverseConversationResponse.
        :rtype: GoogleCloudDiscoveryengineV1betaConversation
        """
        return self._conversation

    @conversation.setter
    def conversation(self, conversation):
        """Sets the conversation of this GoogleCloudDiscoveryengineV1betaConverseConversationResponse.


        :param conversation: The conversation of this GoogleCloudDiscoveryengineV1betaConverseConversationResponse.
        :type conversation: GoogleCloudDiscoveryengineV1betaConversation
        """

        self._conversation = conversation

    @property
    def related_questions(self):
        """Gets the related_questions of this GoogleCloudDiscoveryengineV1betaConverseConversationResponse.

        Suggested related questions.

        :return: The related_questions of this GoogleCloudDiscoveryengineV1betaConverseConversationResponse.
        :rtype: List[str]
        """
        return self._related_questions

    @related_questions.setter
    def related_questions(self, related_questions):
        """Sets the related_questions of this GoogleCloudDiscoveryengineV1betaConverseConversationResponse.

        Suggested related questions.

        :param related_questions: The related_questions of this GoogleCloudDiscoveryengineV1betaConverseConversationResponse.
        :type related_questions: List[str]
        """

        self._related_questions = related_questions

    @property
    def reply(self):
        """Gets the reply of this GoogleCloudDiscoveryengineV1betaConverseConversationResponse.


        :return: The reply of this GoogleCloudDiscoveryengineV1betaConverseConversationResponse.
        :rtype: GoogleCloudDiscoveryengineV1betaReply
        """
        return self._reply

    @reply.setter
    def reply(self, reply):
        """Sets the reply of this GoogleCloudDiscoveryengineV1betaConverseConversationResponse.


        :param reply: The reply of this GoogleCloudDiscoveryengineV1betaConverseConversationResponse.
        :type reply: GoogleCloudDiscoveryengineV1betaReply
        """

        self._reply = reply

    @property
    def search_results(self):
        """Gets the search_results of this GoogleCloudDiscoveryengineV1betaConverseConversationResponse.

        Search Results.

        :return: The search_results of this GoogleCloudDiscoveryengineV1betaConverseConversationResponse.
        :rtype: List[GoogleCloudDiscoveryengineV1betaSearchResponseSearchResult]
        """
        return self._search_results

    @search_results.setter
    def search_results(self, search_results):
        """Sets the search_results of this GoogleCloudDiscoveryengineV1betaConverseConversationResponse.

        Search Results.

        :param search_results: The search_results of this GoogleCloudDiscoveryengineV1betaConverseConversationResponse.
        :type search_results: List[GoogleCloudDiscoveryengineV1betaSearchResponseSearchResult]
        """

        self._search_results = search_results
