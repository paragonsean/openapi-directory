# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDiscoveryengineV1betaSearchInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, offset: int=None, order_by: str=None, search_query: str=None):
        """GoogleCloudDiscoveryengineV1betaSearchInfo - a model defined in OpenAPI

        :param offset: The offset of this GoogleCloudDiscoveryengineV1betaSearchInfo.
        :param order_by: The order_by of this GoogleCloudDiscoveryengineV1betaSearchInfo.
        :param search_query: The search_query of this GoogleCloudDiscoveryengineV1betaSearchInfo.
        """
        self.openapi_types = {
            'offset': int,
            'order_by': str,
            'search_query': str
        }

        self.attribute_map = {
            'offset': 'offset',
            'order_by': 'orderBy',
            'search_query': 'searchQuery'
        }

        self._offset = offset
        self._order_by = order_by
        self._search_query = search_query

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDiscoveryengineV1betaSearchInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDiscoveryengineV1betaSearchInfo of this GoogleCloudDiscoveryengineV1betaSearchInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def offset(self):
        """Gets the offset of this GoogleCloudDiscoveryengineV1betaSearchInfo.

        An integer that specifies the current offset for pagination (the 0-indexed starting location, amongst the products deemed by the API as relevant). See SearchRequest.offset for definition. If this field is negative, an `INVALID_ARGUMENT` is returned. This can only be set for `search` events. Other event types should not set this field. Otherwise, an `INVALID_ARGUMENT` error is returned.

        :return: The offset of this GoogleCloudDiscoveryengineV1betaSearchInfo.
        :rtype: int
        """
        return self._offset

    @offset.setter
    def offset(self, offset):
        """Sets the offset of this GoogleCloudDiscoveryengineV1betaSearchInfo.

        An integer that specifies the current offset for pagination (the 0-indexed starting location, amongst the products deemed by the API as relevant). See SearchRequest.offset for definition. If this field is negative, an `INVALID_ARGUMENT` is returned. This can only be set for `search` events. Other event types should not set this field. Otherwise, an `INVALID_ARGUMENT` error is returned.

        :param offset: The offset of this GoogleCloudDiscoveryengineV1betaSearchInfo.
        :type offset: int
        """

        self._offset = offset

    @property
    def order_by(self):
        """Gets the order_by of this GoogleCloudDiscoveryengineV1betaSearchInfo.

        The order in which products are returned, if applicable. See SearchRequest.order_by for definition and syntax. The value must be a UTF-8 encoded string with a length limit of 1,000 characters. Otherwise, an `INVALID_ARGUMENT` error is returned. This can only be set for `search` events. Other event types should not set this field. Otherwise, an `INVALID_ARGUMENT` error is returned.

        :return: The order_by of this GoogleCloudDiscoveryengineV1betaSearchInfo.
        :rtype: str
        """
        return self._order_by

    @order_by.setter
    def order_by(self, order_by):
        """Sets the order_by of this GoogleCloudDiscoveryengineV1betaSearchInfo.

        The order in which products are returned, if applicable. See SearchRequest.order_by for definition and syntax. The value must be a UTF-8 encoded string with a length limit of 1,000 characters. Otherwise, an `INVALID_ARGUMENT` error is returned. This can only be set for `search` events. Other event types should not set this field. Otherwise, an `INVALID_ARGUMENT` error is returned.

        :param order_by: The order_by of this GoogleCloudDiscoveryengineV1betaSearchInfo.
        :type order_by: str
        """

        self._order_by = order_by

    @property
    def search_query(self):
        """Gets the search_query of this GoogleCloudDiscoveryengineV1betaSearchInfo.

        The user's search query. See SearchRequest.query for definition. The value must be a UTF-8 encoded string with a length limit of 5,000 characters. Otherwise, an `INVALID_ARGUMENT` error is returned. At least one of search_query or PageInfo.page_category is required for `search` events. Other event types should not set this field. Otherwise, an `INVALID_ARGUMENT` error is returned.

        :return: The search_query of this GoogleCloudDiscoveryengineV1betaSearchInfo.
        :rtype: str
        """
        return self._search_query

    @search_query.setter
    def search_query(self, search_query):
        """Sets the search_query of this GoogleCloudDiscoveryengineV1betaSearchInfo.

        The user's search query. See SearchRequest.query for definition. The value must be a UTF-8 encoded string with a length limit of 5,000 characters. Otherwise, an `INVALID_ARGUMENT` error is returned. At least one of search_query or PageInfo.page_category is required for `search` events. Other event types should not set this field. Otherwise, an `INVALID_ARGUMENT` error is returned.

        :param search_query: The search_query of this GoogleCloudDiscoveryengineV1betaSearchInfo.
        :type search_query: str
        """

        self._search_query = search_query
