# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_discoveryengine_v1beta_search_request_content_search_spec_summary_spec_model_prompt_spec import GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpecModelPromptSpec
from openapi_server.models.google_cloud_discoveryengine_v1beta_search_request_content_search_spec_summary_spec_model_spec import GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpecModelSpec
from openapi_server import util


class GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpec(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ignore_adversarial_query: bool=None, ignore_non_summary_seeking_query: bool=None, include_citations: bool=None, language_code: str=None, model_prompt_spec: GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpecModelPromptSpec=None, model_spec: GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpecModelSpec=None, summary_result_count: int=None):
        """GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpec - a model defined in OpenAPI

        :param ignore_adversarial_query: The ignore_adversarial_query of this GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpec.
        :param ignore_non_summary_seeking_query: The ignore_non_summary_seeking_query of this GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpec.
        :param include_citations: The include_citations of this GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpec.
        :param language_code: The language_code of this GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpec.
        :param model_prompt_spec: The model_prompt_spec of this GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpec.
        :param model_spec: The model_spec of this GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpec.
        :param summary_result_count: The summary_result_count of this GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpec.
        """
        self.openapi_types = {
            'ignore_adversarial_query': bool,
            'ignore_non_summary_seeking_query': bool,
            'include_citations': bool,
            'language_code': str,
            'model_prompt_spec': GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpecModelPromptSpec,
            'model_spec': GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpecModelSpec,
            'summary_result_count': int
        }

        self.attribute_map = {
            'ignore_adversarial_query': 'ignoreAdversarialQuery',
            'ignore_non_summary_seeking_query': 'ignoreNonSummarySeekingQuery',
            'include_citations': 'includeCitations',
            'language_code': 'languageCode',
            'model_prompt_spec': 'modelPromptSpec',
            'model_spec': 'modelSpec',
            'summary_result_count': 'summaryResultCount'
        }

        self._ignore_adversarial_query = ignore_adversarial_query
        self._ignore_non_summary_seeking_query = ignore_non_summary_seeking_query
        self._include_citations = include_citations
        self._language_code = language_code
        self._model_prompt_spec = model_prompt_spec
        self._model_spec = model_spec
        self._summary_result_count = summary_result_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpec':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpec of this GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpec.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ignore_adversarial_query(self):
        """Gets the ignore_adversarial_query of this GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpec.

        Specifies whether to filter out adversarial queries. The default value is `false`. Google employs search-query classification to detect adversarial queries. No summary is returned if the search query is classified as an adversarial query. For example, a user might ask a question regarding negative comments about the company or submit a query designed to generate unsafe, policy-violating output. If this field is set to `true`, we skip generating summaries for adversarial queries and return fallback messages instead.

        :return: The ignore_adversarial_query of this GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpec.
        :rtype: bool
        """
        return self._ignore_adversarial_query

    @ignore_adversarial_query.setter
    def ignore_adversarial_query(self, ignore_adversarial_query):
        """Sets the ignore_adversarial_query of this GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpec.

        Specifies whether to filter out adversarial queries. The default value is `false`. Google employs search-query classification to detect adversarial queries. No summary is returned if the search query is classified as an adversarial query. For example, a user might ask a question regarding negative comments about the company or submit a query designed to generate unsafe, policy-violating output. If this field is set to `true`, we skip generating summaries for adversarial queries and return fallback messages instead.

        :param ignore_adversarial_query: The ignore_adversarial_query of this GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpec.
        :type ignore_adversarial_query: bool
        """

        self._ignore_adversarial_query = ignore_adversarial_query

    @property
    def ignore_non_summary_seeking_query(self):
        """Gets the ignore_non_summary_seeking_query of this GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpec.

        Specifies whether to filter out queries that are not summary-seeking. The default value is `false`. Google employs search-query classification to detect summary-seeking queries. No summary is returned if the search query is classified as a non-summary seeking query. For example, `why is the sky blue` and `Who is the best soccer player in the world?` are summary-seeking queries, but `SFO airport` and `world cup 2026` are not. They are most likely navigational queries. If this field is set to `true`, we skip generating summaries for non-summary seeking queries and return fallback messages instead.

        :return: The ignore_non_summary_seeking_query of this GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpec.
        :rtype: bool
        """
        return self._ignore_non_summary_seeking_query

    @ignore_non_summary_seeking_query.setter
    def ignore_non_summary_seeking_query(self, ignore_non_summary_seeking_query):
        """Sets the ignore_non_summary_seeking_query of this GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpec.

        Specifies whether to filter out queries that are not summary-seeking. The default value is `false`. Google employs search-query classification to detect summary-seeking queries. No summary is returned if the search query is classified as a non-summary seeking query. For example, `why is the sky blue` and `Who is the best soccer player in the world?` are summary-seeking queries, but `SFO airport` and `world cup 2026` are not. They are most likely navigational queries. If this field is set to `true`, we skip generating summaries for non-summary seeking queries and return fallback messages instead.

        :param ignore_non_summary_seeking_query: The ignore_non_summary_seeking_query of this GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpec.
        :type ignore_non_summary_seeking_query: bool
        """

        self._ignore_non_summary_seeking_query = ignore_non_summary_seeking_query

    @property
    def include_citations(self):
        """Gets the include_citations of this GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpec.

        Specifies whether to include citations in the summary. The default value is `false`. When this field is set to `true`, summaries include in-line citation numbers. Example summary including citations: BigQuery is Google Cloud's fully managed and completely serverless enterprise data warehouse [1]. BigQuery supports all data types, works across clouds, and has built-in machine learning and business intelligence, all within a unified platform [2, 3]. The citation numbers refer to the returned search results and are 1-indexed. For example, [1] means that the sentence is attributed to the first search result. [2, 3] means that the sentence is attributed to both the second and third search results.

        :return: The include_citations of this GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpec.
        :rtype: bool
        """
        return self._include_citations

    @include_citations.setter
    def include_citations(self, include_citations):
        """Sets the include_citations of this GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpec.

        Specifies whether to include citations in the summary. The default value is `false`. When this field is set to `true`, summaries include in-line citation numbers. Example summary including citations: BigQuery is Google Cloud's fully managed and completely serverless enterprise data warehouse [1]. BigQuery supports all data types, works across clouds, and has built-in machine learning and business intelligence, all within a unified platform [2, 3]. The citation numbers refer to the returned search results and are 1-indexed. For example, [1] means that the sentence is attributed to the first search result. [2, 3] means that the sentence is attributed to both the second and third search results.

        :param include_citations: The include_citations of this GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpec.
        :type include_citations: bool
        """

        self._include_citations = include_citations

    @property
    def language_code(self):
        """Gets the language_code of this GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpec.

        Language code for Summary. Use language tags defined by [BCP47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt). Note: This is an experimental feature.

        :return: The language_code of this GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpec.
        :rtype: str
        """
        return self._language_code

    @language_code.setter
    def language_code(self, language_code):
        """Sets the language_code of this GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpec.

        Language code for Summary. Use language tags defined by [BCP47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt). Note: This is an experimental feature.

        :param language_code: The language_code of this GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpec.
        :type language_code: str
        """

        self._language_code = language_code

    @property
    def model_prompt_spec(self):
        """Gets the model_prompt_spec of this GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpec.


        :return: The model_prompt_spec of this GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpec.
        :rtype: GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpecModelPromptSpec
        """
        return self._model_prompt_spec

    @model_prompt_spec.setter
    def model_prompt_spec(self, model_prompt_spec):
        """Sets the model_prompt_spec of this GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpec.


        :param model_prompt_spec: The model_prompt_spec of this GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpec.
        :type model_prompt_spec: GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpecModelPromptSpec
        """

        self._model_prompt_spec = model_prompt_spec

    @property
    def model_spec(self):
        """Gets the model_spec of this GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpec.


        :return: The model_spec of this GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpec.
        :rtype: GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpecModelSpec
        """
        return self._model_spec

    @model_spec.setter
    def model_spec(self, model_spec):
        """Sets the model_spec of this GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpec.


        :param model_spec: The model_spec of this GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpec.
        :type model_spec: GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpecModelSpec
        """

        self._model_spec = model_spec

    @property
    def summary_result_count(self):
        """Gets the summary_result_count of this GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpec.

        The number of top results to generate the summary from. If the number of results returned is less than `summaryResultCount`, the summary is generated from all of the results. At most five results can be used to generate a summary.

        :return: The summary_result_count of this GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpec.
        :rtype: int
        """
        return self._summary_result_count

    @summary_result_count.setter
    def summary_result_count(self, summary_result_count):
        """Sets the summary_result_count of this GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpec.

        The number of top results to generate the summary from. If the number of results returned is less than `summaryResultCount`, the summary is generated from all of the results. At most five results can be used to generate a summary.

        :param summary_result_count: The summary_result_count of this GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpec.
        :type summary_result_count: int
        """

        self._summary_result_count = summary_result_count
