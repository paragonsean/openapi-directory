/**
 * Discovery Engine API
 * Discovery Engine API.
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudDiscoveryengineV1alphaRecrawlUrisMetadata.h
 *
 * Metadata related to the progress of the SiteSearchEngineService.RecrawlUris operation. This will be returned by the google.longrunning.Operation.metadata field.
 */

#ifndef OAIGoogleCloudDiscoveryengineV1alphaRecrawlUrisMetadata_H
#define OAIGoogleCloudDiscoveryengineV1alphaRecrawlUrisMetadata_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGoogleCloudDiscoveryengineV1alphaRecrawlUrisMetadata : public OAIObject {
public:
    OAIGoogleCloudDiscoveryengineV1alphaRecrawlUrisMetadata();
    OAIGoogleCloudDiscoveryengineV1alphaRecrawlUrisMetadata(QString json);
    ~OAIGoogleCloudDiscoveryengineV1alphaRecrawlUrisMetadata() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCreateTime() const;
    void setCreateTime(const QString &create_time);
    bool is_create_time_Set() const;
    bool is_create_time_Valid() const;

    QList<QString> getInvalidUris() const;
    void setInvalidUris(const QList<QString> &invalid_uris);
    bool is_invalid_uris_Set() const;
    bool is_invalid_uris_Valid() const;

    qint32 getPendingCount() const;
    void setPendingCount(const qint32 &pending_count);
    bool is_pending_count_Set() const;
    bool is_pending_count_Valid() const;

    qint32 getQuotaExceededCount() const;
    void setQuotaExceededCount(const qint32 &quota_exceeded_count);
    bool is_quota_exceeded_count_Set() const;
    bool is_quota_exceeded_count_Valid() const;

    qint32 getSuccessCount() const;
    void setSuccessCount(const qint32 &success_count);
    bool is_success_count_Set() const;
    bool is_success_count_Valid() const;

    QString getUpdateTime() const;
    void setUpdateTime(const QString &update_time);
    bool is_update_time_Set() const;
    bool is_update_time_Valid() const;

    qint32 getValidUrisCount() const;
    void setValidUrisCount(const qint32 &valid_uris_count);
    bool is_valid_uris_count_Set() const;
    bool is_valid_uris_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_create_time;
    bool m_create_time_isSet;
    bool m_create_time_isValid;

    QList<QString> m_invalid_uris;
    bool m_invalid_uris_isSet;
    bool m_invalid_uris_isValid;

    qint32 m_pending_count;
    bool m_pending_count_isSet;
    bool m_pending_count_isValid;

    qint32 m_quota_exceeded_count;
    bool m_quota_exceeded_count_isSet;
    bool m_quota_exceeded_count_isValid;

    qint32 m_success_count;
    bool m_success_count_isSet;
    bool m_success_count_isValid;

    QString m_update_time;
    bool m_update_time_isSet;
    bool m_update_time_isValid;

    qint32 m_valid_uris_count;
    bool m_valid_uris_count_isSet;
    bool m_valid_uris_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudDiscoveryengineV1alphaRecrawlUrisMetadata)

#endif // OAIGoogleCloudDiscoveryengineV1alphaRecrawlUrisMetadata_H
