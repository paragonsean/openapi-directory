/**
 * Discovery Engine API
 * Discovery Engine API.
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDiscoveryengineV1betaConversation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDiscoveryengineV1betaConversation::OAIGoogleCloudDiscoveryengineV1betaConversation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDiscoveryengineV1betaConversation::OAIGoogleCloudDiscoveryengineV1betaConversation() {
    this->initializeModel();
}

OAIGoogleCloudDiscoveryengineV1betaConversation::~OAIGoogleCloudDiscoveryengineV1betaConversation() {}

void OAIGoogleCloudDiscoveryengineV1betaConversation::initializeModel() {

    m_end_time_isSet = false;
    m_end_time_isValid = false;

    m_messages_isSet = false;
    m_messages_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_start_time_isSet = false;
    m_start_time_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;

    m_user_pseudo_id_isSet = false;
    m_user_pseudo_id_isValid = false;
}

void OAIGoogleCloudDiscoveryengineV1betaConversation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDiscoveryengineV1betaConversation::fromJsonObject(QJsonObject json) {

    m_end_time_isValid = ::OpenAPI::fromJsonValue(m_end_time, json[QString("endTime")]);
    m_end_time_isSet = !json[QString("endTime")].isNull() && m_end_time_isValid;

    m_messages_isValid = ::OpenAPI::fromJsonValue(m_messages, json[QString("messages")]);
    m_messages_isSet = !json[QString("messages")].isNull() && m_messages_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_start_time_isValid = ::OpenAPI::fromJsonValue(m_start_time, json[QString("startTime")]);
    m_start_time_isSet = !json[QString("startTime")].isNull() && m_start_time_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;

    m_user_pseudo_id_isValid = ::OpenAPI::fromJsonValue(m_user_pseudo_id, json[QString("userPseudoId")]);
    m_user_pseudo_id_isSet = !json[QString("userPseudoId")].isNull() && m_user_pseudo_id_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1betaConversation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDiscoveryengineV1betaConversation::asJsonObject() const {
    QJsonObject obj;
    if (m_end_time_isSet) {
        obj.insert(QString("endTime"), ::OpenAPI::toJsonValue(m_end_time));
    }
    if (m_messages.size() > 0) {
        obj.insert(QString("messages"), ::OpenAPI::toJsonValue(m_messages));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_start_time_isSet) {
        obj.insert(QString("startTime"), ::OpenAPI::toJsonValue(m_start_time));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    if (m_user_pseudo_id_isSet) {
        obj.insert(QString("userPseudoId"), ::OpenAPI::toJsonValue(m_user_pseudo_id));
    }
    return obj;
}

QString OAIGoogleCloudDiscoveryengineV1betaConversation::getEndTime() const {
    return m_end_time;
}
void OAIGoogleCloudDiscoveryengineV1betaConversation::setEndTime(const QString &end_time) {
    m_end_time = end_time;
    m_end_time_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaConversation::is_end_time_Set() const{
    return m_end_time_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaConversation::is_end_time_Valid() const{
    return m_end_time_isValid;
}

QList<OAIGoogleCloudDiscoveryengineV1betaConversationMessage> OAIGoogleCloudDiscoveryengineV1betaConversation::getMessages() const {
    return m_messages;
}
void OAIGoogleCloudDiscoveryengineV1betaConversation::setMessages(const QList<OAIGoogleCloudDiscoveryengineV1betaConversationMessage> &messages) {
    m_messages = messages;
    m_messages_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaConversation::is_messages_Set() const{
    return m_messages_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaConversation::is_messages_Valid() const{
    return m_messages_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1betaConversation::getName() const {
    return m_name;
}
void OAIGoogleCloudDiscoveryengineV1betaConversation::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaConversation::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaConversation::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1betaConversation::getStartTime() const {
    return m_start_time;
}
void OAIGoogleCloudDiscoveryengineV1betaConversation::setStartTime(const QString &start_time) {
    m_start_time = start_time;
    m_start_time_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaConversation::is_start_time_Set() const{
    return m_start_time_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaConversation::is_start_time_Valid() const{
    return m_start_time_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1betaConversation::getState() const {
    return m_state;
}
void OAIGoogleCloudDiscoveryengineV1betaConversation::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaConversation::is_state_Set() const{
    return m_state_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaConversation::is_state_Valid() const{
    return m_state_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1betaConversation::getUserPseudoId() const {
    return m_user_pseudo_id;
}
void OAIGoogleCloudDiscoveryengineV1betaConversation::setUserPseudoId(const QString &user_pseudo_id) {
    m_user_pseudo_id = user_pseudo_id;
    m_user_pseudo_id_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaConversation::is_user_pseudo_id_Set() const{
    return m_user_pseudo_id_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaConversation::is_user_pseudo_id_Valid() const{
    return m_user_pseudo_id_isValid;
}

bool OAIGoogleCloudDiscoveryengineV1betaConversation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_end_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_messages.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_pseudo_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDiscoveryengineV1betaConversation::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
