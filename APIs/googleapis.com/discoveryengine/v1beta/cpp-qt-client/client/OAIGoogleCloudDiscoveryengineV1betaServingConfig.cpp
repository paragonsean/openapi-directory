/**
 * Discovery Engine API
 * Discovery Engine API.
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDiscoveryengineV1betaServingConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDiscoveryengineV1betaServingConfig::OAIGoogleCloudDiscoveryengineV1betaServingConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDiscoveryengineV1betaServingConfig::OAIGoogleCloudDiscoveryengineV1betaServingConfig() {
    this->initializeModel();
}

OAIGoogleCloudDiscoveryengineV1betaServingConfig::~OAIGoogleCloudDiscoveryengineV1betaServingConfig() {}

void OAIGoogleCloudDiscoveryengineV1betaServingConfig::initializeModel() {

    m_boost_control_ids_isSet = false;
    m_boost_control_ids_isValid = false;

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_dissociate_control_ids_isSet = false;
    m_dissociate_control_ids_isValid = false;

    m_diversity_level_isSet = false;
    m_diversity_level_isValid = false;

    m_embedding_config_isSet = false;
    m_embedding_config_isValid = false;

    m_filter_control_ids_isSet = false;
    m_filter_control_ids_isValid = false;

    m_generic_config_isSet = false;
    m_generic_config_isValid = false;

    m_ignore_control_ids_isSet = false;
    m_ignore_control_ids_isValid = false;

    m_media_config_isSet = false;
    m_media_config_isValid = false;

    m_model_id_isSet = false;
    m_model_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_oneway_synonyms_control_ids_isSet = false;
    m_oneway_synonyms_control_ids_isValid = false;

    m_ranking_expression_isSet = false;
    m_ranking_expression_isValid = false;

    m_redirect_control_ids_isSet = false;
    m_redirect_control_ids_isValid = false;

    m_replacement_control_ids_isSet = false;
    m_replacement_control_ids_isValid = false;

    m_solution_type_isSet = false;
    m_solution_type_isValid = false;

    m_synonyms_control_ids_isSet = false;
    m_synonyms_control_ids_isValid = false;

    m_update_time_isSet = false;
    m_update_time_isValid = false;
}

void OAIGoogleCloudDiscoveryengineV1betaServingConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDiscoveryengineV1betaServingConfig::fromJsonObject(QJsonObject json) {

    m_boost_control_ids_isValid = ::OpenAPI::fromJsonValue(m_boost_control_ids, json[QString("boostControlIds")]);
    m_boost_control_ids_isSet = !json[QString("boostControlIds")].isNull() && m_boost_control_ids_isValid;

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_dissociate_control_ids_isValid = ::OpenAPI::fromJsonValue(m_dissociate_control_ids, json[QString("dissociateControlIds")]);
    m_dissociate_control_ids_isSet = !json[QString("dissociateControlIds")].isNull() && m_dissociate_control_ids_isValid;

    m_diversity_level_isValid = ::OpenAPI::fromJsonValue(m_diversity_level, json[QString("diversityLevel")]);
    m_diversity_level_isSet = !json[QString("diversityLevel")].isNull() && m_diversity_level_isValid;

    m_embedding_config_isValid = ::OpenAPI::fromJsonValue(m_embedding_config, json[QString("embeddingConfig")]);
    m_embedding_config_isSet = !json[QString("embeddingConfig")].isNull() && m_embedding_config_isValid;

    m_filter_control_ids_isValid = ::OpenAPI::fromJsonValue(m_filter_control_ids, json[QString("filterControlIds")]);
    m_filter_control_ids_isSet = !json[QString("filterControlIds")].isNull() && m_filter_control_ids_isValid;

    m_generic_config_isValid = ::OpenAPI::fromJsonValue(m_generic_config, json[QString("genericConfig")]);
    m_generic_config_isSet = !json[QString("genericConfig")].isNull() && m_generic_config_isValid;

    m_ignore_control_ids_isValid = ::OpenAPI::fromJsonValue(m_ignore_control_ids, json[QString("ignoreControlIds")]);
    m_ignore_control_ids_isSet = !json[QString("ignoreControlIds")].isNull() && m_ignore_control_ids_isValid;

    m_media_config_isValid = ::OpenAPI::fromJsonValue(m_media_config, json[QString("mediaConfig")]);
    m_media_config_isSet = !json[QString("mediaConfig")].isNull() && m_media_config_isValid;

    m_model_id_isValid = ::OpenAPI::fromJsonValue(m_model_id, json[QString("modelId")]);
    m_model_id_isSet = !json[QString("modelId")].isNull() && m_model_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_oneway_synonyms_control_ids_isValid = ::OpenAPI::fromJsonValue(m_oneway_synonyms_control_ids, json[QString("onewaySynonymsControlIds")]);
    m_oneway_synonyms_control_ids_isSet = !json[QString("onewaySynonymsControlIds")].isNull() && m_oneway_synonyms_control_ids_isValid;

    m_ranking_expression_isValid = ::OpenAPI::fromJsonValue(m_ranking_expression, json[QString("rankingExpression")]);
    m_ranking_expression_isSet = !json[QString("rankingExpression")].isNull() && m_ranking_expression_isValid;

    m_redirect_control_ids_isValid = ::OpenAPI::fromJsonValue(m_redirect_control_ids, json[QString("redirectControlIds")]);
    m_redirect_control_ids_isSet = !json[QString("redirectControlIds")].isNull() && m_redirect_control_ids_isValid;

    m_replacement_control_ids_isValid = ::OpenAPI::fromJsonValue(m_replacement_control_ids, json[QString("replacementControlIds")]);
    m_replacement_control_ids_isSet = !json[QString("replacementControlIds")].isNull() && m_replacement_control_ids_isValid;

    m_solution_type_isValid = ::OpenAPI::fromJsonValue(m_solution_type, json[QString("solutionType")]);
    m_solution_type_isSet = !json[QString("solutionType")].isNull() && m_solution_type_isValid;

    m_synonyms_control_ids_isValid = ::OpenAPI::fromJsonValue(m_synonyms_control_ids, json[QString("synonymsControlIds")]);
    m_synonyms_control_ids_isSet = !json[QString("synonymsControlIds")].isNull() && m_synonyms_control_ids_isValid;

    m_update_time_isValid = ::OpenAPI::fromJsonValue(m_update_time, json[QString("updateTime")]);
    m_update_time_isSet = !json[QString("updateTime")].isNull() && m_update_time_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1betaServingConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDiscoveryengineV1betaServingConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_boost_control_ids.size() > 0) {
        obj.insert(QString("boostControlIds"), ::OpenAPI::toJsonValue(m_boost_control_ids));
    }
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_dissociate_control_ids.size() > 0) {
        obj.insert(QString("dissociateControlIds"), ::OpenAPI::toJsonValue(m_dissociate_control_ids));
    }
    if (m_diversity_level_isSet) {
        obj.insert(QString("diversityLevel"), ::OpenAPI::toJsonValue(m_diversity_level));
    }
    if (m_embedding_config.isSet()) {
        obj.insert(QString("embeddingConfig"), ::OpenAPI::toJsonValue(m_embedding_config));
    }
    if (m_filter_control_ids.size() > 0) {
        obj.insert(QString("filterControlIds"), ::OpenAPI::toJsonValue(m_filter_control_ids));
    }
    if (m_generic_config.isSet()) {
        obj.insert(QString("genericConfig"), ::OpenAPI::toJsonValue(m_generic_config));
    }
    if (m_ignore_control_ids.size() > 0) {
        obj.insert(QString("ignoreControlIds"), ::OpenAPI::toJsonValue(m_ignore_control_ids));
    }
    if (m_media_config.isSet()) {
        obj.insert(QString("mediaConfig"), ::OpenAPI::toJsonValue(m_media_config));
    }
    if (m_model_id_isSet) {
        obj.insert(QString("modelId"), ::OpenAPI::toJsonValue(m_model_id));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_oneway_synonyms_control_ids.size() > 0) {
        obj.insert(QString("onewaySynonymsControlIds"), ::OpenAPI::toJsonValue(m_oneway_synonyms_control_ids));
    }
    if (m_ranking_expression_isSet) {
        obj.insert(QString("rankingExpression"), ::OpenAPI::toJsonValue(m_ranking_expression));
    }
    if (m_redirect_control_ids.size() > 0) {
        obj.insert(QString("redirectControlIds"), ::OpenAPI::toJsonValue(m_redirect_control_ids));
    }
    if (m_replacement_control_ids.size() > 0) {
        obj.insert(QString("replacementControlIds"), ::OpenAPI::toJsonValue(m_replacement_control_ids));
    }
    if (m_solution_type_isSet) {
        obj.insert(QString("solutionType"), ::OpenAPI::toJsonValue(m_solution_type));
    }
    if (m_synonyms_control_ids.size() > 0) {
        obj.insert(QString("synonymsControlIds"), ::OpenAPI::toJsonValue(m_synonyms_control_ids));
    }
    if (m_update_time_isSet) {
        obj.insert(QString("updateTime"), ::OpenAPI::toJsonValue(m_update_time));
    }
    return obj;
}

QList<QString> OAIGoogleCloudDiscoveryengineV1betaServingConfig::getBoostControlIds() const {
    return m_boost_control_ids;
}
void OAIGoogleCloudDiscoveryengineV1betaServingConfig::setBoostControlIds(const QList<QString> &boost_control_ids) {
    m_boost_control_ids = boost_control_ids;
    m_boost_control_ids_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaServingConfig::is_boost_control_ids_Set() const{
    return m_boost_control_ids_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaServingConfig::is_boost_control_ids_Valid() const{
    return m_boost_control_ids_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1betaServingConfig::getCreateTime() const {
    return m_create_time;
}
void OAIGoogleCloudDiscoveryengineV1betaServingConfig::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaServingConfig::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaServingConfig::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1betaServingConfig::getDisplayName() const {
    return m_display_name;
}
void OAIGoogleCloudDiscoveryengineV1betaServingConfig::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaServingConfig::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaServingConfig::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QList<QString> OAIGoogleCloudDiscoveryengineV1betaServingConfig::getDissociateControlIds() const {
    return m_dissociate_control_ids;
}
void OAIGoogleCloudDiscoveryengineV1betaServingConfig::setDissociateControlIds(const QList<QString> &dissociate_control_ids) {
    m_dissociate_control_ids = dissociate_control_ids;
    m_dissociate_control_ids_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaServingConfig::is_dissociate_control_ids_Set() const{
    return m_dissociate_control_ids_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaServingConfig::is_dissociate_control_ids_Valid() const{
    return m_dissociate_control_ids_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1betaServingConfig::getDiversityLevel() const {
    return m_diversity_level;
}
void OAIGoogleCloudDiscoveryengineV1betaServingConfig::setDiversityLevel(const QString &diversity_level) {
    m_diversity_level = diversity_level;
    m_diversity_level_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaServingConfig::is_diversity_level_Set() const{
    return m_diversity_level_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaServingConfig::is_diversity_level_Valid() const{
    return m_diversity_level_isValid;
}

OAIGoogleCloudDiscoveryengineV1betaEmbeddingConfig OAIGoogleCloudDiscoveryengineV1betaServingConfig::getEmbeddingConfig() const {
    return m_embedding_config;
}
void OAIGoogleCloudDiscoveryengineV1betaServingConfig::setEmbeddingConfig(const OAIGoogleCloudDiscoveryengineV1betaEmbeddingConfig &embedding_config) {
    m_embedding_config = embedding_config;
    m_embedding_config_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaServingConfig::is_embedding_config_Set() const{
    return m_embedding_config_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaServingConfig::is_embedding_config_Valid() const{
    return m_embedding_config_isValid;
}

QList<QString> OAIGoogleCloudDiscoveryengineV1betaServingConfig::getFilterControlIds() const {
    return m_filter_control_ids;
}
void OAIGoogleCloudDiscoveryengineV1betaServingConfig::setFilterControlIds(const QList<QString> &filter_control_ids) {
    m_filter_control_ids = filter_control_ids;
    m_filter_control_ids_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaServingConfig::is_filter_control_ids_Set() const{
    return m_filter_control_ids_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaServingConfig::is_filter_control_ids_Valid() const{
    return m_filter_control_ids_isValid;
}

OAIGoogleCloudDiscoveryengineV1betaServingConfigGenericConfig OAIGoogleCloudDiscoveryengineV1betaServingConfig::getGenericConfig() const {
    return m_generic_config;
}
void OAIGoogleCloudDiscoveryengineV1betaServingConfig::setGenericConfig(const OAIGoogleCloudDiscoveryengineV1betaServingConfigGenericConfig &generic_config) {
    m_generic_config = generic_config;
    m_generic_config_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaServingConfig::is_generic_config_Set() const{
    return m_generic_config_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaServingConfig::is_generic_config_Valid() const{
    return m_generic_config_isValid;
}

QList<QString> OAIGoogleCloudDiscoveryengineV1betaServingConfig::getIgnoreControlIds() const {
    return m_ignore_control_ids;
}
void OAIGoogleCloudDiscoveryengineV1betaServingConfig::setIgnoreControlIds(const QList<QString> &ignore_control_ids) {
    m_ignore_control_ids = ignore_control_ids;
    m_ignore_control_ids_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaServingConfig::is_ignore_control_ids_Set() const{
    return m_ignore_control_ids_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaServingConfig::is_ignore_control_ids_Valid() const{
    return m_ignore_control_ids_isValid;
}

OAIGoogleCloudDiscoveryengineV1betaServingConfigMediaConfig OAIGoogleCloudDiscoveryengineV1betaServingConfig::getMediaConfig() const {
    return m_media_config;
}
void OAIGoogleCloudDiscoveryengineV1betaServingConfig::setMediaConfig(const OAIGoogleCloudDiscoveryengineV1betaServingConfigMediaConfig &media_config) {
    m_media_config = media_config;
    m_media_config_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaServingConfig::is_media_config_Set() const{
    return m_media_config_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaServingConfig::is_media_config_Valid() const{
    return m_media_config_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1betaServingConfig::getModelId() const {
    return m_model_id;
}
void OAIGoogleCloudDiscoveryengineV1betaServingConfig::setModelId(const QString &model_id) {
    m_model_id = model_id;
    m_model_id_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaServingConfig::is_model_id_Set() const{
    return m_model_id_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaServingConfig::is_model_id_Valid() const{
    return m_model_id_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1betaServingConfig::getName() const {
    return m_name;
}
void OAIGoogleCloudDiscoveryengineV1betaServingConfig::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaServingConfig::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaServingConfig::is_name_Valid() const{
    return m_name_isValid;
}

QList<QString> OAIGoogleCloudDiscoveryengineV1betaServingConfig::getOnewaySynonymsControlIds() const {
    return m_oneway_synonyms_control_ids;
}
void OAIGoogleCloudDiscoveryengineV1betaServingConfig::setOnewaySynonymsControlIds(const QList<QString> &oneway_synonyms_control_ids) {
    m_oneway_synonyms_control_ids = oneway_synonyms_control_ids;
    m_oneway_synonyms_control_ids_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaServingConfig::is_oneway_synonyms_control_ids_Set() const{
    return m_oneway_synonyms_control_ids_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaServingConfig::is_oneway_synonyms_control_ids_Valid() const{
    return m_oneway_synonyms_control_ids_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1betaServingConfig::getRankingExpression() const {
    return m_ranking_expression;
}
void OAIGoogleCloudDiscoveryengineV1betaServingConfig::setRankingExpression(const QString &ranking_expression) {
    m_ranking_expression = ranking_expression;
    m_ranking_expression_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaServingConfig::is_ranking_expression_Set() const{
    return m_ranking_expression_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaServingConfig::is_ranking_expression_Valid() const{
    return m_ranking_expression_isValid;
}

QList<QString> OAIGoogleCloudDiscoveryengineV1betaServingConfig::getRedirectControlIds() const {
    return m_redirect_control_ids;
}
void OAIGoogleCloudDiscoveryengineV1betaServingConfig::setRedirectControlIds(const QList<QString> &redirect_control_ids) {
    m_redirect_control_ids = redirect_control_ids;
    m_redirect_control_ids_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaServingConfig::is_redirect_control_ids_Set() const{
    return m_redirect_control_ids_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaServingConfig::is_redirect_control_ids_Valid() const{
    return m_redirect_control_ids_isValid;
}

QList<QString> OAIGoogleCloudDiscoveryengineV1betaServingConfig::getReplacementControlIds() const {
    return m_replacement_control_ids;
}
void OAIGoogleCloudDiscoveryengineV1betaServingConfig::setReplacementControlIds(const QList<QString> &replacement_control_ids) {
    m_replacement_control_ids = replacement_control_ids;
    m_replacement_control_ids_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaServingConfig::is_replacement_control_ids_Set() const{
    return m_replacement_control_ids_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaServingConfig::is_replacement_control_ids_Valid() const{
    return m_replacement_control_ids_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1betaServingConfig::getSolutionType() const {
    return m_solution_type;
}
void OAIGoogleCloudDiscoveryengineV1betaServingConfig::setSolutionType(const QString &solution_type) {
    m_solution_type = solution_type;
    m_solution_type_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaServingConfig::is_solution_type_Set() const{
    return m_solution_type_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaServingConfig::is_solution_type_Valid() const{
    return m_solution_type_isValid;
}

QList<QString> OAIGoogleCloudDiscoveryengineV1betaServingConfig::getSynonymsControlIds() const {
    return m_synonyms_control_ids;
}
void OAIGoogleCloudDiscoveryengineV1betaServingConfig::setSynonymsControlIds(const QList<QString> &synonyms_control_ids) {
    m_synonyms_control_ids = synonyms_control_ids;
    m_synonyms_control_ids_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaServingConfig::is_synonyms_control_ids_Set() const{
    return m_synonyms_control_ids_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaServingConfig::is_synonyms_control_ids_Valid() const{
    return m_synonyms_control_ids_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1betaServingConfig::getUpdateTime() const {
    return m_update_time;
}
void OAIGoogleCloudDiscoveryengineV1betaServingConfig::setUpdateTime(const QString &update_time) {
    m_update_time = update_time;
    m_update_time_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaServingConfig::is_update_time_Set() const{
    return m_update_time_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaServingConfig::is_update_time_Valid() const{
    return m_update_time_isValid;
}

bool OAIGoogleCloudDiscoveryengineV1betaServingConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_boost_control_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dissociate_control_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_diversity_level_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_embedding_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_filter_control_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_generic_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_ignore_control_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_media_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_model_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_oneway_synonyms_control_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_ranking_expression_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_redirect_control_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_replacement_control_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_solution_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_synonyms_control_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDiscoveryengineV1betaServingConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
