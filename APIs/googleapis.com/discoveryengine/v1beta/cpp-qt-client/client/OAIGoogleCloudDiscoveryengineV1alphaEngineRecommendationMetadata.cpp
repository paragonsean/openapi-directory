/**
 * Discovery Engine API
 * Discovery Engine API.
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDiscoveryengineV1alphaEngineRecommendationMetadata.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDiscoveryengineV1alphaEngineRecommendationMetadata::OAIGoogleCloudDiscoveryengineV1alphaEngineRecommendationMetadata(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDiscoveryengineV1alphaEngineRecommendationMetadata::OAIGoogleCloudDiscoveryengineV1alphaEngineRecommendationMetadata() {
    this->initializeModel();
}

OAIGoogleCloudDiscoveryengineV1alphaEngineRecommendationMetadata::~OAIGoogleCloudDiscoveryengineV1alphaEngineRecommendationMetadata() {}

void OAIGoogleCloudDiscoveryengineV1alphaEngineRecommendationMetadata::initializeModel() {

    m_data_state_isSet = false;
    m_data_state_isValid = false;

    m_last_tune_time_isSet = false;
    m_last_tune_time_isValid = false;

    m_serving_state_isSet = false;
    m_serving_state_isValid = false;

    m_tuning_operation_isSet = false;
    m_tuning_operation_isValid = false;
}

void OAIGoogleCloudDiscoveryengineV1alphaEngineRecommendationMetadata::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDiscoveryengineV1alphaEngineRecommendationMetadata::fromJsonObject(QJsonObject json) {

    m_data_state_isValid = ::OpenAPI::fromJsonValue(m_data_state, json[QString("dataState")]);
    m_data_state_isSet = !json[QString("dataState")].isNull() && m_data_state_isValid;

    m_last_tune_time_isValid = ::OpenAPI::fromJsonValue(m_last_tune_time, json[QString("lastTuneTime")]);
    m_last_tune_time_isSet = !json[QString("lastTuneTime")].isNull() && m_last_tune_time_isValid;

    m_serving_state_isValid = ::OpenAPI::fromJsonValue(m_serving_state, json[QString("servingState")]);
    m_serving_state_isSet = !json[QString("servingState")].isNull() && m_serving_state_isValid;

    m_tuning_operation_isValid = ::OpenAPI::fromJsonValue(m_tuning_operation, json[QString("tuningOperation")]);
    m_tuning_operation_isSet = !json[QString("tuningOperation")].isNull() && m_tuning_operation_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1alphaEngineRecommendationMetadata::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDiscoveryengineV1alphaEngineRecommendationMetadata::asJsonObject() const {
    QJsonObject obj;
    if (m_data_state_isSet) {
        obj.insert(QString("dataState"), ::OpenAPI::toJsonValue(m_data_state));
    }
    if (m_last_tune_time_isSet) {
        obj.insert(QString("lastTuneTime"), ::OpenAPI::toJsonValue(m_last_tune_time));
    }
    if (m_serving_state_isSet) {
        obj.insert(QString("servingState"), ::OpenAPI::toJsonValue(m_serving_state));
    }
    if (m_tuning_operation_isSet) {
        obj.insert(QString("tuningOperation"), ::OpenAPI::toJsonValue(m_tuning_operation));
    }
    return obj;
}

QString OAIGoogleCloudDiscoveryengineV1alphaEngineRecommendationMetadata::getDataState() const {
    return m_data_state;
}
void OAIGoogleCloudDiscoveryengineV1alphaEngineRecommendationMetadata::setDataState(const QString &data_state) {
    m_data_state = data_state;
    m_data_state_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaEngineRecommendationMetadata::is_data_state_Set() const{
    return m_data_state_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaEngineRecommendationMetadata::is_data_state_Valid() const{
    return m_data_state_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1alphaEngineRecommendationMetadata::getLastTuneTime() const {
    return m_last_tune_time;
}
void OAIGoogleCloudDiscoveryengineV1alphaEngineRecommendationMetadata::setLastTuneTime(const QString &last_tune_time) {
    m_last_tune_time = last_tune_time;
    m_last_tune_time_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaEngineRecommendationMetadata::is_last_tune_time_Set() const{
    return m_last_tune_time_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaEngineRecommendationMetadata::is_last_tune_time_Valid() const{
    return m_last_tune_time_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1alphaEngineRecommendationMetadata::getServingState() const {
    return m_serving_state;
}
void OAIGoogleCloudDiscoveryengineV1alphaEngineRecommendationMetadata::setServingState(const QString &serving_state) {
    m_serving_state = serving_state;
    m_serving_state_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaEngineRecommendationMetadata::is_serving_state_Set() const{
    return m_serving_state_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaEngineRecommendationMetadata::is_serving_state_Valid() const{
    return m_serving_state_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1alphaEngineRecommendationMetadata::getTuningOperation() const {
    return m_tuning_operation;
}
void OAIGoogleCloudDiscoveryengineV1alphaEngineRecommendationMetadata::setTuningOperation(const QString &tuning_operation) {
    m_tuning_operation = tuning_operation;
    m_tuning_operation_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaEngineRecommendationMetadata::is_tuning_operation_Set() const{
    return m_tuning_operation_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaEngineRecommendationMetadata::is_tuning_operation_Valid() const{
    return m_tuning_operation_isValid;
}

bool OAIGoogleCloudDiscoveryengineV1alphaEngineRecommendationMetadata::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_data_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_tune_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_serving_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tuning_operation_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDiscoveryengineV1alphaEngineRecommendationMetadata::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
