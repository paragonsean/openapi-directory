/**
 * Discovery Engine API
 * Discovery Engine API.
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDiscoveryengineV1betaSearchRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDiscoveryengineV1betaSearchRequest::OAIGoogleCloudDiscoveryengineV1betaSearchRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDiscoveryengineV1betaSearchRequest::OAIGoogleCloudDiscoveryengineV1betaSearchRequest() {
    this->initializeModel();
}

OAIGoogleCloudDiscoveryengineV1betaSearchRequest::~OAIGoogleCloudDiscoveryengineV1betaSearchRequest() {}

void OAIGoogleCloudDiscoveryengineV1betaSearchRequest::initializeModel() {

    m_boost_spec_isSet = false;
    m_boost_spec_isValid = false;

    m_branch_isSet = false;
    m_branch_isValid = false;

    m_canonical_filter_isSet = false;
    m_canonical_filter_isValid = false;

    m_content_search_spec_isSet = false;
    m_content_search_spec_isValid = false;

    m_embedding_spec_isSet = false;
    m_embedding_spec_isValid = false;

    m_facet_specs_isSet = false;
    m_facet_specs_isValid = false;

    m_filter_isSet = false;
    m_filter_isValid = false;

    m_image_query_isSet = false;
    m_image_query_isValid = false;

    m_offset_isSet = false;
    m_offset_isValid = false;

    m_order_by_isSet = false;
    m_order_by_isValid = false;

    m_page_size_isSet = false;
    m_page_size_isValid = false;

    m_page_token_isSet = false;
    m_page_token_isValid = false;

    m_params_isSet = false;
    m_params_isValid = false;

    m_query_isSet = false;
    m_query_isValid = false;

    m_query_expansion_spec_isSet = false;
    m_query_expansion_spec_isValid = false;

    m_ranking_expression_isSet = false;
    m_ranking_expression_isValid = false;

    m_safe_search_isSet = false;
    m_safe_search_isValid = false;

    m_spell_correction_spec_isSet = false;
    m_spell_correction_spec_isValid = false;

    m_user_info_isSet = false;
    m_user_info_isValid = false;

    m_user_labels_isSet = false;
    m_user_labels_isValid = false;

    m_user_pseudo_id_isSet = false;
    m_user_pseudo_id_isValid = false;
}

void OAIGoogleCloudDiscoveryengineV1betaSearchRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDiscoveryengineV1betaSearchRequest::fromJsonObject(QJsonObject json) {

    m_boost_spec_isValid = ::OpenAPI::fromJsonValue(m_boost_spec, json[QString("boostSpec")]);
    m_boost_spec_isSet = !json[QString("boostSpec")].isNull() && m_boost_spec_isValid;

    m_branch_isValid = ::OpenAPI::fromJsonValue(m_branch, json[QString("branch")]);
    m_branch_isSet = !json[QString("branch")].isNull() && m_branch_isValid;

    m_canonical_filter_isValid = ::OpenAPI::fromJsonValue(m_canonical_filter, json[QString("canonicalFilter")]);
    m_canonical_filter_isSet = !json[QString("canonicalFilter")].isNull() && m_canonical_filter_isValid;

    m_content_search_spec_isValid = ::OpenAPI::fromJsonValue(m_content_search_spec, json[QString("contentSearchSpec")]);
    m_content_search_spec_isSet = !json[QString("contentSearchSpec")].isNull() && m_content_search_spec_isValid;

    m_embedding_spec_isValid = ::OpenAPI::fromJsonValue(m_embedding_spec, json[QString("embeddingSpec")]);
    m_embedding_spec_isSet = !json[QString("embeddingSpec")].isNull() && m_embedding_spec_isValid;

    m_facet_specs_isValid = ::OpenAPI::fromJsonValue(m_facet_specs, json[QString("facetSpecs")]);
    m_facet_specs_isSet = !json[QString("facetSpecs")].isNull() && m_facet_specs_isValid;

    m_filter_isValid = ::OpenAPI::fromJsonValue(m_filter, json[QString("filter")]);
    m_filter_isSet = !json[QString("filter")].isNull() && m_filter_isValid;

    m_image_query_isValid = ::OpenAPI::fromJsonValue(m_image_query, json[QString("imageQuery")]);
    m_image_query_isSet = !json[QString("imageQuery")].isNull() && m_image_query_isValid;

    m_offset_isValid = ::OpenAPI::fromJsonValue(m_offset, json[QString("offset")]);
    m_offset_isSet = !json[QString("offset")].isNull() && m_offset_isValid;

    m_order_by_isValid = ::OpenAPI::fromJsonValue(m_order_by, json[QString("orderBy")]);
    m_order_by_isSet = !json[QString("orderBy")].isNull() && m_order_by_isValid;

    m_page_size_isValid = ::OpenAPI::fromJsonValue(m_page_size, json[QString("pageSize")]);
    m_page_size_isSet = !json[QString("pageSize")].isNull() && m_page_size_isValid;

    m_page_token_isValid = ::OpenAPI::fromJsonValue(m_page_token, json[QString("pageToken")]);
    m_page_token_isSet = !json[QString("pageToken")].isNull() && m_page_token_isValid;

    m_params_isValid = ::OpenAPI::fromJsonValue(m_params, json[QString("params")]);
    m_params_isSet = !json[QString("params")].isNull() && m_params_isValid;

    m_query_isValid = ::OpenAPI::fromJsonValue(m_query, json[QString("query")]);
    m_query_isSet = !json[QString("query")].isNull() && m_query_isValid;

    m_query_expansion_spec_isValid = ::OpenAPI::fromJsonValue(m_query_expansion_spec, json[QString("queryExpansionSpec")]);
    m_query_expansion_spec_isSet = !json[QString("queryExpansionSpec")].isNull() && m_query_expansion_spec_isValid;

    m_ranking_expression_isValid = ::OpenAPI::fromJsonValue(m_ranking_expression, json[QString("rankingExpression")]);
    m_ranking_expression_isSet = !json[QString("rankingExpression")].isNull() && m_ranking_expression_isValid;

    m_safe_search_isValid = ::OpenAPI::fromJsonValue(m_safe_search, json[QString("safeSearch")]);
    m_safe_search_isSet = !json[QString("safeSearch")].isNull() && m_safe_search_isValid;

    m_spell_correction_spec_isValid = ::OpenAPI::fromJsonValue(m_spell_correction_spec, json[QString("spellCorrectionSpec")]);
    m_spell_correction_spec_isSet = !json[QString("spellCorrectionSpec")].isNull() && m_spell_correction_spec_isValid;

    m_user_info_isValid = ::OpenAPI::fromJsonValue(m_user_info, json[QString("userInfo")]);
    m_user_info_isSet = !json[QString("userInfo")].isNull() && m_user_info_isValid;

    m_user_labels_isValid = ::OpenAPI::fromJsonValue(m_user_labels, json[QString("userLabels")]);
    m_user_labels_isSet = !json[QString("userLabels")].isNull() && m_user_labels_isValid;

    m_user_pseudo_id_isValid = ::OpenAPI::fromJsonValue(m_user_pseudo_id, json[QString("userPseudoId")]);
    m_user_pseudo_id_isSet = !json[QString("userPseudoId")].isNull() && m_user_pseudo_id_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1betaSearchRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDiscoveryengineV1betaSearchRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_boost_spec.isSet()) {
        obj.insert(QString("boostSpec"), ::OpenAPI::toJsonValue(m_boost_spec));
    }
    if (m_branch_isSet) {
        obj.insert(QString("branch"), ::OpenAPI::toJsonValue(m_branch));
    }
    if (m_canonical_filter_isSet) {
        obj.insert(QString("canonicalFilter"), ::OpenAPI::toJsonValue(m_canonical_filter));
    }
    if (m_content_search_spec.isSet()) {
        obj.insert(QString("contentSearchSpec"), ::OpenAPI::toJsonValue(m_content_search_spec));
    }
    if (m_embedding_spec.isSet()) {
        obj.insert(QString("embeddingSpec"), ::OpenAPI::toJsonValue(m_embedding_spec));
    }
    if (m_facet_specs.size() > 0) {
        obj.insert(QString("facetSpecs"), ::OpenAPI::toJsonValue(m_facet_specs));
    }
    if (m_filter_isSet) {
        obj.insert(QString("filter"), ::OpenAPI::toJsonValue(m_filter));
    }
    if (m_image_query.isSet()) {
        obj.insert(QString("imageQuery"), ::OpenAPI::toJsonValue(m_image_query));
    }
    if (m_offset_isSet) {
        obj.insert(QString("offset"), ::OpenAPI::toJsonValue(m_offset));
    }
    if (m_order_by_isSet) {
        obj.insert(QString("orderBy"), ::OpenAPI::toJsonValue(m_order_by));
    }
    if (m_page_size_isSet) {
        obj.insert(QString("pageSize"), ::OpenAPI::toJsonValue(m_page_size));
    }
    if (m_page_token_isSet) {
        obj.insert(QString("pageToken"), ::OpenAPI::toJsonValue(m_page_token));
    }
    if (m_params.size() > 0) {
        obj.insert(QString("params"), ::OpenAPI::toJsonValue(m_params));
    }
    if (m_query_isSet) {
        obj.insert(QString("query"), ::OpenAPI::toJsonValue(m_query));
    }
    if (m_query_expansion_spec.isSet()) {
        obj.insert(QString("queryExpansionSpec"), ::OpenAPI::toJsonValue(m_query_expansion_spec));
    }
    if (m_ranking_expression_isSet) {
        obj.insert(QString("rankingExpression"), ::OpenAPI::toJsonValue(m_ranking_expression));
    }
    if (m_safe_search_isSet) {
        obj.insert(QString("safeSearch"), ::OpenAPI::toJsonValue(m_safe_search));
    }
    if (m_spell_correction_spec.isSet()) {
        obj.insert(QString("spellCorrectionSpec"), ::OpenAPI::toJsonValue(m_spell_correction_spec));
    }
    if (m_user_info.isSet()) {
        obj.insert(QString("userInfo"), ::OpenAPI::toJsonValue(m_user_info));
    }
    if (m_user_labels.size() > 0) {
        obj.insert(QString("userLabels"), ::OpenAPI::toJsonValue(m_user_labels));
    }
    if (m_user_pseudo_id_isSet) {
        obj.insert(QString("userPseudoId"), ::OpenAPI::toJsonValue(m_user_pseudo_id));
    }
    return obj;
}

OAIGoogleCloudDiscoveryengineV1betaSearchRequestBoostSpec OAIGoogleCloudDiscoveryengineV1betaSearchRequest::getBoostSpec() const {
    return m_boost_spec;
}
void OAIGoogleCloudDiscoveryengineV1betaSearchRequest::setBoostSpec(const OAIGoogleCloudDiscoveryengineV1betaSearchRequestBoostSpec &boost_spec) {
    m_boost_spec = boost_spec;
    m_boost_spec_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaSearchRequest::is_boost_spec_Set() const{
    return m_boost_spec_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaSearchRequest::is_boost_spec_Valid() const{
    return m_boost_spec_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1betaSearchRequest::getBranch() const {
    return m_branch;
}
void OAIGoogleCloudDiscoveryengineV1betaSearchRequest::setBranch(const QString &branch) {
    m_branch = branch;
    m_branch_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaSearchRequest::is_branch_Set() const{
    return m_branch_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaSearchRequest::is_branch_Valid() const{
    return m_branch_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1betaSearchRequest::getCanonicalFilter() const {
    return m_canonical_filter;
}
void OAIGoogleCloudDiscoveryengineV1betaSearchRequest::setCanonicalFilter(const QString &canonical_filter) {
    m_canonical_filter = canonical_filter;
    m_canonical_filter_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaSearchRequest::is_canonical_filter_Set() const{
    return m_canonical_filter_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaSearchRequest::is_canonical_filter_Valid() const{
    return m_canonical_filter_isValid;
}

OAIGoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpec OAIGoogleCloudDiscoveryengineV1betaSearchRequest::getContentSearchSpec() const {
    return m_content_search_spec;
}
void OAIGoogleCloudDiscoveryengineV1betaSearchRequest::setContentSearchSpec(const OAIGoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpec &content_search_spec) {
    m_content_search_spec = content_search_spec;
    m_content_search_spec_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaSearchRequest::is_content_search_spec_Set() const{
    return m_content_search_spec_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaSearchRequest::is_content_search_spec_Valid() const{
    return m_content_search_spec_isValid;
}

OAIGoogleCloudDiscoveryengineV1betaSearchRequestEmbeddingSpec OAIGoogleCloudDiscoveryengineV1betaSearchRequest::getEmbeddingSpec() const {
    return m_embedding_spec;
}
void OAIGoogleCloudDiscoveryengineV1betaSearchRequest::setEmbeddingSpec(const OAIGoogleCloudDiscoveryengineV1betaSearchRequestEmbeddingSpec &embedding_spec) {
    m_embedding_spec = embedding_spec;
    m_embedding_spec_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaSearchRequest::is_embedding_spec_Set() const{
    return m_embedding_spec_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaSearchRequest::is_embedding_spec_Valid() const{
    return m_embedding_spec_isValid;
}

QList<OAIGoogleCloudDiscoveryengineV1betaSearchRequestFacetSpec> OAIGoogleCloudDiscoveryengineV1betaSearchRequest::getFacetSpecs() const {
    return m_facet_specs;
}
void OAIGoogleCloudDiscoveryengineV1betaSearchRequest::setFacetSpecs(const QList<OAIGoogleCloudDiscoveryengineV1betaSearchRequestFacetSpec> &facet_specs) {
    m_facet_specs = facet_specs;
    m_facet_specs_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaSearchRequest::is_facet_specs_Set() const{
    return m_facet_specs_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaSearchRequest::is_facet_specs_Valid() const{
    return m_facet_specs_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1betaSearchRequest::getFilter() const {
    return m_filter;
}
void OAIGoogleCloudDiscoveryengineV1betaSearchRequest::setFilter(const QString &filter) {
    m_filter = filter;
    m_filter_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaSearchRequest::is_filter_Set() const{
    return m_filter_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaSearchRequest::is_filter_Valid() const{
    return m_filter_isValid;
}

OAIGoogleCloudDiscoveryengineV1betaSearchRequestImageQuery OAIGoogleCloudDiscoveryengineV1betaSearchRequest::getImageQuery() const {
    return m_image_query;
}
void OAIGoogleCloudDiscoveryengineV1betaSearchRequest::setImageQuery(const OAIGoogleCloudDiscoveryengineV1betaSearchRequestImageQuery &image_query) {
    m_image_query = image_query;
    m_image_query_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaSearchRequest::is_image_query_Set() const{
    return m_image_query_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaSearchRequest::is_image_query_Valid() const{
    return m_image_query_isValid;
}

qint32 OAIGoogleCloudDiscoveryengineV1betaSearchRequest::getOffset() const {
    return m_offset;
}
void OAIGoogleCloudDiscoveryengineV1betaSearchRequest::setOffset(const qint32 &offset) {
    m_offset = offset;
    m_offset_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaSearchRequest::is_offset_Set() const{
    return m_offset_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaSearchRequest::is_offset_Valid() const{
    return m_offset_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1betaSearchRequest::getOrderBy() const {
    return m_order_by;
}
void OAIGoogleCloudDiscoveryengineV1betaSearchRequest::setOrderBy(const QString &order_by) {
    m_order_by = order_by;
    m_order_by_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaSearchRequest::is_order_by_Set() const{
    return m_order_by_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaSearchRequest::is_order_by_Valid() const{
    return m_order_by_isValid;
}

qint32 OAIGoogleCloudDiscoveryengineV1betaSearchRequest::getPageSize() const {
    return m_page_size;
}
void OAIGoogleCloudDiscoveryengineV1betaSearchRequest::setPageSize(const qint32 &page_size) {
    m_page_size = page_size;
    m_page_size_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaSearchRequest::is_page_size_Set() const{
    return m_page_size_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaSearchRequest::is_page_size_Valid() const{
    return m_page_size_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1betaSearchRequest::getPageToken() const {
    return m_page_token;
}
void OAIGoogleCloudDiscoveryengineV1betaSearchRequest::setPageToken(const QString &page_token) {
    m_page_token = page_token;
    m_page_token_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaSearchRequest::is_page_token_Set() const{
    return m_page_token_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaSearchRequest::is_page_token_Valid() const{
    return m_page_token_isValid;
}

QMap<QString, QJsonValue> OAIGoogleCloudDiscoveryengineV1betaSearchRequest::getParams() const {
    return m_params;
}
void OAIGoogleCloudDiscoveryengineV1betaSearchRequest::setParams(const QMap<QString, QJsonValue> &params) {
    m_params = params;
    m_params_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaSearchRequest::is_params_Set() const{
    return m_params_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaSearchRequest::is_params_Valid() const{
    return m_params_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1betaSearchRequest::getQuery() const {
    return m_query;
}
void OAIGoogleCloudDiscoveryengineV1betaSearchRequest::setQuery(const QString &query) {
    m_query = query;
    m_query_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaSearchRequest::is_query_Set() const{
    return m_query_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaSearchRequest::is_query_Valid() const{
    return m_query_isValid;
}

OAIGoogleCloudDiscoveryengineV1betaSearchRequestQueryExpansionSpec OAIGoogleCloudDiscoveryengineV1betaSearchRequest::getQueryExpansionSpec() const {
    return m_query_expansion_spec;
}
void OAIGoogleCloudDiscoveryengineV1betaSearchRequest::setQueryExpansionSpec(const OAIGoogleCloudDiscoveryengineV1betaSearchRequestQueryExpansionSpec &query_expansion_spec) {
    m_query_expansion_spec = query_expansion_spec;
    m_query_expansion_spec_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaSearchRequest::is_query_expansion_spec_Set() const{
    return m_query_expansion_spec_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaSearchRequest::is_query_expansion_spec_Valid() const{
    return m_query_expansion_spec_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1betaSearchRequest::getRankingExpression() const {
    return m_ranking_expression;
}
void OAIGoogleCloudDiscoveryengineV1betaSearchRequest::setRankingExpression(const QString &ranking_expression) {
    m_ranking_expression = ranking_expression;
    m_ranking_expression_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaSearchRequest::is_ranking_expression_Set() const{
    return m_ranking_expression_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaSearchRequest::is_ranking_expression_Valid() const{
    return m_ranking_expression_isValid;
}

bool OAIGoogleCloudDiscoveryengineV1betaSearchRequest::isSafeSearch() const {
    return m_safe_search;
}
void OAIGoogleCloudDiscoveryengineV1betaSearchRequest::setSafeSearch(const bool &safe_search) {
    m_safe_search = safe_search;
    m_safe_search_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaSearchRequest::is_safe_search_Set() const{
    return m_safe_search_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaSearchRequest::is_safe_search_Valid() const{
    return m_safe_search_isValid;
}

OAIGoogleCloudDiscoveryengineV1betaSearchRequestSpellCorrectionSpec OAIGoogleCloudDiscoveryengineV1betaSearchRequest::getSpellCorrectionSpec() const {
    return m_spell_correction_spec;
}
void OAIGoogleCloudDiscoveryengineV1betaSearchRequest::setSpellCorrectionSpec(const OAIGoogleCloudDiscoveryengineV1betaSearchRequestSpellCorrectionSpec &spell_correction_spec) {
    m_spell_correction_spec = spell_correction_spec;
    m_spell_correction_spec_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaSearchRequest::is_spell_correction_spec_Set() const{
    return m_spell_correction_spec_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaSearchRequest::is_spell_correction_spec_Valid() const{
    return m_spell_correction_spec_isValid;
}

OAIGoogleCloudDiscoveryengineV1betaUserInfo OAIGoogleCloudDiscoveryengineV1betaSearchRequest::getUserInfo() const {
    return m_user_info;
}
void OAIGoogleCloudDiscoveryengineV1betaSearchRequest::setUserInfo(const OAIGoogleCloudDiscoveryengineV1betaUserInfo &user_info) {
    m_user_info = user_info;
    m_user_info_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaSearchRequest::is_user_info_Set() const{
    return m_user_info_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaSearchRequest::is_user_info_Valid() const{
    return m_user_info_isValid;
}

QMap<QString, QString> OAIGoogleCloudDiscoveryengineV1betaSearchRequest::getUserLabels() const {
    return m_user_labels;
}
void OAIGoogleCloudDiscoveryengineV1betaSearchRequest::setUserLabels(const QMap<QString, QString> &user_labels) {
    m_user_labels = user_labels;
    m_user_labels_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaSearchRequest::is_user_labels_Set() const{
    return m_user_labels_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaSearchRequest::is_user_labels_Valid() const{
    return m_user_labels_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1betaSearchRequest::getUserPseudoId() const {
    return m_user_pseudo_id;
}
void OAIGoogleCloudDiscoveryengineV1betaSearchRequest::setUserPseudoId(const QString &user_pseudo_id) {
    m_user_pseudo_id = user_pseudo_id;
    m_user_pseudo_id_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaSearchRequest::is_user_pseudo_id_Set() const{
    return m_user_pseudo_id_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaSearchRequest::is_user_pseudo_id_Valid() const{
    return m_user_pseudo_id_isValid;
}

bool OAIGoogleCloudDiscoveryengineV1betaSearchRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_boost_spec.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_branch_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_canonical_filter_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_content_search_spec.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_embedding_spec.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_facet_specs.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_filter_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_image_query.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_offset_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_by_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_page_size_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_page_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_params.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_query_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_query_expansion_spec.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_ranking_expression_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_safe_search_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_spell_correction_spec.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_labels.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_pseudo_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDiscoveryengineV1betaSearchRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
