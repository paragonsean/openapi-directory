/**
 * Discovery Engine API
 * Discovery Engine API.
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDiscoveryengineV1betaCompleteQueryResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDiscoveryengineV1betaCompleteQueryResponse::OAIGoogleCloudDiscoveryengineV1betaCompleteQueryResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDiscoveryengineV1betaCompleteQueryResponse::OAIGoogleCloudDiscoveryengineV1betaCompleteQueryResponse() {
    this->initializeModel();
}

OAIGoogleCloudDiscoveryengineV1betaCompleteQueryResponse::~OAIGoogleCloudDiscoveryengineV1betaCompleteQueryResponse() {}

void OAIGoogleCloudDiscoveryengineV1betaCompleteQueryResponse::initializeModel() {

    m_query_suggestions_isSet = false;
    m_query_suggestions_isValid = false;

    m_tail_match_triggered_isSet = false;
    m_tail_match_triggered_isValid = false;
}

void OAIGoogleCloudDiscoveryengineV1betaCompleteQueryResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDiscoveryengineV1betaCompleteQueryResponse::fromJsonObject(QJsonObject json) {

    m_query_suggestions_isValid = ::OpenAPI::fromJsonValue(m_query_suggestions, json[QString("querySuggestions")]);
    m_query_suggestions_isSet = !json[QString("querySuggestions")].isNull() && m_query_suggestions_isValid;

    m_tail_match_triggered_isValid = ::OpenAPI::fromJsonValue(m_tail_match_triggered, json[QString("tailMatchTriggered")]);
    m_tail_match_triggered_isSet = !json[QString("tailMatchTriggered")].isNull() && m_tail_match_triggered_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1betaCompleteQueryResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDiscoveryengineV1betaCompleteQueryResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_query_suggestions.size() > 0) {
        obj.insert(QString("querySuggestions"), ::OpenAPI::toJsonValue(m_query_suggestions));
    }
    if (m_tail_match_triggered_isSet) {
        obj.insert(QString("tailMatchTriggered"), ::OpenAPI::toJsonValue(m_tail_match_triggered));
    }
    return obj;
}

QList<OAIGoogleCloudDiscoveryengineV1betaCompleteQueryResponseQuerySuggestion> OAIGoogleCloudDiscoveryengineV1betaCompleteQueryResponse::getQuerySuggestions() const {
    return m_query_suggestions;
}
void OAIGoogleCloudDiscoveryengineV1betaCompleteQueryResponse::setQuerySuggestions(const QList<OAIGoogleCloudDiscoveryengineV1betaCompleteQueryResponseQuerySuggestion> &query_suggestions) {
    m_query_suggestions = query_suggestions;
    m_query_suggestions_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaCompleteQueryResponse::is_query_suggestions_Set() const{
    return m_query_suggestions_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaCompleteQueryResponse::is_query_suggestions_Valid() const{
    return m_query_suggestions_isValid;
}

bool OAIGoogleCloudDiscoveryengineV1betaCompleteQueryResponse::isTailMatchTriggered() const {
    return m_tail_match_triggered;
}
void OAIGoogleCloudDiscoveryengineV1betaCompleteQueryResponse::setTailMatchTriggered(const bool &tail_match_triggered) {
    m_tail_match_triggered = tail_match_triggered;
    m_tail_match_triggered_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaCompleteQueryResponse::is_tail_match_triggered_Set() const{
    return m_tail_match_triggered_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaCompleteQueryResponse::is_tail_match_triggered_Valid() const{
    return m_tail_match_triggered_isValid;
}

bool OAIGoogleCloudDiscoveryengineV1betaCompleteQueryResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_query_suggestions.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_tail_match_triggered_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDiscoveryengineV1betaCompleteQueryResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
