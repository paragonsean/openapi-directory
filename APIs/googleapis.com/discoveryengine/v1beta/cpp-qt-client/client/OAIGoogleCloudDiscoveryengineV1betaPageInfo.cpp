/**
 * Discovery Engine API
 * Discovery Engine API.
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDiscoveryengineV1betaPageInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDiscoveryengineV1betaPageInfo::OAIGoogleCloudDiscoveryengineV1betaPageInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDiscoveryengineV1betaPageInfo::OAIGoogleCloudDiscoveryengineV1betaPageInfo() {
    this->initializeModel();
}

OAIGoogleCloudDiscoveryengineV1betaPageInfo::~OAIGoogleCloudDiscoveryengineV1betaPageInfo() {}

void OAIGoogleCloudDiscoveryengineV1betaPageInfo::initializeModel() {

    m_page_category_isSet = false;
    m_page_category_isValid = false;

    m_pageview_id_isSet = false;
    m_pageview_id_isValid = false;

    m_referrer_uri_isSet = false;
    m_referrer_uri_isValid = false;

    m_uri_isSet = false;
    m_uri_isValid = false;
}

void OAIGoogleCloudDiscoveryengineV1betaPageInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDiscoveryengineV1betaPageInfo::fromJsonObject(QJsonObject json) {

    m_page_category_isValid = ::OpenAPI::fromJsonValue(m_page_category, json[QString("pageCategory")]);
    m_page_category_isSet = !json[QString("pageCategory")].isNull() && m_page_category_isValid;

    m_pageview_id_isValid = ::OpenAPI::fromJsonValue(m_pageview_id, json[QString("pageviewId")]);
    m_pageview_id_isSet = !json[QString("pageviewId")].isNull() && m_pageview_id_isValid;

    m_referrer_uri_isValid = ::OpenAPI::fromJsonValue(m_referrer_uri, json[QString("referrerUri")]);
    m_referrer_uri_isSet = !json[QString("referrerUri")].isNull() && m_referrer_uri_isValid;

    m_uri_isValid = ::OpenAPI::fromJsonValue(m_uri, json[QString("uri")]);
    m_uri_isSet = !json[QString("uri")].isNull() && m_uri_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1betaPageInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDiscoveryengineV1betaPageInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_page_category_isSet) {
        obj.insert(QString("pageCategory"), ::OpenAPI::toJsonValue(m_page_category));
    }
    if (m_pageview_id_isSet) {
        obj.insert(QString("pageviewId"), ::OpenAPI::toJsonValue(m_pageview_id));
    }
    if (m_referrer_uri_isSet) {
        obj.insert(QString("referrerUri"), ::OpenAPI::toJsonValue(m_referrer_uri));
    }
    if (m_uri_isSet) {
        obj.insert(QString("uri"), ::OpenAPI::toJsonValue(m_uri));
    }
    return obj;
}

QString OAIGoogleCloudDiscoveryengineV1betaPageInfo::getPageCategory() const {
    return m_page_category;
}
void OAIGoogleCloudDiscoveryengineV1betaPageInfo::setPageCategory(const QString &page_category) {
    m_page_category = page_category;
    m_page_category_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaPageInfo::is_page_category_Set() const{
    return m_page_category_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaPageInfo::is_page_category_Valid() const{
    return m_page_category_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1betaPageInfo::getPageviewId() const {
    return m_pageview_id;
}
void OAIGoogleCloudDiscoveryengineV1betaPageInfo::setPageviewId(const QString &pageview_id) {
    m_pageview_id = pageview_id;
    m_pageview_id_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaPageInfo::is_pageview_id_Set() const{
    return m_pageview_id_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaPageInfo::is_pageview_id_Valid() const{
    return m_pageview_id_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1betaPageInfo::getReferrerUri() const {
    return m_referrer_uri;
}
void OAIGoogleCloudDiscoveryengineV1betaPageInfo::setReferrerUri(const QString &referrer_uri) {
    m_referrer_uri = referrer_uri;
    m_referrer_uri_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaPageInfo::is_referrer_uri_Set() const{
    return m_referrer_uri_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaPageInfo::is_referrer_uri_Valid() const{
    return m_referrer_uri_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1betaPageInfo::getUri() const {
    return m_uri;
}
void OAIGoogleCloudDiscoveryengineV1betaPageInfo::setUri(const QString &uri) {
    m_uri = uri;
    m_uri_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaPageInfo::is_uri_Set() const{
    return m_uri_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaPageInfo::is_uri_Valid() const{
    return m_uri_isValid;
}

bool OAIGoogleCloudDiscoveryengineV1betaPageInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_page_category_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pageview_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_referrer_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_uri_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDiscoveryengineV1betaPageInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
