/**
 * Discovery Engine API
 * Discovery Engine API.
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDiscoveryengineV1betaDocument.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDiscoveryengineV1betaDocument::OAIGoogleCloudDiscoveryengineV1betaDocument(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDiscoveryengineV1betaDocument::OAIGoogleCloudDiscoveryengineV1betaDocument() {
    this->initializeModel();
}

OAIGoogleCloudDiscoveryengineV1betaDocument::~OAIGoogleCloudDiscoveryengineV1betaDocument() {}

void OAIGoogleCloudDiscoveryengineV1betaDocument::initializeModel() {

    m_content_isSet = false;
    m_content_isValid = false;

    m_derived_struct_data_isSet = false;
    m_derived_struct_data_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_index_time_isSet = false;
    m_index_time_isValid = false;

    m_json_data_isSet = false;
    m_json_data_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_parent_document_id_isSet = false;
    m_parent_document_id_isValid = false;

    m_schema_id_isSet = false;
    m_schema_id_isValid = false;

    m_struct_data_isSet = false;
    m_struct_data_isValid = false;
}

void OAIGoogleCloudDiscoveryengineV1betaDocument::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDiscoveryengineV1betaDocument::fromJsonObject(QJsonObject json) {

    m_content_isValid = ::OpenAPI::fromJsonValue(m_content, json[QString("content")]);
    m_content_isSet = !json[QString("content")].isNull() && m_content_isValid;

    m_derived_struct_data_isValid = ::OpenAPI::fromJsonValue(m_derived_struct_data, json[QString("derivedStructData")]);
    m_derived_struct_data_isSet = !json[QString("derivedStructData")].isNull() && m_derived_struct_data_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_index_time_isValid = ::OpenAPI::fromJsonValue(m_index_time, json[QString("indexTime")]);
    m_index_time_isSet = !json[QString("indexTime")].isNull() && m_index_time_isValid;

    m_json_data_isValid = ::OpenAPI::fromJsonValue(m_json_data, json[QString("jsonData")]);
    m_json_data_isSet = !json[QString("jsonData")].isNull() && m_json_data_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_parent_document_id_isValid = ::OpenAPI::fromJsonValue(m_parent_document_id, json[QString("parentDocumentId")]);
    m_parent_document_id_isSet = !json[QString("parentDocumentId")].isNull() && m_parent_document_id_isValid;

    m_schema_id_isValid = ::OpenAPI::fromJsonValue(m_schema_id, json[QString("schemaId")]);
    m_schema_id_isSet = !json[QString("schemaId")].isNull() && m_schema_id_isValid;

    m_struct_data_isValid = ::OpenAPI::fromJsonValue(m_struct_data, json[QString("structData")]);
    m_struct_data_isSet = !json[QString("structData")].isNull() && m_struct_data_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1betaDocument::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDiscoveryengineV1betaDocument::asJsonObject() const {
    QJsonObject obj;
    if (m_content.isSet()) {
        obj.insert(QString("content"), ::OpenAPI::toJsonValue(m_content));
    }
    if (m_derived_struct_data.size() > 0) {
        obj.insert(QString("derivedStructData"), ::OpenAPI::toJsonValue(m_derived_struct_data));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_index_time_isSet) {
        obj.insert(QString("indexTime"), ::OpenAPI::toJsonValue(m_index_time));
    }
    if (m_json_data_isSet) {
        obj.insert(QString("jsonData"), ::OpenAPI::toJsonValue(m_json_data));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_parent_document_id_isSet) {
        obj.insert(QString("parentDocumentId"), ::OpenAPI::toJsonValue(m_parent_document_id));
    }
    if (m_schema_id_isSet) {
        obj.insert(QString("schemaId"), ::OpenAPI::toJsonValue(m_schema_id));
    }
    if (m_struct_data.size() > 0) {
        obj.insert(QString("structData"), ::OpenAPI::toJsonValue(m_struct_data));
    }
    return obj;
}

OAIGoogleCloudDiscoveryengineV1betaDocumentContent OAIGoogleCloudDiscoveryengineV1betaDocument::getContent() const {
    return m_content;
}
void OAIGoogleCloudDiscoveryengineV1betaDocument::setContent(const OAIGoogleCloudDiscoveryengineV1betaDocumentContent &content) {
    m_content = content;
    m_content_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaDocument::is_content_Set() const{
    return m_content_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaDocument::is_content_Valid() const{
    return m_content_isValid;
}

QMap<QString, QJsonValue> OAIGoogleCloudDiscoveryengineV1betaDocument::getDerivedStructData() const {
    return m_derived_struct_data;
}
void OAIGoogleCloudDiscoveryengineV1betaDocument::setDerivedStructData(const QMap<QString, QJsonValue> &derived_struct_data) {
    m_derived_struct_data = derived_struct_data;
    m_derived_struct_data_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaDocument::is_derived_struct_data_Set() const{
    return m_derived_struct_data_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaDocument::is_derived_struct_data_Valid() const{
    return m_derived_struct_data_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1betaDocument::getId() const {
    return m_id;
}
void OAIGoogleCloudDiscoveryengineV1betaDocument::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaDocument::is_id_Set() const{
    return m_id_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaDocument::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1betaDocument::getIndexTime() const {
    return m_index_time;
}
void OAIGoogleCloudDiscoveryengineV1betaDocument::setIndexTime(const QString &index_time) {
    m_index_time = index_time;
    m_index_time_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaDocument::is_index_time_Set() const{
    return m_index_time_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaDocument::is_index_time_Valid() const{
    return m_index_time_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1betaDocument::getJsonData() const {
    return m_json_data;
}
void OAIGoogleCloudDiscoveryengineV1betaDocument::setJsonData(const QString &json_data) {
    m_json_data = json_data;
    m_json_data_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaDocument::is_json_data_Set() const{
    return m_json_data_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaDocument::is_json_data_Valid() const{
    return m_json_data_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1betaDocument::getName() const {
    return m_name;
}
void OAIGoogleCloudDiscoveryengineV1betaDocument::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaDocument::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaDocument::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1betaDocument::getParentDocumentId() const {
    return m_parent_document_id;
}
void OAIGoogleCloudDiscoveryengineV1betaDocument::setParentDocumentId(const QString &parent_document_id) {
    m_parent_document_id = parent_document_id;
    m_parent_document_id_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaDocument::is_parent_document_id_Set() const{
    return m_parent_document_id_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaDocument::is_parent_document_id_Valid() const{
    return m_parent_document_id_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1betaDocument::getSchemaId() const {
    return m_schema_id;
}
void OAIGoogleCloudDiscoveryengineV1betaDocument::setSchemaId(const QString &schema_id) {
    m_schema_id = schema_id;
    m_schema_id_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaDocument::is_schema_id_Set() const{
    return m_schema_id_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaDocument::is_schema_id_Valid() const{
    return m_schema_id_isValid;
}

QMap<QString, QJsonValue> OAIGoogleCloudDiscoveryengineV1betaDocument::getStructData() const {
    return m_struct_data;
}
void OAIGoogleCloudDiscoveryengineV1betaDocument::setStructData(const QMap<QString, QJsonValue> &struct_data) {
    m_struct_data = struct_data;
    m_struct_data_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaDocument::is_struct_data_Set() const{
    return m_struct_data_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaDocument::is_struct_data_Valid() const{
    return m_struct_data_isValid;
}

bool OAIGoogleCloudDiscoveryengineV1betaDocument::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_content.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_derived_struct_data.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_index_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_json_data_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_parent_document_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_schema_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_struct_data.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDiscoveryengineV1betaDocument::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
