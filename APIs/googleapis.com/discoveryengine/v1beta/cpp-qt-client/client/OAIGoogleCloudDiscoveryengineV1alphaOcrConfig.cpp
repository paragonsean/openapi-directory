/**
 * Discovery Engine API
 * Discovery Engine API.
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDiscoveryengineV1alphaOcrConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDiscoveryengineV1alphaOcrConfig::OAIGoogleCloudDiscoveryengineV1alphaOcrConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDiscoveryengineV1alphaOcrConfig::OAIGoogleCloudDiscoveryengineV1alphaOcrConfig() {
    this->initializeModel();
}

OAIGoogleCloudDiscoveryengineV1alphaOcrConfig::~OAIGoogleCloudDiscoveryengineV1alphaOcrConfig() {}

void OAIGoogleCloudDiscoveryengineV1alphaOcrConfig::initializeModel() {

    m_enabled_isSet = false;
    m_enabled_isValid = false;

    m_enhanced_document_elements_isSet = false;
    m_enhanced_document_elements_isValid = false;

    m_use_native_text_isSet = false;
    m_use_native_text_isValid = false;
}

void OAIGoogleCloudDiscoveryengineV1alphaOcrConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDiscoveryengineV1alphaOcrConfig::fromJsonObject(QJsonObject json) {

    m_enabled_isValid = ::OpenAPI::fromJsonValue(m_enabled, json[QString("enabled")]);
    m_enabled_isSet = !json[QString("enabled")].isNull() && m_enabled_isValid;

    m_enhanced_document_elements_isValid = ::OpenAPI::fromJsonValue(m_enhanced_document_elements, json[QString("enhancedDocumentElements")]);
    m_enhanced_document_elements_isSet = !json[QString("enhancedDocumentElements")].isNull() && m_enhanced_document_elements_isValid;

    m_use_native_text_isValid = ::OpenAPI::fromJsonValue(m_use_native_text, json[QString("useNativeText")]);
    m_use_native_text_isSet = !json[QString("useNativeText")].isNull() && m_use_native_text_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1alphaOcrConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDiscoveryengineV1alphaOcrConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_enabled_isSet) {
        obj.insert(QString("enabled"), ::OpenAPI::toJsonValue(m_enabled));
    }
    if (m_enhanced_document_elements.size() > 0) {
        obj.insert(QString("enhancedDocumentElements"), ::OpenAPI::toJsonValue(m_enhanced_document_elements));
    }
    if (m_use_native_text_isSet) {
        obj.insert(QString("useNativeText"), ::OpenAPI::toJsonValue(m_use_native_text));
    }
    return obj;
}

bool OAIGoogleCloudDiscoveryengineV1alphaOcrConfig::isEnabled() const {
    return m_enabled;
}
void OAIGoogleCloudDiscoveryengineV1alphaOcrConfig::setEnabled(const bool &enabled) {
    m_enabled = enabled;
    m_enabled_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaOcrConfig::is_enabled_Set() const{
    return m_enabled_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaOcrConfig::is_enabled_Valid() const{
    return m_enabled_isValid;
}

QList<QString> OAIGoogleCloudDiscoveryengineV1alphaOcrConfig::getEnhancedDocumentElements() const {
    return m_enhanced_document_elements;
}
void OAIGoogleCloudDiscoveryengineV1alphaOcrConfig::setEnhancedDocumentElements(const QList<QString> &enhanced_document_elements) {
    m_enhanced_document_elements = enhanced_document_elements;
    m_enhanced_document_elements_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaOcrConfig::is_enhanced_document_elements_Set() const{
    return m_enhanced_document_elements_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaOcrConfig::is_enhanced_document_elements_Valid() const{
    return m_enhanced_document_elements_isValid;
}

bool OAIGoogleCloudDiscoveryengineV1alphaOcrConfig::isUseNativeText() const {
    return m_use_native_text;
}
void OAIGoogleCloudDiscoveryengineV1alphaOcrConfig::setUseNativeText(const bool &use_native_text) {
    m_use_native_text = use_native_text;
    m_use_native_text_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaOcrConfig::is_use_native_text_Set() const{
    return m_use_native_text_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaOcrConfig::is_use_native_text_Valid() const{
    return m_use_native_text_isValid;
}

bool OAIGoogleCloudDiscoveryengineV1alphaOcrConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enhanced_document_elements.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_use_native_text_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDiscoveryengineV1alphaOcrConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
