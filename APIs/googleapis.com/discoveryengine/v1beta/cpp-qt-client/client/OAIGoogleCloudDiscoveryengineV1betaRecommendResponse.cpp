/**
 * Discovery Engine API
 * Discovery Engine API.
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDiscoveryengineV1betaRecommendResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDiscoveryengineV1betaRecommendResponse::OAIGoogleCloudDiscoveryengineV1betaRecommendResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDiscoveryengineV1betaRecommendResponse::OAIGoogleCloudDiscoveryengineV1betaRecommendResponse() {
    this->initializeModel();
}

OAIGoogleCloudDiscoveryengineV1betaRecommendResponse::~OAIGoogleCloudDiscoveryengineV1betaRecommendResponse() {}

void OAIGoogleCloudDiscoveryengineV1betaRecommendResponse::initializeModel() {

    m_attribution_token_isSet = false;
    m_attribution_token_isValid = false;

    m_missing_ids_isSet = false;
    m_missing_ids_isValid = false;

    m_results_isSet = false;
    m_results_isValid = false;

    m_validate_only_isSet = false;
    m_validate_only_isValid = false;
}

void OAIGoogleCloudDiscoveryengineV1betaRecommendResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDiscoveryengineV1betaRecommendResponse::fromJsonObject(QJsonObject json) {

    m_attribution_token_isValid = ::OpenAPI::fromJsonValue(m_attribution_token, json[QString("attributionToken")]);
    m_attribution_token_isSet = !json[QString("attributionToken")].isNull() && m_attribution_token_isValid;

    m_missing_ids_isValid = ::OpenAPI::fromJsonValue(m_missing_ids, json[QString("missingIds")]);
    m_missing_ids_isSet = !json[QString("missingIds")].isNull() && m_missing_ids_isValid;

    m_results_isValid = ::OpenAPI::fromJsonValue(m_results, json[QString("results")]);
    m_results_isSet = !json[QString("results")].isNull() && m_results_isValid;

    m_validate_only_isValid = ::OpenAPI::fromJsonValue(m_validate_only, json[QString("validateOnly")]);
    m_validate_only_isSet = !json[QString("validateOnly")].isNull() && m_validate_only_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1betaRecommendResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDiscoveryengineV1betaRecommendResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_attribution_token_isSet) {
        obj.insert(QString("attributionToken"), ::OpenAPI::toJsonValue(m_attribution_token));
    }
    if (m_missing_ids.size() > 0) {
        obj.insert(QString("missingIds"), ::OpenAPI::toJsonValue(m_missing_ids));
    }
    if (m_results.size() > 0) {
        obj.insert(QString("results"), ::OpenAPI::toJsonValue(m_results));
    }
    if (m_validate_only_isSet) {
        obj.insert(QString("validateOnly"), ::OpenAPI::toJsonValue(m_validate_only));
    }
    return obj;
}

QString OAIGoogleCloudDiscoveryengineV1betaRecommendResponse::getAttributionToken() const {
    return m_attribution_token;
}
void OAIGoogleCloudDiscoveryengineV1betaRecommendResponse::setAttributionToken(const QString &attribution_token) {
    m_attribution_token = attribution_token;
    m_attribution_token_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaRecommendResponse::is_attribution_token_Set() const{
    return m_attribution_token_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaRecommendResponse::is_attribution_token_Valid() const{
    return m_attribution_token_isValid;
}

QList<QString> OAIGoogleCloudDiscoveryengineV1betaRecommendResponse::getMissingIds() const {
    return m_missing_ids;
}
void OAIGoogleCloudDiscoveryengineV1betaRecommendResponse::setMissingIds(const QList<QString> &missing_ids) {
    m_missing_ids = missing_ids;
    m_missing_ids_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaRecommendResponse::is_missing_ids_Set() const{
    return m_missing_ids_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaRecommendResponse::is_missing_ids_Valid() const{
    return m_missing_ids_isValid;
}

QList<OAIGoogleCloudDiscoveryengineV1betaRecommendResponseRecommendationResult> OAIGoogleCloudDiscoveryengineV1betaRecommendResponse::getResults() const {
    return m_results;
}
void OAIGoogleCloudDiscoveryengineV1betaRecommendResponse::setResults(const QList<OAIGoogleCloudDiscoveryengineV1betaRecommendResponseRecommendationResult> &results) {
    m_results = results;
    m_results_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaRecommendResponse::is_results_Set() const{
    return m_results_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaRecommendResponse::is_results_Valid() const{
    return m_results_isValid;
}

bool OAIGoogleCloudDiscoveryengineV1betaRecommendResponse::isValidateOnly() const {
    return m_validate_only;
}
void OAIGoogleCloudDiscoveryengineV1betaRecommendResponse::setValidateOnly(const bool &validate_only) {
    m_validate_only = validate_only;
    m_validate_only_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaRecommendResponse::is_validate_only_Set() const{
    return m_validate_only_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaRecommendResponse::is_validate_only_Valid() const{
    return m_validate_only_isValid;
}

bool OAIGoogleCloudDiscoveryengineV1betaRecommendResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_attribution_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_missing_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_results.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_validate_only_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDiscoveryengineV1betaRecommendResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
