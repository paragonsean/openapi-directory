/**
 * Discovery Engine API
 * Discovery Engine API.
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDiscoveryengineV1betaSearchResponseSummary.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDiscoveryengineV1betaSearchResponseSummary::OAIGoogleCloudDiscoveryengineV1betaSearchResponseSummary(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDiscoveryengineV1betaSearchResponseSummary::OAIGoogleCloudDiscoveryengineV1betaSearchResponseSummary() {
    this->initializeModel();
}

OAIGoogleCloudDiscoveryengineV1betaSearchResponseSummary::~OAIGoogleCloudDiscoveryengineV1betaSearchResponseSummary() {}

void OAIGoogleCloudDiscoveryengineV1betaSearchResponseSummary::initializeModel() {

    m_safety_attributes_isSet = false;
    m_safety_attributes_isValid = false;

    m_summary_skipped_reasons_isSet = false;
    m_summary_skipped_reasons_isValid = false;

    m_summary_text_isSet = false;
    m_summary_text_isValid = false;

    m_summary_with_metadata_isSet = false;
    m_summary_with_metadata_isValid = false;
}

void OAIGoogleCloudDiscoveryengineV1betaSearchResponseSummary::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDiscoveryengineV1betaSearchResponseSummary::fromJsonObject(QJsonObject json) {

    m_safety_attributes_isValid = ::OpenAPI::fromJsonValue(m_safety_attributes, json[QString("safetyAttributes")]);
    m_safety_attributes_isSet = !json[QString("safetyAttributes")].isNull() && m_safety_attributes_isValid;

    m_summary_skipped_reasons_isValid = ::OpenAPI::fromJsonValue(m_summary_skipped_reasons, json[QString("summarySkippedReasons")]);
    m_summary_skipped_reasons_isSet = !json[QString("summarySkippedReasons")].isNull() && m_summary_skipped_reasons_isValid;

    m_summary_text_isValid = ::OpenAPI::fromJsonValue(m_summary_text, json[QString("summaryText")]);
    m_summary_text_isSet = !json[QString("summaryText")].isNull() && m_summary_text_isValid;

    m_summary_with_metadata_isValid = ::OpenAPI::fromJsonValue(m_summary_with_metadata, json[QString("summaryWithMetadata")]);
    m_summary_with_metadata_isSet = !json[QString("summaryWithMetadata")].isNull() && m_summary_with_metadata_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1betaSearchResponseSummary::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDiscoveryengineV1betaSearchResponseSummary::asJsonObject() const {
    QJsonObject obj;
    if (m_safety_attributes.isSet()) {
        obj.insert(QString("safetyAttributes"), ::OpenAPI::toJsonValue(m_safety_attributes));
    }
    if (m_summary_skipped_reasons.size() > 0) {
        obj.insert(QString("summarySkippedReasons"), ::OpenAPI::toJsonValue(m_summary_skipped_reasons));
    }
    if (m_summary_text_isSet) {
        obj.insert(QString("summaryText"), ::OpenAPI::toJsonValue(m_summary_text));
    }
    if (m_summary_with_metadata.isSet()) {
        obj.insert(QString("summaryWithMetadata"), ::OpenAPI::toJsonValue(m_summary_with_metadata));
    }
    return obj;
}

OAIGoogleCloudDiscoveryengineV1betaSearchResponseSummarySafetyAttributes OAIGoogleCloudDiscoveryengineV1betaSearchResponseSummary::getSafetyAttributes() const {
    return m_safety_attributes;
}
void OAIGoogleCloudDiscoveryengineV1betaSearchResponseSummary::setSafetyAttributes(const OAIGoogleCloudDiscoveryengineV1betaSearchResponseSummarySafetyAttributes &safety_attributes) {
    m_safety_attributes = safety_attributes;
    m_safety_attributes_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaSearchResponseSummary::is_safety_attributes_Set() const{
    return m_safety_attributes_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaSearchResponseSummary::is_safety_attributes_Valid() const{
    return m_safety_attributes_isValid;
}

QList<QString> OAIGoogleCloudDiscoveryengineV1betaSearchResponseSummary::getSummarySkippedReasons() const {
    return m_summary_skipped_reasons;
}
void OAIGoogleCloudDiscoveryengineV1betaSearchResponseSummary::setSummarySkippedReasons(const QList<QString> &summary_skipped_reasons) {
    m_summary_skipped_reasons = summary_skipped_reasons;
    m_summary_skipped_reasons_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaSearchResponseSummary::is_summary_skipped_reasons_Set() const{
    return m_summary_skipped_reasons_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaSearchResponseSummary::is_summary_skipped_reasons_Valid() const{
    return m_summary_skipped_reasons_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1betaSearchResponseSummary::getSummaryText() const {
    return m_summary_text;
}
void OAIGoogleCloudDiscoveryengineV1betaSearchResponseSummary::setSummaryText(const QString &summary_text) {
    m_summary_text = summary_text;
    m_summary_text_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaSearchResponseSummary::is_summary_text_Set() const{
    return m_summary_text_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaSearchResponseSummary::is_summary_text_Valid() const{
    return m_summary_text_isValid;
}

OAIGoogleCloudDiscoveryengineV1betaSearchResponseSummarySummaryWithMetadata OAIGoogleCloudDiscoveryengineV1betaSearchResponseSummary::getSummaryWithMetadata() const {
    return m_summary_with_metadata;
}
void OAIGoogleCloudDiscoveryengineV1betaSearchResponseSummary::setSummaryWithMetadata(const OAIGoogleCloudDiscoveryengineV1betaSearchResponseSummarySummaryWithMetadata &summary_with_metadata) {
    m_summary_with_metadata = summary_with_metadata;
    m_summary_with_metadata_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaSearchResponseSummary::is_summary_with_metadata_Set() const{
    return m_summary_with_metadata_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaSearchResponseSummary::is_summary_with_metadata_Valid() const{
    return m_summary_with_metadata_isValid;
}

bool OAIGoogleCloudDiscoveryengineV1betaSearchResponseSummary::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_safety_attributes.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_summary_skipped_reasons.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_summary_text_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_summary_with_metadata.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDiscoveryengineV1betaSearchResponseSummary::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
