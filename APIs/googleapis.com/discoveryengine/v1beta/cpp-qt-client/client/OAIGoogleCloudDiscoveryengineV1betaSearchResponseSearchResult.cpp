/**
 * Discovery Engine API
 * Discovery Engine API.
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDiscoveryengineV1betaSearchResponseSearchResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDiscoveryengineV1betaSearchResponseSearchResult::OAIGoogleCloudDiscoveryengineV1betaSearchResponseSearchResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDiscoveryengineV1betaSearchResponseSearchResult::OAIGoogleCloudDiscoveryengineV1betaSearchResponseSearchResult() {
    this->initializeModel();
}

OAIGoogleCloudDiscoveryengineV1betaSearchResponseSearchResult::~OAIGoogleCloudDiscoveryengineV1betaSearchResponseSearchResult() {}

void OAIGoogleCloudDiscoveryengineV1betaSearchResponseSearchResult::initializeModel() {

    m_document_isSet = false;
    m_document_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_model_scores_isSet = false;
    m_model_scores_isValid = false;
}

void OAIGoogleCloudDiscoveryengineV1betaSearchResponseSearchResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDiscoveryengineV1betaSearchResponseSearchResult::fromJsonObject(QJsonObject json) {

    m_document_isValid = ::OpenAPI::fromJsonValue(m_document, json[QString("document")]);
    m_document_isSet = !json[QString("document")].isNull() && m_document_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_model_scores_isValid = ::OpenAPI::fromJsonValue(m_model_scores, json[QString("modelScores")]);
    m_model_scores_isSet = !json[QString("modelScores")].isNull() && m_model_scores_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1betaSearchResponseSearchResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDiscoveryengineV1betaSearchResponseSearchResult::asJsonObject() const {
    QJsonObject obj;
    if (m_document.isSet()) {
        obj.insert(QString("document"), ::OpenAPI::toJsonValue(m_document));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_model_scores.size() > 0) {
        obj.insert(QString("modelScores"), ::OpenAPI::toJsonValue(m_model_scores));
    }
    return obj;
}

OAIGoogleCloudDiscoveryengineV1betaDocument OAIGoogleCloudDiscoveryengineV1betaSearchResponseSearchResult::getDocument() const {
    return m_document;
}
void OAIGoogleCloudDiscoveryengineV1betaSearchResponseSearchResult::setDocument(const OAIGoogleCloudDiscoveryengineV1betaDocument &document) {
    m_document = document;
    m_document_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaSearchResponseSearchResult::is_document_Set() const{
    return m_document_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaSearchResponseSearchResult::is_document_Valid() const{
    return m_document_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1betaSearchResponseSearchResult::getId() const {
    return m_id;
}
void OAIGoogleCloudDiscoveryengineV1betaSearchResponseSearchResult::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaSearchResponseSearchResult::is_id_Set() const{
    return m_id_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaSearchResponseSearchResult::is_id_Valid() const{
    return m_id_isValid;
}

QMap<QString, OAIGoogleCloudDiscoveryengineV1betaDoubleList> OAIGoogleCloudDiscoveryengineV1betaSearchResponseSearchResult::getModelScores() const {
    return m_model_scores;
}
void OAIGoogleCloudDiscoveryengineV1betaSearchResponseSearchResult::setModelScores(const QMap<QString, OAIGoogleCloudDiscoveryengineV1betaDoubleList> &model_scores) {
    m_model_scores = model_scores;
    m_model_scores_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaSearchResponseSearchResult::is_model_scores_Set() const{
    return m_model_scores_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaSearchResponseSearchResult::is_model_scores_Valid() const{
    return m_model_scores_isValid;
}

bool OAIGoogleCloudDiscoveryengineV1betaSearchResponseSearchResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_document.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_model_scores.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDiscoveryengineV1betaSearchResponseSearchResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
