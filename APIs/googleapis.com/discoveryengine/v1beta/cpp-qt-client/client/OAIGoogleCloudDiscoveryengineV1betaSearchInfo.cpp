/**
 * Discovery Engine API
 * Discovery Engine API.
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDiscoveryengineV1betaSearchInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDiscoveryengineV1betaSearchInfo::OAIGoogleCloudDiscoveryengineV1betaSearchInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDiscoveryengineV1betaSearchInfo::OAIGoogleCloudDiscoveryengineV1betaSearchInfo() {
    this->initializeModel();
}

OAIGoogleCloudDiscoveryengineV1betaSearchInfo::~OAIGoogleCloudDiscoveryengineV1betaSearchInfo() {}

void OAIGoogleCloudDiscoveryengineV1betaSearchInfo::initializeModel() {

    m_offset_isSet = false;
    m_offset_isValid = false;

    m_order_by_isSet = false;
    m_order_by_isValid = false;

    m_search_query_isSet = false;
    m_search_query_isValid = false;
}

void OAIGoogleCloudDiscoveryengineV1betaSearchInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDiscoveryengineV1betaSearchInfo::fromJsonObject(QJsonObject json) {

    m_offset_isValid = ::OpenAPI::fromJsonValue(m_offset, json[QString("offset")]);
    m_offset_isSet = !json[QString("offset")].isNull() && m_offset_isValid;

    m_order_by_isValid = ::OpenAPI::fromJsonValue(m_order_by, json[QString("orderBy")]);
    m_order_by_isSet = !json[QString("orderBy")].isNull() && m_order_by_isValid;

    m_search_query_isValid = ::OpenAPI::fromJsonValue(m_search_query, json[QString("searchQuery")]);
    m_search_query_isSet = !json[QString("searchQuery")].isNull() && m_search_query_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1betaSearchInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDiscoveryengineV1betaSearchInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_offset_isSet) {
        obj.insert(QString("offset"), ::OpenAPI::toJsonValue(m_offset));
    }
    if (m_order_by_isSet) {
        obj.insert(QString("orderBy"), ::OpenAPI::toJsonValue(m_order_by));
    }
    if (m_search_query_isSet) {
        obj.insert(QString("searchQuery"), ::OpenAPI::toJsonValue(m_search_query));
    }
    return obj;
}

qint32 OAIGoogleCloudDiscoveryengineV1betaSearchInfo::getOffset() const {
    return m_offset;
}
void OAIGoogleCloudDiscoveryengineV1betaSearchInfo::setOffset(const qint32 &offset) {
    m_offset = offset;
    m_offset_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaSearchInfo::is_offset_Set() const{
    return m_offset_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaSearchInfo::is_offset_Valid() const{
    return m_offset_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1betaSearchInfo::getOrderBy() const {
    return m_order_by;
}
void OAIGoogleCloudDiscoveryengineV1betaSearchInfo::setOrderBy(const QString &order_by) {
    m_order_by = order_by;
    m_order_by_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaSearchInfo::is_order_by_Set() const{
    return m_order_by_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaSearchInfo::is_order_by_Valid() const{
    return m_order_by_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1betaSearchInfo::getSearchQuery() const {
    return m_search_query;
}
void OAIGoogleCloudDiscoveryengineV1betaSearchInfo::setSearchQuery(const QString &search_query) {
    m_search_query = search_query;
    m_search_query_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaSearchInfo::is_search_query_Set() const{
    return m_search_query_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaSearchInfo::is_search_query_Valid() const{
    return m_search_query_isValid;
}

bool OAIGoogleCloudDiscoveryengineV1betaSearchInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_offset_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_by_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_search_query_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDiscoveryengineV1betaSearchInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
