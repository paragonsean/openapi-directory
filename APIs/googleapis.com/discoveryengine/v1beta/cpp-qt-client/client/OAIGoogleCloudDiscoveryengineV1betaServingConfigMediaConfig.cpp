/**
 * Discovery Engine API
 * Discovery Engine API.
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDiscoveryengineV1betaServingConfigMediaConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDiscoveryengineV1betaServingConfigMediaConfig::OAIGoogleCloudDiscoveryengineV1betaServingConfigMediaConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDiscoveryengineV1betaServingConfigMediaConfig::OAIGoogleCloudDiscoveryengineV1betaServingConfigMediaConfig() {
    this->initializeModel();
}

OAIGoogleCloudDiscoveryengineV1betaServingConfigMediaConfig::~OAIGoogleCloudDiscoveryengineV1betaServingConfigMediaConfig() {}

void OAIGoogleCloudDiscoveryengineV1betaServingConfigMediaConfig::initializeModel() {

    m_content_freshness_cutoff_days_isSet = false;
    m_content_freshness_cutoff_days_isValid = false;

    m_content_watched_minutes_threshold_isSet = false;
    m_content_watched_minutes_threshold_isValid = false;

    m_content_watched_percentage_threshold_isSet = false;
    m_content_watched_percentage_threshold_isValid = false;

    m_content_watched_seconds_threshold_isSet = false;
    m_content_watched_seconds_threshold_isValid = false;

    m_demotion_event_type_isSet = false;
    m_demotion_event_type_isValid = false;
}

void OAIGoogleCloudDiscoveryengineV1betaServingConfigMediaConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDiscoveryengineV1betaServingConfigMediaConfig::fromJsonObject(QJsonObject json) {

    m_content_freshness_cutoff_days_isValid = ::OpenAPI::fromJsonValue(m_content_freshness_cutoff_days, json[QString("contentFreshnessCutoffDays")]);
    m_content_freshness_cutoff_days_isSet = !json[QString("contentFreshnessCutoffDays")].isNull() && m_content_freshness_cutoff_days_isValid;

    m_content_watched_minutes_threshold_isValid = ::OpenAPI::fromJsonValue(m_content_watched_minutes_threshold, json[QString("contentWatchedMinutesThreshold")]);
    m_content_watched_minutes_threshold_isSet = !json[QString("contentWatchedMinutesThreshold")].isNull() && m_content_watched_minutes_threshold_isValid;

    m_content_watched_percentage_threshold_isValid = ::OpenAPI::fromJsonValue(m_content_watched_percentage_threshold, json[QString("contentWatchedPercentageThreshold")]);
    m_content_watched_percentage_threshold_isSet = !json[QString("contentWatchedPercentageThreshold")].isNull() && m_content_watched_percentage_threshold_isValid;

    m_content_watched_seconds_threshold_isValid = ::OpenAPI::fromJsonValue(m_content_watched_seconds_threshold, json[QString("contentWatchedSecondsThreshold")]);
    m_content_watched_seconds_threshold_isSet = !json[QString("contentWatchedSecondsThreshold")].isNull() && m_content_watched_seconds_threshold_isValid;

    m_demotion_event_type_isValid = ::OpenAPI::fromJsonValue(m_demotion_event_type, json[QString("demotionEventType")]);
    m_demotion_event_type_isSet = !json[QString("demotionEventType")].isNull() && m_demotion_event_type_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1betaServingConfigMediaConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDiscoveryengineV1betaServingConfigMediaConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_content_freshness_cutoff_days_isSet) {
        obj.insert(QString("contentFreshnessCutoffDays"), ::OpenAPI::toJsonValue(m_content_freshness_cutoff_days));
    }
    if (m_content_watched_minutes_threshold_isSet) {
        obj.insert(QString("contentWatchedMinutesThreshold"), ::OpenAPI::toJsonValue(m_content_watched_minutes_threshold));
    }
    if (m_content_watched_percentage_threshold_isSet) {
        obj.insert(QString("contentWatchedPercentageThreshold"), ::OpenAPI::toJsonValue(m_content_watched_percentage_threshold));
    }
    if (m_content_watched_seconds_threshold_isSet) {
        obj.insert(QString("contentWatchedSecondsThreshold"), ::OpenAPI::toJsonValue(m_content_watched_seconds_threshold));
    }
    if (m_demotion_event_type_isSet) {
        obj.insert(QString("demotionEventType"), ::OpenAPI::toJsonValue(m_demotion_event_type));
    }
    return obj;
}

qint32 OAIGoogleCloudDiscoveryengineV1betaServingConfigMediaConfig::getContentFreshnessCutoffDays() const {
    return m_content_freshness_cutoff_days;
}
void OAIGoogleCloudDiscoveryengineV1betaServingConfigMediaConfig::setContentFreshnessCutoffDays(const qint32 &content_freshness_cutoff_days) {
    m_content_freshness_cutoff_days = content_freshness_cutoff_days;
    m_content_freshness_cutoff_days_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaServingConfigMediaConfig::is_content_freshness_cutoff_days_Set() const{
    return m_content_freshness_cutoff_days_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaServingConfigMediaConfig::is_content_freshness_cutoff_days_Valid() const{
    return m_content_freshness_cutoff_days_isValid;
}

float OAIGoogleCloudDiscoveryengineV1betaServingConfigMediaConfig::getContentWatchedMinutesThreshold() const {
    return m_content_watched_minutes_threshold;
}
void OAIGoogleCloudDiscoveryengineV1betaServingConfigMediaConfig::setContentWatchedMinutesThreshold(const float &content_watched_minutes_threshold) {
    m_content_watched_minutes_threshold = content_watched_minutes_threshold;
    m_content_watched_minutes_threshold_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaServingConfigMediaConfig::is_content_watched_minutes_threshold_Set() const{
    return m_content_watched_minutes_threshold_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaServingConfigMediaConfig::is_content_watched_minutes_threshold_Valid() const{
    return m_content_watched_minutes_threshold_isValid;
}

float OAIGoogleCloudDiscoveryengineV1betaServingConfigMediaConfig::getContentWatchedPercentageThreshold() const {
    return m_content_watched_percentage_threshold;
}
void OAIGoogleCloudDiscoveryengineV1betaServingConfigMediaConfig::setContentWatchedPercentageThreshold(const float &content_watched_percentage_threshold) {
    m_content_watched_percentage_threshold = content_watched_percentage_threshold;
    m_content_watched_percentage_threshold_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaServingConfigMediaConfig::is_content_watched_percentage_threshold_Set() const{
    return m_content_watched_percentage_threshold_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaServingConfigMediaConfig::is_content_watched_percentage_threshold_Valid() const{
    return m_content_watched_percentage_threshold_isValid;
}

float OAIGoogleCloudDiscoveryengineV1betaServingConfigMediaConfig::getContentWatchedSecondsThreshold() const {
    return m_content_watched_seconds_threshold;
}
void OAIGoogleCloudDiscoveryengineV1betaServingConfigMediaConfig::setContentWatchedSecondsThreshold(const float &content_watched_seconds_threshold) {
    m_content_watched_seconds_threshold = content_watched_seconds_threshold;
    m_content_watched_seconds_threshold_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaServingConfigMediaConfig::is_content_watched_seconds_threshold_Set() const{
    return m_content_watched_seconds_threshold_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaServingConfigMediaConfig::is_content_watched_seconds_threshold_Valid() const{
    return m_content_watched_seconds_threshold_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1betaServingConfigMediaConfig::getDemotionEventType() const {
    return m_demotion_event_type;
}
void OAIGoogleCloudDiscoveryengineV1betaServingConfigMediaConfig::setDemotionEventType(const QString &demotion_event_type) {
    m_demotion_event_type = demotion_event_type;
    m_demotion_event_type_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaServingConfigMediaConfig::is_demotion_event_type_Set() const{
    return m_demotion_event_type_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaServingConfigMediaConfig::is_demotion_event_type_Valid() const{
    return m_demotion_event_type_isValid;
}

bool OAIGoogleCloudDiscoveryengineV1betaServingConfigMediaConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_content_freshness_cutoff_days_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_content_watched_minutes_threshold_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_content_watched_percentage_threshold_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_content_watched_seconds_threshold_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_demotion_event_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDiscoveryengineV1betaServingConfigMediaConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
