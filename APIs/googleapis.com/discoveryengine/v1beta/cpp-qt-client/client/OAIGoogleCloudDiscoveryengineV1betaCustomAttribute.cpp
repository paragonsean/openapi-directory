/**
 * Discovery Engine API
 * Discovery Engine API.
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDiscoveryengineV1betaCustomAttribute.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDiscoveryengineV1betaCustomAttribute::OAIGoogleCloudDiscoveryengineV1betaCustomAttribute(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDiscoveryengineV1betaCustomAttribute::OAIGoogleCloudDiscoveryengineV1betaCustomAttribute() {
    this->initializeModel();
}

OAIGoogleCloudDiscoveryengineV1betaCustomAttribute::~OAIGoogleCloudDiscoveryengineV1betaCustomAttribute() {}

void OAIGoogleCloudDiscoveryengineV1betaCustomAttribute::initializeModel() {

    m_numbers_isSet = false;
    m_numbers_isValid = false;

    m_text_isSet = false;
    m_text_isValid = false;
}

void OAIGoogleCloudDiscoveryengineV1betaCustomAttribute::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDiscoveryengineV1betaCustomAttribute::fromJsonObject(QJsonObject json) {

    m_numbers_isValid = ::OpenAPI::fromJsonValue(m_numbers, json[QString("numbers")]);
    m_numbers_isSet = !json[QString("numbers")].isNull() && m_numbers_isValid;

    m_text_isValid = ::OpenAPI::fromJsonValue(m_text, json[QString("text")]);
    m_text_isSet = !json[QString("text")].isNull() && m_text_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1betaCustomAttribute::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDiscoveryengineV1betaCustomAttribute::asJsonObject() const {
    QJsonObject obj;
    if (m_numbers.size() > 0) {
        obj.insert(QString("numbers"), ::OpenAPI::toJsonValue(m_numbers));
    }
    if (m_text.size() > 0) {
        obj.insert(QString("text"), ::OpenAPI::toJsonValue(m_text));
    }
    return obj;
}

QList<double> OAIGoogleCloudDiscoveryengineV1betaCustomAttribute::getNumbers() const {
    return m_numbers;
}
void OAIGoogleCloudDiscoveryengineV1betaCustomAttribute::setNumbers(const QList<double> &numbers) {
    m_numbers = numbers;
    m_numbers_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaCustomAttribute::is_numbers_Set() const{
    return m_numbers_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaCustomAttribute::is_numbers_Valid() const{
    return m_numbers_isValid;
}

QList<QString> OAIGoogleCloudDiscoveryengineV1betaCustomAttribute::getText() const {
    return m_text;
}
void OAIGoogleCloudDiscoveryengineV1betaCustomAttribute::setText(const QList<QString> &text) {
    m_text = text;
    m_text_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaCustomAttribute::is_text_Set() const{
    return m_text_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaCustomAttribute::is_text_Valid() const{
    return m_text_isValid;
}

bool OAIGoogleCloudDiscoveryengineV1betaCustomAttribute::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_numbers.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_text.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDiscoveryengineV1betaCustomAttribute::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
