/**
 * Discovery Engine API
 * Discovery Engine API.
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDiscoveryengineV1Engine.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDiscoveryengineV1Engine::OAIGoogleCloudDiscoveryengineV1Engine(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDiscoveryengineV1Engine::OAIGoogleCloudDiscoveryengineV1Engine() {
    this->initializeModel();
}

OAIGoogleCloudDiscoveryengineV1Engine::~OAIGoogleCloudDiscoveryengineV1Engine() {}

void OAIGoogleCloudDiscoveryengineV1Engine::initializeModel() {

    m_chat_engine_config_isSet = false;
    m_chat_engine_config_isValid = false;

    m_chat_engine_metadata_isSet = false;
    m_chat_engine_metadata_isValid = false;

    m_common_config_isSet = false;
    m_common_config_isValid = false;

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_data_store_ids_isSet = false;
    m_data_store_ids_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_industry_vertical_isSet = false;
    m_industry_vertical_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_search_engine_config_isSet = false;
    m_search_engine_config_isValid = false;

    m_solution_type_isSet = false;
    m_solution_type_isValid = false;

    m_update_time_isSet = false;
    m_update_time_isValid = false;
}

void OAIGoogleCloudDiscoveryengineV1Engine::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDiscoveryengineV1Engine::fromJsonObject(QJsonObject json) {

    m_chat_engine_config_isValid = ::OpenAPI::fromJsonValue(m_chat_engine_config, json[QString("chatEngineConfig")]);
    m_chat_engine_config_isSet = !json[QString("chatEngineConfig")].isNull() && m_chat_engine_config_isValid;

    m_chat_engine_metadata_isValid = ::OpenAPI::fromJsonValue(m_chat_engine_metadata, json[QString("chatEngineMetadata")]);
    m_chat_engine_metadata_isSet = !json[QString("chatEngineMetadata")].isNull() && m_chat_engine_metadata_isValid;

    m_common_config_isValid = ::OpenAPI::fromJsonValue(m_common_config, json[QString("commonConfig")]);
    m_common_config_isSet = !json[QString("commonConfig")].isNull() && m_common_config_isValid;

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_data_store_ids_isValid = ::OpenAPI::fromJsonValue(m_data_store_ids, json[QString("dataStoreIds")]);
    m_data_store_ids_isSet = !json[QString("dataStoreIds")].isNull() && m_data_store_ids_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_industry_vertical_isValid = ::OpenAPI::fromJsonValue(m_industry_vertical, json[QString("industryVertical")]);
    m_industry_vertical_isSet = !json[QString("industryVertical")].isNull() && m_industry_vertical_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_search_engine_config_isValid = ::OpenAPI::fromJsonValue(m_search_engine_config, json[QString("searchEngineConfig")]);
    m_search_engine_config_isSet = !json[QString("searchEngineConfig")].isNull() && m_search_engine_config_isValid;

    m_solution_type_isValid = ::OpenAPI::fromJsonValue(m_solution_type, json[QString("solutionType")]);
    m_solution_type_isSet = !json[QString("solutionType")].isNull() && m_solution_type_isValid;

    m_update_time_isValid = ::OpenAPI::fromJsonValue(m_update_time, json[QString("updateTime")]);
    m_update_time_isSet = !json[QString("updateTime")].isNull() && m_update_time_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1Engine::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDiscoveryengineV1Engine::asJsonObject() const {
    QJsonObject obj;
    if (m_chat_engine_config.isSet()) {
        obj.insert(QString("chatEngineConfig"), ::OpenAPI::toJsonValue(m_chat_engine_config));
    }
    if (m_chat_engine_metadata.isSet()) {
        obj.insert(QString("chatEngineMetadata"), ::OpenAPI::toJsonValue(m_chat_engine_metadata));
    }
    if (m_common_config.isSet()) {
        obj.insert(QString("commonConfig"), ::OpenAPI::toJsonValue(m_common_config));
    }
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_data_store_ids.size() > 0) {
        obj.insert(QString("dataStoreIds"), ::OpenAPI::toJsonValue(m_data_store_ids));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_industry_vertical_isSet) {
        obj.insert(QString("industryVertical"), ::OpenAPI::toJsonValue(m_industry_vertical));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_search_engine_config.isSet()) {
        obj.insert(QString("searchEngineConfig"), ::OpenAPI::toJsonValue(m_search_engine_config));
    }
    if (m_solution_type_isSet) {
        obj.insert(QString("solutionType"), ::OpenAPI::toJsonValue(m_solution_type));
    }
    if (m_update_time_isSet) {
        obj.insert(QString("updateTime"), ::OpenAPI::toJsonValue(m_update_time));
    }
    return obj;
}

OAIGoogleCloudDiscoveryengineV1EngineChatEngineConfig OAIGoogleCloudDiscoveryengineV1Engine::getChatEngineConfig() const {
    return m_chat_engine_config;
}
void OAIGoogleCloudDiscoveryengineV1Engine::setChatEngineConfig(const OAIGoogleCloudDiscoveryengineV1EngineChatEngineConfig &chat_engine_config) {
    m_chat_engine_config = chat_engine_config;
    m_chat_engine_config_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1Engine::is_chat_engine_config_Set() const{
    return m_chat_engine_config_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1Engine::is_chat_engine_config_Valid() const{
    return m_chat_engine_config_isValid;
}

OAIGoogleCloudDiscoveryengineV1EngineChatEngineMetadata OAIGoogleCloudDiscoveryengineV1Engine::getChatEngineMetadata() const {
    return m_chat_engine_metadata;
}
void OAIGoogleCloudDiscoveryengineV1Engine::setChatEngineMetadata(const OAIGoogleCloudDiscoveryengineV1EngineChatEngineMetadata &chat_engine_metadata) {
    m_chat_engine_metadata = chat_engine_metadata;
    m_chat_engine_metadata_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1Engine::is_chat_engine_metadata_Set() const{
    return m_chat_engine_metadata_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1Engine::is_chat_engine_metadata_Valid() const{
    return m_chat_engine_metadata_isValid;
}

OAIGoogleCloudDiscoveryengineV1EngineCommonConfig OAIGoogleCloudDiscoveryengineV1Engine::getCommonConfig() const {
    return m_common_config;
}
void OAIGoogleCloudDiscoveryengineV1Engine::setCommonConfig(const OAIGoogleCloudDiscoveryengineV1EngineCommonConfig &common_config) {
    m_common_config = common_config;
    m_common_config_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1Engine::is_common_config_Set() const{
    return m_common_config_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1Engine::is_common_config_Valid() const{
    return m_common_config_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1Engine::getCreateTime() const {
    return m_create_time;
}
void OAIGoogleCloudDiscoveryengineV1Engine::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1Engine::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1Engine::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QList<QString> OAIGoogleCloudDiscoveryengineV1Engine::getDataStoreIds() const {
    return m_data_store_ids;
}
void OAIGoogleCloudDiscoveryengineV1Engine::setDataStoreIds(const QList<QString> &data_store_ids) {
    m_data_store_ids = data_store_ids;
    m_data_store_ids_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1Engine::is_data_store_ids_Set() const{
    return m_data_store_ids_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1Engine::is_data_store_ids_Valid() const{
    return m_data_store_ids_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1Engine::getDisplayName() const {
    return m_display_name;
}
void OAIGoogleCloudDiscoveryengineV1Engine::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1Engine::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1Engine::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1Engine::getIndustryVertical() const {
    return m_industry_vertical;
}
void OAIGoogleCloudDiscoveryengineV1Engine::setIndustryVertical(const QString &industry_vertical) {
    m_industry_vertical = industry_vertical;
    m_industry_vertical_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1Engine::is_industry_vertical_Set() const{
    return m_industry_vertical_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1Engine::is_industry_vertical_Valid() const{
    return m_industry_vertical_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1Engine::getName() const {
    return m_name;
}
void OAIGoogleCloudDiscoveryengineV1Engine::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1Engine::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1Engine::is_name_Valid() const{
    return m_name_isValid;
}

OAIGoogleCloudDiscoveryengineV1EngineSearchEngineConfig OAIGoogleCloudDiscoveryengineV1Engine::getSearchEngineConfig() const {
    return m_search_engine_config;
}
void OAIGoogleCloudDiscoveryengineV1Engine::setSearchEngineConfig(const OAIGoogleCloudDiscoveryengineV1EngineSearchEngineConfig &search_engine_config) {
    m_search_engine_config = search_engine_config;
    m_search_engine_config_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1Engine::is_search_engine_config_Set() const{
    return m_search_engine_config_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1Engine::is_search_engine_config_Valid() const{
    return m_search_engine_config_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1Engine::getSolutionType() const {
    return m_solution_type;
}
void OAIGoogleCloudDiscoveryengineV1Engine::setSolutionType(const QString &solution_type) {
    m_solution_type = solution_type;
    m_solution_type_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1Engine::is_solution_type_Set() const{
    return m_solution_type_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1Engine::is_solution_type_Valid() const{
    return m_solution_type_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1Engine::getUpdateTime() const {
    return m_update_time;
}
void OAIGoogleCloudDiscoveryengineV1Engine::setUpdateTime(const QString &update_time) {
    m_update_time = update_time;
    m_update_time_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1Engine::is_update_time_Set() const{
    return m_update_time_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1Engine::is_update_time_Valid() const{
    return m_update_time_isValid;
}

bool OAIGoogleCloudDiscoveryengineV1Engine::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_chat_engine_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_chat_engine_metadata.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_common_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_data_store_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_industry_vertical_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_search_engine_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_solution_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDiscoveryengineV1Engine::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
