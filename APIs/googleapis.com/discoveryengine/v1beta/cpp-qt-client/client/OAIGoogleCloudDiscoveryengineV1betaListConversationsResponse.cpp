/**
 * Discovery Engine API
 * Discovery Engine API.
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDiscoveryengineV1betaListConversationsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDiscoveryengineV1betaListConversationsResponse::OAIGoogleCloudDiscoveryengineV1betaListConversationsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDiscoveryengineV1betaListConversationsResponse::OAIGoogleCloudDiscoveryengineV1betaListConversationsResponse() {
    this->initializeModel();
}

OAIGoogleCloudDiscoveryengineV1betaListConversationsResponse::~OAIGoogleCloudDiscoveryengineV1betaListConversationsResponse() {}

void OAIGoogleCloudDiscoveryengineV1betaListConversationsResponse::initializeModel() {

    m_conversations_isSet = false;
    m_conversations_isValid = false;

    m_next_page_token_isSet = false;
    m_next_page_token_isValid = false;
}

void OAIGoogleCloudDiscoveryengineV1betaListConversationsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDiscoveryengineV1betaListConversationsResponse::fromJsonObject(QJsonObject json) {

    m_conversations_isValid = ::OpenAPI::fromJsonValue(m_conversations, json[QString("conversations")]);
    m_conversations_isSet = !json[QString("conversations")].isNull() && m_conversations_isValid;

    m_next_page_token_isValid = ::OpenAPI::fromJsonValue(m_next_page_token, json[QString("nextPageToken")]);
    m_next_page_token_isSet = !json[QString("nextPageToken")].isNull() && m_next_page_token_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1betaListConversationsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDiscoveryengineV1betaListConversationsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_conversations.size() > 0) {
        obj.insert(QString("conversations"), ::OpenAPI::toJsonValue(m_conversations));
    }
    if (m_next_page_token_isSet) {
        obj.insert(QString("nextPageToken"), ::OpenAPI::toJsonValue(m_next_page_token));
    }
    return obj;
}

QList<OAIGoogleCloudDiscoveryengineV1betaConversation> OAIGoogleCloudDiscoveryengineV1betaListConversationsResponse::getConversations() const {
    return m_conversations;
}
void OAIGoogleCloudDiscoveryengineV1betaListConversationsResponse::setConversations(const QList<OAIGoogleCloudDiscoveryengineV1betaConversation> &conversations) {
    m_conversations = conversations;
    m_conversations_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaListConversationsResponse::is_conversations_Set() const{
    return m_conversations_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaListConversationsResponse::is_conversations_Valid() const{
    return m_conversations_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1betaListConversationsResponse::getNextPageToken() const {
    return m_next_page_token;
}
void OAIGoogleCloudDiscoveryengineV1betaListConversationsResponse::setNextPageToken(const QString &next_page_token) {
    m_next_page_token = next_page_token;
    m_next_page_token_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaListConversationsResponse::is_next_page_token_Set() const{
    return m_next_page_token_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaListConversationsResponse::is_next_page_token_Valid() const{
    return m_next_page_token_isValid;
}

bool OAIGoogleCloudDiscoveryengineV1betaListConversationsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_conversations.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_page_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDiscoveryengineV1betaListConversationsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
