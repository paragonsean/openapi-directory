/**
 * Discovery Engine API
 * Discovery Engine API.
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDiscoveryengineV1betaSuggestionDenyListEntry.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDiscoveryengineV1betaSuggestionDenyListEntry::OAIGoogleCloudDiscoveryengineV1betaSuggestionDenyListEntry(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDiscoveryengineV1betaSuggestionDenyListEntry::OAIGoogleCloudDiscoveryengineV1betaSuggestionDenyListEntry() {
    this->initializeModel();
}

OAIGoogleCloudDiscoveryengineV1betaSuggestionDenyListEntry::~OAIGoogleCloudDiscoveryengineV1betaSuggestionDenyListEntry() {}

void OAIGoogleCloudDiscoveryengineV1betaSuggestionDenyListEntry::initializeModel() {

    m_block_phrase_isSet = false;
    m_block_phrase_isValid = false;

    m_match_operator_isSet = false;
    m_match_operator_isValid = false;
}

void OAIGoogleCloudDiscoveryengineV1betaSuggestionDenyListEntry::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDiscoveryengineV1betaSuggestionDenyListEntry::fromJsonObject(QJsonObject json) {

    m_block_phrase_isValid = ::OpenAPI::fromJsonValue(m_block_phrase, json[QString("blockPhrase")]);
    m_block_phrase_isSet = !json[QString("blockPhrase")].isNull() && m_block_phrase_isValid;

    m_match_operator_isValid = ::OpenAPI::fromJsonValue(m_match_operator, json[QString("matchOperator")]);
    m_match_operator_isSet = !json[QString("matchOperator")].isNull() && m_match_operator_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1betaSuggestionDenyListEntry::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDiscoveryengineV1betaSuggestionDenyListEntry::asJsonObject() const {
    QJsonObject obj;
    if (m_block_phrase_isSet) {
        obj.insert(QString("blockPhrase"), ::OpenAPI::toJsonValue(m_block_phrase));
    }
    if (m_match_operator_isSet) {
        obj.insert(QString("matchOperator"), ::OpenAPI::toJsonValue(m_match_operator));
    }
    return obj;
}

QString OAIGoogleCloudDiscoveryengineV1betaSuggestionDenyListEntry::getBlockPhrase() const {
    return m_block_phrase;
}
void OAIGoogleCloudDiscoveryengineV1betaSuggestionDenyListEntry::setBlockPhrase(const QString &block_phrase) {
    m_block_phrase = block_phrase;
    m_block_phrase_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaSuggestionDenyListEntry::is_block_phrase_Set() const{
    return m_block_phrase_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaSuggestionDenyListEntry::is_block_phrase_Valid() const{
    return m_block_phrase_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1betaSuggestionDenyListEntry::getMatchOperator() const {
    return m_match_operator;
}
void OAIGoogleCloudDiscoveryengineV1betaSuggestionDenyListEntry::setMatchOperator(const QString &match_operator) {
    m_match_operator = match_operator;
    m_match_operator_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaSuggestionDenyListEntry::is_match_operator_Set() const{
    return m_match_operator_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaSuggestionDenyListEntry::is_match_operator_Valid() const{
    return m_match_operator_isValid;
}

bool OAIGoogleCloudDiscoveryengineV1betaSuggestionDenyListEntry::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_block_phrase_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_match_operator_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDiscoveryengineV1betaSuggestionDenyListEntry::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
