/**
 * Discovery Engine API
 * Discovery Engine API.
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDiscoveryengineV1betaTransactionInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDiscoveryengineV1betaTransactionInfo::OAIGoogleCloudDiscoveryengineV1betaTransactionInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDiscoveryengineV1betaTransactionInfo::OAIGoogleCloudDiscoveryengineV1betaTransactionInfo() {
    this->initializeModel();
}

OAIGoogleCloudDiscoveryengineV1betaTransactionInfo::~OAIGoogleCloudDiscoveryengineV1betaTransactionInfo() {}

void OAIGoogleCloudDiscoveryengineV1betaTransactionInfo::initializeModel() {

    m_cost_isSet = false;
    m_cost_isValid = false;

    m_currency_isSet = false;
    m_currency_isValid = false;

    m_discount_value_isSet = false;
    m_discount_value_isValid = false;

    m_tax_isSet = false;
    m_tax_isValid = false;

    m_transaction_id_isSet = false;
    m_transaction_id_isValid = false;

    m_value_isSet = false;
    m_value_isValid = false;
}

void OAIGoogleCloudDiscoveryengineV1betaTransactionInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDiscoveryengineV1betaTransactionInfo::fromJsonObject(QJsonObject json) {

    m_cost_isValid = ::OpenAPI::fromJsonValue(m_cost, json[QString("cost")]);
    m_cost_isSet = !json[QString("cost")].isNull() && m_cost_isValid;

    m_currency_isValid = ::OpenAPI::fromJsonValue(m_currency, json[QString("currency")]);
    m_currency_isSet = !json[QString("currency")].isNull() && m_currency_isValid;

    m_discount_value_isValid = ::OpenAPI::fromJsonValue(m_discount_value, json[QString("discountValue")]);
    m_discount_value_isSet = !json[QString("discountValue")].isNull() && m_discount_value_isValid;

    m_tax_isValid = ::OpenAPI::fromJsonValue(m_tax, json[QString("tax")]);
    m_tax_isSet = !json[QString("tax")].isNull() && m_tax_isValid;

    m_transaction_id_isValid = ::OpenAPI::fromJsonValue(m_transaction_id, json[QString("transactionId")]);
    m_transaction_id_isSet = !json[QString("transactionId")].isNull() && m_transaction_id_isValid;

    m_value_isValid = ::OpenAPI::fromJsonValue(m_value, json[QString("value")]);
    m_value_isSet = !json[QString("value")].isNull() && m_value_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1betaTransactionInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDiscoveryengineV1betaTransactionInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_cost_isSet) {
        obj.insert(QString("cost"), ::OpenAPI::toJsonValue(m_cost));
    }
    if (m_currency_isSet) {
        obj.insert(QString("currency"), ::OpenAPI::toJsonValue(m_currency));
    }
    if (m_discount_value_isSet) {
        obj.insert(QString("discountValue"), ::OpenAPI::toJsonValue(m_discount_value));
    }
    if (m_tax_isSet) {
        obj.insert(QString("tax"), ::OpenAPI::toJsonValue(m_tax));
    }
    if (m_transaction_id_isSet) {
        obj.insert(QString("transactionId"), ::OpenAPI::toJsonValue(m_transaction_id));
    }
    if (m_value_isSet) {
        obj.insert(QString("value"), ::OpenAPI::toJsonValue(m_value));
    }
    return obj;
}

float OAIGoogleCloudDiscoveryengineV1betaTransactionInfo::getCost() const {
    return m_cost;
}
void OAIGoogleCloudDiscoveryengineV1betaTransactionInfo::setCost(const float &cost) {
    m_cost = cost;
    m_cost_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaTransactionInfo::is_cost_Set() const{
    return m_cost_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaTransactionInfo::is_cost_Valid() const{
    return m_cost_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1betaTransactionInfo::getCurrency() const {
    return m_currency;
}
void OAIGoogleCloudDiscoveryengineV1betaTransactionInfo::setCurrency(const QString &currency) {
    m_currency = currency;
    m_currency_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaTransactionInfo::is_currency_Set() const{
    return m_currency_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaTransactionInfo::is_currency_Valid() const{
    return m_currency_isValid;
}

float OAIGoogleCloudDiscoveryengineV1betaTransactionInfo::getDiscountValue() const {
    return m_discount_value;
}
void OAIGoogleCloudDiscoveryengineV1betaTransactionInfo::setDiscountValue(const float &discount_value) {
    m_discount_value = discount_value;
    m_discount_value_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaTransactionInfo::is_discount_value_Set() const{
    return m_discount_value_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaTransactionInfo::is_discount_value_Valid() const{
    return m_discount_value_isValid;
}

float OAIGoogleCloudDiscoveryengineV1betaTransactionInfo::getTax() const {
    return m_tax;
}
void OAIGoogleCloudDiscoveryengineV1betaTransactionInfo::setTax(const float &tax) {
    m_tax = tax;
    m_tax_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaTransactionInfo::is_tax_Set() const{
    return m_tax_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaTransactionInfo::is_tax_Valid() const{
    return m_tax_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1betaTransactionInfo::getTransactionId() const {
    return m_transaction_id;
}
void OAIGoogleCloudDiscoveryengineV1betaTransactionInfo::setTransactionId(const QString &transaction_id) {
    m_transaction_id = transaction_id;
    m_transaction_id_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaTransactionInfo::is_transaction_id_Set() const{
    return m_transaction_id_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaTransactionInfo::is_transaction_id_Valid() const{
    return m_transaction_id_isValid;
}

float OAIGoogleCloudDiscoveryengineV1betaTransactionInfo::getValue() const {
    return m_value;
}
void OAIGoogleCloudDiscoveryengineV1betaTransactionInfo::setValue(const float &value) {
    m_value = value;
    m_value_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaTransactionInfo::is_value_Set() const{
    return m_value_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaTransactionInfo::is_value_Valid() const{
    return m_value_isValid;
}

bool OAIGoogleCloudDiscoveryengineV1betaTransactionInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cost_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_currency_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_discount_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tax_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transaction_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDiscoveryengineV1betaTransactionInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
