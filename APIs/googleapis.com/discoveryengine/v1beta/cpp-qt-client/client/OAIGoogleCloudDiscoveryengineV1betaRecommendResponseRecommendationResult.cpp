/**
 * Discovery Engine API
 * Discovery Engine API.
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDiscoveryengineV1betaRecommendResponseRecommendationResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDiscoveryengineV1betaRecommendResponseRecommendationResult::OAIGoogleCloudDiscoveryengineV1betaRecommendResponseRecommendationResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDiscoveryengineV1betaRecommendResponseRecommendationResult::OAIGoogleCloudDiscoveryengineV1betaRecommendResponseRecommendationResult() {
    this->initializeModel();
}

OAIGoogleCloudDiscoveryengineV1betaRecommendResponseRecommendationResult::~OAIGoogleCloudDiscoveryengineV1betaRecommendResponseRecommendationResult() {}

void OAIGoogleCloudDiscoveryengineV1betaRecommendResponseRecommendationResult::initializeModel() {

    m_document_isSet = false;
    m_document_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_metadata_isSet = false;
    m_metadata_isValid = false;
}

void OAIGoogleCloudDiscoveryengineV1betaRecommendResponseRecommendationResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDiscoveryengineV1betaRecommendResponseRecommendationResult::fromJsonObject(QJsonObject json) {

    m_document_isValid = ::OpenAPI::fromJsonValue(m_document, json[QString("document")]);
    m_document_isSet = !json[QString("document")].isNull() && m_document_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_metadata_isValid = ::OpenAPI::fromJsonValue(m_metadata, json[QString("metadata")]);
    m_metadata_isSet = !json[QString("metadata")].isNull() && m_metadata_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1betaRecommendResponseRecommendationResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDiscoveryengineV1betaRecommendResponseRecommendationResult::asJsonObject() const {
    QJsonObject obj;
    if (m_document.isSet()) {
        obj.insert(QString("document"), ::OpenAPI::toJsonValue(m_document));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_metadata.size() > 0) {
        obj.insert(QString("metadata"), ::OpenAPI::toJsonValue(m_metadata));
    }
    return obj;
}

OAIGoogleCloudDiscoveryengineV1betaDocument OAIGoogleCloudDiscoveryengineV1betaRecommendResponseRecommendationResult::getDocument() const {
    return m_document;
}
void OAIGoogleCloudDiscoveryengineV1betaRecommendResponseRecommendationResult::setDocument(const OAIGoogleCloudDiscoveryengineV1betaDocument &document) {
    m_document = document;
    m_document_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaRecommendResponseRecommendationResult::is_document_Set() const{
    return m_document_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaRecommendResponseRecommendationResult::is_document_Valid() const{
    return m_document_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1betaRecommendResponseRecommendationResult::getId() const {
    return m_id;
}
void OAIGoogleCloudDiscoveryengineV1betaRecommendResponseRecommendationResult::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaRecommendResponseRecommendationResult::is_id_Set() const{
    return m_id_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaRecommendResponseRecommendationResult::is_id_Valid() const{
    return m_id_isValid;
}

QMap<QString, QJsonValue> OAIGoogleCloudDiscoveryengineV1betaRecommendResponseRecommendationResult::getMetadata() const {
    return m_metadata;
}
void OAIGoogleCloudDiscoveryengineV1betaRecommendResponseRecommendationResult::setMetadata(const QMap<QString, QJsonValue> &metadata) {
    m_metadata = metadata;
    m_metadata_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1betaRecommendResponseRecommendationResult::is_metadata_Set() const{
    return m_metadata_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1betaRecommendResponseRecommendationResult::is_metadata_Valid() const{
    return m_metadata_isValid;
}

bool OAIGoogleCloudDiscoveryengineV1betaRecommendResponseRecommendationResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_document.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_metadata.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDiscoveryengineV1betaRecommendResponseRecommendationResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
