/**
 * Discovery Engine API
 * Discovery Engine API.
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigParsingConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigParsingConfig::OAIGoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigParsingConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigParsingConfig::OAIGoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigParsingConfig() {
    this->initializeModel();
}

OAIGoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigParsingConfig::~OAIGoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigParsingConfig() {}

void OAIGoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigParsingConfig::initializeModel() {

    m_digital_parsing_config_isSet = false;
    m_digital_parsing_config_isValid = false;

    m_layout_parsing_config_isSet = false;
    m_layout_parsing_config_isValid = false;

    m_ocr_parsing_config_isSet = false;
    m_ocr_parsing_config_isValid = false;
}

void OAIGoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigParsingConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigParsingConfig::fromJsonObject(QJsonObject json) {

    m_digital_parsing_config_isValid = ::OpenAPI::fromJsonValue(m_digital_parsing_config, json[QString("digitalParsingConfig")]);
    m_digital_parsing_config_isSet = !json[QString("digitalParsingConfig")].isNull() && m_digital_parsing_config_isValid;

    m_layout_parsing_config_isValid = ::OpenAPI::fromJsonValue(m_layout_parsing_config, json[QString("layoutParsingConfig")]);
    m_layout_parsing_config_isSet = !json[QString("layoutParsingConfig")].isNull() && m_layout_parsing_config_isValid;

    m_ocr_parsing_config_isValid = ::OpenAPI::fromJsonValue(m_ocr_parsing_config, json[QString("ocrParsingConfig")]);
    m_ocr_parsing_config_isSet = !json[QString("ocrParsingConfig")].isNull() && m_ocr_parsing_config_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigParsingConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigParsingConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_digital_parsing_config_isSet) {
        obj.insert(QString("digitalParsingConfig"), ::OpenAPI::toJsonValue(m_digital_parsing_config));
    }
    if (m_layout_parsing_config_isSet) {
        obj.insert(QString("layoutParsingConfig"), ::OpenAPI::toJsonValue(m_layout_parsing_config));
    }
    if (m_ocr_parsing_config.isSet()) {
        obj.insert(QString("ocrParsingConfig"), ::OpenAPI::toJsonValue(m_ocr_parsing_config));
    }
    return obj;
}

OAIObject OAIGoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigParsingConfig::getDigitalParsingConfig() const {
    return m_digital_parsing_config;
}
void OAIGoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigParsingConfig::setDigitalParsingConfig(const OAIObject &digital_parsing_config) {
    m_digital_parsing_config = digital_parsing_config;
    m_digital_parsing_config_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigParsingConfig::is_digital_parsing_config_Set() const{
    return m_digital_parsing_config_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigParsingConfig::is_digital_parsing_config_Valid() const{
    return m_digital_parsing_config_isValid;
}

OAIObject OAIGoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigParsingConfig::getLayoutParsingConfig() const {
    return m_layout_parsing_config;
}
void OAIGoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigParsingConfig::setLayoutParsingConfig(const OAIObject &layout_parsing_config) {
    m_layout_parsing_config = layout_parsing_config;
    m_layout_parsing_config_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigParsingConfig::is_layout_parsing_config_Set() const{
    return m_layout_parsing_config_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigParsingConfig::is_layout_parsing_config_Valid() const{
    return m_layout_parsing_config_isValid;
}

OAIGoogleCloudDiscoveryengineV1alphaOcrParsingConfig OAIGoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigParsingConfig::getOcrParsingConfig() const {
    return m_ocr_parsing_config;
}
void OAIGoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigParsingConfig::setOcrParsingConfig(const OAIGoogleCloudDiscoveryengineV1alphaOcrParsingConfig &ocr_parsing_config) {
    m_ocr_parsing_config = ocr_parsing_config;
    m_ocr_parsing_config_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigParsingConfig::is_ocr_parsing_config_Set() const{
    return m_ocr_parsing_config_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigParsingConfig::is_ocr_parsing_config_Valid() const{
    return m_ocr_parsing_config_isValid;
}

bool OAIGoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigParsingConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_digital_parsing_config_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_layout_parsing_config_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ocr_parsing_config.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigParsingConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
