# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_discoveryengine_v1alpha_complete_query_response_query_suggestion import GoogleCloudDiscoveryengineV1alphaCompleteQueryResponseQuerySuggestion
from openapi_server import util


class GoogleCloudDiscoveryengineV1alphaCompleteQueryResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, query_suggestions: List[GoogleCloudDiscoveryengineV1alphaCompleteQueryResponseQuerySuggestion]=None, tail_match_triggered: bool=None):
        """GoogleCloudDiscoveryengineV1alphaCompleteQueryResponse - a model defined in OpenAPI

        :param query_suggestions: The query_suggestions of this GoogleCloudDiscoveryengineV1alphaCompleteQueryResponse.
        :param tail_match_triggered: The tail_match_triggered of this GoogleCloudDiscoveryengineV1alphaCompleteQueryResponse.
        """
        self.openapi_types = {
            'query_suggestions': List[GoogleCloudDiscoveryengineV1alphaCompleteQueryResponseQuerySuggestion],
            'tail_match_triggered': bool
        }

        self.attribute_map = {
            'query_suggestions': 'querySuggestions',
            'tail_match_triggered': 'tailMatchTriggered'
        }

        self._query_suggestions = query_suggestions
        self._tail_match_triggered = tail_match_triggered

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDiscoveryengineV1alphaCompleteQueryResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDiscoveryengineV1alphaCompleteQueryResponse of this GoogleCloudDiscoveryengineV1alphaCompleteQueryResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def query_suggestions(self):
        """Gets the query_suggestions of this GoogleCloudDiscoveryengineV1alphaCompleteQueryResponse.

        Results of the matched query suggestions. The result list is ordered and the first result is a top suggestion.

        :return: The query_suggestions of this GoogleCloudDiscoveryengineV1alphaCompleteQueryResponse.
        :rtype: List[GoogleCloudDiscoveryengineV1alphaCompleteQueryResponseQuerySuggestion]
        """
        return self._query_suggestions

    @query_suggestions.setter
    def query_suggestions(self, query_suggestions):
        """Sets the query_suggestions of this GoogleCloudDiscoveryengineV1alphaCompleteQueryResponse.

        Results of the matched query suggestions. The result list is ordered and the first result is a top suggestion.

        :param query_suggestions: The query_suggestions of this GoogleCloudDiscoveryengineV1alphaCompleteQueryResponse.
        :type query_suggestions: List[GoogleCloudDiscoveryengineV1alphaCompleteQueryResponseQuerySuggestion]
        """

        self._query_suggestions = query_suggestions

    @property
    def tail_match_triggered(self):
        """Gets the tail_match_triggered of this GoogleCloudDiscoveryengineV1alphaCompleteQueryResponse.

        True if the returned suggestions are all tail suggestions. For tail matching to be triggered, include_tail_suggestions in the request must be true and there must be no suggestions that match the full query.

        :return: The tail_match_triggered of this GoogleCloudDiscoveryengineV1alphaCompleteQueryResponse.
        :rtype: bool
        """
        return self._tail_match_triggered

    @tail_match_triggered.setter
    def tail_match_triggered(self, tail_match_triggered):
        """Sets the tail_match_triggered of this GoogleCloudDiscoveryengineV1alphaCompleteQueryResponse.

        True if the returned suggestions are all tail suggestions. For tail matching to be triggered, include_tail_suggestions in the request must be true and there must be no suggestions that match the full query.

        :param tail_match_triggered: The tail_match_triggered of this GoogleCloudDiscoveryengineV1alphaCompleteQueryResponse.
        :type tail_match_triggered: bool
        """

        self._tail_match_triggered = tail_match_triggered
