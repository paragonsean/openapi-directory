# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_discoveryengine_v1beta_document_processing_config_parsing_config import GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigParsingConfig
from openapi_server import util


class GoogleCloudDiscoveryengineV1betaDocumentProcessingConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, default_parsing_config: GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigParsingConfig=None, name: str=None, parsing_config_overrides: Dict[str, GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigParsingConfig]=None):
        """GoogleCloudDiscoveryengineV1betaDocumentProcessingConfig - a model defined in OpenAPI

        :param default_parsing_config: The default_parsing_config of this GoogleCloudDiscoveryengineV1betaDocumentProcessingConfig.
        :param name: The name of this GoogleCloudDiscoveryengineV1betaDocumentProcessingConfig.
        :param parsing_config_overrides: The parsing_config_overrides of this GoogleCloudDiscoveryengineV1betaDocumentProcessingConfig.
        """
        self.openapi_types = {
            'default_parsing_config': GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigParsingConfig,
            'name': str,
            'parsing_config_overrides': Dict[str, GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigParsingConfig]
        }

        self.attribute_map = {
            'default_parsing_config': 'defaultParsingConfig',
            'name': 'name',
            'parsing_config_overrides': 'parsingConfigOverrides'
        }

        self._default_parsing_config = default_parsing_config
        self._name = name
        self._parsing_config_overrides = parsing_config_overrides

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDiscoveryengineV1betaDocumentProcessingConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDiscoveryengineV1betaDocumentProcessingConfig of this GoogleCloudDiscoveryengineV1betaDocumentProcessingConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def default_parsing_config(self):
        """Gets the default_parsing_config of this GoogleCloudDiscoveryengineV1betaDocumentProcessingConfig.


        :return: The default_parsing_config of this GoogleCloudDiscoveryengineV1betaDocumentProcessingConfig.
        :rtype: GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigParsingConfig
        """
        return self._default_parsing_config

    @default_parsing_config.setter
    def default_parsing_config(self, default_parsing_config):
        """Sets the default_parsing_config of this GoogleCloudDiscoveryengineV1betaDocumentProcessingConfig.


        :param default_parsing_config: The default_parsing_config of this GoogleCloudDiscoveryengineV1betaDocumentProcessingConfig.
        :type default_parsing_config: GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigParsingConfig
        """

        self._default_parsing_config = default_parsing_config

    @property
    def name(self):
        """Gets the name of this GoogleCloudDiscoveryengineV1betaDocumentProcessingConfig.

        The full resource name of the Document Processing Config. Format: `projects/*/locations/*/collections/*/dataStores/*/documentProcessingConfig`.

        :return: The name of this GoogleCloudDiscoveryengineV1betaDocumentProcessingConfig.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudDiscoveryengineV1betaDocumentProcessingConfig.

        The full resource name of the Document Processing Config. Format: `projects/*/locations/*/collections/*/dataStores/*/documentProcessingConfig`.

        :param name: The name of this GoogleCloudDiscoveryengineV1betaDocumentProcessingConfig.
        :type name: str
        """

        self._name = name

    @property
    def parsing_config_overrides(self):
        """Gets the parsing_config_overrides of this GoogleCloudDiscoveryengineV1betaDocumentProcessingConfig.

        Map from file type to override the default parsing configuration based on the file type. Supported keys: * `pdf`: Override parsing config for PDF files, either digital parsing, ocr parsing or layout parsing is supported. * `html`: Override parsing config for HTML files, only digital parsing and or layout parsing are supported. * `docx`: Override parsing config for DOCX files, only digital parsing and or layout parsing are supported.

        :return: The parsing_config_overrides of this GoogleCloudDiscoveryengineV1betaDocumentProcessingConfig.
        :rtype: Dict[str, GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigParsingConfig]
        """
        return self._parsing_config_overrides

    @parsing_config_overrides.setter
    def parsing_config_overrides(self, parsing_config_overrides):
        """Sets the parsing_config_overrides of this GoogleCloudDiscoveryengineV1betaDocumentProcessingConfig.

        Map from file type to override the default parsing configuration based on the file type. Supported keys: * `pdf`: Override parsing config for PDF files, either digital parsing, ocr parsing or layout parsing is supported. * `html`: Override parsing config for HTML files, only digital parsing and or layout parsing are supported. * `docx`: Override parsing config for DOCX files, only digital parsing and or layout parsing are supported.

        :param parsing_config_overrides: The parsing_config_overrides of this GoogleCloudDiscoveryengineV1betaDocumentProcessingConfig.
        :type parsing_config_overrides: Dict[str, GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigParsingConfig]
        """

        self._parsing_config_overrides = parsing_config_overrides
