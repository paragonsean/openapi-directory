# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDiscoveryengineV1alphaSuggestionDenyListEntry(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, block_phrase: str=None, match_operator: str=None):
        """GoogleCloudDiscoveryengineV1alphaSuggestionDenyListEntry - a model defined in OpenAPI

        :param block_phrase: The block_phrase of this GoogleCloudDiscoveryengineV1alphaSuggestionDenyListEntry.
        :param match_operator: The match_operator of this GoogleCloudDiscoveryengineV1alphaSuggestionDenyListEntry.
        """
        self.openapi_types = {
            'block_phrase': str,
            'match_operator': str
        }

        self.attribute_map = {
            'block_phrase': 'blockPhrase',
            'match_operator': 'matchOperator'
        }

        self._block_phrase = block_phrase
        self._match_operator = match_operator

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDiscoveryengineV1alphaSuggestionDenyListEntry':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDiscoveryengineV1alphaSuggestionDenyListEntry of this GoogleCloudDiscoveryengineV1alphaSuggestionDenyListEntry.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def block_phrase(self):
        """Gets the block_phrase of this GoogleCloudDiscoveryengineV1alphaSuggestionDenyListEntry.

        Required. Phrase to block from suggestions served. Can be maximum 125 characters.

        :return: The block_phrase of this GoogleCloudDiscoveryengineV1alphaSuggestionDenyListEntry.
        :rtype: str
        """
        return self._block_phrase

    @block_phrase.setter
    def block_phrase(self, block_phrase):
        """Sets the block_phrase of this GoogleCloudDiscoveryengineV1alphaSuggestionDenyListEntry.

        Required. Phrase to block from suggestions served. Can be maximum 125 characters.

        :param block_phrase: The block_phrase of this GoogleCloudDiscoveryengineV1alphaSuggestionDenyListEntry.
        :type block_phrase: str
        """

        self._block_phrase = block_phrase

    @property
    def match_operator(self):
        """Gets the match_operator of this GoogleCloudDiscoveryengineV1alphaSuggestionDenyListEntry.

        Required. The match operator to apply for this phrase. Whether to block the exact phrase, or block any suggestions containing this phrase.

        :return: The match_operator of this GoogleCloudDiscoveryengineV1alphaSuggestionDenyListEntry.
        :rtype: str
        """
        return self._match_operator

    @match_operator.setter
    def match_operator(self, match_operator):
        """Sets the match_operator of this GoogleCloudDiscoveryengineV1alphaSuggestionDenyListEntry.

        Required. The match operator to apply for this phrase. Whether to block the exact phrase, or block any suggestions containing this phrase.

        :param match_operator: The match_operator of this GoogleCloudDiscoveryengineV1alphaSuggestionDenyListEntry.
        :type match_operator: str
        """
        allowed_values = ["MATCH_OPERATOR_UNSPECIFIED", "EXACT_MATCH", "CONTAINS"]  # noqa: E501
        if match_operator not in allowed_values:
            raise ValueError(
                "Invalid value for `match_operator` ({0}), must be one of {1}"
                .format(match_operator, allowed_values)
            )

        self._match_operator = match_operator
