# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_rpc_status import GoogleRpcStatus
from openapi_server import util


class GoogleCloudDiscoveryengineV1PurgeSuggestionDenyListEntriesResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, error_samples: List[GoogleRpcStatus]=None, purge_count: str=None):
        """GoogleCloudDiscoveryengineV1PurgeSuggestionDenyListEntriesResponse - a model defined in OpenAPI

        :param error_samples: The error_samples of this GoogleCloudDiscoveryengineV1PurgeSuggestionDenyListEntriesResponse.
        :param purge_count: The purge_count of this GoogleCloudDiscoveryengineV1PurgeSuggestionDenyListEntriesResponse.
        """
        self.openapi_types = {
            'error_samples': List[GoogleRpcStatus],
            'purge_count': str
        }

        self.attribute_map = {
            'error_samples': 'errorSamples',
            'purge_count': 'purgeCount'
        }

        self._error_samples = error_samples
        self._purge_count = purge_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDiscoveryengineV1PurgeSuggestionDenyListEntriesResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDiscoveryengineV1PurgeSuggestionDenyListEntriesResponse of this GoogleCloudDiscoveryengineV1PurgeSuggestionDenyListEntriesResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def error_samples(self):
        """Gets the error_samples of this GoogleCloudDiscoveryengineV1PurgeSuggestionDenyListEntriesResponse.

        A sample of errors encountered while processing the request.

        :return: The error_samples of this GoogleCloudDiscoveryengineV1PurgeSuggestionDenyListEntriesResponse.
        :rtype: List[GoogleRpcStatus]
        """
        return self._error_samples

    @error_samples.setter
    def error_samples(self, error_samples):
        """Sets the error_samples of this GoogleCloudDiscoveryengineV1PurgeSuggestionDenyListEntriesResponse.

        A sample of errors encountered while processing the request.

        :param error_samples: The error_samples of this GoogleCloudDiscoveryengineV1PurgeSuggestionDenyListEntriesResponse.
        :type error_samples: List[GoogleRpcStatus]
        """

        self._error_samples = error_samples

    @property
    def purge_count(self):
        """Gets the purge_count of this GoogleCloudDiscoveryengineV1PurgeSuggestionDenyListEntriesResponse.

        Number of suggestion deny list entries purged.

        :return: The purge_count of this GoogleCloudDiscoveryengineV1PurgeSuggestionDenyListEntriesResponse.
        :rtype: str
        """
        return self._purge_count

    @purge_count.setter
    def purge_count(self, purge_count):
        """Sets the purge_count of this GoogleCloudDiscoveryengineV1PurgeSuggestionDenyListEntriesResponse.

        Number of suggestion deny list entries purged.

        :param purge_count: The purge_count of this GoogleCloudDiscoveryengineV1PurgeSuggestionDenyListEntriesResponse.
        :type purge_count: str
        """

        self._purge_count = purge_count
