# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDiscoveryengineV1alphaPrincipal(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, group_id: str=None, user_id: str=None):
        """GoogleCloudDiscoveryengineV1alphaPrincipal - a model defined in OpenAPI

        :param group_id: The group_id of this GoogleCloudDiscoveryengineV1alphaPrincipal.
        :param user_id: The user_id of this GoogleCloudDiscoveryengineV1alphaPrincipal.
        """
        self.openapi_types = {
            'group_id': str,
            'user_id': str
        }

        self.attribute_map = {
            'group_id': 'groupId',
            'user_id': 'userId'
        }

        self._group_id = group_id
        self._user_id = user_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDiscoveryengineV1alphaPrincipal':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDiscoveryengineV1alphaPrincipal of this GoogleCloudDiscoveryengineV1alphaPrincipal.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def group_id(self):
        """Gets the group_id of this GoogleCloudDiscoveryengineV1alphaPrincipal.

        Group identifier. For Google Workspace user account, group_id should be the google workspace group email. For non-google identity provider user account, group_id is the mapped group identifier configured during the workforcepool config.

        :return: The group_id of this GoogleCloudDiscoveryengineV1alphaPrincipal.
        :rtype: str
        """
        return self._group_id

    @group_id.setter
    def group_id(self, group_id):
        """Sets the group_id of this GoogleCloudDiscoveryengineV1alphaPrincipal.

        Group identifier. For Google Workspace user account, group_id should be the google workspace group email. For non-google identity provider user account, group_id is the mapped group identifier configured during the workforcepool config.

        :param group_id: The group_id of this GoogleCloudDiscoveryengineV1alphaPrincipal.
        :type group_id: str
        """

        self._group_id = group_id

    @property
    def user_id(self):
        """Gets the user_id of this GoogleCloudDiscoveryengineV1alphaPrincipal.

        User identifier. For Google Workspace user account, user_id should be the google workspace user email. For non-google identity provider user account, user_id is the mapped user identifier configured during the workforcepool config.

        :return: The user_id of this GoogleCloudDiscoveryengineV1alphaPrincipal.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this GoogleCloudDiscoveryengineV1alphaPrincipal.

        User identifier. For Google Workspace user account, user_id should be the google workspace user email. For non-google identity provider user account, user_id is the mapped user identifier configured during the workforcepool config.

        :param user_id: The user_id of this GoogleCloudDiscoveryengineV1alphaPrincipal.
        :type user_id: str
        """

        self._user_id = user_id
