# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDiscoveryengineV1alphaSearchRequestQueryExpansionSpec(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, condition: str=None, pin_unexpanded_results: bool=None):
        """GoogleCloudDiscoveryengineV1alphaSearchRequestQueryExpansionSpec - a model defined in OpenAPI

        :param condition: The condition of this GoogleCloudDiscoveryengineV1alphaSearchRequestQueryExpansionSpec.
        :param pin_unexpanded_results: The pin_unexpanded_results of this GoogleCloudDiscoveryengineV1alphaSearchRequestQueryExpansionSpec.
        """
        self.openapi_types = {
            'condition': str,
            'pin_unexpanded_results': bool
        }

        self.attribute_map = {
            'condition': 'condition',
            'pin_unexpanded_results': 'pinUnexpandedResults'
        }

        self._condition = condition
        self._pin_unexpanded_results = pin_unexpanded_results

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDiscoveryengineV1alphaSearchRequestQueryExpansionSpec':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDiscoveryengineV1alphaSearchRequestQueryExpansionSpec of this GoogleCloudDiscoveryengineV1alphaSearchRequestQueryExpansionSpec.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def condition(self):
        """Gets the condition of this GoogleCloudDiscoveryengineV1alphaSearchRequestQueryExpansionSpec.

        The condition under which query expansion should occur. Default to Condition.DISABLED.

        :return: The condition of this GoogleCloudDiscoveryengineV1alphaSearchRequestQueryExpansionSpec.
        :rtype: str
        """
        return self._condition

    @condition.setter
    def condition(self, condition):
        """Sets the condition of this GoogleCloudDiscoveryengineV1alphaSearchRequestQueryExpansionSpec.

        The condition under which query expansion should occur. Default to Condition.DISABLED.

        :param condition: The condition of this GoogleCloudDiscoveryengineV1alphaSearchRequestQueryExpansionSpec.
        :type condition: str
        """
        allowed_values = ["CONDITION_UNSPECIFIED", "DISABLED", "AUTO"]  # noqa: E501
        if condition not in allowed_values:
            raise ValueError(
                "Invalid value for `condition` ({0}), must be one of {1}"
                .format(condition, allowed_values)
            )

        self._condition = condition

    @property
    def pin_unexpanded_results(self):
        """Gets the pin_unexpanded_results of this GoogleCloudDiscoveryengineV1alphaSearchRequestQueryExpansionSpec.

        Whether to pin unexpanded results. If this field is set to true, unexpanded products are always at the top of the search results, followed by the expanded results.

        :return: The pin_unexpanded_results of this GoogleCloudDiscoveryengineV1alphaSearchRequestQueryExpansionSpec.
        :rtype: bool
        """
        return self._pin_unexpanded_results

    @pin_unexpanded_results.setter
    def pin_unexpanded_results(self, pin_unexpanded_results):
        """Sets the pin_unexpanded_results of this GoogleCloudDiscoveryengineV1alphaSearchRequestQueryExpansionSpec.

        Whether to pin unexpanded results. If this field is set to true, unexpanded products are always at the top of the search results, followed by the expanded results.

        :param pin_unexpanded_results: The pin_unexpanded_results of this GoogleCloudDiscoveryengineV1alphaSearchRequestQueryExpansionSpec.
        :type pin_unexpanded_results: bool
        """

        self._pin_unexpanded_results = pin_unexpanded_results
