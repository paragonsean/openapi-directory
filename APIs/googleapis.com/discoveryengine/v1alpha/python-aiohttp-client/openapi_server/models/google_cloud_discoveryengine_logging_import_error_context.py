# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDiscoveryengineLoggingImportErrorContext(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, document: str=None, gcs_path: str=None, line_number: str=None, operation: str=None, user_event: str=None):
        """GoogleCloudDiscoveryengineLoggingImportErrorContext - a model defined in OpenAPI

        :param document: The document of this GoogleCloudDiscoveryengineLoggingImportErrorContext.
        :param gcs_path: The gcs_path of this GoogleCloudDiscoveryengineLoggingImportErrorContext.
        :param line_number: The line_number of this GoogleCloudDiscoveryengineLoggingImportErrorContext.
        :param operation: The operation of this GoogleCloudDiscoveryengineLoggingImportErrorContext.
        :param user_event: The user_event of this GoogleCloudDiscoveryengineLoggingImportErrorContext.
        """
        self.openapi_types = {
            'document': str,
            'gcs_path': str,
            'line_number': str,
            'operation': str,
            'user_event': str
        }

        self.attribute_map = {
            'document': 'document',
            'gcs_path': 'gcsPath',
            'line_number': 'lineNumber',
            'operation': 'operation',
            'user_event': 'userEvent'
        }

        self._document = document
        self._gcs_path = gcs_path
        self._line_number = line_number
        self._operation = operation
        self._user_event = user_event

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDiscoveryengineLoggingImportErrorContext':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDiscoveryengineLoggingImportErrorContext of this GoogleCloudDiscoveryengineLoggingImportErrorContext.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def document(self):
        """Gets the document of this GoogleCloudDiscoveryengineLoggingImportErrorContext.

        The detailed content which caused the error on importing a document.

        :return: The document of this GoogleCloudDiscoveryengineLoggingImportErrorContext.
        :rtype: str
        """
        return self._document

    @document.setter
    def document(self, document):
        """Sets the document of this GoogleCloudDiscoveryengineLoggingImportErrorContext.

        The detailed content which caused the error on importing a document.

        :param document: The document of this GoogleCloudDiscoveryengineLoggingImportErrorContext.
        :type document: str
        """

        self._document = document

    @property
    def gcs_path(self):
        """Gets the gcs_path of this GoogleCloudDiscoveryengineLoggingImportErrorContext.

        Google Cloud Storage file path of the import source. Can be set for batch operation error.

        :return: The gcs_path of this GoogleCloudDiscoveryengineLoggingImportErrorContext.
        :rtype: str
        """
        return self._gcs_path

    @gcs_path.setter
    def gcs_path(self, gcs_path):
        """Sets the gcs_path of this GoogleCloudDiscoveryengineLoggingImportErrorContext.

        Google Cloud Storage file path of the import source. Can be set for batch operation error.

        :param gcs_path: The gcs_path of this GoogleCloudDiscoveryengineLoggingImportErrorContext.
        :type gcs_path: str
        """

        self._gcs_path = gcs_path

    @property
    def line_number(self):
        """Gets the line_number of this GoogleCloudDiscoveryengineLoggingImportErrorContext.

        Line number of the content in file. Should be empty for permission or batch operation error.

        :return: The line_number of this GoogleCloudDiscoveryengineLoggingImportErrorContext.
        :rtype: str
        """
        return self._line_number

    @line_number.setter
    def line_number(self, line_number):
        """Sets the line_number of this GoogleCloudDiscoveryengineLoggingImportErrorContext.

        Line number of the content in file. Should be empty for permission or batch operation error.

        :param line_number: The line_number of this GoogleCloudDiscoveryengineLoggingImportErrorContext.
        :type line_number: str
        """

        self._line_number = line_number

    @property
    def operation(self):
        """Gets the operation of this GoogleCloudDiscoveryengineLoggingImportErrorContext.

        The operation resource name of the LRO.

        :return: The operation of this GoogleCloudDiscoveryengineLoggingImportErrorContext.
        :rtype: str
        """
        return self._operation

    @operation.setter
    def operation(self, operation):
        """Sets the operation of this GoogleCloudDiscoveryengineLoggingImportErrorContext.

        The operation resource name of the LRO.

        :param operation: The operation of this GoogleCloudDiscoveryengineLoggingImportErrorContext.
        :type operation: str
        """

        self._operation = operation

    @property
    def user_event(self):
        """Gets the user_event of this GoogleCloudDiscoveryengineLoggingImportErrorContext.

        The detailed content which caused the error on importing a user event.

        :return: The user_event of this GoogleCloudDiscoveryengineLoggingImportErrorContext.
        :rtype: str
        """
        return self._user_event

    @user_event.setter
    def user_event(self, user_event):
        """Sets the user_event of this GoogleCloudDiscoveryengineLoggingImportErrorContext.

        The detailed content which caused the error on importing a user event.

        :param user_event: The user_event of this GoogleCloudDiscoveryengineLoggingImportErrorContext.
        :type user_event: str
        """

        self._user_event = user_event
