# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_discoveryengine_v1beta_import_error_config import GoogleCloudDiscoveryengineV1betaImportErrorConfig
from openapi_server.models.google_rpc_status import GoogleRpcStatus
from openapi_server import util


class GoogleCloudDiscoveryengineV1betaImportUserEventsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, error_config: GoogleCloudDiscoveryengineV1betaImportErrorConfig=None, error_samples: List[GoogleRpcStatus]=None, joined_events_count: str=None, unjoined_events_count: str=None):
        """GoogleCloudDiscoveryengineV1betaImportUserEventsResponse - a model defined in OpenAPI

        :param error_config: The error_config of this GoogleCloudDiscoveryengineV1betaImportUserEventsResponse.
        :param error_samples: The error_samples of this GoogleCloudDiscoveryengineV1betaImportUserEventsResponse.
        :param joined_events_count: The joined_events_count of this GoogleCloudDiscoveryengineV1betaImportUserEventsResponse.
        :param unjoined_events_count: The unjoined_events_count of this GoogleCloudDiscoveryengineV1betaImportUserEventsResponse.
        """
        self.openapi_types = {
            'error_config': GoogleCloudDiscoveryengineV1betaImportErrorConfig,
            'error_samples': List[GoogleRpcStatus],
            'joined_events_count': str,
            'unjoined_events_count': str
        }

        self.attribute_map = {
            'error_config': 'errorConfig',
            'error_samples': 'errorSamples',
            'joined_events_count': 'joinedEventsCount',
            'unjoined_events_count': 'unjoinedEventsCount'
        }

        self._error_config = error_config
        self._error_samples = error_samples
        self._joined_events_count = joined_events_count
        self._unjoined_events_count = unjoined_events_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDiscoveryengineV1betaImportUserEventsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDiscoveryengineV1betaImportUserEventsResponse of this GoogleCloudDiscoveryengineV1betaImportUserEventsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def error_config(self):
        """Gets the error_config of this GoogleCloudDiscoveryengineV1betaImportUserEventsResponse.


        :return: The error_config of this GoogleCloudDiscoveryengineV1betaImportUserEventsResponse.
        :rtype: GoogleCloudDiscoveryengineV1betaImportErrorConfig
        """
        return self._error_config

    @error_config.setter
    def error_config(self, error_config):
        """Sets the error_config of this GoogleCloudDiscoveryengineV1betaImportUserEventsResponse.


        :param error_config: The error_config of this GoogleCloudDiscoveryengineV1betaImportUserEventsResponse.
        :type error_config: GoogleCloudDiscoveryengineV1betaImportErrorConfig
        """

        self._error_config = error_config

    @property
    def error_samples(self):
        """Gets the error_samples of this GoogleCloudDiscoveryengineV1betaImportUserEventsResponse.

        A sample of errors encountered while processing the request.

        :return: The error_samples of this GoogleCloudDiscoveryengineV1betaImportUserEventsResponse.
        :rtype: List[GoogleRpcStatus]
        """
        return self._error_samples

    @error_samples.setter
    def error_samples(self, error_samples):
        """Sets the error_samples of this GoogleCloudDiscoveryengineV1betaImportUserEventsResponse.

        A sample of errors encountered while processing the request.

        :param error_samples: The error_samples of this GoogleCloudDiscoveryengineV1betaImportUserEventsResponse.
        :type error_samples: List[GoogleRpcStatus]
        """

        self._error_samples = error_samples

    @property
    def joined_events_count(self):
        """Gets the joined_events_count of this GoogleCloudDiscoveryengineV1betaImportUserEventsResponse.

        Count of user events imported with complete existing Documents.

        :return: The joined_events_count of this GoogleCloudDiscoveryengineV1betaImportUserEventsResponse.
        :rtype: str
        """
        return self._joined_events_count

    @joined_events_count.setter
    def joined_events_count(self, joined_events_count):
        """Sets the joined_events_count of this GoogleCloudDiscoveryengineV1betaImportUserEventsResponse.

        Count of user events imported with complete existing Documents.

        :param joined_events_count: The joined_events_count of this GoogleCloudDiscoveryengineV1betaImportUserEventsResponse.
        :type joined_events_count: str
        """

        self._joined_events_count = joined_events_count

    @property
    def unjoined_events_count(self):
        """Gets the unjoined_events_count of this GoogleCloudDiscoveryengineV1betaImportUserEventsResponse.

        Count of user events imported, but with Document information not found in the existing Branch.

        :return: The unjoined_events_count of this GoogleCloudDiscoveryengineV1betaImportUserEventsResponse.
        :rtype: str
        """
        return self._unjoined_events_count

    @unjoined_events_count.setter
    def unjoined_events_count(self, unjoined_events_count):
        """Sets the unjoined_events_count of this GoogleCloudDiscoveryengineV1betaImportUserEventsResponse.

        Count of user events imported, but with Document information not found in the existing Branch.

        :param unjoined_events_count: The unjoined_events_count of this GoogleCloudDiscoveryengineV1betaImportUserEventsResponse.
        :type unjoined_events_count: str
        """

        self._unjoined_events_count = unjoined_events_count
