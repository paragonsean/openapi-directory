# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_discoveryengine_v1alpha_engine_media_recommendation_engine_config_optimization_objective_config import GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfigOptimizationObjectiveConfig
from openapi_server import util


class GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, optimization_objective: str=None, optimization_objective_config: GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfigOptimizationObjectiveConfig=None, training_state: str=None, type: str=None):
        """GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig - a model defined in OpenAPI

        :param optimization_objective: The optimization_objective of this GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig.
        :param optimization_objective_config: The optimization_objective_config of this GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig.
        :param training_state: The training_state of this GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig.
        :param type: The type of this GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig.
        """
        self.openapi_types = {
            'optimization_objective': str,
            'optimization_objective_config': GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfigOptimizationObjectiveConfig,
            'training_state': str,
            'type': str
        }

        self.attribute_map = {
            'optimization_objective': 'optimizationObjective',
            'optimization_objective_config': 'optimizationObjectiveConfig',
            'training_state': 'trainingState',
            'type': 'type'
        }

        self._optimization_objective = optimization_objective
        self._optimization_objective_config = optimization_objective_config
        self._training_state = training_state
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig of this GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def optimization_objective(self):
        """Gets the optimization_objective of this GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig.

        The optimization objective. e.g., `cvr`. This field together with optimization_objective describe engine metadata to use to control engine training and serving. Currently supported values: `ctr`, `cvr`. If not specified, we choose default based on engine type. Default depends on type of recommendation: `recommended-for-you` => `ctr` `others-you-may-like` => `ctr`

        :return: The optimization_objective of this GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig.
        :rtype: str
        """
        return self._optimization_objective

    @optimization_objective.setter
    def optimization_objective(self, optimization_objective):
        """Sets the optimization_objective of this GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig.

        The optimization objective. e.g., `cvr`. This field together with optimization_objective describe engine metadata to use to control engine training and serving. Currently supported values: `ctr`, `cvr`. If not specified, we choose default based on engine type. Default depends on type of recommendation: `recommended-for-you` => `ctr` `others-you-may-like` => `ctr`

        :param optimization_objective: The optimization_objective of this GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig.
        :type optimization_objective: str
        """

        self._optimization_objective = optimization_objective

    @property
    def optimization_objective_config(self):
        """Gets the optimization_objective_config of this GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig.


        :return: The optimization_objective_config of this GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig.
        :rtype: GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfigOptimizationObjectiveConfig
        """
        return self._optimization_objective_config

    @optimization_objective_config.setter
    def optimization_objective_config(self, optimization_objective_config):
        """Sets the optimization_objective_config of this GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig.


        :param optimization_objective_config: The optimization_objective_config of this GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig.
        :type optimization_objective_config: GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfigOptimizationObjectiveConfig
        """

        self._optimization_objective_config = optimization_objective_config

    @property
    def training_state(self):
        """Gets the training_state of this GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig.

        The training state that the engine is in (e.g. `TRAINING` or `PAUSED`). Since part of the cost of running the service is frequency of training - this can be used to determine when to train engine in order to control cost. If not specified: the default value for `CreateEngine` method is `TRAINING`. The default value for `UpdateEngine` method is to keep the state the same as before.

        :return: The training_state of this GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig.
        :rtype: str
        """
        return self._training_state

    @training_state.setter
    def training_state(self, training_state):
        """Sets the training_state of this GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig.

        The training state that the engine is in (e.g. `TRAINING` or `PAUSED`). Since part of the cost of running the service is frequency of training - this can be used to determine when to train engine in order to control cost. If not specified: the default value for `CreateEngine` method is `TRAINING`. The default value for `UpdateEngine` method is to keep the state the same as before.

        :param training_state: The training_state of this GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig.
        :type training_state: str
        """
        allowed_values = ["TRAINING_STATE_UNSPECIFIED", "PAUSED", "TRAINING"]  # noqa: E501
        if training_state not in allowed_values:
            raise ValueError(
                "Invalid value for `training_state` ({0}), must be one of {1}"
                .format(training_state, allowed_values)
            )

        self._training_state = training_state

    @property
    def type(self):
        """Gets the type of this GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig.

        Required. The type of engine. e.g., `recommended-for-you`. This field together with optimization_objective describe engine metadata to use to control engine training and serving. Currently supported values: `recommended-for-you`, `others-you-may-like`, `more-like-this`, `most-popular-items`.

        :return: The type of this GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig.

        Required. The type of engine. e.g., `recommended-for-you`. This field together with optimization_objective describe engine metadata to use to control engine training and serving. Currently supported values: `recommended-for-you`, `others-you-may-like`, `more-like-this`, `most-popular-items`.

        :param type: The type of this GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig.
        :type type: str
        """

        self._type = type
