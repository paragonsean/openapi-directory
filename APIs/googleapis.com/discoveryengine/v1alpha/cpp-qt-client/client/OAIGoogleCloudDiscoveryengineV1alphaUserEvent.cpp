/**
 * Discovery Engine API
 * Discovery Engine API.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDiscoveryengineV1alphaUserEvent.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDiscoveryengineV1alphaUserEvent::OAIGoogleCloudDiscoveryengineV1alphaUserEvent(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDiscoveryengineV1alphaUserEvent::OAIGoogleCloudDiscoveryengineV1alphaUserEvent() {
    this->initializeModel();
}

OAIGoogleCloudDiscoveryengineV1alphaUserEvent::~OAIGoogleCloudDiscoveryengineV1alphaUserEvent() {}

void OAIGoogleCloudDiscoveryengineV1alphaUserEvent::initializeModel() {

    m_attributes_isSet = false;
    m_attributes_isValid = false;

    m_attribution_token_isSet = false;
    m_attribution_token_isValid = false;

    m_completion_info_isSet = false;
    m_completion_info_isValid = false;

    m_direct_user_request_isSet = false;
    m_direct_user_request_isValid = false;

    m_documents_isSet = false;
    m_documents_isValid = false;

    m_event_time_isSet = false;
    m_event_time_isValid = false;

    m_event_type_isSet = false;
    m_event_type_isValid = false;

    m_filter_isSet = false;
    m_filter_isValid = false;

    m_media_info_isSet = false;
    m_media_info_isValid = false;

    m_page_info_isSet = false;
    m_page_info_isValid = false;

    m_panel_isSet = false;
    m_panel_isValid = false;

    m_promotion_ids_isSet = false;
    m_promotion_ids_isValid = false;

    m_search_info_isSet = false;
    m_search_info_isValid = false;

    m_session_id_isSet = false;
    m_session_id_isValid = false;

    m_tag_ids_isSet = false;
    m_tag_ids_isValid = false;

    m_transaction_info_isSet = false;
    m_transaction_info_isValid = false;

    m_user_info_isSet = false;
    m_user_info_isValid = false;

    m_user_pseudo_id_isSet = false;
    m_user_pseudo_id_isValid = false;
}

void OAIGoogleCloudDiscoveryengineV1alphaUserEvent::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDiscoveryengineV1alphaUserEvent::fromJsonObject(QJsonObject json) {

    m_attributes_isValid = ::OpenAPI::fromJsonValue(m_attributes, json[QString("attributes")]);
    m_attributes_isSet = !json[QString("attributes")].isNull() && m_attributes_isValid;

    m_attribution_token_isValid = ::OpenAPI::fromJsonValue(m_attribution_token, json[QString("attributionToken")]);
    m_attribution_token_isSet = !json[QString("attributionToken")].isNull() && m_attribution_token_isValid;

    m_completion_info_isValid = ::OpenAPI::fromJsonValue(m_completion_info, json[QString("completionInfo")]);
    m_completion_info_isSet = !json[QString("completionInfo")].isNull() && m_completion_info_isValid;

    m_direct_user_request_isValid = ::OpenAPI::fromJsonValue(m_direct_user_request, json[QString("directUserRequest")]);
    m_direct_user_request_isSet = !json[QString("directUserRequest")].isNull() && m_direct_user_request_isValid;

    m_documents_isValid = ::OpenAPI::fromJsonValue(m_documents, json[QString("documents")]);
    m_documents_isSet = !json[QString("documents")].isNull() && m_documents_isValid;

    m_event_time_isValid = ::OpenAPI::fromJsonValue(m_event_time, json[QString("eventTime")]);
    m_event_time_isSet = !json[QString("eventTime")].isNull() && m_event_time_isValid;

    m_event_type_isValid = ::OpenAPI::fromJsonValue(m_event_type, json[QString("eventType")]);
    m_event_type_isSet = !json[QString("eventType")].isNull() && m_event_type_isValid;

    m_filter_isValid = ::OpenAPI::fromJsonValue(m_filter, json[QString("filter")]);
    m_filter_isSet = !json[QString("filter")].isNull() && m_filter_isValid;

    m_media_info_isValid = ::OpenAPI::fromJsonValue(m_media_info, json[QString("mediaInfo")]);
    m_media_info_isSet = !json[QString("mediaInfo")].isNull() && m_media_info_isValid;

    m_page_info_isValid = ::OpenAPI::fromJsonValue(m_page_info, json[QString("pageInfo")]);
    m_page_info_isSet = !json[QString("pageInfo")].isNull() && m_page_info_isValid;

    m_panel_isValid = ::OpenAPI::fromJsonValue(m_panel, json[QString("panel")]);
    m_panel_isSet = !json[QString("panel")].isNull() && m_panel_isValid;

    m_promotion_ids_isValid = ::OpenAPI::fromJsonValue(m_promotion_ids, json[QString("promotionIds")]);
    m_promotion_ids_isSet = !json[QString("promotionIds")].isNull() && m_promotion_ids_isValid;

    m_search_info_isValid = ::OpenAPI::fromJsonValue(m_search_info, json[QString("searchInfo")]);
    m_search_info_isSet = !json[QString("searchInfo")].isNull() && m_search_info_isValid;

    m_session_id_isValid = ::OpenAPI::fromJsonValue(m_session_id, json[QString("sessionId")]);
    m_session_id_isSet = !json[QString("sessionId")].isNull() && m_session_id_isValid;

    m_tag_ids_isValid = ::OpenAPI::fromJsonValue(m_tag_ids, json[QString("tagIds")]);
    m_tag_ids_isSet = !json[QString("tagIds")].isNull() && m_tag_ids_isValid;

    m_transaction_info_isValid = ::OpenAPI::fromJsonValue(m_transaction_info, json[QString("transactionInfo")]);
    m_transaction_info_isSet = !json[QString("transactionInfo")].isNull() && m_transaction_info_isValid;

    m_user_info_isValid = ::OpenAPI::fromJsonValue(m_user_info, json[QString("userInfo")]);
    m_user_info_isSet = !json[QString("userInfo")].isNull() && m_user_info_isValid;

    m_user_pseudo_id_isValid = ::OpenAPI::fromJsonValue(m_user_pseudo_id, json[QString("userPseudoId")]);
    m_user_pseudo_id_isSet = !json[QString("userPseudoId")].isNull() && m_user_pseudo_id_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1alphaUserEvent::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDiscoveryengineV1alphaUserEvent::asJsonObject() const {
    QJsonObject obj;
    if (m_attributes.size() > 0) {
        obj.insert(QString("attributes"), ::OpenAPI::toJsonValue(m_attributes));
    }
    if (m_attribution_token_isSet) {
        obj.insert(QString("attributionToken"), ::OpenAPI::toJsonValue(m_attribution_token));
    }
    if (m_completion_info.isSet()) {
        obj.insert(QString("completionInfo"), ::OpenAPI::toJsonValue(m_completion_info));
    }
    if (m_direct_user_request_isSet) {
        obj.insert(QString("directUserRequest"), ::OpenAPI::toJsonValue(m_direct_user_request));
    }
    if (m_documents.size() > 0) {
        obj.insert(QString("documents"), ::OpenAPI::toJsonValue(m_documents));
    }
    if (m_event_time_isSet) {
        obj.insert(QString("eventTime"), ::OpenAPI::toJsonValue(m_event_time));
    }
    if (m_event_type_isSet) {
        obj.insert(QString("eventType"), ::OpenAPI::toJsonValue(m_event_type));
    }
    if (m_filter_isSet) {
        obj.insert(QString("filter"), ::OpenAPI::toJsonValue(m_filter));
    }
    if (m_media_info.isSet()) {
        obj.insert(QString("mediaInfo"), ::OpenAPI::toJsonValue(m_media_info));
    }
    if (m_page_info.isSet()) {
        obj.insert(QString("pageInfo"), ::OpenAPI::toJsonValue(m_page_info));
    }
    if (m_panel.isSet()) {
        obj.insert(QString("panel"), ::OpenAPI::toJsonValue(m_panel));
    }
    if (m_promotion_ids.size() > 0) {
        obj.insert(QString("promotionIds"), ::OpenAPI::toJsonValue(m_promotion_ids));
    }
    if (m_search_info.isSet()) {
        obj.insert(QString("searchInfo"), ::OpenAPI::toJsonValue(m_search_info));
    }
    if (m_session_id_isSet) {
        obj.insert(QString("sessionId"), ::OpenAPI::toJsonValue(m_session_id));
    }
    if (m_tag_ids.size() > 0) {
        obj.insert(QString("tagIds"), ::OpenAPI::toJsonValue(m_tag_ids));
    }
    if (m_transaction_info.isSet()) {
        obj.insert(QString("transactionInfo"), ::OpenAPI::toJsonValue(m_transaction_info));
    }
    if (m_user_info.isSet()) {
        obj.insert(QString("userInfo"), ::OpenAPI::toJsonValue(m_user_info));
    }
    if (m_user_pseudo_id_isSet) {
        obj.insert(QString("userPseudoId"), ::OpenAPI::toJsonValue(m_user_pseudo_id));
    }
    return obj;
}

QMap<QString, OAIGoogleCloudDiscoveryengineV1alphaCustomAttribute> OAIGoogleCloudDiscoveryengineV1alphaUserEvent::getAttributes() const {
    return m_attributes;
}
void OAIGoogleCloudDiscoveryengineV1alphaUserEvent::setAttributes(const QMap<QString, OAIGoogleCloudDiscoveryengineV1alphaCustomAttribute> &attributes) {
    m_attributes = attributes;
    m_attributes_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaUserEvent::is_attributes_Set() const{
    return m_attributes_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaUserEvent::is_attributes_Valid() const{
    return m_attributes_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1alphaUserEvent::getAttributionToken() const {
    return m_attribution_token;
}
void OAIGoogleCloudDiscoveryengineV1alphaUserEvent::setAttributionToken(const QString &attribution_token) {
    m_attribution_token = attribution_token;
    m_attribution_token_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaUserEvent::is_attribution_token_Set() const{
    return m_attribution_token_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaUserEvent::is_attribution_token_Valid() const{
    return m_attribution_token_isValid;
}

OAIGoogleCloudDiscoveryengineV1alphaCompletionInfo OAIGoogleCloudDiscoveryengineV1alphaUserEvent::getCompletionInfo() const {
    return m_completion_info;
}
void OAIGoogleCloudDiscoveryengineV1alphaUserEvent::setCompletionInfo(const OAIGoogleCloudDiscoveryengineV1alphaCompletionInfo &completion_info) {
    m_completion_info = completion_info;
    m_completion_info_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaUserEvent::is_completion_info_Set() const{
    return m_completion_info_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaUserEvent::is_completion_info_Valid() const{
    return m_completion_info_isValid;
}

bool OAIGoogleCloudDiscoveryengineV1alphaUserEvent::isDirectUserRequest() const {
    return m_direct_user_request;
}
void OAIGoogleCloudDiscoveryengineV1alphaUserEvent::setDirectUserRequest(const bool &direct_user_request) {
    m_direct_user_request = direct_user_request;
    m_direct_user_request_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaUserEvent::is_direct_user_request_Set() const{
    return m_direct_user_request_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaUserEvent::is_direct_user_request_Valid() const{
    return m_direct_user_request_isValid;
}

QList<OAIGoogleCloudDiscoveryengineV1alphaDocumentInfo> OAIGoogleCloudDiscoveryengineV1alphaUserEvent::getDocuments() const {
    return m_documents;
}
void OAIGoogleCloudDiscoveryengineV1alphaUserEvent::setDocuments(const QList<OAIGoogleCloudDiscoveryengineV1alphaDocumentInfo> &documents) {
    m_documents = documents;
    m_documents_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaUserEvent::is_documents_Set() const{
    return m_documents_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaUserEvent::is_documents_Valid() const{
    return m_documents_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1alphaUserEvent::getEventTime() const {
    return m_event_time;
}
void OAIGoogleCloudDiscoveryengineV1alphaUserEvent::setEventTime(const QString &event_time) {
    m_event_time = event_time;
    m_event_time_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaUserEvent::is_event_time_Set() const{
    return m_event_time_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaUserEvent::is_event_time_Valid() const{
    return m_event_time_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1alphaUserEvent::getEventType() const {
    return m_event_type;
}
void OAIGoogleCloudDiscoveryengineV1alphaUserEvent::setEventType(const QString &event_type) {
    m_event_type = event_type;
    m_event_type_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaUserEvent::is_event_type_Set() const{
    return m_event_type_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaUserEvent::is_event_type_Valid() const{
    return m_event_type_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1alphaUserEvent::getFilter() const {
    return m_filter;
}
void OAIGoogleCloudDiscoveryengineV1alphaUserEvent::setFilter(const QString &filter) {
    m_filter = filter;
    m_filter_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaUserEvent::is_filter_Set() const{
    return m_filter_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaUserEvent::is_filter_Valid() const{
    return m_filter_isValid;
}

OAIGoogleCloudDiscoveryengineV1alphaMediaInfo OAIGoogleCloudDiscoveryengineV1alphaUserEvent::getMediaInfo() const {
    return m_media_info;
}
void OAIGoogleCloudDiscoveryengineV1alphaUserEvent::setMediaInfo(const OAIGoogleCloudDiscoveryengineV1alphaMediaInfo &media_info) {
    m_media_info = media_info;
    m_media_info_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaUserEvent::is_media_info_Set() const{
    return m_media_info_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaUserEvent::is_media_info_Valid() const{
    return m_media_info_isValid;
}

OAIGoogleCloudDiscoveryengineV1alphaPageInfo OAIGoogleCloudDiscoveryengineV1alphaUserEvent::getPageInfo() const {
    return m_page_info;
}
void OAIGoogleCloudDiscoveryengineV1alphaUserEvent::setPageInfo(const OAIGoogleCloudDiscoveryengineV1alphaPageInfo &page_info) {
    m_page_info = page_info;
    m_page_info_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaUserEvent::is_page_info_Set() const{
    return m_page_info_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaUserEvent::is_page_info_Valid() const{
    return m_page_info_isValid;
}

OAIGoogleCloudDiscoveryengineV1alphaPanelInfo OAIGoogleCloudDiscoveryengineV1alphaUserEvent::getPanel() const {
    return m_panel;
}
void OAIGoogleCloudDiscoveryengineV1alphaUserEvent::setPanel(const OAIGoogleCloudDiscoveryengineV1alphaPanelInfo &panel) {
    m_panel = panel;
    m_panel_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaUserEvent::is_panel_Set() const{
    return m_panel_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaUserEvent::is_panel_Valid() const{
    return m_panel_isValid;
}

QList<QString> OAIGoogleCloudDiscoveryengineV1alphaUserEvent::getPromotionIds() const {
    return m_promotion_ids;
}
void OAIGoogleCloudDiscoveryengineV1alphaUserEvent::setPromotionIds(const QList<QString> &promotion_ids) {
    m_promotion_ids = promotion_ids;
    m_promotion_ids_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaUserEvent::is_promotion_ids_Set() const{
    return m_promotion_ids_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaUserEvent::is_promotion_ids_Valid() const{
    return m_promotion_ids_isValid;
}

OAIGoogleCloudDiscoveryengineV1alphaSearchInfo OAIGoogleCloudDiscoveryengineV1alphaUserEvent::getSearchInfo() const {
    return m_search_info;
}
void OAIGoogleCloudDiscoveryengineV1alphaUserEvent::setSearchInfo(const OAIGoogleCloudDiscoveryengineV1alphaSearchInfo &search_info) {
    m_search_info = search_info;
    m_search_info_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaUserEvent::is_search_info_Set() const{
    return m_search_info_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaUserEvent::is_search_info_Valid() const{
    return m_search_info_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1alphaUserEvent::getSessionId() const {
    return m_session_id;
}
void OAIGoogleCloudDiscoveryengineV1alphaUserEvent::setSessionId(const QString &session_id) {
    m_session_id = session_id;
    m_session_id_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaUserEvent::is_session_id_Set() const{
    return m_session_id_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaUserEvent::is_session_id_Valid() const{
    return m_session_id_isValid;
}

QList<QString> OAIGoogleCloudDiscoveryengineV1alphaUserEvent::getTagIds() const {
    return m_tag_ids;
}
void OAIGoogleCloudDiscoveryengineV1alphaUserEvent::setTagIds(const QList<QString> &tag_ids) {
    m_tag_ids = tag_ids;
    m_tag_ids_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaUserEvent::is_tag_ids_Set() const{
    return m_tag_ids_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaUserEvent::is_tag_ids_Valid() const{
    return m_tag_ids_isValid;
}

OAIGoogleCloudDiscoveryengineV1alphaTransactionInfo OAIGoogleCloudDiscoveryengineV1alphaUserEvent::getTransactionInfo() const {
    return m_transaction_info;
}
void OAIGoogleCloudDiscoveryengineV1alphaUserEvent::setTransactionInfo(const OAIGoogleCloudDiscoveryengineV1alphaTransactionInfo &transaction_info) {
    m_transaction_info = transaction_info;
    m_transaction_info_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaUserEvent::is_transaction_info_Set() const{
    return m_transaction_info_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaUserEvent::is_transaction_info_Valid() const{
    return m_transaction_info_isValid;
}

OAIGoogleCloudDiscoveryengineV1alphaUserInfo OAIGoogleCloudDiscoveryengineV1alphaUserEvent::getUserInfo() const {
    return m_user_info;
}
void OAIGoogleCloudDiscoveryengineV1alphaUserEvent::setUserInfo(const OAIGoogleCloudDiscoveryengineV1alphaUserInfo &user_info) {
    m_user_info = user_info;
    m_user_info_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaUserEvent::is_user_info_Set() const{
    return m_user_info_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaUserEvent::is_user_info_Valid() const{
    return m_user_info_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1alphaUserEvent::getUserPseudoId() const {
    return m_user_pseudo_id;
}
void OAIGoogleCloudDiscoveryengineV1alphaUserEvent::setUserPseudoId(const QString &user_pseudo_id) {
    m_user_pseudo_id = user_pseudo_id;
    m_user_pseudo_id_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaUserEvent::is_user_pseudo_id_Set() const{
    return m_user_pseudo_id_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaUserEvent::is_user_pseudo_id_Valid() const{
    return m_user_pseudo_id_isValid;
}

bool OAIGoogleCloudDiscoveryengineV1alphaUserEvent::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_attributes.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_attribution_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_completion_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_direct_user_request_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_documents.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_event_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_event_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_filter_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_media_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_page_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_panel.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_promotion_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_search_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_session_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tag_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_transaction_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_pseudo_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDiscoveryengineV1alphaUserEvent::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
