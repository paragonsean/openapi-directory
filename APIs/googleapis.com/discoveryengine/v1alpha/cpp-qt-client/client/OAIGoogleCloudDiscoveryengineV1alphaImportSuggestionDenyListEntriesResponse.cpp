/**
 * Discovery Engine API
 * Discovery Engine API.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDiscoveryengineV1alphaImportSuggestionDenyListEntriesResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDiscoveryengineV1alphaImportSuggestionDenyListEntriesResponse::OAIGoogleCloudDiscoveryengineV1alphaImportSuggestionDenyListEntriesResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDiscoveryengineV1alphaImportSuggestionDenyListEntriesResponse::OAIGoogleCloudDiscoveryengineV1alphaImportSuggestionDenyListEntriesResponse() {
    this->initializeModel();
}

OAIGoogleCloudDiscoveryengineV1alphaImportSuggestionDenyListEntriesResponse::~OAIGoogleCloudDiscoveryengineV1alphaImportSuggestionDenyListEntriesResponse() {}

void OAIGoogleCloudDiscoveryengineV1alphaImportSuggestionDenyListEntriesResponse::initializeModel() {

    m_error_samples_isSet = false;
    m_error_samples_isValid = false;

    m_failed_entries_count_isSet = false;
    m_failed_entries_count_isValid = false;

    m_imported_entries_count_isSet = false;
    m_imported_entries_count_isValid = false;
}

void OAIGoogleCloudDiscoveryengineV1alphaImportSuggestionDenyListEntriesResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDiscoveryengineV1alphaImportSuggestionDenyListEntriesResponse::fromJsonObject(QJsonObject json) {

    m_error_samples_isValid = ::OpenAPI::fromJsonValue(m_error_samples, json[QString("errorSamples")]);
    m_error_samples_isSet = !json[QString("errorSamples")].isNull() && m_error_samples_isValid;

    m_failed_entries_count_isValid = ::OpenAPI::fromJsonValue(m_failed_entries_count, json[QString("failedEntriesCount")]);
    m_failed_entries_count_isSet = !json[QString("failedEntriesCount")].isNull() && m_failed_entries_count_isValid;

    m_imported_entries_count_isValid = ::OpenAPI::fromJsonValue(m_imported_entries_count, json[QString("importedEntriesCount")]);
    m_imported_entries_count_isSet = !json[QString("importedEntriesCount")].isNull() && m_imported_entries_count_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1alphaImportSuggestionDenyListEntriesResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDiscoveryengineV1alphaImportSuggestionDenyListEntriesResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_error_samples.size() > 0) {
        obj.insert(QString("errorSamples"), ::OpenAPI::toJsonValue(m_error_samples));
    }
    if (m_failed_entries_count_isSet) {
        obj.insert(QString("failedEntriesCount"), ::OpenAPI::toJsonValue(m_failed_entries_count));
    }
    if (m_imported_entries_count_isSet) {
        obj.insert(QString("importedEntriesCount"), ::OpenAPI::toJsonValue(m_imported_entries_count));
    }
    return obj;
}

QList<OAIGoogleRpcStatus> OAIGoogleCloudDiscoveryengineV1alphaImportSuggestionDenyListEntriesResponse::getErrorSamples() const {
    return m_error_samples;
}
void OAIGoogleCloudDiscoveryengineV1alphaImportSuggestionDenyListEntriesResponse::setErrorSamples(const QList<OAIGoogleRpcStatus> &error_samples) {
    m_error_samples = error_samples;
    m_error_samples_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaImportSuggestionDenyListEntriesResponse::is_error_samples_Set() const{
    return m_error_samples_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaImportSuggestionDenyListEntriesResponse::is_error_samples_Valid() const{
    return m_error_samples_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1alphaImportSuggestionDenyListEntriesResponse::getFailedEntriesCount() const {
    return m_failed_entries_count;
}
void OAIGoogleCloudDiscoveryengineV1alphaImportSuggestionDenyListEntriesResponse::setFailedEntriesCount(const QString &failed_entries_count) {
    m_failed_entries_count = failed_entries_count;
    m_failed_entries_count_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaImportSuggestionDenyListEntriesResponse::is_failed_entries_count_Set() const{
    return m_failed_entries_count_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaImportSuggestionDenyListEntriesResponse::is_failed_entries_count_Valid() const{
    return m_failed_entries_count_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1alphaImportSuggestionDenyListEntriesResponse::getImportedEntriesCount() const {
    return m_imported_entries_count;
}
void OAIGoogleCloudDiscoveryengineV1alphaImportSuggestionDenyListEntriesResponse::setImportedEntriesCount(const QString &imported_entries_count) {
    m_imported_entries_count = imported_entries_count;
    m_imported_entries_count_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaImportSuggestionDenyListEntriesResponse::is_imported_entries_count_Set() const{
    return m_imported_entries_count_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaImportSuggestionDenyListEntriesResponse::is_imported_entries_count_Valid() const{
    return m_imported_entries_count_isValid;
}

bool OAIGoogleCloudDiscoveryengineV1alphaImportSuggestionDenyListEntriesResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_error_samples.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_failed_entries_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_imported_entries_count_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDiscoveryengineV1alphaImportSuggestionDenyListEntriesResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
