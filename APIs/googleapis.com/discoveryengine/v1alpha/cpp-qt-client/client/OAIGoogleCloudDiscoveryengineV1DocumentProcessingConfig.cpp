/**
 * Discovery Engine API
 * Discovery Engine API.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDiscoveryengineV1DocumentProcessingConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDiscoveryengineV1DocumentProcessingConfig::OAIGoogleCloudDiscoveryengineV1DocumentProcessingConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDiscoveryengineV1DocumentProcessingConfig::OAIGoogleCloudDiscoveryengineV1DocumentProcessingConfig() {
    this->initializeModel();
}

OAIGoogleCloudDiscoveryengineV1DocumentProcessingConfig::~OAIGoogleCloudDiscoveryengineV1DocumentProcessingConfig() {}

void OAIGoogleCloudDiscoveryengineV1DocumentProcessingConfig::initializeModel() {

    m_default_parsing_config_isSet = false;
    m_default_parsing_config_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_parsing_config_overrides_isSet = false;
    m_parsing_config_overrides_isValid = false;
}

void OAIGoogleCloudDiscoveryengineV1DocumentProcessingConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDiscoveryengineV1DocumentProcessingConfig::fromJsonObject(QJsonObject json) {

    m_default_parsing_config_isValid = ::OpenAPI::fromJsonValue(m_default_parsing_config, json[QString("defaultParsingConfig")]);
    m_default_parsing_config_isSet = !json[QString("defaultParsingConfig")].isNull() && m_default_parsing_config_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_parsing_config_overrides_isValid = ::OpenAPI::fromJsonValue(m_parsing_config_overrides, json[QString("parsingConfigOverrides")]);
    m_parsing_config_overrides_isSet = !json[QString("parsingConfigOverrides")].isNull() && m_parsing_config_overrides_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1DocumentProcessingConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDiscoveryengineV1DocumentProcessingConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_default_parsing_config.isSet()) {
        obj.insert(QString("defaultParsingConfig"), ::OpenAPI::toJsonValue(m_default_parsing_config));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_parsing_config_overrides.size() > 0) {
        obj.insert(QString("parsingConfigOverrides"), ::OpenAPI::toJsonValue(m_parsing_config_overrides));
    }
    return obj;
}

OAIGoogleCloudDiscoveryengineV1DocumentProcessingConfigParsingConfig OAIGoogleCloudDiscoveryengineV1DocumentProcessingConfig::getDefaultParsingConfig() const {
    return m_default_parsing_config;
}
void OAIGoogleCloudDiscoveryengineV1DocumentProcessingConfig::setDefaultParsingConfig(const OAIGoogleCloudDiscoveryengineV1DocumentProcessingConfigParsingConfig &default_parsing_config) {
    m_default_parsing_config = default_parsing_config;
    m_default_parsing_config_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1DocumentProcessingConfig::is_default_parsing_config_Set() const{
    return m_default_parsing_config_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1DocumentProcessingConfig::is_default_parsing_config_Valid() const{
    return m_default_parsing_config_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1DocumentProcessingConfig::getName() const {
    return m_name;
}
void OAIGoogleCloudDiscoveryengineV1DocumentProcessingConfig::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1DocumentProcessingConfig::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1DocumentProcessingConfig::is_name_Valid() const{
    return m_name_isValid;
}

QMap<QString, OAIGoogleCloudDiscoveryengineV1DocumentProcessingConfigParsingConfig> OAIGoogleCloudDiscoveryengineV1DocumentProcessingConfig::getParsingConfigOverrides() const {
    return m_parsing_config_overrides;
}
void OAIGoogleCloudDiscoveryengineV1DocumentProcessingConfig::setParsingConfigOverrides(const QMap<QString, OAIGoogleCloudDiscoveryengineV1DocumentProcessingConfigParsingConfig> &parsing_config_overrides) {
    m_parsing_config_overrides = parsing_config_overrides;
    m_parsing_config_overrides_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1DocumentProcessingConfig::is_parsing_config_overrides_Set() const{
    return m_parsing_config_overrides_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1DocumentProcessingConfig::is_parsing_config_overrides_Valid() const{
    return m_parsing_config_overrides_isValid;
}

bool OAIGoogleCloudDiscoveryengineV1DocumentProcessingConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_default_parsing_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_parsing_config_overrides.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDiscoveryengineV1DocumentProcessingConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
