/**
 * Discovery Engine API
 * Discovery Engine API.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDiscoveryengineV1alphaDocumentInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDiscoveryengineV1alphaDocumentInfo::OAIGoogleCloudDiscoveryengineV1alphaDocumentInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDiscoveryengineV1alphaDocumentInfo::OAIGoogleCloudDiscoveryengineV1alphaDocumentInfo() {
    this->initializeModel();
}

OAIGoogleCloudDiscoveryengineV1alphaDocumentInfo::~OAIGoogleCloudDiscoveryengineV1alphaDocumentInfo() {}

void OAIGoogleCloudDiscoveryengineV1alphaDocumentInfo::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_promotion_ids_isSet = false;
    m_promotion_ids_isValid = false;

    m_quantity_isSet = false;
    m_quantity_isValid = false;

    m_uri_isSet = false;
    m_uri_isValid = false;
}

void OAIGoogleCloudDiscoveryengineV1alphaDocumentInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDiscoveryengineV1alphaDocumentInfo::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_promotion_ids_isValid = ::OpenAPI::fromJsonValue(m_promotion_ids, json[QString("promotionIds")]);
    m_promotion_ids_isSet = !json[QString("promotionIds")].isNull() && m_promotion_ids_isValid;

    m_quantity_isValid = ::OpenAPI::fromJsonValue(m_quantity, json[QString("quantity")]);
    m_quantity_isSet = !json[QString("quantity")].isNull() && m_quantity_isValid;

    m_uri_isValid = ::OpenAPI::fromJsonValue(m_uri, json[QString("uri")]);
    m_uri_isSet = !json[QString("uri")].isNull() && m_uri_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1alphaDocumentInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDiscoveryengineV1alphaDocumentInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_promotion_ids.size() > 0) {
        obj.insert(QString("promotionIds"), ::OpenAPI::toJsonValue(m_promotion_ids));
    }
    if (m_quantity_isSet) {
        obj.insert(QString("quantity"), ::OpenAPI::toJsonValue(m_quantity));
    }
    if (m_uri_isSet) {
        obj.insert(QString("uri"), ::OpenAPI::toJsonValue(m_uri));
    }
    return obj;
}

QString OAIGoogleCloudDiscoveryengineV1alphaDocumentInfo::getId() const {
    return m_id;
}
void OAIGoogleCloudDiscoveryengineV1alphaDocumentInfo::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaDocumentInfo::is_id_Set() const{
    return m_id_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaDocumentInfo::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1alphaDocumentInfo::getName() const {
    return m_name;
}
void OAIGoogleCloudDiscoveryengineV1alphaDocumentInfo::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaDocumentInfo::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaDocumentInfo::is_name_Valid() const{
    return m_name_isValid;
}

QList<QString> OAIGoogleCloudDiscoveryengineV1alphaDocumentInfo::getPromotionIds() const {
    return m_promotion_ids;
}
void OAIGoogleCloudDiscoveryengineV1alphaDocumentInfo::setPromotionIds(const QList<QString> &promotion_ids) {
    m_promotion_ids = promotion_ids;
    m_promotion_ids_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaDocumentInfo::is_promotion_ids_Set() const{
    return m_promotion_ids_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaDocumentInfo::is_promotion_ids_Valid() const{
    return m_promotion_ids_isValid;
}

qint32 OAIGoogleCloudDiscoveryengineV1alphaDocumentInfo::getQuantity() const {
    return m_quantity;
}
void OAIGoogleCloudDiscoveryengineV1alphaDocumentInfo::setQuantity(const qint32 &quantity) {
    m_quantity = quantity;
    m_quantity_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaDocumentInfo::is_quantity_Set() const{
    return m_quantity_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaDocumentInfo::is_quantity_Valid() const{
    return m_quantity_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1alphaDocumentInfo::getUri() const {
    return m_uri;
}
void OAIGoogleCloudDiscoveryengineV1alphaDocumentInfo::setUri(const QString &uri) {
    m_uri = uri;
    m_uri_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaDocumentInfo::is_uri_Set() const{
    return m_uri_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaDocumentInfo::is_uri_Valid() const{
    return m_uri_isValid;
}

bool OAIGoogleCloudDiscoveryengineV1alphaDocumentInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_promotion_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_quantity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_uri_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDiscoveryengineV1alphaDocumentInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
