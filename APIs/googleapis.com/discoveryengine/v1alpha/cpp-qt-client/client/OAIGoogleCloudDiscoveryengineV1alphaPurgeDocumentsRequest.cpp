/**
 * Discovery Engine API
 * Discovery Engine API.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDiscoveryengineV1alphaPurgeDocumentsRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDiscoveryengineV1alphaPurgeDocumentsRequest::OAIGoogleCloudDiscoveryengineV1alphaPurgeDocumentsRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDiscoveryengineV1alphaPurgeDocumentsRequest::OAIGoogleCloudDiscoveryengineV1alphaPurgeDocumentsRequest() {
    this->initializeModel();
}

OAIGoogleCloudDiscoveryengineV1alphaPurgeDocumentsRequest::~OAIGoogleCloudDiscoveryengineV1alphaPurgeDocumentsRequest() {}

void OAIGoogleCloudDiscoveryengineV1alphaPurgeDocumentsRequest::initializeModel() {

    m_error_config_isSet = false;
    m_error_config_isValid = false;

    m_filter_isSet = false;
    m_filter_isValid = false;

    m_force_isSet = false;
    m_force_isValid = false;

    m_gcs_source_isSet = false;
    m_gcs_source_isValid = false;
}

void OAIGoogleCloudDiscoveryengineV1alphaPurgeDocumentsRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDiscoveryengineV1alphaPurgeDocumentsRequest::fromJsonObject(QJsonObject json) {

    m_error_config_isValid = ::OpenAPI::fromJsonValue(m_error_config, json[QString("errorConfig")]);
    m_error_config_isSet = !json[QString("errorConfig")].isNull() && m_error_config_isValid;

    m_filter_isValid = ::OpenAPI::fromJsonValue(m_filter, json[QString("filter")]);
    m_filter_isSet = !json[QString("filter")].isNull() && m_filter_isValid;

    m_force_isValid = ::OpenAPI::fromJsonValue(m_force, json[QString("force")]);
    m_force_isSet = !json[QString("force")].isNull() && m_force_isValid;

    m_gcs_source_isValid = ::OpenAPI::fromJsonValue(m_gcs_source, json[QString("gcsSource")]);
    m_gcs_source_isSet = !json[QString("gcsSource")].isNull() && m_gcs_source_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1alphaPurgeDocumentsRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDiscoveryengineV1alphaPurgeDocumentsRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_error_config.isSet()) {
        obj.insert(QString("errorConfig"), ::OpenAPI::toJsonValue(m_error_config));
    }
    if (m_filter_isSet) {
        obj.insert(QString("filter"), ::OpenAPI::toJsonValue(m_filter));
    }
    if (m_force_isSet) {
        obj.insert(QString("force"), ::OpenAPI::toJsonValue(m_force));
    }
    if (m_gcs_source.isSet()) {
        obj.insert(QString("gcsSource"), ::OpenAPI::toJsonValue(m_gcs_source));
    }
    return obj;
}

OAIGoogleCloudDiscoveryengineV1alphaPurgeErrorConfig OAIGoogleCloudDiscoveryengineV1alphaPurgeDocumentsRequest::getErrorConfig() const {
    return m_error_config;
}
void OAIGoogleCloudDiscoveryengineV1alphaPurgeDocumentsRequest::setErrorConfig(const OAIGoogleCloudDiscoveryengineV1alphaPurgeErrorConfig &error_config) {
    m_error_config = error_config;
    m_error_config_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaPurgeDocumentsRequest::is_error_config_Set() const{
    return m_error_config_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaPurgeDocumentsRequest::is_error_config_Valid() const{
    return m_error_config_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1alphaPurgeDocumentsRequest::getFilter() const {
    return m_filter;
}
void OAIGoogleCloudDiscoveryengineV1alphaPurgeDocumentsRequest::setFilter(const QString &filter) {
    m_filter = filter;
    m_filter_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaPurgeDocumentsRequest::is_filter_Set() const{
    return m_filter_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaPurgeDocumentsRequest::is_filter_Valid() const{
    return m_filter_isValid;
}

bool OAIGoogleCloudDiscoveryengineV1alphaPurgeDocumentsRequest::isForce() const {
    return m_force;
}
void OAIGoogleCloudDiscoveryengineV1alphaPurgeDocumentsRequest::setForce(const bool &force) {
    m_force = force;
    m_force_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaPurgeDocumentsRequest::is_force_Set() const{
    return m_force_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaPurgeDocumentsRequest::is_force_Valid() const{
    return m_force_isValid;
}

OAIGoogleCloudDiscoveryengineV1alphaGcsSource OAIGoogleCloudDiscoveryengineV1alphaPurgeDocumentsRequest::getGcsSource() const {
    return m_gcs_source;
}
void OAIGoogleCloudDiscoveryengineV1alphaPurgeDocumentsRequest::setGcsSource(const OAIGoogleCloudDiscoveryengineV1alphaGcsSource &gcs_source) {
    m_gcs_source = gcs_source;
    m_gcs_source_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaPurgeDocumentsRequest::is_gcs_source_Set() const{
    return m_gcs_source_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaPurgeDocumentsRequest::is_gcs_source_Valid() const{
    return m_gcs_source_isValid;
}

bool OAIGoogleCloudDiscoveryengineV1alphaPurgeDocumentsRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_error_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_filter_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_force_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gcs_source.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDiscoveryengineV1alphaPurgeDocumentsRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
