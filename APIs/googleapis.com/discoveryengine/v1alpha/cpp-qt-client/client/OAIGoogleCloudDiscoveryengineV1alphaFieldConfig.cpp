/**
 * Discovery Engine API
 * Discovery Engine API.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDiscoveryengineV1alphaFieldConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDiscoveryengineV1alphaFieldConfig::OAIGoogleCloudDiscoveryengineV1alphaFieldConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDiscoveryengineV1alphaFieldConfig::OAIGoogleCloudDiscoveryengineV1alphaFieldConfig() {
    this->initializeModel();
}

OAIGoogleCloudDiscoveryengineV1alphaFieldConfig::~OAIGoogleCloudDiscoveryengineV1alphaFieldConfig() {}

void OAIGoogleCloudDiscoveryengineV1alphaFieldConfig::initializeModel() {

    m_completable_option_isSet = false;
    m_completable_option_isValid = false;

    m_dynamic_facetable_option_isSet = false;
    m_dynamic_facetable_option_isValid = false;

    m_field_path_isSet = false;
    m_field_path_isValid = false;

    m_field_type_isSet = false;
    m_field_type_isValid = false;

    m_indexable_option_isSet = false;
    m_indexable_option_isValid = false;

    m_key_property_type_isSet = false;
    m_key_property_type_isValid = false;

    m_recs_filterable_option_isSet = false;
    m_recs_filterable_option_isValid = false;

    m_retrievable_option_isSet = false;
    m_retrievable_option_isValid = false;

    m_searchable_option_isSet = false;
    m_searchable_option_isValid = false;
}

void OAIGoogleCloudDiscoveryengineV1alphaFieldConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDiscoveryengineV1alphaFieldConfig::fromJsonObject(QJsonObject json) {

    m_completable_option_isValid = ::OpenAPI::fromJsonValue(m_completable_option, json[QString("completableOption")]);
    m_completable_option_isSet = !json[QString("completableOption")].isNull() && m_completable_option_isValid;

    m_dynamic_facetable_option_isValid = ::OpenAPI::fromJsonValue(m_dynamic_facetable_option, json[QString("dynamicFacetableOption")]);
    m_dynamic_facetable_option_isSet = !json[QString("dynamicFacetableOption")].isNull() && m_dynamic_facetable_option_isValid;

    m_field_path_isValid = ::OpenAPI::fromJsonValue(m_field_path, json[QString("fieldPath")]);
    m_field_path_isSet = !json[QString("fieldPath")].isNull() && m_field_path_isValid;

    m_field_type_isValid = ::OpenAPI::fromJsonValue(m_field_type, json[QString("fieldType")]);
    m_field_type_isSet = !json[QString("fieldType")].isNull() && m_field_type_isValid;

    m_indexable_option_isValid = ::OpenAPI::fromJsonValue(m_indexable_option, json[QString("indexableOption")]);
    m_indexable_option_isSet = !json[QString("indexableOption")].isNull() && m_indexable_option_isValid;

    m_key_property_type_isValid = ::OpenAPI::fromJsonValue(m_key_property_type, json[QString("keyPropertyType")]);
    m_key_property_type_isSet = !json[QString("keyPropertyType")].isNull() && m_key_property_type_isValid;

    m_recs_filterable_option_isValid = ::OpenAPI::fromJsonValue(m_recs_filterable_option, json[QString("recsFilterableOption")]);
    m_recs_filterable_option_isSet = !json[QString("recsFilterableOption")].isNull() && m_recs_filterable_option_isValid;

    m_retrievable_option_isValid = ::OpenAPI::fromJsonValue(m_retrievable_option, json[QString("retrievableOption")]);
    m_retrievable_option_isSet = !json[QString("retrievableOption")].isNull() && m_retrievable_option_isValid;

    m_searchable_option_isValid = ::OpenAPI::fromJsonValue(m_searchable_option, json[QString("searchableOption")]);
    m_searchable_option_isSet = !json[QString("searchableOption")].isNull() && m_searchable_option_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1alphaFieldConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDiscoveryengineV1alphaFieldConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_completable_option_isSet) {
        obj.insert(QString("completableOption"), ::OpenAPI::toJsonValue(m_completable_option));
    }
    if (m_dynamic_facetable_option_isSet) {
        obj.insert(QString("dynamicFacetableOption"), ::OpenAPI::toJsonValue(m_dynamic_facetable_option));
    }
    if (m_field_path_isSet) {
        obj.insert(QString("fieldPath"), ::OpenAPI::toJsonValue(m_field_path));
    }
    if (m_field_type_isSet) {
        obj.insert(QString("fieldType"), ::OpenAPI::toJsonValue(m_field_type));
    }
    if (m_indexable_option_isSet) {
        obj.insert(QString("indexableOption"), ::OpenAPI::toJsonValue(m_indexable_option));
    }
    if (m_key_property_type_isSet) {
        obj.insert(QString("keyPropertyType"), ::OpenAPI::toJsonValue(m_key_property_type));
    }
    if (m_recs_filterable_option_isSet) {
        obj.insert(QString("recsFilterableOption"), ::OpenAPI::toJsonValue(m_recs_filterable_option));
    }
    if (m_retrievable_option_isSet) {
        obj.insert(QString("retrievableOption"), ::OpenAPI::toJsonValue(m_retrievable_option));
    }
    if (m_searchable_option_isSet) {
        obj.insert(QString("searchableOption"), ::OpenAPI::toJsonValue(m_searchable_option));
    }
    return obj;
}

QString OAIGoogleCloudDiscoveryengineV1alphaFieldConfig::getCompletableOption() const {
    return m_completable_option;
}
void OAIGoogleCloudDiscoveryengineV1alphaFieldConfig::setCompletableOption(const QString &completable_option) {
    m_completable_option = completable_option;
    m_completable_option_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaFieldConfig::is_completable_option_Set() const{
    return m_completable_option_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaFieldConfig::is_completable_option_Valid() const{
    return m_completable_option_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1alphaFieldConfig::getDynamicFacetableOption() const {
    return m_dynamic_facetable_option;
}
void OAIGoogleCloudDiscoveryengineV1alphaFieldConfig::setDynamicFacetableOption(const QString &dynamic_facetable_option) {
    m_dynamic_facetable_option = dynamic_facetable_option;
    m_dynamic_facetable_option_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaFieldConfig::is_dynamic_facetable_option_Set() const{
    return m_dynamic_facetable_option_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaFieldConfig::is_dynamic_facetable_option_Valid() const{
    return m_dynamic_facetable_option_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1alphaFieldConfig::getFieldPath() const {
    return m_field_path;
}
void OAIGoogleCloudDiscoveryengineV1alphaFieldConfig::setFieldPath(const QString &field_path) {
    m_field_path = field_path;
    m_field_path_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaFieldConfig::is_field_path_Set() const{
    return m_field_path_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaFieldConfig::is_field_path_Valid() const{
    return m_field_path_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1alphaFieldConfig::getFieldType() const {
    return m_field_type;
}
void OAIGoogleCloudDiscoveryengineV1alphaFieldConfig::setFieldType(const QString &field_type) {
    m_field_type = field_type;
    m_field_type_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaFieldConfig::is_field_type_Set() const{
    return m_field_type_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaFieldConfig::is_field_type_Valid() const{
    return m_field_type_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1alphaFieldConfig::getIndexableOption() const {
    return m_indexable_option;
}
void OAIGoogleCloudDiscoveryengineV1alphaFieldConfig::setIndexableOption(const QString &indexable_option) {
    m_indexable_option = indexable_option;
    m_indexable_option_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaFieldConfig::is_indexable_option_Set() const{
    return m_indexable_option_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaFieldConfig::is_indexable_option_Valid() const{
    return m_indexable_option_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1alphaFieldConfig::getKeyPropertyType() const {
    return m_key_property_type;
}
void OAIGoogleCloudDiscoveryengineV1alphaFieldConfig::setKeyPropertyType(const QString &key_property_type) {
    m_key_property_type = key_property_type;
    m_key_property_type_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaFieldConfig::is_key_property_type_Set() const{
    return m_key_property_type_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaFieldConfig::is_key_property_type_Valid() const{
    return m_key_property_type_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1alphaFieldConfig::getRecsFilterableOption() const {
    return m_recs_filterable_option;
}
void OAIGoogleCloudDiscoveryengineV1alphaFieldConfig::setRecsFilterableOption(const QString &recs_filterable_option) {
    m_recs_filterable_option = recs_filterable_option;
    m_recs_filterable_option_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaFieldConfig::is_recs_filterable_option_Set() const{
    return m_recs_filterable_option_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaFieldConfig::is_recs_filterable_option_Valid() const{
    return m_recs_filterable_option_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1alphaFieldConfig::getRetrievableOption() const {
    return m_retrievable_option;
}
void OAIGoogleCloudDiscoveryengineV1alphaFieldConfig::setRetrievableOption(const QString &retrievable_option) {
    m_retrievable_option = retrievable_option;
    m_retrievable_option_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaFieldConfig::is_retrievable_option_Set() const{
    return m_retrievable_option_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaFieldConfig::is_retrievable_option_Valid() const{
    return m_retrievable_option_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1alphaFieldConfig::getSearchableOption() const {
    return m_searchable_option;
}
void OAIGoogleCloudDiscoveryengineV1alphaFieldConfig::setSearchableOption(const QString &searchable_option) {
    m_searchable_option = searchable_option;
    m_searchable_option_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaFieldConfig::is_searchable_option_Set() const{
    return m_searchable_option_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaFieldConfig::is_searchable_option_Valid() const{
    return m_searchable_option_isValid;
}

bool OAIGoogleCloudDiscoveryengineV1alphaFieldConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_completable_option_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dynamic_facetable_option_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_field_path_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_field_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_indexable_option_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_key_property_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_recs_filterable_option_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_retrievable_option_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_searchable_option_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDiscoveryengineV1alphaFieldConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
