/**
 * Discovery Engine API
 * Discovery Engine API.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDiscoveryengineV1alphaWidgetConfigUIComponentField.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDiscoveryengineV1alphaWidgetConfigUIComponentField::OAIGoogleCloudDiscoveryengineV1alphaWidgetConfigUIComponentField(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDiscoveryengineV1alphaWidgetConfigUIComponentField::OAIGoogleCloudDiscoveryengineV1alphaWidgetConfigUIComponentField() {
    this->initializeModel();
}

OAIGoogleCloudDiscoveryengineV1alphaWidgetConfigUIComponentField::~OAIGoogleCloudDiscoveryengineV1alphaWidgetConfigUIComponentField() {}

void OAIGoogleCloudDiscoveryengineV1alphaWidgetConfigUIComponentField::initializeModel() {

    m_device_visibility_isSet = false;
    m_device_visibility_isValid = false;

    m_display_template_isSet = false;
    m_display_template_isValid = false;

    m_field_isSet = false;
    m_field_isValid = false;
}

void OAIGoogleCloudDiscoveryengineV1alphaWidgetConfigUIComponentField::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDiscoveryengineV1alphaWidgetConfigUIComponentField::fromJsonObject(QJsonObject json) {

    m_device_visibility_isValid = ::OpenAPI::fromJsonValue(m_device_visibility, json[QString("deviceVisibility")]);
    m_device_visibility_isSet = !json[QString("deviceVisibility")].isNull() && m_device_visibility_isValid;

    m_display_template_isValid = ::OpenAPI::fromJsonValue(m_display_template, json[QString("displayTemplate")]);
    m_display_template_isSet = !json[QString("displayTemplate")].isNull() && m_display_template_isValid;

    m_field_isValid = ::OpenAPI::fromJsonValue(m_field, json[QString("field")]);
    m_field_isSet = !json[QString("field")].isNull() && m_field_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1alphaWidgetConfigUIComponentField::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDiscoveryengineV1alphaWidgetConfigUIComponentField::asJsonObject() const {
    QJsonObject obj;
    if (m_device_visibility.size() > 0) {
        obj.insert(QString("deviceVisibility"), ::OpenAPI::toJsonValue(m_device_visibility));
    }
    if (m_display_template_isSet) {
        obj.insert(QString("displayTemplate"), ::OpenAPI::toJsonValue(m_display_template));
    }
    if (m_field_isSet) {
        obj.insert(QString("field"), ::OpenAPI::toJsonValue(m_field));
    }
    return obj;
}

QList<QString> OAIGoogleCloudDiscoveryengineV1alphaWidgetConfigUIComponentField::getDeviceVisibility() const {
    return m_device_visibility;
}
void OAIGoogleCloudDiscoveryengineV1alphaWidgetConfigUIComponentField::setDeviceVisibility(const QList<QString> &device_visibility) {
    m_device_visibility = device_visibility;
    m_device_visibility_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConfigUIComponentField::is_device_visibility_Set() const{
    return m_device_visibility_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConfigUIComponentField::is_device_visibility_Valid() const{
    return m_device_visibility_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1alphaWidgetConfigUIComponentField::getDisplayTemplate() const {
    return m_display_template;
}
void OAIGoogleCloudDiscoveryengineV1alphaWidgetConfigUIComponentField::setDisplayTemplate(const QString &display_template) {
    m_display_template = display_template;
    m_display_template_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConfigUIComponentField::is_display_template_Set() const{
    return m_display_template_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConfigUIComponentField::is_display_template_Valid() const{
    return m_display_template_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1alphaWidgetConfigUIComponentField::getField() const {
    return m_field;
}
void OAIGoogleCloudDiscoveryengineV1alphaWidgetConfigUIComponentField::setField(const QString &field) {
    m_field = field;
    m_field_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConfigUIComponentField::is_field_Set() const{
    return m_field_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConfigUIComponentField::is_field_Valid() const{
    return m_field_isValid;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConfigUIComponentField::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_device_visibility.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_template_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_field_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConfigUIComponentField::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
