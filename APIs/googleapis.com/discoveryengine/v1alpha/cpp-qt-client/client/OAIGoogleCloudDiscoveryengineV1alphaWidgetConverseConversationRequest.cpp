/**
 * Discovery Engine API
 * Discovery Engine API.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDiscoveryengineV1alphaWidgetConverseConversationRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDiscoveryengineV1alphaWidgetConverseConversationRequest::OAIGoogleCloudDiscoveryengineV1alphaWidgetConverseConversationRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDiscoveryengineV1alphaWidgetConverseConversationRequest::OAIGoogleCloudDiscoveryengineV1alphaWidgetConverseConversationRequest() {
    this->initializeModel();
}

OAIGoogleCloudDiscoveryengineV1alphaWidgetConverseConversationRequest::~OAIGoogleCloudDiscoveryengineV1alphaWidgetConverseConversationRequest() {}

void OAIGoogleCloudDiscoveryengineV1alphaWidgetConverseConversationRequest::initializeModel() {

    m_additional_params_isSet = false;
    m_additional_params_isValid = false;

    m_config_id_isSet = false;
    m_config_id_isValid = false;

    m_conversation_id_isSet = false;
    m_conversation_id_isValid = false;

    m_converse_conversation_request_isSet = false;
    m_converse_conversation_request_isValid = false;
}

void OAIGoogleCloudDiscoveryengineV1alphaWidgetConverseConversationRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDiscoveryengineV1alphaWidgetConverseConversationRequest::fromJsonObject(QJsonObject json) {

    m_additional_params_isValid = ::OpenAPI::fromJsonValue(m_additional_params, json[QString("additionalParams")]);
    m_additional_params_isSet = !json[QString("additionalParams")].isNull() && m_additional_params_isValid;

    m_config_id_isValid = ::OpenAPI::fromJsonValue(m_config_id, json[QString("configId")]);
    m_config_id_isSet = !json[QString("configId")].isNull() && m_config_id_isValid;

    m_conversation_id_isValid = ::OpenAPI::fromJsonValue(m_conversation_id, json[QString("conversationId")]);
    m_conversation_id_isSet = !json[QString("conversationId")].isNull() && m_conversation_id_isValid;

    m_converse_conversation_request_isValid = ::OpenAPI::fromJsonValue(m_converse_conversation_request, json[QString("converseConversationRequest")]);
    m_converse_conversation_request_isSet = !json[QString("converseConversationRequest")].isNull() && m_converse_conversation_request_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1alphaWidgetConverseConversationRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDiscoveryengineV1alphaWidgetConverseConversationRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_additional_params.isSet()) {
        obj.insert(QString("additionalParams"), ::OpenAPI::toJsonValue(m_additional_params));
    }
    if (m_config_id_isSet) {
        obj.insert(QString("configId"), ::OpenAPI::toJsonValue(m_config_id));
    }
    if (m_conversation_id_isSet) {
        obj.insert(QString("conversationId"), ::OpenAPI::toJsonValue(m_conversation_id));
    }
    if (m_converse_conversation_request.isSet()) {
        obj.insert(QString("converseConversationRequest"), ::OpenAPI::toJsonValue(m_converse_conversation_request));
    }
    return obj;
}

OAIGoogleCloudDiscoveryengineV1alphaAdditionalParams OAIGoogleCloudDiscoveryengineV1alphaWidgetConverseConversationRequest::getAdditionalParams() const {
    return m_additional_params;
}
void OAIGoogleCloudDiscoveryengineV1alphaWidgetConverseConversationRequest::setAdditionalParams(const OAIGoogleCloudDiscoveryengineV1alphaAdditionalParams &additional_params) {
    m_additional_params = additional_params;
    m_additional_params_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConverseConversationRequest::is_additional_params_Set() const{
    return m_additional_params_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConverseConversationRequest::is_additional_params_Valid() const{
    return m_additional_params_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1alphaWidgetConverseConversationRequest::getConfigId() const {
    return m_config_id;
}
void OAIGoogleCloudDiscoveryengineV1alphaWidgetConverseConversationRequest::setConfigId(const QString &config_id) {
    m_config_id = config_id;
    m_config_id_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConverseConversationRequest::is_config_id_Set() const{
    return m_config_id_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConverseConversationRequest::is_config_id_Valid() const{
    return m_config_id_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1alphaWidgetConverseConversationRequest::getConversationId() const {
    return m_conversation_id;
}
void OAIGoogleCloudDiscoveryengineV1alphaWidgetConverseConversationRequest::setConversationId(const QString &conversation_id) {
    m_conversation_id = conversation_id;
    m_conversation_id_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConverseConversationRequest::is_conversation_id_Set() const{
    return m_conversation_id_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConverseConversationRequest::is_conversation_id_Valid() const{
    return m_conversation_id_isValid;
}

OAIGoogleCloudDiscoveryengineV1alphaConverseConversationRequest OAIGoogleCloudDiscoveryengineV1alphaWidgetConverseConversationRequest::getConverseConversationRequest() const {
    return m_converse_conversation_request;
}
void OAIGoogleCloudDiscoveryengineV1alphaWidgetConverseConversationRequest::setConverseConversationRequest(const OAIGoogleCloudDiscoveryengineV1alphaConverseConversationRequest &converse_conversation_request) {
    m_converse_conversation_request = converse_conversation_request;
    m_converse_conversation_request_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConverseConversationRequest::is_converse_conversation_request_Set() const{
    return m_converse_conversation_request_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConverseConversationRequest::is_converse_conversation_request_Valid() const{
    return m_converse_conversation_request_isValid;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConverseConversationRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_additional_params.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_config_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_conversation_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_converse_conversation_request.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConverseConversationRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
