/**
 * Discovery Engine API
 * Discovery Engine API.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDiscoveryengineV1alphaTextInput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDiscoveryengineV1alphaTextInput::OAIGoogleCloudDiscoveryengineV1alphaTextInput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDiscoveryengineV1alphaTextInput::OAIGoogleCloudDiscoveryengineV1alphaTextInput() {
    this->initializeModel();
}

OAIGoogleCloudDiscoveryengineV1alphaTextInput::~OAIGoogleCloudDiscoveryengineV1alphaTextInput() {}

void OAIGoogleCloudDiscoveryengineV1alphaTextInput::initializeModel() {

    m_context_isSet = false;
    m_context_isValid = false;

    m_input_isSet = false;
    m_input_isValid = false;
}

void OAIGoogleCloudDiscoveryengineV1alphaTextInput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDiscoveryengineV1alphaTextInput::fromJsonObject(QJsonObject json) {

    m_context_isValid = ::OpenAPI::fromJsonValue(m_context, json[QString("context")]);
    m_context_isSet = !json[QString("context")].isNull() && m_context_isValid;

    m_input_isValid = ::OpenAPI::fromJsonValue(m_input, json[QString("input")]);
    m_input_isSet = !json[QString("input")].isNull() && m_input_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1alphaTextInput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDiscoveryengineV1alphaTextInput::asJsonObject() const {
    QJsonObject obj;
    if (m_context.isSet()) {
        obj.insert(QString("context"), ::OpenAPI::toJsonValue(m_context));
    }
    if (m_input_isSet) {
        obj.insert(QString("input"), ::OpenAPI::toJsonValue(m_input));
    }
    return obj;
}

OAIGoogleCloudDiscoveryengineV1alphaConversationContext OAIGoogleCloudDiscoveryengineV1alphaTextInput::getContext() const {
    return m_context;
}
void OAIGoogleCloudDiscoveryengineV1alphaTextInput::setContext(const OAIGoogleCloudDiscoveryengineV1alphaConversationContext &context) {
    m_context = context;
    m_context_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaTextInput::is_context_Set() const{
    return m_context_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaTextInput::is_context_Valid() const{
    return m_context_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1alphaTextInput::getInput() const {
    return m_input;
}
void OAIGoogleCloudDiscoveryengineV1alphaTextInput::setInput(const QString &input) {
    m_input = input;
    m_input_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaTextInput::is_input_Set() const{
    return m_input_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaTextInput::is_input_Valid() const{
    return m_input_isValid;
}

bool OAIGoogleCloudDiscoveryengineV1alphaTextInput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_context.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_input_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDiscoveryengineV1alphaTextInput::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
