/**
 * Discovery Engine API
 * Discovery Engine API.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDiscoveryengineV1ImportDocumentsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDiscoveryengineV1ImportDocumentsResponse::OAIGoogleCloudDiscoveryengineV1ImportDocumentsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDiscoveryengineV1ImportDocumentsResponse::OAIGoogleCloudDiscoveryengineV1ImportDocumentsResponse() {
    this->initializeModel();
}

OAIGoogleCloudDiscoveryengineV1ImportDocumentsResponse::~OAIGoogleCloudDiscoveryengineV1ImportDocumentsResponse() {}

void OAIGoogleCloudDiscoveryengineV1ImportDocumentsResponse::initializeModel() {

    m_error_config_isSet = false;
    m_error_config_isValid = false;

    m_error_samples_isSet = false;
    m_error_samples_isValid = false;
}

void OAIGoogleCloudDiscoveryengineV1ImportDocumentsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDiscoveryengineV1ImportDocumentsResponse::fromJsonObject(QJsonObject json) {

    m_error_config_isValid = ::OpenAPI::fromJsonValue(m_error_config, json[QString("errorConfig")]);
    m_error_config_isSet = !json[QString("errorConfig")].isNull() && m_error_config_isValid;

    m_error_samples_isValid = ::OpenAPI::fromJsonValue(m_error_samples, json[QString("errorSamples")]);
    m_error_samples_isSet = !json[QString("errorSamples")].isNull() && m_error_samples_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1ImportDocumentsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDiscoveryengineV1ImportDocumentsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_error_config.isSet()) {
        obj.insert(QString("errorConfig"), ::OpenAPI::toJsonValue(m_error_config));
    }
    if (m_error_samples.size() > 0) {
        obj.insert(QString("errorSamples"), ::OpenAPI::toJsonValue(m_error_samples));
    }
    return obj;
}

OAIGoogleCloudDiscoveryengineV1ImportErrorConfig OAIGoogleCloudDiscoveryengineV1ImportDocumentsResponse::getErrorConfig() const {
    return m_error_config;
}
void OAIGoogleCloudDiscoveryengineV1ImportDocumentsResponse::setErrorConfig(const OAIGoogleCloudDiscoveryengineV1ImportErrorConfig &error_config) {
    m_error_config = error_config;
    m_error_config_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1ImportDocumentsResponse::is_error_config_Set() const{
    return m_error_config_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1ImportDocumentsResponse::is_error_config_Valid() const{
    return m_error_config_isValid;
}

QList<OAIGoogleRpcStatus> OAIGoogleCloudDiscoveryengineV1ImportDocumentsResponse::getErrorSamples() const {
    return m_error_samples;
}
void OAIGoogleCloudDiscoveryengineV1ImportDocumentsResponse::setErrorSamples(const QList<OAIGoogleRpcStatus> &error_samples) {
    m_error_samples = error_samples;
    m_error_samples_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1ImportDocumentsResponse::is_error_samples_Set() const{
    return m_error_samples_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1ImportDocumentsResponse::is_error_samples_Valid() const{
    return m_error_samples_isValid;
}

bool OAIGoogleCloudDiscoveryengineV1ImportDocumentsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_error_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_error_samples.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDiscoveryengineV1ImportDocumentsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
