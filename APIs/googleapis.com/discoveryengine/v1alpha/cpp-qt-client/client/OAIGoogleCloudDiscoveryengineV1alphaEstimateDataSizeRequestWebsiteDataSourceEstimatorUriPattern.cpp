/**
 * Discovery Engine API
 * Discovery Engine API.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDiscoveryengineV1alphaEstimateDataSizeRequestWebsiteDataSourceEstimatorUriPattern.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDiscoveryengineV1alphaEstimateDataSizeRequestWebsiteDataSourceEstimatorUriPattern::OAIGoogleCloudDiscoveryengineV1alphaEstimateDataSizeRequestWebsiteDataSourceEstimatorUriPattern(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDiscoveryengineV1alphaEstimateDataSizeRequestWebsiteDataSourceEstimatorUriPattern::OAIGoogleCloudDiscoveryengineV1alphaEstimateDataSizeRequestWebsiteDataSourceEstimatorUriPattern() {
    this->initializeModel();
}

OAIGoogleCloudDiscoveryengineV1alphaEstimateDataSizeRequestWebsiteDataSourceEstimatorUriPattern::~OAIGoogleCloudDiscoveryengineV1alphaEstimateDataSizeRequestWebsiteDataSourceEstimatorUriPattern() {}

void OAIGoogleCloudDiscoveryengineV1alphaEstimateDataSizeRequestWebsiteDataSourceEstimatorUriPattern::initializeModel() {

    m_exact_match_isSet = false;
    m_exact_match_isValid = false;

    m_exclusive_isSet = false;
    m_exclusive_isValid = false;

    m_provided_uri_pattern_isSet = false;
    m_provided_uri_pattern_isValid = false;
}

void OAIGoogleCloudDiscoveryengineV1alphaEstimateDataSizeRequestWebsiteDataSourceEstimatorUriPattern::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDiscoveryengineV1alphaEstimateDataSizeRequestWebsiteDataSourceEstimatorUriPattern::fromJsonObject(QJsonObject json) {

    m_exact_match_isValid = ::OpenAPI::fromJsonValue(m_exact_match, json[QString("exactMatch")]);
    m_exact_match_isSet = !json[QString("exactMatch")].isNull() && m_exact_match_isValid;

    m_exclusive_isValid = ::OpenAPI::fromJsonValue(m_exclusive, json[QString("exclusive")]);
    m_exclusive_isSet = !json[QString("exclusive")].isNull() && m_exclusive_isValid;

    m_provided_uri_pattern_isValid = ::OpenAPI::fromJsonValue(m_provided_uri_pattern, json[QString("providedUriPattern")]);
    m_provided_uri_pattern_isSet = !json[QString("providedUriPattern")].isNull() && m_provided_uri_pattern_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1alphaEstimateDataSizeRequestWebsiteDataSourceEstimatorUriPattern::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDiscoveryengineV1alphaEstimateDataSizeRequestWebsiteDataSourceEstimatorUriPattern::asJsonObject() const {
    QJsonObject obj;
    if (m_exact_match_isSet) {
        obj.insert(QString("exactMatch"), ::OpenAPI::toJsonValue(m_exact_match));
    }
    if (m_exclusive_isSet) {
        obj.insert(QString("exclusive"), ::OpenAPI::toJsonValue(m_exclusive));
    }
    if (m_provided_uri_pattern_isSet) {
        obj.insert(QString("providedUriPattern"), ::OpenAPI::toJsonValue(m_provided_uri_pattern));
    }
    return obj;
}

bool OAIGoogleCloudDiscoveryengineV1alphaEstimateDataSizeRequestWebsiteDataSourceEstimatorUriPattern::isExactMatch() const {
    return m_exact_match;
}
void OAIGoogleCloudDiscoveryengineV1alphaEstimateDataSizeRequestWebsiteDataSourceEstimatorUriPattern::setExactMatch(const bool &exact_match) {
    m_exact_match = exact_match;
    m_exact_match_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaEstimateDataSizeRequestWebsiteDataSourceEstimatorUriPattern::is_exact_match_Set() const{
    return m_exact_match_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaEstimateDataSizeRequestWebsiteDataSourceEstimatorUriPattern::is_exact_match_Valid() const{
    return m_exact_match_isValid;
}

bool OAIGoogleCloudDiscoveryengineV1alphaEstimateDataSizeRequestWebsiteDataSourceEstimatorUriPattern::isExclusive() const {
    return m_exclusive;
}
void OAIGoogleCloudDiscoveryengineV1alphaEstimateDataSizeRequestWebsiteDataSourceEstimatorUriPattern::setExclusive(const bool &exclusive) {
    m_exclusive = exclusive;
    m_exclusive_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaEstimateDataSizeRequestWebsiteDataSourceEstimatorUriPattern::is_exclusive_Set() const{
    return m_exclusive_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaEstimateDataSizeRequestWebsiteDataSourceEstimatorUriPattern::is_exclusive_Valid() const{
    return m_exclusive_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1alphaEstimateDataSizeRequestWebsiteDataSourceEstimatorUriPattern::getProvidedUriPattern() const {
    return m_provided_uri_pattern;
}
void OAIGoogleCloudDiscoveryengineV1alphaEstimateDataSizeRequestWebsiteDataSourceEstimatorUriPattern::setProvidedUriPattern(const QString &provided_uri_pattern) {
    m_provided_uri_pattern = provided_uri_pattern;
    m_provided_uri_pattern_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaEstimateDataSizeRequestWebsiteDataSourceEstimatorUriPattern::is_provided_uri_pattern_Set() const{
    return m_provided_uri_pattern_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaEstimateDataSizeRequestWebsiteDataSourceEstimatorUriPattern::is_provided_uri_pattern_Valid() const{
    return m_provided_uri_pattern_isValid;
}

bool OAIGoogleCloudDiscoveryengineV1alphaEstimateDataSizeRequestWebsiteDataSourceEstimatorUriPattern::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_exact_match_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_exclusive_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_provided_uri_pattern_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDiscoveryengineV1alphaEstimateDataSizeRequestWebsiteDataSourceEstimatorUriPattern::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
