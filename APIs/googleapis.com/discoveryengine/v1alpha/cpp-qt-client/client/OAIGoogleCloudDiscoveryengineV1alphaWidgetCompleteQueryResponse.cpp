/**
 * Discovery Engine API
 * Discovery Engine API.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDiscoveryengineV1alphaWidgetCompleteQueryResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDiscoveryengineV1alphaWidgetCompleteQueryResponse::OAIGoogleCloudDiscoveryengineV1alphaWidgetCompleteQueryResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDiscoveryengineV1alphaWidgetCompleteQueryResponse::OAIGoogleCloudDiscoveryengineV1alphaWidgetCompleteQueryResponse() {
    this->initializeModel();
}

OAIGoogleCloudDiscoveryengineV1alphaWidgetCompleteQueryResponse::~OAIGoogleCloudDiscoveryengineV1alphaWidgetCompleteQueryResponse() {}

void OAIGoogleCloudDiscoveryengineV1alphaWidgetCompleteQueryResponse::initializeModel() {

    m_u_token_isSet = false;
    m_u_token_isValid = false;

    m_widget_query_suggestions_isSet = false;
    m_widget_query_suggestions_isValid = false;
}

void OAIGoogleCloudDiscoveryengineV1alphaWidgetCompleteQueryResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDiscoveryengineV1alphaWidgetCompleteQueryResponse::fromJsonObject(QJsonObject json) {

    m_u_token_isValid = ::OpenAPI::fromJsonValue(m_u_token, json[QString("uToken")]);
    m_u_token_isSet = !json[QString("uToken")].isNull() && m_u_token_isValid;

    m_widget_query_suggestions_isValid = ::OpenAPI::fromJsonValue(m_widget_query_suggestions, json[QString("widgetQuerySuggestions")]);
    m_widget_query_suggestions_isSet = !json[QString("widgetQuerySuggestions")].isNull() && m_widget_query_suggestions_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1alphaWidgetCompleteQueryResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDiscoveryengineV1alphaWidgetCompleteQueryResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_u_token_isSet) {
        obj.insert(QString("uToken"), ::OpenAPI::toJsonValue(m_u_token));
    }
    if (m_widget_query_suggestions.size() > 0) {
        obj.insert(QString("widgetQuerySuggestions"), ::OpenAPI::toJsonValue(m_widget_query_suggestions));
    }
    return obj;
}

QString OAIGoogleCloudDiscoveryengineV1alphaWidgetCompleteQueryResponse::getUToken() const {
    return m_u_token;
}
void OAIGoogleCloudDiscoveryengineV1alphaWidgetCompleteQueryResponse::setUToken(const QString &u_token) {
    m_u_token = u_token;
    m_u_token_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetCompleteQueryResponse::is_u_token_Set() const{
    return m_u_token_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetCompleteQueryResponse::is_u_token_Valid() const{
    return m_u_token_isValid;
}

QList<OAIGoogleCloudDiscoveryengineV1alphaWidgetCompleteQueryResponseWidgetQuerySuggestion> OAIGoogleCloudDiscoveryengineV1alphaWidgetCompleteQueryResponse::getWidgetQuerySuggestions() const {
    return m_widget_query_suggestions;
}
void OAIGoogleCloudDiscoveryengineV1alphaWidgetCompleteQueryResponse::setWidgetQuerySuggestions(const QList<OAIGoogleCloudDiscoveryengineV1alphaWidgetCompleteQueryResponseWidgetQuerySuggestion> &widget_query_suggestions) {
    m_widget_query_suggestions = widget_query_suggestions;
    m_widget_query_suggestions_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetCompleteQueryResponse::is_widget_query_suggestions_Set() const{
    return m_widget_query_suggestions_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetCompleteQueryResponse::is_widget_query_suggestions_Valid() const{
    return m_widget_query_suggestions_isValid;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetCompleteQueryResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_u_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_widget_query_suggestions.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetCompleteQueryResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
