/**
 * Discovery Engine API
 * Discovery Engine API.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDiscoveryengineV1alphaEstimateDataSizeRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDiscoveryengineV1alphaEstimateDataSizeRequest::OAIGoogleCloudDiscoveryengineV1alphaEstimateDataSizeRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDiscoveryengineV1alphaEstimateDataSizeRequest::OAIGoogleCloudDiscoveryengineV1alphaEstimateDataSizeRequest() {
    this->initializeModel();
}

OAIGoogleCloudDiscoveryengineV1alphaEstimateDataSizeRequest::~OAIGoogleCloudDiscoveryengineV1alphaEstimateDataSizeRequest() {}

void OAIGoogleCloudDiscoveryengineV1alphaEstimateDataSizeRequest::initializeModel() {

    m_file_data_source_isSet = false;
    m_file_data_source_isValid = false;

    m_website_data_source_isSet = false;
    m_website_data_source_isValid = false;
}

void OAIGoogleCloudDiscoveryengineV1alphaEstimateDataSizeRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDiscoveryengineV1alphaEstimateDataSizeRequest::fromJsonObject(QJsonObject json) {

    m_file_data_source_isValid = ::OpenAPI::fromJsonValue(m_file_data_source, json[QString("fileDataSource")]);
    m_file_data_source_isSet = !json[QString("fileDataSource")].isNull() && m_file_data_source_isValid;

    m_website_data_source_isValid = ::OpenAPI::fromJsonValue(m_website_data_source, json[QString("websiteDataSource")]);
    m_website_data_source_isSet = !json[QString("websiteDataSource")].isNull() && m_website_data_source_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1alphaEstimateDataSizeRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDiscoveryengineV1alphaEstimateDataSizeRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_file_data_source.isSet()) {
        obj.insert(QString("fileDataSource"), ::OpenAPI::toJsonValue(m_file_data_source));
    }
    if (m_website_data_source.isSet()) {
        obj.insert(QString("websiteDataSource"), ::OpenAPI::toJsonValue(m_website_data_source));
    }
    return obj;
}

OAIGoogleCloudDiscoveryengineV1alphaEstimateDataSizeRequestFileDataSource OAIGoogleCloudDiscoveryengineV1alphaEstimateDataSizeRequest::getFileDataSource() const {
    return m_file_data_source;
}
void OAIGoogleCloudDiscoveryengineV1alphaEstimateDataSizeRequest::setFileDataSource(const OAIGoogleCloudDiscoveryengineV1alphaEstimateDataSizeRequestFileDataSource &file_data_source) {
    m_file_data_source = file_data_source;
    m_file_data_source_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaEstimateDataSizeRequest::is_file_data_source_Set() const{
    return m_file_data_source_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaEstimateDataSizeRequest::is_file_data_source_Valid() const{
    return m_file_data_source_isValid;
}

OAIGoogleCloudDiscoveryengineV1alphaEstimateDataSizeRequestWebsiteDataSource OAIGoogleCloudDiscoveryengineV1alphaEstimateDataSizeRequest::getWebsiteDataSource() const {
    return m_website_data_source;
}
void OAIGoogleCloudDiscoveryengineV1alphaEstimateDataSizeRequest::setWebsiteDataSource(const OAIGoogleCloudDiscoveryengineV1alphaEstimateDataSizeRequestWebsiteDataSource &website_data_source) {
    m_website_data_source = website_data_source;
    m_website_data_source_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaEstimateDataSizeRequest::is_website_data_source_Set() const{
    return m_website_data_source_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaEstimateDataSizeRequest::is_website_data_source_Valid() const{
    return m_website_data_source_isValid;
}

bool OAIGoogleCloudDiscoveryengineV1alphaEstimateDataSizeRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_file_data_source.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_website_data_source.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDiscoveryengineV1alphaEstimateDataSizeRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
