/**
 * Discovery Engine API
 * Discovery Engine API.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDiscoveryengineV1alphaEstimateDataSizeRequestWebsiteDataSource.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDiscoveryengineV1alphaEstimateDataSizeRequestWebsiteDataSource::OAIGoogleCloudDiscoveryengineV1alphaEstimateDataSizeRequestWebsiteDataSource(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDiscoveryengineV1alphaEstimateDataSizeRequestWebsiteDataSource::OAIGoogleCloudDiscoveryengineV1alphaEstimateDataSizeRequestWebsiteDataSource() {
    this->initializeModel();
}

OAIGoogleCloudDiscoveryengineV1alphaEstimateDataSizeRequestWebsiteDataSource::~OAIGoogleCloudDiscoveryengineV1alphaEstimateDataSizeRequestWebsiteDataSource() {}

void OAIGoogleCloudDiscoveryengineV1alphaEstimateDataSizeRequestWebsiteDataSource::initializeModel() {

    m_estimator_uri_patterns_isSet = false;
    m_estimator_uri_patterns_isValid = false;
}

void OAIGoogleCloudDiscoveryengineV1alphaEstimateDataSizeRequestWebsiteDataSource::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDiscoveryengineV1alphaEstimateDataSizeRequestWebsiteDataSource::fromJsonObject(QJsonObject json) {

    m_estimator_uri_patterns_isValid = ::OpenAPI::fromJsonValue(m_estimator_uri_patterns, json[QString("estimatorUriPatterns")]);
    m_estimator_uri_patterns_isSet = !json[QString("estimatorUriPatterns")].isNull() && m_estimator_uri_patterns_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1alphaEstimateDataSizeRequestWebsiteDataSource::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDiscoveryengineV1alphaEstimateDataSizeRequestWebsiteDataSource::asJsonObject() const {
    QJsonObject obj;
    if (m_estimator_uri_patterns.size() > 0) {
        obj.insert(QString("estimatorUriPatterns"), ::OpenAPI::toJsonValue(m_estimator_uri_patterns));
    }
    return obj;
}

QList<OAIGoogleCloudDiscoveryengineV1alphaEstimateDataSizeRequestWebsiteDataSourceEstimatorUriPattern> OAIGoogleCloudDiscoveryengineV1alphaEstimateDataSizeRequestWebsiteDataSource::getEstimatorUriPatterns() const {
    return m_estimator_uri_patterns;
}
void OAIGoogleCloudDiscoveryengineV1alphaEstimateDataSizeRequestWebsiteDataSource::setEstimatorUriPatterns(const QList<OAIGoogleCloudDiscoveryengineV1alphaEstimateDataSizeRequestWebsiteDataSourceEstimatorUriPattern> &estimator_uri_patterns) {
    m_estimator_uri_patterns = estimator_uri_patterns;
    m_estimator_uri_patterns_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaEstimateDataSizeRequestWebsiteDataSource::is_estimator_uri_patterns_Set() const{
    return m_estimator_uri_patterns_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaEstimateDataSizeRequestWebsiteDataSource::is_estimator_uri_patterns_Valid() const{
    return m_estimator_uri_patterns_isValid;
}

bool OAIGoogleCloudDiscoveryengineV1alphaEstimateDataSizeRequestWebsiteDataSource::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_estimator_uri_patterns.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDiscoveryengineV1alphaEstimateDataSizeRequestWebsiteDataSource::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
