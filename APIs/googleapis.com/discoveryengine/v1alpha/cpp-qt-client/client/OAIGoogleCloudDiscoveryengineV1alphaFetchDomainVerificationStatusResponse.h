/**
 * Discovery Engine API
 * Discovery Engine API.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudDiscoveryengineV1alphaFetchDomainVerificationStatusResponse.h
 *
 * Response message for SiteSearchEngineService.FetchDomainVerificationStatus method.
 */

#ifndef OAIGoogleCloudDiscoveryengineV1alphaFetchDomainVerificationStatusResponse_H
#define OAIGoogleCloudDiscoveryengineV1alphaFetchDomainVerificationStatusResponse_H

#include <QJsonObject>

#include "OAIGoogleCloudDiscoveryengineV1alphaTargetSite.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleCloudDiscoveryengineV1alphaTargetSite;

class OAIGoogleCloudDiscoveryengineV1alphaFetchDomainVerificationStatusResponse : public OAIObject {
public:
    OAIGoogleCloudDiscoveryengineV1alphaFetchDomainVerificationStatusResponse();
    OAIGoogleCloudDiscoveryengineV1alphaFetchDomainVerificationStatusResponse(QString json);
    ~OAIGoogleCloudDiscoveryengineV1alphaFetchDomainVerificationStatusResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getNextPageToken() const;
    void setNextPageToken(const QString &next_page_token);
    bool is_next_page_token_Set() const;
    bool is_next_page_token_Valid() const;

    QList<OAIGoogleCloudDiscoveryengineV1alphaTargetSite> getTargetSites() const;
    void setTargetSites(const QList<OAIGoogleCloudDiscoveryengineV1alphaTargetSite> &target_sites);
    bool is_target_sites_Set() const;
    bool is_target_sites_Valid() const;

    qint32 getTotalSize() const;
    void setTotalSize(const qint32 &total_size);
    bool is_total_size_Set() const;
    bool is_total_size_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_next_page_token;
    bool m_next_page_token_isSet;
    bool m_next_page_token_isValid;

    QList<OAIGoogleCloudDiscoveryengineV1alphaTargetSite> m_target_sites;
    bool m_target_sites_isSet;
    bool m_target_sites_isValid;

    qint32 m_total_size;
    bool m_total_size_isSet;
    bool m_total_size_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudDiscoveryengineV1alphaFetchDomainVerificationStatusResponse)

#endif // OAIGoogleCloudDiscoveryengineV1alphaFetchDomainVerificationStatusResponse_H
