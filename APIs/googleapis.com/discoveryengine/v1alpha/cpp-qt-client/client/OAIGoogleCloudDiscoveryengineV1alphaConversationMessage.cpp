/**
 * Discovery Engine API
 * Discovery Engine API.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDiscoveryengineV1alphaConversationMessage.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDiscoveryengineV1alphaConversationMessage::OAIGoogleCloudDiscoveryengineV1alphaConversationMessage(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDiscoveryengineV1alphaConversationMessage::OAIGoogleCloudDiscoveryengineV1alphaConversationMessage() {
    this->initializeModel();
}

OAIGoogleCloudDiscoveryengineV1alphaConversationMessage::~OAIGoogleCloudDiscoveryengineV1alphaConversationMessage() {}

void OAIGoogleCloudDiscoveryengineV1alphaConversationMessage::initializeModel() {

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_reply_isSet = false;
    m_reply_isValid = false;

    m_user_input_isSet = false;
    m_user_input_isValid = false;
}

void OAIGoogleCloudDiscoveryengineV1alphaConversationMessage::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDiscoveryengineV1alphaConversationMessage::fromJsonObject(QJsonObject json) {

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_reply_isValid = ::OpenAPI::fromJsonValue(m_reply, json[QString("reply")]);
    m_reply_isSet = !json[QString("reply")].isNull() && m_reply_isValid;

    m_user_input_isValid = ::OpenAPI::fromJsonValue(m_user_input, json[QString("userInput")]);
    m_user_input_isSet = !json[QString("userInput")].isNull() && m_user_input_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1alphaConversationMessage::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDiscoveryengineV1alphaConversationMessage::asJsonObject() const {
    QJsonObject obj;
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_reply.isSet()) {
        obj.insert(QString("reply"), ::OpenAPI::toJsonValue(m_reply));
    }
    if (m_user_input.isSet()) {
        obj.insert(QString("userInput"), ::OpenAPI::toJsonValue(m_user_input));
    }
    return obj;
}

QString OAIGoogleCloudDiscoveryengineV1alphaConversationMessage::getCreateTime() const {
    return m_create_time;
}
void OAIGoogleCloudDiscoveryengineV1alphaConversationMessage::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaConversationMessage::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaConversationMessage::is_create_time_Valid() const{
    return m_create_time_isValid;
}

OAIGoogleCloudDiscoveryengineV1alphaReply OAIGoogleCloudDiscoveryengineV1alphaConversationMessage::getReply() const {
    return m_reply;
}
void OAIGoogleCloudDiscoveryengineV1alphaConversationMessage::setReply(const OAIGoogleCloudDiscoveryengineV1alphaReply &reply) {
    m_reply = reply;
    m_reply_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaConversationMessage::is_reply_Set() const{
    return m_reply_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaConversationMessage::is_reply_Valid() const{
    return m_reply_isValid;
}

OAIGoogleCloudDiscoveryengineV1alphaTextInput OAIGoogleCloudDiscoveryengineV1alphaConversationMessage::getUserInput() const {
    return m_user_input;
}
void OAIGoogleCloudDiscoveryengineV1alphaConversationMessage::setUserInput(const OAIGoogleCloudDiscoveryengineV1alphaTextInput &user_input) {
    m_user_input = user_input;
    m_user_input_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaConversationMessage::is_user_input_Set() const{
    return m_user_input_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaConversationMessage::is_user_input_Valid() const{
    return m_user_input_isValid;
}

bool OAIGoogleCloudDiscoveryengineV1alphaConversationMessage::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reply.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_input.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDiscoveryengineV1alphaConversationMessage::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
