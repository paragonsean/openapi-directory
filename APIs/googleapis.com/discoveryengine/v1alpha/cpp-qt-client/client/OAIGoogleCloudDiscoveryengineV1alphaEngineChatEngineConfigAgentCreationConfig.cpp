/**
 * Discovery Engine API
 * Discovery Engine API.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDiscoveryengineV1alphaEngineChatEngineConfigAgentCreationConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDiscoveryengineV1alphaEngineChatEngineConfigAgentCreationConfig::OAIGoogleCloudDiscoveryengineV1alphaEngineChatEngineConfigAgentCreationConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDiscoveryengineV1alphaEngineChatEngineConfigAgentCreationConfig::OAIGoogleCloudDiscoveryengineV1alphaEngineChatEngineConfigAgentCreationConfig() {
    this->initializeModel();
}

OAIGoogleCloudDiscoveryengineV1alphaEngineChatEngineConfigAgentCreationConfig::~OAIGoogleCloudDiscoveryengineV1alphaEngineChatEngineConfigAgentCreationConfig() {}

void OAIGoogleCloudDiscoveryengineV1alphaEngineChatEngineConfigAgentCreationConfig::initializeModel() {

    m_business_isSet = false;
    m_business_isValid = false;

    m_default_language_code_isSet = false;
    m_default_language_code_isValid = false;

    m_location_isSet = false;
    m_location_isValid = false;

    m_time_zone_isSet = false;
    m_time_zone_isValid = false;
}

void OAIGoogleCloudDiscoveryengineV1alphaEngineChatEngineConfigAgentCreationConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDiscoveryengineV1alphaEngineChatEngineConfigAgentCreationConfig::fromJsonObject(QJsonObject json) {

    m_business_isValid = ::OpenAPI::fromJsonValue(m_business, json[QString("business")]);
    m_business_isSet = !json[QString("business")].isNull() && m_business_isValid;

    m_default_language_code_isValid = ::OpenAPI::fromJsonValue(m_default_language_code, json[QString("defaultLanguageCode")]);
    m_default_language_code_isSet = !json[QString("defaultLanguageCode")].isNull() && m_default_language_code_isValid;

    m_location_isValid = ::OpenAPI::fromJsonValue(m_location, json[QString("location")]);
    m_location_isSet = !json[QString("location")].isNull() && m_location_isValid;

    m_time_zone_isValid = ::OpenAPI::fromJsonValue(m_time_zone, json[QString("timeZone")]);
    m_time_zone_isSet = !json[QString("timeZone")].isNull() && m_time_zone_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1alphaEngineChatEngineConfigAgentCreationConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDiscoveryengineV1alphaEngineChatEngineConfigAgentCreationConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_business_isSet) {
        obj.insert(QString("business"), ::OpenAPI::toJsonValue(m_business));
    }
    if (m_default_language_code_isSet) {
        obj.insert(QString("defaultLanguageCode"), ::OpenAPI::toJsonValue(m_default_language_code));
    }
    if (m_location_isSet) {
        obj.insert(QString("location"), ::OpenAPI::toJsonValue(m_location));
    }
    if (m_time_zone_isSet) {
        obj.insert(QString("timeZone"), ::OpenAPI::toJsonValue(m_time_zone));
    }
    return obj;
}

QString OAIGoogleCloudDiscoveryengineV1alphaEngineChatEngineConfigAgentCreationConfig::getBusiness() const {
    return m_business;
}
void OAIGoogleCloudDiscoveryengineV1alphaEngineChatEngineConfigAgentCreationConfig::setBusiness(const QString &business) {
    m_business = business;
    m_business_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaEngineChatEngineConfigAgentCreationConfig::is_business_Set() const{
    return m_business_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaEngineChatEngineConfigAgentCreationConfig::is_business_Valid() const{
    return m_business_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1alphaEngineChatEngineConfigAgentCreationConfig::getDefaultLanguageCode() const {
    return m_default_language_code;
}
void OAIGoogleCloudDiscoveryengineV1alphaEngineChatEngineConfigAgentCreationConfig::setDefaultLanguageCode(const QString &default_language_code) {
    m_default_language_code = default_language_code;
    m_default_language_code_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaEngineChatEngineConfigAgentCreationConfig::is_default_language_code_Set() const{
    return m_default_language_code_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaEngineChatEngineConfigAgentCreationConfig::is_default_language_code_Valid() const{
    return m_default_language_code_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1alphaEngineChatEngineConfigAgentCreationConfig::getLocation() const {
    return m_location;
}
void OAIGoogleCloudDiscoveryengineV1alphaEngineChatEngineConfigAgentCreationConfig::setLocation(const QString &location) {
    m_location = location;
    m_location_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaEngineChatEngineConfigAgentCreationConfig::is_location_Set() const{
    return m_location_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaEngineChatEngineConfigAgentCreationConfig::is_location_Valid() const{
    return m_location_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1alphaEngineChatEngineConfigAgentCreationConfig::getTimeZone() const {
    return m_time_zone;
}
void OAIGoogleCloudDiscoveryengineV1alphaEngineChatEngineConfigAgentCreationConfig::setTimeZone(const QString &time_zone) {
    m_time_zone = time_zone;
    m_time_zone_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaEngineChatEngineConfigAgentCreationConfig::is_time_zone_Set() const{
    return m_time_zone_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaEngineChatEngineConfigAgentCreationConfig::is_time_zone_Valid() const{
    return m_time_zone_isValid;
}

bool OAIGoogleCloudDiscoveryengineV1alphaEngineChatEngineConfigAgentCreationConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_business_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_default_language_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_location_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_time_zone_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDiscoveryengineV1alphaEngineChatEngineConfigAgentCreationConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
