/**
 * Discovery Engine API
 * Discovery Engine API.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDiscoveryengineV1SiteVerificationInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDiscoveryengineV1SiteVerificationInfo::OAIGoogleCloudDiscoveryengineV1SiteVerificationInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDiscoveryengineV1SiteVerificationInfo::OAIGoogleCloudDiscoveryengineV1SiteVerificationInfo() {
    this->initializeModel();
}

OAIGoogleCloudDiscoveryengineV1SiteVerificationInfo::~OAIGoogleCloudDiscoveryengineV1SiteVerificationInfo() {}

void OAIGoogleCloudDiscoveryengineV1SiteVerificationInfo::initializeModel() {

    m_site_verification_state_isSet = false;
    m_site_verification_state_isValid = false;

    m_verify_time_isSet = false;
    m_verify_time_isValid = false;
}

void OAIGoogleCloudDiscoveryengineV1SiteVerificationInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDiscoveryengineV1SiteVerificationInfo::fromJsonObject(QJsonObject json) {

    m_site_verification_state_isValid = ::OpenAPI::fromJsonValue(m_site_verification_state, json[QString("siteVerificationState")]);
    m_site_verification_state_isSet = !json[QString("siteVerificationState")].isNull() && m_site_verification_state_isValid;

    m_verify_time_isValid = ::OpenAPI::fromJsonValue(m_verify_time, json[QString("verifyTime")]);
    m_verify_time_isSet = !json[QString("verifyTime")].isNull() && m_verify_time_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1SiteVerificationInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDiscoveryengineV1SiteVerificationInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_site_verification_state_isSet) {
        obj.insert(QString("siteVerificationState"), ::OpenAPI::toJsonValue(m_site_verification_state));
    }
    if (m_verify_time_isSet) {
        obj.insert(QString("verifyTime"), ::OpenAPI::toJsonValue(m_verify_time));
    }
    return obj;
}

QString OAIGoogleCloudDiscoveryengineV1SiteVerificationInfo::getSiteVerificationState() const {
    return m_site_verification_state;
}
void OAIGoogleCloudDiscoveryengineV1SiteVerificationInfo::setSiteVerificationState(const QString &site_verification_state) {
    m_site_verification_state = site_verification_state;
    m_site_verification_state_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1SiteVerificationInfo::is_site_verification_state_Set() const{
    return m_site_verification_state_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1SiteVerificationInfo::is_site_verification_state_Valid() const{
    return m_site_verification_state_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1SiteVerificationInfo::getVerifyTime() const {
    return m_verify_time;
}
void OAIGoogleCloudDiscoveryengineV1SiteVerificationInfo::setVerifyTime(const QString &verify_time) {
    m_verify_time = verify_time;
    m_verify_time_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1SiteVerificationInfo::is_verify_time_Set() const{
    return m_verify_time_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1SiteVerificationInfo::is_verify_time_Valid() const{
    return m_verify_time_isValid;
}

bool OAIGoogleCloudDiscoveryengineV1SiteVerificationInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_site_verification_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_verify_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDiscoveryengineV1SiteVerificationInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
