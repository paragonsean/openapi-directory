/**
 * Discovery Engine API
 * Discovery Engine API.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig() {
    this->initializeModel();
}

OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::~OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig() {}

void OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::initializeModel() {

    m_allow_public_access_isSet = false;
    m_allow_public_access_isValid = false;

    m_allowlisted_domains_isSet = false;
    m_allowlisted_domains_isValid = false;

    m_config_id_isSet = false;
    m_config_id_isValid = false;

    m_content_search_spec_isSet = false;
    m_content_search_spec_isValid = false;

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_data_store_type_isSet = false;
    m_data_store_type_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_enable_autocomplete_isSet = false;
    m_enable_autocomplete_isValid = false;

    m_enable_conversational_search_isSet = false;
    m_enable_conversational_search_isValid = false;

    m_enable_quality_feedback_isSet = false;
    m_enable_quality_feedback_isValid = false;

    m_enable_result_score_isSet = false;
    m_enable_result_score_isValid = false;

    m_enable_safe_search_isSet = false;
    m_enable_safe_search_isValid = false;

    m_enable_snippet_result_summary_isSet = false;
    m_enable_snippet_result_summary_isValid = false;

    m_enable_summarization_isSet = false;
    m_enable_summarization_isValid = false;

    m_enable_web_app_isSet = false;
    m_enable_web_app_isValid = false;

    m_facet_field_isSet = false;
    m_facet_field_isValid = false;

    m_fields_ui_components_map_isSet = false;
    m_fields_ui_components_map_isValid = false;

    m_industry_vertical_isSet = false;
    m_industry_vertical_isValid = false;

    m_llm_enabled_isSet = false;
    m_llm_enabled_isValid = false;

    m_minimum_data_term_accepted_isSet = false;
    m_minimum_data_term_accepted_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_result_display_type_isSet = false;
    m_result_display_type_isValid = false;

    m_solution_type_isSet = false;
    m_solution_type_isValid = false;

    m_update_time_isSet = false;
    m_update_time_isValid = false;
}

void OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::fromJsonObject(QJsonObject json) {

    m_allow_public_access_isValid = ::OpenAPI::fromJsonValue(m_allow_public_access, json[QString("allowPublicAccess")]);
    m_allow_public_access_isSet = !json[QString("allowPublicAccess")].isNull() && m_allow_public_access_isValid;

    m_allowlisted_domains_isValid = ::OpenAPI::fromJsonValue(m_allowlisted_domains, json[QString("allowlistedDomains")]);
    m_allowlisted_domains_isSet = !json[QString("allowlistedDomains")].isNull() && m_allowlisted_domains_isValid;

    m_config_id_isValid = ::OpenAPI::fromJsonValue(m_config_id, json[QString("configId")]);
    m_config_id_isSet = !json[QString("configId")].isNull() && m_config_id_isValid;

    m_content_search_spec_isValid = ::OpenAPI::fromJsonValue(m_content_search_spec, json[QString("contentSearchSpec")]);
    m_content_search_spec_isSet = !json[QString("contentSearchSpec")].isNull() && m_content_search_spec_isValid;

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_data_store_type_isValid = ::OpenAPI::fromJsonValue(m_data_store_type, json[QString("dataStoreType")]);
    m_data_store_type_isSet = !json[QString("dataStoreType")].isNull() && m_data_store_type_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_enable_autocomplete_isValid = ::OpenAPI::fromJsonValue(m_enable_autocomplete, json[QString("enableAutocomplete")]);
    m_enable_autocomplete_isSet = !json[QString("enableAutocomplete")].isNull() && m_enable_autocomplete_isValid;

    m_enable_conversational_search_isValid = ::OpenAPI::fromJsonValue(m_enable_conversational_search, json[QString("enableConversationalSearch")]);
    m_enable_conversational_search_isSet = !json[QString("enableConversationalSearch")].isNull() && m_enable_conversational_search_isValid;

    m_enable_quality_feedback_isValid = ::OpenAPI::fromJsonValue(m_enable_quality_feedback, json[QString("enableQualityFeedback")]);
    m_enable_quality_feedback_isSet = !json[QString("enableQualityFeedback")].isNull() && m_enable_quality_feedback_isValid;

    m_enable_result_score_isValid = ::OpenAPI::fromJsonValue(m_enable_result_score, json[QString("enableResultScore")]);
    m_enable_result_score_isSet = !json[QString("enableResultScore")].isNull() && m_enable_result_score_isValid;

    m_enable_safe_search_isValid = ::OpenAPI::fromJsonValue(m_enable_safe_search, json[QString("enableSafeSearch")]);
    m_enable_safe_search_isSet = !json[QString("enableSafeSearch")].isNull() && m_enable_safe_search_isValid;

    m_enable_snippet_result_summary_isValid = ::OpenAPI::fromJsonValue(m_enable_snippet_result_summary, json[QString("enableSnippetResultSummary")]);
    m_enable_snippet_result_summary_isSet = !json[QString("enableSnippetResultSummary")].isNull() && m_enable_snippet_result_summary_isValid;

    m_enable_summarization_isValid = ::OpenAPI::fromJsonValue(m_enable_summarization, json[QString("enableSummarization")]);
    m_enable_summarization_isSet = !json[QString("enableSummarization")].isNull() && m_enable_summarization_isValid;

    m_enable_web_app_isValid = ::OpenAPI::fromJsonValue(m_enable_web_app, json[QString("enableWebApp")]);
    m_enable_web_app_isSet = !json[QString("enableWebApp")].isNull() && m_enable_web_app_isValid;

    m_facet_field_isValid = ::OpenAPI::fromJsonValue(m_facet_field, json[QString("facetField")]);
    m_facet_field_isSet = !json[QString("facetField")].isNull() && m_facet_field_isValid;

    m_fields_ui_components_map_isValid = ::OpenAPI::fromJsonValue(m_fields_ui_components_map, json[QString("fieldsUiComponentsMap")]);
    m_fields_ui_components_map_isSet = !json[QString("fieldsUiComponentsMap")].isNull() && m_fields_ui_components_map_isValid;

    m_industry_vertical_isValid = ::OpenAPI::fromJsonValue(m_industry_vertical, json[QString("industryVertical")]);
    m_industry_vertical_isSet = !json[QString("industryVertical")].isNull() && m_industry_vertical_isValid;

    m_llm_enabled_isValid = ::OpenAPI::fromJsonValue(m_llm_enabled, json[QString("llmEnabled")]);
    m_llm_enabled_isSet = !json[QString("llmEnabled")].isNull() && m_llm_enabled_isValid;

    m_minimum_data_term_accepted_isValid = ::OpenAPI::fromJsonValue(m_minimum_data_term_accepted, json[QString("minimumDataTermAccepted")]);
    m_minimum_data_term_accepted_isSet = !json[QString("minimumDataTermAccepted")].isNull() && m_minimum_data_term_accepted_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_result_display_type_isValid = ::OpenAPI::fromJsonValue(m_result_display_type, json[QString("resultDisplayType")]);
    m_result_display_type_isSet = !json[QString("resultDisplayType")].isNull() && m_result_display_type_isValid;

    m_solution_type_isValid = ::OpenAPI::fromJsonValue(m_solution_type, json[QString("solutionType")]);
    m_solution_type_isSet = !json[QString("solutionType")].isNull() && m_solution_type_isValid;

    m_update_time_isValid = ::OpenAPI::fromJsonValue(m_update_time, json[QString("updateTime")]);
    m_update_time_isSet = !json[QString("updateTime")].isNull() && m_update_time_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_allow_public_access_isSet) {
        obj.insert(QString("allowPublicAccess"), ::OpenAPI::toJsonValue(m_allow_public_access));
    }
    if (m_allowlisted_domains.size() > 0) {
        obj.insert(QString("allowlistedDomains"), ::OpenAPI::toJsonValue(m_allowlisted_domains));
    }
    if (m_config_id_isSet) {
        obj.insert(QString("configId"), ::OpenAPI::toJsonValue(m_config_id));
    }
    if (m_content_search_spec.isSet()) {
        obj.insert(QString("contentSearchSpec"), ::OpenAPI::toJsonValue(m_content_search_spec));
    }
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_data_store_type_isSet) {
        obj.insert(QString("dataStoreType"), ::OpenAPI::toJsonValue(m_data_store_type));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_enable_autocomplete_isSet) {
        obj.insert(QString("enableAutocomplete"), ::OpenAPI::toJsonValue(m_enable_autocomplete));
    }
    if (m_enable_conversational_search_isSet) {
        obj.insert(QString("enableConversationalSearch"), ::OpenAPI::toJsonValue(m_enable_conversational_search));
    }
    if (m_enable_quality_feedback_isSet) {
        obj.insert(QString("enableQualityFeedback"), ::OpenAPI::toJsonValue(m_enable_quality_feedback));
    }
    if (m_enable_result_score_isSet) {
        obj.insert(QString("enableResultScore"), ::OpenAPI::toJsonValue(m_enable_result_score));
    }
    if (m_enable_safe_search_isSet) {
        obj.insert(QString("enableSafeSearch"), ::OpenAPI::toJsonValue(m_enable_safe_search));
    }
    if (m_enable_snippet_result_summary_isSet) {
        obj.insert(QString("enableSnippetResultSummary"), ::OpenAPI::toJsonValue(m_enable_snippet_result_summary));
    }
    if (m_enable_summarization_isSet) {
        obj.insert(QString("enableSummarization"), ::OpenAPI::toJsonValue(m_enable_summarization));
    }
    if (m_enable_web_app_isSet) {
        obj.insert(QString("enableWebApp"), ::OpenAPI::toJsonValue(m_enable_web_app));
    }
    if (m_facet_field.size() > 0) {
        obj.insert(QString("facetField"), ::OpenAPI::toJsonValue(m_facet_field));
    }
    if (m_fields_ui_components_map.size() > 0) {
        obj.insert(QString("fieldsUiComponentsMap"), ::OpenAPI::toJsonValue(m_fields_ui_components_map));
    }
    if (m_industry_vertical_isSet) {
        obj.insert(QString("industryVertical"), ::OpenAPI::toJsonValue(m_industry_vertical));
    }
    if (m_llm_enabled_isSet) {
        obj.insert(QString("llmEnabled"), ::OpenAPI::toJsonValue(m_llm_enabled));
    }
    if (m_minimum_data_term_accepted_isSet) {
        obj.insert(QString("minimumDataTermAccepted"), ::OpenAPI::toJsonValue(m_minimum_data_term_accepted));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_result_display_type_isSet) {
        obj.insert(QString("resultDisplayType"), ::OpenAPI::toJsonValue(m_result_display_type));
    }
    if (m_solution_type_isSet) {
        obj.insert(QString("solutionType"), ::OpenAPI::toJsonValue(m_solution_type));
    }
    if (m_update_time_isSet) {
        obj.insert(QString("updateTime"), ::OpenAPI::toJsonValue(m_update_time));
    }
    return obj;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::isAllowPublicAccess() const {
    return m_allow_public_access;
}
void OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::setAllowPublicAccess(const bool &allow_public_access) {
    m_allow_public_access = allow_public_access;
    m_allow_public_access_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::is_allow_public_access_Set() const{
    return m_allow_public_access_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::is_allow_public_access_Valid() const{
    return m_allow_public_access_isValid;
}

QList<QString> OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::getAllowlistedDomains() const {
    return m_allowlisted_domains;
}
void OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::setAllowlistedDomains(const QList<QString> &allowlisted_domains) {
    m_allowlisted_domains = allowlisted_domains;
    m_allowlisted_domains_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::is_allowlisted_domains_Set() const{
    return m_allowlisted_domains_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::is_allowlisted_domains_Valid() const{
    return m_allowlisted_domains_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::getConfigId() const {
    return m_config_id;
}
void OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::setConfigId(const QString &config_id) {
    m_config_id = config_id;
    m_config_id_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::is_config_id_Set() const{
    return m_config_id_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::is_config_id_Valid() const{
    return m_config_id_isValid;
}

OAIGoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpec OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::getContentSearchSpec() const {
    return m_content_search_spec;
}
void OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::setContentSearchSpec(const OAIGoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpec &content_search_spec) {
    m_content_search_spec = content_search_spec;
    m_content_search_spec_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::is_content_search_spec_Set() const{
    return m_content_search_spec_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::is_content_search_spec_Valid() const{
    return m_content_search_spec_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::getCreateTime() const {
    return m_create_time;
}
void OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::getDataStoreType() const {
    return m_data_store_type;
}
void OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::setDataStoreType(const QString &data_store_type) {
    m_data_store_type = data_store_type;
    m_data_store_type_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::is_data_store_type_Set() const{
    return m_data_store_type_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::is_data_store_type_Valid() const{
    return m_data_store_type_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::getDisplayName() const {
    return m_display_name;
}
void OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::is_display_name_Valid() const{
    return m_display_name_isValid;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::isEnableAutocomplete() const {
    return m_enable_autocomplete;
}
void OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::setEnableAutocomplete(const bool &enable_autocomplete) {
    m_enable_autocomplete = enable_autocomplete;
    m_enable_autocomplete_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::is_enable_autocomplete_Set() const{
    return m_enable_autocomplete_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::is_enable_autocomplete_Valid() const{
    return m_enable_autocomplete_isValid;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::isEnableConversationalSearch() const {
    return m_enable_conversational_search;
}
void OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::setEnableConversationalSearch(const bool &enable_conversational_search) {
    m_enable_conversational_search = enable_conversational_search;
    m_enable_conversational_search_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::is_enable_conversational_search_Set() const{
    return m_enable_conversational_search_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::is_enable_conversational_search_Valid() const{
    return m_enable_conversational_search_isValid;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::isEnableQualityFeedback() const {
    return m_enable_quality_feedback;
}
void OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::setEnableQualityFeedback(const bool &enable_quality_feedback) {
    m_enable_quality_feedback = enable_quality_feedback;
    m_enable_quality_feedback_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::is_enable_quality_feedback_Set() const{
    return m_enable_quality_feedback_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::is_enable_quality_feedback_Valid() const{
    return m_enable_quality_feedback_isValid;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::isEnableResultScore() const {
    return m_enable_result_score;
}
void OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::setEnableResultScore(const bool &enable_result_score) {
    m_enable_result_score = enable_result_score;
    m_enable_result_score_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::is_enable_result_score_Set() const{
    return m_enable_result_score_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::is_enable_result_score_Valid() const{
    return m_enable_result_score_isValid;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::isEnableSafeSearch() const {
    return m_enable_safe_search;
}
void OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::setEnableSafeSearch(const bool &enable_safe_search) {
    m_enable_safe_search = enable_safe_search;
    m_enable_safe_search_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::is_enable_safe_search_Set() const{
    return m_enable_safe_search_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::is_enable_safe_search_Valid() const{
    return m_enable_safe_search_isValid;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::isEnableSnippetResultSummary() const {
    return m_enable_snippet_result_summary;
}
void OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::setEnableSnippetResultSummary(const bool &enable_snippet_result_summary) {
    m_enable_snippet_result_summary = enable_snippet_result_summary;
    m_enable_snippet_result_summary_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::is_enable_snippet_result_summary_Set() const{
    return m_enable_snippet_result_summary_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::is_enable_snippet_result_summary_Valid() const{
    return m_enable_snippet_result_summary_isValid;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::isEnableSummarization() const {
    return m_enable_summarization;
}
void OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::setEnableSummarization(const bool &enable_summarization) {
    m_enable_summarization = enable_summarization;
    m_enable_summarization_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::is_enable_summarization_Set() const{
    return m_enable_summarization_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::is_enable_summarization_Valid() const{
    return m_enable_summarization_isValid;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::isEnableWebApp() const {
    return m_enable_web_app;
}
void OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::setEnableWebApp(const bool &enable_web_app) {
    m_enable_web_app = enable_web_app;
    m_enable_web_app_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::is_enable_web_app_Set() const{
    return m_enable_web_app_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::is_enable_web_app_Valid() const{
    return m_enable_web_app_isValid;
}

QList<OAIGoogleCloudDiscoveryengineV1alphaWidgetConfigFacetField> OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::getFacetField() const {
    return m_facet_field;
}
void OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::setFacetField(const QList<OAIGoogleCloudDiscoveryengineV1alphaWidgetConfigFacetField> &facet_field) {
    m_facet_field = facet_field;
    m_facet_field_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::is_facet_field_Set() const{
    return m_facet_field_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::is_facet_field_Valid() const{
    return m_facet_field_isValid;
}

QMap<QString, OAIGoogleCloudDiscoveryengineV1alphaWidgetConfigUIComponentField> OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::getFieldsUiComponentsMap() const {
    return m_fields_ui_components_map;
}
void OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::setFieldsUiComponentsMap(const QMap<QString, OAIGoogleCloudDiscoveryengineV1alphaWidgetConfigUIComponentField> &fields_ui_components_map) {
    m_fields_ui_components_map = fields_ui_components_map;
    m_fields_ui_components_map_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::is_fields_ui_components_map_Set() const{
    return m_fields_ui_components_map_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::is_fields_ui_components_map_Valid() const{
    return m_fields_ui_components_map_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::getIndustryVertical() const {
    return m_industry_vertical;
}
void OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::setIndustryVertical(const QString &industry_vertical) {
    m_industry_vertical = industry_vertical;
    m_industry_vertical_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::is_industry_vertical_Set() const{
    return m_industry_vertical_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::is_industry_vertical_Valid() const{
    return m_industry_vertical_isValid;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::isLlmEnabled() const {
    return m_llm_enabled;
}
void OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::setLlmEnabled(const bool &llm_enabled) {
    m_llm_enabled = llm_enabled;
    m_llm_enabled_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::is_llm_enabled_Set() const{
    return m_llm_enabled_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::is_llm_enabled_Valid() const{
    return m_llm_enabled_isValid;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::isMinimumDataTermAccepted() const {
    return m_minimum_data_term_accepted;
}
void OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::setMinimumDataTermAccepted(const bool &minimum_data_term_accepted) {
    m_minimum_data_term_accepted = minimum_data_term_accepted;
    m_minimum_data_term_accepted_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::is_minimum_data_term_accepted_Set() const{
    return m_minimum_data_term_accepted_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::is_minimum_data_term_accepted_Valid() const{
    return m_minimum_data_term_accepted_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::getName() const {
    return m_name;
}
void OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::getResultDisplayType() const {
    return m_result_display_type;
}
void OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::setResultDisplayType(const QString &result_display_type) {
    m_result_display_type = result_display_type;
    m_result_display_type_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::is_result_display_type_Set() const{
    return m_result_display_type_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::is_result_display_type_Valid() const{
    return m_result_display_type_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::getSolutionType() const {
    return m_solution_type;
}
void OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::setSolutionType(const QString &solution_type) {
    m_solution_type = solution_type;
    m_solution_type_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::is_solution_type_Set() const{
    return m_solution_type_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::is_solution_type_Valid() const{
    return m_solution_type_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::getUpdateTime() const {
    return m_update_time;
}
void OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::setUpdateTime(const QString &update_time) {
    m_update_time = update_time;
    m_update_time_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::is_update_time_Set() const{
    return m_update_time_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::is_update_time_Valid() const{
    return m_update_time_isValid;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_allow_public_access_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_allowlisted_domains.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_config_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_content_search_spec.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_data_store_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enable_autocomplete_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enable_conversational_search_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enable_quality_feedback_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enable_result_score_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enable_safe_search_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enable_snippet_result_summary_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enable_summarization_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enable_web_app_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_facet_field.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_fields_ui_components_map.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_industry_vertical_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_llm_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_minimum_data_term_accepted_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_result_display_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_solution_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDiscoveryengineV1alphaWidgetConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
