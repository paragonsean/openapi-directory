/**
 * Discovery Engine API
 * Discovery Engine API.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudDiscoveryengineV1alphaSearchRequestFacetSpecFacetKey.h
 *
 * Specifies how a facet is computed.
 */

#ifndef OAIGoogleCloudDiscoveryengineV1alphaSearchRequestFacetSpecFacetKey_H
#define OAIGoogleCloudDiscoveryengineV1alphaSearchRequestFacetSpecFacetKey_H

#include <QJsonObject>

#include "OAIGoogleCloudDiscoveryengineV1alphaInterval.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleCloudDiscoveryengineV1alphaInterval;

class OAIGoogleCloudDiscoveryengineV1alphaSearchRequestFacetSpecFacetKey : public OAIObject {
public:
    OAIGoogleCloudDiscoveryengineV1alphaSearchRequestFacetSpecFacetKey();
    OAIGoogleCloudDiscoveryengineV1alphaSearchRequestFacetSpecFacetKey(QString json);
    ~OAIGoogleCloudDiscoveryengineV1alphaSearchRequestFacetSpecFacetKey() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isCaseInsensitive() const;
    void setCaseInsensitive(const bool &case_insensitive);
    bool is_case_insensitive_Set() const;
    bool is_case_insensitive_Valid() const;

    QList<QString> getContains() const;
    void setContains(const QList<QString> &contains);
    bool is_contains_Set() const;
    bool is_contains_Valid() const;

    QList<OAIGoogleCloudDiscoveryengineV1alphaInterval> getIntervals() const;
    void setIntervals(const QList<OAIGoogleCloudDiscoveryengineV1alphaInterval> &intervals);
    bool is_intervals_Set() const;
    bool is_intervals_Valid() const;

    QString getKey() const;
    void setKey(const QString &key);
    bool is_key_Set() const;
    bool is_key_Valid() const;

    QString getOrderBy() const;
    void setOrderBy(const QString &order_by);
    bool is_order_by_Set() const;
    bool is_order_by_Valid() const;

    QList<QString> getPrefixes() const;
    void setPrefixes(const QList<QString> &prefixes);
    bool is_prefixes_Set() const;
    bool is_prefixes_Valid() const;

    QList<QString> getRestrictedValues() const;
    void setRestrictedValues(const QList<QString> &restricted_values);
    bool is_restricted_values_Set() const;
    bool is_restricted_values_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_case_insensitive;
    bool m_case_insensitive_isSet;
    bool m_case_insensitive_isValid;

    QList<QString> m_contains;
    bool m_contains_isSet;
    bool m_contains_isValid;

    QList<OAIGoogleCloudDiscoveryengineV1alphaInterval> m_intervals;
    bool m_intervals_isSet;
    bool m_intervals_isValid;

    QString m_key;
    bool m_key_isSet;
    bool m_key_isValid;

    QString m_order_by;
    bool m_order_by_isSet;
    bool m_order_by_isValid;

    QList<QString> m_prefixes;
    bool m_prefixes_isSet;
    bool m_prefixes_isValid;

    QList<QString> m_restricted_values;
    bool m_restricted_values_isSet;
    bool m_restricted_values_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudDiscoveryengineV1alphaSearchRequestFacetSpecFacetKey)

#endif // OAIGoogleCloudDiscoveryengineV1alphaSearchRequestFacetSpecFacetKey_H
