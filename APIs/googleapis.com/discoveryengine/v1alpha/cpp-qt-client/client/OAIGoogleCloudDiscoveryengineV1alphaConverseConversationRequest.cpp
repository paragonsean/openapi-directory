/**
 * Discovery Engine API
 * Discovery Engine API.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDiscoveryengineV1alphaConverseConversationRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDiscoveryengineV1alphaConverseConversationRequest::OAIGoogleCloudDiscoveryengineV1alphaConverseConversationRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDiscoveryengineV1alphaConverseConversationRequest::OAIGoogleCloudDiscoveryengineV1alphaConverseConversationRequest() {
    this->initializeModel();
}

OAIGoogleCloudDiscoveryengineV1alphaConverseConversationRequest::~OAIGoogleCloudDiscoveryengineV1alphaConverseConversationRequest() {}

void OAIGoogleCloudDiscoveryengineV1alphaConverseConversationRequest::initializeModel() {

    m_boost_spec_isSet = false;
    m_boost_spec_isValid = false;

    m_conversation_isSet = false;
    m_conversation_isValid = false;

    m_filter_isSet = false;
    m_filter_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_query_isSet = false;
    m_query_isValid = false;

    m_safe_search_isSet = false;
    m_safe_search_isValid = false;

    m_serving_config_isSet = false;
    m_serving_config_isValid = false;

    m_summary_spec_isSet = false;
    m_summary_spec_isValid = false;

    m_user_labels_isSet = false;
    m_user_labels_isValid = false;
}

void OAIGoogleCloudDiscoveryengineV1alphaConverseConversationRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDiscoveryengineV1alphaConverseConversationRequest::fromJsonObject(QJsonObject json) {

    m_boost_spec_isValid = ::OpenAPI::fromJsonValue(m_boost_spec, json[QString("boostSpec")]);
    m_boost_spec_isSet = !json[QString("boostSpec")].isNull() && m_boost_spec_isValid;

    m_conversation_isValid = ::OpenAPI::fromJsonValue(m_conversation, json[QString("conversation")]);
    m_conversation_isSet = !json[QString("conversation")].isNull() && m_conversation_isValid;

    m_filter_isValid = ::OpenAPI::fromJsonValue(m_filter, json[QString("filter")]);
    m_filter_isSet = !json[QString("filter")].isNull() && m_filter_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_query_isValid = ::OpenAPI::fromJsonValue(m_query, json[QString("query")]);
    m_query_isSet = !json[QString("query")].isNull() && m_query_isValid;

    m_safe_search_isValid = ::OpenAPI::fromJsonValue(m_safe_search, json[QString("safeSearch")]);
    m_safe_search_isSet = !json[QString("safeSearch")].isNull() && m_safe_search_isValid;

    m_serving_config_isValid = ::OpenAPI::fromJsonValue(m_serving_config, json[QString("servingConfig")]);
    m_serving_config_isSet = !json[QString("servingConfig")].isNull() && m_serving_config_isValid;

    m_summary_spec_isValid = ::OpenAPI::fromJsonValue(m_summary_spec, json[QString("summarySpec")]);
    m_summary_spec_isSet = !json[QString("summarySpec")].isNull() && m_summary_spec_isValid;

    m_user_labels_isValid = ::OpenAPI::fromJsonValue(m_user_labels, json[QString("userLabels")]);
    m_user_labels_isSet = !json[QString("userLabels")].isNull() && m_user_labels_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1alphaConverseConversationRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDiscoveryengineV1alphaConverseConversationRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_boost_spec.isSet()) {
        obj.insert(QString("boostSpec"), ::OpenAPI::toJsonValue(m_boost_spec));
    }
    if (m_conversation.isSet()) {
        obj.insert(QString("conversation"), ::OpenAPI::toJsonValue(m_conversation));
    }
    if (m_filter_isSet) {
        obj.insert(QString("filter"), ::OpenAPI::toJsonValue(m_filter));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_query.isSet()) {
        obj.insert(QString("query"), ::OpenAPI::toJsonValue(m_query));
    }
    if (m_safe_search_isSet) {
        obj.insert(QString("safeSearch"), ::OpenAPI::toJsonValue(m_safe_search));
    }
    if (m_serving_config_isSet) {
        obj.insert(QString("servingConfig"), ::OpenAPI::toJsonValue(m_serving_config));
    }
    if (m_summary_spec.isSet()) {
        obj.insert(QString("summarySpec"), ::OpenAPI::toJsonValue(m_summary_spec));
    }
    if (m_user_labels.size() > 0) {
        obj.insert(QString("userLabels"), ::OpenAPI::toJsonValue(m_user_labels));
    }
    return obj;
}

OAIGoogleCloudDiscoveryengineV1alphaSearchRequestBoostSpec OAIGoogleCloudDiscoveryengineV1alphaConverseConversationRequest::getBoostSpec() const {
    return m_boost_spec;
}
void OAIGoogleCloudDiscoveryengineV1alphaConverseConversationRequest::setBoostSpec(const OAIGoogleCloudDiscoveryengineV1alphaSearchRequestBoostSpec &boost_spec) {
    m_boost_spec = boost_spec;
    m_boost_spec_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaConverseConversationRequest::is_boost_spec_Set() const{
    return m_boost_spec_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaConverseConversationRequest::is_boost_spec_Valid() const{
    return m_boost_spec_isValid;
}

OAIGoogleCloudDiscoveryengineV1alphaConversation OAIGoogleCloudDiscoveryengineV1alphaConverseConversationRequest::getConversation() const {
    return m_conversation;
}
void OAIGoogleCloudDiscoveryengineV1alphaConverseConversationRequest::setConversation(const OAIGoogleCloudDiscoveryengineV1alphaConversation &conversation) {
    m_conversation = conversation;
    m_conversation_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaConverseConversationRequest::is_conversation_Set() const{
    return m_conversation_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaConverseConversationRequest::is_conversation_Valid() const{
    return m_conversation_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1alphaConverseConversationRequest::getFilter() const {
    return m_filter;
}
void OAIGoogleCloudDiscoveryengineV1alphaConverseConversationRequest::setFilter(const QString &filter) {
    m_filter = filter;
    m_filter_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaConverseConversationRequest::is_filter_Set() const{
    return m_filter_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaConverseConversationRequest::is_filter_Valid() const{
    return m_filter_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1alphaConverseConversationRequest::getName() const {
    return m_name;
}
void OAIGoogleCloudDiscoveryengineV1alphaConverseConversationRequest::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaConverseConversationRequest::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaConverseConversationRequest::is_name_Valid() const{
    return m_name_isValid;
}

OAIGoogleCloudDiscoveryengineV1alphaTextInput OAIGoogleCloudDiscoveryengineV1alphaConverseConversationRequest::getQuery() const {
    return m_query;
}
void OAIGoogleCloudDiscoveryengineV1alphaConverseConversationRequest::setQuery(const OAIGoogleCloudDiscoveryengineV1alphaTextInput &query) {
    m_query = query;
    m_query_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaConverseConversationRequest::is_query_Set() const{
    return m_query_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaConverseConversationRequest::is_query_Valid() const{
    return m_query_isValid;
}

bool OAIGoogleCloudDiscoveryengineV1alphaConverseConversationRequest::isSafeSearch() const {
    return m_safe_search;
}
void OAIGoogleCloudDiscoveryengineV1alphaConverseConversationRequest::setSafeSearch(const bool &safe_search) {
    m_safe_search = safe_search;
    m_safe_search_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaConverseConversationRequest::is_safe_search_Set() const{
    return m_safe_search_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaConverseConversationRequest::is_safe_search_Valid() const{
    return m_safe_search_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1alphaConverseConversationRequest::getServingConfig() const {
    return m_serving_config;
}
void OAIGoogleCloudDiscoveryengineV1alphaConverseConversationRequest::setServingConfig(const QString &serving_config) {
    m_serving_config = serving_config;
    m_serving_config_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaConverseConversationRequest::is_serving_config_Set() const{
    return m_serving_config_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaConverseConversationRequest::is_serving_config_Valid() const{
    return m_serving_config_isValid;
}

OAIGoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecSummarySpec OAIGoogleCloudDiscoveryengineV1alphaConverseConversationRequest::getSummarySpec() const {
    return m_summary_spec;
}
void OAIGoogleCloudDiscoveryengineV1alphaConverseConversationRequest::setSummarySpec(const OAIGoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecSummarySpec &summary_spec) {
    m_summary_spec = summary_spec;
    m_summary_spec_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaConverseConversationRequest::is_summary_spec_Set() const{
    return m_summary_spec_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaConverseConversationRequest::is_summary_spec_Valid() const{
    return m_summary_spec_isValid;
}

QMap<QString, QString> OAIGoogleCloudDiscoveryengineV1alphaConverseConversationRequest::getUserLabels() const {
    return m_user_labels;
}
void OAIGoogleCloudDiscoveryengineV1alphaConverseConversationRequest::setUserLabels(const QMap<QString, QString> &user_labels) {
    m_user_labels = user_labels;
    m_user_labels_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaConverseConversationRequest::is_user_labels_Set() const{
    return m_user_labels_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaConverseConversationRequest::is_user_labels_Valid() const{
    return m_user_labels_isValid;
}

bool OAIGoogleCloudDiscoveryengineV1alphaConverseConversationRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_boost_spec.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_conversation.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_filter_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_query.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_safe_search_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_serving_config_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_summary_spec.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_labels.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDiscoveryengineV1alphaConverseConversationRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
