/**
 * Discovery Engine API
 * Discovery Engine API.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDiscoveryengineV1alphaTargetSite.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDiscoveryengineV1alphaTargetSite::OAIGoogleCloudDiscoveryengineV1alphaTargetSite(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDiscoveryengineV1alphaTargetSite::OAIGoogleCloudDiscoveryengineV1alphaTargetSite() {
    this->initializeModel();
}

OAIGoogleCloudDiscoveryengineV1alphaTargetSite::~OAIGoogleCloudDiscoveryengineV1alphaTargetSite() {}

void OAIGoogleCloudDiscoveryengineV1alphaTargetSite::initializeModel() {

    m_exact_match_isSet = false;
    m_exact_match_isValid = false;

    m_failure_reason_isSet = false;
    m_failure_reason_isValid = false;

    m_generated_uri_pattern_isSet = false;
    m_generated_uri_pattern_isValid = false;

    m_indexing_status_isSet = false;
    m_indexing_status_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_provided_uri_pattern_isSet = false;
    m_provided_uri_pattern_isValid = false;

    m_site_verification_info_isSet = false;
    m_site_verification_info_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;

    m_update_time_isSet = false;
    m_update_time_isValid = false;
}

void OAIGoogleCloudDiscoveryengineV1alphaTargetSite::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDiscoveryengineV1alphaTargetSite::fromJsonObject(QJsonObject json) {

    m_exact_match_isValid = ::OpenAPI::fromJsonValue(m_exact_match, json[QString("exactMatch")]);
    m_exact_match_isSet = !json[QString("exactMatch")].isNull() && m_exact_match_isValid;

    m_failure_reason_isValid = ::OpenAPI::fromJsonValue(m_failure_reason, json[QString("failureReason")]);
    m_failure_reason_isSet = !json[QString("failureReason")].isNull() && m_failure_reason_isValid;

    m_generated_uri_pattern_isValid = ::OpenAPI::fromJsonValue(m_generated_uri_pattern, json[QString("generatedUriPattern")]);
    m_generated_uri_pattern_isSet = !json[QString("generatedUriPattern")].isNull() && m_generated_uri_pattern_isValid;

    m_indexing_status_isValid = ::OpenAPI::fromJsonValue(m_indexing_status, json[QString("indexingStatus")]);
    m_indexing_status_isSet = !json[QString("indexingStatus")].isNull() && m_indexing_status_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_provided_uri_pattern_isValid = ::OpenAPI::fromJsonValue(m_provided_uri_pattern, json[QString("providedUriPattern")]);
    m_provided_uri_pattern_isSet = !json[QString("providedUriPattern")].isNull() && m_provided_uri_pattern_isValid;

    m_site_verification_info_isValid = ::OpenAPI::fromJsonValue(m_site_verification_info, json[QString("siteVerificationInfo")]);
    m_site_verification_info_isSet = !json[QString("siteVerificationInfo")].isNull() && m_site_verification_info_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;

    m_update_time_isValid = ::OpenAPI::fromJsonValue(m_update_time, json[QString("updateTime")]);
    m_update_time_isSet = !json[QString("updateTime")].isNull() && m_update_time_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1alphaTargetSite::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDiscoveryengineV1alphaTargetSite::asJsonObject() const {
    QJsonObject obj;
    if (m_exact_match_isSet) {
        obj.insert(QString("exactMatch"), ::OpenAPI::toJsonValue(m_exact_match));
    }
    if (m_failure_reason.isSet()) {
        obj.insert(QString("failureReason"), ::OpenAPI::toJsonValue(m_failure_reason));
    }
    if (m_generated_uri_pattern_isSet) {
        obj.insert(QString("generatedUriPattern"), ::OpenAPI::toJsonValue(m_generated_uri_pattern));
    }
    if (m_indexing_status_isSet) {
        obj.insert(QString("indexingStatus"), ::OpenAPI::toJsonValue(m_indexing_status));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_provided_uri_pattern_isSet) {
        obj.insert(QString("providedUriPattern"), ::OpenAPI::toJsonValue(m_provided_uri_pattern));
    }
    if (m_site_verification_info.isSet()) {
        obj.insert(QString("siteVerificationInfo"), ::OpenAPI::toJsonValue(m_site_verification_info));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    if (m_update_time_isSet) {
        obj.insert(QString("updateTime"), ::OpenAPI::toJsonValue(m_update_time));
    }
    return obj;
}

bool OAIGoogleCloudDiscoveryengineV1alphaTargetSite::isExactMatch() const {
    return m_exact_match;
}
void OAIGoogleCloudDiscoveryengineV1alphaTargetSite::setExactMatch(const bool &exact_match) {
    m_exact_match = exact_match;
    m_exact_match_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaTargetSite::is_exact_match_Set() const{
    return m_exact_match_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaTargetSite::is_exact_match_Valid() const{
    return m_exact_match_isValid;
}

OAIGoogleCloudDiscoveryengineV1alphaTargetSiteFailureReason OAIGoogleCloudDiscoveryengineV1alphaTargetSite::getFailureReason() const {
    return m_failure_reason;
}
void OAIGoogleCloudDiscoveryengineV1alphaTargetSite::setFailureReason(const OAIGoogleCloudDiscoveryengineV1alphaTargetSiteFailureReason &failure_reason) {
    m_failure_reason = failure_reason;
    m_failure_reason_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaTargetSite::is_failure_reason_Set() const{
    return m_failure_reason_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaTargetSite::is_failure_reason_Valid() const{
    return m_failure_reason_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1alphaTargetSite::getGeneratedUriPattern() const {
    return m_generated_uri_pattern;
}
void OAIGoogleCloudDiscoveryengineV1alphaTargetSite::setGeneratedUriPattern(const QString &generated_uri_pattern) {
    m_generated_uri_pattern = generated_uri_pattern;
    m_generated_uri_pattern_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaTargetSite::is_generated_uri_pattern_Set() const{
    return m_generated_uri_pattern_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaTargetSite::is_generated_uri_pattern_Valid() const{
    return m_generated_uri_pattern_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1alphaTargetSite::getIndexingStatus() const {
    return m_indexing_status;
}
void OAIGoogleCloudDiscoveryengineV1alphaTargetSite::setIndexingStatus(const QString &indexing_status) {
    m_indexing_status = indexing_status;
    m_indexing_status_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaTargetSite::is_indexing_status_Set() const{
    return m_indexing_status_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaTargetSite::is_indexing_status_Valid() const{
    return m_indexing_status_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1alphaTargetSite::getName() const {
    return m_name;
}
void OAIGoogleCloudDiscoveryengineV1alphaTargetSite::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaTargetSite::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaTargetSite::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1alphaTargetSite::getProvidedUriPattern() const {
    return m_provided_uri_pattern;
}
void OAIGoogleCloudDiscoveryengineV1alphaTargetSite::setProvidedUriPattern(const QString &provided_uri_pattern) {
    m_provided_uri_pattern = provided_uri_pattern;
    m_provided_uri_pattern_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaTargetSite::is_provided_uri_pattern_Set() const{
    return m_provided_uri_pattern_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaTargetSite::is_provided_uri_pattern_Valid() const{
    return m_provided_uri_pattern_isValid;
}

OAIGoogleCloudDiscoveryengineV1alphaSiteVerificationInfo OAIGoogleCloudDiscoveryengineV1alphaTargetSite::getSiteVerificationInfo() const {
    return m_site_verification_info;
}
void OAIGoogleCloudDiscoveryengineV1alphaTargetSite::setSiteVerificationInfo(const OAIGoogleCloudDiscoveryengineV1alphaSiteVerificationInfo &site_verification_info) {
    m_site_verification_info = site_verification_info;
    m_site_verification_info_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaTargetSite::is_site_verification_info_Set() const{
    return m_site_verification_info_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaTargetSite::is_site_verification_info_Valid() const{
    return m_site_verification_info_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1alphaTargetSite::getType() const {
    return m_type;
}
void OAIGoogleCloudDiscoveryengineV1alphaTargetSite::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaTargetSite::is_type_Set() const{
    return m_type_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaTargetSite::is_type_Valid() const{
    return m_type_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1alphaTargetSite::getUpdateTime() const {
    return m_update_time;
}
void OAIGoogleCloudDiscoveryengineV1alphaTargetSite::setUpdateTime(const QString &update_time) {
    m_update_time = update_time;
    m_update_time_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaTargetSite::is_update_time_Set() const{
    return m_update_time_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaTargetSite::is_update_time_Valid() const{
    return m_update_time_isValid;
}

bool OAIGoogleCloudDiscoveryengineV1alphaTargetSite::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_exact_match_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_failure_reason.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_generated_uri_pattern_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_indexing_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_provided_uri_pattern_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_site_verification_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDiscoveryengineV1alphaTargetSite::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
