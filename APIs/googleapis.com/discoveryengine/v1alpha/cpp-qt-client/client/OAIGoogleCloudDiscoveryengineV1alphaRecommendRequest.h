/**
 * Discovery Engine API
 * Discovery Engine API.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudDiscoveryengineV1alphaRecommendRequest.h
 *
 * Request message for Recommend method.
 */

#ifndef OAIGoogleCloudDiscoveryengineV1alphaRecommendRequest_H
#define OAIGoogleCloudDiscoveryengineV1alphaRecommendRequest_H

#include <QJsonObject>

#include "OAIGoogleCloudDiscoveryengineV1alphaUserEvent.h"
#include <QJsonValue>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleCloudDiscoveryengineV1alphaUserEvent;

class OAIGoogleCloudDiscoveryengineV1alphaRecommendRequest : public OAIObject {
public:
    OAIGoogleCloudDiscoveryengineV1alphaRecommendRequest();
    OAIGoogleCloudDiscoveryengineV1alphaRecommendRequest(QString json);
    ~OAIGoogleCloudDiscoveryengineV1alphaRecommendRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getFilter() const;
    void setFilter(const QString &filter);
    bool is_filter_Set() const;
    bool is_filter_Valid() const;

    qint32 getPageSize() const;
    void setPageSize(const qint32 &page_size);
    bool is_page_size_Set() const;
    bool is_page_size_Valid() const;

    QMap<QString, QJsonValue> getParams() const;
    void setParams(const QMap<QString, QJsonValue> &params);
    bool is_params_Set() const;
    bool is_params_Valid() const;

    OAIGoogleCloudDiscoveryengineV1alphaUserEvent getUserEvent() const;
    void setUserEvent(const OAIGoogleCloudDiscoveryengineV1alphaUserEvent &user_event);
    bool is_user_event_Set() const;
    bool is_user_event_Valid() const;

    QMap<QString, QString> getUserLabels() const;
    void setUserLabels(const QMap<QString, QString> &user_labels);
    bool is_user_labels_Set() const;
    bool is_user_labels_Valid() const;

    bool isValidateOnly() const;
    void setValidateOnly(const bool &validate_only);
    bool is_validate_only_Set() const;
    bool is_validate_only_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_filter;
    bool m_filter_isSet;
    bool m_filter_isValid;

    qint32 m_page_size;
    bool m_page_size_isSet;
    bool m_page_size_isValid;

    QMap<QString, QJsonValue> m_params;
    bool m_params_isSet;
    bool m_params_isValid;

    OAIGoogleCloudDiscoveryengineV1alphaUserEvent m_user_event;
    bool m_user_event_isSet;
    bool m_user_event_isValid;

    QMap<QString, QString> m_user_labels;
    bool m_user_labels_isSet;
    bool m_user_labels_isValid;

    bool m_validate_only;
    bool m_validate_only_isSet;
    bool m_validate_only_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudDiscoveryengineV1alphaRecommendRequest)

#endif // OAIGoogleCloudDiscoveryengineV1alphaRecommendRequest_H
