/**
 * Discovery Engine API
 * Discovery Engine API.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDiscoveryengineV1alphaPanelInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDiscoveryengineV1alphaPanelInfo::OAIGoogleCloudDiscoveryengineV1alphaPanelInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDiscoveryengineV1alphaPanelInfo::OAIGoogleCloudDiscoveryengineV1alphaPanelInfo() {
    this->initializeModel();
}

OAIGoogleCloudDiscoveryengineV1alphaPanelInfo::~OAIGoogleCloudDiscoveryengineV1alphaPanelInfo() {}

void OAIGoogleCloudDiscoveryengineV1alphaPanelInfo::initializeModel() {

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_panel_id_isSet = false;
    m_panel_id_isValid = false;

    m_panel_position_isSet = false;
    m_panel_position_isValid = false;

    m_total_panels_isSet = false;
    m_total_panels_isValid = false;
}

void OAIGoogleCloudDiscoveryengineV1alphaPanelInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDiscoveryengineV1alphaPanelInfo::fromJsonObject(QJsonObject json) {

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_panel_id_isValid = ::OpenAPI::fromJsonValue(m_panel_id, json[QString("panelId")]);
    m_panel_id_isSet = !json[QString("panelId")].isNull() && m_panel_id_isValid;

    m_panel_position_isValid = ::OpenAPI::fromJsonValue(m_panel_position, json[QString("panelPosition")]);
    m_panel_position_isSet = !json[QString("panelPosition")].isNull() && m_panel_position_isValid;

    m_total_panels_isValid = ::OpenAPI::fromJsonValue(m_total_panels, json[QString("totalPanels")]);
    m_total_panels_isSet = !json[QString("totalPanels")].isNull() && m_total_panels_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1alphaPanelInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDiscoveryengineV1alphaPanelInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_panel_id_isSet) {
        obj.insert(QString("panelId"), ::OpenAPI::toJsonValue(m_panel_id));
    }
    if (m_panel_position_isSet) {
        obj.insert(QString("panelPosition"), ::OpenAPI::toJsonValue(m_panel_position));
    }
    if (m_total_panels_isSet) {
        obj.insert(QString("totalPanels"), ::OpenAPI::toJsonValue(m_total_panels));
    }
    return obj;
}

QString OAIGoogleCloudDiscoveryengineV1alphaPanelInfo::getDisplayName() const {
    return m_display_name;
}
void OAIGoogleCloudDiscoveryengineV1alphaPanelInfo::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaPanelInfo::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaPanelInfo::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1alphaPanelInfo::getPanelId() const {
    return m_panel_id;
}
void OAIGoogleCloudDiscoveryengineV1alphaPanelInfo::setPanelId(const QString &panel_id) {
    m_panel_id = panel_id;
    m_panel_id_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaPanelInfo::is_panel_id_Set() const{
    return m_panel_id_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaPanelInfo::is_panel_id_Valid() const{
    return m_panel_id_isValid;
}

qint32 OAIGoogleCloudDiscoveryengineV1alphaPanelInfo::getPanelPosition() const {
    return m_panel_position;
}
void OAIGoogleCloudDiscoveryengineV1alphaPanelInfo::setPanelPosition(const qint32 &panel_position) {
    m_panel_position = panel_position;
    m_panel_position_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaPanelInfo::is_panel_position_Set() const{
    return m_panel_position_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaPanelInfo::is_panel_position_Valid() const{
    return m_panel_position_isValid;
}

qint32 OAIGoogleCloudDiscoveryengineV1alphaPanelInfo::getTotalPanels() const {
    return m_total_panels;
}
void OAIGoogleCloudDiscoveryengineV1alphaPanelInfo::setTotalPanels(const qint32 &total_panels) {
    m_total_panels = total_panels;
    m_total_panels_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaPanelInfo::is_total_panels_Set() const{
    return m_total_panels_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaPanelInfo::is_total_panels_Valid() const{
    return m_total_panels_isValid;
}

bool OAIGoogleCloudDiscoveryengineV1alphaPanelInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_panel_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_panel_position_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_panels_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDiscoveryengineV1alphaPanelInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
