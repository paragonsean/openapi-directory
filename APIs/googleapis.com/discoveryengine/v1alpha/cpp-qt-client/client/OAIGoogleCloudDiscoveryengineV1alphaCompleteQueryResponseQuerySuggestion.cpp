/**
 * Discovery Engine API
 * Discovery Engine API.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDiscoveryengineV1alphaCompleteQueryResponseQuerySuggestion.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDiscoveryengineV1alphaCompleteQueryResponseQuerySuggestion::OAIGoogleCloudDiscoveryengineV1alphaCompleteQueryResponseQuerySuggestion(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDiscoveryengineV1alphaCompleteQueryResponseQuerySuggestion::OAIGoogleCloudDiscoveryengineV1alphaCompleteQueryResponseQuerySuggestion() {
    this->initializeModel();
}

OAIGoogleCloudDiscoveryengineV1alphaCompleteQueryResponseQuerySuggestion::~OAIGoogleCloudDiscoveryengineV1alphaCompleteQueryResponseQuerySuggestion() {}

void OAIGoogleCloudDiscoveryengineV1alphaCompleteQueryResponseQuerySuggestion::initializeModel() {

    m_completable_field_paths_isSet = false;
    m_completable_field_paths_isValid = false;

    m_suggestion_isSet = false;
    m_suggestion_isValid = false;
}

void OAIGoogleCloudDiscoveryengineV1alphaCompleteQueryResponseQuerySuggestion::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDiscoveryengineV1alphaCompleteQueryResponseQuerySuggestion::fromJsonObject(QJsonObject json) {

    m_completable_field_paths_isValid = ::OpenAPI::fromJsonValue(m_completable_field_paths, json[QString("completableFieldPaths")]);
    m_completable_field_paths_isSet = !json[QString("completableFieldPaths")].isNull() && m_completable_field_paths_isValid;

    m_suggestion_isValid = ::OpenAPI::fromJsonValue(m_suggestion, json[QString("suggestion")]);
    m_suggestion_isSet = !json[QString("suggestion")].isNull() && m_suggestion_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1alphaCompleteQueryResponseQuerySuggestion::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDiscoveryengineV1alphaCompleteQueryResponseQuerySuggestion::asJsonObject() const {
    QJsonObject obj;
    if (m_completable_field_paths.size() > 0) {
        obj.insert(QString("completableFieldPaths"), ::OpenAPI::toJsonValue(m_completable_field_paths));
    }
    if (m_suggestion_isSet) {
        obj.insert(QString("suggestion"), ::OpenAPI::toJsonValue(m_suggestion));
    }
    return obj;
}

QList<QString> OAIGoogleCloudDiscoveryengineV1alphaCompleteQueryResponseQuerySuggestion::getCompletableFieldPaths() const {
    return m_completable_field_paths;
}
void OAIGoogleCloudDiscoveryengineV1alphaCompleteQueryResponseQuerySuggestion::setCompletableFieldPaths(const QList<QString> &completable_field_paths) {
    m_completable_field_paths = completable_field_paths;
    m_completable_field_paths_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaCompleteQueryResponseQuerySuggestion::is_completable_field_paths_Set() const{
    return m_completable_field_paths_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaCompleteQueryResponseQuerySuggestion::is_completable_field_paths_Valid() const{
    return m_completable_field_paths_isValid;
}

QString OAIGoogleCloudDiscoveryengineV1alphaCompleteQueryResponseQuerySuggestion::getSuggestion() const {
    return m_suggestion;
}
void OAIGoogleCloudDiscoveryengineV1alphaCompleteQueryResponseQuerySuggestion::setSuggestion(const QString &suggestion) {
    m_suggestion = suggestion;
    m_suggestion_isSet = true;
}

bool OAIGoogleCloudDiscoveryengineV1alphaCompleteQueryResponseQuerySuggestion::is_suggestion_Set() const{
    return m_suggestion_isSet;
}

bool OAIGoogleCloudDiscoveryengineV1alphaCompleteQueryResponseQuerySuggestion::is_suggestion_Valid() const{
    return m_suggestion_isValid;
}

bool OAIGoogleCloudDiscoveryengineV1alphaCompleteQueryResponseQuerySuggestion::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_completable_field_paths.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_suggestion_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDiscoveryengineV1alphaCompleteQueryResponseQuerySuggestion::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
