/*
 * Discovery Engine API
 * Discovery Engine API.
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Request message for CompletionService.CompleteQuery method.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:39:39.358631-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDiscoveryengineV1alphaCompleteQueryRequest {
  public static final String SERIALIZED_NAME_DATA_STORE = "dataStore";
  @SerializedName(SERIALIZED_NAME_DATA_STORE)
  private String dataStore;

  public static final String SERIALIZED_NAME_INCLUDE_TAIL_SUGGESTIONS = "includeTailSuggestions";
  @SerializedName(SERIALIZED_NAME_INCLUDE_TAIL_SUGGESTIONS)
  private Boolean includeTailSuggestions;

  public static final String SERIALIZED_NAME_QUERY = "query";
  @SerializedName(SERIALIZED_NAME_QUERY)
  private String query;

  public static final String SERIALIZED_NAME_QUERY_MODEL = "queryModel";
  @SerializedName(SERIALIZED_NAME_QUERY_MODEL)
  private String queryModel;

  public static final String SERIALIZED_NAME_USER_PSEUDO_ID = "userPseudoId";
  @SerializedName(SERIALIZED_NAME_USER_PSEUDO_ID)
  private String userPseudoId;

  public GoogleCloudDiscoveryengineV1alphaCompleteQueryRequest() {
  }

  public GoogleCloudDiscoveryengineV1alphaCompleteQueryRequest dataStore(String dataStore) {
    this.dataStore = dataStore;
    return this;
  }

  /**
   * Required. The parent data store resource name for which the completion is performed, such as &#x60;projects/_*_/locations/global/collections/default_collection/dataStores/default_data_store&#x60;.
   * @return dataStore
   */
  @javax.annotation.Nullable
  public String getDataStore() {
    return dataStore;
  }

  public void setDataStore(String dataStore) {
    this.dataStore = dataStore;
  }


  public GoogleCloudDiscoveryengineV1alphaCompleteQueryRequest includeTailSuggestions(Boolean includeTailSuggestions) {
    this.includeTailSuggestions = includeTailSuggestions;
    return this;
  }

  /**
   * Indicates if tail suggestions should be returned if there are no suggestions that match the full query. Even if set to true, if there are suggestions that match the full query, those are returned and no tail suggestions are returned.
   * @return includeTailSuggestions
   */
  @javax.annotation.Nullable
  public Boolean getIncludeTailSuggestions() {
    return includeTailSuggestions;
  }

  public void setIncludeTailSuggestions(Boolean includeTailSuggestions) {
    this.includeTailSuggestions = includeTailSuggestions;
  }


  public GoogleCloudDiscoveryengineV1alphaCompleteQueryRequest query(String query) {
    this.query = query;
    return this;
  }

  /**
   * Required. The typeahead input used to fetch suggestions. Maximum length is 128 characters.
   * @return query
   */
  @javax.annotation.Nullable
  public String getQuery() {
    return query;
  }

  public void setQuery(String query) {
    this.query = query;
  }


  public GoogleCloudDiscoveryengineV1alphaCompleteQueryRequest queryModel(String queryModel) {
    this.queryModel = queryModel;
    return this;
  }

  /**
   * Specifies the autocomplete data model. This overrides any model specified in the Configuration &gt; Autocomplete section of the Cloud console. Currently supported values: * &#x60;document&#x60; - Using suggestions generated from user-imported documents. * &#x60;search-history&#x60; - Using suggestions generated from the past history of SearchService.Search API calls. Do not use it when there is no traffic for Search API. * &#x60;user-event&#x60; - Using suggestions generated from user-imported search events. * &#x60;document-completable&#x60; - Using suggestions taken directly from user-imported document fields marked as completable. Default values: * &#x60;document&#x60; is the default model for regular dataStores. * &#x60;search-history&#x60; is the default model for site search dataStores.
   * @return queryModel
   */
  @javax.annotation.Nullable
  public String getQueryModel() {
    return queryModel;
  }

  public void setQueryModel(String queryModel) {
    this.queryModel = queryModel;
  }


  public GoogleCloudDiscoveryengineV1alphaCompleteQueryRequest userPseudoId(String userPseudoId) {
    this.userPseudoId = userPseudoId;
    return this;
  }

  /**
   * A unique identifier for tracking visitors. For example, this could be implemented with an HTTP cookie, which should be able to uniquely identify a visitor on a single device. This unique identifier should not change if the visitor logs in or out of the website. This field should NOT have a fixed value such as &#x60;unknown_visitor&#x60;. This should be the same identifier as UserEvent.user_pseudo_id and SearchRequest.user_pseudo_id. The field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an &#x60;INVALID_ARGUMENT&#x60; error is returned.
   * @return userPseudoId
   */
  @javax.annotation.Nullable
  public String getUserPseudoId() {
    return userPseudoId;
  }

  public void setUserPseudoId(String userPseudoId) {
    this.userPseudoId = userPseudoId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDiscoveryengineV1alphaCompleteQueryRequest googleCloudDiscoveryengineV1alphaCompleteQueryRequest = (GoogleCloudDiscoveryengineV1alphaCompleteQueryRequest) o;
    return Objects.equals(this.dataStore, googleCloudDiscoveryengineV1alphaCompleteQueryRequest.dataStore) &&
        Objects.equals(this.includeTailSuggestions, googleCloudDiscoveryengineV1alphaCompleteQueryRequest.includeTailSuggestions) &&
        Objects.equals(this.query, googleCloudDiscoveryengineV1alphaCompleteQueryRequest.query) &&
        Objects.equals(this.queryModel, googleCloudDiscoveryengineV1alphaCompleteQueryRequest.queryModel) &&
        Objects.equals(this.userPseudoId, googleCloudDiscoveryengineV1alphaCompleteQueryRequest.userPseudoId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dataStore, includeTailSuggestions, query, queryModel, userPseudoId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDiscoveryengineV1alphaCompleteQueryRequest {\n");
    sb.append("    dataStore: ").append(toIndentedString(dataStore)).append("\n");
    sb.append("    includeTailSuggestions: ").append(toIndentedString(includeTailSuggestions)).append("\n");
    sb.append("    query: ").append(toIndentedString(query)).append("\n");
    sb.append("    queryModel: ").append(toIndentedString(queryModel)).append("\n");
    sb.append("    userPseudoId: ").append(toIndentedString(userPseudoId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("dataStore");
    openapiFields.add("includeTailSuggestions");
    openapiFields.add("query");
    openapiFields.add("queryModel");
    openapiFields.add("userPseudoId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDiscoveryengineV1alphaCompleteQueryRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDiscoveryengineV1alphaCompleteQueryRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDiscoveryengineV1alphaCompleteQueryRequest is not found in the empty JSON string", GoogleCloudDiscoveryengineV1alphaCompleteQueryRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDiscoveryengineV1alphaCompleteQueryRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDiscoveryengineV1alphaCompleteQueryRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("dataStore") != null && !jsonObj.get("dataStore").isJsonNull()) && !jsonObj.get("dataStore").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dataStore` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dataStore").toString()));
      }
      if ((jsonObj.get("query") != null && !jsonObj.get("query").isJsonNull()) && !jsonObj.get("query").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `query` to be a primitive type in the JSON string but got `%s`", jsonObj.get("query").toString()));
      }
      if ((jsonObj.get("queryModel") != null && !jsonObj.get("queryModel").isJsonNull()) && !jsonObj.get("queryModel").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `queryModel` to be a primitive type in the JSON string but got `%s`", jsonObj.get("queryModel").toString()));
      }
      if ((jsonObj.get("userPseudoId") != null && !jsonObj.get("userPseudoId").isJsonNull()) && !jsonObj.get("userPseudoId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userPseudoId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userPseudoId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDiscoveryengineV1alphaCompleteQueryRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDiscoveryengineV1alphaCompleteQueryRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDiscoveryengineV1alphaCompleteQueryRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDiscoveryengineV1alphaCompleteQueryRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDiscoveryengineV1alphaCompleteQueryRequest>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDiscoveryengineV1alphaCompleteQueryRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDiscoveryengineV1alphaCompleteQueryRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDiscoveryengineV1alphaCompleteQueryRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDiscoveryengineV1alphaCompleteQueryRequest
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDiscoveryengineV1alphaCompleteQueryRequest
   */
  public static GoogleCloudDiscoveryengineV1alphaCompleteQueryRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDiscoveryengineV1alphaCompleteQueryRequest.class);
  }

  /**
   * Convert an instance of GoogleCloudDiscoveryengineV1alphaCompleteQueryRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

