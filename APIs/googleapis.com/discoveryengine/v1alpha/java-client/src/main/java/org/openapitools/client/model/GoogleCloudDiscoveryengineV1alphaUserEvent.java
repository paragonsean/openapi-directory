/*
 * Discovery Engine API
 * Discovery Engine API.
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.GoogleCloudDiscoveryengineV1alphaCompletionInfo;
import org.openapitools.client.model.GoogleCloudDiscoveryengineV1alphaCustomAttribute;
import org.openapitools.client.model.GoogleCloudDiscoveryengineV1alphaDocumentInfo;
import org.openapitools.client.model.GoogleCloudDiscoveryengineV1alphaMediaInfo;
import org.openapitools.client.model.GoogleCloudDiscoveryengineV1alphaPageInfo;
import org.openapitools.client.model.GoogleCloudDiscoveryengineV1alphaPanelInfo;
import org.openapitools.client.model.GoogleCloudDiscoveryengineV1alphaSearchInfo;
import org.openapitools.client.model.GoogleCloudDiscoveryengineV1alphaTransactionInfo;
import org.openapitools.client.model.GoogleCloudDiscoveryengineV1alphaUserInfo;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * UserEvent captures all metadata information Discovery Engine API needs to know about how end users interact with customers&#39; website.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:39:39.358631-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDiscoveryengineV1alphaUserEvent {
  public static final String SERIALIZED_NAME_ATTRIBUTES = "attributes";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTES)
  private Map<String, GoogleCloudDiscoveryengineV1alphaCustomAttribute> attributes = new HashMap<>();

  public static final String SERIALIZED_NAME_ATTRIBUTION_TOKEN = "attributionToken";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTION_TOKEN)
  private String attributionToken;

  public static final String SERIALIZED_NAME_COMPLETION_INFO = "completionInfo";
  @SerializedName(SERIALIZED_NAME_COMPLETION_INFO)
  private GoogleCloudDiscoveryengineV1alphaCompletionInfo completionInfo;

  public static final String SERIALIZED_NAME_DIRECT_USER_REQUEST = "directUserRequest";
  @SerializedName(SERIALIZED_NAME_DIRECT_USER_REQUEST)
  private Boolean directUserRequest;

  public static final String SERIALIZED_NAME_DOCUMENTS = "documents";
  @SerializedName(SERIALIZED_NAME_DOCUMENTS)
  private List<GoogleCloudDiscoveryengineV1alphaDocumentInfo> documents = new ArrayList<>();

  public static final String SERIALIZED_NAME_EVENT_TIME = "eventTime";
  @SerializedName(SERIALIZED_NAME_EVENT_TIME)
  private String eventTime;

  public static final String SERIALIZED_NAME_EVENT_TYPE = "eventType";
  @SerializedName(SERIALIZED_NAME_EVENT_TYPE)
  private String eventType;

  public static final String SERIALIZED_NAME_FILTER = "filter";
  @SerializedName(SERIALIZED_NAME_FILTER)
  private String filter;

  public static final String SERIALIZED_NAME_MEDIA_INFO = "mediaInfo";
  @SerializedName(SERIALIZED_NAME_MEDIA_INFO)
  private GoogleCloudDiscoveryengineV1alphaMediaInfo mediaInfo;

  public static final String SERIALIZED_NAME_PAGE_INFO = "pageInfo";
  @SerializedName(SERIALIZED_NAME_PAGE_INFO)
  private GoogleCloudDiscoveryengineV1alphaPageInfo pageInfo;

  public static final String SERIALIZED_NAME_PANEL = "panel";
  @SerializedName(SERIALIZED_NAME_PANEL)
  private GoogleCloudDiscoveryengineV1alphaPanelInfo panel;

  public static final String SERIALIZED_NAME_PROMOTION_IDS = "promotionIds";
  @SerializedName(SERIALIZED_NAME_PROMOTION_IDS)
  private List<String> promotionIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_SEARCH_INFO = "searchInfo";
  @SerializedName(SERIALIZED_NAME_SEARCH_INFO)
  private GoogleCloudDiscoveryengineV1alphaSearchInfo searchInfo;

  public static final String SERIALIZED_NAME_SESSION_ID = "sessionId";
  @SerializedName(SERIALIZED_NAME_SESSION_ID)
  private String sessionId;

  public static final String SERIALIZED_NAME_TAG_IDS = "tagIds";
  @SerializedName(SERIALIZED_NAME_TAG_IDS)
  private List<String> tagIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_TRANSACTION_INFO = "transactionInfo";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_INFO)
  private GoogleCloudDiscoveryengineV1alphaTransactionInfo transactionInfo;

  public static final String SERIALIZED_NAME_USER_INFO = "userInfo";
  @SerializedName(SERIALIZED_NAME_USER_INFO)
  private GoogleCloudDiscoveryengineV1alphaUserInfo userInfo;

  public static final String SERIALIZED_NAME_USER_PSEUDO_ID = "userPseudoId";
  @SerializedName(SERIALIZED_NAME_USER_PSEUDO_ID)
  private String userPseudoId;

  public GoogleCloudDiscoveryengineV1alphaUserEvent() {
  }

  public GoogleCloudDiscoveryengineV1alphaUserEvent attributes(Map<String, GoogleCloudDiscoveryengineV1alphaCustomAttribute> attributes) {
    this.attributes = attributes;
    return this;
  }

  public GoogleCloudDiscoveryengineV1alphaUserEvent putAttributesItem(String key, GoogleCloudDiscoveryengineV1alphaCustomAttribute attributesItem) {
    if (this.attributes == null) {
      this.attributes = new HashMap<>();
    }
    this.attributes.put(key, attributesItem);
    return this;
  }

  /**
   * Extra user event features to include in the recommendation model. These attributes must NOT contain data that needs to be parsed or processed further, e.g. JSON or other encodings. If you provide custom attributes for ingested user events, also include them in the user events that you associate with prediction requests. Custom attribute formatting must be consistent between imported events and events provided with prediction requests. This lets the Discovery Engine API use those custom attributes when training models and serving predictions, which helps improve recommendation quality. This field needs to pass all below criteria, otherwise an &#x60;INVALID_ARGUMENT&#x60; error is returned: * The key must be a UTF-8 encoded string with a length limit of 5,000 characters. * For text attributes, at most 400 values are allowed. Empty values are not allowed. Each value must be a UTF-8 encoded string with a length limit of 256 characters. * For number attributes, at most 400 values are allowed. For product recommendations, an example of extra user information is &#x60;traffic_channel&#x60;, which is how a user arrives at the site. Users can arrive at the site by coming to the site directly, coming through Google search, or in other ways.
   * @return attributes
   */
  @javax.annotation.Nullable
  public Map<String, GoogleCloudDiscoveryengineV1alphaCustomAttribute> getAttributes() {
    return attributes;
  }

  public void setAttributes(Map<String, GoogleCloudDiscoveryengineV1alphaCustomAttribute> attributes) {
    this.attributes = attributes;
  }


  public GoogleCloudDiscoveryengineV1alphaUserEvent attributionToken(String attributionToken) {
    this.attributionToken = attributionToken;
    return this;
  }

  /**
   * Token to attribute an API response to user action(s) to trigger the event. Highly recommended for user events that are the result of RecommendationService.Recommend. This field enables accurate attribution of recommendation model performance. The value must be one of: * RecommendResponse.attribution_token for events that are the result of RecommendationService.Recommend. * SearchResponse.attribution_token for events that are the result of SearchService.Search. This token enables us to accurately attribute page view or conversion completion back to the event and the particular predict response containing this clicked/purchased product. If user clicks on product K in the recommendation results, pass RecommendResponse.attribution_token as a URL parameter to product K&#39;s page. When recording events on product K&#39;s page, log the RecommendResponse.attribution_token to this field.
   * @return attributionToken
   */
  @javax.annotation.Nullable
  public String getAttributionToken() {
    return attributionToken;
  }

  public void setAttributionToken(String attributionToken) {
    this.attributionToken = attributionToken;
  }


  public GoogleCloudDiscoveryengineV1alphaUserEvent completionInfo(GoogleCloudDiscoveryengineV1alphaCompletionInfo completionInfo) {
    this.completionInfo = completionInfo;
    return this;
  }

  /**
   * Get completionInfo
   * @return completionInfo
   */
  @javax.annotation.Nullable
  public GoogleCloudDiscoveryengineV1alphaCompletionInfo getCompletionInfo() {
    return completionInfo;
  }

  public void setCompletionInfo(GoogleCloudDiscoveryengineV1alphaCompletionInfo completionInfo) {
    this.completionInfo = completionInfo;
  }


  public GoogleCloudDiscoveryengineV1alphaUserEvent directUserRequest(Boolean directUserRequest) {
    this.directUserRequest = directUserRequest;
    return this;
  }

  /**
   * Should set to true if the request is made directly from the end user, in which case the UserEvent.user_info.user_agent can be populated from the HTTP request. This flag should be set only if the API request is made directly from the end user such as a mobile app (and not if a gateway or a server is processing and pushing the user events). This should not be set when using the JavaScript tag in UserEventService.CollectUserEvent.
   * @return directUserRequest
   */
  @javax.annotation.Nullable
  public Boolean getDirectUserRequest() {
    return directUserRequest;
  }

  public void setDirectUserRequest(Boolean directUserRequest) {
    this.directUserRequest = directUserRequest;
  }


  public GoogleCloudDiscoveryengineV1alphaUserEvent documents(List<GoogleCloudDiscoveryengineV1alphaDocumentInfo> documents) {
    this.documents = documents;
    return this;
  }

  public GoogleCloudDiscoveryengineV1alphaUserEvent addDocumentsItem(GoogleCloudDiscoveryengineV1alphaDocumentInfo documentsItem) {
    if (this.documents == null) {
      this.documents = new ArrayList<>();
    }
    this.documents.add(documentsItem);
    return this;
  }

  /**
   * List of Documents associated with this user event. This field is optional except for the following event types: * &#x60;view-item&#x60; * &#x60;add-to-cart&#x60; * &#x60;purchase&#x60; * &#x60;media-play&#x60; * &#x60;media-complete&#x60; In a &#x60;search&#x60; event, this field represents the documents returned to the end user on the current page (the end user may have not finished browsing the whole page yet). When a new page is returned to the end user, after pagination/filtering/ordering even for the same query, a new &#x60;search&#x60; event with different UserEvent.documents is desired.
   * @return documents
   */
  @javax.annotation.Nullable
  public List<GoogleCloudDiscoveryengineV1alphaDocumentInfo> getDocuments() {
    return documents;
  }

  public void setDocuments(List<GoogleCloudDiscoveryengineV1alphaDocumentInfo> documents) {
    this.documents = documents;
  }


  public GoogleCloudDiscoveryengineV1alphaUserEvent eventTime(String eventTime) {
    this.eventTime = eventTime;
    return this;
  }

  /**
   * Only required for UserEventService.ImportUserEvents method. Timestamp of when the user event happened.
   * @return eventTime
   */
  @javax.annotation.Nullable
  public String getEventTime() {
    return eventTime;
  }

  public void setEventTime(String eventTime) {
    this.eventTime = eventTime;
  }


  public GoogleCloudDiscoveryengineV1alphaUserEvent eventType(String eventType) {
    this.eventType = eventType;
    return this;
  }

  /**
   * Required. User event type. Allowed values are: Generic values: * &#x60;search&#x60;: Search for Documents. * &#x60;view-item&#x60;: Detailed page view of a Document. * &#x60;view-item-list&#x60;: View of a panel or ordered list of Documents. * &#x60;view-home-page&#x60;: View of the home page. * &#x60;view-category-page&#x60;: View of a category page, e.g. Home &gt; Men &gt; Jeans Retail-related values: * &#x60;add-to-cart&#x60;: Add an item(s) to cart, e.g. in Retail online shopping * &#x60;purchase&#x60;: Purchase an item(s) Media-related values: * &#x60;media-play&#x60;: Start/resume watching a video, playing a song, etc. * &#x60;media-complete&#x60;: Finished or stopped midway through a video, song, etc.
   * @return eventType
   */
  @javax.annotation.Nullable
  public String getEventType() {
    return eventType;
  }

  public void setEventType(String eventType) {
    this.eventType = eventType;
  }


  public GoogleCloudDiscoveryengineV1alphaUserEvent filter(String filter) {
    this.filter = filter;
    return this;
  }

  /**
   * The filter syntax consists of an expression language for constructing a predicate from one or more fields of the documents being filtered. One example is for &#x60;search&#x60; events, the associated SearchRequest may contain a filter expression in SearchRequest.filter conforming to https://google.aip.dev/160#filtering. Similarly, for &#x60;view-item-list&#x60; events that are generated from a RecommendRequest, this field may be populated directly from RecommendRequest.filter conforming to https://google.aip.dev/160#filtering. The value must be a UTF-8 encoded string with a length limit of 1,000 characters. Otherwise, an &#x60;INVALID_ARGUMENT&#x60; error is returned.
   * @return filter
   */
  @javax.annotation.Nullable
  public String getFilter() {
    return filter;
  }

  public void setFilter(String filter) {
    this.filter = filter;
  }


  public GoogleCloudDiscoveryengineV1alphaUserEvent mediaInfo(GoogleCloudDiscoveryengineV1alphaMediaInfo mediaInfo) {
    this.mediaInfo = mediaInfo;
    return this;
  }

  /**
   * Get mediaInfo
   * @return mediaInfo
   */
  @javax.annotation.Nullable
  public GoogleCloudDiscoveryengineV1alphaMediaInfo getMediaInfo() {
    return mediaInfo;
  }

  public void setMediaInfo(GoogleCloudDiscoveryengineV1alphaMediaInfo mediaInfo) {
    this.mediaInfo = mediaInfo;
  }


  public GoogleCloudDiscoveryengineV1alphaUserEvent pageInfo(GoogleCloudDiscoveryengineV1alphaPageInfo pageInfo) {
    this.pageInfo = pageInfo;
    return this;
  }

  /**
   * Get pageInfo
   * @return pageInfo
   */
  @javax.annotation.Nullable
  public GoogleCloudDiscoveryengineV1alphaPageInfo getPageInfo() {
    return pageInfo;
  }

  public void setPageInfo(GoogleCloudDiscoveryengineV1alphaPageInfo pageInfo) {
    this.pageInfo = pageInfo;
  }


  public GoogleCloudDiscoveryengineV1alphaUserEvent panel(GoogleCloudDiscoveryengineV1alphaPanelInfo panel) {
    this.panel = panel;
    return this;
  }

  /**
   * Get panel
   * @return panel
   */
  @javax.annotation.Nullable
  public GoogleCloudDiscoveryengineV1alphaPanelInfo getPanel() {
    return panel;
  }

  public void setPanel(GoogleCloudDiscoveryengineV1alphaPanelInfo panel) {
    this.panel = panel;
  }


  public GoogleCloudDiscoveryengineV1alphaUserEvent promotionIds(List<String> promotionIds) {
    this.promotionIds = promotionIds;
    return this;
  }

  public GoogleCloudDiscoveryengineV1alphaUserEvent addPromotionIdsItem(String promotionIdsItem) {
    if (this.promotionIds == null) {
      this.promotionIds = new ArrayList<>();
    }
    this.promotionIds.add(promotionIdsItem);
    return this;
  }

  /**
   * The promotion IDs if this is an event associated with promotions. Currently, this field is restricted to at most one ID.
   * @return promotionIds
   */
  @javax.annotation.Nullable
  public List<String> getPromotionIds() {
    return promotionIds;
  }

  public void setPromotionIds(List<String> promotionIds) {
    this.promotionIds = promotionIds;
  }


  public GoogleCloudDiscoveryengineV1alphaUserEvent searchInfo(GoogleCloudDiscoveryengineV1alphaSearchInfo searchInfo) {
    this.searchInfo = searchInfo;
    return this;
  }

  /**
   * Get searchInfo
   * @return searchInfo
   */
  @javax.annotation.Nullable
  public GoogleCloudDiscoveryengineV1alphaSearchInfo getSearchInfo() {
    return searchInfo;
  }

  public void setSearchInfo(GoogleCloudDiscoveryengineV1alphaSearchInfo searchInfo) {
    this.searchInfo = searchInfo;
  }


  public GoogleCloudDiscoveryengineV1alphaUserEvent sessionId(String sessionId) {
    this.sessionId = sessionId;
    return this;
  }

  /**
   * A unique identifier for tracking a visitor session with a length limit of 128 bytes. A session is an aggregation of an end user behavior in a time span. A general guideline to populate the session_id: 1. If user has no activity for 30 min, a new session_id should be assigned. 2. The session_id should be unique across users, suggest use uuid or add UserEvent.user_pseudo_id as prefix.
   * @return sessionId
   */
  @javax.annotation.Nullable
  public String getSessionId() {
    return sessionId;
  }

  public void setSessionId(String sessionId) {
    this.sessionId = sessionId;
  }


  public GoogleCloudDiscoveryengineV1alphaUserEvent tagIds(List<String> tagIds) {
    this.tagIds = tagIds;
    return this;
  }

  public GoogleCloudDiscoveryengineV1alphaUserEvent addTagIdsItem(String tagIdsItem) {
    if (this.tagIds == null) {
      this.tagIds = new ArrayList<>();
    }
    this.tagIds.add(tagIdsItem);
    return this;
  }

  /**
   * A list of identifiers for the independent experiment groups this user event belongs to. This is used to distinguish between user events associated with different experiment setups on the customer end.
   * @return tagIds
   */
  @javax.annotation.Nullable
  public List<String> getTagIds() {
    return tagIds;
  }

  public void setTagIds(List<String> tagIds) {
    this.tagIds = tagIds;
  }


  public GoogleCloudDiscoveryengineV1alphaUserEvent transactionInfo(GoogleCloudDiscoveryengineV1alphaTransactionInfo transactionInfo) {
    this.transactionInfo = transactionInfo;
    return this;
  }

  /**
   * Get transactionInfo
   * @return transactionInfo
   */
  @javax.annotation.Nullable
  public GoogleCloudDiscoveryengineV1alphaTransactionInfo getTransactionInfo() {
    return transactionInfo;
  }

  public void setTransactionInfo(GoogleCloudDiscoveryengineV1alphaTransactionInfo transactionInfo) {
    this.transactionInfo = transactionInfo;
  }


  public GoogleCloudDiscoveryengineV1alphaUserEvent userInfo(GoogleCloudDiscoveryengineV1alphaUserInfo userInfo) {
    this.userInfo = userInfo;
    return this;
  }

  /**
   * Get userInfo
   * @return userInfo
   */
  @javax.annotation.Nullable
  public GoogleCloudDiscoveryengineV1alphaUserInfo getUserInfo() {
    return userInfo;
  }

  public void setUserInfo(GoogleCloudDiscoveryengineV1alphaUserInfo userInfo) {
    this.userInfo = userInfo;
  }


  public GoogleCloudDiscoveryengineV1alphaUserEvent userPseudoId(String userPseudoId) {
    this.userPseudoId = userPseudoId;
    return this;
  }

  /**
   * Required. A unique identifier for tracking visitors. For example, this could be implemented with an HTTP cookie, which should be able to uniquely identify a visitor on a single device. This unique identifier should not change if the visitor log in/out of the website. Do not set the field to the same fixed ID for different users. This mixes the event history of those users together, which results in degraded model quality. The field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an &#x60;INVALID_ARGUMENT&#x60; error is returned. The field should not contain PII or user-data. We recommend to use Google Analytics [Client ID](https://developers.google.com/analytics/devguides/collection/analyticsjs/field-reference#clientId) for this field.
   * @return userPseudoId
   */
  @javax.annotation.Nullable
  public String getUserPseudoId() {
    return userPseudoId;
  }

  public void setUserPseudoId(String userPseudoId) {
    this.userPseudoId = userPseudoId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDiscoveryengineV1alphaUserEvent googleCloudDiscoveryengineV1alphaUserEvent = (GoogleCloudDiscoveryengineV1alphaUserEvent) o;
    return Objects.equals(this.attributes, googleCloudDiscoveryengineV1alphaUserEvent.attributes) &&
        Objects.equals(this.attributionToken, googleCloudDiscoveryengineV1alphaUserEvent.attributionToken) &&
        Objects.equals(this.completionInfo, googleCloudDiscoveryengineV1alphaUserEvent.completionInfo) &&
        Objects.equals(this.directUserRequest, googleCloudDiscoveryengineV1alphaUserEvent.directUserRequest) &&
        Objects.equals(this.documents, googleCloudDiscoveryengineV1alphaUserEvent.documents) &&
        Objects.equals(this.eventTime, googleCloudDiscoveryengineV1alphaUserEvent.eventTime) &&
        Objects.equals(this.eventType, googleCloudDiscoveryengineV1alphaUserEvent.eventType) &&
        Objects.equals(this.filter, googleCloudDiscoveryengineV1alphaUserEvent.filter) &&
        Objects.equals(this.mediaInfo, googleCloudDiscoveryengineV1alphaUserEvent.mediaInfo) &&
        Objects.equals(this.pageInfo, googleCloudDiscoveryengineV1alphaUserEvent.pageInfo) &&
        Objects.equals(this.panel, googleCloudDiscoveryengineV1alphaUserEvent.panel) &&
        Objects.equals(this.promotionIds, googleCloudDiscoveryengineV1alphaUserEvent.promotionIds) &&
        Objects.equals(this.searchInfo, googleCloudDiscoveryengineV1alphaUserEvent.searchInfo) &&
        Objects.equals(this.sessionId, googleCloudDiscoveryengineV1alphaUserEvent.sessionId) &&
        Objects.equals(this.tagIds, googleCloudDiscoveryengineV1alphaUserEvent.tagIds) &&
        Objects.equals(this.transactionInfo, googleCloudDiscoveryengineV1alphaUserEvent.transactionInfo) &&
        Objects.equals(this.userInfo, googleCloudDiscoveryengineV1alphaUserEvent.userInfo) &&
        Objects.equals(this.userPseudoId, googleCloudDiscoveryengineV1alphaUserEvent.userPseudoId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(attributes, attributionToken, completionInfo, directUserRequest, documents, eventTime, eventType, filter, mediaInfo, pageInfo, panel, promotionIds, searchInfo, sessionId, tagIds, transactionInfo, userInfo, userPseudoId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDiscoveryengineV1alphaUserEvent {\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    attributionToken: ").append(toIndentedString(attributionToken)).append("\n");
    sb.append("    completionInfo: ").append(toIndentedString(completionInfo)).append("\n");
    sb.append("    directUserRequest: ").append(toIndentedString(directUserRequest)).append("\n");
    sb.append("    documents: ").append(toIndentedString(documents)).append("\n");
    sb.append("    eventTime: ").append(toIndentedString(eventTime)).append("\n");
    sb.append("    eventType: ").append(toIndentedString(eventType)).append("\n");
    sb.append("    filter: ").append(toIndentedString(filter)).append("\n");
    sb.append("    mediaInfo: ").append(toIndentedString(mediaInfo)).append("\n");
    sb.append("    pageInfo: ").append(toIndentedString(pageInfo)).append("\n");
    sb.append("    panel: ").append(toIndentedString(panel)).append("\n");
    sb.append("    promotionIds: ").append(toIndentedString(promotionIds)).append("\n");
    sb.append("    searchInfo: ").append(toIndentedString(searchInfo)).append("\n");
    sb.append("    sessionId: ").append(toIndentedString(sessionId)).append("\n");
    sb.append("    tagIds: ").append(toIndentedString(tagIds)).append("\n");
    sb.append("    transactionInfo: ").append(toIndentedString(transactionInfo)).append("\n");
    sb.append("    userInfo: ").append(toIndentedString(userInfo)).append("\n");
    sb.append("    userPseudoId: ").append(toIndentedString(userPseudoId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("attributes");
    openapiFields.add("attributionToken");
    openapiFields.add("completionInfo");
    openapiFields.add("directUserRequest");
    openapiFields.add("documents");
    openapiFields.add("eventTime");
    openapiFields.add("eventType");
    openapiFields.add("filter");
    openapiFields.add("mediaInfo");
    openapiFields.add("pageInfo");
    openapiFields.add("panel");
    openapiFields.add("promotionIds");
    openapiFields.add("searchInfo");
    openapiFields.add("sessionId");
    openapiFields.add("tagIds");
    openapiFields.add("transactionInfo");
    openapiFields.add("userInfo");
    openapiFields.add("userPseudoId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDiscoveryengineV1alphaUserEvent
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDiscoveryengineV1alphaUserEvent.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDiscoveryengineV1alphaUserEvent is not found in the empty JSON string", GoogleCloudDiscoveryengineV1alphaUserEvent.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDiscoveryengineV1alphaUserEvent.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDiscoveryengineV1alphaUserEvent` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("attributionToken") != null && !jsonObj.get("attributionToken").isJsonNull()) && !jsonObj.get("attributionToken").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `attributionToken` to be a primitive type in the JSON string but got `%s`", jsonObj.get("attributionToken").toString()));
      }
      // validate the optional field `completionInfo`
      if (jsonObj.get("completionInfo") != null && !jsonObj.get("completionInfo").isJsonNull()) {
        GoogleCloudDiscoveryengineV1alphaCompletionInfo.validateJsonElement(jsonObj.get("completionInfo"));
      }
      if (jsonObj.get("documents") != null && !jsonObj.get("documents").isJsonNull()) {
        JsonArray jsonArraydocuments = jsonObj.getAsJsonArray("documents");
        if (jsonArraydocuments != null) {
          // ensure the json data is an array
          if (!jsonObj.get("documents").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `documents` to be an array in the JSON string but got `%s`", jsonObj.get("documents").toString()));
          }

          // validate the optional field `documents` (array)
          for (int i = 0; i < jsonArraydocuments.size(); i++) {
            GoogleCloudDiscoveryengineV1alphaDocumentInfo.validateJsonElement(jsonArraydocuments.get(i));
          };
        }
      }
      if ((jsonObj.get("eventTime") != null && !jsonObj.get("eventTime").isJsonNull()) && !jsonObj.get("eventTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `eventTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("eventTime").toString()));
      }
      if ((jsonObj.get("eventType") != null && !jsonObj.get("eventType").isJsonNull()) && !jsonObj.get("eventType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `eventType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("eventType").toString()));
      }
      if ((jsonObj.get("filter") != null && !jsonObj.get("filter").isJsonNull()) && !jsonObj.get("filter").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `filter` to be a primitive type in the JSON string but got `%s`", jsonObj.get("filter").toString()));
      }
      // validate the optional field `mediaInfo`
      if (jsonObj.get("mediaInfo") != null && !jsonObj.get("mediaInfo").isJsonNull()) {
        GoogleCloudDiscoveryengineV1alphaMediaInfo.validateJsonElement(jsonObj.get("mediaInfo"));
      }
      // validate the optional field `pageInfo`
      if (jsonObj.get("pageInfo") != null && !jsonObj.get("pageInfo").isJsonNull()) {
        GoogleCloudDiscoveryengineV1alphaPageInfo.validateJsonElement(jsonObj.get("pageInfo"));
      }
      // validate the optional field `panel`
      if (jsonObj.get("panel") != null && !jsonObj.get("panel").isJsonNull()) {
        GoogleCloudDiscoveryengineV1alphaPanelInfo.validateJsonElement(jsonObj.get("panel"));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("promotionIds") != null && !jsonObj.get("promotionIds").isJsonNull() && !jsonObj.get("promotionIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `promotionIds` to be an array in the JSON string but got `%s`", jsonObj.get("promotionIds").toString()));
      }
      // validate the optional field `searchInfo`
      if (jsonObj.get("searchInfo") != null && !jsonObj.get("searchInfo").isJsonNull()) {
        GoogleCloudDiscoveryengineV1alphaSearchInfo.validateJsonElement(jsonObj.get("searchInfo"));
      }
      if ((jsonObj.get("sessionId") != null && !jsonObj.get("sessionId").isJsonNull()) && !jsonObj.get("sessionId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sessionId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sessionId").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("tagIds") != null && !jsonObj.get("tagIds").isJsonNull() && !jsonObj.get("tagIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `tagIds` to be an array in the JSON string but got `%s`", jsonObj.get("tagIds").toString()));
      }
      // validate the optional field `transactionInfo`
      if (jsonObj.get("transactionInfo") != null && !jsonObj.get("transactionInfo").isJsonNull()) {
        GoogleCloudDiscoveryengineV1alphaTransactionInfo.validateJsonElement(jsonObj.get("transactionInfo"));
      }
      // validate the optional field `userInfo`
      if (jsonObj.get("userInfo") != null && !jsonObj.get("userInfo").isJsonNull()) {
        GoogleCloudDiscoveryengineV1alphaUserInfo.validateJsonElement(jsonObj.get("userInfo"));
      }
      if ((jsonObj.get("userPseudoId") != null && !jsonObj.get("userPseudoId").isJsonNull()) && !jsonObj.get("userPseudoId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userPseudoId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userPseudoId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDiscoveryengineV1alphaUserEvent.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDiscoveryengineV1alphaUserEvent' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDiscoveryengineV1alphaUserEvent> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDiscoveryengineV1alphaUserEvent.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDiscoveryengineV1alphaUserEvent>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDiscoveryengineV1alphaUserEvent value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDiscoveryengineV1alphaUserEvent read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDiscoveryengineV1alphaUserEvent given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDiscoveryengineV1alphaUserEvent
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDiscoveryengineV1alphaUserEvent
   */
  public static GoogleCloudDiscoveryengineV1alphaUserEvent fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDiscoveryengineV1alphaUserEvent.class);
  }

  /**
   * Convert an instance of GoogleCloudDiscoveryengineV1alphaUserEvent to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

