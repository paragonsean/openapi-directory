/*
 * Discovery Engine API
 * Discovery Engine API.
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Detailed panel information associated with a user event.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:39:39.358631-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDiscoveryengineV1alphaPanelInfo {
  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_PANEL_ID = "panelId";
  @SerializedName(SERIALIZED_NAME_PANEL_ID)
  private String panelId;

  public static final String SERIALIZED_NAME_PANEL_POSITION = "panelPosition";
  @SerializedName(SERIALIZED_NAME_PANEL_POSITION)
  private Integer panelPosition;

  public static final String SERIALIZED_NAME_TOTAL_PANELS = "totalPanels";
  @SerializedName(SERIALIZED_NAME_TOTAL_PANELS)
  private Integer totalPanels;

  public GoogleCloudDiscoveryengineV1alphaPanelInfo() {
  }

  public GoogleCloudDiscoveryengineV1alphaPanelInfo displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * The display name of the panel.
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public GoogleCloudDiscoveryengineV1alphaPanelInfo panelId(String panelId) {
    this.panelId = panelId;
    return this;
  }

  /**
   * Required. The panel ID.
   * @return panelId
   */
  @javax.annotation.Nullable
  public String getPanelId() {
    return panelId;
  }

  public void setPanelId(String panelId) {
    this.panelId = panelId;
  }


  public GoogleCloudDiscoveryengineV1alphaPanelInfo panelPosition(Integer panelPosition) {
    this.panelPosition = panelPosition;
    return this;
  }

  /**
   * The ordered position of the panel, if shown to the user with other panels. If set, then total_panels must also be set.
   * @return panelPosition
   */
  @javax.annotation.Nullable
  public Integer getPanelPosition() {
    return panelPosition;
  }

  public void setPanelPosition(Integer panelPosition) {
    this.panelPosition = panelPosition;
  }


  public GoogleCloudDiscoveryengineV1alphaPanelInfo totalPanels(Integer totalPanels) {
    this.totalPanels = totalPanels;
    return this;
  }

  /**
   * The total number of panels, including this one, shown to the user. Must be set if panel_position is set.
   * @return totalPanels
   */
  @javax.annotation.Nullable
  public Integer getTotalPanels() {
    return totalPanels;
  }

  public void setTotalPanels(Integer totalPanels) {
    this.totalPanels = totalPanels;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDiscoveryengineV1alphaPanelInfo googleCloudDiscoveryengineV1alphaPanelInfo = (GoogleCloudDiscoveryengineV1alphaPanelInfo) o;
    return Objects.equals(this.displayName, googleCloudDiscoveryengineV1alphaPanelInfo.displayName) &&
        Objects.equals(this.panelId, googleCloudDiscoveryengineV1alphaPanelInfo.panelId) &&
        Objects.equals(this.panelPosition, googleCloudDiscoveryengineV1alphaPanelInfo.panelPosition) &&
        Objects.equals(this.totalPanels, googleCloudDiscoveryengineV1alphaPanelInfo.totalPanels);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, panelId, panelPosition, totalPanels);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDiscoveryengineV1alphaPanelInfo {\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    panelId: ").append(toIndentedString(panelId)).append("\n");
    sb.append("    panelPosition: ").append(toIndentedString(panelPosition)).append("\n");
    sb.append("    totalPanels: ").append(toIndentedString(totalPanels)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("displayName");
    openapiFields.add("panelId");
    openapiFields.add("panelPosition");
    openapiFields.add("totalPanels");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDiscoveryengineV1alphaPanelInfo
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDiscoveryengineV1alphaPanelInfo.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDiscoveryengineV1alphaPanelInfo is not found in the empty JSON string", GoogleCloudDiscoveryengineV1alphaPanelInfo.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDiscoveryengineV1alphaPanelInfo.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDiscoveryengineV1alphaPanelInfo` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      if ((jsonObj.get("panelId") != null && !jsonObj.get("panelId").isJsonNull()) && !jsonObj.get("panelId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `panelId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("panelId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDiscoveryengineV1alphaPanelInfo.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDiscoveryengineV1alphaPanelInfo' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDiscoveryengineV1alphaPanelInfo> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDiscoveryengineV1alphaPanelInfo.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDiscoveryengineV1alphaPanelInfo>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDiscoveryengineV1alphaPanelInfo value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDiscoveryengineV1alphaPanelInfo read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDiscoveryengineV1alphaPanelInfo given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDiscoveryengineV1alphaPanelInfo
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDiscoveryengineV1alphaPanelInfo
   */
  public static GoogleCloudDiscoveryengineV1alphaPanelInfo fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDiscoveryengineV1alphaPanelInfo.class);
  }

  /**
   * Convert an instance of GoogleCloudDiscoveryengineV1alphaPanelInfo to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

