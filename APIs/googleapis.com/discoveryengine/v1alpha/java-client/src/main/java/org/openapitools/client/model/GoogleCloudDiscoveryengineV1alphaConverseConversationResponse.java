/*
 * Discovery Engine API
 * Discovery Engine API.
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudDiscoveryengineV1alphaConversation;
import org.openapitools.client.model.GoogleCloudDiscoveryengineV1alphaReply;
import org.openapitools.client.model.GoogleCloudDiscoveryengineV1alphaSearchResponseSearchResult;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Response message for ConversationalSearchService.ConverseConversation method.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:39:39.358631-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDiscoveryengineV1alphaConverseConversationResponse {
  public static final String SERIALIZED_NAME_CONVERSATION = "conversation";
  @SerializedName(SERIALIZED_NAME_CONVERSATION)
  private GoogleCloudDiscoveryengineV1alphaConversation conversation;

  public static final String SERIALIZED_NAME_RELATED_QUESTIONS = "relatedQuestions";
  @SerializedName(SERIALIZED_NAME_RELATED_QUESTIONS)
  private List<String> relatedQuestions = new ArrayList<>();

  public static final String SERIALIZED_NAME_REPLY = "reply";
  @SerializedName(SERIALIZED_NAME_REPLY)
  private GoogleCloudDiscoveryengineV1alphaReply reply;

  public static final String SERIALIZED_NAME_SEARCH_RESULTS = "searchResults";
  @SerializedName(SERIALIZED_NAME_SEARCH_RESULTS)
  private List<GoogleCloudDiscoveryengineV1alphaSearchResponseSearchResult> searchResults = new ArrayList<>();

  public GoogleCloudDiscoveryengineV1alphaConverseConversationResponse() {
  }

  public GoogleCloudDiscoveryengineV1alphaConverseConversationResponse conversation(GoogleCloudDiscoveryengineV1alphaConversation conversation) {
    this.conversation = conversation;
    return this;
  }

  /**
   * Get conversation
   * @return conversation
   */
  @javax.annotation.Nullable
  public GoogleCloudDiscoveryengineV1alphaConversation getConversation() {
    return conversation;
  }

  public void setConversation(GoogleCloudDiscoveryengineV1alphaConversation conversation) {
    this.conversation = conversation;
  }


  public GoogleCloudDiscoveryengineV1alphaConverseConversationResponse relatedQuestions(List<String> relatedQuestions) {
    this.relatedQuestions = relatedQuestions;
    return this;
  }

  public GoogleCloudDiscoveryengineV1alphaConverseConversationResponse addRelatedQuestionsItem(String relatedQuestionsItem) {
    if (this.relatedQuestions == null) {
      this.relatedQuestions = new ArrayList<>();
    }
    this.relatedQuestions.add(relatedQuestionsItem);
    return this;
  }

  /**
   * Suggested related questions.
   * @return relatedQuestions
   */
  @javax.annotation.Nullable
  public List<String> getRelatedQuestions() {
    return relatedQuestions;
  }

  public void setRelatedQuestions(List<String> relatedQuestions) {
    this.relatedQuestions = relatedQuestions;
  }


  public GoogleCloudDiscoveryengineV1alphaConverseConversationResponse reply(GoogleCloudDiscoveryengineV1alphaReply reply) {
    this.reply = reply;
    return this;
  }

  /**
   * Get reply
   * @return reply
   */
  @javax.annotation.Nullable
  public GoogleCloudDiscoveryengineV1alphaReply getReply() {
    return reply;
  }

  public void setReply(GoogleCloudDiscoveryengineV1alphaReply reply) {
    this.reply = reply;
  }


  public GoogleCloudDiscoveryengineV1alphaConverseConversationResponse searchResults(List<GoogleCloudDiscoveryengineV1alphaSearchResponseSearchResult> searchResults) {
    this.searchResults = searchResults;
    return this;
  }

  public GoogleCloudDiscoveryengineV1alphaConverseConversationResponse addSearchResultsItem(GoogleCloudDiscoveryengineV1alphaSearchResponseSearchResult searchResultsItem) {
    if (this.searchResults == null) {
      this.searchResults = new ArrayList<>();
    }
    this.searchResults.add(searchResultsItem);
    return this;
  }

  /**
   * Search Results.
   * @return searchResults
   */
  @javax.annotation.Nullable
  public List<GoogleCloudDiscoveryengineV1alphaSearchResponseSearchResult> getSearchResults() {
    return searchResults;
  }

  public void setSearchResults(List<GoogleCloudDiscoveryengineV1alphaSearchResponseSearchResult> searchResults) {
    this.searchResults = searchResults;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDiscoveryengineV1alphaConverseConversationResponse googleCloudDiscoveryengineV1alphaConverseConversationResponse = (GoogleCloudDiscoveryengineV1alphaConverseConversationResponse) o;
    return Objects.equals(this.conversation, googleCloudDiscoveryengineV1alphaConverseConversationResponse.conversation) &&
        Objects.equals(this.relatedQuestions, googleCloudDiscoveryengineV1alphaConverseConversationResponse.relatedQuestions) &&
        Objects.equals(this.reply, googleCloudDiscoveryengineV1alphaConverseConversationResponse.reply) &&
        Objects.equals(this.searchResults, googleCloudDiscoveryengineV1alphaConverseConversationResponse.searchResults);
  }

  @Override
  public int hashCode() {
    return Objects.hash(conversation, relatedQuestions, reply, searchResults);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDiscoveryengineV1alphaConverseConversationResponse {\n");
    sb.append("    conversation: ").append(toIndentedString(conversation)).append("\n");
    sb.append("    relatedQuestions: ").append(toIndentedString(relatedQuestions)).append("\n");
    sb.append("    reply: ").append(toIndentedString(reply)).append("\n");
    sb.append("    searchResults: ").append(toIndentedString(searchResults)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("conversation");
    openapiFields.add("relatedQuestions");
    openapiFields.add("reply");
    openapiFields.add("searchResults");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDiscoveryengineV1alphaConverseConversationResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDiscoveryengineV1alphaConverseConversationResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDiscoveryengineV1alphaConverseConversationResponse is not found in the empty JSON string", GoogleCloudDiscoveryengineV1alphaConverseConversationResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDiscoveryengineV1alphaConverseConversationResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDiscoveryengineV1alphaConverseConversationResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `conversation`
      if (jsonObj.get("conversation") != null && !jsonObj.get("conversation").isJsonNull()) {
        GoogleCloudDiscoveryengineV1alphaConversation.validateJsonElement(jsonObj.get("conversation"));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("relatedQuestions") != null && !jsonObj.get("relatedQuestions").isJsonNull() && !jsonObj.get("relatedQuestions").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `relatedQuestions` to be an array in the JSON string but got `%s`", jsonObj.get("relatedQuestions").toString()));
      }
      // validate the optional field `reply`
      if (jsonObj.get("reply") != null && !jsonObj.get("reply").isJsonNull()) {
        GoogleCloudDiscoveryengineV1alphaReply.validateJsonElement(jsonObj.get("reply"));
      }
      if (jsonObj.get("searchResults") != null && !jsonObj.get("searchResults").isJsonNull()) {
        JsonArray jsonArraysearchResults = jsonObj.getAsJsonArray("searchResults");
        if (jsonArraysearchResults != null) {
          // ensure the json data is an array
          if (!jsonObj.get("searchResults").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `searchResults` to be an array in the JSON string but got `%s`", jsonObj.get("searchResults").toString()));
          }

          // validate the optional field `searchResults` (array)
          for (int i = 0; i < jsonArraysearchResults.size(); i++) {
            GoogleCloudDiscoveryengineV1alphaSearchResponseSearchResult.validateJsonElement(jsonArraysearchResults.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDiscoveryengineV1alphaConverseConversationResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDiscoveryengineV1alphaConverseConversationResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDiscoveryengineV1alphaConverseConversationResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDiscoveryengineV1alphaConverseConversationResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDiscoveryengineV1alphaConverseConversationResponse>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDiscoveryengineV1alphaConverseConversationResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDiscoveryengineV1alphaConverseConversationResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDiscoveryengineV1alphaConverseConversationResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDiscoveryengineV1alphaConverseConversationResponse
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDiscoveryengineV1alphaConverseConversationResponse
   */
  public static GoogleCloudDiscoveryengineV1alphaConverseConversationResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDiscoveryengineV1alphaConverseConversationResponse.class);
  }

  /**
   * Convert an instance of GoogleCloudDiscoveryengineV1alphaConverseConversationResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

