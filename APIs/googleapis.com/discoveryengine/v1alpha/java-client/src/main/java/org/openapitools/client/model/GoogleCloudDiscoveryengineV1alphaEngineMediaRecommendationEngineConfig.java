/*
 * Discovery Engine API
 * Discovery Engine API.
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfigOptimizationObjectiveConfig;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Additional config specs for a Media Recommendation engine.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:39:39.358631-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig {
  public static final String SERIALIZED_NAME_OPTIMIZATION_OBJECTIVE = "optimizationObjective";
  @SerializedName(SERIALIZED_NAME_OPTIMIZATION_OBJECTIVE)
  private String optimizationObjective;

  public static final String SERIALIZED_NAME_OPTIMIZATION_OBJECTIVE_CONFIG = "optimizationObjectiveConfig";
  @SerializedName(SERIALIZED_NAME_OPTIMIZATION_OBJECTIVE_CONFIG)
  private GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfigOptimizationObjectiveConfig optimizationObjectiveConfig;

  /**
   * The training state that the engine is in (e.g. &#x60;TRAINING&#x60; or &#x60;PAUSED&#x60;). Since part of the cost of running the service is frequency of training - this can be used to determine when to train engine in order to control cost. If not specified: the default value for &#x60;CreateEngine&#x60; method is &#x60;TRAINING&#x60;. The default value for &#x60;UpdateEngine&#x60; method is to keep the state the same as before.
   */
  @JsonAdapter(TrainingStateEnum.Adapter.class)
  public enum TrainingStateEnum {
    TRAINING_STATE_UNSPECIFIED("TRAINING_STATE_UNSPECIFIED"),
    
    PAUSED("PAUSED"),
    
    TRAINING("TRAINING");

    private String value;

    TrainingStateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TrainingStateEnum fromValue(String value) {
      for (TrainingStateEnum b : TrainingStateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TrainingStateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TrainingStateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TrainingStateEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TrainingStateEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      TrainingStateEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_TRAINING_STATE = "trainingState";
  @SerializedName(SERIALIZED_NAME_TRAINING_STATE)
  private TrainingStateEnum trainingState;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig() {
  }

  public GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig optimizationObjective(String optimizationObjective) {
    this.optimizationObjective = optimizationObjective;
    return this;
  }

  /**
   * The optimization objective. e.g., &#x60;cvr&#x60;. This field together with optimization_objective describe engine metadata to use to control engine training and serving. Currently supported values: &#x60;ctr&#x60;, &#x60;cvr&#x60;. If not specified, we choose default based on engine type. Default depends on type of recommendation: &#x60;recommended-for-you&#x60; &#x3D;&gt; &#x60;ctr&#x60; &#x60;others-you-may-like&#x60; &#x3D;&gt; &#x60;ctr&#x60;
   * @return optimizationObjective
   */
  @javax.annotation.Nullable
  public String getOptimizationObjective() {
    return optimizationObjective;
  }

  public void setOptimizationObjective(String optimizationObjective) {
    this.optimizationObjective = optimizationObjective;
  }


  public GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig optimizationObjectiveConfig(GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfigOptimizationObjectiveConfig optimizationObjectiveConfig) {
    this.optimizationObjectiveConfig = optimizationObjectiveConfig;
    return this;
  }

  /**
   * Get optimizationObjectiveConfig
   * @return optimizationObjectiveConfig
   */
  @javax.annotation.Nullable
  public GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfigOptimizationObjectiveConfig getOptimizationObjectiveConfig() {
    return optimizationObjectiveConfig;
  }

  public void setOptimizationObjectiveConfig(GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfigOptimizationObjectiveConfig optimizationObjectiveConfig) {
    this.optimizationObjectiveConfig = optimizationObjectiveConfig;
  }


  public GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig trainingState(TrainingStateEnum trainingState) {
    this.trainingState = trainingState;
    return this;
  }

  /**
   * The training state that the engine is in (e.g. &#x60;TRAINING&#x60; or &#x60;PAUSED&#x60;). Since part of the cost of running the service is frequency of training - this can be used to determine when to train engine in order to control cost. If not specified: the default value for &#x60;CreateEngine&#x60; method is &#x60;TRAINING&#x60;. The default value for &#x60;UpdateEngine&#x60; method is to keep the state the same as before.
   * @return trainingState
   */
  @javax.annotation.Nullable
  public TrainingStateEnum getTrainingState() {
    return trainingState;
  }

  public void setTrainingState(TrainingStateEnum trainingState) {
    this.trainingState = trainingState;
  }


  public GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig type(String type) {
    this.type = type;
    return this;
  }

  /**
   * Required. The type of engine. e.g., &#x60;recommended-for-you&#x60;. This field together with optimization_objective describe engine metadata to use to control engine training and serving. Currently supported values: &#x60;recommended-for-you&#x60;, &#x60;others-you-may-like&#x60;, &#x60;more-like-this&#x60;, &#x60;most-popular-items&#x60;.
   * @return type
   */
  @javax.annotation.Nullable
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig googleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig = (GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig) o;
    return Objects.equals(this.optimizationObjective, googleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig.optimizationObjective) &&
        Objects.equals(this.optimizationObjectiveConfig, googleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig.optimizationObjectiveConfig) &&
        Objects.equals(this.trainingState, googleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig.trainingState) &&
        Objects.equals(this.type, googleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(optimizationObjective, optimizationObjectiveConfig, trainingState, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig {\n");
    sb.append("    optimizationObjective: ").append(toIndentedString(optimizationObjective)).append("\n");
    sb.append("    optimizationObjectiveConfig: ").append(toIndentedString(optimizationObjectiveConfig)).append("\n");
    sb.append("    trainingState: ").append(toIndentedString(trainingState)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("optimizationObjective");
    openapiFields.add("optimizationObjectiveConfig");
    openapiFields.add("trainingState");
    openapiFields.add("type");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig is not found in the empty JSON string", GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("optimizationObjective") != null && !jsonObj.get("optimizationObjective").isJsonNull()) && !jsonObj.get("optimizationObjective").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `optimizationObjective` to be a primitive type in the JSON string but got `%s`", jsonObj.get("optimizationObjective").toString()));
      }
      // validate the optional field `optimizationObjectiveConfig`
      if (jsonObj.get("optimizationObjectiveConfig") != null && !jsonObj.get("optimizationObjectiveConfig").isJsonNull()) {
        GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfigOptimizationObjectiveConfig.validateJsonElement(jsonObj.get("optimizationObjectiveConfig"));
      }
      if ((jsonObj.get("trainingState") != null && !jsonObj.get("trainingState").isJsonNull()) && !jsonObj.get("trainingState").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `trainingState` to be a primitive type in the JSON string but got `%s`", jsonObj.get("trainingState").toString()));
      }
      // validate the optional field `trainingState`
      if (jsonObj.get("trainingState") != null && !jsonObj.get("trainingState").isJsonNull()) {
        TrainingStateEnum.validateJsonElement(jsonObj.get("trainingState"));
      }
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig
   */
  public static GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig.class);
  }

  /**
   * Convert an instance of GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

