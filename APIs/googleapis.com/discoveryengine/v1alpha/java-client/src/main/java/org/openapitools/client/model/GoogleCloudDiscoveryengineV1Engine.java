/*
 * Discovery Engine API
 * Discovery Engine API.
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudDiscoveryengineV1EngineChatEngineConfig;
import org.openapitools.client.model.GoogleCloudDiscoveryengineV1EngineChatEngineMetadata;
import org.openapitools.client.model.GoogleCloudDiscoveryengineV1EngineCommonConfig;
import org.openapitools.client.model.GoogleCloudDiscoveryengineV1EngineSearchEngineConfig;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Metadata that describes the training and serving parameters of an Engine.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:39:39.358631-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDiscoveryengineV1Engine {
  public static final String SERIALIZED_NAME_CHAT_ENGINE_CONFIG = "chatEngineConfig";
  @SerializedName(SERIALIZED_NAME_CHAT_ENGINE_CONFIG)
  private GoogleCloudDiscoveryengineV1EngineChatEngineConfig chatEngineConfig;

  public static final String SERIALIZED_NAME_CHAT_ENGINE_METADATA = "chatEngineMetadata";
  @SerializedName(SERIALIZED_NAME_CHAT_ENGINE_METADATA)
  private GoogleCloudDiscoveryengineV1EngineChatEngineMetadata chatEngineMetadata;

  public static final String SERIALIZED_NAME_COMMON_CONFIG = "commonConfig";
  @SerializedName(SERIALIZED_NAME_COMMON_CONFIG)
  private GoogleCloudDiscoveryengineV1EngineCommonConfig commonConfig;

  public static final String SERIALIZED_NAME_CREATE_TIME = "createTime";
  @SerializedName(SERIALIZED_NAME_CREATE_TIME)
  private String createTime;

  public static final String SERIALIZED_NAME_DATA_STORE_IDS = "dataStoreIds";
  @SerializedName(SERIALIZED_NAME_DATA_STORE_IDS)
  private List<String> dataStoreIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  /**
   * The industry vertical that the engine registers. The restriction of the Engine industry vertical is based on DataStore: If unspecified, default to &#x60;GENERIC&#x60;. Vertical on Engine has to match vertical of the DataStore liniked to the engine.
   */
  @JsonAdapter(IndustryVerticalEnum.Adapter.class)
  public enum IndustryVerticalEnum {
    INDUSTRY_VERTICAL_UNSPECIFIED("INDUSTRY_VERTICAL_UNSPECIFIED"),
    
    GENERIC("GENERIC"),
    
    MEDIA("MEDIA");

    private String value;

    IndustryVerticalEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static IndustryVerticalEnum fromValue(String value) {
      for (IndustryVerticalEnum b : IndustryVerticalEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<IndustryVerticalEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final IndustryVerticalEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public IndustryVerticalEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return IndustryVerticalEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      IndustryVerticalEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_INDUSTRY_VERTICAL = "industryVertical";
  @SerializedName(SERIALIZED_NAME_INDUSTRY_VERTICAL)
  private IndustryVerticalEnum industryVertical;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_SEARCH_ENGINE_CONFIG = "searchEngineConfig";
  @SerializedName(SERIALIZED_NAME_SEARCH_ENGINE_CONFIG)
  private GoogleCloudDiscoveryengineV1EngineSearchEngineConfig searchEngineConfig;

  /**
   * Required. The solutions of the engine.
   */
  @JsonAdapter(SolutionTypeEnum.Adapter.class)
  public enum SolutionTypeEnum {
    UNSPECIFIED("SOLUTION_TYPE_UNSPECIFIED"),
    
    RECOMMENDATION("SOLUTION_TYPE_RECOMMENDATION"),
    
    SEARCH("SOLUTION_TYPE_SEARCH"),
    
    CHAT("SOLUTION_TYPE_CHAT");

    private String value;

    SolutionTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static SolutionTypeEnum fromValue(String value) {
      for (SolutionTypeEnum b : SolutionTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<SolutionTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SolutionTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SolutionTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return SolutionTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      SolutionTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_SOLUTION_TYPE = "solutionType";
  @SerializedName(SERIALIZED_NAME_SOLUTION_TYPE)
  private SolutionTypeEnum solutionType;

  public static final String SERIALIZED_NAME_UPDATE_TIME = "updateTime";
  @SerializedName(SERIALIZED_NAME_UPDATE_TIME)
  private String updateTime;

  public GoogleCloudDiscoveryengineV1Engine() {
  }

  public GoogleCloudDiscoveryengineV1Engine(
     String createTime, 
     String updateTime
  ) {
    this();
    this.createTime = createTime;
    this.updateTime = updateTime;
  }

  public GoogleCloudDiscoveryengineV1Engine chatEngineConfig(GoogleCloudDiscoveryengineV1EngineChatEngineConfig chatEngineConfig) {
    this.chatEngineConfig = chatEngineConfig;
    return this;
  }

  /**
   * Get chatEngineConfig
   * @return chatEngineConfig
   */
  @javax.annotation.Nullable
  public GoogleCloudDiscoveryengineV1EngineChatEngineConfig getChatEngineConfig() {
    return chatEngineConfig;
  }

  public void setChatEngineConfig(GoogleCloudDiscoveryengineV1EngineChatEngineConfig chatEngineConfig) {
    this.chatEngineConfig = chatEngineConfig;
  }


  public GoogleCloudDiscoveryengineV1Engine chatEngineMetadata(GoogleCloudDiscoveryengineV1EngineChatEngineMetadata chatEngineMetadata) {
    this.chatEngineMetadata = chatEngineMetadata;
    return this;
  }

  /**
   * Get chatEngineMetadata
   * @return chatEngineMetadata
   */
  @javax.annotation.Nullable
  public GoogleCloudDiscoveryengineV1EngineChatEngineMetadata getChatEngineMetadata() {
    return chatEngineMetadata;
  }

  public void setChatEngineMetadata(GoogleCloudDiscoveryengineV1EngineChatEngineMetadata chatEngineMetadata) {
    this.chatEngineMetadata = chatEngineMetadata;
  }


  public GoogleCloudDiscoveryengineV1Engine commonConfig(GoogleCloudDiscoveryengineV1EngineCommonConfig commonConfig) {
    this.commonConfig = commonConfig;
    return this;
  }

  /**
   * Get commonConfig
   * @return commonConfig
   */
  @javax.annotation.Nullable
  public GoogleCloudDiscoveryengineV1EngineCommonConfig getCommonConfig() {
    return commonConfig;
  }

  public void setCommonConfig(GoogleCloudDiscoveryengineV1EngineCommonConfig commonConfig) {
    this.commonConfig = commonConfig;
  }


  /**
   * Output only. Timestamp the Recommendation Engine was created at.
   * @return createTime
   */
  @javax.annotation.Nullable
  public String getCreateTime() {
    return createTime;
  }



  public GoogleCloudDiscoveryengineV1Engine dataStoreIds(List<String> dataStoreIds) {
    this.dataStoreIds = dataStoreIds;
    return this;
  }

  public GoogleCloudDiscoveryengineV1Engine addDataStoreIdsItem(String dataStoreIdsItem) {
    if (this.dataStoreIds == null) {
      this.dataStoreIds = new ArrayList<>();
    }
    this.dataStoreIds.add(dataStoreIdsItem);
    return this;
  }

  /**
   * The data stores associated with this engine. For SOLUTION_TYPE_SEARCH and SOLUTION_TYPE_RECOMMENDATION type of engines, they can only associate with at most one data store. If solution_type is SOLUTION_TYPE_CHAT, multiple DataStores in the same Collection can be associated here. Note that when used in CreateEngineRequest, one DataStore id must be provided as the system will use it for necessary initializations.
   * @return dataStoreIds
   */
  @javax.annotation.Nullable
  public List<String> getDataStoreIds() {
    return dataStoreIds;
  }

  public void setDataStoreIds(List<String> dataStoreIds) {
    this.dataStoreIds = dataStoreIds;
  }


  public GoogleCloudDiscoveryengineV1Engine displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Required. The display name of the engine. Should be human readable. UTF-8 encoded string with limit of 1024 characters.
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public GoogleCloudDiscoveryengineV1Engine industryVertical(IndustryVerticalEnum industryVertical) {
    this.industryVertical = industryVertical;
    return this;
  }

  /**
   * The industry vertical that the engine registers. The restriction of the Engine industry vertical is based on DataStore: If unspecified, default to &#x60;GENERIC&#x60;. Vertical on Engine has to match vertical of the DataStore liniked to the engine.
   * @return industryVertical
   */
  @javax.annotation.Nullable
  public IndustryVerticalEnum getIndustryVertical() {
    return industryVertical;
  }

  public void setIndustryVertical(IndustryVerticalEnum industryVertical) {
    this.industryVertical = industryVertical;
  }


  public GoogleCloudDiscoveryengineV1Engine name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Immutable. The fully qualified resource name of the engine. This field must be a UTF-8 encoded string with a length limit of 1024 characters. Format: &#x60;projects/{project_number}/locations/{location}/collections/{collection}/engines/{engine}&#x60; engine should be 1-63 characters, and valid characters are /a-z0-9*_/. Otherwise, an INVALID_ARGUMENT error is returned.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public GoogleCloudDiscoveryengineV1Engine searchEngineConfig(GoogleCloudDiscoveryengineV1EngineSearchEngineConfig searchEngineConfig) {
    this.searchEngineConfig = searchEngineConfig;
    return this;
  }

  /**
   * Get searchEngineConfig
   * @return searchEngineConfig
   */
  @javax.annotation.Nullable
  public GoogleCloudDiscoveryengineV1EngineSearchEngineConfig getSearchEngineConfig() {
    return searchEngineConfig;
  }

  public void setSearchEngineConfig(GoogleCloudDiscoveryengineV1EngineSearchEngineConfig searchEngineConfig) {
    this.searchEngineConfig = searchEngineConfig;
  }


  public GoogleCloudDiscoveryengineV1Engine solutionType(SolutionTypeEnum solutionType) {
    this.solutionType = solutionType;
    return this;
  }

  /**
   * Required. The solutions of the engine.
   * @return solutionType
   */
  @javax.annotation.Nullable
  public SolutionTypeEnum getSolutionType() {
    return solutionType;
  }

  public void setSolutionType(SolutionTypeEnum solutionType) {
    this.solutionType = solutionType;
  }


  /**
   * Output only. Timestamp the Recommendation Engine was last updated.
   * @return updateTime
   */
  @javax.annotation.Nullable
  public String getUpdateTime() {
    return updateTime;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDiscoveryengineV1Engine googleCloudDiscoveryengineV1Engine = (GoogleCloudDiscoveryengineV1Engine) o;
    return Objects.equals(this.chatEngineConfig, googleCloudDiscoveryengineV1Engine.chatEngineConfig) &&
        Objects.equals(this.chatEngineMetadata, googleCloudDiscoveryengineV1Engine.chatEngineMetadata) &&
        Objects.equals(this.commonConfig, googleCloudDiscoveryengineV1Engine.commonConfig) &&
        Objects.equals(this.createTime, googleCloudDiscoveryengineV1Engine.createTime) &&
        Objects.equals(this.dataStoreIds, googleCloudDiscoveryengineV1Engine.dataStoreIds) &&
        Objects.equals(this.displayName, googleCloudDiscoveryengineV1Engine.displayName) &&
        Objects.equals(this.industryVertical, googleCloudDiscoveryengineV1Engine.industryVertical) &&
        Objects.equals(this.name, googleCloudDiscoveryengineV1Engine.name) &&
        Objects.equals(this.searchEngineConfig, googleCloudDiscoveryengineV1Engine.searchEngineConfig) &&
        Objects.equals(this.solutionType, googleCloudDiscoveryengineV1Engine.solutionType) &&
        Objects.equals(this.updateTime, googleCloudDiscoveryengineV1Engine.updateTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(chatEngineConfig, chatEngineMetadata, commonConfig, createTime, dataStoreIds, displayName, industryVertical, name, searchEngineConfig, solutionType, updateTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDiscoveryengineV1Engine {\n");
    sb.append("    chatEngineConfig: ").append(toIndentedString(chatEngineConfig)).append("\n");
    sb.append("    chatEngineMetadata: ").append(toIndentedString(chatEngineMetadata)).append("\n");
    sb.append("    commonConfig: ").append(toIndentedString(commonConfig)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    dataStoreIds: ").append(toIndentedString(dataStoreIds)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    industryVertical: ").append(toIndentedString(industryVertical)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    searchEngineConfig: ").append(toIndentedString(searchEngineConfig)).append("\n");
    sb.append("    solutionType: ").append(toIndentedString(solutionType)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("chatEngineConfig");
    openapiFields.add("chatEngineMetadata");
    openapiFields.add("commonConfig");
    openapiFields.add("createTime");
    openapiFields.add("dataStoreIds");
    openapiFields.add("displayName");
    openapiFields.add("industryVertical");
    openapiFields.add("name");
    openapiFields.add("searchEngineConfig");
    openapiFields.add("solutionType");
    openapiFields.add("updateTime");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDiscoveryengineV1Engine
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDiscoveryengineV1Engine.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDiscoveryengineV1Engine is not found in the empty JSON string", GoogleCloudDiscoveryengineV1Engine.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDiscoveryengineV1Engine.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDiscoveryengineV1Engine` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `chatEngineConfig`
      if (jsonObj.get("chatEngineConfig") != null && !jsonObj.get("chatEngineConfig").isJsonNull()) {
        GoogleCloudDiscoveryengineV1EngineChatEngineConfig.validateJsonElement(jsonObj.get("chatEngineConfig"));
      }
      // validate the optional field `chatEngineMetadata`
      if (jsonObj.get("chatEngineMetadata") != null && !jsonObj.get("chatEngineMetadata").isJsonNull()) {
        GoogleCloudDiscoveryengineV1EngineChatEngineMetadata.validateJsonElement(jsonObj.get("chatEngineMetadata"));
      }
      // validate the optional field `commonConfig`
      if (jsonObj.get("commonConfig") != null && !jsonObj.get("commonConfig").isJsonNull()) {
        GoogleCloudDiscoveryengineV1EngineCommonConfig.validateJsonElement(jsonObj.get("commonConfig"));
      }
      if ((jsonObj.get("createTime") != null && !jsonObj.get("createTime").isJsonNull()) && !jsonObj.get("createTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createTime").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("dataStoreIds") != null && !jsonObj.get("dataStoreIds").isJsonNull() && !jsonObj.get("dataStoreIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `dataStoreIds` to be an array in the JSON string but got `%s`", jsonObj.get("dataStoreIds").toString()));
      }
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      if ((jsonObj.get("industryVertical") != null && !jsonObj.get("industryVertical").isJsonNull()) && !jsonObj.get("industryVertical").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `industryVertical` to be a primitive type in the JSON string but got `%s`", jsonObj.get("industryVertical").toString()));
      }
      // validate the optional field `industryVertical`
      if (jsonObj.get("industryVertical") != null && !jsonObj.get("industryVertical").isJsonNull()) {
        IndustryVerticalEnum.validateJsonElement(jsonObj.get("industryVertical"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // validate the optional field `searchEngineConfig`
      if (jsonObj.get("searchEngineConfig") != null && !jsonObj.get("searchEngineConfig").isJsonNull()) {
        GoogleCloudDiscoveryengineV1EngineSearchEngineConfig.validateJsonElement(jsonObj.get("searchEngineConfig"));
      }
      if ((jsonObj.get("solutionType") != null && !jsonObj.get("solutionType").isJsonNull()) && !jsonObj.get("solutionType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `solutionType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("solutionType").toString()));
      }
      // validate the optional field `solutionType`
      if (jsonObj.get("solutionType") != null && !jsonObj.get("solutionType").isJsonNull()) {
        SolutionTypeEnum.validateJsonElement(jsonObj.get("solutionType"));
      }
      if ((jsonObj.get("updateTime") != null && !jsonObj.get("updateTime").isJsonNull()) && !jsonObj.get("updateTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updateTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updateTime").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDiscoveryengineV1Engine.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDiscoveryengineV1Engine' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDiscoveryengineV1Engine> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDiscoveryengineV1Engine.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDiscoveryengineV1Engine>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDiscoveryengineV1Engine value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDiscoveryengineV1Engine read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDiscoveryengineV1Engine given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDiscoveryengineV1Engine
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDiscoveryengineV1Engine
   */
  public static GoogleCloudDiscoveryengineV1Engine fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDiscoveryengineV1Engine.class);
  }

  /**
   * Convert an instance of GoogleCloudDiscoveryengineV1Engine to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

