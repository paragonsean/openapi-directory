/*
 * Discovery Engine API
 * Discovery Engine API.
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.GoogleCloudDiscoveryengineV1alphaCustomFineTuningSpec;
import org.openapitools.client.model.GoogleCloudDiscoveryengineV1alphaSearchRequestBoostSpec;
import org.openapitools.client.model.GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpec;
import org.openapitools.client.model.GoogleCloudDiscoveryengineV1alphaSearchRequestEmbeddingSpec;
import org.openapitools.client.model.GoogleCloudDiscoveryengineV1alphaSearchRequestFacetSpec;
import org.openapitools.client.model.GoogleCloudDiscoveryengineV1alphaSearchRequestImageQuery;
import org.openapitools.client.model.GoogleCloudDiscoveryengineV1alphaSearchRequestQueryExpansionSpec;
import org.openapitools.client.model.GoogleCloudDiscoveryengineV1alphaSearchRequestSpellCorrectionSpec;
import org.openapitools.client.model.GoogleCloudDiscoveryengineV1alphaUserInfo;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Request message for SearchService.Search method.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:39:39.358631-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDiscoveryengineV1alphaSearchRequest {
  public static final String SERIALIZED_NAME_BOOST_SPEC = "boostSpec";
  @SerializedName(SERIALIZED_NAME_BOOST_SPEC)
  private GoogleCloudDiscoveryengineV1alphaSearchRequestBoostSpec boostSpec;

  public static final String SERIALIZED_NAME_BRANCH = "branch";
  @SerializedName(SERIALIZED_NAME_BRANCH)
  private String branch;

  public static final String SERIALIZED_NAME_CANONICAL_FILTER = "canonicalFilter";
  @SerializedName(SERIALIZED_NAME_CANONICAL_FILTER)
  private String canonicalFilter;

  public static final String SERIALIZED_NAME_CONTENT_SEARCH_SPEC = "contentSearchSpec";
  @SerializedName(SERIALIZED_NAME_CONTENT_SEARCH_SPEC)
  private GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpec contentSearchSpec;

  public static final String SERIALIZED_NAME_CUSTOM_FINE_TUNING_SPEC = "customFineTuningSpec";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FINE_TUNING_SPEC)
  private GoogleCloudDiscoveryengineV1alphaCustomFineTuningSpec customFineTuningSpec;

  public static final String SERIALIZED_NAME_EMBEDDING_SPEC = "embeddingSpec";
  @SerializedName(SERIALIZED_NAME_EMBEDDING_SPEC)
  private GoogleCloudDiscoveryengineV1alphaSearchRequestEmbeddingSpec embeddingSpec;

  public static final String SERIALIZED_NAME_FACET_SPECS = "facetSpecs";
  @SerializedName(SERIALIZED_NAME_FACET_SPECS)
  private List<GoogleCloudDiscoveryengineV1alphaSearchRequestFacetSpec> facetSpecs = new ArrayList<>();

  public static final String SERIALIZED_NAME_FILTER = "filter";
  @SerializedName(SERIALIZED_NAME_FILTER)
  private String filter;

  public static final String SERIALIZED_NAME_IMAGE_QUERY = "imageQuery";
  @SerializedName(SERIALIZED_NAME_IMAGE_QUERY)
  private GoogleCloudDiscoveryengineV1alphaSearchRequestImageQuery imageQuery;

  public static final String SERIALIZED_NAME_OFFSET = "offset";
  @SerializedName(SERIALIZED_NAME_OFFSET)
  private Integer offset;

  public static final String SERIALIZED_NAME_ORDER_BY = "orderBy";
  @SerializedName(SERIALIZED_NAME_ORDER_BY)
  private String orderBy;

  public static final String SERIALIZED_NAME_PAGE_SIZE = "pageSize";
  @SerializedName(SERIALIZED_NAME_PAGE_SIZE)
  private Integer pageSize;

  public static final String SERIALIZED_NAME_PAGE_TOKEN = "pageToken";
  @SerializedName(SERIALIZED_NAME_PAGE_TOKEN)
  private String pageToken;

  public static final String SERIALIZED_NAME_PARAMS = "params";
  @SerializedName(SERIALIZED_NAME_PARAMS)
  private Map<String, Object> params = new HashMap<>();

  public static final String SERIALIZED_NAME_QUERY = "query";
  @SerializedName(SERIALIZED_NAME_QUERY)
  private String query;

  public static final String SERIALIZED_NAME_QUERY_EXPANSION_SPEC = "queryExpansionSpec";
  @SerializedName(SERIALIZED_NAME_QUERY_EXPANSION_SPEC)
  private GoogleCloudDiscoveryengineV1alphaSearchRequestQueryExpansionSpec queryExpansionSpec;

  public static final String SERIALIZED_NAME_RANKING_EXPRESSION = "rankingExpression";
  @SerializedName(SERIALIZED_NAME_RANKING_EXPRESSION)
  private String rankingExpression;

  public static final String SERIALIZED_NAME_SAFE_SEARCH = "safeSearch";
  @SerializedName(SERIALIZED_NAME_SAFE_SEARCH)
  private Boolean safeSearch;

  public static final String SERIALIZED_NAME_SERVING_CONFIG = "servingConfig";
  @SerializedName(SERIALIZED_NAME_SERVING_CONFIG)
  private String servingConfig;

  public static final String SERIALIZED_NAME_SPELL_CORRECTION_SPEC = "spellCorrectionSpec";
  @SerializedName(SERIALIZED_NAME_SPELL_CORRECTION_SPEC)
  private GoogleCloudDiscoveryengineV1alphaSearchRequestSpellCorrectionSpec spellCorrectionSpec;

  public static final String SERIALIZED_NAME_USER_INFO = "userInfo";
  @SerializedName(SERIALIZED_NAME_USER_INFO)
  private GoogleCloudDiscoveryengineV1alphaUserInfo userInfo;

  public static final String SERIALIZED_NAME_USER_LABELS = "userLabels";
  @SerializedName(SERIALIZED_NAME_USER_LABELS)
  private Map<String, String> userLabels = new HashMap<>();

  public static final String SERIALIZED_NAME_USER_PSEUDO_ID = "userPseudoId";
  @SerializedName(SERIALIZED_NAME_USER_PSEUDO_ID)
  private String userPseudoId;

  public GoogleCloudDiscoveryengineV1alphaSearchRequest() {
  }

  public GoogleCloudDiscoveryengineV1alphaSearchRequest boostSpec(GoogleCloudDiscoveryengineV1alphaSearchRequestBoostSpec boostSpec) {
    this.boostSpec = boostSpec;
    return this;
  }

  /**
   * Get boostSpec
   * @return boostSpec
   */
  @javax.annotation.Nullable
  public GoogleCloudDiscoveryengineV1alphaSearchRequestBoostSpec getBoostSpec() {
    return boostSpec;
  }

  public void setBoostSpec(GoogleCloudDiscoveryengineV1alphaSearchRequestBoostSpec boostSpec) {
    this.boostSpec = boostSpec;
  }


  public GoogleCloudDiscoveryengineV1alphaSearchRequest branch(String branch) {
    this.branch = branch;
    return this;
  }

  /**
   * The branch resource name, such as &#x60;projects/_*_/locations/global/collections/default_collection/dataStores/default_data_store/branches/0&#x60;. Use &#x60;default_branch&#x60; as the branch ID or leave this field empty, to search documents under the default branch.
   * @return branch
   */
  @javax.annotation.Nullable
  public String getBranch() {
    return branch;
  }

  public void setBranch(String branch) {
    this.branch = branch;
  }


  public GoogleCloudDiscoveryengineV1alphaSearchRequest canonicalFilter(String canonicalFilter) {
    this.canonicalFilter = canonicalFilter;
    return this;
  }

  /**
   * The default filter that is applied when a user performs a search without checking any filters on the search page. The filter applied to every search request when quality improvement such as query expansion is needed. In the case a query does not have a sufficient amount of results this filter will be used to determine whether or not to enable the query expansion flow. The original filter will still be used for the query expanded search. This field is strongly recommended to achieve high search quality. For more information about filter syntax, see SearchRequest.filter.
   * @return canonicalFilter
   */
  @javax.annotation.Nullable
  public String getCanonicalFilter() {
    return canonicalFilter;
  }

  public void setCanonicalFilter(String canonicalFilter) {
    this.canonicalFilter = canonicalFilter;
  }


  public GoogleCloudDiscoveryengineV1alphaSearchRequest contentSearchSpec(GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpec contentSearchSpec) {
    this.contentSearchSpec = contentSearchSpec;
    return this;
  }

  /**
   * Get contentSearchSpec
   * @return contentSearchSpec
   */
  @javax.annotation.Nullable
  public GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpec getContentSearchSpec() {
    return contentSearchSpec;
  }

  public void setContentSearchSpec(GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpec contentSearchSpec) {
    this.contentSearchSpec = contentSearchSpec;
  }


  public GoogleCloudDiscoveryengineV1alphaSearchRequest customFineTuningSpec(GoogleCloudDiscoveryengineV1alphaCustomFineTuningSpec customFineTuningSpec) {
    this.customFineTuningSpec = customFineTuningSpec;
    return this;
  }

  /**
   * Get customFineTuningSpec
   * @return customFineTuningSpec
   */
  @javax.annotation.Nullable
  public GoogleCloudDiscoveryengineV1alphaCustomFineTuningSpec getCustomFineTuningSpec() {
    return customFineTuningSpec;
  }

  public void setCustomFineTuningSpec(GoogleCloudDiscoveryengineV1alphaCustomFineTuningSpec customFineTuningSpec) {
    this.customFineTuningSpec = customFineTuningSpec;
  }


  public GoogleCloudDiscoveryengineV1alphaSearchRequest embeddingSpec(GoogleCloudDiscoveryengineV1alphaSearchRequestEmbeddingSpec embeddingSpec) {
    this.embeddingSpec = embeddingSpec;
    return this;
  }

  /**
   * Get embeddingSpec
   * @return embeddingSpec
   */
  @javax.annotation.Nullable
  public GoogleCloudDiscoveryengineV1alphaSearchRequestEmbeddingSpec getEmbeddingSpec() {
    return embeddingSpec;
  }

  public void setEmbeddingSpec(GoogleCloudDiscoveryengineV1alphaSearchRequestEmbeddingSpec embeddingSpec) {
    this.embeddingSpec = embeddingSpec;
  }


  public GoogleCloudDiscoveryengineV1alphaSearchRequest facetSpecs(List<GoogleCloudDiscoveryengineV1alphaSearchRequestFacetSpec> facetSpecs) {
    this.facetSpecs = facetSpecs;
    return this;
  }

  public GoogleCloudDiscoveryengineV1alphaSearchRequest addFacetSpecsItem(GoogleCloudDiscoveryengineV1alphaSearchRequestFacetSpec facetSpecsItem) {
    if (this.facetSpecs == null) {
      this.facetSpecs = new ArrayList<>();
    }
    this.facetSpecs.add(facetSpecsItem);
    return this;
  }

  /**
   * Facet specifications for faceted search. If empty, no facets are returned. A maximum of 100 values are allowed. Otherwise, an &#x60;INVALID_ARGUMENT&#x60; error is returned.
   * @return facetSpecs
   */
  @javax.annotation.Nullable
  public List<GoogleCloudDiscoveryengineV1alphaSearchRequestFacetSpec> getFacetSpecs() {
    return facetSpecs;
  }

  public void setFacetSpecs(List<GoogleCloudDiscoveryengineV1alphaSearchRequestFacetSpec> facetSpecs) {
    this.facetSpecs = facetSpecs;
  }


  public GoogleCloudDiscoveryengineV1alphaSearchRequest filter(String filter) {
    this.filter = filter;
    return this;
  }

  /**
   * The filter syntax consists of an expression language for constructing a predicate from one or more fields of the documents being filtered. Filter expression is case-sensitive. If this field is unrecognizable, an &#x60;INVALID_ARGUMENT&#x60; is returned. Filtering in Vertex AI Search is done by mapping the LHS filter key to a key property defined in the Vertex AI Search backend -- this mapping is defined by the customer in their schema. For example a media customer might have a field &#39;name&#39; in their schema. In this case the filter would look like this: filter --&gt; name:&#39;ANY(\&quot;king kong\&quot;)&#39; For more information about filtering including syntax and filter operators, see [Filter](https://cloud.google.com/generative-ai-app-builder/docs/filter-search-metadata)
   * @return filter
   */
  @javax.annotation.Nullable
  public String getFilter() {
    return filter;
  }

  public void setFilter(String filter) {
    this.filter = filter;
  }


  public GoogleCloudDiscoveryengineV1alphaSearchRequest imageQuery(GoogleCloudDiscoveryengineV1alphaSearchRequestImageQuery imageQuery) {
    this.imageQuery = imageQuery;
    return this;
  }

  /**
   * Get imageQuery
   * @return imageQuery
   */
  @javax.annotation.Nullable
  public GoogleCloudDiscoveryengineV1alphaSearchRequestImageQuery getImageQuery() {
    return imageQuery;
  }

  public void setImageQuery(GoogleCloudDiscoveryengineV1alphaSearchRequestImageQuery imageQuery) {
    this.imageQuery = imageQuery;
  }


  public GoogleCloudDiscoveryengineV1alphaSearchRequest offset(Integer offset) {
    this.offset = offset;
    return this;
  }

  /**
   * A 0-indexed integer that specifies the current offset (that is, starting result location, amongst the Documents deemed by the API as relevant) in search results. This field is only considered if page_token is unset. If this field is negative, an &#x60;INVALID_ARGUMENT&#x60; is returned.
   * @return offset
   */
  @javax.annotation.Nullable
  public Integer getOffset() {
    return offset;
  }

  public void setOffset(Integer offset) {
    this.offset = offset;
  }


  public GoogleCloudDiscoveryengineV1alphaSearchRequest orderBy(String orderBy) {
    this.orderBy = orderBy;
    return this;
  }

  /**
   * The order in which documents are returned. Documents can be ordered by a field in an Document object. Leave it unset if ordered by relevance. &#x60;order_by&#x60; expression is case-sensitive. For more information on ordering, see [Ordering](https://cloud.google.com/retail/docs/filter-and-order#order) If this field is unrecognizable, an &#x60;INVALID_ARGUMENT&#x60; is returned.
   * @return orderBy
   */
  @javax.annotation.Nullable
  public String getOrderBy() {
    return orderBy;
  }

  public void setOrderBy(String orderBy) {
    this.orderBy = orderBy;
  }


  public GoogleCloudDiscoveryengineV1alphaSearchRequest pageSize(Integer pageSize) {
    this.pageSize = pageSize;
    return this;
  }

  /**
   * Maximum number of Documents to return. If unspecified, defaults to a reasonable value. The maximum allowed value is 100. Values above 100 are coerced to 100. If this field is negative, an &#x60;INVALID_ARGUMENT&#x60; is returned.
   * @return pageSize
   */
  @javax.annotation.Nullable
  public Integer getPageSize() {
    return pageSize;
  }

  public void setPageSize(Integer pageSize) {
    this.pageSize = pageSize;
  }


  public GoogleCloudDiscoveryengineV1alphaSearchRequest pageToken(String pageToken) {
    this.pageToken = pageToken;
    return this;
  }

  /**
   * A page token received from a previous SearchService.Search call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to SearchService.Search must match the call that provided the page token. Otherwise, an &#x60;INVALID_ARGUMENT&#x60; error is returned.
   * @return pageToken
   */
  @javax.annotation.Nullable
  public String getPageToken() {
    return pageToken;
  }

  public void setPageToken(String pageToken) {
    this.pageToken = pageToken;
  }


  public GoogleCloudDiscoveryengineV1alphaSearchRequest params(Map<String, Object> params) {
    this.params = params;
    return this;
  }

  public GoogleCloudDiscoveryengineV1alphaSearchRequest putParamsItem(String key, Object paramsItem) {
    if (this.params == null) {
      this.params = new HashMap<>();
    }
    this.params.put(key, paramsItem);
    return this;
  }

  /**
   * Additional search parameters. For public website search only, supported values are: * &#x60;user_country_code&#x60;: string. Default empty. If set to non-empty, results are restricted or boosted based on the location provided. Example: user_country_code: \&quot;au\&quot; For available codes see [Country Codes](https://developers.google.com/custom-search/docs/json_api_reference#countryCodes) * &#x60;search_type&#x60;: double. Default empty. Enables non-webpage searching depending on the value. The only valid non-default value is 1, which enables image searching. Example: search_type: 1
   * @return params
   */
  @javax.annotation.Nullable
  public Map<String, Object> getParams() {
    return params;
  }

  public void setParams(Map<String, Object> params) {
    this.params = params;
  }


  public GoogleCloudDiscoveryengineV1alphaSearchRequest query(String query) {
    this.query = query;
    return this;
  }

  /**
   * Raw search query.
   * @return query
   */
  @javax.annotation.Nullable
  public String getQuery() {
    return query;
  }

  public void setQuery(String query) {
    this.query = query;
  }


  public GoogleCloudDiscoveryengineV1alphaSearchRequest queryExpansionSpec(GoogleCloudDiscoveryengineV1alphaSearchRequestQueryExpansionSpec queryExpansionSpec) {
    this.queryExpansionSpec = queryExpansionSpec;
    return this;
  }

  /**
   * Get queryExpansionSpec
   * @return queryExpansionSpec
   */
  @javax.annotation.Nullable
  public GoogleCloudDiscoveryengineV1alphaSearchRequestQueryExpansionSpec getQueryExpansionSpec() {
    return queryExpansionSpec;
  }

  public void setQueryExpansionSpec(GoogleCloudDiscoveryengineV1alphaSearchRequestQueryExpansionSpec queryExpansionSpec) {
    this.queryExpansionSpec = queryExpansionSpec;
  }


  public GoogleCloudDiscoveryengineV1alphaSearchRequest rankingExpression(String rankingExpression) {
    this.rankingExpression = rankingExpression;
    return this;
  }

  /**
   * The ranking expression controls the customized ranking on retrieval documents. This overrides ServingConfig.ranking_expression. The ranking expression is a single function or multiple functions that are joint by \&quot;+\&quot;. * ranking_expression &#x3D; function, { \&quot; + \&quot;, function }; Supported functions: * double * relevance_score * double * dotProduct(embedding_field_path) Function variables: &#x60;relevance_score&#x60;: pre-defined keywords, used for measure relevance between query and document. &#x60;embedding_field_path&#x60;: the document embedding field used with query embedding vector. &#x60;dotProduct&#x60;: embedding function between embedding_field_path and query embedding vector. Example ranking expression: If document has an embedding field doc_embedding, the ranking expression could be &#x60;0.5 * relevance_score + 0.3 * dotProduct(doc_embedding)&#x60;.
   * @return rankingExpression
   */
  @javax.annotation.Nullable
  public String getRankingExpression() {
    return rankingExpression;
  }

  public void setRankingExpression(String rankingExpression) {
    this.rankingExpression = rankingExpression;
  }


  public GoogleCloudDiscoveryengineV1alphaSearchRequest safeSearch(Boolean safeSearch) {
    this.safeSearch = safeSearch;
    return this;
  }

  /**
   * Whether to turn on safe search. This is only supported for website search.
   * @return safeSearch
   */
  @javax.annotation.Nullable
  public Boolean getSafeSearch() {
    return safeSearch;
  }

  public void setSafeSearch(Boolean safeSearch) {
    this.safeSearch = safeSearch;
  }


  public GoogleCloudDiscoveryengineV1alphaSearchRequest servingConfig(String servingConfig) {
    this.servingConfig = servingConfig;
    return this;
  }

  /**
   * Required. The resource name of the Search serving config, such as &#x60;projects/_*_/locations/global/collections/default_collection/engines/_*_/servingConfigs/default_serving_config&#x60;, or &#x60;projects/_*_/locations/global/collections/default_collection/dataStores/default_data_store/servingConfigs/default_serving_config&#x60;. This field is used to identify the serving configuration name, set of models used to make the search.
   * @return servingConfig
   */
  @javax.annotation.Nullable
  public String getServingConfig() {
    return servingConfig;
  }

  public void setServingConfig(String servingConfig) {
    this.servingConfig = servingConfig;
  }


  public GoogleCloudDiscoveryengineV1alphaSearchRequest spellCorrectionSpec(GoogleCloudDiscoveryengineV1alphaSearchRequestSpellCorrectionSpec spellCorrectionSpec) {
    this.spellCorrectionSpec = spellCorrectionSpec;
    return this;
  }

  /**
   * Get spellCorrectionSpec
   * @return spellCorrectionSpec
   */
  @javax.annotation.Nullable
  public GoogleCloudDiscoveryengineV1alphaSearchRequestSpellCorrectionSpec getSpellCorrectionSpec() {
    return spellCorrectionSpec;
  }

  public void setSpellCorrectionSpec(GoogleCloudDiscoveryengineV1alphaSearchRequestSpellCorrectionSpec spellCorrectionSpec) {
    this.spellCorrectionSpec = spellCorrectionSpec;
  }


  public GoogleCloudDiscoveryengineV1alphaSearchRequest userInfo(GoogleCloudDiscoveryengineV1alphaUserInfo userInfo) {
    this.userInfo = userInfo;
    return this;
  }

  /**
   * Get userInfo
   * @return userInfo
   */
  @javax.annotation.Nullable
  public GoogleCloudDiscoveryengineV1alphaUserInfo getUserInfo() {
    return userInfo;
  }

  public void setUserInfo(GoogleCloudDiscoveryengineV1alphaUserInfo userInfo) {
    this.userInfo = userInfo;
  }


  public GoogleCloudDiscoveryengineV1alphaSearchRequest userLabels(Map<String, String> userLabels) {
    this.userLabels = userLabels;
    return this;
  }

  public GoogleCloudDiscoveryengineV1alphaSearchRequest putUserLabelsItem(String key, String userLabelsItem) {
    if (this.userLabels == null) {
      this.userLabels = new HashMap<>();
    }
    this.userLabels.put(key, userLabelsItem);
    return this;
  }

  /**
   * The user labels applied to a resource must meet the following requirements: * Each resource can have multiple labels, up to a maximum of 64. * Each label must be a key-value pair. * Keys have a minimum length of 1 character and a maximum length of 63 characters and cannot be empty. Values can be empty and have a maximum length of 63 characters. * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. All characters must use UTF-8 encoding, and international characters are allowed. * The key portion of a label must be unique. However, you can use the same key with multiple resources. * Keys must start with a lowercase letter or international character. See [Google Cloud Document](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements) for more details.
   * @return userLabels
   */
  @javax.annotation.Nullable
  public Map<String, String> getUserLabels() {
    return userLabels;
  }

  public void setUserLabels(Map<String, String> userLabels) {
    this.userLabels = userLabels;
  }


  public GoogleCloudDiscoveryengineV1alphaSearchRequest userPseudoId(String userPseudoId) {
    this.userPseudoId = userPseudoId;
    return this;
  }

  /**
   * A unique identifier for tracking visitors. For example, this could be implemented with an HTTP cookie, which should be able to uniquely identify a visitor on a single device. This unique identifier should not change if the visitor logs in or out of the website. This field should NOT have a fixed value such as &#x60;unknown_visitor&#x60;. This should be the same identifier as UserEvent.user_pseudo_id and CompleteQueryRequest.user_pseudo_id The field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an &#x60;INVALID_ARGUMENT&#x60; error is returned.
   * @return userPseudoId
   */
  @javax.annotation.Nullable
  public String getUserPseudoId() {
    return userPseudoId;
  }

  public void setUserPseudoId(String userPseudoId) {
    this.userPseudoId = userPseudoId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDiscoveryengineV1alphaSearchRequest googleCloudDiscoveryengineV1alphaSearchRequest = (GoogleCloudDiscoveryengineV1alphaSearchRequest) o;
    return Objects.equals(this.boostSpec, googleCloudDiscoveryengineV1alphaSearchRequest.boostSpec) &&
        Objects.equals(this.branch, googleCloudDiscoveryengineV1alphaSearchRequest.branch) &&
        Objects.equals(this.canonicalFilter, googleCloudDiscoveryengineV1alphaSearchRequest.canonicalFilter) &&
        Objects.equals(this.contentSearchSpec, googleCloudDiscoveryengineV1alphaSearchRequest.contentSearchSpec) &&
        Objects.equals(this.customFineTuningSpec, googleCloudDiscoveryengineV1alphaSearchRequest.customFineTuningSpec) &&
        Objects.equals(this.embeddingSpec, googleCloudDiscoveryengineV1alphaSearchRequest.embeddingSpec) &&
        Objects.equals(this.facetSpecs, googleCloudDiscoveryengineV1alphaSearchRequest.facetSpecs) &&
        Objects.equals(this.filter, googleCloudDiscoveryengineV1alphaSearchRequest.filter) &&
        Objects.equals(this.imageQuery, googleCloudDiscoveryengineV1alphaSearchRequest.imageQuery) &&
        Objects.equals(this.offset, googleCloudDiscoveryengineV1alphaSearchRequest.offset) &&
        Objects.equals(this.orderBy, googleCloudDiscoveryengineV1alphaSearchRequest.orderBy) &&
        Objects.equals(this.pageSize, googleCloudDiscoveryengineV1alphaSearchRequest.pageSize) &&
        Objects.equals(this.pageToken, googleCloudDiscoveryengineV1alphaSearchRequest.pageToken) &&
        Objects.equals(this.params, googleCloudDiscoveryengineV1alphaSearchRequest.params) &&
        Objects.equals(this.query, googleCloudDiscoveryengineV1alphaSearchRequest.query) &&
        Objects.equals(this.queryExpansionSpec, googleCloudDiscoveryengineV1alphaSearchRequest.queryExpansionSpec) &&
        Objects.equals(this.rankingExpression, googleCloudDiscoveryengineV1alphaSearchRequest.rankingExpression) &&
        Objects.equals(this.safeSearch, googleCloudDiscoveryengineV1alphaSearchRequest.safeSearch) &&
        Objects.equals(this.servingConfig, googleCloudDiscoveryengineV1alphaSearchRequest.servingConfig) &&
        Objects.equals(this.spellCorrectionSpec, googleCloudDiscoveryengineV1alphaSearchRequest.spellCorrectionSpec) &&
        Objects.equals(this.userInfo, googleCloudDiscoveryengineV1alphaSearchRequest.userInfo) &&
        Objects.equals(this.userLabels, googleCloudDiscoveryengineV1alphaSearchRequest.userLabels) &&
        Objects.equals(this.userPseudoId, googleCloudDiscoveryengineV1alphaSearchRequest.userPseudoId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(boostSpec, branch, canonicalFilter, contentSearchSpec, customFineTuningSpec, embeddingSpec, facetSpecs, filter, imageQuery, offset, orderBy, pageSize, pageToken, params, query, queryExpansionSpec, rankingExpression, safeSearch, servingConfig, spellCorrectionSpec, userInfo, userLabels, userPseudoId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDiscoveryengineV1alphaSearchRequest {\n");
    sb.append("    boostSpec: ").append(toIndentedString(boostSpec)).append("\n");
    sb.append("    branch: ").append(toIndentedString(branch)).append("\n");
    sb.append("    canonicalFilter: ").append(toIndentedString(canonicalFilter)).append("\n");
    sb.append("    contentSearchSpec: ").append(toIndentedString(contentSearchSpec)).append("\n");
    sb.append("    customFineTuningSpec: ").append(toIndentedString(customFineTuningSpec)).append("\n");
    sb.append("    embeddingSpec: ").append(toIndentedString(embeddingSpec)).append("\n");
    sb.append("    facetSpecs: ").append(toIndentedString(facetSpecs)).append("\n");
    sb.append("    filter: ").append(toIndentedString(filter)).append("\n");
    sb.append("    imageQuery: ").append(toIndentedString(imageQuery)).append("\n");
    sb.append("    offset: ").append(toIndentedString(offset)).append("\n");
    sb.append("    orderBy: ").append(toIndentedString(orderBy)).append("\n");
    sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
    sb.append("    pageToken: ").append(toIndentedString(pageToken)).append("\n");
    sb.append("    params: ").append(toIndentedString(params)).append("\n");
    sb.append("    query: ").append(toIndentedString(query)).append("\n");
    sb.append("    queryExpansionSpec: ").append(toIndentedString(queryExpansionSpec)).append("\n");
    sb.append("    rankingExpression: ").append(toIndentedString(rankingExpression)).append("\n");
    sb.append("    safeSearch: ").append(toIndentedString(safeSearch)).append("\n");
    sb.append("    servingConfig: ").append(toIndentedString(servingConfig)).append("\n");
    sb.append("    spellCorrectionSpec: ").append(toIndentedString(spellCorrectionSpec)).append("\n");
    sb.append("    userInfo: ").append(toIndentedString(userInfo)).append("\n");
    sb.append("    userLabels: ").append(toIndentedString(userLabels)).append("\n");
    sb.append("    userPseudoId: ").append(toIndentedString(userPseudoId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("boostSpec");
    openapiFields.add("branch");
    openapiFields.add("canonicalFilter");
    openapiFields.add("contentSearchSpec");
    openapiFields.add("customFineTuningSpec");
    openapiFields.add("embeddingSpec");
    openapiFields.add("facetSpecs");
    openapiFields.add("filter");
    openapiFields.add("imageQuery");
    openapiFields.add("offset");
    openapiFields.add("orderBy");
    openapiFields.add("pageSize");
    openapiFields.add("pageToken");
    openapiFields.add("params");
    openapiFields.add("query");
    openapiFields.add("queryExpansionSpec");
    openapiFields.add("rankingExpression");
    openapiFields.add("safeSearch");
    openapiFields.add("servingConfig");
    openapiFields.add("spellCorrectionSpec");
    openapiFields.add("userInfo");
    openapiFields.add("userLabels");
    openapiFields.add("userPseudoId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDiscoveryengineV1alphaSearchRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDiscoveryengineV1alphaSearchRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDiscoveryengineV1alphaSearchRequest is not found in the empty JSON string", GoogleCloudDiscoveryengineV1alphaSearchRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDiscoveryengineV1alphaSearchRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDiscoveryengineV1alphaSearchRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `boostSpec`
      if (jsonObj.get("boostSpec") != null && !jsonObj.get("boostSpec").isJsonNull()) {
        GoogleCloudDiscoveryengineV1alphaSearchRequestBoostSpec.validateJsonElement(jsonObj.get("boostSpec"));
      }
      if ((jsonObj.get("branch") != null && !jsonObj.get("branch").isJsonNull()) && !jsonObj.get("branch").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `branch` to be a primitive type in the JSON string but got `%s`", jsonObj.get("branch").toString()));
      }
      if ((jsonObj.get("canonicalFilter") != null && !jsonObj.get("canonicalFilter").isJsonNull()) && !jsonObj.get("canonicalFilter").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `canonicalFilter` to be a primitive type in the JSON string but got `%s`", jsonObj.get("canonicalFilter").toString()));
      }
      // validate the optional field `contentSearchSpec`
      if (jsonObj.get("contentSearchSpec") != null && !jsonObj.get("contentSearchSpec").isJsonNull()) {
        GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpec.validateJsonElement(jsonObj.get("contentSearchSpec"));
      }
      // validate the optional field `customFineTuningSpec`
      if (jsonObj.get("customFineTuningSpec") != null && !jsonObj.get("customFineTuningSpec").isJsonNull()) {
        GoogleCloudDiscoveryengineV1alphaCustomFineTuningSpec.validateJsonElement(jsonObj.get("customFineTuningSpec"));
      }
      // validate the optional field `embeddingSpec`
      if (jsonObj.get("embeddingSpec") != null && !jsonObj.get("embeddingSpec").isJsonNull()) {
        GoogleCloudDiscoveryengineV1alphaSearchRequestEmbeddingSpec.validateJsonElement(jsonObj.get("embeddingSpec"));
      }
      if (jsonObj.get("facetSpecs") != null && !jsonObj.get("facetSpecs").isJsonNull()) {
        JsonArray jsonArrayfacetSpecs = jsonObj.getAsJsonArray("facetSpecs");
        if (jsonArrayfacetSpecs != null) {
          // ensure the json data is an array
          if (!jsonObj.get("facetSpecs").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `facetSpecs` to be an array in the JSON string but got `%s`", jsonObj.get("facetSpecs").toString()));
          }

          // validate the optional field `facetSpecs` (array)
          for (int i = 0; i < jsonArrayfacetSpecs.size(); i++) {
            GoogleCloudDiscoveryengineV1alphaSearchRequestFacetSpec.validateJsonElement(jsonArrayfacetSpecs.get(i));
          };
        }
      }
      if ((jsonObj.get("filter") != null && !jsonObj.get("filter").isJsonNull()) && !jsonObj.get("filter").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `filter` to be a primitive type in the JSON string but got `%s`", jsonObj.get("filter").toString()));
      }
      // validate the optional field `imageQuery`
      if (jsonObj.get("imageQuery") != null && !jsonObj.get("imageQuery").isJsonNull()) {
        GoogleCloudDiscoveryengineV1alphaSearchRequestImageQuery.validateJsonElement(jsonObj.get("imageQuery"));
      }
      if ((jsonObj.get("orderBy") != null && !jsonObj.get("orderBy").isJsonNull()) && !jsonObj.get("orderBy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `orderBy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("orderBy").toString()));
      }
      if ((jsonObj.get("pageToken") != null && !jsonObj.get("pageToken").isJsonNull()) && !jsonObj.get("pageToken").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pageToken` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pageToken").toString()));
      }
      if ((jsonObj.get("query") != null && !jsonObj.get("query").isJsonNull()) && !jsonObj.get("query").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `query` to be a primitive type in the JSON string but got `%s`", jsonObj.get("query").toString()));
      }
      // validate the optional field `queryExpansionSpec`
      if (jsonObj.get("queryExpansionSpec") != null && !jsonObj.get("queryExpansionSpec").isJsonNull()) {
        GoogleCloudDiscoveryengineV1alphaSearchRequestQueryExpansionSpec.validateJsonElement(jsonObj.get("queryExpansionSpec"));
      }
      if ((jsonObj.get("rankingExpression") != null && !jsonObj.get("rankingExpression").isJsonNull()) && !jsonObj.get("rankingExpression").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `rankingExpression` to be a primitive type in the JSON string but got `%s`", jsonObj.get("rankingExpression").toString()));
      }
      if ((jsonObj.get("servingConfig") != null && !jsonObj.get("servingConfig").isJsonNull()) && !jsonObj.get("servingConfig").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `servingConfig` to be a primitive type in the JSON string but got `%s`", jsonObj.get("servingConfig").toString()));
      }
      // validate the optional field `spellCorrectionSpec`
      if (jsonObj.get("spellCorrectionSpec") != null && !jsonObj.get("spellCorrectionSpec").isJsonNull()) {
        GoogleCloudDiscoveryengineV1alphaSearchRequestSpellCorrectionSpec.validateJsonElement(jsonObj.get("spellCorrectionSpec"));
      }
      // validate the optional field `userInfo`
      if (jsonObj.get("userInfo") != null && !jsonObj.get("userInfo").isJsonNull()) {
        GoogleCloudDiscoveryengineV1alphaUserInfo.validateJsonElement(jsonObj.get("userInfo"));
      }
      if ((jsonObj.get("userPseudoId") != null && !jsonObj.get("userPseudoId").isJsonNull()) && !jsonObj.get("userPseudoId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userPseudoId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userPseudoId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDiscoveryengineV1alphaSearchRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDiscoveryengineV1alphaSearchRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDiscoveryengineV1alphaSearchRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDiscoveryengineV1alphaSearchRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDiscoveryengineV1alphaSearchRequest>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDiscoveryengineV1alphaSearchRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDiscoveryengineV1alphaSearchRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDiscoveryengineV1alphaSearchRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDiscoveryengineV1alphaSearchRequest
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDiscoveryengineV1alphaSearchRequest
   */
  public static GoogleCloudDiscoveryengineV1alphaSearchRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDiscoveryengineV1alphaSearchRequest.class);
  }

  /**
   * Convert an instance of GoogleCloudDiscoveryengineV1alphaSearchRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

