/*
 * Discovery Engine API
 * Discovery Engine API.
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpec;
import org.openapitools.client.model.GoogleCloudDiscoveryengineV1alphaWidgetConfigFacetField;
import org.openapitools.client.model.GoogleCloudDiscoveryengineV1alphaWidgetConfigUIComponentField;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * WidgetConfig captures configs at the Widget level.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:39:39.358631-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDiscoveryengineV1alphaWidgetConfig {
  public static final String SERIALIZED_NAME_ALLOW_PUBLIC_ACCESS = "allowPublicAccess";
  @SerializedName(SERIALIZED_NAME_ALLOW_PUBLIC_ACCESS)
  private Boolean allowPublicAccess;

  public static final String SERIALIZED_NAME_ALLOWLISTED_DOMAINS = "allowlistedDomains";
  @SerializedName(SERIALIZED_NAME_ALLOWLISTED_DOMAINS)
  private List<String> allowlistedDomains = new ArrayList<>();

  public static final String SERIALIZED_NAME_CONFIG_ID = "configId";
  @SerializedName(SERIALIZED_NAME_CONFIG_ID)
  private String configId;

  public static final String SERIALIZED_NAME_CONTENT_SEARCH_SPEC = "contentSearchSpec";
  @SerializedName(SERIALIZED_NAME_CONTENT_SEARCH_SPEC)
  private GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpec contentSearchSpec;

  public static final String SERIALIZED_NAME_CREATE_TIME = "createTime";
  @SerializedName(SERIALIZED_NAME_CREATE_TIME)
  private String createTime;

  /**
   * Output only. The type of the parent data store.
   */
  @JsonAdapter(DataStoreTypeEnum.Adapter.class)
  public enum DataStoreTypeEnum {
    DATA_STORE_TYPE_UNSPECIFIED("DATA_STORE_TYPE_UNSPECIFIED"),
    
    SITE_SEARCH("SITE_SEARCH"),
    
    STRUCTURED("STRUCTURED"),
    
    UNSTRUCTURED("UNSTRUCTURED"),
    
    BLENDED("BLENDED");

    private String value;

    DataStoreTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static DataStoreTypeEnum fromValue(String value) {
      for (DataStoreTypeEnum b : DataStoreTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<DataStoreTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DataStoreTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public DataStoreTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return DataStoreTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      DataStoreTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_DATA_STORE_TYPE = "dataStoreType";
  @SerializedName(SERIALIZED_NAME_DATA_STORE_TYPE)
  private DataStoreTypeEnum dataStoreType;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_ENABLE_AUTOCOMPLETE = "enableAutocomplete";
  @SerializedName(SERIALIZED_NAME_ENABLE_AUTOCOMPLETE)
  private Boolean enableAutocomplete;

  public static final String SERIALIZED_NAME_ENABLE_CONVERSATIONAL_SEARCH = "enableConversationalSearch";
  @SerializedName(SERIALIZED_NAME_ENABLE_CONVERSATIONAL_SEARCH)
  private Boolean enableConversationalSearch;

  public static final String SERIALIZED_NAME_ENABLE_QUALITY_FEEDBACK = "enableQualityFeedback";
  @SerializedName(SERIALIZED_NAME_ENABLE_QUALITY_FEEDBACK)
  private Boolean enableQualityFeedback;

  public static final String SERIALIZED_NAME_ENABLE_RESULT_SCORE = "enableResultScore";
  @SerializedName(SERIALIZED_NAME_ENABLE_RESULT_SCORE)
  private Boolean enableResultScore;

  public static final String SERIALIZED_NAME_ENABLE_SAFE_SEARCH = "enableSafeSearch";
  @SerializedName(SERIALIZED_NAME_ENABLE_SAFE_SEARCH)
  private Boolean enableSafeSearch;

  public static final String SERIALIZED_NAME_ENABLE_SNIPPET_RESULT_SUMMARY = "enableSnippetResultSummary";
  @SerializedName(SERIALIZED_NAME_ENABLE_SNIPPET_RESULT_SUMMARY)
  private Boolean enableSnippetResultSummary;

  public static final String SERIALIZED_NAME_ENABLE_SUMMARIZATION = "enableSummarization";
  @SerializedName(SERIALIZED_NAME_ENABLE_SUMMARIZATION)
  private Boolean enableSummarization;

  public static final String SERIALIZED_NAME_ENABLE_WEB_APP = "enableWebApp";
  @SerializedName(SERIALIZED_NAME_ENABLE_WEB_APP)
  private Boolean enableWebApp;

  public static final String SERIALIZED_NAME_FACET_FIELD = "facetField";
  @SerializedName(SERIALIZED_NAME_FACET_FIELD)
  private List<GoogleCloudDiscoveryengineV1alphaWidgetConfigFacetField> facetField = new ArrayList<>();

  public static final String SERIALIZED_NAME_FIELDS_UI_COMPONENTS_MAP = "fieldsUiComponentsMap";
  @SerializedName(SERIALIZED_NAME_FIELDS_UI_COMPONENTS_MAP)
  private Map<String, GoogleCloudDiscoveryengineV1alphaWidgetConfigUIComponentField> fieldsUiComponentsMap = new HashMap<>();

  /**
   * Output only. The industry vertical that the WidgetConfig registers. The WidgetConfig industry vertical is based on the associated Engine.
   */
  @JsonAdapter(IndustryVerticalEnum.Adapter.class)
  public enum IndustryVerticalEnum {
    INDUSTRY_VERTICAL_UNSPECIFIED("INDUSTRY_VERTICAL_UNSPECIFIED"),
    
    GENERIC("GENERIC"),
    
    MEDIA("MEDIA");

    private String value;

    IndustryVerticalEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static IndustryVerticalEnum fromValue(String value) {
      for (IndustryVerticalEnum b : IndustryVerticalEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<IndustryVerticalEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final IndustryVerticalEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public IndustryVerticalEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return IndustryVerticalEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      IndustryVerticalEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_INDUSTRY_VERTICAL = "industryVertical";
  @SerializedName(SERIALIZED_NAME_INDUSTRY_VERTICAL)
  private IndustryVerticalEnum industryVertical;

  public static final String SERIALIZED_NAME_LLM_ENABLED = "llmEnabled";
  @SerializedName(SERIALIZED_NAME_LLM_ENABLED)
  private Boolean llmEnabled;

  public static final String SERIALIZED_NAME_MINIMUM_DATA_TERM_ACCEPTED = "minimumDataTermAccepted";
  @SerializedName(SERIALIZED_NAME_MINIMUM_DATA_TERM_ACCEPTED)
  private Boolean minimumDataTermAccepted;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  /**
   * The type of snippet to display in UCS widget. - RESULT_DISPLAY_TYPE_UNSPECIFIED for existing users. - SNIPPET for new non-enterprise search users. - EXTRACTIVE_ANSWER for new enterprise search users.
   */
  @JsonAdapter(ResultDisplayTypeEnum.Adapter.class)
  public enum ResultDisplayTypeEnum {
    RESULT_DISPLAY_TYPE_UNSPECIFIED("RESULT_DISPLAY_TYPE_UNSPECIFIED"),
    
    SNIPPET("SNIPPET"),
    
    EXTRACTIVE_ANSWER("EXTRACTIVE_ANSWER");

    private String value;

    ResultDisplayTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ResultDisplayTypeEnum fromValue(String value) {
      for (ResultDisplayTypeEnum b : ResultDisplayTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ResultDisplayTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ResultDisplayTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ResultDisplayTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ResultDisplayTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ResultDisplayTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_RESULT_DISPLAY_TYPE = "resultDisplayType";
  @SerializedName(SERIALIZED_NAME_RESULT_DISPLAY_TYPE)
  private ResultDisplayTypeEnum resultDisplayType;

  /**
   * Required. Immutable. Specifies the solution type that this WidgetConfig can be used for.
   */
  @JsonAdapter(SolutionTypeEnum.Adapter.class)
  public enum SolutionTypeEnum {
    UNSPECIFIED("SOLUTION_TYPE_UNSPECIFIED"),
    
    RECOMMENDATION("SOLUTION_TYPE_RECOMMENDATION"),
    
    SEARCH("SOLUTION_TYPE_SEARCH"),
    
    CHAT("SOLUTION_TYPE_CHAT");

    private String value;

    SolutionTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static SolutionTypeEnum fromValue(String value) {
      for (SolutionTypeEnum b : SolutionTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<SolutionTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SolutionTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SolutionTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return SolutionTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      SolutionTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_SOLUTION_TYPE = "solutionType";
  @SerializedName(SERIALIZED_NAME_SOLUTION_TYPE)
  private SolutionTypeEnum solutionType;

  public static final String SERIALIZED_NAME_UPDATE_TIME = "updateTime";
  @SerializedName(SERIALIZED_NAME_UPDATE_TIME)
  private String updateTime;

  public GoogleCloudDiscoveryengineV1alphaWidgetConfig() {
  }

  public GoogleCloudDiscoveryengineV1alphaWidgetConfig(
     String configId, 
     String createTime, 
     DataStoreTypeEnum dataStoreType, 
     IndustryVerticalEnum industryVertical, 
     Boolean llmEnabled, 
     Boolean minimumDataTermAccepted, 
     String updateTime
  ) {
    this();
    this.configId = configId;
    this.createTime = createTime;
    this.dataStoreType = dataStoreType;
    this.industryVertical = industryVertical;
    this.llmEnabled = llmEnabled;
    this.minimumDataTermAccepted = minimumDataTermAccepted;
    this.updateTime = updateTime;
  }

  public GoogleCloudDiscoveryengineV1alphaWidgetConfig allowPublicAccess(Boolean allowPublicAccess) {
    this.allowPublicAccess = allowPublicAccess;
    return this;
  }

  /**
   * Whether allow no-auth integration with widget. If set true, public access to search or other solutions from widget is allowed without authenication token provided by customer hosted backend server.
   * @return allowPublicAccess
   */
  @javax.annotation.Nullable
  public Boolean getAllowPublicAccess() {
    return allowPublicAccess;
  }

  public void setAllowPublicAccess(Boolean allowPublicAccess) {
    this.allowPublicAccess = allowPublicAccess;
  }


  public GoogleCloudDiscoveryengineV1alphaWidgetConfig allowlistedDomains(List<String> allowlistedDomains) {
    this.allowlistedDomains = allowlistedDomains;
    return this;
  }

  public GoogleCloudDiscoveryengineV1alphaWidgetConfig addAllowlistedDomainsItem(String allowlistedDomainsItem) {
    if (this.allowlistedDomains == null) {
      this.allowlistedDomains = new ArrayList<>();
    }
    this.allowlistedDomains.add(allowlistedDomainsItem);
    return this;
  }

  /**
   * Allowlisted domains that can load this widget.
   * @return allowlistedDomains
   */
  @javax.annotation.Nullable
  public List<String> getAllowlistedDomains() {
    return allowlistedDomains;
  }

  public void setAllowlistedDomains(List<String> allowlistedDomains) {
    this.allowlistedDomains = allowlistedDomains;
  }


  /**
   * Output only. Unique obfuscated identifier of a WidgetConfig.
   * @return configId
   */
  @javax.annotation.Nullable
  public String getConfigId() {
    return configId;
  }



  public GoogleCloudDiscoveryengineV1alphaWidgetConfig contentSearchSpec(GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpec contentSearchSpec) {
    this.contentSearchSpec = contentSearchSpec;
    return this;
  }

  /**
   * Get contentSearchSpec
   * @return contentSearchSpec
   */
  @javax.annotation.Nullable
  public GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpec getContentSearchSpec() {
    return contentSearchSpec;
  }

  public void setContentSearchSpec(GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpec contentSearchSpec) {
    this.contentSearchSpec = contentSearchSpec;
  }


  /**
   * Output only. Timestamp the WidgetConfig was created.
   * @return createTime
   */
  @javax.annotation.Nullable
  public String getCreateTime() {
    return createTime;
  }



  /**
   * Output only. The type of the parent data store.
   * @return dataStoreType
   */
  @javax.annotation.Nullable
  public DataStoreTypeEnum getDataStoreType() {
    return dataStoreType;
  }



  public GoogleCloudDiscoveryengineV1alphaWidgetConfig displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Required. The human readable widget config display name. Used in Discovery UI. This field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned.
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public GoogleCloudDiscoveryengineV1alphaWidgetConfig enableAutocomplete(Boolean enableAutocomplete) {
    this.enableAutocomplete = enableAutocomplete;
    return this;
  }

  /**
   * Whether or not to enable autocomplete.
   * @return enableAutocomplete
   */
  @javax.annotation.Nullable
  public Boolean getEnableAutocomplete() {
    return enableAutocomplete;
  }

  public void setEnableAutocomplete(Boolean enableAutocomplete) {
    this.enableAutocomplete = enableAutocomplete;
  }


  public GoogleCloudDiscoveryengineV1alphaWidgetConfig enableConversationalSearch(Boolean enableConversationalSearch) {
    this.enableConversationalSearch = enableConversationalSearch;
    return this;
  }

  /**
   * Whether to allow conversational search (LLM, multi-turn) or not (non-LLM, single-turn).
   * @return enableConversationalSearch
   */
  @javax.annotation.Nullable
  public Boolean getEnableConversationalSearch() {
    return enableConversationalSearch;
  }

  public void setEnableConversationalSearch(Boolean enableConversationalSearch) {
    this.enableConversationalSearch = enableConversationalSearch;
  }


  public GoogleCloudDiscoveryengineV1alphaWidgetConfig enableQualityFeedback(Boolean enableQualityFeedback) {
    this.enableQualityFeedback = enableQualityFeedback;
    return this;
  }

  /**
   * Turn on or off collecting the search result quality feedback from end users.
   * @return enableQualityFeedback
   */
  @javax.annotation.Nullable
  public Boolean getEnableQualityFeedback() {
    return enableQualityFeedback;
  }

  public void setEnableQualityFeedback(Boolean enableQualityFeedback) {
    this.enableQualityFeedback = enableQualityFeedback;
  }


  public GoogleCloudDiscoveryengineV1alphaWidgetConfig enableResultScore(Boolean enableResultScore) {
    this.enableResultScore = enableResultScore;
    return this;
  }

  /**
   * Whether to show the result score.
   * @return enableResultScore
   */
  @javax.annotation.Nullable
  public Boolean getEnableResultScore() {
    return enableResultScore;
  }

  public void setEnableResultScore(Boolean enableResultScore) {
    this.enableResultScore = enableResultScore;
  }


  public GoogleCloudDiscoveryengineV1alphaWidgetConfig enableSafeSearch(Boolean enableSafeSearch) {
    this.enableSafeSearch = enableSafeSearch;
    return this;
  }

  /**
   * Whether to enable safe search.
   * @return enableSafeSearch
   */
  @javax.annotation.Nullable
  public Boolean getEnableSafeSearch() {
    return enableSafeSearch;
  }

  public void setEnableSafeSearch(Boolean enableSafeSearch) {
    this.enableSafeSearch = enableSafeSearch;
  }


  public GoogleCloudDiscoveryengineV1alphaWidgetConfig enableSnippetResultSummary(Boolean enableSnippetResultSummary) {
    this.enableSnippetResultSummary = enableSnippetResultSummary;
    return this;
  }

  /**
   * Turn on or off summary for each snippets result.
   * @return enableSnippetResultSummary
   */
  @javax.annotation.Nullable
  public Boolean getEnableSnippetResultSummary() {
    return enableSnippetResultSummary;
  }

  public void setEnableSnippetResultSummary(Boolean enableSnippetResultSummary) {
    this.enableSnippetResultSummary = enableSnippetResultSummary;
  }


  public GoogleCloudDiscoveryengineV1alphaWidgetConfig enableSummarization(Boolean enableSummarization) {
    this.enableSummarization = enableSummarization;
    return this;
  }

  /**
   * Turn on or off summarization for the search response.
   * @return enableSummarization
   */
  @javax.annotation.Nullable
  public Boolean getEnableSummarization() {
    return enableSummarization;
  }

  public void setEnableSummarization(Boolean enableSummarization) {
    this.enableSummarization = enableSummarization;
  }


  public GoogleCloudDiscoveryengineV1alphaWidgetConfig enableWebApp(Boolean enableWebApp) {
    this.enableWebApp = enableWebApp;
    return this;
  }

  /**
   * Whether to enable standalone web app.
   * @return enableWebApp
   */
  @javax.annotation.Nullable
  public Boolean getEnableWebApp() {
    return enableWebApp;
  }

  public void setEnableWebApp(Boolean enableWebApp) {
    this.enableWebApp = enableWebApp;
  }


  public GoogleCloudDiscoveryengineV1alphaWidgetConfig facetField(List<GoogleCloudDiscoveryengineV1alphaWidgetConfigFacetField> facetField) {
    this.facetField = facetField;
    return this;
  }

  public GoogleCloudDiscoveryengineV1alphaWidgetConfig addFacetFieldItem(GoogleCloudDiscoveryengineV1alphaWidgetConfigFacetField facetFieldItem) {
    if (this.facetField == null) {
      this.facetField = new ArrayList<>();
    }
    this.facetField.add(facetFieldItem);
    return this;
  }

  /**
   * The configuration and appearance of facets in the end user view.
   * @return facetField
   */
  @javax.annotation.Nullable
  public List<GoogleCloudDiscoveryengineV1alphaWidgetConfigFacetField> getFacetField() {
    return facetField;
  }

  public void setFacetField(List<GoogleCloudDiscoveryengineV1alphaWidgetConfigFacetField> facetField) {
    this.facetField = facetField;
  }


  public GoogleCloudDiscoveryengineV1alphaWidgetConfig fieldsUiComponentsMap(Map<String, GoogleCloudDiscoveryengineV1alphaWidgetConfigUIComponentField> fieldsUiComponentsMap) {
    this.fieldsUiComponentsMap = fieldsUiComponentsMap;
    return this;
  }

  public GoogleCloudDiscoveryengineV1alphaWidgetConfig putFieldsUiComponentsMapItem(String key, GoogleCloudDiscoveryengineV1alphaWidgetConfigUIComponentField fieldsUiComponentsMapItem) {
    if (this.fieldsUiComponentsMap == null) {
      this.fieldsUiComponentsMap = new HashMap<>();
    }
    this.fieldsUiComponentsMap.put(key, fieldsUiComponentsMapItem);
    return this;
  }

  /**
   * The key is the UI component. Mock. Currently supported &#x60;title&#x60;, &#x60;thumbnail&#x60;, &#x60;url&#x60;, &#x60;custom1&#x60;, &#x60;custom2&#x60;, &#x60;custom3&#x60;. The value is the name of the field along with its device visibility. The 3 custom fields are optional and can be added or removed. &#x60;title&#x60;, &#x60;thumbnail&#x60;, &#x60;url&#x60; are required UI components that cannot be removed.
   * @return fieldsUiComponentsMap
   */
  @javax.annotation.Nullable
  public Map<String, GoogleCloudDiscoveryengineV1alphaWidgetConfigUIComponentField> getFieldsUiComponentsMap() {
    return fieldsUiComponentsMap;
  }

  public void setFieldsUiComponentsMap(Map<String, GoogleCloudDiscoveryengineV1alphaWidgetConfigUIComponentField> fieldsUiComponentsMap) {
    this.fieldsUiComponentsMap = fieldsUiComponentsMap;
  }


  /**
   * Output only. The industry vertical that the WidgetConfig registers. The WidgetConfig industry vertical is based on the associated Engine.
   * @return industryVertical
   */
  @javax.annotation.Nullable
  public IndustryVerticalEnum getIndustryVertical() {
    return industryVertical;
  }



  /**
   * Output only. Whether LLM is enabled in the corresponding data store.
   * @return llmEnabled
   */
  @javax.annotation.Nullable
  public Boolean getLlmEnabled() {
    return llmEnabled;
  }



  /**
   * Output only. Whether the customer accepted data use terms.
   * @return minimumDataTermAccepted
   */
  @javax.annotation.Nullable
  public Boolean getMinimumDataTermAccepted() {
    return minimumDataTermAccepted;
  }



  public GoogleCloudDiscoveryengineV1alphaWidgetConfig name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Immutable. The full resource name of the widget config. Format: &#x60;projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}/widgetConfigs/{widget_config_id}&#x60;. This field must be a UTF-8 encoded string with a length limit of 1024 characters.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public GoogleCloudDiscoveryengineV1alphaWidgetConfig resultDisplayType(ResultDisplayTypeEnum resultDisplayType) {
    this.resultDisplayType = resultDisplayType;
    return this;
  }

  /**
   * The type of snippet to display in UCS widget. - RESULT_DISPLAY_TYPE_UNSPECIFIED for existing users. - SNIPPET for new non-enterprise search users. - EXTRACTIVE_ANSWER for new enterprise search users.
   * @return resultDisplayType
   */
  @javax.annotation.Nullable
  public ResultDisplayTypeEnum getResultDisplayType() {
    return resultDisplayType;
  }

  public void setResultDisplayType(ResultDisplayTypeEnum resultDisplayType) {
    this.resultDisplayType = resultDisplayType;
  }


  public GoogleCloudDiscoveryengineV1alphaWidgetConfig solutionType(SolutionTypeEnum solutionType) {
    this.solutionType = solutionType;
    return this;
  }

  /**
   * Required. Immutable. Specifies the solution type that this WidgetConfig can be used for.
   * @return solutionType
   */
  @javax.annotation.Nullable
  public SolutionTypeEnum getSolutionType() {
    return solutionType;
  }

  public void setSolutionType(SolutionTypeEnum solutionType) {
    this.solutionType = solutionType;
  }


  /**
   * Output only. Timestamp the WidgetConfig was updated.
   * @return updateTime
   */
  @javax.annotation.Nullable
  public String getUpdateTime() {
    return updateTime;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDiscoveryengineV1alphaWidgetConfig googleCloudDiscoveryengineV1alphaWidgetConfig = (GoogleCloudDiscoveryengineV1alphaWidgetConfig) o;
    return Objects.equals(this.allowPublicAccess, googleCloudDiscoveryengineV1alphaWidgetConfig.allowPublicAccess) &&
        Objects.equals(this.allowlistedDomains, googleCloudDiscoveryengineV1alphaWidgetConfig.allowlistedDomains) &&
        Objects.equals(this.configId, googleCloudDiscoveryengineV1alphaWidgetConfig.configId) &&
        Objects.equals(this.contentSearchSpec, googleCloudDiscoveryengineV1alphaWidgetConfig.contentSearchSpec) &&
        Objects.equals(this.createTime, googleCloudDiscoveryengineV1alphaWidgetConfig.createTime) &&
        Objects.equals(this.dataStoreType, googleCloudDiscoveryengineV1alphaWidgetConfig.dataStoreType) &&
        Objects.equals(this.displayName, googleCloudDiscoveryengineV1alphaWidgetConfig.displayName) &&
        Objects.equals(this.enableAutocomplete, googleCloudDiscoveryengineV1alphaWidgetConfig.enableAutocomplete) &&
        Objects.equals(this.enableConversationalSearch, googleCloudDiscoveryengineV1alphaWidgetConfig.enableConversationalSearch) &&
        Objects.equals(this.enableQualityFeedback, googleCloudDiscoveryengineV1alphaWidgetConfig.enableQualityFeedback) &&
        Objects.equals(this.enableResultScore, googleCloudDiscoveryengineV1alphaWidgetConfig.enableResultScore) &&
        Objects.equals(this.enableSafeSearch, googleCloudDiscoveryengineV1alphaWidgetConfig.enableSafeSearch) &&
        Objects.equals(this.enableSnippetResultSummary, googleCloudDiscoveryengineV1alphaWidgetConfig.enableSnippetResultSummary) &&
        Objects.equals(this.enableSummarization, googleCloudDiscoveryengineV1alphaWidgetConfig.enableSummarization) &&
        Objects.equals(this.enableWebApp, googleCloudDiscoveryengineV1alphaWidgetConfig.enableWebApp) &&
        Objects.equals(this.facetField, googleCloudDiscoveryengineV1alphaWidgetConfig.facetField) &&
        Objects.equals(this.fieldsUiComponentsMap, googleCloudDiscoveryengineV1alphaWidgetConfig.fieldsUiComponentsMap) &&
        Objects.equals(this.industryVertical, googleCloudDiscoveryengineV1alphaWidgetConfig.industryVertical) &&
        Objects.equals(this.llmEnabled, googleCloudDiscoveryengineV1alphaWidgetConfig.llmEnabled) &&
        Objects.equals(this.minimumDataTermAccepted, googleCloudDiscoveryengineV1alphaWidgetConfig.minimumDataTermAccepted) &&
        Objects.equals(this.name, googleCloudDiscoveryengineV1alphaWidgetConfig.name) &&
        Objects.equals(this.resultDisplayType, googleCloudDiscoveryengineV1alphaWidgetConfig.resultDisplayType) &&
        Objects.equals(this.solutionType, googleCloudDiscoveryengineV1alphaWidgetConfig.solutionType) &&
        Objects.equals(this.updateTime, googleCloudDiscoveryengineV1alphaWidgetConfig.updateTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allowPublicAccess, allowlistedDomains, configId, contentSearchSpec, createTime, dataStoreType, displayName, enableAutocomplete, enableConversationalSearch, enableQualityFeedback, enableResultScore, enableSafeSearch, enableSnippetResultSummary, enableSummarization, enableWebApp, facetField, fieldsUiComponentsMap, industryVertical, llmEnabled, minimumDataTermAccepted, name, resultDisplayType, solutionType, updateTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDiscoveryengineV1alphaWidgetConfig {\n");
    sb.append("    allowPublicAccess: ").append(toIndentedString(allowPublicAccess)).append("\n");
    sb.append("    allowlistedDomains: ").append(toIndentedString(allowlistedDomains)).append("\n");
    sb.append("    configId: ").append(toIndentedString(configId)).append("\n");
    sb.append("    contentSearchSpec: ").append(toIndentedString(contentSearchSpec)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    dataStoreType: ").append(toIndentedString(dataStoreType)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    enableAutocomplete: ").append(toIndentedString(enableAutocomplete)).append("\n");
    sb.append("    enableConversationalSearch: ").append(toIndentedString(enableConversationalSearch)).append("\n");
    sb.append("    enableQualityFeedback: ").append(toIndentedString(enableQualityFeedback)).append("\n");
    sb.append("    enableResultScore: ").append(toIndentedString(enableResultScore)).append("\n");
    sb.append("    enableSafeSearch: ").append(toIndentedString(enableSafeSearch)).append("\n");
    sb.append("    enableSnippetResultSummary: ").append(toIndentedString(enableSnippetResultSummary)).append("\n");
    sb.append("    enableSummarization: ").append(toIndentedString(enableSummarization)).append("\n");
    sb.append("    enableWebApp: ").append(toIndentedString(enableWebApp)).append("\n");
    sb.append("    facetField: ").append(toIndentedString(facetField)).append("\n");
    sb.append("    fieldsUiComponentsMap: ").append(toIndentedString(fieldsUiComponentsMap)).append("\n");
    sb.append("    industryVertical: ").append(toIndentedString(industryVertical)).append("\n");
    sb.append("    llmEnabled: ").append(toIndentedString(llmEnabled)).append("\n");
    sb.append("    minimumDataTermAccepted: ").append(toIndentedString(minimumDataTermAccepted)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    resultDisplayType: ").append(toIndentedString(resultDisplayType)).append("\n");
    sb.append("    solutionType: ").append(toIndentedString(solutionType)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("allowPublicAccess");
    openapiFields.add("allowlistedDomains");
    openapiFields.add("configId");
    openapiFields.add("contentSearchSpec");
    openapiFields.add("createTime");
    openapiFields.add("dataStoreType");
    openapiFields.add("displayName");
    openapiFields.add("enableAutocomplete");
    openapiFields.add("enableConversationalSearch");
    openapiFields.add("enableQualityFeedback");
    openapiFields.add("enableResultScore");
    openapiFields.add("enableSafeSearch");
    openapiFields.add("enableSnippetResultSummary");
    openapiFields.add("enableSummarization");
    openapiFields.add("enableWebApp");
    openapiFields.add("facetField");
    openapiFields.add("fieldsUiComponentsMap");
    openapiFields.add("industryVertical");
    openapiFields.add("llmEnabled");
    openapiFields.add("minimumDataTermAccepted");
    openapiFields.add("name");
    openapiFields.add("resultDisplayType");
    openapiFields.add("solutionType");
    openapiFields.add("updateTime");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDiscoveryengineV1alphaWidgetConfig
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDiscoveryengineV1alphaWidgetConfig.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDiscoveryengineV1alphaWidgetConfig is not found in the empty JSON string", GoogleCloudDiscoveryengineV1alphaWidgetConfig.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDiscoveryengineV1alphaWidgetConfig.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDiscoveryengineV1alphaWidgetConfig` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("allowlistedDomains") != null && !jsonObj.get("allowlistedDomains").isJsonNull() && !jsonObj.get("allowlistedDomains").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `allowlistedDomains` to be an array in the JSON string but got `%s`", jsonObj.get("allowlistedDomains").toString()));
      }
      if ((jsonObj.get("configId") != null && !jsonObj.get("configId").isJsonNull()) && !jsonObj.get("configId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `configId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("configId").toString()));
      }
      // validate the optional field `contentSearchSpec`
      if (jsonObj.get("contentSearchSpec") != null && !jsonObj.get("contentSearchSpec").isJsonNull()) {
        GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpec.validateJsonElement(jsonObj.get("contentSearchSpec"));
      }
      if ((jsonObj.get("createTime") != null && !jsonObj.get("createTime").isJsonNull()) && !jsonObj.get("createTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createTime").toString()));
      }
      if ((jsonObj.get("dataStoreType") != null && !jsonObj.get("dataStoreType").isJsonNull()) && !jsonObj.get("dataStoreType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dataStoreType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dataStoreType").toString()));
      }
      // validate the optional field `dataStoreType`
      if (jsonObj.get("dataStoreType") != null && !jsonObj.get("dataStoreType").isJsonNull()) {
        DataStoreTypeEnum.validateJsonElement(jsonObj.get("dataStoreType"));
      }
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      if (jsonObj.get("facetField") != null && !jsonObj.get("facetField").isJsonNull()) {
        JsonArray jsonArrayfacetField = jsonObj.getAsJsonArray("facetField");
        if (jsonArrayfacetField != null) {
          // ensure the json data is an array
          if (!jsonObj.get("facetField").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `facetField` to be an array in the JSON string but got `%s`", jsonObj.get("facetField").toString()));
          }

          // validate the optional field `facetField` (array)
          for (int i = 0; i < jsonArrayfacetField.size(); i++) {
            GoogleCloudDiscoveryengineV1alphaWidgetConfigFacetField.validateJsonElement(jsonArrayfacetField.get(i));
          };
        }
      }
      if ((jsonObj.get("industryVertical") != null && !jsonObj.get("industryVertical").isJsonNull()) && !jsonObj.get("industryVertical").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `industryVertical` to be a primitive type in the JSON string but got `%s`", jsonObj.get("industryVertical").toString()));
      }
      // validate the optional field `industryVertical`
      if (jsonObj.get("industryVertical") != null && !jsonObj.get("industryVertical").isJsonNull()) {
        IndustryVerticalEnum.validateJsonElement(jsonObj.get("industryVertical"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("resultDisplayType") != null && !jsonObj.get("resultDisplayType").isJsonNull()) && !jsonObj.get("resultDisplayType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `resultDisplayType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("resultDisplayType").toString()));
      }
      // validate the optional field `resultDisplayType`
      if (jsonObj.get("resultDisplayType") != null && !jsonObj.get("resultDisplayType").isJsonNull()) {
        ResultDisplayTypeEnum.validateJsonElement(jsonObj.get("resultDisplayType"));
      }
      if ((jsonObj.get("solutionType") != null && !jsonObj.get("solutionType").isJsonNull()) && !jsonObj.get("solutionType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `solutionType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("solutionType").toString()));
      }
      // validate the optional field `solutionType`
      if (jsonObj.get("solutionType") != null && !jsonObj.get("solutionType").isJsonNull()) {
        SolutionTypeEnum.validateJsonElement(jsonObj.get("solutionType"));
      }
      if ((jsonObj.get("updateTime") != null && !jsonObj.get("updateTime").isJsonNull()) && !jsonObj.get("updateTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updateTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updateTime").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDiscoveryengineV1alphaWidgetConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDiscoveryengineV1alphaWidgetConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDiscoveryengineV1alphaWidgetConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDiscoveryengineV1alphaWidgetConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDiscoveryengineV1alphaWidgetConfig>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDiscoveryengineV1alphaWidgetConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDiscoveryengineV1alphaWidgetConfig read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDiscoveryengineV1alphaWidgetConfig given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDiscoveryengineV1alphaWidgetConfig
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDiscoveryengineV1alphaWidgetConfig
   */
  public static GoogleCloudDiscoveryengineV1alphaWidgetConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDiscoveryengineV1alphaWidgetConfig.class);
  }

  /**
   * Convert an instance of GoogleCloudDiscoveryengineV1alphaWidgetConfig to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

