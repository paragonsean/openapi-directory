/*
 * Discovery Engine API
 * Discovery Engine API.
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudDiscoveryengineV1alphaEngineChatEngineConfig;
import org.openapitools.client.model.GoogleCloudDiscoveryengineV1alphaEngineChatEngineMetadata;
import org.openapitools.client.model.GoogleCloudDiscoveryengineV1alphaEngineCommonConfig;
import org.openapitools.client.model.GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig;
import org.openapitools.client.model.GoogleCloudDiscoveryengineV1alphaEngineRecommendationMetadata;
import org.openapitools.client.model.GoogleCloudDiscoveryengineV1alphaEngineSearchEngineConfig;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for GoogleCloudDiscoveryengineV1alphaEngine
 */
public class GoogleCloudDiscoveryengineV1alphaEngineTest {
    private final GoogleCloudDiscoveryengineV1alphaEngine model = new GoogleCloudDiscoveryengineV1alphaEngine();

    /**
     * Model tests for GoogleCloudDiscoveryengineV1alphaEngine
     */
    @Test
    public void testGoogleCloudDiscoveryengineV1alphaEngine() {
        // TODO: test GoogleCloudDiscoveryengineV1alphaEngine
    }

    /**
     * Test the property 'allowMultipleDataStoresSearchEngine'
     */
    @Test
    public void allowMultipleDataStoresSearchEngineTest() {
        // TODO: test allowMultipleDataStoresSearchEngine
    }

    /**
     * Test the property 'chatEngineConfig'
     */
    @Test
    public void chatEngineConfigTest() {
        // TODO: test chatEngineConfig
    }

    /**
     * Test the property 'chatEngineMetadata'
     */
    @Test
    public void chatEngineMetadataTest() {
        // TODO: test chatEngineMetadata
    }

    /**
     * Test the property 'commonConfig'
     */
    @Test
    public void commonConfigTest() {
        // TODO: test commonConfig
    }

    /**
     * Test the property 'createTime'
     */
    @Test
    public void createTimeTest() {
        // TODO: test createTime
    }

    /**
     * Test the property 'dataStoreIds'
     */
    @Test
    public void dataStoreIdsTest() {
        // TODO: test dataStoreIds
    }

    /**
     * Test the property 'displayName'
     */
    @Test
    public void displayNameTest() {
        // TODO: test displayName
    }

    /**
     * Test the property 'industryVertical'
     */
    @Test
    public void industryVerticalTest() {
        // TODO: test industryVertical
    }

    /**
     * Test the property 'mediaRecommendationEngineConfig'
     */
    @Test
    public void mediaRecommendationEngineConfigTest() {
        // TODO: test mediaRecommendationEngineConfig
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'recommendationMetadata'
     */
    @Test
    public void recommendationMetadataTest() {
        // TODO: test recommendationMetadata
    }

    /**
     * Test the property 'searchEngineConfig'
     */
    @Test
    public void searchEngineConfigTest() {
        // TODO: test searchEngineConfig
    }

    /**
     * Test the property 'similarDocumentsConfig'
     */
    @Test
    public void similarDocumentsConfigTest() {
        // TODO: test similarDocumentsConfig
    }

    /**
     * Test the property 'solutionType'
     */
    @Test
    public void solutionTypeTest() {
        // TODO: test solutionType
    }

    /**
     * Test the property 'updateTime'
     */
    @Test
    public void updateTimeTest() {
        // TODO: test updateTime
    }

}
