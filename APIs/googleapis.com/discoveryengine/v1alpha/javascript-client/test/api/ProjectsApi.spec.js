/**
 * Discovery Engine API
 * Discovery Engine API.
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DiscoveryEngineApi);
  }
}(this, function(expect, DiscoveryEngineApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new DiscoveryEngineApi.ProjectsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ProjectsApi', function() {
    describe('discoveryengineProjectsLocationsCollectionsDataStoresSiteSearchEngineBatchVerifyTargetSites', function() {
      it('should call discoveryengineProjectsLocationsCollectionsDataStoresSiteSearchEngineBatchVerifyTargetSites successfully', function(done) {
        //uncomment below and update the code to test discoveryengineProjectsLocationsCollectionsDataStoresSiteSearchEngineBatchVerifyTargetSites
        //instance.discoveryengineProjectsLocationsCollectionsDataStoresSiteSearchEngineBatchVerifyTargetSites(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('discoveryengineProjectsLocationsCollectionsDataStoresSiteSearchEngineFetchDomainVerificationStatus', function() {
      it('should call discoveryengineProjectsLocationsCollectionsDataStoresSiteSearchEngineFetchDomainVerificationStatus successfully', function(done) {
        //uncomment below and update the code to test discoveryengineProjectsLocationsCollectionsDataStoresSiteSearchEngineFetchDomainVerificationStatus
        //instance.discoveryengineProjectsLocationsCollectionsDataStoresSiteSearchEngineFetchDomainVerificationStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('discoveryengineProjectsLocationsCollectionsDataStoresTrainCustomModel', function() {
      it('should call discoveryengineProjectsLocationsCollectionsDataStoresTrainCustomModel successfully', function(done) {
        //uncomment below and update the code to test discoveryengineProjectsLocationsCollectionsDataStoresTrainCustomModel
        //instance.discoveryengineProjectsLocationsCollectionsDataStoresTrainCustomModel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('discoveryengineProjectsLocationsCollectionsEnginesCreate', function() {
      it('should call discoveryengineProjectsLocationsCollectionsEnginesCreate successfully', function(done) {
        //uncomment below and update the code to test discoveryengineProjectsLocationsCollectionsEnginesCreate
        //instance.discoveryengineProjectsLocationsCollectionsEnginesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('discoveryengineProjectsLocationsCollectionsEnginesList', function() {
      it('should call discoveryengineProjectsLocationsCollectionsEnginesList successfully', function(done) {
        //uncomment below and update the code to test discoveryengineProjectsLocationsCollectionsEnginesList
        //instance.discoveryengineProjectsLocationsCollectionsEnginesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('discoveryengineProjectsLocationsCollectionsEnginesPause', function() {
      it('should call discoveryengineProjectsLocationsCollectionsEnginesPause successfully', function(done) {
        //uncomment below and update the code to test discoveryengineProjectsLocationsCollectionsEnginesPause
        //instance.discoveryengineProjectsLocationsCollectionsEnginesPause(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('discoveryengineProjectsLocationsCollectionsEnginesResume', function() {
      it('should call discoveryengineProjectsLocationsCollectionsEnginesResume successfully', function(done) {
        //uncomment below and update the code to test discoveryengineProjectsLocationsCollectionsEnginesResume
        //instance.discoveryengineProjectsLocationsCollectionsEnginesResume(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('discoveryengineProjectsLocationsCollectionsEnginesTune', function() {
      it('should call discoveryengineProjectsLocationsCollectionsEnginesTune successfully', function(done) {
        //uncomment below and update the code to test discoveryengineProjectsLocationsCollectionsEnginesTune
        //instance.discoveryengineProjectsLocationsCollectionsEnginesTune(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('discoveryengineProjectsLocationsDataStoresBranchesDocumentsCreate', function() {
      it('should call discoveryengineProjectsLocationsDataStoresBranchesDocumentsCreate successfully', function(done) {
        //uncomment below and update the code to test discoveryengineProjectsLocationsDataStoresBranchesDocumentsCreate
        //instance.discoveryengineProjectsLocationsDataStoresBranchesDocumentsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('discoveryengineProjectsLocationsDataStoresBranchesDocumentsImport', function() {
      it('should call discoveryengineProjectsLocationsDataStoresBranchesDocumentsImport successfully', function(done) {
        //uncomment below and update the code to test discoveryengineProjectsLocationsDataStoresBranchesDocumentsImport
        //instance.discoveryengineProjectsLocationsDataStoresBranchesDocumentsImport(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('discoveryengineProjectsLocationsDataStoresBranchesDocumentsList', function() {
      it('should call discoveryengineProjectsLocationsDataStoresBranchesDocumentsList successfully', function(done) {
        //uncomment below and update the code to test discoveryengineProjectsLocationsDataStoresBranchesDocumentsList
        //instance.discoveryengineProjectsLocationsDataStoresBranchesDocumentsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('discoveryengineProjectsLocationsDataStoresBranchesDocumentsPurge', function() {
      it('should call discoveryengineProjectsLocationsDataStoresBranchesDocumentsPurge successfully', function(done) {
        //uncomment below and update the code to test discoveryengineProjectsLocationsDataStoresBranchesDocumentsPurge
        //instance.discoveryengineProjectsLocationsDataStoresBranchesDocumentsPurge(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('discoveryengineProjectsLocationsDataStoresCompleteQuery', function() {
      it('should call discoveryengineProjectsLocationsDataStoresCompleteQuery successfully', function(done) {
        //uncomment below and update the code to test discoveryengineProjectsLocationsDataStoresCompleteQuery
        //instance.discoveryengineProjectsLocationsDataStoresCompleteQuery(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('discoveryengineProjectsLocationsDataStoresConversationsConverse', function() {
      it('should call discoveryengineProjectsLocationsDataStoresConversationsConverse successfully', function(done) {
        //uncomment below and update the code to test discoveryengineProjectsLocationsDataStoresConversationsConverse
        //instance.discoveryengineProjectsLocationsDataStoresConversationsConverse(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('discoveryengineProjectsLocationsDataStoresConversationsCreate', function() {
      it('should call discoveryengineProjectsLocationsDataStoresConversationsCreate successfully', function(done) {
        //uncomment below and update the code to test discoveryengineProjectsLocationsDataStoresConversationsCreate
        //instance.discoveryengineProjectsLocationsDataStoresConversationsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('discoveryengineProjectsLocationsDataStoresConversationsList', function() {
      it('should call discoveryengineProjectsLocationsDataStoresConversationsList successfully', function(done) {
        //uncomment below and update the code to test discoveryengineProjectsLocationsDataStoresConversationsList
        //instance.discoveryengineProjectsLocationsDataStoresConversationsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('discoveryengineProjectsLocationsDataStoresCreate', function() {
      it('should call discoveryengineProjectsLocationsDataStoresCreate successfully', function(done) {
        //uncomment below and update the code to test discoveryengineProjectsLocationsDataStoresCreate
        //instance.discoveryengineProjectsLocationsDataStoresCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('discoveryengineProjectsLocationsDataStoresList', function() {
      it('should call discoveryengineProjectsLocationsDataStoresList successfully', function(done) {
        //uncomment below and update the code to test discoveryengineProjectsLocationsDataStoresList
        //instance.discoveryengineProjectsLocationsDataStoresList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('discoveryengineProjectsLocationsDataStoresSchemasCreate', function() {
      it('should call discoveryengineProjectsLocationsDataStoresSchemasCreate successfully', function(done) {
        //uncomment below and update the code to test discoveryengineProjectsLocationsDataStoresSchemasCreate
        //instance.discoveryengineProjectsLocationsDataStoresSchemasCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('discoveryengineProjectsLocationsDataStoresSchemasList', function() {
      it('should call discoveryengineProjectsLocationsDataStoresSchemasList successfully', function(done) {
        //uncomment below and update the code to test discoveryengineProjectsLocationsDataStoresSchemasList
        //instance.discoveryengineProjectsLocationsDataStoresSchemasList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('discoveryengineProjectsLocationsDataStoresServingConfigsList', function() {
      it('should call discoveryengineProjectsLocationsDataStoresServingConfigsList successfully', function(done) {
        //uncomment below and update the code to test discoveryengineProjectsLocationsDataStoresServingConfigsList
        //instance.discoveryengineProjectsLocationsDataStoresServingConfigsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('discoveryengineProjectsLocationsDataStoresServingConfigsRecommend', function() {
      it('should call discoveryengineProjectsLocationsDataStoresServingConfigsRecommend successfully', function(done) {
        //uncomment below and update the code to test discoveryengineProjectsLocationsDataStoresServingConfigsRecommend
        //instance.discoveryengineProjectsLocationsDataStoresServingConfigsRecommend(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('discoveryengineProjectsLocationsDataStoresServingConfigsSearch', function() {
      it('should call discoveryengineProjectsLocationsDataStoresServingConfigsSearch successfully', function(done) {
        //uncomment below and update the code to test discoveryengineProjectsLocationsDataStoresServingConfigsSearch
        //instance.discoveryengineProjectsLocationsDataStoresServingConfigsSearch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('discoveryengineProjectsLocationsDataStoresSiteSearchEngineDisableAdvancedSiteSearch', function() {
      it('should call discoveryengineProjectsLocationsDataStoresSiteSearchEngineDisableAdvancedSiteSearch successfully', function(done) {
        //uncomment below and update the code to test discoveryengineProjectsLocationsDataStoresSiteSearchEngineDisableAdvancedSiteSearch
        //instance.discoveryengineProjectsLocationsDataStoresSiteSearchEngineDisableAdvancedSiteSearch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('discoveryengineProjectsLocationsDataStoresSiteSearchEngineEnableAdvancedSiteSearch', function() {
      it('should call discoveryengineProjectsLocationsDataStoresSiteSearchEngineEnableAdvancedSiteSearch successfully', function(done) {
        //uncomment below and update the code to test discoveryengineProjectsLocationsDataStoresSiteSearchEngineEnableAdvancedSiteSearch
        //instance.discoveryengineProjectsLocationsDataStoresSiteSearchEngineEnableAdvancedSiteSearch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('discoveryengineProjectsLocationsDataStoresSiteSearchEngineRecrawlUris', function() {
      it('should call discoveryengineProjectsLocationsDataStoresSiteSearchEngineRecrawlUris successfully', function(done) {
        //uncomment below and update the code to test discoveryengineProjectsLocationsDataStoresSiteSearchEngineRecrawlUris
        //instance.discoveryengineProjectsLocationsDataStoresSiteSearchEngineRecrawlUris(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('discoveryengineProjectsLocationsDataStoresSiteSearchEngineTargetSitesBatchCreate', function() {
      it('should call discoveryengineProjectsLocationsDataStoresSiteSearchEngineTargetSitesBatchCreate successfully', function(done) {
        //uncomment below and update the code to test discoveryengineProjectsLocationsDataStoresSiteSearchEngineTargetSitesBatchCreate
        //instance.discoveryengineProjectsLocationsDataStoresSiteSearchEngineTargetSitesBatchCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('discoveryengineProjectsLocationsDataStoresSiteSearchEngineTargetSitesCreate', function() {
      it('should call discoveryengineProjectsLocationsDataStoresSiteSearchEngineTargetSitesCreate successfully', function(done) {
        //uncomment below and update the code to test discoveryengineProjectsLocationsDataStoresSiteSearchEngineTargetSitesCreate
        //instance.discoveryengineProjectsLocationsDataStoresSiteSearchEngineTargetSitesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('discoveryengineProjectsLocationsDataStoresSiteSearchEngineTargetSitesDelete', function() {
      it('should call discoveryengineProjectsLocationsDataStoresSiteSearchEngineTargetSitesDelete successfully', function(done) {
        //uncomment below and update the code to test discoveryengineProjectsLocationsDataStoresSiteSearchEngineTargetSitesDelete
        //instance.discoveryengineProjectsLocationsDataStoresSiteSearchEngineTargetSitesDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('discoveryengineProjectsLocationsDataStoresSiteSearchEngineTargetSitesList', function() {
      it('should call discoveryengineProjectsLocationsDataStoresSiteSearchEngineTargetSitesList successfully', function(done) {
        //uncomment below and update the code to test discoveryengineProjectsLocationsDataStoresSiteSearchEngineTargetSitesList
        //instance.discoveryengineProjectsLocationsDataStoresSiteSearchEngineTargetSitesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('discoveryengineProjectsLocationsDataStoresSiteSearchEngineTargetSitesPatch', function() {
      it('should call discoveryengineProjectsLocationsDataStoresSiteSearchEngineTargetSitesPatch successfully', function(done) {
        //uncomment below and update the code to test discoveryengineProjectsLocationsDataStoresSiteSearchEngineTargetSitesPatch
        //instance.discoveryengineProjectsLocationsDataStoresSiteSearchEngineTargetSitesPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('discoveryengineProjectsLocationsDataStoresSuggestionDenyListEntriesImport', function() {
      it('should call discoveryengineProjectsLocationsDataStoresSuggestionDenyListEntriesImport successfully', function(done) {
        //uncomment below and update the code to test discoveryengineProjectsLocationsDataStoresSuggestionDenyListEntriesImport
        //instance.discoveryengineProjectsLocationsDataStoresSuggestionDenyListEntriesImport(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('discoveryengineProjectsLocationsDataStoresSuggestionDenyListEntriesPurge', function() {
      it('should call discoveryengineProjectsLocationsDataStoresSuggestionDenyListEntriesPurge successfully', function(done) {
        //uncomment below and update the code to test discoveryengineProjectsLocationsDataStoresSuggestionDenyListEntriesPurge
        //instance.discoveryengineProjectsLocationsDataStoresSuggestionDenyListEntriesPurge(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('discoveryengineProjectsLocationsDataStoresUserEventsCollect', function() {
      it('should call discoveryengineProjectsLocationsDataStoresUserEventsCollect successfully', function(done) {
        //uncomment below and update the code to test discoveryengineProjectsLocationsDataStoresUserEventsCollect
        //instance.discoveryengineProjectsLocationsDataStoresUserEventsCollect(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('discoveryengineProjectsLocationsDataStoresUserEventsImport', function() {
      it('should call discoveryengineProjectsLocationsDataStoresUserEventsImport successfully', function(done) {
        //uncomment below and update the code to test discoveryengineProjectsLocationsDataStoresUserEventsImport
        //instance.discoveryengineProjectsLocationsDataStoresUserEventsImport(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('discoveryengineProjectsLocationsDataStoresUserEventsPurge', function() {
      it('should call discoveryengineProjectsLocationsDataStoresUserEventsPurge successfully', function(done) {
        //uncomment below and update the code to test discoveryengineProjectsLocationsDataStoresUserEventsPurge
        //instance.discoveryengineProjectsLocationsDataStoresUserEventsPurge(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('discoveryengineProjectsLocationsDataStoresUserEventsWrite', function() {
      it('should call discoveryengineProjectsLocationsDataStoresUserEventsWrite successfully', function(done) {
        //uncomment below and update the code to test discoveryengineProjectsLocationsDataStoresUserEventsWrite
        //instance.discoveryengineProjectsLocationsDataStoresUserEventsWrite(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('discoveryengineProjectsLocationsEstimateDataSize', function() {
      it('should call discoveryengineProjectsLocationsEstimateDataSize successfully', function(done) {
        //uncomment below and update the code to test discoveryengineProjectsLocationsEstimateDataSize
        //instance.discoveryengineProjectsLocationsEstimateDataSize(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('discoveryengineProjectsOperationsGet', function() {
      it('should call discoveryengineProjectsOperationsGet successfully', function(done) {
        //uncomment below and update the code to test discoveryengineProjectsOperationsGet
        //instance.discoveryengineProjectsOperationsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('discoveryengineProjectsOperationsList', function() {
      it('should call discoveryengineProjectsOperationsList successfully', function(done) {
        //uncomment below and update the code to test discoveryengineProjectsOperationsList
        //instance.discoveryengineProjectsOperationsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
