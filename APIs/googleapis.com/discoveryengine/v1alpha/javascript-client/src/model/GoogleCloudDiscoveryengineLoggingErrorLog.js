/**
 * Discovery Engine API
 * Discovery Engine API.
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudDiscoveryengineLoggingErrorContext from './GoogleCloudDiscoveryengineLoggingErrorContext';
import GoogleCloudDiscoveryengineLoggingImportErrorContext from './GoogleCloudDiscoveryengineLoggingImportErrorContext';
import GoogleCloudDiscoveryengineLoggingServiceContext from './GoogleCloudDiscoveryengineLoggingServiceContext';
import GoogleRpcStatus from './GoogleRpcStatus';

/**
 * The GoogleCloudDiscoveryengineLoggingErrorLog model module.
 * @module model/GoogleCloudDiscoveryengineLoggingErrorLog
 * @version v1alpha
 */
class GoogleCloudDiscoveryengineLoggingErrorLog {
    /**
     * Constructs a new <code>GoogleCloudDiscoveryengineLoggingErrorLog</code>.
     * An error log which is reported to the Error Reporting system.
     * @alias module:model/GoogleCloudDiscoveryengineLoggingErrorLog
     */
    constructor() { 
        
        GoogleCloudDiscoveryengineLoggingErrorLog.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDiscoveryengineLoggingErrorLog</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDiscoveryengineLoggingErrorLog} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDiscoveryengineLoggingErrorLog} The populated <code>GoogleCloudDiscoveryengineLoggingErrorLog</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDiscoveryengineLoggingErrorLog();

            if (data.hasOwnProperty('context')) {
                obj['context'] = GoogleCloudDiscoveryengineLoggingErrorContext.constructFromObject(data['context']);
            }
            if (data.hasOwnProperty('importPayload')) {
                obj['importPayload'] = GoogleCloudDiscoveryengineLoggingImportErrorContext.constructFromObject(data['importPayload']);
            }
            if (data.hasOwnProperty('message')) {
                obj['message'] = ApiClient.convertToType(data['message'], 'String');
            }
            if (data.hasOwnProperty('requestPayload')) {
                obj['requestPayload'] = ApiClient.convertToType(data['requestPayload'], {'String': Object});
            }
            if (data.hasOwnProperty('responsePayload')) {
                obj['responsePayload'] = ApiClient.convertToType(data['responsePayload'], {'String': Object});
            }
            if (data.hasOwnProperty('serviceContext')) {
                obj['serviceContext'] = GoogleCloudDiscoveryengineLoggingServiceContext.constructFromObject(data['serviceContext']);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = GoogleRpcStatus.constructFromObject(data['status']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDiscoveryengineLoggingErrorLog</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDiscoveryengineLoggingErrorLog</code>.
     */
    static validateJSON(data) {
        // validate the optional field `context`
        if (data['context']) { // data not null
          GoogleCloudDiscoveryengineLoggingErrorContext.validateJSON(data['context']);
        }
        // validate the optional field `importPayload`
        if (data['importPayload']) { // data not null
          GoogleCloudDiscoveryengineLoggingImportErrorContext.validateJSON(data['importPayload']);
        }
        // ensure the json data is a string
        if (data['message'] && !(typeof data['message'] === 'string' || data['message'] instanceof String)) {
            throw new Error("Expected the field `message` to be a primitive type in the JSON string but got " + data['message']);
        }
        // validate the optional field `serviceContext`
        if (data['serviceContext']) { // data not null
          GoogleCloudDiscoveryengineLoggingServiceContext.validateJSON(data['serviceContext']);
        }
        // validate the optional field `status`
        if (data['status']) { // data not null
          GoogleRpcStatus.validateJSON(data['status']);
        }

        return true;
    }


}



/**
 * @member {module:model/GoogleCloudDiscoveryengineLoggingErrorContext} context
 */
GoogleCloudDiscoveryengineLoggingErrorLog.prototype['context'] = undefined;

/**
 * @member {module:model/GoogleCloudDiscoveryengineLoggingImportErrorContext} importPayload
 */
GoogleCloudDiscoveryengineLoggingErrorLog.prototype['importPayload'] = undefined;

/**
 * A message describing the error.
 * @member {String} message
 */
GoogleCloudDiscoveryengineLoggingErrorLog.prototype['message'] = undefined;

/**
 * The API request payload, represented as a protocol buffer. Most API request types are supportedâ€”for example: * `type.googleapis.com/google.cloud.discoveryengine.v1alpha.DocumentService.CreateDocumentRequest` * `type.googleapis.com/google.cloud.discoveryengine.v1alpha.UserEventService.WriteUserEventRequest`
 * @member {Object.<String, Object>} requestPayload
 */
GoogleCloudDiscoveryengineLoggingErrorLog.prototype['requestPayload'] = undefined;

/**
 * The API response payload, represented as a protocol buffer. This is used to log some \"soft errors\", where the response is valid but we consider there are some quality issues like unjoined events. The following API responses are supported, and no PII is included: * `google.cloud.discoveryengine.v1alpha.RecommendationService.Recommend` * `google.cloud.discoveryengine.v1alpha.UserEventService.WriteUserEvent` * `google.cloud.discoveryengine.v1alpha.UserEventService.CollectUserEvent`
 * @member {Object.<String, Object>} responsePayload
 */
GoogleCloudDiscoveryengineLoggingErrorLog.prototype['responsePayload'] = undefined;

/**
 * @member {module:model/GoogleCloudDiscoveryengineLoggingServiceContext} serviceContext
 */
GoogleCloudDiscoveryengineLoggingErrorLog.prototype['serviceContext'] = undefined;

/**
 * @member {module:model/GoogleRpcStatus} status
 */
GoogleCloudDiscoveryengineLoggingErrorLog.prototype['status'] = undefined;






export default GoogleCloudDiscoveryengineLoggingErrorLog;

