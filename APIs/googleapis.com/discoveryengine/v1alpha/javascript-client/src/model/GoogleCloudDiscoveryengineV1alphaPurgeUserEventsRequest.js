/**
 * Discovery Engine API
 * Discovery Engine API.
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudDiscoveryengineV1alphaPurgeUserEventsRequest model module.
 * @module model/GoogleCloudDiscoveryengineV1alphaPurgeUserEventsRequest
 * @version v1alpha
 */
class GoogleCloudDiscoveryengineV1alphaPurgeUserEventsRequest {
    /**
     * Constructs a new <code>GoogleCloudDiscoveryengineV1alphaPurgeUserEventsRequest</code>.
     * Request message for PurgeUserEvents method.
     * @alias module:model/GoogleCloudDiscoveryengineV1alphaPurgeUserEventsRequest
     */
    constructor() { 
        
        GoogleCloudDiscoveryengineV1alphaPurgeUserEventsRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDiscoveryengineV1alphaPurgeUserEventsRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDiscoveryengineV1alphaPurgeUserEventsRequest} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDiscoveryengineV1alphaPurgeUserEventsRequest} The populated <code>GoogleCloudDiscoveryengineV1alphaPurgeUserEventsRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDiscoveryengineV1alphaPurgeUserEventsRequest();

            if (data.hasOwnProperty('filter')) {
                obj['filter'] = ApiClient.convertToType(data['filter'], 'String');
            }
            if (data.hasOwnProperty('force')) {
                obj['force'] = ApiClient.convertToType(data['force'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDiscoveryengineV1alphaPurgeUserEventsRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDiscoveryengineV1alphaPurgeUserEventsRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['filter'] && !(typeof data['filter'] === 'string' || data['filter'] instanceof String)) {
            throw new Error("Expected the field `filter` to be a primitive type in the JSON string but got " + data['filter']);
        }

        return true;
    }


}



/**
 * Required. The filter string to specify the events to be deleted with a length limit of 5,000 characters. The eligible fields for filtering are: * `eventType`: Double quoted UserEvent.event_type string. * `eventTime`: in ISO 8601 \"zulu\" format. * `userPseudoId`: Double quoted string. Specifying this will delete all events associated with a visitor. * `userId`: Double quoted string. Specifying this will delete all events associated with a user. Examples: * Deleting all events in a time range: `eventTime > \"2012-04-23T18:25:43.511Z\" eventTime < \"2012-04-23T18:30:43.511Z\"` * Deleting specific eventType: `eventType = \"search\"` * Deleting all events for a specific visitor: `userPseudoId = \"visitor1024\"` * Deleting all events inside a DataStore: `*` The filtering fields are assumed to have an implicit AND.
 * @member {String} filter
 */
GoogleCloudDiscoveryengineV1alphaPurgeUserEventsRequest.prototype['filter'] = undefined;

/**
 * The `force` field is currently not supported. Purge user event requests will permanently delete all purgeable events. Once the development is complete: If `force` is set to false, the method will return the expected purge count without deleting any user events. This field will default to false if not included in the request.
 * @member {Boolean} force
 */
GoogleCloudDiscoveryengineV1alphaPurgeUserEventsRequest.prototype['force'] = undefined;






export default GoogleCloudDiscoveryengineV1alphaPurgeUserEventsRequest;

