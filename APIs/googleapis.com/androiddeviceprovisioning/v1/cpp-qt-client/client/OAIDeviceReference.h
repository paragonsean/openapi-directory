/**
 * Android Device Provisioning Partner API
 * Automates Android zero-touch enrollment for device resellers, customers, and EMMs.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDeviceReference.h
 *
 * A &#x60;DeviceReference&#x60; is an API abstraction that lets you supply a _device_ argument to a method using one of the following identifier types: * A numeric API resource ID. * Real-world hardware IDs, such as IMEI number, belonging to the manufactured device. Methods that operate on devices take a &#x60;DeviceReference&#x60; as a parameter type because it&#39;s more flexible for the caller. To learn more about device identifiers, read [Identifiers](https://developers.google.com/zero-touch/guides/identifiers).
 */

#ifndef OAIDeviceReference_H
#define OAIDeviceReference_H

#include <QJsonObject>

#include "OAIDeviceIdentifier.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDeviceIdentifier;

class OAIDeviceReference : public OAIObject {
public:
    OAIDeviceReference();
    OAIDeviceReference(QString json);
    ~OAIDeviceReference() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDeviceId() const;
    void setDeviceId(const QString &device_id);
    bool is_device_id_Set() const;
    bool is_device_id_Valid() const;

    OAIDeviceIdentifier getDeviceIdentifier() const;
    void setDeviceIdentifier(const OAIDeviceIdentifier &device_identifier);
    bool is_device_identifier_Set() const;
    bool is_device_identifier_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_device_id;
    bool m_device_id_isSet;
    bool m_device_id_isValid;

    OAIDeviceIdentifier m_device_identifier;
    bool m_device_identifier_isSet;
    bool m_device_identifier_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDeviceReference)

#endif // OAIDeviceReference_H
