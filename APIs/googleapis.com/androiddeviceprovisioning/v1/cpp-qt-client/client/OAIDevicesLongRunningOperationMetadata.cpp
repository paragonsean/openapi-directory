/**
 * Android Device Provisioning Partner API
 * Automates Android zero-touch enrollment for device resellers, customers, and EMMs.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDevicesLongRunningOperationMetadata.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDevicesLongRunningOperationMetadata::OAIDevicesLongRunningOperationMetadata(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDevicesLongRunningOperationMetadata::OAIDevicesLongRunningOperationMetadata() {
    this->initializeModel();
}

OAIDevicesLongRunningOperationMetadata::~OAIDevicesLongRunningOperationMetadata() {}

void OAIDevicesLongRunningOperationMetadata::initializeModel() {

    m_devices_count_isSet = false;
    m_devices_count_isValid = false;

    m_processing_status_isSet = false;
    m_processing_status_isValid = false;

    m_progress_isSet = false;
    m_progress_isValid = false;
}

void OAIDevicesLongRunningOperationMetadata::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDevicesLongRunningOperationMetadata::fromJsonObject(QJsonObject json) {

    m_devices_count_isValid = ::OpenAPI::fromJsonValue(m_devices_count, json[QString("devicesCount")]);
    m_devices_count_isSet = !json[QString("devicesCount")].isNull() && m_devices_count_isValid;

    m_processing_status_isValid = ::OpenAPI::fromJsonValue(m_processing_status, json[QString("processingStatus")]);
    m_processing_status_isSet = !json[QString("processingStatus")].isNull() && m_processing_status_isValid;

    m_progress_isValid = ::OpenAPI::fromJsonValue(m_progress, json[QString("progress")]);
    m_progress_isSet = !json[QString("progress")].isNull() && m_progress_isValid;
}

QString OAIDevicesLongRunningOperationMetadata::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDevicesLongRunningOperationMetadata::asJsonObject() const {
    QJsonObject obj;
    if (m_devices_count_isSet) {
        obj.insert(QString("devicesCount"), ::OpenAPI::toJsonValue(m_devices_count));
    }
    if (m_processing_status_isSet) {
        obj.insert(QString("processingStatus"), ::OpenAPI::toJsonValue(m_processing_status));
    }
    if (m_progress_isSet) {
        obj.insert(QString("progress"), ::OpenAPI::toJsonValue(m_progress));
    }
    return obj;
}

qint32 OAIDevicesLongRunningOperationMetadata::getDevicesCount() const {
    return m_devices_count;
}
void OAIDevicesLongRunningOperationMetadata::setDevicesCount(const qint32 &devices_count) {
    m_devices_count = devices_count;
    m_devices_count_isSet = true;
}

bool OAIDevicesLongRunningOperationMetadata::is_devices_count_Set() const{
    return m_devices_count_isSet;
}

bool OAIDevicesLongRunningOperationMetadata::is_devices_count_Valid() const{
    return m_devices_count_isValid;
}

QString OAIDevicesLongRunningOperationMetadata::getProcessingStatus() const {
    return m_processing_status;
}
void OAIDevicesLongRunningOperationMetadata::setProcessingStatus(const QString &processing_status) {
    m_processing_status = processing_status;
    m_processing_status_isSet = true;
}

bool OAIDevicesLongRunningOperationMetadata::is_processing_status_Set() const{
    return m_processing_status_isSet;
}

bool OAIDevicesLongRunningOperationMetadata::is_processing_status_Valid() const{
    return m_processing_status_isValid;
}

qint32 OAIDevicesLongRunningOperationMetadata::getProgress() const {
    return m_progress;
}
void OAIDevicesLongRunningOperationMetadata::setProgress(const qint32 &progress) {
    m_progress = progress;
    m_progress_isSet = true;
}

bool OAIDevicesLongRunningOperationMetadata::is_progress_Set() const{
    return m_progress_isSet;
}

bool OAIDevicesLongRunningOperationMetadata::is_progress_Valid() const{
    return m_progress_isValid;
}

bool OAIDevicesLongRunningOperationMetadata::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_devices_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_processing_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_progress_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDevicesLongRunningOperationMetadata::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
