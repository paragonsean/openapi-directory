/**
 * Android Device Provisioning Partner API
 * Automates Android zero-touch enrollment for device resellers, customers, and EMMs.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDeviceClaim.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDeviceClaim::OAIDeviceClaim(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDeviceClaim::OAIDeviceClaim() {
    this->initializeModel();
}

OAIDeviceClaim::~OAIDeviceClaim() {}

void OAIDeviceClaim::initializeModel() {

    m_additional_service_isSet = false;
    m_additional_service_isValid = false;

    m_google_workspace_customer_id_isSet = false;
    m_google_workspace_customer_id_isValid = false;

    m_owner_company_id_isSet = false;
    m_owner_company_id_isValid = false;

    m_reseller_id_isSet = false;
    m_reseller_id_isValid = false;

    m_section_type_isSet = false;
    m_section_type_isValid = false;

    m_vacation_mode_expire_time_isSet = false;
    m_vacation_mode_expire_time_isValid = false;

    m_vacation_mode_start_time_isSet = false;
    m_vacation_mode_start_time_isValid = false;
}

void OAIDeviceClaim::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDeviceClaim::fromJsonObject(QJsonObject json) {

    m_additional_service_isValid = ::OpenAPI::fromJsonValue(m_additional_service, json[QString("additionalService")]);
    m_additional_service_isSet = !json[QString("additionalService")].isNull() && m_additional_service_isValid;

    m_google_workspace_customer_id_isValid = ::OpenAPI::fromJsonValue(m_google_workspace_customer_id, json[QString("googleWorkspaceCustomerId")]);
    m_google_workspace_customer_id_isSet = !json[QString("googleWorkspaceCustomerId")].isNull() && m_google_workspace_customer_id_isValid;

    m_owner_company_id_isValid = ::OpenAPI::fromJsonValue(m_owner_company_id, json[QString("ownerCompanyId")]);
    m_owner_company_id_isSet = !json[QString("ownerCompanyId")].isNull() && m_owner_company_id_isValid;

    m_reseller_id_isValid = ::OpenAPI::fromJsonValue(m_reseller_id, json[QString("resellerId")]);
    m_reseller_id_isSet = !json[QString("resellerId")].isNull() && m_reseller_id_isValid;

    m_section_type_isValid = ::OpenAPI::fromJsonValue(m_section_type, json[QString("sectionType")]);
    m_section_type_isSet = !json[QString("sectionType")].isNull() && m_section_type_isValid;

    m_vacation_mode_expire_time_isValid = ::OpenAPI::fromJsonValue(m_vacation_mode_expire_time, json[QString("vacationModeExpireTime")]);
    m_vacation_mode_expire_time_isSet = !json[QString("vacationModeExpireTime")].isNull() && m_vacation_mode_expire_time_isValid;

    m_vacation_mode_start_time_isValid = ::OpenAPI::fromJsonValue(m_vacation_mode_start_time, json[QString("vacationModeStartTime")]);
    m_vacation_mode_start_time_isSet = !json[QString("vacationModeStartTime")].isNull() && m_vacation_mode_start_time_isValid;
}

QString OAIDeviceClaim::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDeviceClaim::asJsonObject() const {
    QJsonObject obj;
    if (m_additional_service_isSet) {
        obj.insert(QString("additionalService"), ::OpenAPI::toJsonValue(m_additional_service));
    }
    if (m_google_workspace_customer_id_isSet) {
        obj.insert(QString("googleWorkspaceCustomerId"), ::OpenAPI::toJsonValue(m_google_workspace_customer_id));
    }
    if (m_owner_company_id_isSet) {
        obj.insert(QString("ownerCompanyId"), ::OpenAPI::toJsonValue(m_owner_company_id));
    }
    if (m_reseller_id_isSet) {
        obj.insert(QString("resellerId"), ::OpenAPI::toJsonValue(m_reseller_id));
    }
    if (m_section_type_isSet) {
        obj.insert(QString("sectionType"), ::OpenAPI::toJsonValue(m_section_type));
    }
    if (m_vacation_mode_expire_time_isSet) {
        obj.insert(QString("vacationModeExpireTime"), ::OpenAPI::toJsonValue(m_vacation_mode_expire_time));
    }
    if (m_vacation_mode_start_time_isSet) {
        obj.insert(QString("vacationModeStartTime"), ::OpenAPI::toJsonValue(m_vacation_mode_start_time));
    }
    return obj;
}

QString OAIDeviceClaim::getAdditionalService() const {
    return m_additional_service;
}
void OAIDeviceClaim::setAdditionalService(const QString &additional_service) {
    m_additional_service = additional_service;
    m_additional_service_isSet = true;
}

bool OAIDeviceClaim::is_additional_service_Set() const{
    return m_additional_service_isSet;
}

bool OAIDeviceClaim::is_additional_service_Valid() const{
    return m_additional_service_isValid;
}

QString OAIDeviceClaim::getGoogleWorkspaceCustomerId() const {
    return m_google_workspace_customer_id;
}
void OAIDeviceClaim::setGoogleWorkspaceCustomerId(const QString &google_workspace_customer_id) {
    m_google_workspace_customer_id = google_workspace_customer_id;
    m_google_workspace_customer_id_isSet = true;
}

bool OAIDeviceClaim::is_google_workspace_customer_id_Set() const{
    return m_google_workspace_customer_id_isSet;
}

bool OAIDeviceClaim::is_google_workspace_customer_id_Valid() const{
    return m_google_workspace_customer_id_isValid;
}

QString OAIDeviceClaim::getOwnerCompanyId() const {
    return m_owner_company_id;
}
void OAIDeviceClaim::setOwnerCompanyId(const QString &owner_company_id) {
    m_owner_company_id = owner_company_id;
    m_owner_company_id_isSet = true;
}

bool OAIDeviceClaim::is_owner_company_id_Set() const{
    return m_owner_company_id_isSet;
}

bool OAIDeviceClaim::is_owner_company_id_Valid() const{
    return m_owner_company_id_isValid;
}

QString OAIDeviceClaim::getResellerId() const {
    return m_reseller_id;
}
void OAIDeviceClaim::setResellerId(const QString &reseller_id) {
    m_reseller_id = reseller_id;
    m_reseller_id_isSet = true;
}

bool OAIDeviceClaim::is_reseller_id_Set() const{
    return m_reseller_id_isSet;
}

bool OAIDeviceClaim::is_reseller_id_Valid() const{
    return m_reseller_id_isValid;
}

QString OAIDeviceClaim::getSectionType() const {
    return m_section_type;
}
void OAIDeviceClaim::setSectionType(const QString &section_type) {
    m_section_type = section_type;
    m_section_type_isSet = true;
}

bool OAIDeviceClaim::is_section_type_Set() const{
    return m_section_type_isSet;
}

bool OAIDeviceClaim::is_section_type_Valid() const{
    return m_section_type_isValid;
}

QString OAIDeviceClaim::getVacationModeExpireTime() const {
    return m_vacation_mode_expire_time;
}
void OAIDeviceClaim::setVacationModeExpireTime(const QString &vacation_mode_expire_time) {
    m_vacation_mode_expire_time = vacation_mode_expire_time;
    m_vacation_mode_expire_time_isSet = true;
}

bool OAIDeviceClaim::is_vacation_mode_expire_time_Set() const{
    return m_vacation_mode_expire_time_isSet;
}

bool OAIDeviceClaim::is_vacation_mode_expire_time_Valid() const{
    return m_vacation_mode_expire_time_isValid;
}

QString OAIDeviceClaim::getVacationModeStartTime() const {
    return m_vacation_mode_start_time;
}
void OAIDeviceClaim::setVacationModeStartTime(const QString &vacation_mode_start_time) {
    m_vacation_mode_start_time = vacation_mode_start_time;
    m_vacation_mode_start_time_isSet = true;
}

bool OAIDeviceClaim::is_vacation_mode_start_time_Set() const{
    return m_vacation_mode_start_time_isSet;
}

bool OAIDeviceClaim::is_vacation_mode_start_time_Valid() const{
    return m_vacation_mode_start_time_isValid;
}

bool OAIDeviceClaim::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_additional_service_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_google_workspace_customer_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_owner_company_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reseller_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_section_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_vacation_mode_expire_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_vacation_mode_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDeviceClaim::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
