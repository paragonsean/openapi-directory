# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Dpc(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dpc_name: str=None, name: str=None, package_name: str=None):
        """Dpc - a model defined in OpenAPI

        :param dpc_name: The dpc_name of this Dpc.
        :param name: The name of this Dpc.
        :param package_name: The package_name of this Dpc.
        """
        self.openapi_types = {
            'dpc_name': str,
            'name': str,
            'package_name': str
        }

        self.attribute_map = {
            'dpc_name': 'dpcName',
            'name': 'name',
            'package_name': 'packageName'
        }

        self._dpc_name = dpc_name
        self._name = name
        self._package_name = package_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Dpc':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Dpc of this Dpc.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dpc_name(self):
        """Gets the dpc_name of this Dpc.

        Output only. The title of the DPC app in Google Play. For example, _Google Apps Device Policy_. Useful in an application's user interface.

        :return: The dpc_name of this Dpc.
        :rtype: str
        """
        return self._dpc_name

    @dpc_name.setter
    def dpc_name(self, dpc_name):
        """Sets the dpc_name of this Dpc.

        Output only. The title of the DPC app in Google Play. For example, _Google Apps Device Policy_. Useful in an application's user interface.

        :param dpc_name: The dpc_name of this Dpc.
        :type dpc_name: str
        """

        self._dpc_name = dpc_name

    @property
    def name(self):
        """Gets the name of this Dpc.

        Output only. The API resource name in the format `customers/[CUSTOMER_ID]/dpcs/[DPC_ID]`. Assigned by the server. To maintain a reference to a DPC across customer accounts, persist and match the last path component (`DPC_ID`).

        :return: The name of this Dpc.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Dpc.

        Output only. The API resource name in the format `customers/[CUSTOMER_ID]/dpcs/[DPC_ID]`. Assigned by the server. To maintain a reference to a DPC across customer accounts, persist and match the last path component (`DPC_ID`).

        :param name: The name of this Dpc.
        :type name: str
        """

        self._name = name

    @property
    def package_name(self):
        """Gets the package_name of this Dpc.

        Output only. The DPC's Android application ID that looks like a Java package name. Zero-touch enrollment installs the DPC app onto a device using this identifier.

        :return: The package_name of this Dpc.
        :rtype: str
        """
        return self._package_name

    @package_name.setter
    def package_name(self, package_name):
        """Sets the package_name of this Dpc.

        Output only. The DPC's Android application ID that looks like a Java package name. Zero-touch enrollment installs the DPC app onto a device using this identifier.

        :param package_name: The package_name of this Dpc.
        :type package_name: str
        """

        self._package_name = package_name
