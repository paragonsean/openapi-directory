# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.device_identifier import DeviceIdentifier
from openapi_server import util


class FindDevicesByDeviceIdentifierRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, device_identifier: DeviceIdentifier=None, limit: str=None, page_token: str=None):
        """FindDevicesByDeviceIdentifierRequest - a model defined in OpenAPI

        :param device_identifier: The device_identifier of this FindDevicesByDeviceIdentifierRequest.
        :param limit: The limit of this FindDevicesByDeviceIdentifierRequest.
        :param page_token: The page_token of this FindDevicesByDeviceIdentifierRequest.
        """
        self.openapi_types = {
            'device_identifier': DeviceIdentifier,
            'limit': str,
            'page_token': str
        }

        self.attribute_map = {
            'device_identifier': 'deviceIdentifier',
            'limit': 'limit',
            'page_token': 'pageToken'
        }

        self._device_identifier = device_identifier
        self._limit = limit
        self._page_token = page_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FindDevicesByDeviceIdentifierRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FindDevicesByDeviceIdentifierRequest of this FindDevicesByDeviceIdentifierRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def device_identifier(self):
        """Gets the device_identifier of this FindDevicesByDeviceIdentifierRequest.


        :return: The device_identifier of this FindDevicesByDeviceIdentifierRequest.
        :rtype: DeviceIdentifier
        """
        return self._device_identifier

    @device_identifier.setter
    def device_identifier(self, device_identifier):
        """Sets the device_identifier of this FindDevicesByDeviceIdentifierRequest.


        :param device_identifier: The device_identifier of this FindDevicesByDeviceIdentifierRequest.
        :type device_identifier: DeviceIdentifier
        """

        self._device_identifier = device_identifier

    @property
    def limit(self):
        """Gets the limit of this FindDevicesByDeviceIdentifierRequest.

        Required. The maximum number of devices to show in a page of results. Must be between 1 and 100 inclusive.

        :return: The limit of this FindDevicesByDeviceIdentifierRequest.
        :rtype: str
        """
        return self._limit

    @limit.setter
    def limit(self, limit):
        """Sets the limit of this FindDevicesByDeviceIdentifierRequest.

        Required. The maximum number of devices to show in a page of results. Must be between 1 and 100 inclusive.

        :param limit: The limit of this FindDevicesByDeviceIdentifierRequest.
        :type limit: str
        """

        self._limit = limit

    @property
    def page_token(self):
        """Gets the page_token of this FindDevicesByDeviceIdentifierRequest.

        A token specifying which result page to return.

        :return: The page_token of this FindDevicesByDeviceIdentifierRequest.
        :rtype: str
        """
        return self._page_token

    @page_token.setter
    def page_token(self, page_token):
        """Sets the page_token of this FindDevicesByDeviceIdentifierRequest.

        A token specifying which result page to return.

        :param page_token: The page_token of this FindDevicesByDeviceIdentifierRequest.
        :type page_token: str
        """

        self._page_token = page_token
