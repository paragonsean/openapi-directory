# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.partner_claim import PartnerClaim
from openapi_server import util


class ClaimDevicesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, claims: List[PartnerClaim]=None):
        """ClaimDevicesRequest - a model defined in OpenAPI

        :param claims: The claims of this ClaimDevicesRequest.
        """
        self.openapi_types = {
            'claims': List[PartnerClaim]
        }

        self.attribute_map = {
            'claims': 'claims'
        }

        self._claims = claims

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ClaimDevicesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ClaimDevicesRequest of this ClaimDevicesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def claims(self):
        """Gets the claims of this ClaimDevicesRequest.

        Required. A list of device claims.

        :return: The claims of this ClaimDevicesRequest.
        :rtype: List[PartnerClaim]
        """
        return self._claims

    @claims.setter
    def claims(self, claims):
        """Sets the claims of this ClaimDevicesRequest.

        Required. A list of device claims.

        :param claims: The claims of this ClaimDevicesRequest.
        :type claims: List[PartnerClaim]
        """

        self._claims = claims
