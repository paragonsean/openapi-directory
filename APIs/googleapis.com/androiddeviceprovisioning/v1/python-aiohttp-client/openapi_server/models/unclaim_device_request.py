# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.device_identifier import DeviceIdentifier
from openapi_server import util


class UnclaimDeviceRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, device_id: str=None, device_identifier: DeviceIdentifier=None, section_type: str=None, vacation_mode_days: int=None, vacation_mode_expire_time: str=None):
        """UnclaimDeviceRequest - a model defined in OpenAPI

        :param device_id: The device_id of this UnclaimDeviceRequest.
        :param device_identifier: The device_identifier of this UnclaimDeviceRequest.
        :param section_type: The section_type of this UnclaimDeviceRequest.
        :param vacation_mode_days: The vacation_mode_days of this UnclaimDeviceRequest.
        :param vacation_mode_expire_time: The vacation_mode_expire_time of this UnclaimDeviceRequest.
        """
        self.openapi_types = {
            'device_id': str,
            'device_identifier': DeviceIdentifier,
            'section_type': str,
            'vacation_mode_days': int,
            'vacation_mode_expire_time': str
        }

        self.attribute_map = {
            'device_id': 'deviceId',
            'device_identifier': 'deviceIdentifier',
            'section_type': 'sectionType',
            'vacation_mode_days': 'vacationModeDays',
            'vacation_mode_expire_time': 'vacationModeExpireTime'
        }

        self._device_id = device_id
        self._device_identifier = device_identifier
        self._section_type = section_type
        self._vacation_mode_days = vacation_mode_days
        self._vacation_mode_expire_time = vacation_mode_expire_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UnclaimDeviceRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UnclaimDeviceRequest of this UnclaimDeviceRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def device_id(self):
        """Gets the device_id of this UnclaimDeviceRequest.

        Required. The device ID returned by `ClaimDevice`.

        :return: The device_id of this UnclaimDeviceRequest.
        :rtype: str
        """
        return self._device_id

    @device_id.setter
    def device_id(self, device_id):
        """Sets the device_id of this UnclaimDeviceRequest.

        Required. The device ID returned by `ClaimDevice`.

        :param device_id: The device_id of this UnclaimDeviceRequest.
        :type device_id: str
        """

        self._device_id = device_id

    @property
    def device_identifier(self):
        """Gets the device_identifier of this UnclaimDeviceRequest.


        :return: The device_identifier of this UnclaimDeviceRequest.
        :rtype: DeviceIdentifier
        """
        return self._device_identifier

    @device_identifier.setter
    def device_identifier(self, device_identifier):
        """Sets the device_identifier of this UnclaimDeviceRequest.


        :param device_identifier: The device_identifier of this UnclaimDeviceRequest.
        :type device_identifier: DeviceIdentifier
        """

        self._device_identifier = device_identifier

    @property
    def section_type(self):
        """Gets the section_type of this UnclaimDeviceRequest.

        Required. The section type of the device's provisioning record.

        :return: The section_type of this UnclaimDeviceRequest.
        :rtype: str
        """
        return self._section_type

    @section_type.setter
    def section_type(self, section_type):
        """Sets the section_type of this UnclaimDeviceRequest.

        Required. The section type of the device's provisioning record.

        :param section_type: The section_type of this UnclaimDeviceRequest.
        :type section_type: str
        """
        allowed_values = ["SECTION_TYPE_UNSPECIFIED", "SECTION_TYPE_SIM_LOCK", "SECTION_TYPE_ZERO_TOUCH"]  # noqa: E501
        if section_type not in allowed_values:
            raise ValueError(
                "Invalid value for `section_type` ({0}), must be one of {1}"
                .format(section_type, allowed_values)
            )

        self._section_type = section_type

    @property
    def vacation_mode_days(self):
        """Gets the vacation_mode_days of this UnclaimDeviceRequest.

        The duration of the vacation unlock starting from when the request is processed. (1 day is treated as 24 hours)

        :return: The vacation_mode_days of this UnclaimDeviceRequest.
        :rtype: int
        """
        return self._vacation_mode_days

    @vacation_mode_days.setter
    def vacation_mode_days(self, vacation_mode_days):
        """Sets the vacation_mode_days of this UnclaimDeviceRequest.

        The duration of the vacation unlock starting from when the request is processed. (1 day is treated as 24 hours)

        :param vacation_mode_days: The vacation_mode_days of this UnclaimDeviceRequest.
        :type vacation_mode_days: int
        """

        self._vacation_mode_days = vacation_mode_days

    @property
    def vacation_mode_expire_time(self):
        """Gets the vacation_mode_expire_time of this UnclaimDeviceRequest.

        The expiration time of the vacation unlock.

        :return: The vacation_mode_expire_time of this UnclaimDeviceRequest.
        :rtype: str
        """
        return self._vacation_mode_expire_time

    @vacation_mode_expire_time.setter
    def vacation_mode_expire_time(self, vacation_mode_expire_time):
        """Sets the vacation_mode_expire_time of this UnclaimDeviceRequest.

        The expiration time of the vacation unlock.

        :param vacation_mode_expire_time: The vacation_mode_expire_time of this UnclaimDeviceRequest.
        :type vacation_mode_expire_time: str
        """

        self._vacation_mode_expire_time = vacation_mode_expire_time
