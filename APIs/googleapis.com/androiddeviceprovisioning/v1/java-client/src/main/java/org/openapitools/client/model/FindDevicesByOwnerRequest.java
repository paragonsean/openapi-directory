/*
 * Android Device Provisioning Partner API
 * Automates Android zero-touch enrollment for device resellers, customers, and EMMs.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Request to find devices by customers.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:37:29.867792-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class FindDevicesByOwnerRequest {
  public static final String SERIALIZED_NAME_CUSTOMER_ID = "customerId";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_ID)
  private List<String> customerId = new ArrayList<>();

  public static final String SERIALIZED_NAME_GOOGLE_WORKSPACE_CUSTOMER_ID = "googleWorkspaceCustomerId";
  @SerializedName(SERIALIZED_NAME_GOOGLE_WORKSPACE_CUSTOMER_ID)
  private List<String> googleWorkspaceCustomerId = new ArrayList<>();

  public static final String SERIALIZED_NAME_LIMIT = "limit";
  @SerializedName(SERIALIZED_NAME_LIMIT)
  private String limit;

  public static final String SERIALIZED_NAME_PAGE_TOKEN = "pageToken";
  @SerializedName(SERIALIZED_NAME_PAGE_TOKEN)
  private String pageToken;

  /**
   * Required. The section type of the device&#39;s provisioning record.
   */
  @JsonAdapter(SectionTypeEnum.Adapter.class)
  public enum SectionTypeEnum {
    UNSPECIFIED("SECTION_TYPE_UNSPECIFIED"),
    
    SIM_LOCK("SECTION_TYPE_SIM_LOCK"),
    
    ZERO_TOUCH("SECTION_TYPE_ZERO_TOUCH");

    private String value;

    SectionTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static SectionTypeEnum fromValue(String value) {
      for (SectionTypeEnum b : SectionTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<SectionTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SectionTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SectionTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return SectionTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      SectionTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_SECTION_TYPE = "sectionType";
  @SerializedName(SERIALIZED_NAME_SECTION_TYPE)
  private SectionTypeEnum sectionType;

  public FindDevicesByOwnerRequest() {
  }

  public FindDevicesByOwnerRequest customerId(List<String> customerId) {
    this.customerId = customerId;
    return this;
  }

  public FindDevicesByOwnerRequest addCustomerIdItem(String customerIdItem) {
    if (this.customerId == null) {
      this.customerId = new ArrayList<>();
    }
    this.customerId.add(customerIdItem);
    return this;
  }

  /**
   * The list of customer IDs to search for.
   * @return customerId
   */
  @javax.annotation.Nullable
  public List<String> getCustomerId() {
    return customerId;
  }

  public void setCustomerId(List<String> customerId) {
    this.customerId = customerId;
  }


  public FindDevicesByOwnerRequest googleWorkspaceCustomerId(List<String> googleWorkspaceCustomerId) {
    this.googleWorkspaceCustomerId = googleWorkspaceCustomerId;
    return this;
  }

  public FindDevicesByOwnerRequest addGoogleWorkspaceCustomerIdItem(String googleWorkspaceCustomerIdItem) {
    if (this.googleWorkspaceCustomerId == null) {
      this.googleWorkspaceCustomerId = new ArrayList<>();
    }
    this.googleWorkspaceCustomerId.add(googleWorkspaceCustomerIdItem);
    return this;
  }

  /**
   * The list of IDs of Google Workspace accounts to search for.
   * @return googleWorkspaceCustomerId
   */
  @javax.annotation.Nullable
  public List<String> getGoogleWorkspaceCustomerId() {
    return googleWorkspaceCustomerId;
  }

  public void setGoogleWorkspaceCustomerId(List<String> googleWorkspaceCustomerId) {
    this.googleWorkspaceCustomerId = googleWorkspaceCustomerId;
  }


  public FindDevicesByOwnerRequest limit(String limit) {
    this.limit = limit;
    return this;
  }

  /**
   * Required. The maximum number of devices to show in a page of results. Must be between 1 and 100 inclusive.
   * @return limit
   */
  @javax.annotation.Nullable
  public String getLimit() {
    return limit;
  }

  public void setLimit(String limit) {
    this.limit = limit;
  }


  public FindDevicesByOwnerRequest pageToken(String pageToken) {
    this.pageToken = pageToken;
    return this;
  }

  /**
   * A token specifying which result page to return.
   * @return pageToken
   */
  @javax.annotation.Nullable
  public String getPageToken() {
    return pageToken;
  }

  public void setPageToken(String pageToken) {
    this.pageToken = pageToken;
  }


  public FindDevicesByOwnerRequest sectionType(SectionTypeEnum sectionType) {
    this.sectionType = sectionType;
    return this;
  }

  /**
   * Required. The section type of the device&#39;s provisioning record.
   * @return sectionType
   */
  @javax.annotation.Nullable
  public SectionTypeEnum getSectionType() {
    return sectionType;
  }

  public void setSectionType(SectionTypeEnum sectionType) {
    this.sectionType = sectionType;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FindDevicesByOwnerRequest findDevicesByOwnerRequest = (FindDevicesByOwnerRequest) o;
    return Objects.equals(this.customerId, findDevicesByOwnerRequest.customerId) &&
        Objects.equals(this.googleWorkspaceCustomerId, findDevicesByOwnerRequest.googleWorkspaceCustomerId) &&
        Objects.equals(this.limit, findDevicesByOwnerRequest.limit) &&
        Objects.equals(this.pageToken, findDevicesByOwnerRequest.pageToken) &&
        Objects.equals(this.sectionType, findDevicesByOwnerRequest.sectionType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(customerId, googleWorkspaceCustomerId, limit, pageToken, sectionType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FindDevicesByOwnerRequest {\n");
    sb.append("    customerId: ").append(toIndentedString(customerId)).append("\n");
    sb.append("    googleWorkspaceCustomerId: ").append(toIndentedString(googleWorkspaceCustomerId)).append("\n");
    sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
    sb.append("    pageToken: ").append(toIndentedString(pageToken)).append("\n");
    sb.append("    sectionType: ").append(toIndentedString(sectionType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("customerId");
    openapiFields.add("googleWorkspaceCustomerId");
    openapiFields.add("limit");
    openapiFields.add("pageToken");
    openapiFields.add("sectionType");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to FindDevicesByOwnerRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!FindDevicesByOwnerRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in FindDevicesByOwnerRequest is not found in the empty JSON string", FindDevicesByOwnerRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!FindDevicesByOwnerRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `FindDevicesByOwnerRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("customerId") != null && !jsonObj.get("customerId").isJsonNull() && !jsonObj.get("customerId").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `customerId` to be an array in the JSON string but got `%s`", jsonObj.get("customerId").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("googleWorkspaceCustomerId") != null && !jsonObj.get("googleWorkspaceCustomerId").isJsonNull() && !jsonObj.get("googleWorkspaceCustomerId").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `googleWorkspaceCustomerId` to be an array in the JSON string but got `%s`", jsonObj.get("googleWorkspaceCustomerId").toString()));
      }
      if ((jsonObj.get("limit") != null && !jsonObj.get("limit").isJsonNull()) && !jsonObj.get("limit").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `limit` to be a primitive type in the JSON string but got `%s`", jsonObj.get("limit").toString()));
      }
      if ((jsonObj.get("pageToken") != null && !jsonObj.get("pageToken").isJsonNull()) && !jsonObj.get("pageToken").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pageToken` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pageToken").toString()));
      }
      if ((jsonObj.get("sectionType") != null && !jsonObj.get("sectionType").isJsonNull()) && !jsonObj.get("sectionType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sectionType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sectionType").toString()));
      }
      // validate the optional field `sectionType`
      if (jsonObj.get("sectionType") != null && !jsonObj.get("sectionType").isJsonNull()) {
        SectionTypeEnum.validateJsonElement(jsonObj.get("sectionType"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!FindDevicesByOwnerRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'FindDevicesByOwnerRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<FindDevicesByOwnerRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(FindDevicesByOwnerRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<FindDevicesByOwnerRequest>() {
           @Override
           public void write(JsonWriter out, FindDevicesByOwnerRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public FindDevicesByOwnerRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of FindDevicesByOwnerRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of FindDevicesByOwnerRequest
   * @throws IOException if the JSON string is invalid with respect to FindDevicesByOwnerRequest
   */
  public static FindDevicesByOwnerRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, FindDevicesByOwnerRequest.class);
  }

  /**
   * Convert an instance of FindDevicesByOwnerRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

