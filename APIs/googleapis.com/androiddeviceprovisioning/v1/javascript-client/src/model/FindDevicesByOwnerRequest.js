/**
 * Android Device Provisioning Partner API
 * Automates Android zero-touch enrollment for device resellers, customers, and EMMs.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The FindDevicesByOwnerRequest model module.
 * @module model/FindDevicesByOwnerRequest
 * @version v1
 */
class FindDevicesByOwnerRequest {
    /**
     * Constructs a new <code>FindDevicesByOwnerRequest</code>.
     * Request to find devices by customers.
     * @alias module:model/FindDevicesByOwnerRequest
     */
    constructor() { 
        
        FindDevicesByOwnerRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FindDevicesByOwnerRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FindDevicesByOwnerRequest} obj Optional instance to populate.
     * @return {module:model/FindDevicesByOwnerRequest} The populated <code>FindDevicesByOwnerRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FindDevicesByOwnerRequest();

            if (data.hasOwnProperty('customerId')) {
                obj['customerId'] = ApiClient.convertToType(data['customerId'], ['String']);
            }
            if (data.hasOwnProperty('googleWorkspaceCustomerId')) {
                obj['googleWorkspaceCustomerId'] = ApiClient.convertToType(data['googleWorkspaceCustomerId'], ['String']);
            }
            if (data.hasOwnProperty('limit')) {
                obj['limit'] = ApiClient.convertToType(data['limit'], 'String');
            }
            if (data.hasOwnProperty('pageToken')) {
                obj['pageToken'] = ApiClient.convertToType(data['pageToken'], 'String');
            }
            if (data.hasOwnProperty('sectionType')) {
                obj['sectionType'] = ApiClient.convertToType(data['sectionType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FindDevicesByOwnerRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FindDevicesByOwnerRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['customerId'])) {
            throw new Error("Expected the field `customerId` to be an array in the JSON data but got " + data['customerId']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['googleWorkspaceCustomerId'])) {
            throw new Error("Expected the field `googleWorkspaceCustomerId` to be an array in the JSON data but got " + data['googleWorkspaceCustomerId']);
        }
        // ensure the json data is a string
        if (data['limit'] && !(typeof data['limit'] === 'string' || data['limit'] instanceof String)) {
            throw new Error("Expected the field `limit` to be a primitive type in the JSON string but got " + data['limit']);
        }
        // ensure the json data is a string
        if (data['pageToken'] && !(typeof data['pageToken'] === 'string' || data['pageToken'] instanceof String)) {
            throw new Error("Expected the field `pageToken` to be a primitive type in the JSON string but got " + data['pageToken']);
        }
        // ensure the json data is a string
        if (data['sectionType'] && !(typeof data['sectionType'] === 'string' || data['sectionType'] instanceof String)) {
            throw new Error("Expected the field `sectionType` to be a primitive type in the JSON string but got " + data['sectionType']);
        }

        return true;
    }


}



/**
 * The list of customer IDs to search for.
 * @member {Array.<String>} customerId
 */
FindDevicesByOwnerRequest.prototype['customerId'] = undefined;

/**
 * The list of IDs of Google Workspace accounts to search for.
 * @member {Array.<String>} googleWorkspaceCustomerId
 */
FindDevicesByOwnerRequest.prototype['googleWorkspaceCustomerId'] = undefined;

/**
 * Required. The maximum number of devices to show in a page of results. Must be between 1 and 100 inclusive.
 * @member {String} limit
 */
FindDevicesByOwnerRequest.prototype['limit'] = undefined;

/**
 * A token specifying which result page to return.
 * @member {String} pageToken
 */
FindDevicesByOwnerRequest.prototype['pageToken'] = undefined;

/**
 * Required. The section type of the device's provisioning record.
 * @member {module:model/FindDevicesByOwnerRequest.SectionTypeEnum} sectionType
 */
FindDevicesByOwnerRequest.prototype['sectionType'] = undefined;





/**
 * Allowed values for the <code>sectionType</code> property.
 * @enum {String}
 * @readonly
 */
FindDevicesByOwnerRequest['SectionTypeEnum'] = {

    /**
     * value: "SECTION_TYPE_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "SECTION_TYPE_UNSPECIFIED",

    /**
     * value: "SECTION_TYPE_SIM_LOCK"
     * @const
     */
    "SIM_LOCK": "SECTION_TYPE_SIM_LOCK",

    /**
     * value: "SECTION_TYPE_ZERO_TOUCH"
     * @const
     */
    "ZERO_TOUCH": "SECTION_TYPE_ZERO_TOUCH"
};



export default FindDevicesByOwnerRequest;

