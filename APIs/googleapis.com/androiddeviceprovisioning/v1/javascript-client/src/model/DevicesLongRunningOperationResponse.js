/**
 * Android Device Provisioning Partner API
 * Automates Android zero-touch enrollment for device resellers, customers, and EMMs.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OperationPerDevice from './OperationPerDevice';

/**
 * The DevicesLongRunningOperationResponse model module.
 * @module model/DevicesLongRunningOperationResponse
 * @version v1
 */
class DevicesLongRunningOperationResponse {
    /**
     * Constructs a new <code>DevicesLongRunningOperationResponse</code>.
     * Tracks the status of a long-running operation to claim, unclaim, or attach metadata to devices. To learn more, read [Longâ€‘running batch operations](/zero-touch/guides/how-it-works#operations).
     * @alias module:model/DevicesLongRunningOperationResponse
     */
    constructor() { 
        
        DevicesLongRunningOperationResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DevicesLongRunningOperationResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DevicesLongRunningOperationResponse} obj Optional instance to populate.
     * @return {module:model/DevicesLongRunningOperationResponse} The populated <code>DevicesLongRunningOperationResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DevicesLongRunningOperationResponse();

            if (data.hasOwnProperty('perDeviceStatus')) {
                obj['perDeviceStatus'] = ApiClient.convertToType(data['perDeviceStatus'], [OperationPerDevice]);
            }
            if (data.hasOwnProperty('successCount')) {
                obj['successCount'] = ApiClient.convertToType(data['successCount'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DevicesLongRunningOperationResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DevicesLongRunningOperationResponse</code>.
     */
    static validateJSON(data) {
        if (data['perDeviceStatus']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['perDeviceStatus'])) {
                throw new Error("Expected the field `perDeviceStatus` to be an array in the JSON data but got " + data['perDeviceStatus']);
            }
            // validate the optional field `perDeviceStatus` (array)
            for (const item of data['perDeviceStatus']) {
                OperationPerDevice.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The processing status for each device in the operation. One `PerDeviceStatus` per device. The list order matches the items in the original request.
 * @member {Array.<module:model/OperationPerDevice>} perDeviceStatus
 */
DevicesLongRunningOperationResponse.prototype['perDeviceStatus'] = undefined;

/**
 * A summary of how many items in the operation the server processed successfully. Updated as the operation progresses.
 * @member {Number} successCount
 */
DevicesLongRunningOperationResponse.prototype['successCount'] = undefined;






export default DevicesLongRunningOperationResponse;

