/**
 * Android Device Provisioning Partner API
 * Automates Android zero-touch enrollment for device resellers, customers, and EMMs.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Dpc model module.
 * @module model/Dpc
 * @version v1
 */
class Dpc {
    /**
     * Constructs a new <code>Dpc</code>.
     * An EMM&#39;s DPC ([device policy controller](http://developer.android.com/work/dpc/build-dpc.html)). Zero-touch enrollment installs a DPC (listed in the &#x60;Configuration&#x60;) on a device to maintain the customer&#39;s mobile policies. All the DPCs listed by the API support zero-touch enrollment and are available in Google Play.
     * @alias module:model/Dpc
     */
    constructor() { 
        
        Dpc.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Dpc</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Dpc} obj Optional instance to populate.
     * @return {module:model/Dpc} The populated <code>Dpc</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Dpc();

            if (data.hasOwnProperty('dpcName')) {
                obj['dpcName'] = ApiClient.convertToType(data['dpcName'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('packageName')) {
                obj['packageName'] = ApiClient.convertToType(data['packageName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Dpc</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Dpc</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['dpcName'] && !(typeof data['dpcName'] === 'string' || data['dpcName'] instanceof String)) {
            throw new Error("Expected the field `dpcName` to be a primitive type in the JSON string but got " + data['dpcName']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['packageName'] && !(typeof data['packageName'] === 'string' || data['packageName'] instanceof String)) {
            throw new Error("Expected the field `packageName` to be a primitive type in the JSON string but got " + data['packageName']);
        }

        return true;
    }


}



/**
 * Output only. The title of the DPC app in Google Play. For example, _Google Apps Device Policy_. Useful in an application's user interface.
 * @member {String} dpcName
 */
Dpc.prototype['dpcName'] = undefined;

/**
 * Output only. The API resource name in the format `customers/[CUSTOMER_ID]/dpcs/[DPC_ID]`. Assigned by the server. To maintain a reference to a DPC across customer accounts, persist and match the last path component (`DPC_ID`).
 * @member {String} name
 */
Dpc.prototype['name'] = undefined;

/**
 * Output only. The DPC's Android application ID that looks like a Java package name. Zero-touch enrollment installs the DPC app onto a device using this identifier.
 * @member {String} packageName
 */
Dpc.prototype['packageName'] = undefined;






export default Dpc;

