/**
 * Android Device Provisioning Partner API
 * Automates Android zero-touch enrollment for device resellers, customers, and EMMs.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DeviceReference from './DeviceReference';

/**
 * The CustomerUnclaimDeviceRequest model module.
 * @module model/CustomerUnclaimDeviceRequest
 * @version v1
 */
class CustomerUnclaimDeviceRequest {
    /**
     * Constructs a new <code>CustomerUnclaimDeviceRequest</code>.
     * Request message for customer to unclaim a device.
     * @alias module:model/CustomerUnclaimDeviceRequest
     */
    constructor() { 
        
        CustomerUnclaimDeviceRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CustomerUnclaimDeviceRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CustomerUnclaimDeviceRequest} obj Optional instance to populate.
     * @return {module:model/CustomerUnclaimDeviceRequest} The populated <code>CustomerUnclaimDeviceRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CustomerUnclaimDeviceRequest();

            if (data.hasOwnProperty('device')) {
                obj['device'] = DeviceReference.constructFromObject(data['device']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CustomerUnclaimDeviceRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CustomerUnclaimDeviceRequest</code>.
     */
    static validateJSON(data) {
        // validate the optional field `device`
        if (data['device']) { // data not null
          DeviceReference.validateJSON(data['device']);
        }

        return true;
    }


}



/**
 * @member {module:model/DeviceReference} device
 */
CustomerUnclaimDeviceRequest.prototype['device'] = undefined;






export default CustomerUnclaimDeviceRequest;

