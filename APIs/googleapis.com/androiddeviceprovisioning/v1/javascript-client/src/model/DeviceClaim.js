/**
 * Android Device Provisioning Partner API
 * Automates Android zero-touch enrollment for device resellers, customers, and EMMs.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DeviceClaim model module.
 * @module model/DeviceClaim
 * @version v1
 */
class DeviceClaim {
    /**
     * Constructs a new <code>DeviceClaim</code>.
     * A record of a device claimed by a reseller for a customer. Devices claimed for zero-touch enrollment have a claim with the type &#x60;SECTION_TYPE_ZERO_TOUCH&#x60;. To learn more, read [Claim devices for customers](/zero-touch/guides/how-it-works#claim).
     * @alias module:model/DeviceClaim
     */
    constructor() { 
        
        DeviceClaim.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DeviceClaim</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DeviceClaim} obj Optional instance to populate.
     * @return {module:model/DeviceClaim} The populated <code>DeviceClaim</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DeviceClaim();

            if (data.hasOwnProperty('additionalService')) {
                obj['additionalService'] = ApiClient.convertToType(data['additionalService'], 'String');
            }
            if (data.hasOwnProperty('googleWorkspaceCustomerId')) {
                obj['googleWorkspaceCustomerId'] = ApiClient.convertToType(data['googleWorkspaceCustomerId'], 'String');
            }
            if (data.hasOwnProperty('ownerCompanyId')) {
                obj['ownerCompanyId'] = ApiClient.convertToType(data['ownerCompanyId'], 'String');
            }
            if (data.hasOwnProperty('resellerId')) {
                obj['resellerId'] = ApiClient.convertToType(data['resellerId'], 'String');
            }
            if (data.hasOwnProperty('sectionType')) {
                obj['sectionType'] = ApiClient.convertToType(data['sectionType'], 'String');
            }
            if (data.hasOwnProperty('vacationModeExpireTime')) {
                obj['vacationModeExpireTime'] = ApiClient.convertToType(data['vacationModeExpireTime'], 'String');
            }
            if (data.hasOwnProperty('vacationModeStartTime')) {
                obj['vacationModeStartTime'] = ApiClient.convertToType(data['vacationModeStartTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DeviceClaim</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DeviceClaim</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['additionalService'] && !(typeof data['additionalService'] === 'string' || data['additionalService'] instanceof String)) {
            throw new Error("Expected the field `additionalService` to be a primitive type in the JSON string but got " + data['additionalService']);
        }
        // ensure the json data is a string
        if (data['googleWorkspaceCustomerId'] && !(typeof data['googleWorkspaceCustomerId'] === 'string' || data['googleWorkspaceCustomerId'] instanceof String)) {
            throw new Error("Expected the field `googleWorkspaceCustomerId` to be a primitive type in the JSON string but got " + data['googleWorkspaceCustomerId']);
        }
        // ensure the json data is a string
        if (data['ownerCompanyId'] && !(typeof data['ownerCompanyId'] === 'string' || data['ownerCompanyId'] instanceof String)) {
            throw new Error("Expected the field `ownerCompanyId` to be a primitive type in the JSON string but got " + data['ownerCompanyId']);
        }
        // ensure the json data is a string
        if (data['resellerId'] && !(typeof data['resellerId'] === 'string' || data['resellerId'] instanceof String)) {
            throw new Error("Expected the field `resellerId` to be a primitive type in the JSON string but got " + data['resellerId']);
        }
        // ensure the json data is a string
        if (data['sectionType'] && !(typeof data['sectionType'] === 'string' || data['sectionType'] instanceof String)) {
            throw new Error("Expected the field `sectionType` to be a primitive type in the JSON string but got " + data['sectionType']);
        }
        // ensure the json data is a string
        if (data['vacationModeExpireTime'] && !(typeof data['vacationModeExpireTime'] === 'string' || data['vacationModeExpireTime'] instanceof String)) {
            throw new Error("Expected the field `vacationModeExpireTime` to be a primitive type in the JSON string but got " + data['vacationModeExpireTime']);
        }
        // ensure the json data is a string
        if (data['vacationModeStartTime'] && !(typeof data['vacationModeStartTime'] === 'string' || data['vacationModeStartTime'] instanceof String)) {
            throw new Error("Expected the field `vacationModeStartTime` to be a primitive type in the JSON string but got " + data['vacationModeStartTime']);
        }

        return true;
    }


}



/**
 * The Additional service registered for the device.
 * @member {module:model/DeviceClaim.AdditionalServiceEnum} additionalService
 */
DeviceClaim.prototype['additionalService'] = undefined;

/**
 * The ID of the Google Workspace account that owns the Chrome OS device.
 * @member {String} googleWorkspaceCustomerId
 */
DeviceClaim.prototype['googleWorkspaceCustomerId'] = undefined;

/**
 * The ID of the Customer that purchased the device.
 * @member {String} ownerCompanyId
 */
DeviceClaim.prototype['ownerCompanyId'] = undefined;

/**
 * The ID of the reseller that claimed the device.
 * @member {String} resellerId
 */
DeviceClaim.prototype['resellerId'] = undefined;

/**
 * Output only. The type of claim made on the device.
 * @member {module:model/DeviceClaim.SectionTypeEnum} sectionType
 */
DeviceClaim.prototype['sectionType'] = undefined;

/**
 * The timestamp when the device will exit ‘vacation mode’. This value is present iff the device is in 'vacation mode'.
 * @member {String} vacationModeExpireTime
 */
DeviceClaim.prototype['vacationModeExpireTime'] = undefined;

/**
 * The timestamp when the device was put into ‘vacation mode’. This value is present iff the device is in 'vacation mode'.
 * @member {String} vacationModeStartTime
 */
DeviceClaim.prototype['vacationModeStartTime'] = undefined;





/**
 * Allowed values for the <code>additionalService</code> property.
 * @enum {String}
 * @readonly
 */
DeviceClaim['AdditionalServiceEnum'] = {

    /**
     * value: "ADDITIONAL_SERVICE_UNSPECIFIED"
     * @const
     */
    "ADDITIONAL_SERVICE_UNSPECIFIED": "ADDITIONAL_SERVICE_UNSPECIFIED",

    /**
     * value: "DEVICE_PROTECTION"
     * @const
     */
    "DEVICE_PROTECTION": "DEVICE_PROTECTION"
};


/**
 * Allowed values for the <code>sectionType</code> property.
 * @enum {String}
 * @readonly
 */
DeviceClaim['SectionTypeEnum'] = {

    /**
     * value: "SECTION_TYPE_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "SECTION_TYPE_UNSPECIFIED",

    /**
     * value: "SECTION_TYPE_SIM_LOCK"
     * @const
     */
    "SIM_LOCK": "SECTION_TYPE_SIM_LOCK",

    /**
     * value: "SECTION_TYPE_ZERO_TOUCH"
     * @const
     */
    "ZERO_TOUCH": "SECTION_TYPE_ZERO_TOUCH"
};



export default DeviceClaim;

