/**
 * Android Device Provisioning Partner API
 * Automates Android zero-touch enrollment for device resellers, customers, and EMMs.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleWorkspaceAccount model module.
 * @module model/GoogleWorkspaceAccount
 * @version v1
 */
class GoogleWorkspaceAccount {
    /**
     * Constructs a new <code>GoogleWorkspaceAccount</code>.
     * A Google Workspace customer.
     * @alias module:model/GoogleWorkspaceAccount
     */
    constructor() { 
        
        GoogleWorkspaceAccount.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleWorkspaceAccount</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleWorkspaceAccount} obj Optional instance to populate.
     * @return {module:model/GoogleWorkspaceAccount} The populated <code>GoogleWorkspaceAccount</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleWorkspaceAccount();

            if (data.hasOwnProperty('customerId')) {
                obj['customerId'] = ApiClient.convertToType(data['customerId'], 'String');
            }
            if (data.hasOwnProperty('preProvisioningTokens')) {
                obj['preProvisioningTokens'] = ApiClient.convertToType(data['preProvisioningTokens'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleWorkspaceAccount</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleWorkspaceAccount</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['customerId'] && !(typeof data['customerId'] === 'string' || data['customerId'] instanceof String)) {
            throw new Error("Expected the field `customerId` to be a primitive type in the JSON string but got " + data['customerId']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['preProvisioningTokens'])) {
            throw new Error("Expected the field `preProvisioningTokens` to be an array in the JSON data but got " + data['preProvisioningTokens']);
        }

        return true;
    }


}



/**
 * Required. The customer ID.
 * @member {String} customerId
 */
GoogleWorkspaceAccount.prototype['customerId'] = undefined;

/**
 * Output only. The pre-provisioning tokens previously used to claim devices.
 * @member {Array.<String>} preProvisioningTokens
 */
GoogleWorkspaceAccount.prototype['preProvisioningTokens'] = undefined;






export default GoogleWorkspaceAccount;

