/**
 * Android Device Provisioning Partner API
 * Automates Android zero-touch enrollment for device resellers, customers, and EMMs.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PartnerClaim from './PartnerClaim';
import PartnerUnclaim from './PartnerUnclaim';
import PerDeviceStatusInBatch from './PerDeviceStatusInBatch';
import UpdateMetadataArguments from './UpdateMetadataArguments';

/**
 * The OperationPerDevice model module.
 * @module model/OperationPerDevice
 * @version v1
 */
class OperationPerDevice {
    /**
     * Constructs a new <code>OperationPerDevice</code>.
     * A task for each device in the operation. Corresponds to each device change in the request.
     * @alias module:model/OperationPerDevice
     */
    constructor() { 
        
        OperationPerDevice.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OperationPerDevice</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OperationPerDevice} obj Optional instance to populate.
     * @return {module:model/OperationPerDevice} The populated <code>OperationPerDevice</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OperationPerDevice();

            if (data.hasOwnProperty('claim')) {
                obj['claim'] = PartnerClaim.constructFromObject(data['claim']);
            }
            if (data.hasOwnProperty('result')) {
                obj['result'] = PerDeviceStatusInBatch.constructFromObject(data['result']);
            }
            if (data.hasOwnProperty('unclaim')) {
                obj['unclaim'] = PartnerUnclaim.constructFromObject(data['unclaim']);
            }
            if (data.hasOwnProperty('updateMetadata')) {
                obj['updateMetadata'] = UpdateMetadataArguments.constructFromObject(data['updateMetadata']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OperationPerDevice</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OperationPerDevice</code>.
     */
    static validateJSON(data) {
        // validate the optional field `claim`
        if (data['claim']) { // data not null
          PartnerClaim.validateJSON(data['claim']);
        }
        // validate the optional field `result`
        if (data['result']) { // data not null
          PerDeviceStatusInBatch.validateJSON(data['result']);
        }
        // validate the optional field `unclaim`
        if (data['unclaim']) { // data not null
          PartnerUnclaim.validateJSON(data['unclaim']);
        }
        // validate the optional field `updateMetadata`
        if (data['updateMetadata']) { // data not null
          UpdateMetadataArguments.validateJSON(data['updateMetadata']);
        }

        return true;
    }


}



/**
 * @member {module:model/PartnerClaim} claim
 */
OperationPerDevice.prototype['claim'] = undefined;

/**
 * @member {module:model/PerDeviceStatusInBatch} result
 */
OperationPerDevice.prototype['result'] = undefined;

/**
 * @member {module:model/PartnerUnclaim} unclaim
 */
OperationPerDevice.prototype['unclaim'] = undefined;

/**
 * @member {module:model/UpdateMetadataArguments} updateMetadata
 */
OperationPerDevice.prototype['updateMetadata'] = undefined;






export default OperationPerDevice;

