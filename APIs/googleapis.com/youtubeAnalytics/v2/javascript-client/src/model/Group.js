/**
 * YouTube Analytics API
 * Retrieves your YouTube Analytics data.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Errors from './Errors';
import GroupContentDetails from './GroupContentDetails';
import GroupSnippet from './GroupSnippet';

/**
 * The Group model module.
 * @module model/Group
 * @version v2
 */
class Group {
    /**
     * Constructs a new <code>Group</code>.
     * A group.
     * @alias module:model/Group
     */
    constructor() { 
        
        Group.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Group</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Group} obj Optional instance to populate.
     * @return {module:model/Group} The populated <code>Group</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Group();

            if (data.hasOwnProperty('contentDetails')) {
                obj['contentDetails'] = GroupContentDetails.constructFromObject(data['contentDetails']);
            }
            if (data.hasOwnProperty('errors')) {
                obj['errors'] = Errors.constructFromObject(data['errors']);
            }
            if (data.hasOwnProperty('etag')) {
                obj['etag'] = ApiClient.convertToType(data['etag'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('snippet')) {
                obj['snippet'] = GroupSnippet.constructFromObject(data['snippet']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Group</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Group</code>.
     */
    static validateJSON(data) {
        // validate the optional field `contentDetails`
        if (data['contentDetails']) { // data not null
          GroupContentDetails.validateJSON(data['contentDetails']);
        }
        // validate the optional field `errors`
        if (data['errors']) { // data not null
          Errors.validateJSON(data['errors']);
        }
        // ensure the json data is a string
        if (data['etag'] && !(typeof data['etag'] === 'string' || data['etag'] instanceof String)) {
            throw new Error("Expected the field `etag` to be a primitive type in the JSON string but got " + data['etag']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }
        // validate the optional field `snippet`
        if (data['snippet']) { // data not null
          GroupSnippet.validateJSON(data['snippet']);
        }

        return true;
    }


}



/**
 * @member {module:model/GroupContentDetails} contentDetails
 */
Group.prototype['contentDetails'] = undefined;

/**
 * @member {module:model/Errors} errors
 */
Group.prototype['errors'] = undefined;

/**
 * The Etag of this resource.
 * @member {String} etag
 */
Group.prototype['etag'] = undefined;

/**
 * The ID that YouTube uses to uniquely identify the group.
 * @member {String} id
 */
Group.prototype['id'] = undefined;

/**
 * Identifies the API resource's type. The value will be `youtube#group`.
 * @member {String} kind
 */
Group.prototype['kind'] = undefined;

/**
 * @member {module:model/GroupSnippet} snippet
 */
Group.prototype['snippet'] = undefined;






export default Group;

