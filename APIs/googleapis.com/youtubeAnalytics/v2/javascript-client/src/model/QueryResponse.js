/**
 * YouTube Analytics API
 * Retrieves your YouTube Analytics data.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Errors from './Errors';
import ResultTableColumnHeader from './ResultTableColumnHeader';

/**
 * The QueryResponse model module.
 * @module model/QueryResponse
 * @version v2
 */
class QueryResponse {
    /**
     * Constructs a new <code>QueryResponse</code>.
     * Response message for TargetedQueriesService.Query.
     * @alias module:model/QueryResponse
     */
    constructor() { 
        
        QueryResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>QueryResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/QueryResponse} obj Optional instance to populate.
     * @return {module:model/QueryResponse} The populated <code>QueryResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new QueryResponse();

            if (data.hasOwnProperty('columnHeaders')) {
                obj['columnHeaders'] = ApiClient.convertToType(data['columnHeaders'], [ResultTableColumnHeader]);
            }
            if (data.hasOwnProperty('errors')) {
                obj['errors'] = Errors.constructFromObject(data['errors']);
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('rows')) {
                obj['rows'] = ApiClient.convertToType(data['rows'], [[Object]]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>QueryResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>QueryResponse</code>.
     */
    static validateJSON(data) {
        if (data['columnHeaders']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['columnHeaders'])) {
                throw new Error("Expected the field `columnHeaders` to be an array in the JSON data but got " + data['columnHeaders']);
            }
            // validate the optional field `columnHeaders` (array)
            for (const item of data['columnHeaders']) {
                ResultTableColumnHeader.validateJSON(item);
            };
        }
        // validate the optional field `errors`
        if (data['errors']) { // data not null
          Errors.validateJSON(data['errors']);
        }
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['rows'])) {
            throw new Error("Expected the field `rows` to be an array in the JSON data but got " + data['rows']);
        }

        return true;
    }


}



/**
 * This value specifies information about the data returned in the `rows` fields. Each item in the `columnHeaders` list identifies a field returned in the `rows` value, which contains a list of comma-delimited data. The `columnHeaders` list will begin with the dimensions specified in the API request, which will be followed by the metrics specified in the API request. The order of both dimensions and metrics will match the ordering in the API request. For example, if the API request contains the parameters `dimensions=ageGroup,gender&metrics=viewerPercentage`, the API response will return columns in this order: `ageGroup`, `gender`, `viewerPercentage`.
 * @member {Array.<module:model/ResultTableColumnHeader>} columnHeaders
 */
QueryResponse.prototype['columnHeaders'] = undefined;

/**
 * @member {module:model/Errors} errors
 */
QueryResponse.prototype['errors'] = undefined;

/**
 * This value specifies the type of data included in the API response. For the query method, the kind property value will be `youtubeAnalytics#resultTable`.
 * @member {String} kind
 */
QueryResponse.prototype['kind'] = undefined;

/**
 * The list contains all rows of the result table. Each item in the list is an array that contains comma-delimited data corresponding to a single row of data. The order of the comma-delimited data fields will match the order of the columns listed in the `columnHeaders` field. If no data is available for the given query, the `rows` element will be omitted from the response. The response for a query with the `day` dimension will not contain rows for the most recent days.
 * @member {Array.<Array.<Object>>} rows
 */
QueryResponse.prototype['rows'] = undefined;






export default QueryResponse;

