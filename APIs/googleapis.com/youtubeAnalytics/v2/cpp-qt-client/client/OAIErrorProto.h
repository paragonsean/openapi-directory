/**
 * YouTube Analytics API
 * Retrieves your YouTube Analytics data.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIErrorProto.h
 *
 * Describes one specific error.
 */

#ifndef OAIErrorProto_H
#define OAIErrorProto_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIErrorProto : public OAIObject {
public:
    OAIErrorProto();
    OAIErrorProto(QString json);
    ~OAIErrorProto() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getArgument() const;
    void setArgument(const QList<QString> &argument);
    bool is_argument_Set() const;
    bool is_argument_Valid() const;

    QString getCode() const;
    void setCode(const QString &code);
    bool is_code_Set() const;
    bool is_code_Valid() const;

    QString getDebugInfo() const;
    void setDebugInfo(const QString &debug_info);
    bool is_debug_info_Set() const;
    bool is_debug_info_Valid() const;

    QString getDomain() const;
    void setDomain(const QString &domain);
    bool is_domain_Set() const;
    bool is_domain_Valid() const;

    QString getExternalErrorMessage() const;
    void setExternalErrorMessage(const QString &external_error_message);
    bool is_external_error_message_Set() const;
    bool is_external_error_message_Valid() const;

    QString getLocation() const;
    void setLocation(const QString &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    QString getLocationType() const;
    void setLocationType(const QString &location_type);
    bool is_location_type_Set() const;
    bool is_location_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_argument;
    bool m_argument_isSet;
    bool m_argument_isValid;

    QString m_code;
    bool m_code_isSet;
    bool m_code_isValid;

    QString m_debug_info;
    bool m_debug_info_isSet;
    bool m_debug_info_isValid;

    QString m_domain;
    bool m_domain_isSet;
    bool m_domain_isValid;

    QString m_external_error_message;
    bool m_external_error_message_isSet;
    bool m_external_error_message_isValid;

    QString m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    QString m_location_type;
    bool m_location_type_isSet;
    bool m_location_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIErrorProto)

#endif // OAIErrorProto_H
