/*
 * YouTube Analytics API
 * Retrieves your YouTube Analytics data.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.EmptyResponse;
import org.openapitools.client.model.Group;
import org.openapitools.client.model.ListGroupsResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for GroupsApi
 */
@Disabled
public class GroupsApiTest {

    private final GroupsApi api = new GroupsApi();

    /**
     * Deletes a group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void youtubeAnalyticsGroupsDeleteTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String id = null;
        String onBehalfOfContentOwner = null;
        EmptyResponse response = api.youtubeAnalyticsGroupsDelete($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, id, onBehalfOfContentOwner);
        // TODO: test validations
    }

    /**
     * Creates a group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void youtubeAnalyticsGroupsInsertTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String onBehalfOfContentOwner = null;
        Group group = null;
        Group response = api.youtubeAnalyticsGroupsInsert($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, onBehalfOfContentOwner, group);
        // TODO: test validations
    }

    /**
     * Returns a collection of groups that match the API request parameters. For example, you can retrieve all groups that the authenticated user owns, or you can retrieve one or more groups by their unique IDs.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void youtubeAnalyticsGroupsListTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String id = null;
        Boolean mine = null;
        String onBehalfOfContentOwner = null;
        String pageToken = null;
        ListGroupsResponse response = api.youtubeAnalyticsGroupsList($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, id, mine, onBehalfOfContentOwner, pageToken);
        // TODO: test validations
    }

    /**
     * Modifies a group. For example, you could change a group&#39;s title.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void youtubeAnalyticsGroupsUpdateTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String onBehalfOfContentOwner = null;
        Group group = null;
        Group response = api.youtubeAnalyticsGroupsUpdate($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, onBehalfOfContentOwner, group);
        // TODO: test validations
    }

}
