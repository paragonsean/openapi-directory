# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.errors import Errors
from openapi_server.models.group_item_resource import GroupItemResource
from openapi_server import util


class GroupItem(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, errors: Errors=None, etag: str=None, group_id: str=None, id: str=None, kind: str=None, resource: GroupItemResource=None):
        """GroupItem - a model defined in OpenAPI

        :param errors: The errors of this GroupItem.
        :param etag: The etag of this GroupItem.
        :param group_id: The group_id of this GroupItem.
        :param id: The id of this GroupItem.
        :param kind: The kind of this GroupItem.
        :param resource: The resource of this GroupItem.
        """
        self.openapi_types = {
            'errors': Errors,
            'etag': str,
            'group_id': str,
            'id': str,
            'kind': str,
            'resource': GroupItemResource
        }

        self.attribute_map = {
            'errors': 'errors',
            'etag': 'etag',
            'group_id': 'groupId',
            'id': 'id',
            'kind': 'kind',
            'resource': 'resource'
        }

        self._errors = errors
        self._etag = etag
        self._group_id = group_id
        self._id = id
        self._kind = kind
        self._resource = resource

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GroupItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GroupItem of this GroupItem.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def errors(self):
        """Gets the errors of this GroupItem.


        :return: The errors of this GroupItem.
        :rtype: Errors
        """
        return self._errors

    @errors.setter
    def errors(self, errors):
        """Sets the errors of this GroupItem.


        :param errors: The errors of this GroupItem.
        :type errors: Errors
        """

        self._errors = errors

    @property
    def etag(self):
        """Gets the etag of this GroupItem.

        The Etag of this resource.

        :return: The etag of this GroupItem.
        :rtype: str
        """
        return self._etag

    @etag.setter
    def etag(self, etag):
        """Sets the etag of this GroupItem.

        The Etag of this resource.

        :param etag: The etag of this GroupItem.
        :type etag: str
        """

        self._etag = etag

    @property
    def group_id(self):
        """Gets the group_id of this GroupItem.

        The ID that YouTube uses to uniquely identify the group that contains the item.

        :return: The group_id of this GroupItem.
        :rtype: str
        """
        return self._group_id

    @group_id.setter
    def group_id(self, group_id):
        """Sets the group_id of this GroupItem.

        The ID that YouTube uses to uniquely identify the group that contains the item.

        :param group_id: The group_id of this GroupItem.
        :type group_id: str
        """

        self._group_id = group_id

    @property
    def id(self):
        """Gets the id of this GroupItem.

        The ID that YouTube uses to uniquely identify the `channel`, `video`, `playlist`, or `asset` resource that is included in the group. Note that this ID refers specifically to the inclusion of that resource in a particular group and is different than the channel ID, video ID, playlist ID, or asset ID that uniquely identifies the resource itself. The `resource.id` property's value specifies the unique channel, video, playlist, or asset ID.

        :return: The id of this GroupItem.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this GroupItem.

        The ID that YouTube uses to uniquely identify the `channel`, `video`, `playlist`, or `asset` resource that is included in the group. Note that this ID refers specifically to the inclusion of that resource in a particular group and is different than the channel ID, video ID, playlist ID, or asset ID that uniquely identifies the resource itself. The `resource.id` property's value specifies the unique channel, video, playlist, or asset ID.

        :param id: The id of this GroupItem.
        :type id: str
        """

        self._id = id

    @property
    def kind(self):
        """Gets the kind of this GroupItem.

        Identifies the API resource's type. The value will be `youtube#groupItem`.

        :return: The kind of this GroupItem.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this GroupItem.

        Identifies the API resource's type. The value will be `youtube#groupItem`.

        :param kind: The kind of this GroupItem.
        :type kind: str
        """

        self._kind = kind

    @property
    def resource(self):
        """Gets the resource of this GroupItem.


        :return: The resource of this GroupItem.
        :rtype: GroupItemResource
        """
        return self._resource

    @resource.setter
    def resource(self, resource):
        """Sets the resource of this GroupItem.


        :param resource: The resource of this GroupItem.
        :type resource: GroupItemResource
        """

        self._resource = resource
