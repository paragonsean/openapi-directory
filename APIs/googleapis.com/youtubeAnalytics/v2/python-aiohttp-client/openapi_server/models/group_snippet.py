# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GroupSnippet(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, published_at: str=None, title: str=None):
        """GroupSnippet - a model defined in OpenAPI

        :param published_at: The published_at of this GroupSnippet.
        :param title: The title of this GroupSnippet.
        """
        self.openapi_types = {
            'published_at': str,
            'title': str
        }

        self.attribute_map = {
            'published_at': 'publishedAt',
            'title': 'title'
        }

        self._published_at = published_at
        self._title = title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GroupSnippet':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GroupSnippet of this GroupSnippet.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def published_at(self):
        """Gets the published_at of this GroupSnippet.

        The date and time that the group was created. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.

        :return: The published_at of this GroupSnippet.
        :rtype: str
        """
        return self._published_at

    @published_at.setter
    def published_at(self, published_at):
        """Sets the published_at of this GroupSnippet.

        The date and time that the group was created. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.

        :param published_at: The published_at of this GroupSnippet.
        :type published_at: str
        """

        self._published_at = published_at

    @property
    def title(self):
        """Gets the title of this GroupSnippet.

        The group name. The value must be a non-empty string.

        :return: The title of this GroupSnippet.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this GroupSnippet.

        The group name. The value must be a non-empty string.

        :param title: The title of this GroupSnippet.
        :type title: str
        """

        self._title = title
