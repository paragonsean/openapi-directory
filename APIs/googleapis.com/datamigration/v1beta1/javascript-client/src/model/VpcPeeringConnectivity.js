/**
 * Database Migration API
 * Manage Cloud Database Migration Service resources on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The VpcPeeringConnectivity model module.
 * @module model/VpcPeeringConnectivity
 * @version v1beta1
 */
class VpcPeeringConnectivity {
    /**
     * Constructs a new <code>VpcPeeringConnectivity</code>.
     * The details of the VPC where the source database is located in Google Cloud. We will use this information to set up the VPC peering connection between Cloud SQL and this VPC.
     * @alias module:model/VpcPeeringConnectivity
     */
    constructor() { 
        
        VpcPeeringConnectivity.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VpcPeeringConnectivity</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VpcPeeringConnectivity} obj Optional instance to populate.
     * @return {module:model/VpcPeeringConnectivity} The populated <code>VpcPeeringConnectivity</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VpcPeeringConnectivity();

            if (data.hasOwnProperty('vpc')) {
                obj['vpc'] = ApiClient.convertToType(data['vpc'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VpcPeeringConnectivity</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VpcPeeringConnectivity</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['vpc'] && !(typeof data['vpc'] === 'string' || data['vpc'] instanceof String)) {
            throw new Error("Expected the field `vpc` to be a primitive type in the JSON string but got " + data['vpc']);
        }

        return true;
    }


}



/**
 * The name of the VPC network to peer with the Cloud SQL private network.
 * @member {String} vpc
 */
VpcPeeringConnectivity.prototype['vpc'] = undefined;






export default VpcPeeringConnectivity;

