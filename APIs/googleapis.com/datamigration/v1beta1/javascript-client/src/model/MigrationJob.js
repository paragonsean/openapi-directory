/**
 * Database Migration API
 * Manage Cloud Database Migration Service resources on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DatabaseType from './DatabaseType';
import ReverseSshConnectivity from './ReverseSshConnectivity';
import Status from './Status';
import VpcPeeringConnectivity from './VpcPeeringConnectivity';

/**
 * The MigrationJob model module.
 * @module model/MigrationJob
 * @version v1beta1
 */
class MigrationJob {
    /**
     * Constructs a new <code>MigrationJob</code>.
     * Represents a Database Migration Service migration job object.
     * @alias module:model/MigrationJob
     */
    constructor() { 
        
        MigrationJob.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MigrationJob</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MigrationJob} obj Optional instance to populate.
     * @return {module:model/MigrationJob} The populated <code>MigrationJob</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MigrationJob();

            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('destination')) {
                obj['destination'] = ApiClient.convertToType(data['destination'], 'String');
            }
            if (data.hasOwnProperty('destinationDatabase')) {
                obj['destinationDatabase'] = DatabaseType.constructFromObject(data['destinationDatabase']);
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('dumpPath')) {
                obj['dumpPath'] = ApiClient.convertToType(data['dumpPath'], 'String');
            }
            if (data.hasOwnProperty('duration')) {
                obj['duration'] = ApiClient.convertToType(data['duration'], 'String');
            }
            if (data.hasOwnProperty('endTime')) {
                obj['endTime'] = ApiClient.convertToType(data['endTime'], 'String');
            }
            if (data.hasOwnProperty('error')) {
                obj['error'] = Status.constructFromObject(data['error']);
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ApiClient.convertToType(data['labels'], {'String': 'String'});
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('phase')) {
                obj['phase'] = ApiClient.convertToType(data['phase'], 'String');
            }
            if (data.hasOwnProperty('reverseSshConnectivity')) {
                obj['reverseSshConnectivity'] = ReverseSshConnectivity.constructFromObject(data['reverseSshConnectivity']);
            }
            if (data.hasOwnProperty('source')) {
                obj['source'] = ApiClient.convertToType(data['source'], 'String');
            }
            if (data.hasOwnProperty('sourceDatabase')) {
                obj['sourceDatabase'] = DatabaseType.constructFromObject(data['sourceDatabase']);
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('staticIpConnectivity')) {
                obj['staticIpConnectivity'] = ApiClient.convertToType(data['staticIpConnectivity'], Object);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('updateTime')) {
                obj['updateTime'] = ApiClient.convertToType(data['updateTime'], 'String');
            }
            if (data.hasOwnProperty('vpcPeeringConnectivity')) {
                obj['vpcPeeringConnectivity'] = VpcPeeringConnectivity.constructFromObject(data['vpcPeeringConnectivity']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MigrationJob</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MigrationJob</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // ensure the json data is a string
        if (data['destination'] && !(typeof data['destination'] === 'string' || data['destination'] instanceof String)) {
            throw new Error("Expected the field `destination` to be a primitive type in the JSON string but got " + data['destination']);
        }
        // validate the optional field `destinationDatabase`
        if (data['destinationDatabase']) { // data not null
          DatabaseType.validateJSON(data['destinationDatabase']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['dumpPath'] && !(typeof data['dumpPath'] === 'string' || data['dumpPath'] instanceof String)) {
            throw new Error("Expected the field `dumpPath` to be a primitive type in the JSON string but got " + data['dumpPath']);
        }
        // ensure the json data is a string
        if (data['duration'] && !(typeof data['duration'] === 'string' || data['duration'] instanceof String)) {
            throw new Error("Expected the field `duration` to be a primitive type in the JSON string but got " + data['duration']);
        }
        // ensure the json data is a string
        if (data['endTime'] && !(typeof data['endTime'] === 'string' || data['endTime'] instanceof String)) {
            throw new Error("Expected the field `endTime` to be a primitive type in the JSON string but got " + data['endTime']);
        }
        // validate the optional field `error`
        if (data['error']) { // data not null
          Status.validateJSON(data['error']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['phase'] && !(typeof data['phase'] === 'string' || data['phase'] instanceof String)) {
            throw new Error("Expected the field `phase` to be a primitive type in the JSON string but got " + data['phase']);
        }
        // validate the optional field `reverseSshConnectivity`
        if (data['reverseSshConnectivity']) { // data not null
          ReverseSshConnectivity.validateJSON(data['reverseSshConnectivity']);
        }
        // ensure the json data is a string
        if (data['source'] && !(typeof data['source'] === 'string' || data['source'] instanceof String)) {
            throw new Error("Expected the field `source` to be a primitive type in the JSON string but got " + data['source']);
        }
        // validate the optional field `sourceDatabase`
        if (data['sourceDatabase']) { // data not null
          DatabaseType.validateJSON(data['sourceDatabase']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['updateTime'] && !(typeof data['updateTime'] === 'string' || data['updateTime'] instanceof String)) {
            throw new Error("Expected the field `updateTime` to be a primitive type in the JSON string but got " + data['updateTime']);
        }
        // validate the optional field `vpcPeeringConnectivity`
        if (data['vpcPeeringConnectivity']) { // data not null
          VpcPeeringConnectivity.validateJSON(data['vpcPeeringConnectivity']);
        }

        return true;
    }


}



/**
 * Output only. The timestamp when the migration job resource was created. A timestamp in RFC3339 UTC \"Zulu\" format, accurate to nanoseconds. Example: \"2014-10-02T15:01:23.045123456Z\".
 * @member {String} createTime
 */
MigrationJob.prototype['createTime'] = undefined;

/**
 * Required. The resource name (URI) of the destination connection profile.
 * @member {String} destination
 */
MigrationJob.prototype['destination'] = undefined;

/**
 * @member {module:model/DatabaseType} destinationDatabase
 */
MigrationJob.prototype['destinationDatabase'] = undefined;

/**
 * The migration job display name.
 * @member {String} displayName
 */
MigrationJob.prototype['displayName'] = undefined;

/**
 * The path to the dump file in Google Cloud Storage, in the format: (gs://[BUCKET_NAME]/[OBJECT_NAME]).
 * @member {String} dumpPath
 */
MigrationJob.prototype['dumpPath'] = undefined;

/**
 * Output only. The duration of the migration job (in seconds). A duration in seconds with up to nine fractional digits, terminated by 's'. Example: \"3.5s\".
 * @member {String} duration
 */
MigrationJob.prototype['duration'] = undefined;

/**
 * Output only. If the migration job is completed, the time when it was completed.
 * @member {String} endTime
 */
MigrationJob.prototype['endTime'] = undefined;

/**
 * @member {module:model/Status} error
 */
MigrationJob.prototype['error'] = undefined;

/**
 * The resource labels for migration job to use to annotate any related underlying resources such as Compute Engine VMs. An object containing a list of \"key\": \"value\" pairs. Example: `{ \"name\": \"wrench\", \"mass\": \"1.3kg\", \"count\": \"3\" }`.
 * @member {Object.<String, String>} labels
 */
MigrationJob.prototype['labels'] = undefined;

/**
 * The name (URI) of this migration job resource, in the form of: projects/{project}/locations/{location}/migrationJobs/{migrationJob}.
 * @member {String} name
 */
MigrationJob.prototype['name'] = undefined;

/**
 * Output only. The current migration job phase.
 * @member {module:model/MigrationJob.PhaseEnum} phase
 */
MigrationJob.prototype['phase'] = undefined;

/**
 * @member {module:model/ReverseSshConnectivity} reverseSshConnectivity
 */
MigrationJob.prototype['reverseSshConnectivity'] = undefined;

/**
 * Required. The resource name (URI) of the source connection profile.
 * @member {String} source
 */
MigrationJob.prototype['source'] = undefined;

/**
 * @member {module:model/DatabaseType} sourceDatabase
 */
MigrationJob.prototype['sourceDatabase'] = undefined;

/**
 * The current migration job state.
 * @member {module:model/MigrationJob.StateEnum} state
 */
MigrationJob.prototype['state'] = undefined;

/**
 * The source database will allow incoming connections from the destination database's public IP. You can retrieve the Cloud SQL instance's public IP from the Cloud SQL console or using Cloud SQL APIs. No additional configuration is required.
 * @member {Object} staticIpConnectivity
 */
MigrationJob.prototype['staticIpConnectivity'] = undefined;

/**
 * Required. The migration job type.
 * @member {module:model/MigrationJob.TypeEnum} type
 */
MigrationJob.prototype['type'] = undefined;

/**
 * Output only. The timestamp when the migration job resource was last updated. A timestamp in RFC3339 UTC \"Zulu\" format, accurate to nanoseconds. Example: \"2014-10-02T15:01:23.045123456Z\".
 * @member {String} updateTime
 */
MigrationJob.prototype['updateTime'] = undefined;

/**
 * @member {module:model/VpcPeeringConnectivity} vpcPeeringConnectivity
 */
MigrationJob.prototype['vpcPeeringConnectivity'] = undefined;





/**
 * Allowed values for the <code>phase</code> property.
 * @enum {String}
 * @readonly
 */
MigrationJob['PhaseEnum'] = {

    /**
     * value: "PHASE_UNSPECIFIED"
     * @const
     */
    "PHASE_UNSPECIFIED": "PHASE_UNSPECIFIED",

    /**
     * value: "FULL_DUMP"
     * @const
     */
    "FULL_DUMP": "FULL_DUMP",

    /**
     * value: "CDC"
     * @const
     */
    "CDC": "CDC",

    /**
     * value: "PROMOTE_IN_PROGRESS"
     * @const
     */
    "PROMOTE_IN_PROGRESS": "PROMOTE_IN_PROGRESS",

    /**
     * value: "WAITING_FOR_SOURCE_WRITES_TO_STOP"
     * @const
     */
    "WAITING_FOR_SOURCE_WRITES_TO_STOP": "WAITING_FOR_SOURCE_WRITES_TO_STOP",

    /**
     * value: "PREPARING_THE_DUMP"
     * @const
     */
    "PREPARING_THE_DUMP": "PREPARING_THE_DUMP"
};


/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
MigrationJob['StateEnum'] = {

    /**
     * value: "STATE_UNSPECIFIED"
     * @const
     */
    "STATE_UNSPECIFIED": "STATE_UNSPECIFIED",

    /**
     * value: "MAINTENANCE"
     * @const
     */
    "MAINTENANCE": "MAINTENANCE",

    /**
     * value: "DRAFT"
     * @const
     */
    "DRAFT": "DRAFT",

    /**
     * value: "CREATING"
     * @const
     */
    "CREATING": "CREATING",

    /**
     * value: "NOT_STARTED"
     * @const
     */
    "NOT_STARTED": "NOT_STARTED",

    /**
     * value: "RUNNING"
     * @const
     */
    "RUNNING": "RUNNING",

    /**
     * value: "FAILED"
     * @const
     */
    "FAILED": "FAILED",

    /**
     * value: "COMPLETED"
     * @const
     */
    "COMPLETED": "COMPLETED",

    /**
     * value: "DELETING"
     * @const
     */
    "DELETING": "DELETING",

    /**
     * value: "STOPPING"
     * @const
     */
    "STOPPING": "STOPPING",

    /**
     * value: "STOPPED"
     * @const
     */
    "STOPPED": "STOPPED",

    /**
     * value: "DELETED"
     * @const
     */
    "DELETED": "DELETED",

    /**
     * value: "UPDATING"
     * @const
     */
    "UPDATING": "UPDATING",

    /**
     * value: "STARTING"
     * @const
     */
    "STARTING": "STARTING",

    /**
     * value: "RESTARTING"
     * @const
     */
    "RESTARTING": "RESTARTING",

    /**
     * value: "RESUMING"
     * @const
     */
    "RESUMING": "RESUMING"
};


/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
MigrationJob['TypeEnum'] = {

    /**
     * value: "TYPE_UNSPECIFIED"
     * @const
     */
    "TYPE_UNSPECIFIED": "TYPE_UNSPECIFIED",

    /**
     * value: "ONE_TIME"
     * @const
     */
    "ONE_TIME": "ONE_TIME",

    /**
     * value: "CONTINUOUS"
     * @const
     */
    "CONTINUOUS": "CONTINUOUS"
};



export default MigrationJob;

