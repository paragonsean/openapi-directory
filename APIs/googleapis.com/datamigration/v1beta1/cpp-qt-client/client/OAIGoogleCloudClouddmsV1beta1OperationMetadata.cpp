/**
 * Database Migration API
 * Manage Cloud Database Migration Service resources on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudClouddmsV1beta1OperationMetadata.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudClouddmsV1beta1OperationMetadata::OAIGoogleCloudClouddmsV1beta1OperationMetadata(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudClouddmsV1beta1OperationMetadata::OAIGoogleCloudClouddmsV1beta1OperationMetadata() {
    this->initializeModel();
}

OAIGoogleCloudClouddmsV1beta1OperationMetadata::~OAIGoogleCloudClouddmsV1beta1OperationMetadata() {}

void OAIGoogleCloudClouddmsV1beta1OperationMetadata::initializeModel() {

    m_api_version_isSet = false;
    m_api_version_isValid = false;

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_end_time_isSet = false;
    m_end_time_isValid = false;

    m_requested_cancellation_isSet = false;
    m_requested_cancellation_isValid = false;

    m_status_message_isSet = false;
    m_status_message_isValid = false;

    m_target_isSet = false;
    m_target_isValid = false;

    m_verb_isSet = false;
    m_verb_isValid = false;
}

void OAIGoogleCloudClouddmsV1beta1OperationMetadata::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudClouddmsV1beta1OperationMetadata::fromJsonObject(QJsonObject json) {

    m_api_version_isValid = ::OpenAPI::fromJsonValue(m_api_version, json[QString("apiVersion")]);
    m_api_version_isSet = !json[QString("apiVersion")].isNull() && m_api_version_isValid;

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_end_time_isValid = ::OpenAPI::fromJsonValue(m_end_time, json[QString("endTime")]);
    m_end_time_isSet = !json[QString("endTime")].isNull() && m_end_time_isValid;

    m_requested_cancellation_isValid = ::OpenAPI::fromJsonValue(m_requested_cancellation, json[QString("requestedCancellation")]);
    m_requested_cancellation_isSet = !json[QString("requestedCancellation")].isNull() && m_requested_cancellation_isValid;

    m_status_message_isValid = ::OpenAPI::fromJsonValue(m_status_message, json[QString("statusMessage")]);
    m_status_message_isSet = !json[QString("statusMessage")].isNull() && m_status_message_isValid;

    m_target_isValid = ::OpenAPI::fromJsonValue(m_target, json[QString("target")]);
    m_target_isSet = !json[QString("target")].isNull() && m_target_isValid;

    m_verb_isValid = ::OpenAPI::fromJsonValue(m_verb, json[QString("verb")]);
    m_verb_isSet = !json[QString("verb")].isNull() && m_verb_isValid;
}

QString OAIGoogleCloudClouddmsV1beta1OperationMetadata::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudClouddmsV1beta1OperationMetadata::asJsonObject() const {
    QJsonObject obj;
    if (m_api_version_isSet) {
        obj.insert(QString("apiVersion"), ::OpenAPI::toJsonValue(m_api_version));
    }
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_end_time_isSet) {
        obj.insert(QString("endTime"), ::OpenAPI::toJsonValue(m_end_time));
    }
    if (m_requested_cancellation_isSet) {
        obj.insert(QString("requestedCancellation"), ::OpenAPI::toJsonValue(m_requested_cancellation));
    }
    if (m_status_message_isSet) {
        obj.insert(QString("statusMessage"), ::OpenAPI::toJsonValue(m_status_message));
    }
    if (m_target_isSet) {
        obj.insert(QString("target"), ::OpenAPI::toJsonValue(m_target));
    }
    if (m_verb_isSet) {
        obj.insert(QString("verb"), ::OpenAPI::toJsonValue(m_verb));
    }
    return obj;
}

QString OAIGoogleCloudClouddmsV1beta1OperationMetadata::getApiVersion() const {
    return m_api_version;
}
void OAIGoogleCloudClouddmsV1beta1OperationMetadata::setApiVersion(const QString &api_version) {
    m_api_version = api_version;
    m_api_version_isSet = true;
}

bool OAIGoogleCloudClouddmsV1beta1OperationMetadata::is_api_version_Set() const{
    return m_api_version_isSet;
}

bool OAIGoogleCloudClouddmsV1beta1OperationMetadata::is_api_version_Valid() const{
    return m_api_version_isValid;
}

QString OAIGoogleCloudClouddmsV1beta1OperationMetadata::getCreateTime() const {
    return m_create_time;
}
void OAIGoogleCloudClouddmsV1beta1OperationMetadata::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIGoogleCloudClouddmsV1beta1OperationMetadata::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIGoogleCloudClouddmsV1beta1OperationMetadata::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QString OAIGoogleCloudClouddmsV1beta1OperationMetadata::getEndTime() const {
    return m_end_time;
}
void OAIGoogleCloudClouddmsV1beta1OperationMetadata::setEndTime(const QString &end_time) {
    m_end_time = end_time;
    m_end_time_isSet = true;
}

bool OAIGoogleCloudClouddmsV1beta1OperationMetadata::is_end_time_Set() const{
    return m_end_time_isSet;
}

bool OAIGoogleCloudClouddmsV1beta1OperationMetadata::is_end_time_Valid() const{
    return m_end_time_isValid;
}

bool OAIGoogleCloudClouddmsV1beta1OperationMetadata::isRequestedCancellation() const {
    return m_requested_cancellation;
}
void OAIGoogleCloudClouddmsV1beta1OperationMetadata::setRequestedCancellation(const bool &requested_cancellation) {
    m_requested_cancellation = requested_cancellation;
    m_requested_cancellation_isSet = true;
}

bool OAIGoogleCloudClouddmsV1beta1OperationMetadata::is_requested_cancellation_Set() const{
    return m_requested_cancellation_isSet;
}

bool OAIGoogleCloudClouddmsV1beta1OperationMetadata::is_requested_cancellation_Valid() const{
    return m_requested_cancellation_isValid;
}

QString OAIGoogleCloudClouddmsV1beta1OperationMetadata::getStatusMessage() const {
    return m_status_message;
}
void OAIGoogleCloudClouddmsV1beta1OperationMetadata::setStatusMessage(const QString &status_message) {
    m_status_message = status_message;
    m_status_message_isSet = true;
}

bool OAIGoogleCloudClouddmsV1beta1OperationMetadata::is_status_message_Set() const{
    return m_status_message_isSet;
}

bool OAIGoogleCloudClouddmsV1beta1OperationMetadata::is_status_message_Valid() const{
    return m_status_message_isValid;
}

QString OAIGoogleCloudClouddmsV1beta1OperationMetadata::getTarget() const {
    return m_target;
}
void OAIGoogleCloudClouddmsV1beta1OperationMetadata::setTarget(const QString &target) {
    m_target = target;
    m_target_isSet = true;
}

bool OAIGoogleCloudClouddmsV1beta1OperationMetadata::is_target_Set() const{
    return m_target_isSet;
}

bool OAIGoogleCloudClouddmsV1beta1OperationMetadata::is_target_Valid() const{
    return m_target_isValid;
}

QString OAIGoogleCloudClouddmsV1beta1OperationMetadata::getVerb() const {
    return m_verb;
}
void OAIGoogleCloudClouddmsV1beta1OperationMetadata::setVerb(const QString &verb) {
    m_verb = verb;
    m_verb_isSet = true;
}

bool OAIGoogleCloudClouddmsV1beta1OperationMetadata::is_verb_Set() const{
    return m_verb_isSet;
}

bool OAIGoogleCloudClouddmsV1beta1OperationMetadata::is_verb_Valid() const{
    return m_verb_isValid;
}

bool OAIGoogleCloudClouddmsV1beta1OperationMetadata::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_api_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_requested_cancellation_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_target_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_verb_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudClouddmsV1beta1OperationMetadata::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
