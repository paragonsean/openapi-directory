/**
 * Database Migration API
 * Manage Cloud Database Migration Service resources on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICloudSqlSettings.h
 *
 * Settings for creating a Cloud SQL database instance.
 */

#ifndef OAICloudSqlSettings_H
#define OAICloudSqlSettings_H

#include <QJsonObject>

#include "OAISqlIpConfig.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISqlIpConfig;

class OAICloudSqlSettings : public OAIObject {
public:
    OAICloudSqlSettings();
    OAICloudSqlSettings(QString json);
    ~OAICloudSqlSettings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getActivationPolicy() const;
    void setActivationPolicy(const QString &activation_policy);
    bool is_activation_policy_Set() const;
    bool is_activation_policy_Valid() const;

    bool isAutoStorageIncrease() const;
    void setAutoStorageIncrease(const bool &auto_storage_increase);
    bool is_auto_storage_increase_Set() const;
    bool is_auto_storage_increase_Valid() const;

    QString getDataDiskSizeGb() const;
    void setDataDiskSizeGb(const QString &data_disk_size_gb);
    bool is_data_disk_size_gb_Set() const;
    bool is_data_disk_size_gb_Valid() const;

    QString getDataDiskType() const;
    void setDataDiskType(const QString &data_disk_type);
    bool is_data_disk_type_Set() const;
    bool is_data_disk_type_Valid() const;

    QMap<QString, QString> getDatabaseFlags() const;
    void setDatabaseFlags(const QMap<QString, QString> &database_flags);
    bool is_database_flags_Set() const;
    bool is_database_flags_Valid() const;

    QString getDatabaseVersion() const;
    void setDatabaseVersion(const QString &database_version);
    bool is_database_version_Set() const;
    bool is_database_version_Valid() const;

    OAISqlIpConfig getIpConfig() const;
    void setIpConfig(const OAISqlIpConfig &ip_config);
    bool is_ip_config_Set() const;
    bool is_ip_config_Valid() const;

    QString getRootPassword() const;
    void setRootPassword(const QString &root_password);
    bool is_root_password_Set() const;
    bool is_root_password_Valid() const;

    bool isRootPasswordSet() const;
    void setRootPasswordSet(const bool &root_password_set);
    bool is_root_password_set_Set() const;
    bool is_root_password_set_Valid() const;

    QString getSourceId() const;
    void setSourceId(const QString &source_id);
    bool is_source_id_Set() const;
    bool is_source_id_Valid() const;

    QString getStorageAutoResizeLimit() const;
    void setStorageAutoResizeLimit(const QString &storage_auto_resize_limit);
    bool is_storage_auto_resize_limit_Set() const;
    bool is_storage_auto_resize_limit_Valid() const;

    QString getTier() const;
    void setTier(const QString &tier);
    bool is_tier_Set() const;
    bool is_tier_Valid() const;

    QMap<QString, QString> getUserLabels() const;
    void setUserLabels(const QMap<QString, QString> &user_labels);
    bool is_user_labels_Set() const;
    bool is_user_labels_Valid() const;

    QString getZone() const;
    void setZone(const QString &zone);
    bool is_zone_Set() const;
    bool is_zone_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_activation_policy;
    bool m_activation_policy_isSet;
    bool m_activation_policy_isValid;

    bool m_auto_storage_increase;
    bool m_auto_storage_increase_isSet;
    bool m_auto_storage_increase_isValid;

    QString m_data_disk_size_gb;
    bool m_data_disk_size_gb_isSet;
    bool m_data_disk_size_gb_isValid;

    QString m_data_disk_type;
    bool m_data_disk_type_isSet;
    bool m_data_disk_type_isValid;

    QMap<QString, QString> m_database_flags;
    bool m_database_flags_isSet;
    bool m_database_flags_isValid;

    QString m_database_version;
    bool m_database_version_isSet;
    bool m_database_version_isValid;

    OAISqlIpConfig m_ip_config;
    bool m_ip_config_isSet;
    bool m_ip_config_isValid;

    QString m_root_password;
    bool m_root_password_isSet;
    bool m_root_password_isValid;

    bool m_root_password_set;
    bool m_root_password_set_isSet;
    bool m_root_password_set_isValid;

    QString m_source_id;
    bool m_source_id_isSet;
    bool m_source_id_isValid;

    QString m_storage_auto_resize_limit;
    bool m_storage_auto_resize_limit_isSet;
    bool m_storage_auto_resize_limit_isValid;

    QString m_tier;
    bool m_tier_isSet;
    bool m_tier_isValid;

    QMap<QString, QString> m_user_labels;
    bool m_user_labels_isSet;
    bool m_user_labels_isValid;

    QString m_zone;
    bool m_zone_isSet;
    bool m_zone_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICloudSqlSettings)

#endif // OAICloudSqlSettings_H
