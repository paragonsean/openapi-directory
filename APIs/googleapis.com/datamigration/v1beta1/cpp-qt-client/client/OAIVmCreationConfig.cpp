/**
 * Database Migration API
 * Manage Cloud Database Migration Service resources on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVmCreationConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVmCreationConfig::OAIVmCreationConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVmCreationConfig::OAIVmCreationConfig() {
    this->initializeModel();
}

OAIVmCreationConfig::~OAIVmCreationConfig() {}

void OAIVmCreationConfig::initializeModel() {

    m_subnet_isSet = false;
    m_subnet_isValid = false;

    m_vm_machine_type_isSet = false;
    m_vm_machine_type_isValid = false;

    m_vm_zone_isSet = false;
    m_vm_zone_isValid = false;
}

void OAIVmCreationConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIVmCreationConfig::fromJsonObject(QJsonObject json) {

    m_subnet_isValid = ::OpenAPI::fromJsonValue(m_subnet, json[QString("subnet")]);
    m_subnet_isSet = !json[QString("subnet")].isNull() && m_subnet_isValid;

    m_vm_machine_type_isValid = ::OpenAPI::fromJsonValue(m_vm_machine_type, json[QString("vmMachineType")]);
    m_vm_machine_type_isSet = !json[QString("vmMachineType")].isNull() && m_vm_machine_type_isValid;

    m_vm_zone_isValid = ::OpenAPI::fromJsonValue(m_vm_zone, json[QString("vmZone")]);
    m_vm_zone_isSet = !json[QString("vmZone")].isNull() && m_vm_zone_isValid;
}

QString OAIVmCreationConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIVmCreationConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_subnet_isSet) {
        obj.insert(QString("subnet"), ::OpenAPI::toJsonValue(m_subnet));
    }
    if (m_vm_machine_type_isSet) {
        obj.insert(QString("vmMachineType"), ::OpenAPI::toJsonValue(m_vm_machine_type));
    }
    if (m_vm_zone_isSet) {
        obj.insert(QString("vmZone"), ::OpenAPI::toJsonValue(m_vm_zone));
    }
    return obj;
}

QString OAIVmCreationConfig::getSubnet() const {
    return m_subnet;
}
void OAIVmCreationConfig::setSubnet(const QString &subnet) {
    m_subnet = subnet;
    m_subnet_isSet = true;
}

bool OAIVmCreationConfig::is_subnet_Set() const{
    return m_subnet_isSet;
}

bool OAIVmCreationConfig::is_subnet_Valid() const{
    return m_subnet_isValid;
}

QString OAIVmCreationConfig::getVmMachineType() const {
    return m_vm_machine_type;
}
void OAIVmCreationConfig::setVmMachineType(const QString &vm_machine_type) {
    m_vm_machine_type = vm_machine_type;
    m_vm_machine_type_isSet = true;
}

bool OAIVmCreationConfig::is_vm_machine_type_Set() const{
    return m_vm_machine_type_isSet;
}

bool OAIVmCreationConfig::is_vm_machine_type_Valid() const{
    return m_vm_machine_type_isValid;
}

QString OAIVmCreationConfig::getVmZone() const {
    return m_vm_zone;
}
void OAIVmCreationConfig::setVmZone(const QString &vm_zone) {
    m_vm_zone = vm_zone;
    m_vm_zone_isSet = true;
}

bool OAIVmCreationConfig::is_vm_zone_Set() const{
    return m_vm_zone_isSet;
}

bool OAIVmCreationConfig::is_vm_zone_Valid() const{
    return m_vm_zone_isValid;
}

bool OAIVmCreationConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_subnet_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_vm_machine_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_vm_zone_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIVmCreationConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
