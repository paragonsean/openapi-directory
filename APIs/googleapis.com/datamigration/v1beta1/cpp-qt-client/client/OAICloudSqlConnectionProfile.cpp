/**
 * Database Migration API
 * Manage Cloud Database Migration Service resources on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICloudSqlConnectionProfile.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICloudSqlConnectionProfile::OAICloudSqlConnectionProfile(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICloudSqlConnectionProfile::OAICloudSqlConnectionProfile() {
    this->initializeModel();
}

OAICloudSqlConnectionProfile::~OAICloudSqlConnectionProfile() {}

void OAICloudSqlConnectionProfile::initializeModel() {

    m_cloud_sql_id_isSet = false;
    m_cloud_sql_id_isValid = false;

    m_private_ip_isSet = false;
    m_private_ip_isValid = false;

    m_public_ip_isSet = false;
    m_public_ip_isValid = false;

    m_settings_isSet = false;
    m_settings_isValid = false;
}

void OAICloudSqlConnectionProfile::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICloudSqlConnectionProfile::fromJsonObject(QJsonObject json) {

    m_cloud_sql_id_isValid = ::OpenAPI::fromJsonValue(m_cloud_sql_id, json[QString("cloudSqlId")]);
    m_cloud_sql_id_isSet = !json[QString("cloudSqlId")].isNull() && m_cloud_sql_id_isValid;

    m_private_ip_isValid = ::OpenAPI::fromJsonValue(m_private_ip, json[QString("privateIp")]);
    m_private_ip_isSet = !json[QString("privateIp")].isNull() && m_private_ip_isValid;

    m_public_ip_isValid = ::OpenAPI::fromJsonValue(m_public_ip, json[QString("publicIp")]);
    m_public_ip_isSet = !json[QString("publicIp")].isNull() && m_public_ip_isValid;

    m_settings_isValid = ::OpenAPI::fromJsonValue(m_settings, json[QString("settings")]);
    m_settings_isSet = !json[QString("settings")].isNull() && m_settings_isValid;
}

QString OAICloudSqlConnectionProfile::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICloudSqlConnectionProfile::asJsonObject() const {
    QJsonObject obj;
    if (m_cloud_sql_id_isSet) {
        obj.insert(QString("cloudSqlId"), ::OpenAPI::toJsonValue(m_cloud_sql_id));
    }
    if (m_private_ip_isSet) {
        obj.insert(QString("privateIp"), ::OpenAPI::toJsonValue(m_private_ip));
    }
    if (m_public_ip_isSet) {
        obj.insert(QString("publicIp"), ::OpenAPI::toJsonValue(m_public_ip));
    }
    if (m_settings.isSet()) {
        obj.insert(QString("settings"), ::OpenAPI::toJsonValue(m_settings));
    }
    return obj;
}

QString OAICloudSqlConnectionProfile::getCloudSqlId() const {
    return m_cloud_sql_id;
}
void OAICloudSqlConnectionProfile::setCloudSqlId(const QString &cloud_sql_id) {
    m_cloud_sql_id = cloud_sql_id;
    m_cloud_sql_id_isSet = true;
}

bool OAICloudSqlConnectionProfile::is_cloud_sql_id_Set() const{
    return m_cloud_sql_id_isSet;
}

bool OAICloudSqlConnectionProfile::is_cloud_sql_id_Valid() const{
    return m_cloud_sql_id_isValid;
}

QString OAICloudSqlConnectionProfile::getPrivateIp() const {
    return m_private_ip;
}
void OAICloudSqlConnectionProfile::setPrivateIp(const QString &private_ip) {
    m_private_ip = private_ip;
    m_private_ip_isSet = true;
}

bool OAICloudSqlConnectionProfile::is_private_ip_Set() const{
    return m_private_ip_isSet;
}

bool OAICloudSqlConnectionProfile::is_private_ip_Valid() const{
    return m_private_ip_isValid;
}

QString OAICloudSqlConnectionProfile::getPublicIp() const {
    return m_public_ip;
}
void OAICloudSqlConnectionProfile::setPublicIp(const QString &public_ip) {
    m_public_ip = public_ip;
    m_public_ip_isSet = true;
}

bool OAICloudSqlConnectionProfile::is_public_ip_Set() const{
    return m_public_ip_isSet;
}

bool OAICloudSqlConnectionProfile::is_public_ip_Valid() const{
    return m_public_ip_isValid;
}

OAICloudSqlSettings OAICloudSqlConnectionProfile::getSettings() const {
    return m_settings;
}
void OAICloudSqlConnectionProfile::setSettings(const OAICloudSqlSettings &settings) {
    m_settings = settings;
    m_settings_isSet = true;
}

bool OAICloudSqlConnectionProfile::is_settings_Set() const{
    return m_settings_isSet;
}

bool OAICloudSqlConnectionProfile::is_settings_Valid() const{
    return m_settings_isValid;
}

bool OAICloudSqlConnectionProfile::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cloud_sql_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_private_ip_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_public_ip_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICloudSqlConnectionProfile::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
