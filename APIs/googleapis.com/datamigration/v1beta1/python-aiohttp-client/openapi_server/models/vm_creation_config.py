# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class VmCreationConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, subnet: str=None, vm_machine_type: str=None, vm_zone: str=None):
        """VmCreationConfig - a model defined in OpenAPI

        :param subnet: The subnet of this VmCreationConfig.
        :param vm_machine_type: The vm_machine_type of this VmCreationConfig.
        :param vm_zone: The vm_zone of this VmCreationConfig.
        """
        self.openapi_types = {
            'subnet': str,
            'vm_machine_type': str,
            'vm_zone': str
        }

        self.attribute_map = {
            'subnet': 'subnet',
            'vm_machine_type': 'vmMachineType',
            'vm_zone': 'vmZone'
        }

        self._subnet = subnet
        self._vm_machine_type = vm_machine_type
        self._vm_zone = vm_zone

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VmCreationConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VmCreationConfig of this VmCreationConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def subnet(self):
        """Gets the subnet of this VmCreationConfig.

        The subnet name the vm needs to be created in.

        :return: The subnet of this VmCreationConfig.
        :rtype: str
        """
        return self._subnet

    @subnet.setter
    def subnet(self, subnet):
        """Sets the subnet of this VmCreationConfig.

        The subnet name the vm needs to be created in.

        :param subnet: The subnet of this VmCreationConfig.
        :type subnet: str
        """

        self._subnet = subnet

    @property
    def vm_machine_type(self):
        """Gets the vm_machine_type of this VmCreationConfig.

        Required. VM instance machine type to create.

        :return: The vm_machine_type of this VmCreationConfig.
        :rtype: str
        """
        return self._vm_machine_type

    @vm_machine_type.setter
    def vm_machine_type(self, vm_machine_type):
        """Sets the vm_machine_type of this VmCreationConfig.

        Required. VM instance machine type to create.

        :param vm_machine_type: The vm_machine_type of this VmCreationConfig.
        :type vm_machine_type: str
        """

        self._vm_machine_type = vm_machine_type

    @property
    def vm_zone(self):
        """Gets the vm_zone of this VmCreationConfig.

        The Google Cloud Platform zone to create the VM in.

        :return: The vm_zone of this VmCreationConfig.
        :rtype: str
        """
        return self._vm_zone

    @vm_zone.setter
    def vm_zone(self, vm_zone):
        """Sets the vm_zone of this VmCreationConfig.

        The Google Cloud Platform zone to create the VM in.

        :param vm_zone: The vm_zone of this VmCreationConfig.
        :type vm_zone: str
        """

        self._vm_zone = vm_zone
