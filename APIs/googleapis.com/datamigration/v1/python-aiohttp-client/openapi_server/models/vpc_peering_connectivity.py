# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class VpcPeeringConnectivity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, vpc: str=None):
        """VpcPeeringConnectivity - a model defined in OpenAPI

        :param vpc: The vpc of this VpcPeeringConnectivity.
        """
        self.openapi_types = {
            'vpc': str
        }

        self.attribute_map = {
            'vpc': 'vpc'
        }

        self._vpc = vpc

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VpcPeeringConnectivity':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VpcPeeringConnectivity of this VpcPeeringConnectivity.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def vpc(self):
        """Gets the vpc of this VpcPeeringConnectivity.

        The name of the VPC network to peer with the Cloud SQL private network.

        :return: The vpc of this VpcPeeringConnectivity.
        :rtype: str
        """
        return self._vpc

    @vpc.setter
    def vpc(self, vpc):
        """Sets the vpc of this VpcPeeringConnectivity.

        The name of the VPC network to peer with the Cloud SQL private network.

        :param vpc: The vpc of this VpcPeeringConnectivity.
        :type vpc: str
        """

        self._vpc = vpc
