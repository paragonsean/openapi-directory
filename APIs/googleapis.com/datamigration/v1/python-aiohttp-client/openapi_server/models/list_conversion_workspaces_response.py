# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.conversion_workspace import ConversionWorkspace
from openapi_server import util


class ListConversionWorkspacesResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, conversion_workspaces: List[ConversionWorkspace]=None, next_page_token: str=None, unreachable: List[str]=None):
        """ListConversionWorkspacesResponse - a model defined in OpenAPI

        :param conversion_workspaces: The conversion_workspaces of this ListConversionWorkspacesResponse.
        :param next_page_token: The next_page_token of this ListConversionWorkspacesResponse.
        :param unreachable: The unreachable of this ListConversionWorkspacesResponse.
        """
        self.openapi_types = {
            'conversion_workspaces': List[ConversionWorkspace],
            'next_page_token': str,
            'unreachable': List[str]
        }

        self.attribute_map = {
            'conversion_workspaces': 'conversionWorkspaces',
            'next_page_token': 'nextPageToken',
            'unreachable': 'unreachable'
        }

        self._conversion_workspaces = conversion_workspaces
        self._next_page_token = next_page_token
        self._unreachable = unreachable

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListConversionWorkspacesResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListConversionWorkspacesResponse of this ListConversionWorkspacesResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def conversion_workspaces(self):
        """Gets the conversion_workspaces of this ListConversionWorkspacesResponse.

        The list of conversion workspace objects.

        :return: The conversion_workspaces of this ListConversionWorkspacesResponse.
        :rtype: List[ConversionWorkspace]
        """
        return self._conversion_workspaces

    @conversion_workspaces.setter
    def conversion_workspaces(self, conversion_workspaces):
        """Sets the conversion_workspaces of this ListConversionWorkspacesResponse.

        The list of conversion workspace objects.

        :param conversion_workspaces: The conversion_workspaces of this ListConversionWorkspacesResponse.
        :type conversion_workspaces: List[ConversionWorkspace]
        """

        self._conversion_workspaces = conversion_workspaces

    @property
    def next_page_token(self):
        """Gets the next_page_token of this ListConversionWorkspacesResponse.

        A token which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.

        :return: The next_page_token of this ListConversionWorkspacesResponse.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this ListConversionWorkspacesResponse.

        A token which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.

        :param next_page_token: The next_page_token of this ListConversionWorkspacesResponse.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token

    @property
    def unreachable(self):
        """Gets the unreachable of this ListConversionWorkspacesResponse.

        Locations that could not be reached.

        :return: The unreachable of this ListConversionWorkspacesResponse.
        :rtype: List[str]
        """
        return self._unreachable

    @unreachable.setter
    def unreachable(self, unreachable):
        """Sets the unreachable of this ListConversionWorkspacesResponse.

        Locations that could not be reached.

        :param unreachable: The unreachable of this ListConversionWorkspacesResponse.
        :type unreachable: List[str]
        """

        self._unreachable = unreachable
