# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GenerateTcpProxyScriptRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, vm_machine_type: str=None, vm_name: str=None, vm_subnet: str=None, vm_zone: str=None):
        """GenerateTcpProxyScriptRequest - a model defined in OpenAPI

        :param vm_machine_type: The vm_machine_type of this GenerateTcpProxyScriptRequest.
        :param vm_name: The vm_name of this GenerateTcpProxyScriptRequest.
        :param vm_subnet: The vm_subnet of this GenerateTcpProxyScriptRequest.
        :param vm_zone: The vm_zone of this GenerateTcpProxyScriptRequest.
        """
        self.openapi_types = {
            'vm_machine_type': str,
            'vm_name': str,
            'vm_subnet': str,
            'vm_zone': str
        }

        self.attribute_map = {
            'vm_machine_type': 'vmMachineType',
            'vm_name': 'vmName',
            'vm_subnet': 'vmSubnet',
            'vm_zone': 'vmZone'
        }

        self._vm_machine_type = vm_machine_type
        self._vm_name = vm_name
        self._vm_subnet = vm_subnet
        self._vm_zone = vm_zone

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GenerateTcpProxyScriptRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GenerateTcpProxyScriptRequest of this GenerateTcpProxyScriptRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def vm_machine_type(self):
        """Gets the vm_machine_type of this GenerateTcpProxyScriptRequest.

        Required. The type of the Compute instance that will host the proxy.

        :return: The vm_machine_type of this GenerateTcpProxyScriptRequest.
        :rtype: str
        """
        return self._vm_machine_type

    @vm_machine_type.setter
    def vm_machine_type(self, vm_machine_type):
        """Sets the vm_machine_type of this GenerateTcpProxyScriptRequest.

        Required. The type of the Compute instance that will host the proxy.

        :param vm_machine_type: The vm_machine_type of this GenerateTcpProxyScriptRequest.
        :type vm_machine_type: str
        """

        self._vm_machine_type = vm_machine_type

    @property
    def vm_name(self):
        """Gets the vm_name of this GenerateTcpProxyScriptRequest.

        Required. The name of the Compute instance that will host the proxy.

        :return: The vm_name of this GenerateTcpProxyScriptRequest.
        :rtype: str
        """
        return self._vm_name

    @vm_name.setter
    def vm_name(self, vm_name):
        """Sets the vm_name of this GenerateTcpProxyScriptRequest.

        Required. The name of the Compute instance that will host the proxy.

        :param vm_name: The vm_name of this GenerateTcpProxyScriptRequest.
        :type vm_name: str
        """

        self._vm_name = vm_name

    @property
    def vm_subnet(self):
        """Gets the vm_subnet of this GenerateTcpProxyScriptRequest.

        Required. The name of the subnet the Compute instance will use for private connectivity. Must be supplied in the form of projects/{project}/regions/{region}/subnetworks/{subnetwork}. Note: the region for the subnet must match the Compute instance region.

        :return: The vm_subnet of this GenerateTcpProxyScriptRequest.
        :rtype: str
        """
        return self._vm_subnet

    @vm_subnet.setter
    def vm_subnet(self, vm_subnet):
        """Sets the vm_subnet of this GenerateTcpProxyScriptRequest.

        Required. The name of the subnet the Compute instance will use for private connectivity. Must be supplied in the form of projects/{project}/regions/{region}/subnetworks/{subnetwork}. Note: the region for the subnet must match the Compute instance region.

        :param vm_subnet: The vm_subnet of this GenerateTcpProxyScriptRequest.
        :type vm_subnet: str
        """

        self._vm_subnet = vm_subnet

    @property
    def vm_zone(self):
        """Gets the vm_zone of this GenerateTcpProxyScriptRequest.

        Optional. The Google Cloud Platform zone to create the VM in. The fully qualified name of the zone must be specified, including the region name, for example \"us-central1-b\". If not specified, uses the \"-b\" zone of the destination Connection Profile's region.

        :return: The vm_zone of this GenerateTcpProxyScriptRequest.
        :rtype: str
        """
        return self._vm_zone

    @vm_zone.setter
    def vm_zone(self, vm_zone):
        """Sets the vm_zone of this GenerateTcpProxyScriptRequest.

        Optional. The Google Cloud Platform zone to create the VM in. The fully qualified name of the zone must be specified, including the region name, for example \"us-central1-b\". If not specified, uses the \"-b\" zone of the destination Connection Profile's region.

        :param vm_zone: The vm_zone of this GenerateTcpProxyScriptRequest.
        :type vm_zone: str
        """

        self._vm_zone = vm_zone
