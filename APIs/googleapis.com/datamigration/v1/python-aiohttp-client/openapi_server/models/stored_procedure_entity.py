# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class StoredProcedureEntity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, custom_features: Dict[str, object]=None, sql_code: str=None):
        """StoredProcedureEntity - a model defined in OpenAPI

        :param custom_features: The custom_features of this StoredProcedureEntity.
        :param sql_code: The sql_code of this StoredProcedureEntity.
        """
        self.openapi_types = {
            'custom_features': Dict[str, object],
            'sql_code': str
        }

        self.attribute_map = {
            'custom_features': 'customFeatures',
            'sql_code': 'sqlCode'
        }

        self._custom_features = custom_features
        self._sql_code = sql_code

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StoredProcedureEntity':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StoredProcedureEntity of this StoredProcedureEntity.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def custom_features(self):
        """Gets the custom_features of this StoredProcedureEntity.

        Custom engine specific features.

        :return: The custom_features of this StoredProcedureEntity.
        :rtype: Dict[str, object]
        """
        return self._custom_features

    @custom_features.setter
    def custom_features(self, custom_features):
        """Sets the custom_features of this StoredProcedureEntity.

        Custom engine specific features.

        :param custom_features: The custom_features of this StoredProcedureEntity.
        :type custom_features: Dict[str, object]
        """

        self._custom_features = custom_features

    @property
    def sql_code(self):
        """Gets the sql_code of this StoredProcedureEntity.

        The SQL code which creates the stored procedure.

        :return: The sql_code of this StoredProcedureEntity.
        :rtype: str
        """
        return self._sql_code

    @sql_code.setter
    def sql_code(self, sql_code):
        """Sets the sql_code of this StoredProcedureEntity.

        The SQL code which creates the stored procedure.

        :param sql_code: The sql_code of this StoredProcedureEntity.
        :type sql_code: str
        """

        self._sql_code = sql_code
