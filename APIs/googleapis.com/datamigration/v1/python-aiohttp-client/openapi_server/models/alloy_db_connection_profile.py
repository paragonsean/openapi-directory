# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.alloy_db_settings import AlloyDbSettings
from openapi_server import util


class AlloyDbConnectionProfile(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cluster_id: str=None, settings: AlloyDbSettings=None):
        """AlloyDbConnectionProfile - a model defined in OpenAPI

        :param cluster_id: The cluster_id of this AlloyDbConnectionProfile.
        :param settings: The settings of this AlloyDbConnectionProfile.
        """
        self.openapi_types = {
            'cluster_id': str,
            'settings': AlloyDbSettings
        }

        self.attribute_map = {
            'cluster_id': 'clusterId',
            'settings': 'settings'
        }

        self._cluster_id = cluster_id
        self._settings = settings

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AlloyDbConnectionProfile':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AlloyDbConnectionProfile of this AlloyDbConnectionProfile.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cluster_id(self):
        """Gets the cluster_id of this AlloyDbConnectionProfile.

        Required. The AlloyDB cluster ID that this connection profile is associated with.

        :return: The cluster_id of this AlloyDbConnectionProfile.
        :rtype: str
        """
        return self._cluster_id

    @cluster_id.setter
    def cluster_id(self, cluster_id):
        """Sets the cluster_id of this AlloyDbConnectionProfile.

        Required. The AlloyDB cluster ID that this connection profile is associated with.

        :param cluster_id: The cluster_id of this AlloyDbConnectionProfile.
        :type cluster_id: str
        """

        self._cluster_id = cluster_id

    @property
    def settings(self):
        """Gets the settings of this AlloyDbConnectionProfile.


        :return: The settings of this AlloyDbConnectionProfile.
        :rtype: AlloyDbSettings
        """
        return self._settings

    @settings.setter
    def settings(self, settings):
        """Sets the settings of this AlloyDbConnectionProfile.


        :param settings: The settings of this AlloyDbConnectionProfile.
        :type settings: AlloyDbSettings
        """

        self._settings = settings
