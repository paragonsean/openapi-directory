# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SeedJobDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, connection_profile: str=None):
        """SeedJobDetails - a model defined in OpenAPI

        :param connection_profile: The connection_profile of this SeedJobDetails.
        """
        self.openapi_types = {
            'connection_profile': str
        }

        self.attribute_map = {
            'connection_profile': 'connectionProfile'
        }

        self._connection_profile = connection_profile

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SeedJobDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SeedJobDetails of this SeedJobDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def connection_profile(self):
        """Gets the connection_profile of this SeedJobDetails.

        Output only. The connection profile which was used for the seed job.

        :return: The connection_profile of this SeedJobDetails.
        :rtype: str
        """
        return self._connection_profile

    @connection_profile.setter
    def connection_profile(self, connection_profile):
        """Sets the connection_profile of this SeedJobDetails.

        Output only. The connection profile which was used for the seed job.

        :param connection_profile: The connection_profile of this SeedJobDetails.
        :type connection_profile: str
        """

        self._connection_profile = connection_profile
