# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ConvertConversionWorkspaceRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, auto_commit: bool=None, convert_full_path: bool=None, filter: str=None):
        """ConvertConversionWorkspaceRequest - a model defined in OpenAPI

        :param auto_commit: The auto_commit of this ConvertConversionWorkspaceRequest.
        :param convert_full_path: The convert_full_path of this ConvertConversionWorkspaceRequest.
        :param filter: The filter of this ConvertConversionWorkspaceRequest.
        """
        self.openapi_types = {
            'auto_commit': bool,
            'convert_full_path': bool,
            'filter': str
        }

        self.attribute_map = {
            'auto_commit': 'autoCommit',
            'convert_full_path': 'convertFullPath',
            'filter': 'filter'
        }

        self._auto_commit = auto_commit
        self._convert_full_path = convert_full_path
        self._filter = filter

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConvertConversionWorkspaceRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ConvertConversionWorkspaceRequest of this ConvertConversionWorkspaceRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def auto_commit(self):
        """Gets the auto_commit of this ConvertConversionWorkspaceRequest.

        Optional. Specifies whether the conversion workspace is to be committed automatically after the conversion.

        :return: The auto_commit of this ConvertConversionWorkspaceRequest.
        :rtype: bool
        """
        return self._auto_commit

    @auto_commit.setter
    def auto_commit(self, auto_commit):
        """Sets the auto_commit of this ConvertConversionWorkspaceRequest.

        Optional. Specifies whether the conversion workspace is to be committed automatically after the conversion.

        :param auto_commit: The auto_commit of this ConvertConversionWorkspaceRequest.
        :type auto_commit: bool
        """

        self._auto_commit = auto_commit

    @property
    def convert_full_path(self):
        """Gets the convert_full_path of this ConvertConversionWorkspaceRequest.

        Optional. Automatically convert the full entity path for each entity specified by the filter. For example, if the filter specifies a table, that table schema (and database if there is one) will also be converted.

        :return: The convert_full_path of this ConvertConversionWorkspaceRequest.
        :rtype: bool
        """
        return self._convert_full_path

    @convert_full_path.setter
    def convert_full_path(self, convert_full_path):
        """Sets the convert_full_path of this ConvertConversionWorkspaceRequest.

        Optional. Automatically convert the full entity path for each entity specified by the filter. For example, if the filter specifies a table, that table schema (and database if there is one) will also be converted.

        :param convert_full_path: The convert_full_path of this ConvertConversionWorkspaceRequest.
        :type convert_full_path: bool
        """

        self._convert_full_path = convert_full_path

    @property
    def filter(self):
        """Gets the filter of this ConvertConversionWorkspaceRequest.

        Optional. Filter the entities to convert. Leaving this field empty will convert all of the entities. Supports Google AIP-160 style filtering.

        :return: The filter of this ConvertConversionWorkspaceRequest.
        :rtype: str
        """
        return self._filter

    @filter.setter
    def filter(self, filter):
        """Sets the filter of this ConvertConversionWorkspaceRequest.

        Optional. Filter the entities to convert. Leaving this field empty will convert all of the entities. Supports Google AIP-160 style filtering.

        :param filter: The filter of this ConvertConversionWorkspaceRequest.
        :type filter: str
        """

        self._filter = filter
