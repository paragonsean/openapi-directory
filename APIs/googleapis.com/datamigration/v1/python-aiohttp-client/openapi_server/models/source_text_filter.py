# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SourceTextFilter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, source_max_length_filter: str=None, source_min_length_filter: str=None):
        """SourceTextFilter - a model defined in OpenAPI

        :param source_max_length_filter: The source_max_length_filter of this SourceTextFilter.
        :param source_min_length_filter: The source_min_length_filter of this SourceTextFilter.
        """
        self.openapi_types = {
            'source_max_length_filter': str,
            'source_min_length_filter': str
        }

        self.attribute_map = {
            'source_max_length_filter': 'sourceMaxLengthFilter',
            'source_min_length_filter': 'sourceMinLengthFilter'
        }

        self._source_max_length_filter = source_max_length_filter
        self._source_min_length_filter = source_min_length_filter

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SourceTextFilter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SourceTextFilter of this SourceTextFilter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def source_max_length_filter(self):
        """Gets the source_max_length_filter of this SourceTextFilter.

        Optional. The filter will match columns with length smaller than or equal to this number.

        :return: The source_max_length_filter of this SourceTextFilter.
        :rtype: str
        """
        return self._source_max_length_filter

    @source_max_length_filter.setter
    def source_max_length_filter(self, source_max_length_filter):
        """Sets the source_max_length_filter of this SourceTextFilter.

        Optional. The filter will match columns with length smaller than or equal to this number.

        :param source_max_length_filter: The source_max_length_filter of this SourceTextFilter.
        :type source_max_length_filter: str
        """

        self._source_max_length_filter = source_max_length_filter

    @property
    def source_min_length_filter(self):
        """Gets the source_min_length_filter of this SourceTextFilter.

        Optional. The filter will match columns with length greater than or equal to this number.

        :return: The source_min_length_filter of this SourceTextFilter.
        :rtype: str
        """
        return self._source_min_length_filter

    @source_min_length_filter.setter
    def source_min_length_filter(self, source_min_length_filter):
        """Sets the source_min_length_filter of this SourceTextFilter.

        Optional. The filter will match columns with length greater than or equal to this number.

        :param source_min_length_filter: The source_min_length_filter of this SourceTextFilter.
        :type source_min_length_filter: str
        """

        self._source_min_length_filter = source_min_length_filter
