# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RoundToScale(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, scale: int=None):
        """RoundToScale - a model defined in OpenAPI

        :param scale: The scale of this RoundToScale.
        """
        self.openapi_types = {
            'scale': int
        }

        self.attribute_map = {
            'scale': 'scale'
        }

        self._scale = scale

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RoundToScale':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RoundToScale of this RoundToScale.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def scale(self):
        """Gets the scale of this RoundToScale.

        Required. Scale value to be used

        :return: The scale of this RoundToScale.
        :rtype: int
        """
        return self._scale

    @scale.setter
    def scale(self, scale):
        """Sets the scale of this RoundToScale.

        Required. Scale value to be used

        :param scale: The scale of this RoundToScale.
        :type scale: int
        """

        self._scale = scale
