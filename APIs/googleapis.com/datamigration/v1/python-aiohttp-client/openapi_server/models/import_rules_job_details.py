# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ImportRulesJobDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, file_format: str=None, files: List[str]=None):
        """ImportRulesJobDetails - a model defined in OpenAPI

        :param file_format: The file_format of this ImportRulesJobDetails.
        :param files: The files of this ImportRulesJobDetails.
        """
        self.openapi_types = {
            'file_format': str,
            'files': List[str]
        }

        self.attribute_map = {
            'file_format': 'fileFormat',
            'files': 'files'
        }

        self._file_format = file_format
        self._files = files

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ImportRulesJobDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ImportRulesJobDetails of this ImportRulesJobDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def file_format(self):
        """Gets the file_format of this ImportRulesJobDetails.

        Output only. The requested file format.

        :return: The file_format of this ImportRulesJobDetails.
        :rtype: str
        """
        return self._file_format

    @file_format.setter
    def file_format(self, file_format):
        """Sets the file_format of this ImportRulesJobDetails.

        Output only. The requested file format.

        :param file_format: The file_format of this ImportRulesJobDetails.
        :type file_format: str
        """
        allowed_values = ["IMPORT_RULES_FILE_FORMAT_UNSPECIFIED", "IMPORT_RULES_FILE_FORMAT_HARBOUR_BRIDGE_SESSION_FILE", "IMPORT_RULES_FILE_FORMAT_ORATOPG_CONFIG_FILE"]  # noqa: E501
        if file_format not in allowed_values:
            raise ValueError(
                "Invalid value for `file_format` ({0}), must be one of {1}"
                .format(file_format, allowed_values)
            )

        self._file_format = file_format

    @property
    def files(self):
        """Gets the files of this ImportRulesJobDetails.

        Output only. File names used for the import rules job.

        :return: The files of this ImportRulesJobDetails.
        :rtype: List[str]
        """
        return self._files

    @files.setter
    def files(self, files):
        """Sets the files of this ImportRulesJobDetails.

        Output only. File names used for the import rules job.

        :param files: The files of this ImportRulesJobDetails.
        :type files: List[str]
        """

        self._files = files
