# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SourceNumericFilter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, numeric_filter_option: str=None, source_max_precision_filter: int=None, source_max_scale_filter: int=None, source_min_precision_filter: int=None, source_min_scale_filter: int=None):
        """SourceNumericFilter - a model defined in OpenAPI

        :param numeric_filter_option: The numeric_filter_option of this SourceNumericFilter.
        :param source_max_precision_filter: The source_max_precision_filter of this SourceNumericFilter.
        :param source_max_scale_filter: The source_max_scale_filter of this SourceNumericFilter.
        :param source_min_precision_filter: The source_min_precision_filter of this SourceNumericFilter.
        :param source_min_scale_filter: The source_min_scale_filter of this SourceNumericFilter.
        """
        self.openapi_types = {
            'numeric_filter_option': str,
            'source_max_precision_filter': int,
            'source_max_scale_filter': int,
            'source_min_precision_filter': int,
            'source_min_scale_filter': int
        }

        self.attribute_map = {
            'numeric_filter_option': 'numericFilterOption',
            'source_max_precision_filter': 'sourceMaxPrecisionFilter',
            'source_max_scale_filter': 'sourceMaxScaleFilter',
            'source_min_precision_filter': 'sourceMinPrecisionFilter',
            'source_min_scale_filter': 'sourceMinScaleFilter'
        }

        self._numeric_filter_option = numeric_filter_option
        self._source_max_precision_filter = source_max_precision_filter
        self._source_max_scale_filter = source_max_scale_filter
        self._source_min_precision_filter = source_min_precision_filter
        self._source_min_scale_filter = source_min_scale_filter

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SourceNumericFilter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SourceNumericFilter of this SourceNumericFilter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def numeric_filter_option(self):
        """Gets the numeric_filter_option of this SourceNumericFilter.

        Required. Enum to set the option defining the datatypes numeric filter has to be applied to

        :return: The numeric_filter_option of this SourceNumericFilter.
        :rtype: str
        """
        return self._numeric_filter_option

    @numeric_filter_option.setter
    def numeric_filter_option(self, numeric_filter_option):
        """Sets the numeric_filter_option of this SourceNumericFilter.

        Required. Enum to set the option defining the datatypes numeric filter has to be applied to

        :param numeric_filter_option: The numeric_filter_option of this SourceNumericFilter.
        :type numeric_filter_option: str
        """
        allowed_values = ["NUMERIC_FILTER_OPTION_UNSPECIFIED", "NUMERIC_FILTER_OPTION_ALL", "NUMERIC_FILTER_OPTION_LIMIT", "NUMERIC_FILTER_OPTION_LIMITLESS"]  # noqa: E501
        if numeric_filter_option not in allowed_values:
            raise ValueError(
                "Invalid value for `numeric_filter_option` ({0}), must be one of {1}"
                .format(numeric_filter_option, allowed_values)
            )

        self._numeric_filter_option = numeric_filter_option

    @property
    def source_max_precision_filter(self):
        """Gets the source_max_precision_filter of this SourceNumericFilter.

        Optional. The filter will match columns with precision smaller than or equal to this number.

        :return: The source_max_precision_filter of this SourceNumericFilter.
        :rtype: int
        """
        return self._source_max_precision_filter

    @source_max_precision_filter.setter
    def source_max_precision_filter(self, source_max_precision_filter):
        """Sets the source_max_precision_filter of this SourceNumericFilter.

        Optional. The filter will match columns with precision smaller than or equal to this number.

        :param source_max_precision_filter: The source_max_precision_filter of this SourceNumericFilter.
        :type source_max_precision_filter: int
        """

        self._source_max_precision_filter = source_max_precision_filter

    @property
    def source_max_scale_filter(self):
        """Gets the source_max_scale_filter of this SourceNumericFilter.

        Optional. The filter will match columns with scale smaller than or equal to this number.

        :return: The source_max_scale_filter of this SourceNumericFilter.
        :rtype: int
        """
        return self._source_max_scale_filter

    @source_max_scale_filter.setter
    def source_max_scale_filter(self, source_max_scale_filter):
        """Sets the source_max_scale_filter of this SourceNumericFilter.

        Optional. The filter will match columns with scale smaller than or equal to this number.

        :param source_max_scale_filter: The source_max_scale_filter of this SourceNumericFilter.
        :type source_max_scale_filter: int
        """

        self._source_max_scale_filter = source_max_scale_filter

    @property
    def source_min_precision_filter(self):
        """Gets the source_min_precision_filter of this SourceNumericFilter.

        Optional. The filter will match columns with precision greater than or equal to this number.

        :return: The source_min_precision_filter of this SourceNumericFilter.
        :rtype: int
        """
        return self._source_min_precision_filter

    @source_min_precision_filter.setter
    def source_min_precision_filter(self, source_min_precision_filter):
        """Sets the source_min_precision_filter of this SourceNumericFilter.

        Optional. The filter will match columns with precision greater than or equal to this number.

        :param source_min_precision_filter: The source_min_precision_filter of this SourceNumericFilter.
        :type source_min_precision_filter: int
        """

        self._source_min_precision_filter = source_min_precision_filter

    @property
    def source_min_scale_filter(self):
        """Gets the source_min_scale_filter of this SourceNumericFilter.

        Optional. The filter will match columns with scale greater than or equal to this number.

        :return: The source_min_scale_filter of this SourceNumericFilter.
        :rtype: int
        """
        return self._source_min_scale_filter

    @source_min_scale_filter.setter
    def source_min_scale_filter(self, source_min_scale_filter):
        """Sets the source_min_scale_filter of this SourceNumericFilter.

        Optional. The filter will match columns with scale greater than or equal to this number.

        :param source_min_scale_filter: The source_min_scale_filter of this SourceNumericFilter.
        :type source_min_scale_filter: int
        """

        self._source_min_scale_filter = source_min_scale_filter
