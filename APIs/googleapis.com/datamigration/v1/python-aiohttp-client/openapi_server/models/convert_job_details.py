# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ConvertJobDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, filter: str=None):
        """ConvertJobDetails - a model defined in OpenAPI

        :param filter: The filter of this ConvertJobDetails.
        """
        self.openapi_types = {
            'filter': str
        }

        self.attribute_map = {
            'filter': 'filter'
        }

        self._filter = filter

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConvertJobDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ConvertJobDetails of this ConvertJobDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def filter(self):
        """Gets the filter of this ConvertJobDetails.

        Output only. AIP-160 based filter used to specify the entities to convert

        :return: The filter of this ConvertJobDetails.
        :rtype: str
        """
        return self._filter

    @filter.setter
    def filter(self, filter):
        """Sets the filter of this ConvertJobDetails.

        Output only. AIP-160 based filter used to specify the entities to convert

        :param filter: The filter of this ConvertJobDetails.
        :type filter: str
        """

        self._filter = filter
