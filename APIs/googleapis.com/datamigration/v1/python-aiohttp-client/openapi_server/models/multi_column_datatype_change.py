# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.source_numeric_filter import SourceNumericFilter
from openapi_server.models.source_text_filter import SourceTextFilter
from openapi_server import util


class MultiColumnDatatypeChange(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, custom_features: Dict[str, object]=None, new_data_type: str=None, override_fractional_seconds_precision: int=None, override_length: str=None, override_precision: int=None, override_scale: int=None, source_data_type_filter: str=None, source_numeric_filter: SourceNumericFilter=None, source_text_filter: SourceTextFilter=None):
        """MultiColumnDatatypeChange - a model defined in OpenAPI

        :param custom_features: The custom_features of this MultiColumnDatatypeChange.
        :param new_data_type: The new_data_type of this MultiColumnDatatypeChange.
        :param override_fractional_seconds_precision: The override_fractional_seconds_precision of this MultiColumnDatatypeChange.
        :param override_length: The override_length of this MultiColumnDatatypeChange.
        :param override_precision: The override_precision of this MultiColumnDatatypeChange.
        :param override_scale: The override_scale of this MultiColumnDatatypeChange.
        :param source_data_type_filter: The source_data_type_filter of this MultiColumnDatatypeChange.
        :param source_numeric_filter: The source_numeric_filter of this MultiColumnDatatypeChange.
        :param source_text_filter: The source_text_filter of this MultiColumnDatatypeChange.
        """
        self.openapi_types = {
            'custom_features': Dict[str, object],
            'new_data_type': str,
            'override_fractional_seconds_precision': int,
            'override_length': str,
            'override_precision': int,
            'override_scale': int,
            'source_data_type_filter': str,
            'source_numeric_filter': SourceNumericFilter,
            'source_text_filter': SourceTextFilter
        }

        self.attribute_map = {
            'custom_features': 'customFeatures',
            'new_data_type': 'newDataType',
            'override_fractional_seconds_precision': 'overrideFractionalSecondsPrecision',
            'override_length': 'overrideLength',
            'override_precision': 'overridePrecision',
            'override_scale': 'overrideScale',
            'source_data_type_filter': 'sourceDataTypeFilter',
            'source_numeric_filter': 'sourceNumericFilter',
            'source_text_filter': 'sourceTextFilter'
        }

        self._custom_features = custom_features
        self._new_data_type = new_data_type
        self._override_fractional_seconds_precision = override_fractional_seconds_precision
        self._override_length = override_length
        self._override_precision = override_precision
        self._override_scale = override_scale
        self._source_data_type_filter = source_data_type_filter
        self._source_numeric_filter = source_numeric_filter
        self._source_text_filter = source_text_filter

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MultiColumnDatatypeChange':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MultiColumnDatatypeChange of this MultiColumnDatatypeChange.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def custom_features(self):
        """Gets the custom_features of this MultiColumnDatatypeChange.

        Optional. Custom engine specific features.

        :return: The custom_features of this MultiColumnDatatypeChange.
        :rtype: Dict[str, object]
        """
        return self._custom_features

    @custom_features.setter
    def custom_features(self, custom_features):
        """Sets the custom_features of this MultiColumnDatatypeChange.

        Optional. Custom engine specific features.

        :param custom_features: The custom_features of this MultiColumnDatatypeChange.
        :type custom_features: Dict[str, object]
        """

        self._custom_features = custom_features

    @property
    def new_data_type(self):
        """Gets the new_data_type of this MultiColumnDatatypeChange.

        Required. New data type.

        :return: The new_data_type of this MultiColumnDatatypeChange.
        :rtype: str
        """
        return self._new_data_type

    @new_data_type.setter
    def new_data_type(self, new_data_type):
        """Sets the new_data_type of this MultiColumnDatatypeChange.

        Required. New data type.

        :param new_data_type: The new_data_type of this MultiColumnDatatypeChange.
        :type new_data_type: str
        """

        self._new_data_type = new_data_type

    @property
    def override_fractional_seconds_precision(self):
        """Gets the override_fractional_seconds_precision of this MultiColumnDatatypeChange.

        Optional. Column fractional seconds precision - used only for timestamp based datatypes - if not specified and relevant uses the source column fractional seconds precision.

        :return: The override_fractional_seconds_precision of this MultiColumnDatatypeChange.
        :rtype: int
        """
        return self._override_fractional_seconds_precision

    @override_fractional_seconds_precision.setter
    def override_fractional_seconds_precision(self, override_fractional_seconds_precision):
        """Sets the override_fractional_seconds_precision of this MultiColumnDatatypeChange.

        Optional. Column fractional seconds precision - used only for timestamp based datatypes - if not specified and relevant uses the source column fractional seconds precision.

        :param override_fractional_seconds_precision: The override_fractional_seconds_precision of this MultiColumnDatatypeChange.
        :type override_fractional_seconds_precision: int
        """

        self._override_fractional_seconds_precision = override_fractional_seconds_precision

    @property
    def override_length(self):
        """Gets the override_length of this MultiColumnDatatypeChange.

        Optional. Column length - e.g. varchar (50) - if not specified and relevant uses the source column length.

        :return: The override_length of this MultiColumnDatatypeChange.
        :rtype: str
        """
        return self._override_length

    @override_length.setter
    def override_length(self, override_length):
        """Sets the override_length of this MultiColumnDatatypeChange.

        Optional. Column length - e.g. varchar (50) - if not specified and relevant uses the source column length.

        :param override_length: The override_length of this MultiColumnDatatypeChange.
        :type override_length: str
        """

        self._override_length = override_length

    @property
    def override_precision(self):
        """Gets the override_precision of this MultiColumnDatatypeChange.

        Optional. Column precision - when relevant - if not specified and relevant uses the source column precision.

        :return: The override_precision of this MultiColumnDatatypeChange.
        :rtype: int
        """
        return self._override_precision

    @override_precision.setter
    def override_precision(self, override_precision):
        """Sets the override_precision of this MultiColumnDatatypeChange.

        Optional. Column precision - when relevant - if not specified and relevant uses the source column precision.

        :param override_precision: The override_precision of this MultiColumnDatatypeChange.
        :type override_precision: int
        """

        self._override_precision = override_precision

    @property
    def override_scale(self):
        """Gets the override_scale of this MultiColumnDatatypeChange.

        Optional. Column scale - when relevant - if not specified and relevant uses the source column scale.

        :return: The override_scale of this MultiColumnDatatypeChange.
        :rtype: int
        """
        return self._override_scale

    @override_scale.setter
    def override_scale(self, override_scale):
        """Sets the override_scale of this MultiColumnDatatypeChange.

        Optional. Column scale - when relevant - if not specified and relevant uses the source column scale.

        :param override_scale: The override_scale of this MultiColumnDatatypeChange.
        :type override_scale: int
        """

        self._override_scale = override_scale

    @property
    def source_data_type_filter(self):
        """Gets the source_data_type_filter of this MultiColumnDatatypeChange.

        Required. Filter on source data type.

        :return: The source_data_type_filter of this MultiColumnDatatypeChange.
        :rtype: str
        """
        return self._source_data_type_filter

    @source_data_type_filter.setter
    def source_data_type_filter(self, source_data_type_filter):
        """Sets the source_data_type_filter of this MultiColumnDatatypeChange.

        Required. Filter on source data type.

        :param source_data_type_filter: The source_data_type_filter of this MultiColumnDatatypeChange.
        :type source_data_type_filter: str
        """

        self._source_data_type_filter = source_data_type_filter

    @property
    def source_numeric_filter(self):
        """Gets the source_numeric_filter of this MultiColumnDatatypeChange.


        :return: The source_numeric_filter of this MultiColumnDatatypeChange.
        :rtype: SourceNumericFilter
        """
        return self._source_numeric_filter

    @source_numeric_filter.setter
    def source_numeric_filter(self, source_numeric_filter):
        """Sets the source_numeric_filter of this MultiColumnDatatypeChange.


        :param source_numeric_filter: The source_numeric_filter of this MultiColumnDatatypeChange.
        :type source_numeric_filter: SourceNumericFilter
        """

        self._source_numeric_filter = source_numeric_filter

    @property
    def source_text_filter(self):
        """Gets the source_text_filter of this MultiColumnDatatypeChange.


        :return: The source_text_filter of this MultiColumnDatatypeChange.
        :rtype: SourceTextFilter
        """
        return self._source_text_filter

    @source_text_filter.setter
    def source_text_filter(self, source_text_filter):
        """Sets the source_text_filter of this MultiColumnDatatypeChange.


        :param source_text_filter: The source_text_filter of this MultiColumnDatatypeChange.
        :type source_text_filter: SourceTextFilter
        """

        self._source_text_filter = source_text_filter
