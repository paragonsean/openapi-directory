# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ApplyHash(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, uuid_from_bytes: object=None):
        """ApplyHash - a model defined in OpenAPI

        :param uuid_from_bytes: The uuid_from_bytes of this ApplyHash.
        """
        self.openapi_types = {
            'uuid_from_bytes': object
        }

        self.attribute_map = {
            'uuid_from_bytes': 'uuidFromBytes'
        }

        self._uuid_from_bytes = uuid_from_bytes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApplyHash':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApplyHash of this ApplyHash.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def uuid_from_bytes(self):
        """Gets the uuid_from_bytes of this ApplyHash.

        A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }

        :return: The uuid_from_bytes of this ApplyHash.
        :rtype: object
        """
        return self._uuid_from_bytes

    @uuid_from_bytes.setter
    def uuid_from_bytes(self, uuid_from_bytes):
        """Sets the uuid_from_bytes of this ApplyHash.

        A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }

        :param uuid_from_bytes: The uuid_from_bytes of this ApplyHash.
        :type uuid_from_bytes: object
        """

        self._uuid_from_bytes = uuid_from_bytes
