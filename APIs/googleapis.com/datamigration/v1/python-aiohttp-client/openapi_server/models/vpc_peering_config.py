# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class VpcPeeringConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, subnet: str=None, vpc_name: str=None):
        """VpcPeeringConfig - a model defined in OpenAPI

        :param subnet: The subnet of this VpcPeeringConfig.
        :param vpc_name: The vpc_name of this VpcPeeringConfig.
        """
        self.openapi_types = {
            'subnet': str,
            'vpc_name': str
        }

        self.attribute_map = {
            'subnet': 'subnet',
            'vpc_name': 'vpcName'
        }

        self._subnet = subnet
        self._vpc_name = vpc_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VpcPeeringConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VpcPeeringConfig of this VpcPeeringConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def subnet(self):
        """Gets the subnet of this VpcPeeringConfig.

        Required. A free subnet for peering. (CIDR of /29)

        :return: The subnet of this VpcPeeringConfig.
        :rtype: str
        """
        return self._subnet

    @subnet.setter
    def subnet(self, subnet):
        """Sets the subnet of this VpcPeeringConfig.

        Required. A free subnet for peering. (CIDR of /29)

        :param subnet: The subnet of this VpcPeeringConfig.
        :type subnet: str
        """

        self._subnet = subnet

    @property
    def vpc_name(self):
        """Gets the vpc_name of this VpcPeeringConfig.

        Required. Fully qualified name of the VPC that Database Migration Service will peer to.

        :return: The vpc_name of this VpcPeeringConfig.
        :rtype: str
        """
        return self._vpc_name

    @vpc_name.setter
    def vpc_name(self, vpc_name):
        """Sets the vpc_name of this VpcPeeringConfig.

        Required. Fully qualified name of the VPC that Database Migration Service will peer to.

        :param vpc_name: The vpc_name of this VpcPeeringConfig.
        :type vpc_name: str
        """

        self._vpc_name = vpc_name
