# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SqlAclEntry(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, expire_time: str=None, label: str=None, ttl: str=None, value: str=None):
        """SqlAclEntry - a model defined in OpenAPI

        :param expire_time: The expire_time of this SqlAclEntry.
        :param label: The label of this SqlAclEntry.
        :param ttl: The ttl of this SqlAclEntry.
        :param value: The value of this SqlAclEntry.
        """
        self.openapi_types = {
            'expire_time': str,
            'label': str,
            'ttl': str,
            'value': str
        }

        self.attribute_map = {
            'expire_time': 'expireTime',
            'label': 'label',
            'ttl': 'ttl',
            'value': 'value'
        }

        self._expire_time = expire_time
        self._label = label
        self._ttl = ttl
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SqlAclEntry':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SqlAclEntry of this SqlAclEntry.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def expire_time(self):
        """Gets the expire_time of this SqlAclEntry.

        The time when this access control entry expires in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example: `2012-11-15T16:19:00.094Z`.

        :return: The expire_time of this SqlAclEntry.
        :rtype: str
        """
        return self._expire_time

    @expire_time.setter
    def expire_time(self, expire_time):
        """Sets the expire_time of this SqlAclEntry.

        The time when this access control entry expires in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example: `2012-11-15T16:19:00.094Z`.

        :param expire_time: The expire_time of this SqlAclEntry.
        :type expire_time: str
        """

        self._expire_time = expire_time

    @property
    def label(self):
        """Gets the label of this SqlAclEntry.

        A label to identify this entry.

        :return: The label of this SqlAclEntry.
        :rtype: str
        """
        return self._label

    @label.setter
    def label(self, label):
        """Sets the label of this SqlAclEntry.

        A label to identify this entry.

        :param label: The label of this SqlAclEntry.
        :type label: str
        """

        self._label = label

    @property
    def ttl(self):
        """Gets the ttl of this SqlAclEntry.

        Input only. The time-to-leave of this access control entry.

        :return: The ttl of this SqlAclEntry.
        :rtype: str
        """
        return self._ttl

    @ttl.setter
    def ttl(self, ttl):
        """Sets the ttl of this SqlAclEntry.

        Input only. The time-to-leave of this access control entry.

        :param ttl: The ttl of this SqlAclEntry.
        :type ttl: str
        """

        self._ttl = ttl

    @property
    def value(self):
        """Gets the value of this SqlAclEntry.

        The allowlisted value for the access control list.

        :return: The value of this SqlAclEntry.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this SqlAclEntry.

        The allowlisted value for the access control list.

        :param value: The value of this SqlAclEntry.
        :type value: str
        """

        self._value = value
