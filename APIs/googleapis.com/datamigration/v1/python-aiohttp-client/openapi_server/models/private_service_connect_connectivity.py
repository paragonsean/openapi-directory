# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PrivateServiceConnectConnectivity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, service_attachment: str=None):
        """PrivateServiceConnectConnectivity - a model defined in OpenAPI

        :param service_attachment: The service_attachment of this PrivateServiceConnectConnectivity.
        """
        self.openapi_types = {
            'service_attachment': str
        }

        self.attribute_map = {
            'service_attachment': 'serviceAttachment'
        }

        self._service_attachment = service_attachment

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PrivateServiceConnectConnectivity':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PrivateServiceConnectConnectivity of this PrivateServiceConnectConnectivity.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def service_attachment(self):
        """Gets the service_attachment of this PrivateServiceConnectConnectivity.

        Required. A service attachment that exposes a database, and has the following format: projects/{project}/regions/{region}/serviceAttachments/{service_attachment_name}

        :return: The service_attachment of this PrivateServiceConnectConnectivity.
        :rtype: str
        """
        return self._service_attachment

    @service_attachment.setter
    def service_attachment(self, service_attachment):
        """Sets the service_attachment of this PrivateServiceConnectConnectivity.

        Required. A service attachment that exposes a database, and has the following format: projects/{project}/regions/{region}/serviceAttachments/{service_attachment_name}

        :param service_attachment: The service_attachment of this PrivateServiceConnectConnectivity.
        :type service_attachment: str
        """

        self._service_attachment = service_attachment
