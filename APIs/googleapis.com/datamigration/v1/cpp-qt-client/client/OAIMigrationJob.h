/**
 * Database Migration API
 * Manage Cloud Database Migration Service resources on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMigrationJob.h
 *
 * Represents a Database Migration Service migration job object.
 */

#ifndef OAIMigrationJob_H
#define OAIMigrationJob_H

#include <QJsonObject>

#include "OAIConversionWorkspaceInfo.h"
#include "OAIDatabaseType.h"
#include "OAIDumpFlags.h"
#include "OAIObject.h"
#include "OAIPerformanceConfig.h"
#include "OAIReverseSshConnectivity.h"
#include "OAIStatus.h"
#include "OAIVpcPeeringConnectivity.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIConversionWorkspaceInfo;
class OAIDatabaseType;
class OAIDumpFlags;
class OAIStatus;
class OAIPerformanceConfig;
class OAIReverseSshConnectivity;
class OAIVpcPeeringConnectivity;

class OAIMigrationJob : public OAIObject {
public:
    OAIMigrationJob();
    OAIMigrationJob(QString json);
    ~OAIMigrationJob() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCmekKeyName() const;
    void setCmekKeyName(const QString &cmek_key_name);
    bool is_cmek_key_name_Set() const;
    bool is_cmek_key_name_Valid() const;

    OAIConversionWorkspaceInfo getConversionWorkspace() const;
    void setConversionWorkspace(const OAIConversionWorkspaceInfo &conversion_workspace);
    bool is_conversion_workspace_Set() const;
    bool is_conversion_workspace_Valid() const;

    QString getCreateTime() const;
    void setCreateTime(const QString &create_time);
    bool is_create_time_Set() const;
    bool is_create_time_Valid() const;

    QString getDestination() const;
    void setDestination(const QString &destination);
    bool is_destination_Set() const;
    bool is_destination_Valid() const;

    OAIDatabaseType getDestinationDatabase() const;
    void setDestinationDatabase(const OAIDatabaseType &destination_database);
    bool is_destination_database_Set() const;
    bool is_destination_database_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    OAIDumpFlags getDumpFlags() const;
    void setDumpFlags(const OAIDumpFlags &dump_flags);
    bool is_dump_flags_Set() const;
    bool is_dump_flags_Valid() const;

    QString getDumpPath() const;
    void setDumpPath(const QString &dump_path);
    bool is_dump_path_Set() const;
    bool is_dump_path_Valid() const;

    QString getDuration() const;
    void setDuration(const QString &duration);
    bool is_duration_Set() const;
    bool is_duration_Valid() const;

    QString getEndTime() const;
    void setEndTime(const QString &end_time);
    bool is_end_time_Set() const;
    bool is_end_time_Valid() const;

    OAIStatus getError() const;
    void setError(const OAIStatus &error);
    bool is_error_Set() const;
    bool is_error_Valid() const;

    QString getFilter() const;
    void setFilter(const QString &filter);
    bool is_filter_Set() const;
    bool is_filter_Valid() const;

    QMap<QString, QString> getLabels() const;
    void setLabels(const QMap<QString, QString> &labels);
    bool is_labels_Set() const;
    bool is_labels_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIPerformanceConfig getPerformanceConfig() const;
    void setPerformanceConfig(const OAIPerformanceConfig &performance_config);
    bool is_performance_config_Set() const;
    bool is_performance_config_Valid() const;

    QString getPhase() const;
    void setPhase(const QString &phase);
    bool is_phase_Set() const;
    bool is_phase_Valid() const;

    OAIReverseSshConnectivity getReverseSshConnectivity() const;
    void setReverseSshConnectivity(const OAIReverseSshConnectivity &reverse_ssh_connectivity);
    bool is_reverse_ssh_connectivity_Set() const;
    bool is_reverse_ssh_connectivity_Valid() const;

    QString getSource() const;
    void setSource(const QString &source);
    bool is_source_Set() const;
    bool is_source_Valid() const;

    OAIDatabaseType getSourceDatabase() const;
    void setSourceDatabase(const OAIDatabaseType &source_database);
    bool is_source_database_Set() const;
    bool is_source_database_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    OAIObject getStaticIpConnectivity() const;
    void setStaticIpConnectivity(const OAIObject &static_ip_connectivity);
    bool is_static_ip_connectivity_Set() const;
    bool is_static_ip_connectivity_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getUpdateTime() const;
    void setUpdateTime(const QString &update_time);
    bool is_update_time_Set() const;
    bool is_update_time_Valid() const;

    OAIVpcPeeringConnectivity getVpcPeeringConnectivity() const;
    void setVpcPeeringConnectivity(const OAIVpcPeeringConnectivity &vpc_peering_connectivity);
    bool is_vpc_peering_connectivity_Set() const;
    bool is_vpc_peering_connectivity_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_cmek_key_name;
    bool m_cmek_key_name_isSet;
    bool m_cmek_key_name_isValid;

    OAIConversionWorkspaceInfo m_conversion_workspace;
    bool m_conversion_workspace_isSet;
    bool m_conversion_workspace_isValid;

    QString m_create_time;
    bool m_create_time_isSet;
    bool m_create_time_isValid;

    QString m_destination;
    bool m_destination_isSet;
    bool m_destination_isValid;

    OAIDatabaseType m_destination_database;
    bool m_destination_database_isSet;
    bool m_destination_database_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    OAIDumpFlags m_dump_flags;
    bool m_dump_flags_isSet;
    bool m_dump_flags_isValid;

    QString m_dump_path;
    bool m_dump_path_isSet;
    bool m_dump_path_isValid;

    QString m_duration;
    bool m_duration_isSet;
    bool m_duration_isValid;

    QString m_end_time;
    bool m_end_time_isSet;
    bool m_end_time_isValid;

    OAIStatus m_error;
    bool m_error_isSet;
    bool m_error_isValid;

    QString m_filter;
    bool m_filter_isSet;
    bool m_filter_isValid;

    QMap<QString, QString> m_labels;
    bool m_labels_isSet;
    bool m_labels_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIPerformanceConfig m_performance_config;
    bool m_performance_config_isSet;
    bool m_performance_config_isValid;

    QString m_phase;
    bool m_phase_isSet;
    bool m_phase_isValid;

    OAIReverseSshConnectivity m_reverse_ssh_connectivity;
    bool m_reverse_ssh_connectivity_isSet;
    bool m_reverse_ssh_connectivity_isValid;

    QString m_source;
    bool m_source_isSet;
    bool m_source_isValid;

    OAIDatabaseType m_source_database;
    bool m_source_database_isSet;
    bool m_source_database_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    OAIObject m_static_ip_connectivity;
    bool m_static_ip_connectivity_isSet;
    bool m_static_ip_connectivity_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_update_time;
    bool m_update_time_isSet;
    bool m_update_time_isValid;

    OAIVpcPeeringConnectivity m_vpc_peering_connectivity;
    bool m_vpc_peering_connectivity_isSet;
    bool m_vpc_peering_connectivity_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMigrationJob)

#endif // OAIMigrationJob_H
