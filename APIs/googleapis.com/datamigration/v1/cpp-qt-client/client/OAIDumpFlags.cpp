/**
 * Database Migration API
 * Manage Cloud Database Migration Service resources on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDumpFlags.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDumpFlags::OAIDumpFlags(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDumpFlags::OAIDumpFlags() {
    this->initializeModel();
}

OAIDumpFlags::~OAIDumpFlags() {}

void OAIDumpFlags::initializeModel() {

    m_dump_flags_isSet = false;
    m_dump_flags_isValid = false;
}

void OAIDumpFlags::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDumpFlags::fromJsonObject(QJsonObject json) {

    m_dump_flags_isValid = ::OpenAPI::fromJsonValue(m_dump_flags, json[QString("dumpFlags")]);
    m_dump_flags_isSet = !json[QString("dumpFlags")].isNull() && m_dump_flags_isValid;
}

QString OAIDumpFlags::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDumpFlags::asJsonObject() const {
    QJsonObject obj;
    if (m_dump_flags.size() > 0) {
        obj.insert(QString("dumpFlags"), ::OpenAPI::toJsonValue(m_dump_flags));
    }
    return obj;
}

QList<OAIDumpFlag> OAIDumpFlags::getDumpFlags() const {
    return m_dump_flags;
}
void OAIDumpFlags::setDumpFlags(const QList<OAIDumpFlag> &dump_flags) {
    m_dump_flags = dump_flags;
    m_dump_flags_isSet = true;
}

bool OAIDumpFlags::is_dump_flags_Set() const{
    return m_dump_flags_isSet;
}

bool OAIDumpFlags::is_dump_flags_Valid() const{
    return m_dump_flags_isValid;
}

bool OAIDumpFlags::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_dump_flags.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDumpFlags::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
