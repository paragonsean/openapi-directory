/**
 * Database Migration API
 * Manage Cloud Database Migration Service resources on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISequenceEntity.h
 *
 * Sequence&#39;s parent is a schema.
 */

#ifndef OAISequenceEntity_H
#define OAISequenceEntity_H

#include <QJsonObject>

#include <QByteArray>
#include <QJsonValue>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISequenceEntity : public OAIObject {
public:
    OAISequenceEntity();
    OAISequenceEntity(QString json);
    ~OAISequenceEntity() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCache() const;
    void setCache(const QString &cache);
    bool is_cache_Set() const;
    bool is_cache_Valid() const;

    QMap<QString, QJsonValue> getCustomFeatures() const;
    void setCustomFeatures(const QMap<QString, QJsonValue> &custom_features);
    bool is_custom_features_Set() const;
    bool is_custom_features_Valid() const;

    bool isCycle() const;
    void setCycle(const bool &cycle);
    bool is_cycle_Set() const;
    bool is_cycle_Valid() const;

    QString getIncrement() const;
    void setIncrement(const QString &increment);
    bool is_increment_Set() const;
    bool is_increment_Valid() const;

    QByteArray getMaxValue() const;
    void setMaxValue(const QByteArray &max_value);
    bool is_max_value_Set() const;
    bool is_max_value_Valid() const;

    QByteArray getMinValue() const;
    void setMinValue(const QByteArray &min_value);
    bool is_min_value_Set() const;
    bool is_min_value_Valid() const;

    QByteArray getStartValue() const;
    void setStartValue(const QByteArray &start_value);
    bool is_start_value_Set() const;
    bool is_start_value_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_cache;
    bool m_cache_isSet;
    bool m_cache_isValid;

    QMap<QString, QJsonValue> m_custom_features;
    bool m_custom_features_isSet;
    bool m_custom_features_isValid;

    bool m_cycle;
    bool m_cycle_isSet;
    bool m_cycle_isValid;

    QString m_increment;
    bool m_increment_isSet;
    bool m_increment_isValid;

    QByteArray m_max_value;
    bool m_max_value_isSet;
    bool m_max_value_isValid;

    QByteArray m_min_value;
    bool m_min_value_isSet;
    bool m_min_value_isValid;

    QByteArray m_start_value;
    bool m_start_value_isSet;
    bool m_start_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISequenceEntity)

#endif // OAISequenceEntity_H
