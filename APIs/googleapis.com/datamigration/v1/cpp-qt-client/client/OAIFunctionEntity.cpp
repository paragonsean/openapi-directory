/**
 * Database Migration API
 * Manage Cloud Database Migration Service resources on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFunctionEntity.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFunctionEntity::OAIFunctionEntity(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFunctionEntity::OAIFunctionEntity() {
    this->initializeModel();
}

OAIFunctionEntity::~OAIFunctionEntity() {}

void OAIFunctionEntity::initializeModel() {

    m_custom_features_isSet = false;
    m_custom_features_isValid = false;

    m_sql_code_isSet = false;
    m_sql_code_isValid = false;
}

void OAIFunctionEntity::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFunctionEntity::fromJsonObject(QJsonObject json) {

    m_custom_features_isValid = ::OpenAPI::fromJsonValue(m_custom_features, json[QString("customFeatures")]);
    m_custom_features_isSet = !json[QString("customFeatures")].isNull() && m_custom_features_isValid;

    m_sql_code_isValid = ::OpenAPI::fromJsonValue(m_sql_code, json[QString("sqlCode")]);
    m_sql_code_isSet = !json[QString("sqlCode")].isNull() && m_sql_code_isValid;
}

QString OAIFunctionEntity::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFunctionEntity::asJsonObject() const {
    QJsonObject obj;
    if (m_custom_features.size() > 0) {
        obj.insert(QString("customFeatures"), ::OpenAPI::toJsonValue(m_custom_features));
    }
    if (m_sql_code_isSet) {
        obj.insert(QString("sqlCode"), ::OpenAPI::toJsonValue(m_sql_code));
    }
    return obj;
}

QMap<QString, QJsonValue> OAIFunctionEntity::getCustomFeatures() const {
    return m_custom_features;
}
void OAIFunctionEntity::setCustomFeatures(const QMap<QString, QJsonValue> &custom_features) {
    m_custom_features = custom_features;
    m_custom_features_isSet = true;
}

bool OAIFunctionEntity::is_custom_features_Set() const{
    return m_custom_features_isSet;
}

bool OAIFunctionEntity::is_custom_features_Valid() const{
    return m_custom_features_isValid;
}

QString OAIFunctionEntity::getSqlCode() const {
    return m_sql_code;
}
void OAIFunctionEntity::setSqlCode(const QString &sql_code) {
    m_sql_code = sql_code;
    m_sql_code_isSet = true;
}

bool OAIFunctionEntity::is_sql_code_Set() const{
    return m_sql_code_isSet;
}

bool OAIFunctionEntity::is_sql_code_Valid() const{
    return m_sql_code_isValid;
}

bool OAIFunctionEntity::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_custom_features.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_sql_code_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFunctionEntity::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
