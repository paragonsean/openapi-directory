/**
 * Database Migration API
 * Manage Cloud Database Migration Service resources on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRulesFile.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRulesFile::OAIRulesFile(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRulesFile::OAIRulesFile() {
    this->initializeModel();
}

OAIRulesFile::~OAIRulesFile() {}

void OAIRulesFile::initializeModel() {

    m_rules_content_isSet = false;
    m_rules_content_isValid = false;

    m_rules_source_filename_isSet = false;
    m_rules_source_filename_isValid = false;
}

void OAIRulesFile::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRulesFile::fromJsonObject(QJsonObject json) {

    m_rules_content_isValid = ::OpenAPI::fromJsonValue(m_rules_content, json[QString("rulesContent")]);
    m_rules_content_isSet = !json[QString("rulesContent")].isNull() && m_rules_content_isValid;

    m_rules_source_filename_isValid = ::OpenAPI::fromJsonValue(m_rules_source_filename, json[QString("rulesSourceFilename")]);
    m_rules_source_filename_isSet = !json[QString("rulesSourceFilename")].isNull() && m_rules_source_filename_isValid;
}

QString OAIRulesFile::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRulesFile::asJsonObject() const {
    QJsonObject obj;
    if (m_rules_content_isSet) {
        obj.insert(QString("rulesContent"), ::OpenAPI::toJsonValue(m_rules_content));
    }
    if (m_rules_source_filename_isSet) {
        obj.insert(QString("rulesSourceFilename"), ::OpenAPI::toJsonValue(m_rules_source_filename));
    }
    return obj;
}

QString OAIRulesFile::getRulesContent() const {
    return m_rules_content;
}
void OAIRulesFile::setRulesContent(const QString &rules_content) {
    m_rules_content = rules_content;
    m_rules_content_isSet = true;
}

bool OAIRulesFile::is_rules_content_Set() const{
    return m_rules_content_isSet;
}

bool OAIRulesFile::is_rules_content_Valid() const{
    return m_rules_content_isValid;
}

QString OAIRulesFile::getRulesSourceFilename() const {
    return m_rules_source_filename;
}
void OAIRulesFile::setRulesSourceFilename(const QString &rules_source_filename) {
    m_rules_source_filename = rules_source_filename;
    m_rules_source_filename_isSet = true;
}

bool OAIRulesFile::is_rules_source_filename_Set() const{
    return m_rules_source_filename_isSet;
}

bool OAIRulesFile::is_rules_source_filename_Valid() const{
    return m_rules_source_filename_isValid;
}

bool OAIRulesFile::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_rules_content_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rules_source_filename_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRulesFile::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
