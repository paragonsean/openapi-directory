/**
 * Database Migration API
 * Manage Cloud Database Migration Service resources on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIImportRulesJobDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIImportRulesJobDetails::OAIImportRulesJobDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIImportRulesJobDetails::OAIImportRulesJobDetails() {
    this->initializeModel();
}

OAIImportRulesJobDetails::~OAIImportRulesJobDetails() {}

void OAIImportRulesJobDetails::initializeModel() {

    m_file_format_isSet = false;
    m_file_format_isValid = false;

    m_files_isSet = false;
    m_files_isValid = false;
}

void OAIImportRulesJobDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIImportRulesJobDetails::fromJsonObject(QJsonObject json) {

    m_file_format_isValid = ::OpenAPI::fromJsonValue(m_file_format, json[QString("fileFormat")]);
    m_file_format_isSet = !json[QString("fileFormat")].isNull() && m_file_format_isValid;

    m_files_isValid = ::OpenAPI::fromJsonValue(m_files, json[QString("files")]);
    m_files_isSet = !json[QString("files")].isNull() && m_files_isValid;
}

QString OAIImportRulesJobDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIImportRulesJobDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_file_format_isSet) {
        obj.insert(QString("fileFormat"), ::OpenAPI::toJsonValue(m_file_format));
    }
    if (m_files.size() > 0) {
        obj.insert(QString("files"), ::OpenAPI::toJsonValue(m_files));
    }
    return obj;
}

QString OAIImportRulesJobDetails::getFileFormat() const {
    return m_file_format;
}
void OAIImportRulesJobDetails::setFileFormat(const QString &file_format) {
    m_file_format = file_format;
    m_file_format_isSet = true;
}

bool OAIImportRulesJobDetails::is_file_format_Set() const{
    return m_file_format_isSet;
}

bool OAIImportRulesJobDetails::is_file_format_Valid() const{
    return m_file_format_isValid;
}

QList<QString> OAIImportRulesJobDetails::getFiles() const {
    return m_files;
}
void OAIImportRulesJobDetails::setFiles(const QList<QString> &files) {
    m_files = files;
    m_files_isSet = true;
}

bool OAIImportRulesJobDetails::is_files_Set() const{
    return m_files_isSet;
}

bool OAIImportRulesJobDetails::is_files_Valid() const{
    return m_files_isValid;
}

bool OAIImportRulesJobDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_file_format_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_files.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIImportRulesJobDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
