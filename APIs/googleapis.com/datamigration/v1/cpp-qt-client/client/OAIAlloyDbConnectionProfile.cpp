/**
 * Database Migration API
 * Manage Cloud Database Migration Service resources on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAlloyDbConnectionProfile.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAlloyDbConnectionProfile::OAIAlloyDbConnectionProfile(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAlloyDbConnectionProfile::OAIAlloyDbConnectionProfile() {
    this->initializeModel();
}

OAIAlloyDbConnectionProfile::~OAIAlloyDbConnectionProfile() {}

void OAIAlloyDbConnectionProfile::initializeModel() {

    m_cluster_id_isSet = false;
    m_cluster_id_isValid = false;

    m_settings_isSet = false;
    m_settings_isValid = false;
}

void OAIAlloyDbConnectionProfile::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAlloyDbConnectionProfile::fromJsonObject(QJsonObject json) {

    m_cluster_id_isValid = ::OpenAPI::fromJsonValue(m_cluster_id, json[QString("clusterId")]);
    m_cluster_id_isSet = !json[QString("clusterId")].isNull() && m_cluster_id_isValid;

    m_settings_isValid = ::OpenAPI::fromJsonValue(m_settings, json[QString("settings")]);
    m_settings_isSet = !json[QString("settings")].isNull() && m_settings_isValid;
}

QString OAIAlloyDbConnectionProfile::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAlloyDbConnectionProfile::asJsonObject() const {
    QJsonObject obj;
    if (m_cluster_id_isSet) {
        obj.insert(QString("clusterId"), ::OpenAPI::toJsonValue(m_cluster_id));
    }
    if (m_settings.isSet()) {
        obj.insert(QString("settings"), ::OpenAPI::toJsonValue(m_settings));
    }
    return obj;
}

QString OAIAlloyDbConnectionProfile::getClusterId() const {
    return m_cluster_id;
}
void OAIAlloyDbConnectionProfile::setClusterId(const QString &cluster_id) {
    m_cluster_id = cluster_id;
    m_cluster_id_isSet = true;
}

bool OAIAlloyDbConnectionProfile::is_cluster_id_Set() const{
    return m_cluster_id_isSet;
}

bool OAIAlloyDbConnectionProfile::is_cluster_id_Valid() const{
    return m_cluster_id_isValid;
}

OAIAlloyDbSettings OAIAlloyDbConnectionProfile::getSettings() const {
    return m_settings;
}
void OAIAlloyDbConnectionProfile::setSettings(const OAIAlloyDbSettings &settings) {
    m_settings = settings;
    m_settings_isSet = true;
}

bool OAIAlloyDbConnectionProfile::is_settings_Set() const{
    return m_settings_isSet;
}

bool OAIAlloyDbConnectionProfile::is_settings_Valid() const{
    return m_settings_isValid;
}

bool OAIAlloyDbConnectionProfile::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cluster_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAlloyDbConnectionProfile::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
