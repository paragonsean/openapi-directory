/**
 * Database Migration API
 * Manage Cloud Database Migration Service resources on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPrivateConnection.h
 *
 * The PrivateConnection resource is used to establish private connectivity with the customer&#39;s network.
 */

#ifndef OAIPrivateConnection_H
#define OAIPrivateConnection_H

#include <QJsonObject>

#include "OAIStatus.h"
#include "OAIVpcPeeringConfig.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIStatus;
class OAIVpcPeeringConfig;

class OAIPrivateConnection : public OAIObject {
public:
    OAIPrivateConnection();
    OAIPrivateConnection(QString json);
    ~OAIPrivateConnection() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCreateTime() const;
    void setCreateTime(const QString &create_time);
    bool is_create_time_Set() const;
    bool is_create_time_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    OAIStatus getError() const;
    void setError(const OAIStatus &error);
    bool is_error_Set() const;
    bool is_error_Valid() const;

    QMap<QString, QString> getLabels() const;
    void setLabels(const QMap<QString, QString> &labels);
    bool is_labels_Set() const;
    bool is_labels_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QString getUpdateTime() const;
    void setUpdateTime(const QString &update_time);
    bool is_update_time_Set() const;
    bool is_update_time_Valid() const;

    OAIVpcPeeringConfig getVpcPeeringConfig() const;
    void setVpcPeeringConfig(const OAIVpcPeeringConfig &vpc_peering_config);
    bool is_vpc_peering_config_Set() const;
    bool is_vpc_peering_config_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_create_time;
    bool m_create_time_isSet;
    bool m_create_time_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    OAIStatus m_error;
    bool m_error_isSet;
    bool m_error_isValid;

    QMap<QString, QString> m_labels;
    bool m_labels_isSet;
    bool m_labels_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QString m_update_time;
    bool m_update_time_isSet;
    bool m_update_time_isValid;

    OAIVpcPeeringConfig m_vpc_peering_config;
    bool m_vpc_peering_config_isSet;
    bool m_vpc_peering_config_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPrivateConnection)

#endif // OAIPrivateConnection_H
