/**
 * Database Migration API
 * Manage Cloud Database Migration Service resources on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIConditionalColumnSetValue.h
 *
 * Options to configure rule type ConditionalColumnSetValue. The rule is used to transform the data which is being replicated/migrated. The rule filter field can refer to one or more entities. The rule scope can be one of: Column.
 */

#ifndef OAIConditionalColumnSetValue_H
#define OAIConditionalColumnSetValue_H

#include <QJsonObject>

#include "OAISourceNumericFilter.h"
#include "OAISourceTextFilter.h"
#include "OAIValueTransformation.h"
#include <QJsonValue>
#include <QMap>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISourceNumericFilter;
class OAISourceTextFilter;
class OAIValueTransformation;

class OAIConditionalColumnSetValue : public OAIObject {
public:
    OAIConditionalColumnSetValue();
    OAIConditionalColumnSetValue(QString json);
    ~OAIConditionalColumnSetValue() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QMap<QString, QJsonValue> getCustomFeatures() const;
    void setCustomFeatures(const QMap<QString, QJsonValue> &custom_features);
    bool is_custom_features_Set() const;
    bool is_custom_features_Valid() const;

    OAISourceNumericFilter getSourceNumericFilter() const;
    void setSourceNumericFilter(const OAISourceNumericFilter &source_numeric_filter);
    bool is_source_numeric_filter_Set() const;
    bool is_source_numeric_filter_Valid() const;

    OAISourceTextFilter getSourceTextFilter() const;
    void setSourceTextFilter(const OAISourceTextFilter &source_text_filter);
    bool is_source_text_filter_Set() const;
    bool is_source_text_filter_Valid() const;

    OAIValueTransformation getValueTransformation() const;
    void setValueTransformation(const OAIValueTransformation &value_transformation);
    bool is_value_transformation_Set() const;
    bool is_value_transformation_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QMap<QString, QJsonValue> m_custom_features;
    bool m_custom_features_isSet;
    bool m_custom_features_isValid;

    OAISourceNumericFilter m_source_numeric_filter;
    bool m_source_numeric_filter_isSet;
    bool m_source_numeric_filter_isValid;

    OAISourceTextFilter m_source_text_filter;
    bool m_source_text_filter_isSet;
    bool m_source_text_filter_isValid;

    OAIValueTransformation m_value_transformation;
    bool m_value_transformation_isSet;
    bool m_value_transformation_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIConditionalColumnSetValue)

#endif // OAIConditionalColumnSetValue_H
