/**
 * Database Migration API
 * Manage Cloud Database Migration Service resources on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIConnectionProfile.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIConnectionProfile::OAIConnectionProfile(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIConnectionProfile::OAIConnectionProfile() {
    this->initializeModel();
}

OAIConnectionProfile::~OAIConnectionProfile() {}

void OAIConnectionProfile::initializeModel() {

    m_alloydb_isSet = false;
    m_alloydb_isValid = false;

    m_cloudsql_isSet = false;
    m_cloudsql_isValid = false;

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_error_isSet = false;
    m_error_isValid = false;

    m_labels_isSet = false;
    m_labels_isValid = false;

    m_mysql_isSet = false;
    m_mysql_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_oracle_isSet = false;
    m_oracle_isValid = false;

    m_postgresql_isSet = false;
    m_postgresql_isValid = false;

    m_provider_isSet = false;
    m_provider_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;

    m_update_time_isSet = false;
    m_update_time_isValid = false;
}

void OAIConnectionProfile::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIConnectionProfile::fromJsonObject(QJsonObject json) {

    m_alloydb_isValid = ::OpenAPI::fromJsonValue(m_alloydb, json[QString("alloydb")]);
    m_alloydb_isSet = !json[QString("alloydb")].isNull() && m_alloydb_isValid;

    m_cloudsql_isValid = ::OpenAPI::fromJsonValue(m_cloudsql, json[QString("cloudsql")]);
    m_cloudsql_isSet = !json[QString("cloudsql")].isNull() && m_cloudsql_isValid;

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_error_isValid = ::OpenAPI::fromJsonValue(m_error, json[QString("error")]);
    m_error_isSet = !json[QString("error")].isNull() && m_error_isValid;

    m_labels_isValid = ::OpenAPI::fromJsonValue(m_labels, json[QString("labels")]);
    m_labels_isSet = !json[QString("labels")].isNull() && m_labels_isValid;

    m_mysql_isValid = ::OpenAPI::fromJsonValue(m_mysql, json[QString("mysql")]);
    m_mysql_isSet = !json[QString("mysql")].isNull() && m_mysql_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_oracle_isValid = ::OpenAPI::fromJsonValue(m_oracle, json[QString("oracle")]);
    m_oracle_isSet = !json[QString("oracle")].isNull() && m_oracle_isValid;

    m_postgresql_isValid = ::OpenAPI::fromJsonValue(m_postgresql, json[QString("postgresql")]);
    m_postgresql_isSet = !json[QString("postgresql")].isNull() && m_postgresql_isValid;

    m_provider_isValid = ::OpenAPI::fromJsonValue(m_provider, json[QString("provider")]);
    m_provider_isSet = !json[QString("provider")].isNull() && m_provider_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;

    m_update_time_isValid = ::OpenAPI::fromJsonValue(m_update_time, json[QString("updateTime")]);
    m_update_time_isSet = !json[QString("updateTime")].isNull() && m_update_time_isValid;
}

QString OAIConnectionProfile::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIConnectionProfile::asJsonObject() const {
    QJsonObject obj;
    if (m_alloydb.isSet()) {
        obj.insert(QString("alloydb"), ::OpenAPI::toJsonValue(m_alloydb));
    }
    if (m_cloudsql.isSet()) {
        obj.insert(QString("cloudsql"), ::OpenAPI::toJsonValue(m_cloudsql));
    }
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_error.isSet()) {
        obj.insert(QString("error"), ::OpenAPI::toJsonValue(m_error));
    }
    if (m_labels.size() > 0) {
        obj.insert(QString("labels"), ::OpenAPI::toJsonValue(m_labels));
    }
    if (m_mysql.isSet()) {
        obj.insert(QString("mysql"), ::OpenAPI::toJsonValue(m_mysql));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_oracle.isSet()) {
        obj.insert(QString("oracle"), ::OpenAPI::toJsonValue(m_oracle));
    }
    if (m_postgresql.isSet()) {
        obj.insert(QString("postgresql"), ::OpenAPI::toJsonValue(m_postgresql));
    }
    if (m_provider_isSet) {
        obj.insert(QString("provider"), ::OpenAPI::toJsonValue(m_provider));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    if (m_update_time_isSet) {
        obj.insert(QString("updateTime"), ::OpenAPI::toJsonValue(m_update_time));
    }
    return obj;
}

OAIAlloyDbConnectionProfile OAIConnectionProfile::getAlloydb() const {
    return m_alloydb;
}
void OAIConnectionProfile::setAlloydb(const OAIAlloyDbConnectionProfile &alloydb) {
    m_alloydb = alloydb;
    m_alloydb_isSet = true;
}

bool OAIConnectionProfile::is_alloydb_Set() const{
    return m_alloydb_isSet;
}

bool OAIConnectionProfile::is_alloydb_Valid() const{
    return m_alloydb_isValid;
}

OAICloudSqlConnectionProfile OAIConnectionProfile::getCloudsql() const {
    return m_cloudsql;
}
void OAIConnectionProfile::setCloudsql(const OAICloudSqlConnectionProfile &cloudsql) {
    m_cloudsql = cloudsql;
    m_cloudsql_isSet = true;
}

bool OAIConnectionProfile::is_cloudsql_Set() const{
    return m_cloudsql_isSet;
}

bool OAIConnectionProfile::is_cloudsql_Valid() const{
    return m_cloudsql_isValid;
}

QString OAIConnectionProfile::getCreateTime() const {
    return m_create_time;
}
void OAIConnectionProfile::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIConnectionProfile::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIConnectionProfile::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QString OAIConnectionProfile::getDisplayName() const {
    return m_display_name;
}
void OAIConnectionProfile::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIConnectionProfile::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIConnectionProfile::is_display_name_Valid() const{
    return m_display_name_isValid;
}

OAIStatus OAIConnectionProfile::getError() const {
    return m_error;
}
void OAIConnectionProfile::setError(const OAIStatus &error) {
    m_error = error;
    m_error_isSet = true;
}

bool OAIConnectionProfile::is_error_Set() const{
    return m_error_isSet;
}

bool OAIConnectionProfile::is_error_Valid() const{
    return m_error_isValid;
}

QMap<QString, QString> OAIConnectionProfile::getLabels() const {
    return m_labels;
}
void OAIConnectionProfile::setLabels(const QMap<QString, QString> &labels) {
    m_labels = labels;
    m_labels_isSet = true;
}

bool OAIConnectionProfile::is_labels_Set() const{
    return m_labels_isSet;
}

bool OAIConnectionProfile::is_labels_Valid() const{
    return m_labels_isValid;
}

OAIMySqlConnectionProfile OAIConnectionProfile::getMysql() const {
    return m_mysql;
}
void OAIConnectionProfile::setMysql(const OAIMySqlConnectionProfile &mysql) {
    m_mysql = mysql;
    m_mysql_isSet = true;
}

bool OAIConnectionProfile::is_mysql_Set() const{
    return m_mysql_isSet;
}

bool OAIConnectionProfile::is_mysql_Valid() const{
    return m_mysql_isValid;
}

QString OAIConnectionProfile::getName() const {
    return m_name;
}
void OAIConnectionProfile::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIConnectionProfile::is_name_Set() const{
    return m_name_isSet;
}

bool OAIConnectionProfile::is_name_Valid() const{
    return m_name_isValid;
}

OAIOracleConnectionProfile OAIConnectionProfile::getOracle() const {
    return m_oracle;
}
void OAIConnectionProfile::setOracle(const OAIOracleConnectionProfile &oracle) {
    m_oracle = oracle;
    m_oracle_isSet = true;
}

bool OAIConnectionProfile::is_oracle_Set() const{
    return m_oracle_isSet;
}

bool OAIConnectionProfile::is_oracle_Valid() const{
    return m_oracle_isValid;
}

OAIPostgreSqlConnectionProfile OAIConnectionProfile::getPostgresql() const {
    return m_postgresql;
}
void OAIConnectionProfile::setPostgresql(const OAIPostgreSqlConnectionProfile &postgresql) {
    m_postgresql = postgresql;
    m_postgresql_isSet = true;
}

bool OAIConnectionProfile::is_postgresql_Set() const{
    return m_postgresql_isSet;
}

bool OAIConnectionProfile::is_postgresql_Valid() const{
    return m_postgresql_isValid;
}

QString OAIConnectionProfile::getProvider() const {
    return m_provider;
}
void OAIConnectionProfile::setProvider(const QString &provider) {
    m_provider = provider;
    m_provider_isSet = true;
}

bool OAIConnectionProfile::is_provider_Set() const{
    return m_provider_isSet;
}

bool OAIConnectionProfile::is_provider_Valid() const{
    return m_provider_isValid;
}

QString OAIConnectionProfile::getState() const {
    return m_state;
}
void OAIConnectionProfile::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIConnectionProfile::is_state_Set() const{
    return m_state_isSet;
}

bool OAIConnectionProfile::is_state_Valid() const{
    return m_state_isValid;
}

QString OAIConnectionProfile::getUpdateTime() const {
    return m_update_time;
}
void OAIConnectionProfile::setUpdateTime(const QString &update_time) {
    m_update_time = update_time;
    m_update_time_isSet = true;
}

bool OAIConnectionProfile::is_update_time_Set() const{
    return m_update_time_isSet;
}

bool OAIConnectionProfile::is_update_time_Valid() const{
    return m_update_time_isValid;
}

bool OAIConnectionProfile::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_alloydb.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_cloudsql.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_error.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_labels.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_mysql.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_oracle.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_postgresql.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_provider_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIConnectionProfile::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
