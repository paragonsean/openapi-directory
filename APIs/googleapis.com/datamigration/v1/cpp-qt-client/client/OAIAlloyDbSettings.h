/**
 * Database Migration API
 * Manage Cloud Database Migration Service resources on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAlloyDbSettings.h
 *
 * Settings for creating an AlloyDB cluster.
 */

#ifndef OAIAlloyDbSettings_H
#define OAIAlloyDbSettings_H

#include <QJsonObject>

#include "OAIEncryptionConfig.h"
#include "OAIPrimaryInstanceSettings.h"
#include "OAIUserPassword.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIEncryptionConfig;
class OAIUserPassword;
class OAIPrimaryInstanceSettings;

class OAIAlloyDbSettings : public OAIObject {
public:
    OAIAlloyDbSettings();
    OAIAlloyDbSettings(QString json);
    ~OAIAlloyDbSettings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDatabaseVersion() const;
    void setDatabaseVersion(const QString &database_version);
    bool is_database_version_Set() const;
    bool is_database_version_Valid() const;

    OAIEncryptionConfig getEncryptionConfig() const;
    void setEncryptionConfig(const OAIEncryptionConfig &encryption_config);
    bool is_encryption_config_Set() const;
    bool is_encryption_config_Valid() const;

    OAIUserPassword getInitialUser() const;
    void setInitialUser(const OAIUserPassword &initial_user);
    bool is_initial_user_Set() const;
    bool is_initial_user_Valid() const;

    QMap<QString, QString> getLabels() const;
    void setLabels(const QMap<QString, QString> &labels);
    bool is_labels_Set() const;
    bool is_labels_Valid() const;

    OAIPrimaryInstanceSettings getPrimaryInstanceSettings() const;
    void setPrimaryInstanceSettings(const OAIPrimaryInstanceSettings &primary_instance_settings);
    bool is_primary_instance_settings_Set() const;
    bool is_primary_instance_settings_Valid() const;

    QString getVpcNetwork() const;
    void setVpcNetwork(const QString &vpc_network);
    bool is_vpc_network_Set() const;
    bool is_vpc_network_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_database_version;
    bool m_database_version_isSet;
    bool m_database_version_isValid;

    OAIEncryptionConfig m_encryption_config;
    bool m_encryption_config_isSet;
    bool m_encryption_config_isValid;

    OAIUserPassword m_initial_user;
    bool m_initial_user_isSet;
    bool m_initial_user_isValid;

    QMap<QString, QString> m_labels;
    bool m_labels_isSet;
    bool m_labels_isValid;

    OAIPrimaryInstanceSettings m_primary_instance_settings;
    bool m_primary_instance_settings_isSet;
    bool m_primary_instance_settings_isValid;

    QString m_vpc_network;
    bool m_vpc_network_isSet;
    bool m_vpc_network_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAlloyDbSettings)

#endif // OAIAlloyDbSettings_H
