/**
 * Database Migration API
 * Manage Cloud Database Migration Service resources on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIIndexEntity.h
 *
 * Index is not used as an independent entity, it is retrieved as part of a Table entity.
 */

#ifndef OAIIndexEntity_H
#define OAIIndexEntity_H

#include <QJsonObject>

#include <QJsonValue>
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIIndexEntity : public OAIObject {
public:
    OAIIndexEntity();
    OAIIndexEntity(QString json);
    ~OAIIndexEntity() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QMap<QString, QJsonValue> getCustomFeatures() const;
    void setCustomFeatures(const QMap<QString, QJsonValue> &custom_features);
    bool is_custom_features_Set() const;
    bool is_custom_features_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList<QString> getTableColumns() const;
    void setTableColumns(const QList<QString> &table_columns);
    bool is_table_columns_Set() const;
    bool is_table_columns_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    bool isUnique() const;
    void setUnique(const bool &unique);
    bool is_unique_Set() const;
    bool is_unique_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QMap<QString, QJsonValue> m_custom_features;
    bool m_custom_features_isSet;
    bool m_custom_features_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList<QString> m_table_columns;
    bool m_table_columns_isSet;
    bool m_table_columns_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    bool m_unique;
    bool m_unique_isSet;
    bool m_unique_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIIndexEntity)

#endif // OAIIndexEntity_H
