/**
 * Database Migration API
 * Manage Cloud Database Migration Service resources on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeConversionWorkspaceRevisionsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeConversionWorkspaceRevisionsResponse::OAIDescribeConversionWorkspaceRevisionsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeConversionWorkspaceRevisionsResponse::OAIDescribeConversionWorkspaceRevisionsResponse() {
    this->initializeModel();
}

OAIDescribeConversionWorkspaceRevisionsResponse::~OAIDescribeConversionWorkspaceRevisionsResponse() {}

void OAIDescribeConversionWorkspaceRevisionsResponse::initializeModel() {

    m_revisions_isSet = false;
    m_revisions_isValid = false;
}

void OAIDescribeConversionWorkspaceRevisionsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeConversionWorkspaceRevisionsResponse::fromJsonObject(QJsonObject json) {

    m_revisions_isValid = ::OpenAPI::fromJsonValue(m_revisions, json[QString("revisions")]);
    m_revisions_isSet = !json[QString("revisions")].isNull() && m_revisions_isValid;
}

QString OAIDescribeConversionWorkspaceRevisionsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeConversionWorkspaceRevisionsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_revisions.size() > 0) {
        obj.insert(QString("revisions"), ::OpenAPI::toJsonValue(m_revisions));
    }
    return obj;
}

QList<OAIConversionWorkspace> OAIDescribeConversionWorkspaceRevisionsResponse::getRevisions() const {
    return m_revisions;
}
void OAIDescribeConversionWorkspaceRevisionsResponse::setRevisions(const QList<OAIConversionWorkspace> &revisions) {
    m_revisions = revisions;
    m_revisions_isSet = true;
}

bool OAIDescribeConversionWorkspaceRevisionsResponse::is_revisions_Set() const{
    return m_revisions_isSet;
}

bool OAIDescribeConversionWorkspaceRevisionsResponse::is_revisions_Valid() const{
    return m_revisions_isValid;
}

bool OAIDescribeConversionWorkspaceRevisionsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_revisions.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeConversionWorkspaceRevisionsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
