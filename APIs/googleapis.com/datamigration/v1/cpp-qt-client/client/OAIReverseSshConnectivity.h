/**
 * Database Migration API
 * Manage Cloud Database Migration Service resources on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIReverseSshConnectivity.h
 *
 * The details needed to configure a reverse SSH tunnel between the source and destination databases. These details will be used when calling the generateSshScript method (see https://cloud.google.com/database-migration/docs/reference/rest/v1/projects.locations.migrationJobs/generateSshScript) to produce the script that will help set up the reverse SSH tunnel, and to set up the VPC peering between the Cloud SQL private network and the VPC.
 */

#ifndef OAIReverseSshConnectivity_H
#define OAIReverseSshConnectivity_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIReverseSshConnectivity : public OAIObject {
public:
    OAIReverseSshConnectivity();
    OAIReverseSshConnectivity(QString json);
    ~OAIReverseSshConnectivity() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getVm() const;
    void setVm(const QString &vm);
    bool is_vm_Set() const;
    bool is_vm_Valid() const;

    QString getVmIp() const;
    void setVmIp(const QString &vm_ip);
    bool is_vm_ip_Set() const;
    bool is_vm_ip_Valid() const;

    qint32 getVmPort() const;
    void setVmPort(const qint32 &vm_port);
    bool is_vm_port_Set() const;
    bool is_vm_port_Valid() const;

    QString getVpc() const;
    void setVpc(const QString &vpc);
    bool is_vpc_Set() const;
    bool is_vpc_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_vm;
    bool m_vm_isSet;
    bool m_vm_isValid;

    QString m_vm_ip;
    bool m_vm_ip_isSet;
    bool m_vm_ip_isValid;

    qint32 m_vm_port;
    bool m_vm_port_isSet;
    bool m_vm_port_isValid;

    QString m_vpc;
    bool m_vpc_isSet;
    bool m_vpc_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIReverseSshConnectivity)

#endif // OAIReverseSshConnectivity_H
