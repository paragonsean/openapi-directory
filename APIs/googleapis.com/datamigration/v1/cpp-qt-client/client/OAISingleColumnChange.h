/**
 * Database Migration API
 * Manage Cloud Database Migration Service resources on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISingleColumnChange.h
 *
 * Options to configure rule type SingleColumnChange. The rule is used to change the properties of a column. The rule filter field can refer to one entity. The rule scope can be one of: Column. When using this rule, if a field is not specified than the destination column&#39;s configuration will be the same as the one in the source column..
 */

#ifndef OAISingleColumnChange_H
#define OAISingleColumnChange_H

#include <QJsonObject>

#include <QJsonValue>
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISingleColumnChange : public OAIObject {
public:
    OAISingleColumnChange();
    OAISingleColumnChange(QString json);
    ~OAISingleColumnChange() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isArray() const;
    void setArray(const bool &array);
    bool is_array_Set() const;
    bool is_array_Valid() const;

    qint32 getArrayLength() const;
    void setArrayLength(const qint32 &array_length);
    bool is_array_length_Set() const;
    bool is_array_length_Valid() const;

    bool isAutoGenerated() const;
    void setAutoGenerated(const bool &auto_generated);
    bool is_auto_generated_Set() const;
    bool is_auto_generated_Valid() const;

    QString getCharset() const;
    void setCharset(const QString &charset);
    bool is_charset_Set() const;
    bool is_charset_Valid() const;

    QString getCollation() const;
    void setCollation(const QString &collation);
    bool is_collation_Set() const;
    bool is_collation_Valid() const;

    QString getComment() const;
    void setComment(const QString &comment);
    bool is_comment_Set() const;
    bool is_comment_Valid() const;

    QMap<QString, QJsonValue> getCustomFeatures() const;
    void setCustomFeatures(const QMap<QString, QJsonValue> &custom_features);
    bool is_custom_features_Set() const;
    bool is_custom_features_Valid() const;

    QString getDataType() const;
    void setDataType(const QString &data_type);
    bool is_data_type_Set() const;
    bool is_data_type_Valid() const;

    qint32 getFractionalSecondsPrecision() const;
    void setFractionalSecondsPrecision(const qint32 &fractional_seconds_precision);
    bool is_fractional_seconds_precision_Set() const;
    bool is_fractional_seconds_precision_Valid() const;

    QString getLength() const;
    void setLength(const QString &length);
    bool is_length_Set() const;
    bool is_length_Valid() const;

    bool isNullable() const;
    void setNullable(const bool &nullable);
    bool is_nullable_Set() const;
    bool is_nullable_Valid() const;

    qint32 getPrecision() const;
    void setPrecision(const qint32 &precision);
    bool is_precision_Set() const;
    bool is_precision_Valid() const;

    qint32 getScale() const;
    void setScale(const qint32 &scale);
    bool is_scale_Set() const;
    bool is_scale_Valid() const;

    QList<QString> getSetValues() const;
    void setSetValues(const QList<QString> &set_values);
    bool is_set_values_Set() const;
    bool is_set_values_Valid() const;

    bool isUdt() const;
    void setUdt(const bool &udt);
    bool is_udt_Set() const;
    bool is_udt_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_array;
    bool m_array_isSet;
    bool m_array_isValid;

    qint32 m_array_length;
    bool m_array_length_isSet;
    bool m_array_length_isValid;

    bool m_auto_generated;
    bool m_auto_generated_isSet;
    bool m_auto_generated_isValid;

    QString m_charset;
    bool m_charset_isSet;
    bool m_charset_isValid;

    QString m_collation;
    bool m_collation_isSet;
    bool m_collation_isValid;

    QString m_comment;
    bool m_comment_isSet;
    bool m_comment_isValid;

    QMap<QString, QJsonValue> m_custom_features;
    bool m_custom_features_isSet;
    bool m_custom_features_isValid;

    QString m_data_type;
    bool m_data_type_isSet;
    bool m_data_type_isValid;

    qint32 m_fractional_seconds_precision;
    bool m_fractional_seconds_precision_isSet;
    bool m_fractional_seconds_precision_isValid;

    QString m_length;
    bool m_length_isSet;
    bool m_length_isValid;

    bool m_nullable;
    bool m_nullable_isSet;
    bool m_nullable_isValid;

    qint32 m_precision;
    bool m_precision_isSet;
    bool m_precision_isValid;

    qint32 m_scale;
    bool m_scale_isSet;
    bool m_scale_isValid;

    QList<QString> m_set_values;
    bool m_set_values_isSet;
    bool m_set_values_isValid;

    bool m_udt;
    bool m_udt_isSet;
    bool m_udt_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISingleColumnChange)

#endif // OAISingleColumnChange_H
