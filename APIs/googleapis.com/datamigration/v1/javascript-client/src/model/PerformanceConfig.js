/**
 * Database Migration API
 * Manage Cloud Database Migration Service resources on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PerformanceConfig model module.
 * @module model/PerformanceConfig
 * @version v1
 */
class PerformanceConfig {
    /**
     * Constructs a new <code>PerformanceConfig</code>.
     * Performance configuration definition.
     * @alias module:model/PerformanceConfig
     */
    constructor() { 
        
        PerformanceConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PerformanceConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PerformanceConfig} obj Optional instance to populate.
     * @return {module:model/PerformanceConfig} The populated <code>PerformanceConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PerformanceConfig();

            if (data.hasOwnProperty('dumpParallelLevel')) {
                obj['dumpParallelLevel'] = ApiClient.convertToType(data['dumpParallelLevel'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PerformanceConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PerformanceConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['dumpParallelLevel'] && !(typeof data['dumpParallelLevel'] === 'string' || data['dumpParallelLevel'] instanceof String)) {
            throw new Error("Expected the field `dumpParallelLevel` to be a primitive type in the JSON string but got " + data['dumpParallelLevel']);
        }

        return true;
    }


}



/**
 * Initial dump parallelism level.
 * @member {module:model/PerformanceConfig.DumpParallelLevelEnum} dumpParallelLevel
 */
PerformanceConfig.prototype['dumpParallelLevel'] = undefined;





/**
 * Allowed values for the <code>dumpParallelLevel</code> property.
 * @enum {String}
 * @readonly
 */
PerformanceConfig['DumpParallelLevelEnum'] = {

    /**
     * value: "DUMP_PARALLEL_LEVEL_UNSPECIFIED"
     * @const
     */
    "DUMP_PARALLEL_LEVEL_UNSPECIFIED": "DUMP_PARALLEL_LEVEL_UNSPECIFIED",

    /**
     * value: "MIN"
     * @const
     */
    "MIN": "MIN",

    /**
     * value: "OPTIMAL"
     * @const
     */
    "OPTIMAL": "OPTIMAL",

    /**
     * value: "MAX"
     * @const
     */
    "MAX": "MAX"
};



export default PerformanceConfig;

