/**
 * Database Migration API
 * Manage Cloud Database Migration Service resources on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DoubleComparisonFilter model module.
 * @module model/DoubleComparisonFilter
 * @version v1
 */
class DoubleComparisonFilter {
    /**
     * Constructs a new <code>DoubleComparisonFilter</code>.
     * Filter based on relation between source value and compare value of type double in ConditionalColumnSetValue
     * @alias module:model/DoubleComparisonFilter
     */
    constructor() { 
        
        DoubleComparisonFilter.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DoubleComparisonFilter</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DoubleComparisonFilter} obj Optional instance to populate.
     * @return {module:model/DoubleComparisonFilter} The populated <code>DoubleComparisonFilter</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DoubleComparisonFilter();

            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'Number');
            }
            if (data.hasOwnProperty('valueComparison')) {
                obj['valueComparison'] = ApiClient.convertToType(data['valueComparison'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DoubleComparisonFilter</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DoubleComparisonFilter</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['valueComparison'] && !(typeof data['valueComparison'] === 'string' || data['valueComparison'] instanceof String)) {
            throw new Error("Expected the field `valueComparison` to be a primitive type in the JSON string but got " + data['valueComparison']);
        }

        return true;
    }


}



/**
 * Required. Double compare value to be used
 * @member {Number} value
 */
DoubleComparisonFilter.prototype['value'] = undefined;

/**
 * Required. Relation between source value and compare value
 * @member {module:model/DoubleComparisonFilter.ValueComparisonEnum} valueComparison
 */
DoubleComparisonFilter.prototype['valueComparison'] = undefined;





/**
 * Allowed values for the <code>valueComparison</code> property.
 * @enum {String}
 * @readonly
 */
DoubleComparisonFilter['ValueComparisonEnum'] = {

    /**
     * value: "VALUE_COMPARISON_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "VALUE_COMPARISON_UNSPECIFIED",

    /**
     * value: "VALUE_COMPARISON_IF_VALUE_SMALLER_THAN"
     * @const
     */
    "IF_VALUE_SMALLER_THAN": "VALUE_COMPARISON_IF_VALUE_SMALLER_THAN",

    /**
     * value: "VALUE_COMPARISON_IF_VALUE_SMALLER_EQUAL_THAN"
     * @const
     */
    "IF_VALUE_SMALLER_EQUAL_THAN": "VALUE_COMPARISON_IF_VALUE_SMALLER_EQUAL_THAN",

    /**
     * value: "VALUE_COMPARISON_IF_VALUE_LARGER_THAN"
     * @const
     */
    "IF_VALUE_LARGER_THAN": "VALUE_COMPARISON_IF_VALUE_LARGER_THAN",

    /**
     * value: "VALUE_COMPARISON_IF_VALUE_LARGER_EQUAL_THAN"
     * @const
     */
    "IF_VALUE_LARGER_EQUAL_THAN": "VALUE_COMPARISON_IF_VALUE_LARGER_EQUAL_THAN"
};



export default DoubleComparisonFilter;

