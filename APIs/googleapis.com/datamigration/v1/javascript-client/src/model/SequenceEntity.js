/**
 * Database Migration API
 * Manage Cloud Database Migration Service resources on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SequenceEntity model module.
 * @module model/SequenceEntity
 * @version v1
 */
class SequenceEntity {
    /**
     * Constructs a new <code>SequenceEntity</code>.
     * Sequence&#39;s parent is a schema.
     * @alias module:model/SequenceEntity
     */
    constructor() { 
        
        SequenceEntity.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SequenceEntity</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SequenceEntity} obj Optional instance to populate.
     * @return {module:model/SequenceEntity} The populated <code>SequenceEntity</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SequenceEntity();

            if (data.hasOwnProperty('cache')) {
                obj['cache'] = ApiClient.convertToType(data['cache'], 'String');
            }
            if (data.hasOwnProperty('customFeatures')) {
                obj['customFeatures'] = ApiClient.convertToType(data['customFeatures'], {'String': Object});
            }
            if (data.hasOwnProperty('cycle')) {
                obj['cycle'] = ApiClient.convertToType(data['cycle'], 'Boolean');
            }
            if (data.hasOwnProperty('increment')) {
                obj['increment'] = ApiClient.convertToType(data['increment'], 'String');
            }
            if (data.hasOwnProperty('maxValue')) {
                obj['maxValue'] = ApiClient.convertToType(data['maxValue'], 'Blob');
            }
            if (data.hasOwnProperty('minValue')) {
                obj['minValue'] = ApiClient.convertToType(data['minValue'], 'Blob');
            }
            if (data.hasOwnProperty('startValue')) {
                obj['startValue'] = ApiClient.convertToType(data['startValue'], 'Blob');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SequenceEntity</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SequenceEntity</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['cache'] && !(typeof data['cache'] === 'string' || data['cache'] instanceof String)) {
            throw new Error("Expected the field `cache` to be a primitive type in the JSON string but got " + data['cache']);
        }
        // ensure the json data is a string
        if (data['increment'] && !(typeof data['increment'] === 'string' || data['increment'] instanceof String)) {
            throw new Error("Expected the field `increment` to be a primitive type in the JSON string but got " + data['increment']);
        }

        return true;
    }


}



/**
 * Indicates number of entries to cache / precreate.
 * @member {String} cache
 */
SequenceEntity.prototype['cache'] = undefined;

/**
 * Custom engine specific features.
 * @member {Object.<String, Object>} customFeatures
 */
SequenceEntity.prototype['customFeatures'] = undefined;

/**
 * Indicates whether the sequence value should cycle through.
 * @member {Boolean} cycle
 */
SequenceEntity.prototype['cycle'] = undefined;

/**
 * Increment value for the sequence.
 * @member {String} increment
 */
SequenceEntity.prototype['increment'] = undefined;

/**
 * Maximum number for the sequence represented as bytes to accommodate large. numbers
 * @member {Blob} maxValue
 */
SequenceEntity.prototype['maxValue'] = undefined;

/**
 * Minimum number for the sequence represented as bytes to accommodate large. numbers
 * @member {Blob} minValue
 */
SequenceEntity.prototype['minValue'] = undefined;

/**
 * Start number for the sequence represented as bytes to accommodate large. numbers
 * @member {Blob} startValue
 */
SequenceEntity.prototype['startValue'] = undefined;






export default SequenceEntity;

