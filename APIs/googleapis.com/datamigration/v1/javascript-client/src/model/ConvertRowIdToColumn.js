/**
 * Database Migration API
 * Manage Cloud Database Migration Service resources on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ConvertRowIdToColumn model module.
 * @module model/ConvertRowIdToColumn
 * @version v1
 */
class ConvertRowIdToColumn {
    /**
     * Constructs a new <code>ConvertRowIdToColumn</code>.
     * Options to configure rule type ConvertROWIDToColumn. The rule is used to add column rowid to destination tables based on an Oracle rowid function/property. The rule filter field can refer to one or more entities. The rule scope can be one of: Table. This rule requires additional filter to be specified beyond the basic rule filter field, which is whether or not to work on tables which already have a primary key defined.
     * @alias module:model/ConvertRowIdToColumn
     */
    constructor() { 
        
        ConvertRowIdToColumn.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ConvertRowIdToColumn</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ConvertRowIdToColumn} obj Optional instance to populate.
     * @return {module:model/ConvertRowIdToColumn} The populated <code>ConvertRowIdToColumn</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ConvertRowIdToColumn();

            if (data.hasOwnProperty('onlyIfNoPrimaryKey')) {
                obj['onlyIfNoPrimaryKey'] = ApiClient.convertToType(data['onlyIfNoPrimaryKey'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ConvertRowIdToColumn</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ConvertRowIdToColumn</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * Required. Only work on tables without primary key defined
 * @member {Boolean} onlyIfNoPrimaryKey
 */
ConvertRowIdToColumn.prototype['onlyIfNoPrimaryKey'] = undefined;






export default ConvertRowIdToColumn;

