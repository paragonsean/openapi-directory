/**
 * Database Migration API
 * Manage Cloud Database Migration Service resources on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ConvertConversionWorkspaceRequest model module.
 * @module model/ConvertConversionWorkspaceRequest
 * @version v1
 */
class ConvertConversionWorkspaceRequest {
    /**
     * Constructs a new <code>ConvertConversionWorkspaceRequest</code>.
     * Request message for &#39;ConvertConversionWorkspace&#39; request.
     * @alias module:model/ConvertConversionWorkspaceRequest
     */
    constructor() { 
        
        ConvertConversionWorkspaceRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ConvertConversionWorkspaceRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ConvertConversionWorkspaceRequest} obj Optional instance to populate.
     * @return {module:model/ConvertConversionWorkspaceRequest} The populated <code>ConvertConversionWorkspaceRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ConvertConversionWorkspaceRequest();

            if (data.hasOwnProperty('autoCommit')) {
                obj['autoCommit'] = ApiClient.convertToType(data['autoCommit'], 'Boolean');
            }
            if (data.hasOwnProperty('convertFullPath')) {
                obj['convertFullPath'] = ApiClient.convertToType(data['convertFullPath'], 'Boolean');
            }
            if (data.hasOwnProperty('filter')) {
                obj['filter'] = ApiClient.convertToType(data['filter'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ConvertConversionWorkspaceRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ConvertConversionWorkspaceRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['filter'] && !(typeof data['filter'] === 'string' || data['filter'] instanceof String)) {
            throw new Error("Expected the field `filter` to be a primitive type in the JSON string but got " + data['filter']);
        }

        return true;
    }


}



/**
 * Optional. Specifies whether the conversion workspace is to be committed automatically after the conversion.
 * @member {Boolean} autoCommit
 */
ConvertConversionWorkspaceRequest.prototype['autoCommit'] = undefined;

/**
 * Optional. Automatically convert the full entity path for each entity specified by the filter. For example, if the filter specifies a table, that table schema (and database if there is one) will also be converted.
 * @member {Boolean} convertFullPath
 */
ConvertConversionWorkspaceRequest.prototype['convertFullPath'] = undefined;

/**
 * Optional. Filter the entities to convert. Leaving this field empty will convert all of the entities. Supports Google AIP-160 style filtering.
 * @member {String} filter
 */
ConvertConversionWorkspaceRequest.prototype['filter'] = undefined;






export default ConvertConversionWorkspaceRequest;

