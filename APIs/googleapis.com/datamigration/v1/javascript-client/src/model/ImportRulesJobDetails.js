/**
 * Database Migration API
 * Manage Cloud Database Migration Service resources on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ImportRulesJobDetails model module.
 * @module model/ImportRulesJobDetails
 * @version v1
 */
class ImportRulesJobDetails {
    /**
     * Constructs a new <code>ImportRulesJobDetails</code>.
     * Details regarding an Import Rules background job.
     * @alias module:model/ImportRulesJobDetails
     */
    constructor() { 
        
        ImportRulesJobDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ImportRulesJobDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ImportRulesJobDetails} obj Optional instance to populate.
     * @return {module:model/ImportRulesJobDetails} The populated <code>ImportRulesJobDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ImportRulesJobDetails();

            if (data.hasOwnProperty('fileFormat')) {
                obj['fileFormat'] = ApiClient.convertToType(data['fileFormat'], 'String');
            }
            if (data.hasOwnProperty('files')) {
                obj['files'] = ApiClient.convertToType(data['files'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ImportRulesJobDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ImportRulesJobDetails</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['fileFormat'] && !(typeof data['fileFormat'] === 'string' || data['fileFormat'] instanceof String)) {
            throw new Error("Expected the field `fileFormat` to be a primitive type in the JSON string but got " + data['fileFormat']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['files'])) {
            throw new Error("Expected the field `files` to be an array in the JSON data but got " + data['files']);
        }

        return true;
    }


}



/**
 * Output only. The requested file format.
 * @member {module:model/ImportRulesJobDetails.FileFormatEnum} fileFormat
 */
ImportRulesJobDetails.prototype['fileFormat'] = undefined;

/**
 * Output only. File names used for the import rules job.
 * @member {Array.<String>} files
 */
ImportRulesJobDetails.prototype['files'] = undefined;





/**
 * Allowed values for the <code>fileFormat</code> property.
 * @enum {String}
 * @readonly
 */
ImportRulesJobDetails['FileFormatEnum'] = {

    /**
     * value: "IMPORT_RULES_FILE_FORMAT_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "IMPORT_RULES_FILE_FORMAT_UNSPECIFIED",

    /**
     * value: "IMPORT_RULES_FILE_FORMAT_HARBOUR_BRIDGE_SESSION_FILE"
     * @const
     */
    "HARBOUR_BRIDGE_SESSION_FILE": "IMPORT_RULES_FILE_FORMAT_HARBOUR_BRIDGE_SESSION_FILE",

    /**
     * value: "IMPORT_RULES_FILE_FORMAT_ORATOPG_CONFIG_FILE"
     * @const
     */
    "ORATOPG_CONFIG_FILE": "IMPORT_RULES_FILE_FORMAT_ORATOPG_CONFIG_FILE"
};



export default ImportRulesJobDetails;

