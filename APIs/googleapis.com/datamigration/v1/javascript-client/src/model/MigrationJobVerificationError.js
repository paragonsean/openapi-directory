/**
 * Database Migration API
 * Manage Cloud Database Migration Service resources on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MigrationJobVerificationError model module.
 * @module model/MigrationJobVerificationError
 * @version v1
 */
class MigrationJobVerificationError {
    /**
     * Constructs a new <code>MigrationJobVerificationError</code>.
     * Error message of a verification Migration job.
     * @alias module:model/MigrationJobVerificationError
     */
    constructor() { 
        
        MigrationJobVerificationError.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MigrationJobVerificationError</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MigrationJobVerificationError} obj Optional instance to populate.
     * @return {module:model/MigrationJobVerificationError} The populated <code>MigrationJobVerificationError</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MigrationJobVerificationError();

            if (data.hasOwnProperty('errorCode')) {
                obj['errorCode'] = ApiClient.convertToType(data['errorCode'], 'String');
            }
            if (data.hasOwnProperty('errorDetailMessage')) {
                obj['errorDetailMessage'] = ApiClient.convertToType(data['errorDetailMessage'], 'String');
            }
            if (data.hasOwnProperty('errorMessage')) {
                obj['errorMessage'] = ApiClient.convertToType(data['errorMessage'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MigrationJobVerificationError</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MigrationJobVerificationError</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['errorCode'] && !(typeof data['errorCode'] === 'string' || data['errorCode'] instanceof String)) {
            throw new Error("Expected the field `errorCode` to be a primitive type in the JSON string but got " + data['errorCode']);
        }
        // ensure the json data is a string
        if (data['errorDetailMessage'] && !(typeof data['errorDetailMessage'] === 'string' || data['errorDetailMessage'] instanceof String)) {
            throw new Error("Expected the field `errorDetailMessage` to be a primitive type in the JSON string but got " + data['errorDetailMessage']);
        }
        // ensure the json data is a string
        if (data['errorMessage'] && !(typeof data['errorMessage'] === 'string' || data['errorMessage'] instanceof String)) {
            throw new Error("Expected the field `errorMessage` to be a primitive type in the JSON string but got " + data['errorMessage']);
        }

        return true;
    }


}



/**
 * Output only. An instance of ErrorCode specifying the error that occurred.
 * @member {module:model/MigrationJobVerificationError.ErrorCodeEnum} errorCode
 */
MigrationJobVerificationError.prototype['errorCode'] = undefined;

/**
 * Output only. A specific detailed error message, if supplied by the engine.
 * @member {String} errorDetailMessage
 */
MigrationJobVerificationError.prototype['errorDetailMessage'] = undefined;

/**
 * Output only. A formatted message with further details about the error and a CTA.
 * @member {String} errorMessage
 */
MigrationJobVerificationError.prototype['errorMessage'] = undefined;





/**
 * Allowed values for the <code>errorCode</code> property.
 * @enum {String}
 * @readonly
 */
MigrationJobVerificationError['ErrorCodeEnum'] = {

    /**
     * value: "ERROR_CODE_UNSPECIFIED"
     * @const
     */
    "ERROR_CODE_UNSPECIFIED": "ERROR_CODE_UNSPECIFIED",

    /**
     * value: "CONNECTION_FAILURE"
     * @const
     */
    "CONNECTION_FAILURE": "CONNECTION_FAILURE",

    /**
     * value: "AUTHENTICATION_FAILURE"
     * @const
     */
    "AUTHENTICATION_FAILURE": "AUTHENTICATION_FAILURE",

    /**
     * value: "INVALID_CONNECTION_PROFILE_CONFIG"
     * @const
     */
    "INVALID_CONNECTION_PROFILE_CONFIG": "INVALID_CONNECTION_PROFILE_CONFIG",

    /**
     * value: "VERSION_INCOMPATIBILITY"
     * @const
     */
    "VERSION_INCOMPATIBILITY": "VERSION_INCOMPATIBILITY",

    /**
     * value: "CONNECTION_PROFILE_TYPES_INCOMPATIBILITY"
     * @const
     */
    "CONNECTION_PROFILE_TYPES_INCOMPATIBILITY": "CONNECTION_PROFILE_TYPES_INCOMPATIBILITY",

    /**
     * value: "NO_PGLOGICAL_INSTALLED"
     * @const
     */
    "NO_PGLOGICAL_INSTALLED": "NO_PGLOGICAL_INSTALLED",

    /**
     * value: "PGLOGICAL_NODE_ALREADY_EXISTS"
     * @const
     */
    "PGLOGICAL_NODE_ALREADY_EXISTS": "PGLOGICAL_NODE_ALREADY_EXISTS",

    /**
     * value: "INVALID_WAL_LEVEL"
     * @const
     */
    "INVALID_WAL_LEVEL": "INVALID_WAL_LEVEL",

    /**
     * value: "INVALID_SHARED_PRELOAD_LIBRARY"
     * @const
     */
    "INVALID_SHARED_PRELOAD_LIBRARY": "INVALID_SHARED_PRELOAD_LIBRARY",

    /**
     * value: "INSUFFICIENT_MAX_REPLICATION_SLOTS"
     * @const
     */
    "INSUFFICIENT_MAX_REPLICATION_SLOTS": "INSUFFICIENT_MAX_REPLICATION_SLOTS",

    /**
     * value: "INSUFFICIENT_MAX_WAL_SENDERS"
     * @const
     */
    "INSUFFICIENT_MAX_WAL_SENDERS": "INSUFFICIENT_MAX_WAL_SENDERS",

    /**
     * value: "INSUFFICIENT_MAX_WORKER_PROCESSES"
     * @const
     */
    "INSUFFICIENT_MAX_WORKER_PROCESSES": "INSUFFICIENT_MAX_WORKER_PROCESSES",

    /**
     * value: "UNSUPPORTED_EXTENSIONS"
     * @const
     */
    "UNSUPPORTED_EXTENSIONS": "UNSUPPORTED_EXTENSIONS",

    /**
     * value: "UNSUPPORTED_MIGRATION_TYPE"
     * @const
     */
    "UNSUPPORTED_MIGRATION_TYPE": "UNSUPPORTED_MIGRATION_TYPE",

    /**
     * value: "INVALID_RDS_LOGICAL_REPLICATION"
     * @const
     */
    "INVALID_RDS_LOGICAL_REPLICATION": "INVALID_RDS_LOGICAL_REPLICATION",

    /**
     * value: "UNSUPPORTED_GTID_MODE"
     * @const
     */
    "UNSUPPORTED_GTID_MODE": "UNSUPPORTED_GTID_MODE",

    /**
     * value: "UNSUPPORTED_TABLE_DEFINITION"
     * @const
     */
    "UNSUPPORTED_TABLE_DEFINITION": "UNSUPPORTED_TABLE_DEFINITION",

    /**
     * value: "UNSUPPORTED_DEFINER"
     * @const
     */
    "UNSUPPORTED_DEFINER": "UNSUPPORTED_DEFINER",

    /**
     * value: "CANT_RESTART_RUNNING_MIGRATION"
     * @const
     */
    "CANT_RESTART_RUNNING_MIGRATION": "CANT_RESTART_RUNNING_MIGRATION",

    /**
     * value: "SOURCE_ALREADY_SETUP"
     * @const
     */
    "SOURCE_ALREADY_SETUP": "SOURCE_ALREADY_SETUP",

    /**
     * value: "TABLES_WITH_LIMITED_SUPPORT"
     * @const
     */
    "TABLES_WITH_LIMITED_SUPPORT": "TABLES_WITH_LIMITED_SUPPORT",

    /**
     * value: "UNSUPPORTED_DATABASE_LOCALE"
     * @const
     */
    "UNSUPPORTED_DATABASE_LOCALE": "UNSUPPORTED_DATABASE_LOCALE",

    /**
     * value: "UNSUPPORTED_DATABASE_FDW_CONFIG"
     * @const
     */
    "UNSUPPORTED_DATABASE_FDW_CONFIG": "UNSUPPORTED_DATABASE_FDW_CONFIG",

    /**
     * value: "ERROR_RDBMS"
     * @const
     */
    "ERROR_RDBMS": "ERROR_RDBMS",

    /**
     * value: "SOURCE_SIZE_EXCEEDS_THRESHOLD"
     * @const
     */
    "SOURCE_SIZE_EXCEEDS_THRESHOLD": "SOURCE_SIZE_EXCEEDS_THRESHOLD",

    /**
     * value: "EXISTING_CONFLICTING_DATABASES"
     * @const
     */
    "EXISTING_CONFLICTING_DATABASES": "EXISTING_CONFLICTING_DATABASES",

    /**
     * value: "PARALLEL_IMPORT_INSUFFICIENT_PRIVILEGE"
     * @const
     */
    "PARALLEL_IMPORT_INSUFFICIENT_PRIVILEGE": "PARALLEL_IMPORT_INSUFFICIENT_PRIVILEGE",

    /**
     * value: "EXISTING_DATA"
     * @const
     */
    "EXISTING_DATA": "EXISTING_DATA",

    /**
     * value: "SOURCE_MAX_SUBSCRIPTIONS"
     * @const
     */
    "SOURCE_MAX_SUBSCRIPTIONS": "SOURCE_MAX_SUBSCRIPTIONS"
};



export default MigrationJobVerificationError;

