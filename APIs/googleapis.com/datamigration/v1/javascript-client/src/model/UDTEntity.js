/**
 * Database Migration API
 * Manage Cloud Database Migration Service resources on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UDTEntity model module.
 * @module model/UDTEntity
 * @version v1
 */
class UDTEntity {
    /**
     * Constructs a new <code>UDTEntity</code>.
     * UDT&#39;s parent is a schema.
     * @alias module:model/UDTEntity
     */
    constructor() { 
        
        UDTEntity.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UDTEntity</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UDTEntity} obj Optional instance to populate.
     * @return {module:model/UDTEntity} The populated <code>UDTEntity</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UDTEntity();

            if (data.hasOwnProperty('customFeatures')) {
                obj['customFeatures'] = ApiClient.convertToType(data['customFeatures'], {'String': Object});
            }
            if (data.hasOwnProperty('udtBody')) {
                obj['udtBody'] = ApiClient.convertToType(data['udtBody'], 'String');
            }
            if (data.hasOwnProperty('udtSqlCode')) {
                obj['udtSqlCode'] = ApiClient.convertToType(data['udtSqlCode'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UDTEntity</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UDTEntity</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['udtBody'] && !(typeof data['udtBody'] === 'string' || data['udtBody'] instanceof String)) {
            throw new Error("Expected the field `udtBody` to be a primitive type in the JSON string but got " + data['udtBody']);
        }
        // ensure the json data is a string
        if (data['udtSqlCode'] && !(typeof data['udtSqlCode'] === 'string' || data['udtSqlCode'] instanceof String)) {
            throw new Error("Expected the field `udtSqlCode` to be a primitive type in the JSON string but got " + data['udtSqlCode']);
        }

        return true;
    }


}



/**
 * Custom engine specific features.
 * @member {Object.<String, Object>} customFeatures
 */
UDTEntity.prototype['customFeatures'] = undefined;

/**
 * The SQL code which creates the udt body.
 * @member {String} udtBody
 */
UDTEntity.prototype['udtBody'] = undefined;

/**
 * The SQL code which creates the udt.
 * @member {String} udtSqlCode
 */
UDTEntity.prototype['udtSqlCode'] = undefined;






export default UDTEntity;

