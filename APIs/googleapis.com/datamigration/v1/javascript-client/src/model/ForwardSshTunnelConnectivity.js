/**
 * Database Migration API
 * Manage Cloud Database Migration Service resources on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ForwardSshTunnelConnectivity model module.
 * @module model/ForwardSshTunnelConnectivity
 * @version v1
 */
class ForwardSshTunnelConnectivity {
    /**
     * Constructs a new <code>ForwardSshTunnelConnectivity</code>.
     * Forward SSH Tunnel connectivity.
     * @alias module:model/ForwardSshTunnelConnectivity
     */
    constructor() { 
        
        ForwardSshTunnelConnectivity.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ForwardSshTunnelConnectivity</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ForwardSshTunnelConnectivity} obj Optional instance to populate.
     * @return {module:model/ForwardSshTunnelConnectivity} The populated <code>ForwardSshTunnelConnectivity</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ForwardSshTunnelConnectivity();

            if (data.hasOwnProperty('hostname')) {
                obj['hostname'] = ApiClient.convertToType(data['hostname'], 'String');
            }
            if (data.hasOwnProperty('password')) {
                obj['password'] = ApiClient.convertToType(data['password'], 'String');
            }
            if (data.hasOwnProperty('port')) {
                obj['port'] = ApiClient.convertToType(data['port'], 'Number');
            }
            if (data.hasOwnProperty('privateKey')) {
                obj['privateKey'] = ApiClient.convertToType(data['privateKey'], 'String');
            }
            if (data.hasOwnProperty('username')) {
                obj['username'] = ApiClient.convertToType(data['username'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ForwardSshTunnelConnectivity</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ForwardSshTunnelConnectivity</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['hostname'] && !(typeof data['hostname'] === 'string' || data['hostname'] instanceof String)) {
            throw new Error("Expected the field `hostname` to be a primitive type in the JSON string but got " + data['hostname']);
        }
        // ensure the json data is a string
        if (data['password'] && !(typeof data['password'] === 'string' || data['password'] instanceof String)) {
            throw new Error("Expected the field `password` to be a primitive type in the JSON string but got " + data['password']);
        }
        // ensure the json data is a string
        if (data['privateKey'] && !(typeof data['privateKey'] === 'string' || data['privateKey'] instanceof String)) {
            throw new Error("Expected the field `privateKey` to be a primitive type in the JSON string but got " + data['privateKey']);
        }
        // ensure the json data is a string
        if (data['username'] && !(typeof data['username'] === 'string' || data['username'] instanceof String)) {
            throw new Error("Expected the field `username` to be a primitive type in the JSON string but got " + data['username']);
        }

        return true;
    }


}



/**
 * Required. Hostname for the SSH tunnel.
 * @member {String} hostname
 */
ForwardSshTunnelConnectivity.prototype['hostname'] = undefined;

/**
 * Input only. SSH password.
 * @member {String} password
 */
ForwardSshTunnelConnectivity.prototype['password'] = undefined;

/**
 * Port for the SSH tunnel, default value is 22.
 * @member {Number} port
 */
ForwardSshTunnelConnectivity.prototype['port'] = undefined;

/**
 * Input only. SSH private key.
 * @member {String} privateKey
 */
ForwardSshTunnelConnectivity.prototype['privateKey'] = undefined;

/**
 * Required. Username for the SSH tunnel.
 * @member {String} username
 */
ForwardSshTunnelConnectivity.prototype['username'] = undefined;






export default ForwardSshTunnelConnectivity;

