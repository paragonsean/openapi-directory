/**
 * Database Migration API
 * Manage Cloud Database Migration Service resources on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MachineConfig from './MachineConfig';

/**
 * The PrimaryInstanceSettings model module.
 * @module model/PrimaryInstanceSettings
 * @version v1
 */
class PrimaryInstanceSettings {
    /**
     * Constructs a new <code>PrimaryInstanceSettings</code>.
     * Settings for the cluster&#39;s primary instance
     * @alias module:model/PrimaryInstanceSettings
     */
    constructor() { 
        
        PrimaryInstanceSettings.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PrimaryInstanceSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PrimaryInstanceSettings} obj Optional instance to populate.
     * @return {module:model/PrimaryInstanceSettings} The populated <code>PrimaryInstanceSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PrimaryInstanceSettings();

            if (data.hasOwnProperty('databaseFlags')) {
                obj['databaseFlags'] = ApiClient.convertToType(data['databaseFlags'], {'String': 'String'});
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ApiClient.convertToType(data['labels'], {'String': 'String'});
            }
            if (data.hasOwnProperty('machineConfig')) {
                obj['machineConfig'] = MachineConfig.constructFromObject(data['machineConfig']);
            }
            if (data.hasOwnProperty('privateIp')) {
                obj['privateIp'] = ApiClient.convertToType(data['privateIp'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PrimaryInstanceSettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PrimaryInstanceSettings</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // validate the optional field `machineConfig`
        if (data['machineConfig']) { // data not null
          MachineConfig.validateJSON(data['machineConfig']);
        }
        // ensure the json data is a string
        if (data['privateIp'] && !(typeof data['privateIp'] === 'string' || data['privateIp'] instanceof String)) {
            throw new Error("Expected the field `privateIp` to be a primitive type in the JSON string but got " + data['privateIp']);
        }

        return true;
    }


}



/**
 * Database flags to pass to AlloyDB when DMS is creating the AlloyDB cluster and instances. See the AlloyDB documentation for how these can be used.
 * @member {Object.<String, String>} databaseFlags
 */
PrimaryInstanceSettings.prototype['databaseFlags'] = undefined;

/**
 * Required. The ID of the AlloyDB primary instance. The ID must satisfy the regex expression \"[a-z0-9-]+\".
 * @member {String} id
 */
PrimaryInstanceSettings.prototype['id'] = undefined;

/**
 * Labels for the AlloyDB primary instance created by DMS. An object containing a list of 'key', 'value' pairs.
 * @member {Object.<String, String>} labels
 */
PrimaryInstanceSettings.prototype['labels'] = undefined;

/**
 * @member {module:model/MachineConfig} machineConfig
 */
PrimaryInstanceSettings.prototype['machineConfig'] = undefined;

/**
 * Output only. The private IP address for the Instance. This is the connection endpoint for an end-user application.
 * @member {String} privateIp
 */
PrimaryInstanceSettings.prototype['privateIp'] = undefined;






export default PrimaryInstanceSettings;

