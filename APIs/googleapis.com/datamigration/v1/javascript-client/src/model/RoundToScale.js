/**
 * Database Migration API
 * Manage Cloud Database Migration Service resources on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RoundToScale model module.
 * @module model/RoundToScale
 * @version v1
 */
class RoundToScale {
    /**
     * Constructs a new <code>RoundToScale</code>.
     * This allows the data to change scale, for example if the source is 2 digits after the decimal point, specify round to scale value &#x3D; 2. If for example the value needs to be converted to an integer, use round to scale value &#x3D; 0.
     * @alias module:model/RoundToScale
     */
    constructor() { 
        
        RoundToScale.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RoundToScale</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RoundToScale} obj Optional instance to populate.
     * @return {module:model/RoundToScale} The populated <code>RoundToScale</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RoundToScale();

            if (data.hasOwnProperty('scale')) {
                obj['scale'] = ApiClient.convertToType(data['scale'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RoundToScale</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RoundToScale</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * Required. Scale value to be used
 * @member {Number} scale
 */
RoundToScale.prototype['scale'] = undefined;






export default RoundToScale;

