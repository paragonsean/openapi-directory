/**
 * Database Migration API
 * Manage Cloud Database Migration Service resources on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GenerateTcpProxyScriptRequest model module.
 * @module model/GenerateTcpProxyScriptRequest
 * @version v1
 */
class GenerateTcpProxyScriptRequest {
    /**
     * Constructs a new <code>GenerateTcpProxyScriptRequest</code>.
     * Request message for &#39;GenerateTcpProxyScript&#39; request.
     * @alias module:model/GenerateTcpProxyScriptRequest
     */
    constructor() { 
        
        GenerateTcpProxyScriptRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GenerateTcpProxyScriptRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GenerateTcpProxyScriptRequest} obj Optional instance to populate.
     * @return {module:model/GenerateTcpProxyScriptRequest} The populated <code>GenerateTcpProxyScriptRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GenerateTcpProxyScriptRequest();

            if (data.hasOwnProperty('vmMachineType')) {
                obj['vmMachineType'] = ApiClient.convertToType(data['vmMachineType'], 'String');
            }
            if (data.hasOwnProperty('vmName')) {
                obj['vmName'] = ApiClient.convertToType(data['vmName'], 'String');
            }
            if (data.hasOwnProperty('vmSubnet')) {
                obj['vmSubnet'] = ApiClient.convertToType(data['vmSubnet'], 'String');
            }
            if (data.hasOwnProperty('vmZone')) {
                obj['vmZone'] = ApiClient.convertToType(data['vmZone'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GenerateTcpProxyScriptRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GenerateTcpProxyScriptRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['vmMachineType'] && !(typeof data['vmMachineType'] === 'string' || data['vmMachineType'] instanceof String)) {
            throw new Error("Expected the field `vmMachineType` to be a primitive type in the JSON string but got " + data['vmMachineType']);
        }
        // ensure the json data is a string
        if (data['vmName'] && !(typeof data['vmName'] === 'string' || data['vmName'] instanceof String)) {
            throw new Error("Expected the field `vmName` to be a primitive type in the JSON string but got " + data['vmName']);
        }
        // ensure the json data is a string
        if (data['vmSubnet'] && !(typeof data['vmSubnet'] === 'string' || data['vmSubnet'] instanceof String)) {
            throw new Error("Expected the field `vmSubnet` to be a primitive type in the JSON string but got " + data['vmSubnet']);
        }
        // ensure the json data is a string
        if (data['vmZone'] && !(typeof data['vmZone'] === 'string' || data['vmZone'] instanceof String)) {
            throw new Error("Expected the field `vmZone` to be a primitive type in the JSON string but got " + data['vmZone']);
        }

        return true;
    }


}



/**
 * Required. The type of the Compute instance that will host the proxy.
 * @member {String} vmMachineType
 */
GenerateTcpProxyScriptRequest.prototype['vmMachineType'] = undefined;

/**
 * Required. The name of the Compute instance that will host the proxy.
 * @member {String} vmName
 */
GenerateTcpProxyScriptRequest.prototype['vmName'] = undefined;

/**
 * Required. The name of the subnet the Compute instance will use for private connectivity. Must be supplied in the form of projects/{project}/regions/{region}/subnetworks/{subnetwork}. Note: the region for the subnet must match the Compute instance region.
 * @member {String} vmSubnet
 */
GenerateTcpProxyScriptRequest.prototype['vmSubnet'] = undefined;

/**
 * Optional. The Google Cloud Platform zone to create the VM in. The fully qualified name of the zone must be specified, including the region name, for example \"us-central1-b\". If not specified, uses the \"-b\" zone of the destination Connection Profile's region.
 * @member {String} vmZone
 */
GenerateTcpProxyScriptRequest.prototype['vmZone'] = undefined;






export default GenerateTcpProxyScriptRequest;

