/**
 * Database Migration API
 * Manage Cloud Database Migration Service resources on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DatabaseMigrationApi);
  }
}(this, function(expect, DatabaseMigrationApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new DatabaseMigrationApi.DatabaseEntity();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DatabaseEntity', function() {
    it('should create an instance of DatabaseEntity', function() {
      // uncomment below and update the code to test DatabaseEntity
      //var instance = new DatabaseMigrationApi.DatabaseEntity();
      //expect(instance).to.be.a(DatabaseMigrationApi.DatabaseEntity);
    });

    it('should have the property database (base name: "database")', function() {
      // uncomment below and update the code to test the property database
      //var instance = new DatabaseMigrationApi.DatabaseEntity();
      //expect(instance).to.be();
    });

    it('should have the property databaseFunction (base name: "databaseFunction")', function() {
      // uncomment below and update the code to test the property databaseFunction
      //var instance = new DatabaseMigrationApi.DatabaseEntity();
      //expect(instance).to.be();
    });

    it('should have the property databasePackage (base name: "databasePackage")', function() {
      // uncomment below and update the code to test the property databasePackage
      //var instance = new DatabaseMigrationApi.DatabaseEntity();
      //expect(instance).to.be();
    });

    it('should have the property entityDdl (base name: "entityDdl")', function() {
      // uncomment below and update the code to test the property entityDdl
      //var instance = new DatabaseMigrationApi.DatabaseEntity();
      //expect(instance).to.be();
    });

    it('should have the property entityType (base name: "entityType")', function() {
      // uncomment below and update the code to test the property entityType
      //var instance = new DatabaseMigrationApi.DatabaseEntity();
      //expect(instance).to.be();
    });

    it('should have the property issues (base name: "issues")', function() {
      // uncomment below and update the code to test the property issues
      //var instance = new DatabaseMigrationApi.DatabaseEntity();
      //expect(instance).to.be();
    });

    it('should have the property mappings (base name: "mappings")', function() {
      // uncomment below and update the code to test the property mappings
      //var instance = new DatabaseMigrationApi.DatabaseEntity();
      //expect(instance).to.be();
    });

    it('should have the property materializedView (base name: "materializedView")', function() {
      // uncomment below and update the code to test the property materializedView
      //var instance = new DatabaseMigrationApi.DatabaseEntity();
      //expect(instance).to.be();
    });

    it('should have the property parentEntity (base name: "parentEntity")', function() {
      // uncomment below and update the code to test the property parentEntity
      //var instance = new DatabaseMigrationApi.DatabaseEntity();
      //expect(instance).to.be();
    });

    it('should have the property schema (base name: "schema")', function() {
      // uncomment below and update the code to test the property schema
      //var instance = new DatabaseMigrationApi.DatabaseEntity();
      //expect(instance).to.be();
    });

    it('should have the property sequence (base name: "sequence")', function() {
      // uncomment below and update the code to test the property sequence
      //var instance = new DatabaseMigrationApi.DatabaseEntity();
      //expect(instance).to.be();
    });

    it('should have the property shortName (base name: "shortName")', function() {
      // uncomment below and update the code to test the property shortName
      //var instance = new DatabaseMigrationApi.DatabaseEntity();
      //expect(instance).to.be();
    });

    it('should have the property storedProcedure (base name: "storedProcedure")', function() {
      // uncomment below and update the code to test the property storedProcedure
      //var instance = new DatabaseMigrationApi.DatabaseEntity();
      //expect(instance).to.be();
    });

    it('should have the property synonym (base name: "synonym")', function() {
      // uncomment below and update the code to test the property synonym
      //var instance = new DatabaseMigrationApi.DatabaseEntity();
      //expect(instance).to.be();
    });

    it('should have the property table (base name: "table")', function() {
      // uncomment below and update the code to test the property table
      //var instance = new DatabaseMigrationApi.DatabaseEntity();
      //expect(instance).to.be();
    });

    it('should have the property tree (base name: "tree")', function() {
      // uncomment below and update the code to test the property tree
      //var instance = new DatabaseMigrationApi.DatabaseEntity();
      //expect(instance).to.be();
    });

    it('should have the property udt (base name: "udt")', function() {
      // uncomment below and update the code to test the property udt
      //var instance = new DatabaseMigrationApi.DatabaseEntity();
      //expect(instance).to.be();
    });

    it('should have the property view (base name: "view")', function() {
      // uncomment below and update the code to test the property view
      //var instance = new DatabaseMigrationApi.DatabaseEntity();
      //expect(instance).to.be();
    });

  });

}));
