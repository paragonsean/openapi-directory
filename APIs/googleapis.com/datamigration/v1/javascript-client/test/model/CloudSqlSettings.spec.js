/**
 * Database Migration API
 * Manage Cloud Database Migration Service resources on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DatabaseMigrationApi);
  }
}(this, function(expect, DatabaseMigrationApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new DatabaseMigrationApi.CloudSqlSettings();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CloudSqlSettings', function() {
    it('should create an instance of CloudSqlSettings', function() {
      // uncomment below and update the code to test CloudSqlSettings
      //var instance = new DatabaseMigrationApi.CloudSqlSettings();
      //expect(instance).to.be.a(DatabaseMigrationApi.CloudSqlSettings);
    });

    it('should have the property activationPolicy (base name: "activationPolicy")', function() {
      // uncomment below and update the code to test the property activationPolicy
      //var instance = new DatabaseMigrationApi.CloudSqlSettings();
      //expect(instance).to.be();
    });

    it('should have the property autoStorageIncrease (base name: "autoStorageIncrease")', function() {
      // uncomment below and update the code to test the property autoStorageIncrease
      //var instance = new DatabaseMigrationApi.CloudSqlSettings();
      //expect(instance).to.be();
    });

    it('should have the property availabilityType (base name: "availabilityType")', function() {
      // uncomment below and update the code to test the property availabilityType
      //var instance = new DatabaseMigrationApi.CloudSqlSettings();
      //expect(instance).to.be();
    });

    it('should have the property cmekKeyName (base name: "cmekKeyName")', function() {
      // uncomment below and update the code to test the property cmekKeyName
      //var instance = new DatabaseMigrationApi.CloudSqlSettings();
      //expect(instance).to.be();
    });

    it('should have the property collation (base name: "collation")', function() {
      // uncomment below and update the code to test the property collation
      //var instance = new DatabaseMigrationApi.CloudSqlSettings();
      //expect(instance).to.be();
    });

    it('should have the property dataCacheConfig (base name: "dataCacheConfig")', function() {
      // uncomment below and update the code to test the property dataCacheConfig
      //var instance = new DatabaseMigrationApi.CloudSqlSettings();
      //expect(instance).to.be();
    });

    it('should have the property dataDiskSizeGb (base name: "dataDiskSizeGb")', function() {
      // uncomment below and update the code to test the property dataDiskSizeGb
      //var instance = new DatabaseMigrationApi.CloudSqlSettings();
      //expect(instance).to.be();
    });

    it('should have the property dataDiskType (base name: "dataDiskType")', function() {
      // uncomment below and update the code to test the property dataDiskType
      //var instance = new DatabaseMigrationApi.CloudSqlSettings();
      //expect(instance).to.be();
    });

    it('should have the property databaseFlags (base name: "databaseFlags")', function() {
      // uncomment below and update the code to test the property databaseFlags
      //var instance = new DatabaseMigrationApi.CloudSqlSettings();
      //expect(instance).to.be();
    });

    it('should have the property databaseVersion (base name: "databaseVersion")', function() {
      // uncomment below and update the code to test the property databaseVersion
      //var instance = new DatabaseMigrationApi.CloudSqlSettings();
      //expect(instance).to.be();
    });

    it('should have the property edition (base name: "edition")', function() {
      // uncomment below and update the code to test the property edition
      //var instance = new DatabaseMigrationApi.CloudSqlSettings();
      //expect(instance).to.be();
    });

    it('should have the property ipConfig (base name: "ipConfig")', function() {
      // uncomment below and update the code to test the property ipConfig
      //var instance = new DatabaseMigrationApi.CloudSqlSettings();
      //expect(instance).to.be();
    });

    it('should have the property rootPassword (base name: "rootPassword")', function() {
      // uncomment below and update the code to test the property rootPassword
      //var instance = new DatabaseMigrationApi.CloudSqlSettings();
      //expect(instance).to.be();
    });

    it('should have the property rootPasswordSet (base name: "rootPasswordSet")', function() {
      // uncomment below and update the code to test the property rootPasswordSet
      //var instance = new DatabaseMigrationApi.CloudSqlSettings();
      //expect(instance).to.be();
    });

    it('should have the property secondaryZone (base name: "secondaryZone")', function() {
      // uncomment below and update the code to test the property secondaryZone
      //var instance = new DatabaseMigrationApi.CloudSqlSettings();
      //expect(instance).to.be();
    });

    it('should have the property sourceId (base name: "sourceId")', function() {
      // uncomment below and update the code to test the property sourceId
      //var instance = new DatabaseMigrationApi.CloudSqlSettings();
      //expect(instance).to.be();
    });

    it('should have the property storageAutoResizeLimit (base name: "storageAutoResizeLimit")', function() {
      // uncomment below and update the code to test the property storageAutoResizeLimit
      //var instance = new DatabaseMigrationApi.CloudSqlSettings();
      //expect(instance).to.be();
    });

    it('should have the property tier (base name: "tier")', function() {
      // uncomment below and update the code to test the property tier
      //var instance = new DatabaseMigrationApi.CloudSqlSettings();
      //expect(instance).to.be();
    });

    it('should have the property userLabels (base name: "userLabels")', function() {
      // uncomment below and update the code to test the property userLabels
      //var instance = new DatabaseMigrationApi.CloudSqlSettings();
      //expect(instance).to.be();
    });

    it('should have the property zone (base name: "zone")', function() {
      // uncomment below and update the code to test the property zone
      //var instance = new DatabaseMigrationApi.CloudSqlSettings();
      //expect(instance).to.be();
    });

  });

}));
