/**
 * Database Migration API
 * Manage Cloud Database Migration Service resources on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DatabaseMigrationApi);
  }
}(this, function(expect, DatabaseMigrationApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new DatabaseMigrationApi.ColumnEntity();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ColumnEntity', function() {
    it('should create an instance of ColumnEntity', function() {
      // uncomment below and update the code to test ColumnEntity
      //var instance = new DatabaseMigrationApi.ColumnEntity();
      //expect(instance).to.be.a(DatabaseMigrationApi.ColumnEntity);
    });

    it('should have the property array (base name: "array")', function() {
      // uncomment below and update the code to test the property array
      //var instance = new DatabaseMigrationApi.ColumnEntity();
      //expect(instance).to.be();
    });

    it('should have the property arrayLength (base name: "arrayLength")', function() {
      // uncomment below and update the code to test the property arrayLength
      //var instance = new DatabaseMigrationApi.ColumnEntity();
      //expect(instance).to.be();
    });

    it('should have the property autoGenerated (base name: "autoGenerated")', function() {
      // uncomment below and update the code to test the property autoGenerated
      //var instance = new DatabaseMigrationApi.ColumnEntity();
      //expect(instance).to.be();
    });

    it('should have the property charset (base name: "charset")', function() {
      // uncomment below and update the code to test the property charset
      //var instance = new DatabaseMigrationApi.ColumnEntity();
      //expect(instance).to.be();
    });

    it('should have the property collation (base name: "collation")', function() {
      // uncomment below and update the code to test the property collation
      //var instance = new DatabaseMigrationApi.ColumnEntity();
      //expect(instance).to.be();
    });

    it('should have the property comment (base name: "comment")', function() {
      // uncomment below and update the code to test the property comment
      //var instance = new DatabaseMigrationApi.ColumnEntity();
      //expect(instance).to.be();
    });

    it('should have the property customFeatures (base name: "customFeatures")', function() {
      // uncomment below and update the code to test the property customFeatures
      //var instance = new DatabaseMigrationApi.ColumnEntity();
      //expect(instance).to.be();
    });

    it('should have the property dataType (base name: "dataType")', function() {
      // uncomment below and update the code to test the property dataType
      //var instance = new DatabaseMigrationApi.ColumnEntity();
      //expect(instance).to.be();
    });

    it('should have the property defaultValue (base name: "defaultValue")', function() {
      // uncomment below and update the code to test the property defaultValue
      //var instance = new DatabaseMigrationApi.ColumnEntity();
      //expect(instance).to.be();
    });

    it('should have the property fractionalSecondsPrecision (base name: "fractionalSecondsPrecision")', function() {
      // uncomment below and update the code to test the property fractionalSecondsPrecision
      //var instance = new DatabaseMigrationApi.ColumnEntity();
      //expect(instance).to.be();
    });

    it('should have the property length (base name: "length")', function() {
      // uncomment below and update the code to test the property length
      //var instance = new DatabaseMigrationApi.ColumnEntity();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new DatabaseMigrationApi.ColumnEntity();
      //expect(instance).to.be();
    });

    it('should have the property nullable (base name: "nullable")', function() {
      // uncomment below and update the code to test the property nullable
      //var instance = new DatabaseMigrationApi.ColumnEntity();
      //expect(instance).to.be();
    });

    it('should have the property ordinalPosition (base name: "ordinalPosition")', function() {
      // uncomment below and update the code to test the property ordinalPosition
      //var instance = new DatabaseMigrationApi.ColumnEntity();
      //expect(instance).to.be();
    });

    it('should have the property precision (base name: "precision")', function() {
      // uncomment below and update the code to test the property precision
      //var instance = new DatabaseMigrationApi.ColumnEntity();
      //expect(instance).to.be();
    });

    it('should have the property scale (base name: "scale")', function() {
      // uncomment below and update the code to test the property scale
      //var instance = new DatabaseMigrationApi.ColumnEntity();
      //expect(instance).to.be();
    });

    it('should have the property setValues (base name: "setValues")', function() {
      // uncomment below and update the code to test the property setValues
      //var instance = new DatabaseMigrationApi.ColumnEntity();
      //expect(instance).to.be();
    });

    it('should have the property udt (base name: "udt")', function() {
      // uncomment below and update the code to test the property udt
      //var instance = new DatabaseMigrationApi.ColumnEntity();
      //expect(instance).to.be();
    });

  });

}));
