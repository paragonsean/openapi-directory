/*
 * Database Migration API
 * Manage Cloud Database Migration Service resources on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.ConversionWorkspaceInfo;
import org.openapitools.client.model.DatabaseType;
import org.openapitools.client.model.DumpFlags;
import org.openapitools.client.model.PerformanceConfig;
import org.openapitools.client.model.ReverseSshConnectivity;
import org.openapitools.client.model.Status;
import org.openapitools.client.model.VpcPeeringConnectivity;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for MigrationJob
 */
public class MigrationJobTest {
    private final MigrationJob model = new MigrationJob();

    /**
     * Model tests for MigrationJob
     */
    @Test
    public void testMigrationJob() {
        // TODO: test MigrationJob
    }

    /**
     * Test the property 'cmekKeyName'
     */
    @Test
    public void cmekKeyNameTest() {
        // TODO: test cmekKeyName
    }

    /**
     * Test the property 'conversionWorkspace'
     */
    @Test
    public void conversionWorkspaceTest() {
        // TODO: test conversionWorkspace
    }

    /**
     * Test the property 'createTime'
     */
    @Test
    public void createTimeTest() {
        // TODO: test createTime
    }

    /**
     * Test the property 'destination'
     */
    @Test
    public void destinationTest() {
        // TODO: test destination
    }

    /**
     * Test the property 'destinationDatabase'
     */
    @Test
    public void destinationDatabaseTest() {
        // TODO: test destinationDatabase
    }

    /**
     * Test the property 'displayName'
     */
    @Test
    public void displayNameTest() {
        // TODO: test displayName
    }

    /**
     * Test the property 'dumpFlags'
     */
    @Test
    public void dumpFlagsTest() {
        // TODO: test dumpFlags
    }

    /**
     * Test the property 'dumpPath'
     */
    @Test
    public void dumpPathTest() {
        // TODO: test dumpPath
    }

    /**
     * Test the property 'duration'
     */
    @Test
    public void durationTest() {
        // TODO: test duration
    }

    /**
     * Test the property 'endTime'
     */
    @Test
    public void endTimeTest() {
        // TODO: test endTime
    }

    /**
     * Test the property 'error'
     */
    @Test
    public void errorTest() {
        // TODO: test error
    }

    /**
     * Test the property 'filter'
     */
    @Test
    public void filterTest() {
        // TODO: test filter
    }

    /**
     * Test the property 'labels'
     */
    @Test
    public void labelsTest() {
        // TODO: test labels
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'performanceConfig'
     */
    @Test
    public void performanceConfigTest() {
        // TODO: test performanceConfig
    }

    /**
     * Test the property 'phase'
     */
    @Test
    public void phaseTest() {
        // TODO: test phase
    }

    /**
     * Test the property 'reverseSshConnectivity'
     */
    @Test
    public void reverseSshConnectivityTest() {
        // TODO: test reverseSshConnectivity
    }

    /**
     * Test the property 'source'
     */
    @Test
    public void sourceTest() {
        // TODO: test source
    }

    /**
     * Test the property 'sourceDatabase'
     */
    @Test
    public void sourceDatabaseTest() {
        // TODO: test sourceDatabase
    }

    /**
     * Test the property 'state'
     */
    @Test
    public void stateTest() {
        // TODO: test state
    }

    /**
     * Test the property 'staticIpConnectivity'
     */
    @Test
    public void staticIpConnectivityTest() {
        // TODO: test staticIpConnectivity
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'updateTime'
     */
    @Test
    public void updateTimeTest() {
        // TODO: test updateTime
    }

    /**
     * Test the property 'vpcPeeringConnectivity'
     */
    @Test
    public void vpcPeeringConnectivityTest() {
        // TODO: test vpcPeeringConnectivity
    }

}
