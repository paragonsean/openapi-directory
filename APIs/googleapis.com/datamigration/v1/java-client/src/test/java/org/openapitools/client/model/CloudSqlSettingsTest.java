/*
 * Database Migration API
 * Manage Cloud Database Migration Service resources on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.DataCacheConfig;
import org.openapitools.client.model.SqlIpConfig;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for CloudSqlSettings
 */
public class CloudSqlSettingsTest {
    private final CloudSqlSettings model = new CloudSqlSettings();

    /**
     * Model tests for CloudSqlSettings
     */
    @Test
    public void testCloudSqlSettings() {
        // TODO: test CloudSqlSettings
    }

    /**
     * Test the property 'activationPolicy'
     */
    @Test
    public void activationPolicyTest() {
        // TODO: test activationPolicy
    }

    /**
     * Test the property 'autoStorageIncrease'
     */
    @Test
    public void autoStorageIncreaseTest() {
        // TODO: test autoStorageIncrease
    }

    /**
     * Test the property 'availabilityType'
     */
    @Test
    public void availabilityTypeTest() {
        // TODO: test availabilityType
    }

    /**
     * Test the property 'cmekKeyName'
     */
    @Test
    public void cmekKeyNameTest() {
        // TODO: test cmekKeyName
    }

    /**
     * Test the property 'collation'
     */
    @Test
    public void collationTest() {
        // TODO: test collation
    }

    /**
     * Test the property 'dataCacheConfig'
     */
    @Test
    public void dataCacheConfigTest() {
        // TODO: test dataCacheConfig
    }

    /**
     * Test the property 'dataDiskSizeGb'
     */
    @Test
    public void dataDiskSizeGbTest() {
        // TODO: test dataDiskSizeGb
    }

    /**
     * Test the property 'dataDiskType'
     */
    @Test
    public void dataDiskTypeTest() {
        // TODO: test dataDiskType
    }

    /**
     * Test the property 'databaseFlags'
     */
    @Test
    public void databaseFlagsTest() {
        // TODO: test databaseFlags
    }

    /**
     * Test the property 'databaseVersion'
     */
    @Test
    public void databaseVersionTest() {
        // TODO: test databaseVersion
    }

    /**
     * Test the property 'edition'
     */
    @Test
    public void editionTest() {
        // TODO: test edition
    }

    /**
     * Test the property 'ipConfig'
     */
    @Test
    public void ipConfigTest() {
        // TODO: test ipConfig
    }

    /**
     * Test the property 'rootPassword'
     */
    @Test
    public void rootPasswordTest() {
        // TODO: test rootPassword
    }

    /**
     * Test the property 'rootPasswordSet'
     */
    @Test
    public void rootPasswordSetTest() {
        // TODO: test rootPasswordSet
    }

    /**
     * Test the property 'secondaryZone'
     */
    @Test
    public void secondaryZoneTest() {
        // TODO: test secondaryZone
    }

    /**
     * Test the property 'sourceId'
     */
    @Test
    public void sourceIdTest() {
        // TODO: test sourceId
    }

    /**
     * Test the property 'storageAutoResizeLimit'
     */
    @Test
    public void storageAutoResizeLimitTest() {
        // TODO: test storageAutoResizeLimit
    }

    /**
     * Test the property 'tier'
     */
    @Test
    public void tierTest() {
        // TODO: test tier
    }

    /**
     * Test the property 'userLabels'
     */
    @Test
    public void userLabelsTest() {
        // TODO: test userLabels
    }

    /**
     * Test the property 'zone'
     */
    @Test
    public void zoneTest() {
        // TODO: test zone
    }

}
