# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleSearchIdeahubV1betaIdeaActivity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ideas: List[str]=None, name: str=None, topics: List[str]=None, type: str=None, uri: str=None):
        """GoogleSearchIdeahubV1betaIdeaActivity - a model defined in OpenAPI

        :param ideas: The ideas of this GoogleSearchIdeahubV1betaIdeaActivity.
        :param name: The name of this GoogleSearchIdeahubV1betaIdeaActivity.
        :param topics: The topics of this GoogleSearchIdeahubV1betaIdeaActivity.
        :param type: The type of this GoogleSearchIdeahubV1betaIdeaActivity.
        :param uri: The uri of this GoogleSearchIdeahubV1betaIdeaActivity.
        """
        self.openapi_types = {
            'ideas': List[str],
            'name': str,
            'topics': List[str],
            'type': str,
            'uri': str
        }

        self.attribute_map = {
            'ideas': 'ideas',
            'name': 'name',
            'topics': 'topics',
            'type': 'type',
            'uri': 'uri'
        }

        self._ideas = ideas
        self._name = name
        self._topics = topics
        self._type = type
        self._uri = uri

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleSearchIdeahubV1betaIdeaActivity':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleSearchIdeahubV1betaIdeaActivity of this GoogleSearchIdeahubV1betaIdeaActivity.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ideas(self):
        """Gets the ideas of this GoogleSearchIdeahubV1betaIdeaActivity.

        The Idea IDs for this entry. If empty, topics should be set.

        :return: The ideas of this GoogleSearchIdeahubV1betaIdeaActivity.
        :rtype: List[str]
        """
        return self._ideas

    @ideas.setter
    def ideas(self, ideas):
        """Sets the ideas of this GoogleSearchIdeahubV1betaIdeaActivity.

        The Idea IDs for this entry. If empty, topics should be set.

        :param ideas: The ideas of this GoogleSearchIdeahubV1betaIdeaActivity.
        :type ideas: List[str]
        """

        self._ideas = ideas

    @property
    def name(self):
        """Gets the name of this GoogleSearchIdeahubV1betaIdeaActivity.

        Unique identifier for the idea activity. The name is ignored when creating an idea activity. Format: platforms/{platform}/properties/{property}/ideaActivities/{idea_activity}

        :return: The name of this GoogleSearchIdeahubV1betaIdeaActivity.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleSearchIdeahubV1betaIdeaActivity.

        Unique identifier for the idea activity. The name is ignored when creating an idea activity. Format: platforms/{platform}/properties/{property}/ideaActivities/{idea_activity}

        :param name: The name of this GoogleSearchIdeahubV1betaIdeaActivity.
        :type name: str
        """

        self._name = name

    @property
    def topics(self):
        """Gets the topics of this GoogleSearchIdeahubV1betaIdeaActivity.

        The Topic IDs for this entry. If empty, ideas should be set.

        :return: The topics of this GoogleSearchIdeahubV1betaIdeaActivity.
        :rtype: List[str]
        """
        return self._topics

    @topics.setter
    def topics(self, topics):
        """Sets the topics of this GoogleSearchIdeahubV1betaIdeaActivity.

        The Topic IDs for this entry. If empty, ideas should be set.

        :param topics: The topics of this GoogleSearchIdeahubV1betaIdeaActivity.
        :type topics: List[str]
        """

        self._topics = topics

    @property
    def type(self):
        """Gets the type of this GoogleSearchIdeahubV1betaIdeaActivity.

        The type of activity performed.

        :return: The type of this GoogleSearchIdeahubV1betaIdeaActivity.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this GoogleSearchIdeahubV1betaIdeaActivity.

        The type of activity performed.

        :param type: The type of this GoogleSearchIdeahubV1betaIdeaActivity.
        :type type: str
        """
        allowed_values = ["TYPE_UNSPECIFIED", "POST_DRAFTED", "POST_PUBLISHED", "POST_DELETED", "POST_UNPUBLISHED"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type

    @property
    def uri(self):
        """Gets the uri of this GoogleSearchIdeahubV1betaIdeaActivity.

        The uri the activity relates to.

        :return: The uri of this GoogleSearchIdeahubV1betaIdeaActivity.
        :rtype: str
        """
        return self._uri

    @uri.setter
    def uri(self, uri):
        """Sets the uri of this GoogleSearchIdeahubV1betaIdeaActivity.

        The uri the activity relates to.

        :param uri: The uri of this GoogleSearchIdeahubV1betaIdeaActivity.
        :type uri: str
        """

        self._uri = uri
