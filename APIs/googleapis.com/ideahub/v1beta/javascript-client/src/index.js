/**
 * Idea Hub API
 * This is an invitation-only API.
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import GoogleSearchIdeahubV1betaAvailableLocale from './model/GoogleSearchIdeahubV1betaAvailableLocale';
import GoogleSearchIdeahubV1betaIdea from './model/GoogleSearchIdeahubV1betaIdea';
import GoogleSearchIdeahubV1betaIdeaActivity from './model/GoogleSearchIdeahubV1betaIdeaActivity';
import GoogleSearchIdeahubV1betaIdeaState from './model/GoogleSearchIdeahubV1betaIdeaState';
import GoogleSearchIdeahubV1betaListAvailableLocalesResponse from './model/GoogleSearchIdeahubV1betaListAvailableLocalesResponse';
import GoogleSearchIdeahubV1betaListIdeasResponse from './model/GoogleSearchIdeahubV1betaListIdeasResponse';
import GoogleSearchIdeahubV1betaTopic from './model/GoogleSearchIdeahubV1betaTopic';
import GoogleSearchIdeahubV1betaTopicState from './model/GoogleSearchIdeahubV1betaTopicState';
import PlatformsApi from './api/PlatformsApi';


/**
* This is an invitation-only API..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var IdeaHubApi = require('index'); // See note below*.
* var xxxSvc = new IdeaHubApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new IdeaHubApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new IdeaHubApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new IdeaHubApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v1beta
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The GoogleSearchIdeahubV1betaAvailableLocale model constructor.
     * @property {module:model/GoogleSearchIdeahubV1betaAvailableLocale}
     */
    GoogleSearchIdeahubV1betaAvailableLocale,

    /**
     * The GoogleSearchIdeahubV1betaIdea model constructor.
     * @property {module:model/GoogleSearchIdeahubV1betaIdea}
     */
    GoogleSearchIdeahubV1betaIdea,

    /**
     * The GoogleSearchIdeahubV1betaIdeaActivity model constructor.
     * @property {module:model/GoogleSearchIdeahubV1betaIdeaActivity}
     */
    GoogleSearchIdeahubV1betaIdeaActivity,

    /**
     * The GoogleSearchIdeahubV1betaIdeaState model constructor.
     * @property {module:model/GoogleSearchIdeahubV1betaIdeaState}
     */
    GoogleSearchIdeahubV1betaIdeaState,

    /**
     * The GoogleSearchIdeahubV1betaListAvailableLocalesResponse model constructor.
     * @property {module:model/GoogleSearchIdeahubV1betaListAvailableLocalesResponse}
     */
    GoogleSearchIdeahubV1betaListAvailableLocalesResponse,

    /**
     * The GoogleSearchIdeahubV1betaListIdeasResponse model constructor.
     * @property {module:model/GoogleSearchIdeahubV1betaListIdeasResponse}
     */
    GoogleSearchIdeahubV1betaListIdeasResponse,

    /**
     * The GoogleSearchIdeahubV1betaTopic model constructor.
     * @property {module:model/GoogleSearchIdeahubV1betaTopic}
     */
    GoogleSearchIdeahubV1betaTopic,

    /**
     * The GoogleSearchIdeahubV1betaTopicState model constructor.
     * @property {module:model/GoogleSearchIdeahubV1betaTopicState}
     */
    GoogleSearchIdeahubV1betaTopicState,

    /**
    * The PlatformsApi service constructor.
    * @property {module:api/PlatformsApi}
    */
    PlatformsApi
};
