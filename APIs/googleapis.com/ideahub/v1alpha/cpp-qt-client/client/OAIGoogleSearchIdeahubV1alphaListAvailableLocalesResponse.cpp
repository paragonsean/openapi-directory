/**
 * Idea Hub API
 * This is an invitation-only API.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleSearchIdeahubV1alphaListAvailableLocalesResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleSearchIdeahubV1alphaListAvailableLocalesResponse::OAIGoogleSearchIdeahubV1alphaListAvailableLocalesResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleSearchIdeahubV1alphaListAvailableLocalesResponse::OAIGoogleSearchIdeahubV1alphaListAvailableLocalesResponse() {
    this->initializeModel();
}

OAIGoogleSearchIdeahubV1alphaListAvailableLocalesResponse::~OAIGoogleSearchIdeahubV1alphaListAvailableLocalesResponse() {}

void OAIGoogleSearchIdeahubV1alphaListAvailableLocalesResponse::initializeModel() {

    m_available_locales_isSet = false;
    m_available_locales_isValid = false;

    m_next_page_token_isSet = false;
    m_next_page_token_isValid = false;
}

void OAIGoogleSearchIdeahubV1alphaListAvailableLocalesResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleSearchIdeahubV1alphaListAvailableLocalesResponse::fromJsonObject(QJsonObject json) {

    m_available_locales_isValid = ::OpenAPI::fromJsonValue(m_available_locales, json[QString("availableLocales")]);
    m_available_locales_isSet = !json[QString("availableLocales")].isNull() && m_available_locales_isValid;

    m_next_page_token_isValid = ::OpenAPI::fromJsonValue(m_next_page_token, json[QString("nextPageToken")]);
    m_next_page_token_isSet = !json[QString("nextPageToken")].isNull() && m_next_page_token_isValid;
}

QString OAIGoogleSearchIdeahubV1alphaListAvailableLocalesResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleSearchIdeahubV1alphaListAvailableLocalesResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_available_locales.size() > 0) {
        obj.insert(QString("availableLocales"), ::OpenAPI::toJsonValue(m_available_locales));
    }
    if (m_next_page_token_isSet) {
        obj.insert(QString("nextPageToken"), ::OpenAPI::toJsonValue(m_next_page_token));
    }
    return obj;
}

QList<OAIGoogleSearchIdeahubV1alphaAvailableLocale> OAIGoogleSearchIdeahubV1alphaListAvailableLocalesResponse::getAvailableLocales() const {
    return m_available_locales;
}
void OAIGoogleSearchIdeahubV1alphaListAvailableLocalesResponse::setAvailableLocales(const QList<OAIGoogleSearchIdeahubV1alphaAvailableLocale> &available_locales) {
    m_available_locales = available_locales;
    m_available_locales_isSet = true;
}

bool OAIGoogleSearchIdeahubV1alphaListAvailableLocalesResponse::is_available_locales_Set() const{
    return m_available_locales_isSet;
}

bool OAIGoogleSearchIdeahubV1alphaListAvailableLocalesResponse::is_available_locales_Valid() const{
    return m_available_locales_isValid;
}

QString OAIGoogleSearchIdeahubV1alphaListAvailableLocalesResponse::getNextPageToken() const {
    return m_next_page_token;
}
void OAIGoogleSearchIdeahubV1alphaListAvailableLocalesResponse::setNextPageToken(const QString &next_page_token) {
    m_next_page_token = next_page_token;
    m_next_page_token_isSet = true;
}

bool OAIGoogleSearchIdeahubV1alphaListAvailableLocalesResponse::is_next_page_token_Set() const{
    return m_next_page_token_isSet;
}

bool OAIGoogleSearchIdeahubV1alphaListAvailableLocalesResponse::is_next_page_token_Valid() const{
    return m_next_page_token_isValid;
}

bool OAIGoogleSearchIdeahubV1alphaListAvailableLocalesResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_available_locales.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_page_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleSearchIdeahubV1alphaListAvailableLocalesResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
