/**
 * Idea Hub API
 * This is an invitation-only API.
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import GoogleSearchIdeahubV1alphaIdeaActivity from '../model/GoogleSearchIdeahubV1alphaIdeaActivity';
import GoogleSearchIdeahubV1alphaListAvailableLocalesResponse from '../model/GoogleSearchIdeahubV1alphaListAvailableLocalesResponse';
import GoogleSearchIdeahubV1alphaListIdeasResponse from '../model/GoogleSearchIdeahubV1alphaListIdeasResponse';
import GoogleSearchIdeahubV1alphaTopicState from '../model/GoogleSearchIdeahubV1alphaTopicState';

/**
* Platforms service.
* @module api/PlatformsApi
* @version v1alpha
*/
export default class PlatformsApi {

    /**
    * Constructs a new PlatformsApi. 
    * @alias module:api/PlatformsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the ideahubPlatformsPropertiesIdeaActivitiesCreate operation.
     * @callback module:api/PlatformsApi~ideahubPlatformsPropertiesIdeaActivitiesCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleSearchIdeahubV1alphaIdeaActivity} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates an idea activity entry.
     * @param {String} parent Required. The parent resource where this idea activity will be created. Format: platforms/{platform}/property/{property}
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleSearchIdeahubV1alphaIdeaActivity} [googleSearchIdeahubV1alphaIdeaActivity] 
     * @param {module:api/PlatformsApi~ideahubPlatformsPropertiesIdeaActivitiesCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleSearchIdeahubV1alphaIdeaActivity}
     */
    ideahubPlatformsPropertiesIdeaActivitiesCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleSearchIdeahubV1alphaIdeaActivity'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling ideahubPlatformsPropertiesIdeaActivitiesCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleSearchIdeahubV1alphaIdeaActivity;
      return this.apiClient.callApi(
        '/v1alpha/{parent}/ideaActivities', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the ideahubPlatformsPropertiesIdeasList operation.
     * @callback module:api/PlatformsApi~ideahubPlatformsPropertiesIdeasListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleSearchIdeahubV1alphaListIdeasResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List ideas for a given Creator and filter and sort options.
     * @param {String} parent If defined, specifies the creator for which to filter by. Format: publishers/{publisher}/properties/{property}
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [filter] Allows filtering. Supported syntax: * Filter expressions are made up of one or more restrictions. * Restrictions are implicitly combined, as if the `AND` operator was always used. The `OR` operator is currently unsupported. * Supported functions: - `saved(bool)`: If set to true, fetches only saved ideas. If set to false, fetches all except saved ideas. Can't be simultaneously used with `dismissed(bool)`. - `dismissed(bool)`: If set to true, fetches only dismissed ideas. Can't be simultaneously used with `saved(bool)`. The `false` value is currently unsupported. Examples: * `saved(true)` * `saved(false)` * `dismissed(true)` The length of this field should be no more than 500 characters.
     * @param {String} [orderBy] Order semantics described below.
     * @param {Number} [pageSize] The maximum number of ideas per page. If unspecified, at most 10 ideas will be returned. The maximum value is 2000; values above 2000 will be coerced to 2000.
     * @param {String} [pageToken] Used to fetch next page.
     * @param {module:api/PlatformsApi~ideahubPlatformsPropertiesIdeasListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleSearchIdeahubV1alphaListIdeasResponse}
     */
    ideahubPlatformsPropertiesIdeasList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling ideahubPlatformsPropertiesIdeasList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'filter': opts['filter'],
        'orderBy': opts['orderBy'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleSearchIdeahubV1alphaListIdeasResponse;
      return this.apiClient.callApi(
        '/v1alpha/{parent}/ideas', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the ideahubPlatformsPropertiesLocalesList operation.
     * @callback module:api/PlatformsApi~ideahubPlatformsPropertiesLocalesListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleSearchIdeahubV1alphaListAvailableLocalesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns which locales ideas are available in for a given Creator.
     * @param {String} parent Required. The web property to check idea availability for Format: platforms/{platform}/property/{property}
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Number} [pageSize] The maximum number of locales to return. The service may return fewer than this value. If unspecified, at most 100 locales will be returned. The maximum value is 100; values above 100 will be coerced to 100.
     * @param {String} [pageToken] A page token, received from a previous `ListAvailableLocales` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListAvailableLocales` must match the call that provided the page token.
     * @param {module:api/PlatformsApi~ideahubPlatformsPropertiesLocalesListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleSearchIdeahubV1alphaListAvailableLocalesResponse}
     */
    ideahubPlatformsPropertiesLocalesList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling ideahubPlatformsPropertiesLocalesList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleSearchIdeahubV1alphaListAvailableLocalesResponse;
      return this.apiClient.callApi(
        '/v1alpha/{parent}/locales', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the ideahubPlatformsPropertiesTopicStatesPatch operation.
     * @callback module:api/PlatformsApi~ideahubPlatformsPropertiesTopicStatesPatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleSearchIdeahubV1alphaTopicState} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update a topic state resource.
     * @param {String} name Unique identifier for the topic state. Format: platforms/{platform}/properties/{property}/topicStates/{topic_state}
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [updateMask] The list of fields to be updated.
     * @param {module:model/GoogleSearchIdeahubV1alphaTopicState} [googleSearchIdeahubV1alphaTopicState] 
     * @param {module:api/PlatformsApi~ideahubPlatformsPropertiesTopicStatesPatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleSearchIdeahubV1alphaTopicState}
     */
    ideahubPlatformsPropertiesTopicStatesPatch(name, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleSearchIdeahubV1alphaTopicState'];
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling ideahubPlatformsPropertiesTopicStatesPatch");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'updateMask': opts['updateMask']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleSearchIdeahubV1alphaTopicState;
      return this.apiClient.callApi(
        '/v1alpha/{name}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
