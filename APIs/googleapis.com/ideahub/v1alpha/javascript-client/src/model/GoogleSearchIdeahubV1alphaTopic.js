/**
 * Idea Hub API
 * This is an invitation-only API.
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleSearchIdeahubV1alphaTopic model module.
 * @module model/GoogleSearchIdeahubV1alphaTopic
 * @version v1alpha
 */
class GoogleSearchIdeahubV1alphaTopic {
    /**
     * Constructs a new <code>GoogleSearchIdeahubV1alphaTopic</code>.
     * Represents a Topic umbrella for a list of questions that a Creator may want to respond to.
     * @alias module:model/GoogleSearchIdeahubV1alphaTopic
     */
    constructor() { 
        
        GoogleSearchIdeahubV1alphaTopic.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleSearchIdeahubV1alphaTopic</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleSearchIdeahubV1alphaTopic} obj Optional instance to populate.
     * @return {module:model/GoogleSearchIdeahubV1alphaTopic} The populated <code>GoogleSearchIdeahubV1alphaTopic</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleSearchIdeahubV1alphaTopic();

            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('mid')) {
                obj['mid'] = ApiClient.convertToType(data['mid'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleSearchIdeahubV1alphaTopic</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleSearchIdeahubV1alphaTopic</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['mid'] && !(typeof data['mid'] === 'string' || data['mid'] instanceof String)) {
            throw new Error("Expected the field `mid` to be a primitive type in the JSON string but got " + data['mid']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}



/**
 * String displayed to the creator indicating the name of the Topic.
 * @member {String} displayName
 */
GoogleSearchIdeahubV1alphaTopic.prototype['displayName'] = undefined;

/**
 * The mID of the topic.
 * @member {String} mid
 */
GoogleSearchIdeahubV1alphaTopic.prototype['mid'] = undefined;

/**
 * Unique identifier for the topic. Format: topics/{topic}
 * @member {String} name
 */
GoogleSearchIdeahubV1alphaTopic.prototype['name'] = undefined;






export default GoogleSearchIdeahubV1alphaTopic;

