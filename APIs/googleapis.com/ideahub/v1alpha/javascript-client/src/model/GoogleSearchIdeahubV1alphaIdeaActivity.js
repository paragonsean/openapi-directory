/**
 * Idea Hub API
 * This is an invitation-only API.
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleSearchIdeahubV1alphaIdeaActivity model module.
 * @module model/GoogleSearchIdeahubV1alphaIdeaActivity
 * @version v1alpha
 */
class GoogleSearchIdeahubV1alphaIdeaActivity {
    /**
     * Constructs a new <code>GoogleSearchIdeahubV1alphaIdeaActivity</code>.
     * An idea activity entry.
     * @alias module:model/GoogleSearchIdeahubV1alphaIdeaActivity
     */
    constructor() { 
        
        GoogleSearchIdeahubV1alphaIdeaActivity.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleSearchIdeahubV1alphaIdeaActivity</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleSearchIdeahubV1alphaIdeaActivity} obj Optional instance to populate.
     * @return {module:model/GoogleSearchIdeahubV1alphaIdeaActivity} The populated <code>GoogleSearchIdeahubV1alphaIdeaActivity</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleSearchIdeahubV1alphaIdeaActivity();

            if (data.hasOwnProperty('ideas')) {
                obj['ideas'] = ApiClient.convertToType(data['ideas'], ['String']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('topics')) {
                obj['topics'] = ApiClient.convertToType(data['topics'], ['String']);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('uri')) {
                obj['uri'] = ApiClient.convertToType(data['uri'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleSearchIdeahubV1alphaIdeaActivity</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleSearchIdeahubV1alphaIdeaActivity</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['ideas'])) {
            throw new Error("Expected the field `ideas` to be an array in the JSON data but got " + data['ideas']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['topics'])) {
            throw new Error("Expected the field `topics` to be an array in the JSON data but got " + data['topics']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['uri'] && !(typeof data['uri'] === 'string' || data['uri'] instanceof String)) {
            throw new Error("Expected the field `uri` to be a primitive type in the JSON string but got " + data['uri']);
        }

        return true;
    }


}



/**
 * The Idea IDs for this entry. If empty, topics should be set.
 * @member {Array.<String>} ideas
 */
GoogleSearchIdeahubV1alphaIdeaActivity.prototype['ideas'] = undefined;

/**
 * Unique identifier for the idea activity. The name is ignored when creating an idea activity. Format: platforms/{platform}/properties/{property}/ideaActivities/{idea_activity}
 * @member {String} name
 */
GoogleSearchIdeahubV1alphaIdeaActivity.prototype['name'] = undefined;

/**
 * The Topic IDs for this entry. If empty, ideas should be set.
 * @member {Array.<String>} topics
 */
GoogleSearchIdeahubV1alphaIdeaActivity.prototype['topics'] = undefined;

/**
 * The type of activity performed.
 * @member {module:model/GoogleSearchIdeahubV1alphaIdeaActivity.TypeEnum} type
 */
GoogleSearchIdeahubV1alphaIdeaActivity.prototype['type'] = undefined;

/**
 * The uri the activity relates to.
 * @member {String} uri
 */
GoogleSearchIdeahubV1alphaIdeaActivity.prototype['uri'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
GoogleSearchIdeahubV1alphaIdeaActivity['TypeEnum'] = {

    /**
     * value: "TYPE_UNSPECIFIED"
     * @const
     */
    "TYPE_UNSPECIFIED": "TYPE_UNSPECIFIED",

    /**
     * value: "POST_DRAFTED"
     * @const
     */
    "POST_DRAFTED": "POST_DRAFTED",

    /**
     * value: "POST_PUBLISHED"
     * @const
     */
    "POST_PUBLISHED": "POST_PUBLISHED",

    /**
     * value: "POST_DELETED"
     * @const
     */
    "POST_DELETED": "POST_DELETED",

    /**
     * value: "POST_UNPUBLISHED"
     * @const
     */
    "POST_UNPUBLISHED": "POST_UNPUBLISHED"
};



export default GoogleSearchIdeahubV1alphaIdeaActivity;

