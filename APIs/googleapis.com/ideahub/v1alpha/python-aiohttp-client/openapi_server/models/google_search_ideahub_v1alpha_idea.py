# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_search_ideahub_v1alpha_topic import GoogleSearchIdeahubV1alphaTopic
from openapi_server import util


class GoogleSearchIdeahubV1alphaIdea(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, text: str=None, topics: List[GoogleSearchIdeahubV1alphaTopic]=None):
        """GoogleSearchIdeahubV1alphaIdea - a model defined in OpenAPI

        :param name: The name of this GoogleSearchIdeahubV1alphaIdea.
        :param text: The text of this GoogleSearchIdeahubV1alphaIdea.
        :param topics: The topics of this GoogleSearchIdeahubV1alphaIdea.
        """
        self.openapi_types = {
            'name': str,
            'text': str,
            'topics': List[GoogleSearchIdeahubV1alphaTopic]
        }

        self.attribute_map = {
            'name': 'name',
            'text': 'text',
            'topics': 'topics'
        }

        self._name = name
        self._text = text
        self._topics = topics

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleSearchIdeahubV1alphaIdea':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleSearchIdeahubV1alphaIdea of this GoogleSearchIdeahubV1alphaIdea.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this GoogleSearchIdeahubV1alphaIdea.

        Unique identifier for the idea. Format: ideas/{ideaId}

        :return: The name of this GoogleSearchIdeahubV1alphaIdea.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleSearchIdeahubV1alphaIdea.

        Unique identifier for the idea. Format: ideas/{ideaId}

        :param name: The name of this GoogleSearchIdeahubV1alphaIdea.
        :type name: str
        """

        self._name = name

    @property
    def text(self):
        """Gets the text of this GoogleSearchIdeahubV1alphaIdea.

        The idea’s text.

        :return: The text of this GoogleSearchIdeahubV1alphaIdea.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text):
        """Sets the text of this GoogleSearchIdeahubV1alphaIdea.

        The idea’s text.

        :param text: The text of this GoogleSearchIdeahubV1alphaIdea.
        :type text: str
        """

        self._text = text

    @property
    def topics(self):
        """Gets the topics of this GoogleSearchIdeahubV1alphaIdea.

        The Topics that match the idea.

        :return: The topics of this GoogleSearchIdeahubV1alphaIdea.
        :rtype: List[GoogleSearchIdeahubV1alphaTopic]
        """
        return self._topics

    @topics.setter
    def topics(self, topics):
        """Sets the topics of this GoogleSearchIdeahubV1alphaIdea.

        The Topics that match the idea.

        :param topics: The topics of this GoogleSearchIdeahubV1alphaIdea.
        :type topics: List[GoogleSearchIdeahubV1alphaTopic]
        """

        self._topics = topics
