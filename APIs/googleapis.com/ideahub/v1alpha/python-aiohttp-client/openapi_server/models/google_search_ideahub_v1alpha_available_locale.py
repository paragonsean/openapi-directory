# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleSearchIdeahubV1alphaAvailableLocale(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, locale: str=None, name: str=None):
        """GoogleSearchIdeahubV1alphaAvailableLocale - a model defined in OpenAPI

        :param locale: The locale of this GoogleSearchIdeahubV1alphaAvailableLocale.
        :param name: The name of this GoogleSearchIdeahubV1alphaAvailableLocale.
        """
        self.openapi_types = {
            'locale': str,
            'name': str
        }

        self.attribute_map = {
            'locale': 'locale',
            'name': 'name'
        }

        self._locale = locale
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleSearchIdeahubV1alphaAvailableLocale':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleSearchIdeahubV1alphaAvailableLocale of this GoogleSearchIdeahubV1alphaAvailableLocale.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def locale(self):
        """Gets the locale of this GoogleSearchIdeahubV1alphaAvailableLocale.

        A string in BCP 47 format, without a resource prefix.

        :return: The locale of this GoogleSearchIdeahubV1alphaAvailableLocale.
        :rtype: str
        """
        return self._locale

    @locale.setter
    def locale(self, locale):
        """Sets the locale of this GoogleSearchIdeahubV1alphaAvailableLocale.

        A string in BCP 47 format, without a resource prefix.

        :param locale: The locale of this GoogleSearchIdeahubV1alphaAvailableLocale.
        :type locale: str
        """

        self._locale = locale

    @property
    def name(self):
        """Gets the name of this GoogleSearchIdeahubV1alphaAvailableLocale.

        A string in BCP 47 format, prefixed with the platform and property name, and \"locales/\". Format: platforms/{platform}/properties/{property}/locales/{locale}

        :return: The name of this GoogleSearchIdeahubV1alphaAvailableLocale.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleSearchIdeahubV1alphaAvailableLocale.

        A string in BCP 47 format, prefixed with the platform and property name, and \"locales/\". Format: platforms/{platform}/properties/{property}/locales/{locale}

        :param name: The name of this GoogleSearchIdeahubV1alphaAvailableLocale.
        :type name: str
        """

        self._name = name
