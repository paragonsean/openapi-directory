/**
 * BigQuery Data Transfer API
 * Schedule queries or transfer external data from SaaS applications to Google BigQuery on a regular basis.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITransferRun.h
 *
 * Represents a data transfer run.
 */

#ifndef OAITransferRun_H
#define OAITransferRun_H

#include <QJsonObject>

#include "OAIEmailPreferences.h"
#include "OAIStatus.h"
#include <QJsonValue>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIEmailPreferences;
class OAIStatus;

class OAITransferRun : public OAIObject {
public:
    OAITransferRun();
    OAITransferRun(QString json);
    ~OAITransferRun() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDataSourceId() const;
    void setDataSourceId(const QString &data_source_id);
    bool is_data_source_id_Set() const;
    bool is_data_source_id_Valid() const;

    QString getDestinationDatasetId() const;
    void setDestinationDatasetId(const QString &destination_dataset_id);
    bool is_destination_dataset_id_Set() const;
    bool is_destination_dataset_id_Valid() const;

    OAIEmailPreferences getEmailPreferences() const;
    void setEmailPreferences(const OAIEmailPreferences &email_preferences);
    bool is_email_preferences_Set() const;
    bool is_email_preferences_Valid() const;

    QString getEndTime() const;
    void setEndTime(const QString &end_time);
    bool is_end_time_Set() const;
    bool is_end_time_Valid() const;

    OAIStatus getErrorStatus() const;
    void setErrorStatus(const OAIStatus &error_status);
    bool is_error_status_Set() const;
    bool is_error_status_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getNotificationPubsubTopic() const;
    void setNotificationPubsubTopic(const QString &notification_pubsub_topic);
    bool is_notification_pubsub_topic_Set() const;
    bool is_notification_pubsub_topic_Valid() const;

    QMap<QString, QJsonValue> getParams() const;
    void setParams(const QMap<QString, QJsonValue> &params);
    bool is_params_Set() const;
    bool is_params_Valid() const;

    QString getRunTime() const;
    void setRunTime(const QString &run_time);
    bool is_run_time_Set() const;
    bool is_run_time_Valid() const;

    QString getSchedule() const;
    void setSchedule(const QString &schedule);
    bool is_schedule_Set() const;
    bool is_schedule_Valid() const;

    QString getScheduleTime() const;
    void setScheduleTime(const QString &schedule_time);
    bool is_schedule_time_Set() const;
    bool is_schedule_time_Valid() const;

    QString getStartTime() const;
    void setStartTime(const QString &start_time);
    bool is_start_time_Set() const;
    bool is_start_time_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QString getUpdateTime() const;
    void setUpdateTime(const QString &update_time);
    bool is_update_time_Set() const;
    bool is_update_time_Valid() const;

    QString getUserId() const;
    void setUserId(const QString &user_id);
    bool is_user_id_Set() const;
    bool is_user_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_data_source_id;
    bool m_data_source_id_isSet;
    bool m_data_source_id_isValid;

    QString m_destination_dataset_id;
    bool m_destination_dataset_id_isSet;
    bool m_destination_dataset_id_isValid;

    OAIEmailPreferences m_email_preferences;
    bool m_email_preferences_isSet;
    bool m_email_preferences_isValid;

    QString m_end_time;
    bool m_end_time_isSet;
    bool m_end_time_isValid;

    OAIStatus m_error_status;
    bool m_error_status_isSet;
    bool m_error_status_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_notification_pubsub_topic;
    bool m_notification_pubsub_topic_isSet;
    bool m_notification_pubsub_topic_isValid;

    QMap<QString, QJsonValue> m_params;
    bool m_params_isSet;
    bool m_params_isValid;

    QString m_run_time;
    bool m_run_time_isSet;
    bool m_run_time_isValid;

    QString m_schedule;
    bool m_schedule_isSet;
    bool m_schedule_isValid;

    QString m_schedule_time;
    bool m_schedule_time_isSet;
    bool m_schedule_time_isValid;

    QString m_start_time;
    bool m_start_time_isSet;
    bool m_start_time_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QString m_update_time;
    bool m_update_time_isSet;
    bool m_update_time_isValid;

    QString m_user_id;
    bool m_user_id_isSet;
    bool m_user_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITransferRun)

#endif // OAITransferRun_H
