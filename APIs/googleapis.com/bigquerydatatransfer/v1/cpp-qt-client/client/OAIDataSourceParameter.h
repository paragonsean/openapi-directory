/**
 * BigQuery Data Transfer API
 * Schedule queries or transfer external data from SaaS applications to Google BigQuery on a regular basis.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDataSourceParameter.h
 *
 * A parameter used to define custom fields in a data source definition.
 */

#ifndef OAIDataSourceParameter_H
#define OAIDataSourceParameter_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDataSourceParameter : public OAIObject {
public:
    OAIDataSourceParameter();
    OAIDataSourceParameter(QString json);
    ~OAIDataSourceParameter() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getAllowedValues() const;
    void setAllowedValues(const QList<QString> &allowed_values);
    bool is_allowed_values_Set() const;
    bool is_allowed_values_Valid() const;

    bool isDeprecated() const;
    void setDeprecated(const bool &deprecated);
    bool is_deprecated_Set() const;
    bool is_deprecated_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    QList<OAIDataSourceParameter> getFields() const;
    void setFields(const QList<OAIDataSourceParameter> &fields);
    bool is_fields_Set() const;
    bool is_fields_Valid() const;

    bool isImmutable() const;
    void setImmutable(const bool &immutable);
    bool is_immutable_Set() const;
    bool is_immutable_Valid() const;

    double getMaxValue() const;
    void setMaxValue(const double &max_value);
    bool is_max_value_Set() const;
    bool is_max_value_Valid() const;

    double getMinValue() const;
    void setMinValue(const double &min_value);
    bool is_min_value_Set() const;
    bool is_min_value_Valid() const;

    QString getParamId() const;
    void setParamId(const QString &param_id);
    bool is_param_id_Set() const;
    bool is_param_id_Valid() const;

    bool isRecurse() const;
    void setRecurse(const bool &recurse);
    bool is_recurse_Set() const;
    bool is_recurse_Valid() const;

    bool isRepeated() const;
    void setRepeated(const bool &repeated);
    bool is_repeated_Set() const;
    bool is_repeated_Valid() const;

    bool isRequired() const;
    void setRequired(const bool &required);
    bool is_required_Set() const;
    bool is_required_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getValidationDescription() const;
    void setValidationDescription(const QString &validation_description);
    bool is_validation_description_Set() const;
    bool is_validation_description_Valid() const;

    QString getValidationHelpUrl() const;
    void setValidationHelpUrl(const QString &validation_help_url);
    bool is_validation_help_url_Set() const;
    bool is_validation_help_url_Valid() const;

    QString getValidationRegex() const;
    void setValidationRegex(const QString &validation_regex);
    bool is_validation_regex_Set() const;
    bool is_validation_regex_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_allowed_values;
    bool m_allowed_values_isSet;
    bool m_allowed_values_isValid;

    bool m_deprecated;
    bool m_deprecated_isSet;
    bool m_deprecated_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    QList<OAIDataSourceParameter> m_fields;
    bool m_fields_isSet;
    bool m_fields_isValid;

    bool m_immutable;
    bool m_immutable_isSet;
    bool m_immutable_isValid;

    double m_max_value;
    bool m_max_value_isSet;
    bool m_max_value_isValid;

    double m_min_value;
    bool m_min_value_isSet;
    bool m_min_value_isValid;

    QString m_param_id;
    bool m_param_id_isSet;
    bool m_param_id_isValid;

    bool m_recurse;
    bool m_recurse_isSet;
    bool m_recurse_isValid;

    bool m_repeated;
    bool m_repeated_isSet;
    bool m_repeated_isValid;

    bool m_required;
    bool m_required_isSet;
    bool m_required_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_validation_description;
    bool m_validation_description_isSet;
    bool m_validation_description_isValid;

    QString m_validation_help_url;
    bool m_validation_help_url_isSet;
    bool m_validation_help_url_isValid;

    QString m_validation_regex;
    bool m_validation_regex_isSet;
    bool m_validation_regex_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDataSourceParameter)

#endif // OAIDataSourceParameter_H
