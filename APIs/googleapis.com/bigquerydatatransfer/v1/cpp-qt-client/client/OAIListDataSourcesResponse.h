/**
 * BigQuery Data Transfer API
 * Schedule queries or transfer external data from SaaS applications to Google BigQuery on a regular basis.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIListDataSourcesResponse.h
 *
 * Returns list of supported data sources and their metadata.
 */

#ifndef OAIListDataSourcesResponse_H
#define OAIListDataSourcesResponse_H

#include <QJsonObject>

#include "OAIDataSource.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDataSource;

class OAIListDataSourcesResponse : public OAIObject {
public:
    OAIListDataSourcesResponse();
    OAIListDataSourcesResponse(QString json);
    ~OAIListDataSourcesResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIDataSource> getDataSources() const;
    void setDataSources(const QList<OAIDataSource> &data_sources);
    bool is_data_sources_Set() const;
    bool is_data_sources_Valid() const;

    QString getNextPageToken() const;
    void setNextPageToken(const QString &next_page_token);
    bool is_next_page_token_Set() const;
    bool is_next_page_token_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIDataSource> m_data_sources;
    bool m_data_sources_isSet;
    bool m_data_sources_isValid;

    QString m_next_page_token;
    bool m_next_page_token_isSet;
    bool m_next_page_token_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIListDataSourcesResponse)

#endif // OAIListDataSourcesResponse_H
