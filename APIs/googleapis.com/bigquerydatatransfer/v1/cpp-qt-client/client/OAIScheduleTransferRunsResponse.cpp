/**
 * BigQuery Data Transfer API
 * Schedule queries or transfer external data from SaaS applications to Google BigQuery on a regular basis.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIScheduleTransferRunsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIScheduleTransferRunsResponse::OAIScheduleTransferRunsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIScheduleTransferRunsResponse::OAIScheduleTransferRunsResponse() {
    this->initializeModel();
}

OAIScheduleTransferRunsResponse::~OAIScheduleTransferRunsResponse() {}

void OAIScheduleTransferRunsResponse::initializeModel() {

    m_runs_isSet = false;
    m_runs_isValid = false;
}

void OAIScheduleTransferRunsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIScheduleTransferRunsResponse::fromJsonObject(QJsonObject json) {

    m_runs_isValid = ::OpenAPI::fromJsonValue(m_runs, json[QString("runs")]);
    m_runs_isSet = !json[QString("runs")].isNull() && m_runs_isValid;
}

QString OAIScheduleTransferRunsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIScheduleTransferRunsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_runs.size() > 0) {
        obj.insert(QString("runs"), ::OpenAPI::toJsonValue(m_runs));
    }
    return obj;
}

QList<OAITransferRun> OAIScheduleTransferRunsResponse::getRuns() const {
    return m_runs;
}
void OAIScheduleTransferRunsResponse::setRuns(const QList<OAITransferRun> &runs) {
    m_runs = runs;
    m_runs_isSet = true;
}

bool OAIScheduleTransferRunsResponse::is_runs_Set() const{
    return m_runs_isSet;
}

bool OAIScheduleTransferRunsResponse::is_runs_Valid() const{
    return m_runs_isValid;
}

bool OAIScheduleTransferRunsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_runs.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIScheduleTransferRunsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
