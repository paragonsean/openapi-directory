/**
 * BigQuery Data Transfer API
 * Schedule queries or transfer external data from SaaS applications to Google BigQuery on a regular basis.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TimeRange from './TimeRange';

/**
 * The StartManualTransferRunsRequest model module.
 * @module model/StartManualTransferRunsRequest
 * @version v1
 */
class StartManualTransferRunsRequest {
    /**
     * Constructs a new <code>StartManualTransferRunsRequest</code>.
     * A request to start manual transfer runs.
     * @alias module:model/StartManualTransferRunsRequest
     */
    constructor() { 
        
        StartManualTransferRunsRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>StartManualTransferRunsRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StartManualTransferRunsRequest} obj Optional instance to populate.
     * @return {module:model/StartManualTransferRunsRequest} The populated <code>StartManualTransferRunsRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StartManualTransferRunsRequest();

            if (data.hasOwnProperty('requestedRunTime')) {
                obj['requestedRunTime'] = ApiClient.convertToType(data['requestedRunTime'], 'String');
            }
            if (data.hasOwnProperty('requestedTimeRange')) {
                obj['requestedTimeRange'] = TimeRange.constructFromObject(data['requestedTimeRange']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StartManualTransferRunsRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StartManualTransferRunsRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['requestedRunTime'] && !(typeof data['requestedRunTime'] === 'string' || data['requestedRunTime'] instanceof String)) {
            throw new Error("Expected the field `requestedRunTime` to be a primitive type in the JSON string but got " + data['requestedRunTime']);
        }
        // validate the optional field `requestedTimeRange`
        if (data['requestedTimeRange']) { // data not null
          TimeRange.validateJSON(data['requestedTimeRange']);
        }

        return true;
    }


}



/**
 * A run_time timestamp for historical data files or reports that are scheduled to be transferred by the scheduled transfer run. requested_run_time must be a past time and cannot include future time values.
 * @member {String} requestedRunTime
 */
StartManualTransferRunsRequest.prototype['requestedRunTime'] = undefined;

/**
 * @member {module:model/TimeRange} requestedTimeRange
 */
StartManualTransferRunsRequest.prototype['requestedTimeRange'] = undefined;






export default StartManualTransferRunsRequest;

