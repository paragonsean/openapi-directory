# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EmailPreferences(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, enable_failure_email: bool=None):
        """EmailPreferences - a model defined in OpenAPI

        :param enable_failure_email: The enable_failure_email of this EmailPreferences.
        """
        self.openapi_types = {
            'enable_failure_email': bool
        }

        self.attribute_map = {
            'enable_failure_email': 'enableFailureEmail'
        }

        self._enable_failure_email = enable_failure_email

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EmailPreferences':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EmailPreferences of this EmailPreferences.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def enable_failure_email(self):
        """Gets the enable_failure_email of this EmailPreferences.

        If true, email notifications will be sent on transfer run failures.

        :return: The enable_failure_email of this EmailPreferences.
        :rtype: bool
        """
        return self._enable_failure_email

    @enable_failure_email.setter
    def enable_failure_email(self, enable_failure_email):
        """Sets the enable_failure_email of this EmailPreferences.

        If true, email notifications will be sent on transfer run failures.

        :param enable_failure_email: The enable_failure_email of this EmailPreferences.
        :type enable_failure_email: bool
        """

        self._enable_failure_email = enable_failure_email
