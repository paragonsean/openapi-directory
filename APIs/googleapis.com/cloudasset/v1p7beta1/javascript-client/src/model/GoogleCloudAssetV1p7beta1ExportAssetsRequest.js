/**
 * Cloud Asset API
 * The Cloud Asset API manages the history and inventory of Google Cloud resources.
 *
 * The version of the OpenAPI document: v1p7beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudAssetV1p7beta1OutputConfig from './GoogleCloudAssetV1p7beta1OutputConfig';

/**
 * The GoogleCloudAssetV1p7beta1ExportAssetsRequest model module.
 * @module model/GoogleCloudAssetV1p7beta1ExportAssetsRequest
 * @version v1p7beta1
 */
class GoogleCloudAssetV1p7beta1ExportAssetsRequest {
    /**
     * Constructs a new <code>GoogleCloudAssetV1p7beta1ExportAssetsRequest</code>.
     * Export asset request.
     * @alias module:model/GoogleCloudAssetV1p7beta1ExportAssetsRequest
     */
    constructor() { 
        
        GoogleCloudAssetV1p7beta1ExportAssetsRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudAssetV1p7beta1ExportAssetsRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudAssetV1p7beta1ExportAssetsRequest} obj Optional instance to populate.
     * @return {module:model/GoogleCloudAssetV1p7beta1ExportAssetsRequest} The populated <code>GoogleCloudAssetV1p7beta1ExportAssetsRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudAssetV1p7beta1ExportAssetsRequest();

            if (data.hasOwnProperty('assetTypes')) {
                obj['assetTypes'] = ApiClient.convertToType(data['assetTypes'], ['String']);
            }
            if (data.hasOwnProperty('contentType')) {
                obj['contentType'] = ApiClient.convertToType(data['contentType'], 'String');
            }
            if (data.hasOwnProperty('outputConfig')) {
                obj['outputConfig'] = GoogleCloudAssetV1p7beta1OutputConfig.constructFromObject(data['outputConfig']);
            }
            if (data.hasOwnProperty('readTime')) {
                obj['readTime'] = ApiClient.convertToType(data['readTime'], 'String');
            }
            if (data.hasOwnProperty('relationshipTypes')) {
                obj['relationshipTypes'] = ApiClient.convertToType(data['relationshipTypes'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudAssetV1p7beta1ExportAssetsRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudAssetV1p7beta1ExportAssetsRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['assetTypes'])) {
            throw new Error("Expected the field `assetTypes` to be an array in the JSON data but got " + data['assetTypes']);
        }
        // ensure the json data is a string
        if (data['contentType'] && !(typeof data['contentType'] === 'string' || data['contentType'] instanceof String)) {
            throw new Error("Expected the field `contentType` to be a primitive type in the JSON string but got " + data['contentType']);
        }
        // validate the optional field `outputConfig`
        if (data['outputConfig']) { // data not null
          GoogleCloudAssetV1p7beta1OutputConfig.validateJSON(data['outputConfig']);
        }
        // ensure the json data is a string
        if (data['readTime'] && !(typeof data['readTime'] === 'string' || data['readTime'] instanceof String)) {
            throw new Error("Expected the field `readTime` to be a primitive type in the JSON string but got " + data['readTime']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['relationshipTypes'])) {
            throw new Error("Expected the field `relationshipTypes` to be an array in the JSON data but got " + data['relationshipTypes']);
        }

        return true;
    }


}



/**
 * A list of asset types to take a snapshot for. For example: \"compute.googleapis.com/Disk\". Regular expressions are also supported. For example: * \"compute.googleapis.com.*\" snapshots resources whose asset type starts with \"compute.googleapis.com\". * \".*Instance\" snapshots resources whose asset type ends with \"Instance\". * \".*Instance.*\" snapshots resources whose asset type contains \"Instance\". See [RE2](https://github.com/google/re2/wiki/Syntax) for all supported regular expression syntax. If the regular expression does not match any supported asset type, an INVALID_ARGUMENT error will be returned. If specified, only matching assets will be returned, otherwise, it will snapshot all asset types. See [Introduction to Cloud Asset Inventory](https://cloud.google.com/asset-inventory/docs/overview) for all supported asset types.
 * @member {Array.<String>} assetTypes
 */
GoogleCloudAssetV1p7beta1ExportAssetsRequest.prototype['assetTypes'] = undefined;

/**
 * Asset content type. If not specified, no content but the asset name will be returned.
 * @member {module:model/GoogleCloudAssetV1p7beta1ExportAssetsRequest.ContentTypeEnum} contentType
 */
GoogleCloudAssetV1p7beta1ExportAssetsRequest.prototype['contentType'] = undefined;

/**
 * @member {module:model/GoogleCloudAssetV1p7beta1OutputConfig} outputConfig
 */
GoogleCloudAssetV1p7beta1ExportAssetsRequest.prototype['outputConfig'] = undefined;

/**
 * Timestamp to take an asset snapshot. This can only be set to a timestamp between the current time and the current time minus 35 days (inclusive). If not specified, the current time will be used. Due to delays in resource data collection and indexing, there is a volatile window during which running the same query may get different results.
 * @member {String} readTime
 */
GoogleCloudAssetV1p7beta1ExportAssetsRequest.prototype['readTime'] = undefined;

/**
 * A list of relationship types to export, for example: `INSTANCE_TO_INSTANCEGROUP`. This field should only be specified if content_type=RELATIONSHIP. If specified, it will snapshot [asset_types]' specified relationships, or give errors if any relationship_types' supported types are not in [asset_types]. If not specified, it will snapshot all [asset_types]' supported relationships. An unspecified [asset_types] field means all supported asset_types. See [Introduction to Cloud Asset Inventory](https://cloud.google.com/asset-inventory/docs/overview) for all supported asset types and relationship types.
 * @member {Array.<String>} relationshipTypes
 */
GoogleCloudAssetV1p7beta1ExportAssetsRequest.prototype['relationshipTypes'] = undefined;





/**
 * Allowed values for the <code>contentType</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudAssetV1p7beta1ExportAssetsRequest['ContentTypeEnum'] = {

    /**
     * value: "CONTENT_TYPE_UNSPECIFIED"
     * @const
     */
    "CONTENT_TYPE_UNSPECIFIED": "CONTENT_TYPE_UNSPECIFIED",

    /**
     * value: "RESOURCE"
     * @const
     */
    "RESOURCE": "RESOURCE",

    /**
     * value: "IAM_POLICY"
     * @const
     */
    "IAM_POLICY": "IAM_POLICY",

    /**
     * value: "ORG_POLICY"
     * @const
     */
    "ORG_POLICY": "ORG_POLICY",

    /**
     * value: "ACCESS_POLICY"
     * @const
     */
    "ACCESS_POLICY": "ACCESS_POLICY",

    /**
     * value: "RELATIONSHIP"
     * @const
     */
    "RELATIONSHIP": "RELATIONSHIP"
};



export default GoogleCloudAssetV1p7beta1ExportAssetsRequest;

