# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_asset_v1p7beta1_output_config import GoogleCloudAssetV1p7beta1OutputConfig
from openapi_server import util


class GoogleCloudAssetV1p7beta1ExportAssetsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, asset_types: List[str]=None, content_type: str=None, output_config: GoogleCloudAssetV1p7beta1OutputConfig=None, read_time: str=None, relationship_types: List[str]=None):
        """GoogleCloudAssetV1p7beta1ExportAssetsRequest - a model defined in OpenAPI

        :param asset_types: The asset_types of this GoogleCloudAssetV1p7beta1ExportAssetsRequest.
        :param content_type: The content_type of this GoogleCloudAssetV1p7beta1ExportAssetsRequest.
        :param output_config: The output_config of this GoogleCloudAssetV1p7beta1ExportAssetsRequest.
        :param read_time: The read_time of this GoogleCloudAssetV1p7beta1ExportAssetsRequest.
        :param relationship_types: The relationship_types of this GoogleCloudAssetV1p7beta1ExportAssetsRequest.
        """
        self.openapi_types = {
            'asset_types': List[str],
            'content_type': str,
            'output_config': GoogleCloudAssetV1p7beta1OutputConfig,
            'read_time': str,
            'relationship_types': List[str]
        }

        self.attribute_map = {
            'asset_types': 'assetTypes',
            'content_type': 'contentType',
            'output_config': 'outputConfig',
            'read_time': 'readTime',
            'relationship_types': 'relationshipTypes'
        }

        self._asset_types = asset_types
        self._content_type = content_type
        self._output_config = output_config
        self._read_time = read_time
        self._relationship_types = relationship_types

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAssetV1p7beta1ExportAssetsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAssetV1p7beta1ExportAssetsRequest of this GoogleCloudAssetV1p7beta1ExportAssetsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def asset_types(self):
        """Gets the asset_types of this GoogleCloudAssetV1p7beta1ExportAssetsRequest.

        A list of asset types to take a snapshot for. For example: \"compute.googleapis.com/Disk\". Regular expressions are also supported. For example: * \"compute.googleapis.com.*\" snapshots resources whose asset type starts with \"compute.googleapis.com\". * \".*Instance\" snapshots resources whose asset type ends with \"Instance\". * \".*Instance.*\" snapshots resources whose asset type contains \"Instance\". See [RE2](https://github.com/google/re2/wiki/Syntax) for all supported regular expression syntax. If the regular expression does not match any supported asset type, an INVALID_ARGUMENT error will be returned. If specified, only matching assets will be returned, otherwise, it will snapshot all asset types. See [Introduction to Cloud Asset Inventory](https://cloud.google.com/asset-inventory/docs/overview) for all supported asset types.

        :return: The asset_types of this GoogleCloudAssetV1p7beta1ExportAssetsRequest.
        :rtype: List[str]
        """
        return self._asset_types

    @asset_types.setter
    def asset_types(self, asset_types):
        """Sets the asset_types of this GoogleCloudAssetV1p7beta1ExportAssetsRequest.

        A list of asset types to take a snapshot for. For example: \"compute.googleapis.com/Disk\". Regular expressions are also supported. For example: * \"compute.googleapis.com.*\" snapshots resources whose asset type starts with \"compute.googleapis.com\". * \".*Instance\" snapshots resources whose asset type ends with \"Instance\". * \".*Instance.*\" snapshots resources whose asset type contains \"Instance\". See [RE2](https://github.com/google/re2/wiki/Syntax) for all supported regular expression syntax. If the regular expression does not match any supported asset type, an INVALID_ARGUMENT error will be returned. If specified, only matching assets will be returned, otherwise, it will snapshot all asset types. See [Introduction to Cloud Asset Inventory](https://cloud.google.com/asset-inventory/docs/overview) for all supported asset types.

        :param asset_types: The asset_types of this GoogleCloudAssetV1p7beta1ExportAssetsRequest.
        :type asset_types: List[str]
        """

        self._asset_types = asset_types

    @property
    def content_type(self):
        """Gets the content_type of this GoogleCloudAssetV1p7beta1ExportAssetsRequest.

        Asset content type. If not specified, no content but the asset name will be returned.

        :return: The content_type of this GoogleCloudAssetV1p7beta1ExportAssetsRequest.
        :rtype: str
        """
        return self._content_type

    @content_type.setter
    def content_type(self, content_type):
        """Sets the content_type of this GoogleCloudAssetV1p7beta1ExportAssetsRequest.

        Asset content type. If not specified, no content but the asset name will be returned.

        :param content_type: The content_type of this GoogleCloudAssetV1p7beta1ExportAssetsRequest.
        :type content_type: str
        """
        allowed_values = ["CONTENT_TYPE_UNSPECIFIED", "RESOURCE", "IAM_POLICY", "ORG_POLICY", "ACCESS_POLICY", "RELATIONSHIP"]  # noqa: E501
        if content_type not in allowed_values:
            raise ValueError(
                "Invalid value for `content_type` ({0}), must be one of {1}"
                .format(content_type, allowed_values)
            )

        self._content_type = content_type

    @property
    def output_config(self):
        """Gets the output_config of this GoogleCloudAssetV1p7beta1ExportAssetsRequest.


        :return: The output_config of this GoogleCloudAssetV1p7beta1ExportAssetsRequest.
        :rtype: GoogleCloudAssetV1p7beta1OutputConfig
        """
        return self._output_config

    @output_config.setter
    def output_config(self, output_config):
        """Sets the output_config of this GoogleCloudAssetV1p7beta1ExportAssetsRequest.


        :param output_config: The output_config of this GoogleCloudAssetV1p7beta1ExportAssetsRequest.
        :type output_config: GoogleCloudAssetV1p7beta1OutputConfig
        """

        self._output_config = output_config

    @property
    def read_time(self):
        """Gets the read_time of this GoogleCloudAssetV1p7beta1ExportAssetsRequest.

        Timestamp to take an asset snapshot. This can only be set to a timestamp between the current time and the current time minus 35 days (inclusive). If not specified, the current time will be used. Due to delays in resource data collection and indexing, there is a volatile window during which running the same query may get different results.

        :return: The read_time of this GoogleCloudAssetV1p7beta1ExportAssetsRequest.
        :rtype: str
        """
        return self._read_time

    @read_time.setter
    def read_time(self, read_time):
        """Sets the read_time of this GoogleCloudAssetV1p7beta1ExportAssetsRequest.

        Timestamp to take an asset snapshot. This can only be set to a timestamp between the current time and the current time minus 35 days (inclusive). If not specified, the current time will be used. Due to delays in resource data collection and indexing, there is a volatile window during which running the same query may get different results.

        :param read_time: The read_time of this GoogleCloudAssetV1p7beta1ExportAssetsRequest.
        :type read_time: str
        """

        self._read_time = read_time

    @property
    def relationship_types(self):
        """Gets the relationship_types of this GoogleCloudAssetV1p7beta1ExportAssetsRequest.

        A list of relationship types to export, for example: `INSTANCE_TO_INSTANCEGROUP`. This field should only be specified if content_type=RELATIONSHIP. If specified, it will snapshot [asset_types]' specified relationships, or give errors if any relationship_types' supported types are not in [asset_types]. If not specified, it will snapshot all [asset_types]' supported relationships. An unspecified [asset_types] field means all supported asset_types. See [Introduction to Cloud Asset Inventory](https://cloud.google.com/asset-inventory/docs/overview) for all supported asset types and relationship types.

        :return: The relationship_types of this GoogleCloudAssetV1p7beta1ExportAssetsRequest.
        :rtype: List[str]
        """
        return self._relationship_types

    @relationship_types.setter
    def relationship_types(self, relationship_types):
        """Sets the relationship_types of this GoogleCloudAssetV1p7beta1ExportAssetsRequest.

        A list of relationship types to export, for example: `INSTANCE_TO_INSTANCEGROUP`. This field should only be specified if content_type=RELATIONSHIP. If specified, it will snapshot [asset_types]' specified relationships, or give errors if any relationship_types' supported types are not in [asset_types]. If not specified, it will snapshot all [asset_types]' supported relationships. An unspecified [asset_types] field means all supported asset_types. See [Introduction to Cloud Asset Inventory](https://cloud.google.com/asset-inventory/docs/overview) for all supported asset types and relationship types.

        :param relationship_types: The relationship_types of this GoogleCloudAssetV1p7beta1ExportAssetsRequest.
        :type relationship_types: List[str]
        """

        self._relationship_types = relationship_types
