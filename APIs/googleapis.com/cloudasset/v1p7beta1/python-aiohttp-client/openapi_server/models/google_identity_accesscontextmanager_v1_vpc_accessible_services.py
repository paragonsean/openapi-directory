# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleIdentityAccesscontextmanagerV1VpcAccessibleServices(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, allowed_services: List[str]=None, enable_restriction: bool=None):
        """GoogleIdentityAccesscontextmanagerV1VpcAccessibleServices - a model defined in OpenAPI

        :param allowed_services: The allowed_services of this GoogleIdentityAccesscontextmanagerV1VpcAccessibleServices.
        :param enable_restriction: The enable_restriction of this GoogleIdentityAccesscontextmanagerV1VpcAccessibleServices.
        """
        self.openapi_types = {
            'allowed_services': List[str],
            'enable_restriction': bool
        }

        self.attribute_map = {
            'allowed_services': 'allowedServices',
            'enable_restriction': 'enableRestriction'
        }

        self._allowed_services = allowed_services
        self._enable_restriction = enable_restriction

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleIdentityAccesscontextmanagerV1VpcAccessibleServices':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleIdentityAccesscontextmanagerV1VpcAccessibleServices of this GoogleIdentityAccesscontextmanagerV1VpcAccessibleServices.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allowed_services(self):
        """Gets the allowed_services of this GoogleIdentityAccesscontextmanagerV1VpcAccessibleServices.

        The list of APIs usable within the Service Perimeter. Must be empty unless 'enable_restriction' is True. You can specify a list of individual services, as well as include the 'RESTRICTED-SERVICES' value, which automatically includes all of the services protected by the perimeter.

        :return: The allowed_services of this GoogleIdentityAccesscontextmanagerV1VpcAccessibleServices.
        :rtype: List[str]
        """
        return self._allowed_services

    @allowed_services.setter
    def allowed_services(self, allowed_services):
        """Sets the allowed_services of this GoogleIdentityAccesscontextmanagerV1VpcAccessibleServices.

        The list of APIs usable within the Service Perimeter. Must be empty unless 'enable_restriction' is True. You can specify a list of individual services, as well as include the 'RESTRICTED-SERVICES' value, which automatically includes all of the services protected by the perimeter.

        :param allowed_services: The allowed_services of this GoogleIdentityAccesscontextmanagerV1VpcAccessibleServices.
        :type allowed_services: List[str]
        """

        self._allowed_services = allowed_services

    @property
    def enable_restriction(self):
        """Gets the enable_restriction of this GoogleIdentityAccesscontextmanagerV1VpcAccessibleServices.

        Whether to restrict API calls within the Service Perimeter to the list of APIs specified in 'allowed_services'.

        :return: The enable_restriction of this GoogleIdentityAccesscontextmanagerV1VpcAccessibleServices.
        :rtype: bool
        """
        return self._enable_restriction

    @enable_restriction.setter
    def enable_restriction(self, enable_restriction):
        """Sets the enable_restriction of this GoogleIdentityAccesscontextmanagerV1VpcAccessibleServices.

        Whether to restrict API calls within the Service Perimeter to the list of APIs specified in 'allowed_services'.

        :param enable_restriction: The enable_restriction of this GoogleIdentityAccesscontextmanagerV1VpcAccessibleServices.
        :type enable_restriction: bool
        """

        self._enable_restriction = enable_restriction
