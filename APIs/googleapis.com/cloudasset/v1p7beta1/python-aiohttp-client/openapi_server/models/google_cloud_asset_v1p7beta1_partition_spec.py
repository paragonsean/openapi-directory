# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudAssetV1p7beta1PartitionSpec(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, partition_key: str=None):
        """GoogleCloudAssetV1p7beta1PartitionSpec - a model defined in OpenAPI

        :param partition_key: The partition_key of this GoogleCloudAssetV1p7beta1PartitionSpec.
        """
        self.openapi_types = {
            'partition_key': str
        }

        self.attribute_map = {
            'partition_key': 'partitionKey'
        }

        self._partition_key = partition_key

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAssetV1p7beta1PartitionSpec':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAssetV1p7beta1PartitionSpec of this GoogleCloudAssetV1p7beta1PartitionSpec.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def partition_key(self):
        """Gets the partition_key of this GoogleCloudAssetV1p7beta1PartitionSpec.

        The partition key for BigQuery partitioned table.

        :return: The partition_key of this GoogleCloudAssetV1p7beta1PartitionSpec.
        :rtype: str
        """
        return self._partition_key

    @partition_key.setter
    def partition_key(self, partition_key):
        """Sets the partition_key of this GoogleCloudAssetV1p7beta1PartitionSpec.

        The partition key for BigQuery partitioned table.

        :param partition_key: The partition_key of this GoogleCloudAssetV1p7beta1PartitionSpec.
        :type partition_key: str
        """
        allowed_values = ["PARTITION_KEY_UNSPECIFIED", "READ_TIME", "REQUEST_TIME"]  # noqa: E501
        if partition_key not in allowed_values:
            raise ValueError(
                "Invalid value for `partition_key` ({0}), must be one of {1}"
                .format(partition_key, allowed_values)
            )

        self._partition_key = partition_key
