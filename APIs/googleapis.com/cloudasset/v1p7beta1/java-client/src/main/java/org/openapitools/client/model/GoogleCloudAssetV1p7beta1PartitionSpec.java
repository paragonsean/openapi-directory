/*
 * Cloud Asset API
 * The Cloud Asset API manages the history and inventory of Google Cloud resources.
 *
 * The version of the OpenAPI document: v1p7beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Specifications of BigQuery partitioned table as export destination.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:36:54.346455-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudAssetV1p7beta1PartitionSpec {
  /**
   * The partition key for BigQuery partitioned table.
   */
  @JsonAdapter(PartitionKeyEnum.Adapter.class)
  public enum PartitionKeyEnum {
    PARTITION_KEY_UNSPECIFIED("PARTITION_KEY_UNSPECIFIED"),
    
    READ_TIME("READ_TIME"),
    
    REQUEST_TIME("REQUEST_TIME");

    private String value;

    PartitionKeyEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PartitionKeyEnum fromValue(String value) {
      for (PartitionKeyEnum b : PartitionKeyEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<PartitionKeyEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PartitionKeyEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PartitionKeyEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return PartitionKeyEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      PartitionKeyEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_PARTITION_KEY = "partitionKey";
  @SerializedName(SERIALIZED_NAME_PARTITION_KEY)
  private PartitionKeyEnum partitionKey;

  public GoogleCloudAssetV1p7beta1PartitionSpec() {
  }

  public GoogleCloudAssetV1p7beta1PartitionSpec partitionKey(PartitionKeyEnum partitionKey) {
    this.partitionKey = partitionKey;
    return this;
  }

  /**
   * The partition key for BigQuery partitioned table.
   * @return partitionKey
   */
  @javax.annotation.Nullable
  public PartitionKeyEnum getPartitionKey() {
    return partitionKey;
  }

  public void setPartitionKey(PartitionKeyEnum partitionKey) {
    this.partitionKey = partitionKey;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudAssetV1p7beta1PartitionSpec googleCloudAssetV1p7beta1PartitionSpec = (GoogleCloudAssetV1p7beta1PartitionSpec) o;
    return Objects.equals(this.partitionKey, googleCloudAssetV1p7beta1PartitionSpec.partitionKey);
  }

  @Override
  public int hashCode() {
    return Objects.hash(partitionKey);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudAssetV1p7beta1PartitionSpec {\n");
    sb.append("    partitionKey: ").append(toIndentedString(partitionKey)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("partitionKey");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudAssetV1p7beta1PartitionSpec
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudAssetV1p7beta1PartitionSpec.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudAssetV1p7beta1PartitionSpec is not found in the empty JSON string", GoogleCloudAssetV1p7beta1PartitionSpec.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudAssetV1p7beta1PartitionSpec.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudAssetV1p7beta1PartitionSpec` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("partitionKey") != null && !jsonObj.get("partitionKey").isJsonNull()) && !jsonObj.get("partitionKey").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `partitionKey` to be a primitive type in the JSON string but got `%s`", jsonObj.get("partitionKey").toString()));
      }
      // validate the optional field `partitionKey`
      if (jsonObj.get("partitionKey") != null && !jsonObj.get("partitionKey").isJsonNull()) {
        PartitionKeyEnum.validateJsonElement(jsonObj.get("partitionKey"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudAssetV1p7beta1PartitionSpec.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudAssetV1p7beta1PartitionSpec' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudAssetV1p7beta1PartitionSpec> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudAssetV1p7beta1PartitionSpec.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudAssetV1p7beta1PartitionSpec>() {
           @Override
           public void write(JsonWriter out, GoogleCloudAssetV1p7beta1PartitionSpec value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudAssetV1p7beta1PartitionSpec read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudAssetV1p7beta1PartitionSpec given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudAssetV1p7beta1PartitionSpec
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudAssetV1p7beta1PartitionSpec
   */
  public static GoogleCloudAssetV1p7beta1PartitionSpec fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudAssetV1p7beta1PartitionSpec.class);
  }

  /**
   * Convert an instance of GoogleCloudAssetV1p7beta1PartitionSpec to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

