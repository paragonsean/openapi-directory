/**
 * Cloud Asset API
 * The Cloud Asset API manages the history and inventory of Google Cloud resources.
 *
 * The version of the OpenAPI document: v1p7beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleIdentityAccesscontextmanagerV1ServicePerimeterConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleIdentityAccesscontextmanagerV1ServicePerimeterConfig::OAIGoogleIdentityAccesscontextmanagerV1ServicePerimeterConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleIdentityAccesscontextmanagerV1ServicePerimeterConfig::OAIGoogleIdentityAccesscontextmanagerV1ServicePerimeterConfig() {
    this->initializeModel();
}

OAIGoogleIdentityAccesscontextmanagerV1ServicePerimeterConfig::~OAIGoogleIdentityAccesscontextmanagerV1ServicePerimeterConfig() {}

void OAIGoogleIdentityAccesscontextmanagerV1ServicePerimeterConfig::initializeModel() {

    m_access_levels_isSet = false;
    m_access_levels_isValid = false;

    m_egress_policies_isSet = false;
    m_egress_policies_isValid = false;

    m_ingress_policies_isSet = false;
    m_ingress_policies_isValid = false;

    m_resources_isSet = false;
    m_resources_isValid = false;

    m_restricted_services_isSet = false;
    m_restricted_services_isValid = false;

    m_vpc_accessible_services_isSet = false;
    m_vpc_accessible_services_isValid = false;
}

void OAIGoogleIdentityAccesscontextmanagerV1ServicePerimeterConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleIdentityAccesscontextmanagerV1ServicePerimeterConfig::fromJsonObject(QJsonObject json) {

    m_access_levels_isValid = ::OpenAPI::fromJsonValue(m_access_levels, json[QString("accessLevels")]);
    m_access_levels_isSet = !json[QString("accessLevels")].isNull() && m_access_levels_isValid;

    m_egress_policies_isValid = ::OpenAPI::fromJsonValue(m_egress_policies, json[QString("egressPolicies")]);
    m_egress_policies_isSet = !json[QString("egressPolicies")].isNull() && m_egress_policies_isValid;

    m_ingress_policies_isValid = ::OpenAPI::fromJsonValue(m_ingress_policies, json[QString("ingressPolicies")]);
    m_ingress_policies_isSet = !json[QString("ingressPolicies")].isNull() && m_ingress_policies_isValid;

    m_resources_isValid = ::OpenAPI::fromJsonValue(m_resources, json[QString("resources")]);
    m_resources_isSet = !json[QString("resources")].isNull() && m_resources_isValid;

    m_restricted_services_isValid = ::OpenAPI::fromJsonValue(m_restricted_services, json[QString("restrictedServices")]);
    m_restricted_services_isSet = !json[QString("restrictedServices")].isNull() && m_restricted_services_isValid;

    m_vpc_accessible_services_isValid = ::OpenAPI::fromJsonValue(m_vpc_accessible_services, json[QString("vpcAccessibleServices")]);
    m_vpc_accessible_services_isSet = !json[QString("vpcAccessibleServices")].isNull() && m_vpc_accessible_services_isValid;
}

QString OAIGoogleIdentityAccesscontextmanagerV1ServicePerimeterConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleIdentityAccesscontextmanagerV1ServicePerimeterConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_access_levels.size() > 0) {
        obj.insert(QString("accessLevels"), ::OpenAPI::toJsonValue(m_access_levels));
    }
    if (m_egress_policies.size() > 0) {
        obj.insert(QString("egressPolicies"), ::OpenAPI::toJsonValue(m_egress_policies));
    }
    if (m_ingress_policies.size() > 0) {
        obj.insert(QString("ingressPolicies"), ::OpenAPI::toJsonValue(m_ingress_policies));
    }
    if (m_resources.size() > 0) {
        obj.insert(QString("resources"), ::OpenAPI::toJsonValue(m_resources));
    }
    if (m_restricted_services.size() > 0) {
        obj.insert(QString("restrictedServices"), ::OpenAPI::toJsonValue(m_restricted_services));
    }
    if (m_vpc_accessible_services.isSet()) {
        obj.insert(QString("vpcAccessibleServices"), ::OpenAPI::toJsonValue(m_vpc_accessible_services));
    }
    return obj;
}

QList<QString> OAIGoogleIdentityAccesscontextmanagerV1ServicePerimeterConfig::getAccessLevels() const {
    return m_access_levels;
}
void OAIGoogleIdentityAccesscontextmanagerV1ServicePerimeterConfig::setAccessLevels(const QList<QString> &access_levels) {
    m_access_levels = access_levels;
    m_access_levels_isSet = true;
}

bool OAIGoogleIdentityAccesscontextmanagerV1ServicePerimeterConfig::is_access_levels_Set() const{
    return m_access_levels_isSet;
}

bool OAIGoogleIdentityAccesscontextmanagerV1ServicePerimeterConfig::is_access_levels_Valid() const{
    return m_access_levels_isValid;
}

QList<OAIGoogleIdentityAccesscontextmanagerV1EgressPolicy> OAIGoogleIdentityAccesscontextmanagerV1ServicePerimeterConfig::getEgressPolicies() const {
    return m_egress_policies;
}
void OAIGoogleIdentityAccesscontextmanagerV1ServicePerimeterConfig::setEgressPolicies(const QList<OAIGoogleIdentityAccesscontextmanagerV1EgressPolicy> &egress_policies) {
    m_egress_policies = egress_policies;
    m_egress_policies_isSet = true;
}

bool OAIGoogleIdentityAccesscontextmanagerV1ServicePerimeterConfig::is_egress_policies_Set() const{
    return m_egress_policies_isSet;
}

bool OAIGoogleIdentityAccesscontextmanagerV1ServicePerimeterConfig::is_egress_policies_Valid() const{
    return m_egress_policies_isValid;
}

QList<OAIGoogleIdentityAccesscontextmanagerV1IngressPolicy> OAIGoogleIdentityAccesscontextmanagerV1ServicePerimeterConfig::getIngressPolicies() const {
    return m_ingress_policies;
}
void OAIGoogleIdentityAccesscontextmanagerV1ServicePerimeterConfig::setIngressPolicies(const QList<OAIGoogleIdentityAccesscontextmanagerV1IngressPolicy> &ingress_policies) {
    m_ingress_policies = ingress_policies;
    m_ingress_policies_isSet = true;
}

bool OAIGoogleIdentityAccesscontextmanagerV1ServicePerimeterConfig::is_ingress_policies_Set() const{
    return m_ingress_policies_isSet;
}

bool OAIGoogleIdentityAccesscontextmanagerV1ServicePerimeterConfig::is_ingress_policies_Valid() const{
    return m_ingress_policies_isValid;
}

QList<QString> OAIGoogleIdentityAccesscontextmanagerV1ServicePerimeterConfig::getResources() const {
    return m_resources;
}
void OAIGoogleIdentityAccesscontextmanagerV1ServicePerimeterConfig::setResources(const QList<QString> &resources) {
    m_resources = resources;
    m_resources_isSet = true;
}

bool OAIGoogleIdentityAccesscontextmanagerV1ServicePerimeterConfig::is_resources_Set() const{
    return m_resources_isSet;
}

bool OAIGoogleIdentityAccesscontextmanagerV1ServicePerimeterConfig::is_resources_Valid() const{
    return m_resources_isValid;
}

QList<QString> OAIGoogleIdentityAccesscontextmanagerV1ServicePerimeterConfig::getRestrictedServices() const {
    return m_restricted_services;
}
void OAIGoogleIdentityAccesscontextmanagerV1ServicePerimeterConfig::setRestrictedServices(const QList<QString> &restricted_services) {
    m_restricted_services = restricted_services;
    m_restricted_services_isSet = true;
}

bool OAIGoogleIdentityAccesscontextmanagerV1ServicePerimeterConfig::is_restricted_services_Set() const{
    return m_restricted_services_isSet;
}

bool OAIGoogleIdentityAccesscontextmanagerV1ServicePerimeterConfig::is_restricted_services_Valid() const{
    return m_restricted_services_isValid;
}

OAIGoogleIdentityAccesscontextmanagerV1VpcAccessibleServices OAIGoogleIdentityAccesscontextmanagerV1ServicePerimeterConfig::getVpcAccessibleServices() const {
    return m_vpc_accessible_services;
}
void OAIGoogleIdentityAccesscontextmanagerV1ServicePerimeterConfig::setVpcAccessibleServices(const OAIGoogleIdentityAccesscontextmanagerV1VpcAccessibleServices &vpc_accessible_services) {
    m_vpc_accessible_services = vpc_accessible_services;
    m_vpc_accessible_services_isSet = true;
}

bool OAIGoogleIdentityAccesscontextmanagerV1ServicePerimeterConfig::is_vpc_accessible_services_Set() const{
    return m_vpc_accessible_services_isSet;
}

bool OAIGoogleIdentityAccesscontextmanagerV1ServicePerimeterConfig::is_vpc_accessible_services_Valid() const{
    return m_vpc_accessible_services_isValid;
}

bool OAIGoogleIdentityAccesscontextmanagerV1ServicePerimeterConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_access_levels.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_egress_policies.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_ingress_policies.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_resources.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_restricted_services.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_vpc_accessible_services.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleIdentityAccesscontextmanagerV1ServicePerimeterConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
