/**
 * Cloud Asset API
 * The Cloud Asset API manages the history and inventory of Google Cloud resources.
 *
 * The version of the OpenAPI document: v1p7beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleIdentityAccesscontextmanagerV1IngressPolicy.h
 *
 * Policy for ingress into ServicePerimeter. IngressPolicies match requests based on &#x60;ingress_from&#x60; and &#x60;ingress_to&#x60; stanzas. For an ingress policy to match, both the &#x60;ingress_from&#x60; and &#x60;ingress_to&#x60; stanzas must be matched. If an IngressPolicy matches a request, the request is allowed through the perimeter boundary from outside the perimeter. For example, access from the internet can be allowed either based on an AccessLevel or, for traffic hosted on Google Cloud, the project of the source network. For access from private networks, using the project of the hosting network is required. Individual ingress policies can be limited by restricting which services and/or actions they match using the &#x60;ingress_to&#x60; field.
 */

#ifndef OAIGoogleIdentityAccesscontextmanagerV1IngressPolicy_H
#define OAIGoogleIdentityAccesscontextmanagerV1IngressPolicy_H

#include <QJsonObject>

#include "OAIGoogleIdentityAccesscontextmanagerV1IngressFrom.h"
#include "OAIGoogleIdentityAccesscontextmanagerV1IngressTo.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleIdentityAccesscontextmanagerV1IngressFrom;
class OAIGoogleIdentityAccesscontextmanagerV1IngressTo;

class OAIGoogleIdentityAccesscontextmanagerV1IngressPolicy : public OAIObject {
public:
    OAIGoogleIdentityAccesscontextmanagerV1IngressPolicy();
    OAIGoogleIdentityAccesscontextmanagerV1IngressPolicy(QString json);
    ~OAIGoogleIdentityAccesscontextmanagerV1IngressPolicy() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGoogleIdentityAccesscontextmanagerV1IngressFrom getIngressFrom() const;
    void setIngressFrom(const OAIGoogleIdentityAccesscontextmanagerV1IngressFrom &ingress_from);
    bool is_ingress_from_Set() const;
    bool is_ingress_from_Valid() const;

    OAIGoogleIdentityAccesscontextmanagerV1IngressTo getIngressTo() const;
    void setIngressTo(const OAIGoogleIdentityAccesscontextmanagerV1IngressTo &ingress_to);
    bool is_ingress_to_Set() const;
    bool is_ingress_to_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGoogleIdentityAccesscontextmanagerV1IngressFrom m_ingress_from;
    bool m_ingress_from_isSet;
    bool m_ingress_from_isValid;

    OAIGoogleIdentityAccesscontextmanagerV1IngressTo m_ingress_to;
    bool m_ingress_to_isSet;
    bool m_ingress_to_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleIdentityAccesscontextmanagerV1IngressPolicy)

#endif // OAIGoogleIdentityAccesscontextmanagerV1IngressPolicy_H
