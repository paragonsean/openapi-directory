/**
 * Cloud Asset API
 * The Cloud Asset API manages the history and inventory of Google Cloud resources.
 *
 * The version of the OpenAPI document: v1p5beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleIdentityAccesscontextmanagerV1EgressPolicy.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleIdentityAccesscontextmanagerV1EgressPolicy::OAIGoogleIdentityAccesscontextmanagerV1EgressPolicy(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleIdentityAccesscontextmanagerV1EgressPolicy::OAIGoogleIdentityAccesscontextmanagerV1EgressPolicy() {
    this->initializeModel();
}

OAIGoogleIdentityAccesscontextmanagerV1EgressPolicy::~OAIGoogleIdentityAccesscontextmanagerV1EgressPolicy() {}

void OAIGoogleIdentityAccesscontextmanagerV1EgressPolicy::initializeModel() {

    m_egress_from_isSet = false;
    m_egress_from_isValid = false;

    m_egress_to_isSet = false;
    m_egress_to_isValid = false;
}

void OAIGoogleIdentityAccesscontextmanagerV1EgressPolicy::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleIdentityAccesscontextmanagerV1EgressPolicy::fromJsonObject(QJsonObject json) {

    m_egress_from_isValid = ::OpenAPI::fromJsonValue(m_egress_from, json[QString("egressFrom")]);
    m_egress_from_isSet = !json[QString("egressFrom")].isNull() && m_egress_from_isValid;

    m_egress_to_isValid = ::OpenAPI::fromJsonValue(m_egress_to, json[QString("egressTo")]);
    m_egress_to_isSet = !json[QString("egressTo")].isNull() && m_egress_to_isValid;
}

QString OAIGoogleIdentityAccesscontextmanagerV1EgressPolicy::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleIdentityAccesscontextmanagerV1EgressPolicy::asJsonObject() const {
    QJsonObject obj;
    if (m_egress_from.isSet()) {
        obj.insert(QString("egressFrom"), ::OpenAPI::toJsonValue(m_egress_from));
    }
    if (m_egress_to.isSet()) {
        obj.insert(QString("egressTo"), ::OpenAPI::toJsonValue(m_egress_to));
    }
    return obj;
}

OAIGoogleIdentityAccesscontextmanagerV1EgressFrom OAIGoogleIdentityAccesscontextmanagerV1EgressPolicy::getEgressFrom() const {
    return m_egress_from;
}
void OAIGoogleIdentityAccesscontextmanagerV1EgressPolicy::setEgressFrom(const OAIGoogleIdentityAccesscontextmanagerV1EgressFrom &egress_from) {
    m_egress_from = egress_from;
    m_egress_from_isSet = true;
}

bool OAIGoogleIdentityAccesscontextmanagerV1EgressPolicy::is_egress_from_Set() const{
    return m_egress_from_isSet;
}

bool OAIGoogleIdentityAccesscontextmanagerV1EgressPolicy::is_egress_from_Valid() const{
    return m_egress_from_isValid;
}

OAIGoogleIdentityAccesscontextmanagerV1EgressTo OAIGoogleIdentityAccesscontextmanagerV1EgressPolicy::getEgressTo() const {
    return m_egress_to;
}
void OAIGoogleIdentityAccesscontextmanagerV1EgressPolicy::setEgressTo(const OAIGoogleIdentityAccesscontextmanagerV1EgressTo &egress_to) {
    m_egress_to = egress_to;
    m_egress_to_isSet = true;
}

bool OAIGoogleIdentityAccesscontextmanagerV1EgressPolicy::is_egress_to_Set() const{
    return m_egress_to_isSet;
}

bool OAIGoogleIdentityAccesscontextmanagerV1EgressPolicy::is_egress_to_Valid() const{
    return m_egress_to_isValid;
}

bool OAIGoogleIdentityAccesscontextmanagerV1EgressPolicy::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_egress_from.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_egress_to.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleIdentityAccesscontextmanagerV1EgressPolicy::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
