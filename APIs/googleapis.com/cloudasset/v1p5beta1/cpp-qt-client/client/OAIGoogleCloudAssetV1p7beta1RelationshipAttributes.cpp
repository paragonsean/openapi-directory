/**
 * Cloud Asset API
 * The Cloud Asset API manages the history and inventory of Google Cloud resources.
 *
 * The version of the OpenAPI document: v1p5beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAssetV1p7beta1RelationshipAttributes.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAssetV1p7beta1RelationshipAttributes::OAIGoogleCloudAssetV1p7beta1RelationshipAttributes(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAssetV1p7beta1RelationshipAttributes::OAIGoogleCloudAssetV1p7beta1RelationshipAttributes() {
    this->initializeModel();
}

OAIGoogleCloudAssetV1p7beta1RelationshipAttributes::~OAIGoogleCloudAssetV1p7beta1RelationshipAttributes() {}

void OAIGoogleCloudAssetV1p7beta1RelationshipAttributes::initializeModel() {

    m_action_isSet = false;
    m_action_isValid = false;

    m_source_resource_type_isSet = false;
    m_source_resource_type_isValid = false;

    m_target_resource_type_isSet = false;
    m_target_resource_type_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIGoogleCloudAssetV1p7beta1RelationshipAttributes::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAssetV1p7beta1RelationshipAttributes::fromJsonObject(QJsonObject json) {

    m_action_isValid = ::OpenAPI::fromJsonValue(m_action, json[QString("action")]);
    m_action_isSet = !json[QString("action")].isNull() && m_action_isValid;

    m_source_resource_type_isValid = ::OpenAPI::fromJsonValue(m_source_resource_type, json[QString("sourceResourceType")]);
    m_source_resource_type_isSet = !json[QString("sourceResourceType")].isNull() && m_source_resource_type_isValid;

    m_target_resource_type_isValid = ::OpenAPI::fromJsonValue(m_target_resource_type, json[QString("targetResourceType")]);
    m_target_resource_type_isSet = !json[QString("targetResourceType")].isNull() && m_target_resource_type_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIGoogleCloudAssetV1p7beta1RelationshipAttributes::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAssetV1p7beta1RelationshipAttributes::asJsonObject() const {
    QJsonObject obj;
    if (m_action_isSet) {
        obj.insert(QString("action"), ::OpenAPI::toJsonValue(m_action));
    }
    if (m_source_resource_type_isSet) {
        obj.insert(QString("sourceResourceType"), ::OpenAPI::toJsonValue(m_source_resource_type));
    }
    if (m_target_resource_type_isSet) {
        obj.insert(QString("targetResourceType"), ::OpenAPI::toJsonValue(m_target_resource_type));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QString OAIGoogleCloudAssetV1p7beta1RelationshipAttributes::getAction() const {
    return m_action;
}
void OAIGoogleCloudAssetV1p7beta1RelationshipAttributes::setAction(const QString &action) {
    m_action = action;
    m_action_isSet = true;
}

bool OAIGoogleCloudAssetV1p7beta1RelationshipAttributes::is_action_Set() const{
    return m_action_isSet;
}

bool OAIGoogleCloudAssetV1p7beta1RelationshipAttributes::is_action_Valid() const{
    return m_action_isValid;
}

QString OAIGoogleCloudAssetV1p7beta1RelationshipAttributes::getSourceResourceType() const {
    return m_source_resource_type;
}
void OAIGoogleCloudAssetV1p7beta1RelationshipAttributes::setSourceResourceType(const QString &source_resource_type) {
    m_source_resource_type = source_resource_type;
    m_source_resource_type_isSet = true;
}

bool OAIGoogleCloudAssetV1p7beta1RelationshipAttributes::is_source_resource_type_Set() const{
    return m_source_resource_type_isSet;
}

bool OAIGoogleCloudAssetV1p7beta1RelationshipAttributes::is_source_resource_type_Valid() const{
    return m_source_resource_type_isValid;
}

QString OAIGoogleCloudAssetV1p7beta1RelationshipAttributes::getTargetResourceType() const {
    return m_target_resource_type;
}
void OAIGoogleCloudAssetV1p7beta1RelationshipAttributes::setTargetResourceType(const QString &target_resource_type) {
    m_target_resource_type = target_resource_type;
    m_target_resource_type_isSet = true;
}

bool OAIGoogleCloudAssetV1p7beta1RelationshipAttributes::is_target_resource_type_Set() const{
    return m_target_resource_type_isSet;
}

bool OAIGoogleCloudAssetV1p7beta1RelationshipAttributes::is_target_resource_type_Valid() const{
    return m_target_resource_type_isValid;
}

QString OAIGoogleCloudAssetV1p7beta1RelationshipAttributes::getType() const {
    return m_type;
}
void OAIGoogleCloudAssetV1p7beta1RelationshipAttributes::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIGoogleCloudAssetV1p7beta1RelationshipAttributes::is_type_Set() const{
    return m_type_isSet;
}

bool OAIGoogleCloudAssetV1p7beta1RelationshipAttributes::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIGoogleCloudAssetV1p7beta1RelationshipAttributes::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_action_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_resource_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_target_resource_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAssetV1p7beta1RelationshipAttributes::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
