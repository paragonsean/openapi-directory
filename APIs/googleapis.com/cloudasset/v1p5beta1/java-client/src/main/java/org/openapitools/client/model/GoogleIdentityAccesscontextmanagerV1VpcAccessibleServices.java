/*
 * Cloud Asset API
 * The Cloud Asset API manages the history and inventory of Google Cloud resources.
 *
 * The version of the OpenAPI document: v1p5beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Specifies how APIs are allowed to communicate within the Service Perimeter.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:37:14.237205-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleIdentityAccesscontextmanagerV1VpcAccessibleServices {
  public static final String SERIALIZED_NAME_ALLOWED_SERVICES = "allowedServices";
  @SerializedName(SERIALIZED_NAME_ALLOWED_SERVICES)
  private List<String> allowedServices = new ArrayList<>();

  public static final String SERIALIZED_NAME_ENABLE_RESTRICTION = "enableRestriction";
  @SerializedName(SERIALIZED_NAME_ENABLE_RESTRICTION)
  private Boolean enableRestriction;

  public GoogleIdentityAccesscontextmanagerV1VpcAccessibleServices() {
  }

  public GoogleIdentityAccesscontextmanagerV1VpcAccessibleServices allowedServices(List<String> allowedServices) {
    this.allowedServices = allowedServices;
    return this;
  }

  public GoogleIdentityAccesscontextmanagerV1VpcAccessibleServices addAllowedServicesItem(String allowedServicesItem) {
    if (this.allowedServices == null) {
      this.allowedServices = new ArrayList<>();
    }
    this.allowedServices.add(allowedServicesItem);
    return this;
  }

  /**
   * The list of APIs usable within the Service Perimeter. Must be empty unless &#39;enable_restriction&#39; is True. You can specify a list of individual services, as well as include the &#39;RESTRICTED-SERVICES&#39; value, which automatically includes all of the services protected by the perimeter.
   * @return allowedServices
   */
  @javax.annotation.Nullable
  public List<String> getAllowedServices() {
    return allowedServices;
  }

  public void setAllowedServices(List<String> allowedServices) {
    this.allowedServices = allowedServices;
  }


  public GoogleIdentityAccesscontextmanagerV1VpcAccessibleServices enableRestriction(Boolean enableRestriction) {
    this.enableRestriction = enableRestriction;
    return this;
  }

  /**
   * Whether to restrict API calls within the Service Perimeter to the list of APIs specified in &#39;allowed_services&#39;.
   * @return enableRestriction
   */
  @javax.annotation.Nullable
  public Boolean getEnableRestriction() {
    return enableRestriction;
  }

  public void setEnableRestriction(Boolean enableRestriction) {
    this.enableRestriction = enableRestriction;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleIdentityAccesscontextmanagerV1VpcAccessibleServices googleIdentityAccesscontextmanagerV1VpcAccessibleServices = (GoogleIdentityAccesscontextmanagerV1VpcAccessibleServices) o;
    return Objects.equals(this.allowedServices, googleIdentityAccesscontextmanagerV1VpcAccessibleServices.allowedServices) &&
        Objects.equals(this.enableRestriction, googleIdentityAccesscontextmanagerV1VpcAccessibleServices.enableRestriction);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allowedServices, enableRestriction);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleIdentityAccesscontextmanagerV1VpcAccessibleServices {\n");
    sb.append("    allowedServices: ").append(toIndentedString(allowedServices)).append("\n");
    sb.append("    enableRestriction: ").append(toIndentedString(enableRestriction)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("allowedServices");
    openapiFields.add("enableRestriction");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleIdentityAccesscontextmanagerV1VpcAccessibleServices
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleIdentityAccesscontextmanagerV1VpcAccessibleServices.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleIdentityAccesscontextmanagerV1VpcAccessibleServices is not found in the empty JSON string", GoogleIdentityAccesscontextmanagerV1VpcAccessibleServices.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleIdentityAccesscontextmanagerV1VpcAccessibleServices.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleIdentityAccesscontextmanagerV1VpcAccessibleServices` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("allowedServices") != null && !jsonObj.get("allowedServices").isJsonNull() && !jsonObj.get("allowedServices").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `allowedServices` to be an array in the JSON string but got `%s`", jsonObj.get("allowedServices").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleIdentityAccesscontextmanagerV1VpcAccessibleServices.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleIdentityAccesscontextmanagerV1VpcAccessibleServices' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleIdentityAccesscontextmanagerV1VpcAccessibleServices> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleIdentityAccesscontextmanagerV1VpcAccessibleServices.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleIdentityAccesscontextmanagerV1VpcAccessibleServices>() {
           @Override
           public void write(JsonWriter out, GoogleIdentityAccesscontextmanagerV1VpcAccessibleServices value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleIdentityAccesscontextmanagerV1VpcAccessibleServices read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleIdentityAccesscontextmanagerV1VpcAccessibleServices given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleIdentityAccesscontextmanagerV1VpcAccessibleServices
   * @throws IOException if the JSON string is invalid with respect to GoogleIdentityAccesscontextmanagerV1VpcAccessibleServices
   */
  public static GoogleIdentityAccesscontextmanagerV1VpcAccessibleServices fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleIdentityAccesscontextmanagerV1VpcAccessibleServices.class);
  }

  /**
   * Convert an instance of GoogleIdentityAccesscontextmanagerV1VpcAccessibleServices to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

