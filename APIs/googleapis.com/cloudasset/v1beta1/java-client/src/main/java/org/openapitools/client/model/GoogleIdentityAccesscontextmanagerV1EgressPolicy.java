/*
 * Cloud Asset API
 * The Cloud Asset API manages the history and inventory of Google Cloud resources.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleIdentityAccesscontextmanagerV1EgressFrom;
import org.openapitools.client.model.GoogleIdentityAccesscontextmanagerV1EgressTo;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Policy for egress from perimeter. EgressPolicies match requests based on &#x60;egress_from&#x60; and &#x60;egress_to&#x60; stanzas. For an EgressPolicy to match, both &#x60;egress_from&#x60; and &#x60;egress_to&#x60; stanzas must be matched. If an EgressPolicy matches a request, the request is allowed to span the ServicePerimeter boundary. For example, an EgressPolicy can be used to allow VMs on networks within the ServicePerimeter to access a defined set of projects outside the perimeter in certain contexts (e.g. to read data from a Cloud Storage bucket or query against a BigQuery dataset). EgressPolicies are concerned with the *resources* that a request relates as well as the API services and API actions being used. They do not related to the direction of data movement. More detailed documentation for this concept can be found in the descriptions of EgressFrom and EgressTo.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:37:00.496428-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleIdentityAccesscontextmanagerV1EgressPolicy {
  public static final String SERIALIZED_NAME_EGRESS_FROM = "egressFrom";
  @SerializedName(SERIALIZED_NAME_EGRESS_FROM)
  private GoogleIdentityAccesscontextmanagerV1EgressFrom egressFrom;

  public static final String SERIALIZED_NAME_EGRESS_TO = "egressTo";
  @SerializedName(SERIALIZED_NAME_EGRESS_TO)
  private GoogleIdentityAccesscontextmanagerV1EgressTo egressTo;

  public GoogleIdentityAccesscontextmanagerV1EgressPolicy() {
  }

  public GoogleIdentityAccesscontextmanagerV1EgressPolicy egressFrom(GoogleIdentityAccesscontextmanagerV1EgressFrom egressFrom) {
    this.egressFrom = egressFrom;
    return this;
  }

  /**
   * Get egressFrom
   * @return egressFrom
   */
  @javax.annotation.Nullable
  public GoogleIdentityAccesscontextmanagerV1EgressFrom getEgressFrom() {
    return egressFrom;
  }

  public void setEgressFrom(GoogleIdentityAccesscontextmanagerV1EgressFrom egressFrom) {
    this.egressFrom = egressFrom;
  }


  public GoogleIdentityAccesscontextmanagerV1EgressPolicy egressTo(GoogleIdentityAccesscontextmanagerV1EgressTo egressTo) {
    this.egressTo = egressTo;
    return this;
  }

  /**
   * Get egressTo
   * @return egressTo
   */
  @javax.annotation.Nullable
  public GoogleIdentityAccesscontextmanagerV1EgressTo getEgressTo() {
    return egressTo;
  }

  public void setEgressTo(GoogleIdentityAccesscontextmanagerV1EgressTo egressTo) {
    this.egressTo = egressTo;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleIdentityAccesscontextmanagerV1EgressPolicy googleIdentityAccesscontextmanagerV1EgressPolicy = (GoogleIdentityAccesscontextmanagerV1EgressPolicy) o;
    return Objects.equals(this.egressFrom, googleIdentityAccesscontextmanagerV1EgressPolicy.egressFrom) &&
        Objects.equals(this.egressTo, googleIdentityAccesscontextmanagerV1EgressPolicy.egressTo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(egressFrom, egressTo);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleIdentityAccesscontextmanagerV1EgressPolicy {\n");
    sb.append("    egressFrom: ").append(toIndentedString(egressFrom)).append("\n");
    sb.append("    egressTo: ").append(toIndentedString(egressTo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("egressFrom");
    openapiFields.add("egressTo");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleIdentityAccesscontextmanagerV1EgressPolicy
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleIdentityAccesscontextmanagerV1EgressPolicy.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleIdentityAccesscontextmanagerV1EgressPolicy is not found in the empty JSON string", GoogleIdentityAccesscontextmanagerV1EgressPolicy.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleIdentityAccesscontextmanagerV1EgressPolicy.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleIdentityAccesscontextmanagerV1EgressPolicy` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `egressFrom`
      if (jsonObj.get("egressFrom") != null && !jsonObj.get("egressFrom").isJsonNull()) {
        GoogleIdentityAccesscontextmanagerV1EgressFrom.validateJsonElement(jsonObj.get("egressFrom"));
      }
      // validate the optional field `egressTo`
      if (jsonObj.get("egressTo") != null && !jsonObj.get("egressTo").isJsonNull()) {
        GoogleIdentityAccesscontextmanagerV1EgressTo.validateJsonElement(jsonObj.get("egressTo"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleIdentityAccesscontextmanagerV1EgressPolicy.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleIdentityAccesscontextmanagerV1EgressPolicy' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleIdentityAccesscontextmanagerV1EgressPolicy> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleIdentityAccesscontextmanagerV1EgressPolicy.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleIdentityAccesscontextmanagerV1EgressPolicy>() {
           @Override
           public void write(JsonWriter out, GoogleIdentityAccesscontextmanagerV1EgressPolicy value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleIdentityAccesscontextmanagerV1EgressPolicy read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleIdentityAccesscontextmanagerV1EgressPolicy given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleIdentityAccesscontextmanagerV1EgressPolicy
   * @throws IOException if the JSON string is invalid with respect to GoogleIdentityAccesscontextmanagerV1EgressPolicy
   */
  public static GoogleIdentityAccesscontextmanagerV1EgressPolicy fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleIdentityAccesscontextmanagerV1EgressPolicy.class);
  }

  /**
   * Convert an instance of GoogleIdentityAccesscontextmanagerV1EgressPolicy to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

