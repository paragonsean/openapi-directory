# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.output_config import OutputConfig
from openapi_server import util


class ExportAssetsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, asset_types: List[str]=None, content_type: str=None, output_config: OutputConfig=None, read_time: str=None):
        """ExportAssetsRequest - a model defined in OpenAPI

        :param asset_types: The asset_types of this ExportAssetsRequest.
        :param content_type: The content_type of this ExportAssetsRequest.
        :param output_config: The output_config of this ExportAssetsRequest.
        :param read_time: The read_time of this ExportAssetsRequest.
        """
        self.openapi_types = {
            'asset_types': List[str],
            'content_type': str,
            'output_config': OutputConfig,
            'read_time': str
        }

        self.attribute_map = {
            'asset_types': 'assetTypes',
            'content_type': 'contentType',
            'output_config': 'outputConfig',
            'read_time': 'readTime'
        }

        self._asset_types = asset_types
        self._content_type = content_type
        self._output_config = output_config
        self._read_time = read_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExportAssetsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ExportAssetsRequest of this ExportAssetsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def asset_types(self):
        """Gets the asset_types of this ExportAssetsRequest.

        A list of asset types of which to take a snapshot for. For example: \"google.compute.Disk\". If specified, only matching assets will be returned. See [Introduction to Cloud Asset Inventory](https://cloud.google.com/resource-manager/docs/cloud-asset-inventory/overview) for all supported asset types.

        :return: The asset_types of this ExportAssetsRequest.
        :rtype: List[str]
        """
        return self._asset_types

    @asset_types.setter
    def asset_types(self, asset_types):
        """Sets the asset_types of this ExportAssetsRequest.

        A list of asset types of which to take a snapshot for. For example: \"google.compute.Disk\". If specified, only matching assets will be returned. See [Introduction to Cloud Asset Inventory](https://cloud.google.com/resource-manager/docs/cloud-asset-inventory/overview) for all supported asset types.

        :param asset_types: The asset_types of this ExportAssetsRequest.
        :type asset_types: List[str]
        """

        self._asset_types = asset_types

    @property
    def content_type(self):
        """Gets the content_type of this ExportAssetsRequest.

        Asset content type. If not specified, no content but the asset name will be returned.

        :return: The content_type of this ExportAssetsRequest.
        :rtype: str
        """
        return self._content_type

    @content_type.setter
    def content_type(self, content_type):
        """Sets the content_type of this ExportAssetsRequest.

        Asset content type. If not specified, no content but the asset name will be returned.

        :param content_type: The content_type of this ExportAssetsRequest.
        :type content_type: str
        """
        allowed_values = ["CONTENT_TYPE_UNSPECIFIED", "RESOURCE", "IAM_POLICY"]  # noqa: E501
        if content_type not in allowed_values:
            raise ValueError(
                "Invalid value for `content_type` ({0}), must be one of {1}"
                .format(content_type, allowed_values)
            )

        self._content_type = content_type

    @property
    def output_config(self):
        """Gets the output_config of this ExportAssetsRequest.


        :return: The output_config of this ExportAssetsRequest.
        :rtype: OutputConfig
        """
        return self._output_config

    @output_config.setter
    def output_config(self, output_config):
        """Sets the output_config of this ExportAssetsRequest.


        :param output_config: The output_config of this ExportAssetsRequest.
        :type output_config: OutputConfig
        """

        self._output_config = output_config

    @property
    def read_time(self):
        """Gets the read_time of this ExportAssetsRequest.

        Timestamp to take an asset snapshot. This can only be set to a timestamp between 2018-10-02 UTC (inclusive) and the current time. If not specified, the current time will be used. Due to delays in resource data collection and indexing, there is a volatile window during which running the same query may get different results.

        :return: The read_time of this ExportAssetsRequest.
        :rtype: str
        """
        return self._read_time

    @read_time.setter
    def read_time(self, read_time):
        """Sets the read_time of this ExportAssetsRequest.

        Timestamp to take an asset snapshot. This can only be set to a timestamp between 2018-10-02 UTC (inclusive) and the current time. If not specified, the current time will be used. Due to delays in resource data collection and indexing, there is a volatile window during which running the same query may get different results.

        :param read_time: The read_time of this ExportAssetsRequest.
        :type read_time: str
        """

        self._read_time = read_time
