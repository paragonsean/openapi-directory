# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.asset import Asset
from openapi_server.models.time_window import TimeWindow
from openapi_server import util


class TemporalAsset(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, asset: Asset=None, deleted: bool=None, window: TimeWindow=None):
        """TemporalAsset - a model defined in OpenAPI

        :param asset: The asset of this TemporalAsset.
        :param deleted: The deleted of this TemporalAsset.
        :param window: The window of this TemporalAsset.
        """
        self.openapi_types = {
            'asset': Asset,
            'deleted': bool,
            'window': TimeWindow
        }

        self.attribute_map = {
            'asset': 'asset',
            'deleted': 'deleted',
            'window': 'window'
        }

        self._asset = asset
        self._deleted = deleted
        self._window = window

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TemporalAsset':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TemporalAsset of this TemporalAsset.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def asset(self):
        """Gets the asset of this TemporalAsset.


        :return: The asset of this TemporalAsset.
        :rtype: Asset
        """
        return self._asset

    @asset.setter
    def asset(self, asset):
        """Sets the asset of this TemporalAsset.


        :param asset: The asset of this TemporalAsset.
        :type asset: Asset
        """

        self._asset = asset

    @property
    def deleted(self):
        """Gets the deleted of this TemporalAsset.

        Whether the asset has been deleted or not.

        :return: The deleted of this TemporalAsset.
        :rtype: bool
        """
        return self._deleted

    @deleted.setter
    def deleted(self, deleted):
        """Sets the deleted of this TemporalAsset.

        Whether the asset has been deleted or not.

        :param deleted: The deleted of this TemporalAsset.
        :type deleted: bool
        """

        self._deleted = deleted

    @property
    def window(self):
        """Gets the window of this TemporalAsset.


        :return: The window of this TemporalAsset.
        :rtype: TimeWindow
        """
        return self._window

    @window.setter
    def window(self, window):
        """Sets the window of this TemporalAsset.


        :param window: The window of this TemporalAsset.
        :type window: TimeWindow
        """

        self._window = window
