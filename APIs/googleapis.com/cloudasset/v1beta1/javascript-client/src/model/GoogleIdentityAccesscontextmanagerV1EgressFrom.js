/**
 * Cloud Asset API
 * The Cloud Asset API manages the history and inventory of Google Cloud resources.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleIdentityAccesscontextmanagerV1EgressSource from './GoogleIdentityAccesscontextmanagerV1EgressSource';

/**
 * The GoogleIdentityAccesscontextmanagerV1EgressFrom model module.
 * @module model/GoogleIdentityAccesscontextmanagerV1EgressFrom
 * @version v1beta1
 */
class GoogleIdentityAccesscontextmanagerV1EgressFrom {
    /**
     * Constructs a new <code>GoogleIdentityAccesscontextmanagerV1EgressFrom</code>.
     * Defines the conditions under which an EgressPolicy matches a request. Conditions based on information about the source of the request. Note that if the destination of the request is also protected by a ServicePerimeter, then that ServicePerimeter must have an IngressPolicy which allows access in order for this request to succeed.
     * @alias module:model/GoogleIdentityAccesscontextmanagerV1EgressFrom
     */
    constructor() { 
        
        GoogleIdentityAccesscontextmanagerV1EgressFrom.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleIdentityAccesscontextmanagerV1EgressFrom</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleIdentityAccesscontextmanagerV1EgressFrom} obj Optional instance to populate.
     * @return {module:model/GoogleIdentityAccesscontextmanagerV1EgressFrom} The populated <code>GoogleIdentityAccesscontextmanagerV1EgressFrom</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleIdentityAccesscontextmanagerV1EgressFrom();

            if (data.hasOwnProperty('identities')) {
                obj['identities'] = ApiClient.convertToType(data['identities'], ['String']);
            }
            if (data.hasOwnProperty('identityType')) {
                obj['identityType'] = ApiClient.convertToType(data['identityType'], 'String');
            }
            if (data.hasOwnProperty('sourceRestriction')) {
                obj['sourceRestriction'] = ApiClient.convertToType(data['sourceRestriction'], 'String');
            }
            if (data.hasOwnProperty('sources')) {
                obj['sources'] = ApiClient.convertToType(data['sources'], [GoogleIdentityAccesscontextmanagerV1EgressSource]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleIdentityAccesscontextmanagerV1EgressFrom</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleIdentityAccesscontextmanagerV1EgressFrom</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['identities'])) {
            throw new Error("Expected the field `identities` to be an array in the JSON data but got " + data['identities']);
        }
        // ensure the json data is a string
        if (data['identityType'] && !(typeof data['identityType'] === 'string' || data['identityType'] instanceof String)) {
            throw new Error("Expected the field `identityType` to be a primitive type in the JSON string but got " + data['identityType']);
        }
        // ensure the json data is a string
        if (data['sourceRestriction'] && !(typeof data['sourceRestriction'] === 'string' || data['sourceRestriction'] instanceof String)) {
            throw new Error("Expected the field `sourceRestriction` to be a primitive type in the JSON string but got " + data['sourceRestriction']);
        }
        if (data['sources']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['sources'])) {
                throw new Error("Expected the field `sources` to be an array in the JSON data but got " + data['sources']);
            }
            // validate the optional field `sources` (array)
            for (const item of data['sources']) {
                GoogleIdentityAccesscontextmanagerV1EgressSource.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * A list of identities that are allowed access through this [EgressPolicy], in the format of `user:{email_id}` or `serviceAccount:{email_id}`.
 * @member {Array.<String>} identities
 */
GoogleIdentityAccesscontextmanagerV1EgressFrom.prototype['identities'] = undefined;

/**
 * Specifies the type of identities that are allowed access to outside the perimeter. If left unspecified, then members of `identities` field will be allowed access.
 * @member {module:model/GoogleIdentityAccesscontextmanagerV1EgressFrom.IdentityTypeEnum} identityType
 */
GoogleIdentityAccesscontextmanagerV1EgressFrom.prototype['identityType'] = undefined;

/**
 * Whether to enforce traffic restrictions based on `sources` field. If the `sources` fields is non-empty, then this field must be set to `SOURCE_RESTRICTION_ENABLED`.
 * @member {module:model/GoogleIdentityAccesscontextmanagerV1EgressFrom.SourceRestrictionEnum} sourceRestriction
 */
GoogleIdentityAccesscontextmanagerV1EgressFrom.prototype['sourceRestriction'] = undefined;

/**
 * Sources that this EgressPolicy authorizes access from. If this field is not empty, then `source_restriction` must be set to `SOURCE_RESTRICTION_ENABLED`.
 * @member {Array.<module:model/GoogleIdentityAccesscontextmanagerV1EgressSource>} sources
 */
GoogleIdentityAccesscontextmanagerV1EgressFrom.prototype['sources'] = undefined;





/**
 * Allowed values for the <code>identityType</code> property.
 * @enum {String}
 * @readonly
 */
GoogleIdentityAccesscontextmanagerV1EgressFrom['IdentityTypeEnum'] = {

    /**
     * value: "IDENTITY_TYPE_UNSPECIFIED"
     * @const
     */
    "IDENTITY_TYPE_UNSPECIFIED": "IDENTITY_TYPE_UNSPECIFIED",

    /**
     * value: "ANY_IDENTITY"
     * @const
     */
    "ANY_IDENTITY": "ANY_IDENTITY",

    /**
     * value: "ANY_USER_ACCOUNT"
     * @const
     */
    "ANY_USER_ACCOUNT": "ANY_USER_ACCOUNT",

    /**
     * value: "ANY_SERVICE_ACCOUNT"
     * @const
     */
    "ANY_SERVICE_ACCOUNT": "ANY_SERVICE_ACCOUNT"
};


/**
 * Allowed values for the <code>sourceRestriction</code> property.
 * @enum {String}
 * @readonly
 */
GoogleIdentityAccesscontextmanagerV1EgressFrom['SourceRestrictionEnum'] = {

    /**
     * value: "SOURCE_RESTRICTION_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "SOURCE_RESTRICTION_UNSPECIFIED",

    /**
     * value: "SOURCE_RESTRICTION_ENABLED"
     * @const
     */
    "ENABLED": "SOURCE_RESTRICTION_ENABLED",

    /**
     * value: "SOURCE_RESTRICTION_DISABLED"
     * @const
     */
    "DISABLED": "SOURCE_RESTRICTION_DISABLED"
};



export default GoogleIdentityAccesscontextmanagerV1EgressFrom;

