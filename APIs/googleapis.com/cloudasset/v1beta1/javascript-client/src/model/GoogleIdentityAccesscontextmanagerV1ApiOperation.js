/**
 * Cloud Asset API
 * The Cloud Asset API manages the history and inventory of Google Cloud resources.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleIdentityAccesscontextmanagerV1MethodSelector from './GoogleIdentityAccesscontextmanagerV1MethodSelector';

/**
 * The GoogleIdentityAccesscontextmanagerV1ApiOperation model module.
 * @module model/GoogleIdentityAccesscontextmanagerV1ApiOperation
 * @version v1beta1
 */
class GoogleIdentityAccesscontextmanagerV1ApiOperation {
    /**
     * Constructs a new <code>GoogleIdentityAccesscontextmanagerV1ApiOperation</code>.
     * Identification for an API Operation.
     * @alias module:model/GoogleIdentityAccesscontextmanagerV1ApiOperation
     */
    constructor() { 
        
        GoogleIdentityAccesscontextmanagerV1ApiOperation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleIdentityAccesscontextmanagerV1ApiOperation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleIdentityAccesscontextmanagerV1ApiOperation} obj Optional instance to populate.
     * @return {module:model/GoogleIdentityAccesscontextmanagerV1ApiOperation} The populated <code>GoogleIdentityAccesscontextmanagerV1ApiOperation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleIdentityAccesscontextmanagerV1ApiOperation();

            if (data.hasOwnProperty('methodSelectors')) {
                obj['methodSelectors'] = ApiClient.convertToType(data['methodSelectors'], [GoogleIdentityAccesscontextmanagerV1MethodSelector]);
            }
            if (data.hasOwnProperty('serviceName')) {
                obj['serviceName'] = ApiClient.convertToType(data['serviceName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleIdentityAccesscontextmanagerV1ApiOperation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleIdentityAccesscontextmanagerV1ApiOperation</code>.
     */
    static validateJSON(data) {
        if (data['methodSelectors']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['methodSelectors'])) {
                throw new Error("Expected the field `methodSelectors` to be an array in the JSON data but got " + data['methodSelectors']);
            }
            // validate the optional field `methodSelectors` (array)
            for (const item of data['methodSelectors']) {
                GoogleIdentityAccesscontextmanagerV1MethodSelector.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['serviceName'] && !(typeof data['serviceName'] === 'string' || data['serviceName'] instanceof String)) {
            throw new Error("Expected the field `serviceName` to be a primitive type in the JSON string but got " + data['serviceName']);
        }

        return true;
    }


}



/**
 * API methods or permissions to allow. Method or permission must belong to the service specified by `service_name` field. A single MethodSelector entry with `*` specified for the `method` field will allow all methods AND permissions for the service specified in `service_name`.
 * @member {Array.<module:model/GoogleIdentityAccesscontextmanagerV1MethodSelector>} methodSelectors
 */
GoogleIdentityAccesscontextmanagerV1ApiOperation.prototype['methodSelectors'] = undefined;

/**
 * The name of the API whose methods or permissions the IngressPolicy or EgressPolicy want to allow. A single ApiOperation with `service_name` field set to `*` will allow all methods AND permissions for all services.
 * @member {String} serviceName
 */
GoogleIdentityAccesscontextmanagerV1ApiOperation.prototype['serviceName'] = undefined;






export default GoogleIdentityAccesscontextmanagerV1ApiOperation;

