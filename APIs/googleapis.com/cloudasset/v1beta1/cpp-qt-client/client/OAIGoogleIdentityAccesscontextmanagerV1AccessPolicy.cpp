/**
 * Cloud Asset API
 * The Cloud Asset API manages the history and inventory of Google Cloud resources.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleIdentityAccesscontextmanagerV1AccessPolicy.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleIdentityAccesscontextmanagerV1AccessPolicy::OAIGoogleIdentityAccesscontextmanagerV1AccessPolicy(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleIdentityAccesscontextmanagerV1AccessPolicy::OAIGoogleIdentityAccesscontextmanagerV1AccessPolicy() {
    this->initializeModel();
}

OAIGoogleIdentityAccesscontextmanagerV1AccessPolicy::~OAIGoogleIdentityAccesscontextmanagerV1AccessPolicy() {}

void OAIGoogleIdentityAccesscontextmanagerV1AccessPolicy::initializeModel() {

    m_etag_isSet = false;
    m_etag_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_parent_isSet = false;
    m_parent_isValid = false;

    m_scopes_isSet = false;
    m_scopes_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;
}

void OAIGoogleIdentityAccesscontextmanagerV1AccessPolicy::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleIdentityAccesscontextmanagerV1AccessPolicy::fromJsonObject(QJsonObject json) {

    m_etag_isValid = ::OpenAPI::fromJsonValue(m_etag, json[QString("etag")]);
    m_etag_isSet = !json[QString("etag")].isNull() && m_etag_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_parent_isValid = ::OpenAPI::fromJsonValue(m_parent, json[QString("parent")]);
    m_parent_isSet = !json[QString("parent")].isNull() && m_parent_isValid;

    m_scopes_isValid = ::OpenAPI::fromJsonValue(m_scopes, json[QString("scopes")]);
    m_scopes_isSet = !json[QString("scopes")].isNull() && m_scopes_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("title")]);
    m_title_isSet = !json[QString("title")].isNull() && m_title_isValid;
}

QString OAIGoogleIdentityAccesscontextmanagerV1AccessPolicy::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleIdentityAccesscontextmanagerV1AccessPolicy::asJsonObject() const {
    QJsonObject obj;
    if (m_etag_isSet) {
        obj.insert(QString("etag"), ::OpenAPI::toJsonValue(m_etag));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_parent_isSet) {
        obj.insert(QString("parent"), ::OpenAPI::toJsonValue(m_parent));
    }
    if (m_scopes.size() > 0) {
        obj.insert(QString("scopes"), ::OpenAPI::toJsonValue(m_scopes));
    }
    if (m_title_isSet) {
        obj.insert(QString("title"), ::OpenAPI::toJsonValue(m_title));
    }
    return obj;
}

QString OAIGoogleIdentityAccesscontextmanagerV1AccessPolicy::getEtag() const {
    return m_etag;
}
void OAIGoogleIdentityAccesscontextmanagerV1AccessPolicy::setEtag(const QString &etag) {
    m_etag = etag;
    m_etag_isSet = true;
}

bool OAIGoogleIdentityAccesscontextmanagerV1AccessPolicy::is_etag_Set() const{
    return m_etag_isSet;
}

bool OAIGoogleIdentityAccesscontextmanagerV1AccessPolicy::is_etag_Valid() const{
    return m_etag_isValid;
}

QString OAIGoogleIdentityAccesscontextmanagerV1AccessPolicy::getName() const {
    return m_name;
}
void OAIGoogleIdentityAccesscontextmanagerV1AccessPolicy::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleIdentityAccesscontextmanagerV1AccessPolicy::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleIdentityAccesscontextmanagerV1AccessPolicy::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGoogleIdentityAccesscontextmanagerV1AccessPolicy::getParent() const {
    return m_parent;
}
void OAIGoogleIdentityAccesscontextmanagerV1AccessPolicy::setParent(const QString &parent) {
    m_parent = parent;
    m_parent_isSet = true;
}

bool OAIGoogleIdentityAccesscontextmanagerV1AccessPolicy::is_parent_Set() const{
    return m_parent_isSet;
}

bool OAIGoogleIdentityAccesscontextmanagerV1AccessPolicy::is_parent_Valid() const{
    return m_parent_isValid;
}

QList<QString> OAIGoogleIdentityAccesscontextmanagerV1AccessPolicy::getScopes() const {
    return m_scopes;
}
void OAIGoogleIdentityAccesscontextmanagerV1AccessPolicy::setScopes(const QList<QString> &scopes) {
    m_scopes = scopes;
    m_scopes_isSet = true;
}

bool OAIGoogleIdentityAccesscontextmanagerV1AccessPolicy::is_scopes_Set() const{
    return m_scopes_isSet;
}

bool OAIGoogleIdentityAccesscontextmanagerV1AccessPolicy::is_scopes_Valid() const{
    return m_scopes_isValid;
}

QString OAIGoogleIdentityAccesscontextmanagerV1AccessPolicy::getTitle() const {
    return m_title;
}
void OAIGoogleIdentityAccesscontextmanagerV1AccessPolicy::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAIGoogleIdentityAccesscontextmanagerV1AccessPolicy::is_title_Set() const{
    return m_title_isSet;
}

bool OAIGoogleIdentityAccesscontextmanagerV1AccessPolicy::is_title_Valid() const{
    return m_title_isValid;
}

bool OAIGoogleIdentityAccesscontextmanagerV1AccessPolicy::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_etag_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_parent_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_scopes.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleIdentityAccesscontextmanagerV1AccessPolicy::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
