/**
 * Cloud Asset API
 * The Cloud Asset API manages the history and inventory of Google Cloud resources.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGcsDestination.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGcsDestination::OAIGcsDestination(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGcsDestination::OAIGcsDestination() {
    this->initializeModel();
}

OAIGcsDestination::~OAIGcsDestination() {}

void OAIGcsDestination::initializeModel() {

    m_uri_isSet = false;
    m_uri_isValid = false;

    m_uri_prefix_isSet = false;
    m_uri_prefix_isValid = false;
}

void OAIGcsDestination::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGcsDestination::fromJsonObject(QJsonObject json) {

    m_uri_isValid = ::OpenAPI::fromJsonValue(m_uri, json[QString("uri")]);
    m_uri_isSet = !json[QString("uri")].isNull() && m_uri_isValid;

    m_uri_prefix_isValid = ::OpenAPI::fromJsonValue(m_uri_prefix, json[QString("uriPrefix")]);
    m_uri_prefix_isSet = !json[QString("uriPrefix")].isNull() && m_uri_prefix_isValid;
}

QString OAIGcsDestination::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGcsDestination::asJsonObject() const {
    QJsonObject obj;
    if (m_uri_isSet) {
        obj.insert(QString("uri"), ::OpenAPI::toJsonValue(m_uri));
    }
    if (m_uri_prefix_isSet) {
        obj.insert(QString("uriPrefix"), ::OpenAPI::toJsonValue(m_uri_prefix));
    }
    return obj;
}

QString OAIGcsDestination::getUri() const {
    return m_uri;
}
void OAIGcsDestination::setUri(const QString &uri) {
    m_uri = uri;
    m_uri_isSet = true;
}

bool OAIGcsDestination::is_uri_Set() const{
    return m_uri_isSet;
}

bool OAIGcsDestination::is_uri_Valid() const{
    return m_uri_isValid;
}

QString OAIGcsDestination::getUriPrefix() const {
    return m_uri_prefix;
}
void OAIGcsDestination::setUriPrefix(const QString &uri_prefix) {
    m_uri_prefix = uri_prefix;
    m_uri_prefix_isSet = true;
}

bool OAIGcsDestination::is_uri_prefix_Set() const{
    return m_uri_prefix_isSet;
}

bool OAIGcsDestination::is_uri_prefix_Valid() const{
    return m_uri_prefix_isValid;
}

bool OAIGcsDestination::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_uri_prefix_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGcsDestination::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
