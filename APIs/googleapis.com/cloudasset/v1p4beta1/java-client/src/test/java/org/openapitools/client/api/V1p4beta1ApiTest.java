/*
 * Cloud Asset API
 * The cloud asset API manages the history and inventory of cloud resources.
 *
 * The version of the OpenAPI document: v1p4beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AnalyzeIamPolicyResponse;
import org.openapitools.client.model.ExportIamPolicyAnalysisRequest;
import org.openapitools.client.model.Operation;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for V1p4beta1Api
 */
@Disabled
public class V1p4beta1ApiTest {

    private final V1p4beta1Api api = new V1p4beta1Api();

    /**
     * Analyzes IAM policies to answer which identities have what accesses on which resources.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudassetAnalyzeIamPolicyTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        List<String> analysisQueryAccessSelectorPermissions = null;
        List<String> analysisQueryAccessSelectorRoles = null;
        String analysisQueryIdentitySelectorIdentity = null;
        String analysisQueryResourceSelectorFullResourceName = null;
        Boolean optionsAnalyzeServiceAccountImpersonation = null;
        String optionsExecutionTimeout = null;
        Boolean optionsExpandGroups = null;
        Boolean optionsExpandResources = null;
        Boolean optionsExpandRoles = null;
        Boolean optionsOutputGroupEdges = null;
        Boolean optionsOutputResourceEdges = null;
        AnalyzeIamPolicyResponse response = api.cloudassetAnalyzeIamPolicy(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, analysisQueryAccessSelectorPermissions, analysisQueryAccessSelectorRoles, analysisQueryIdentitySelectorIdentity, analysisQueryResourceSelectorFullResourceName, optionsAnalyzeServiceAccountImpersonation, optionsExecutionTimeout, optionsExpandGroups, optionsExpandResources, optionsExpandRoles, optionsOutputGroupEdges, optionsOutputResourceEdges);
        // TODO: test validations
    }

    /**
     * Exports the answers of which identities have what accesses on which resources to a Google Cloud Storage destination. The output format is the JSON format that represents a AnalyzeIamPolicyResponse in the JSON format. This method implements the google.longrunning.Operation, which allows you to keep track of the export. We recommend intervals of at least 2 seconds with exponential retry to poll the export operation result. The metadata contains the request to help callers to map responses to requests.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudassetExportIamPolicyAnalysisTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        ExportIamPolicyAnalysisRequest exportIamPolicyAnalysisRequest = null;
        Operation response = api.cloudassetExportIamPolicyAnalysis(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, exportIamPolicyAnalysisRequest);
        // TODO: test validations
    }

}
