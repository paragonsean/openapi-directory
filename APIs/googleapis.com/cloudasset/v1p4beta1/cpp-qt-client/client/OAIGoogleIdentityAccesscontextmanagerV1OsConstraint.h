/**
 * Cloud Asset API
 * The cloud asset API manages the history and inventory of cloud resources.
 *
 * The version of the OpenAPI document: v1p4beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleIdentityAccesscontextmanagerV1OsConstraint.h
 *
 * A restriction on the OS type and version of devices making requests.
 */

#ifndef OAIGoogleIdentityAccesscontextmanagerV1OsConstraint_H
#define OAIGoogleIdentityAccesscontextmanagerV1OsConstraint_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGoogleIdentityAccesscontextmanagerV1OsConstraint : public OAIObject {
public:
    OAIGoogleIdentityAccesscontextmanagerV1OsConstraint();
    OAIGoogleIdentityAccesscontextmanagerV1OsConstraint(QString json);
    ~OAIGoogleIdentityAccesscontextmanagerV1OsConstraint() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getMinimumVersion() const;
    void setMinimumVersion(const QString &minimum_version);
    bool is_minimum_version_Set() const;
    bool is_minimum_version_Valid() const;

    QString getOsType() const;
    void setOsType(const QString &os_type);
    bool is_os_type_Set() const;
    bool is_os_type_Valid() const;

    bool isRequireVerifiedChromeOs() const;
    void setRequireVerifiedChromeOs(const bool &require_verified_chrome_os);
    bool is_require_verified_chrome_os_Set() const;
    bool is_require_verified_chrome_os_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_minimum_version;
    bool m_minimum_version_isSet;
    bool m_minimum_version_isValid;

    QString m_os_type;
    bool m_os_type_isSet;
    bool m_os_type_isValid;

    bool m_require_verified_chrome_os;
    bool m_require_verified_chrome_os_isSet;
    bool m_require_verified_chrome_os_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleIdentityAccesscontextmanagerV1OsConstraint)

#endif // OAIGoogleIdentityAccesscontextmanagerV1OsConstraint_H
