/**
 * Cloud Asset API
 * The cloud asset API manages the history and inventory of cloud resources.
 *
 * The version of the OpenAPI document: v1p4beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleIdentityAccesscontextmanagerV1IngressFrom.h
 *
 * Defines the conditions under which an IngressPolicy matches a request. Conditions are based on information about the source of the request. The request must satisfy what is defined in &#x60;sources&#x60; AND identity related fields in order to match.
 */

#ifndef OAIGoogleIdentityAccesscontextmanagerV1IngressFrom_H
#define OAIGoogleIdentityAccesscontextmanagerV1IngressFrom_H

#include <QJsonObject>

#include "OAIGoogleIdentityAccesscontextmanagerV1IngressSource.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleIdentityAccesscontextmanagerV1IngressSource;

class OAIGoogleIdentityAccesscontextmanagerV1IngressFrom : public OAIObject {
public:
    OAIGoogleIdentityAccesscontextmanagerV1IngressFrom();
    OAIGoogleIdentityAccesscontextmanagerV1IngressFrom(QString json);
    ~OAIGoogleIdentityAccesscontextmanagerV1IngressFrom() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getIdentities() const;
    void setIdentities(const QList<QString> &identities);
    bool is_identities_Set() const;
    bool is_identities_Valid() const;

    QString getIdentityType() const;
    void setIdentityType(const QString &identity_type);
    bool is_identity_type_Set() const;
    bool is_identity_type_Valid() const;

    QList<OAIGoogleIdentityAccesscontextmanagerV1IngressSource> getSources() const;
    void setSources(const QList<OAIGoogleIdentityAccesscontextmanagerV1IngressSource> &sources);
    bool is_sources_Set() const;
    bool is_sources_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_identities;
    bool m_identities_isSet;
    bool m_identities_isValid;

    QString m_identity_type;
    bool m_identity_type_isSet;
    bool m_identity_type_isValid;

    QList<OAIGoogleIdentityAccesscontextmanagerV1IngressSource> m_sources;
    bool m_sources_isSet;
    bool m_sources_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleIdentityAccesscontextmanagerV1IngressFrom)

#endif // OAIGoogleIdentityAccesscontextmanagerV1IngressFrom_H
