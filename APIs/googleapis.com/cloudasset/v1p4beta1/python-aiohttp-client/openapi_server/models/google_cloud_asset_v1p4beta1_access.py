# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_asset_v1p4beta1_analysis_state import GoogleCloudAssetV1p4beta1AnalysisState
from openapi_server import util


class GoogleCloudAssetV1p4beta1Access(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, analysis_state: GoogleCloudAssetV1p4beta1AnalysisState=None, permission: str=None, role: str=None):
        """GoogleCloudAssetV1p4beta1Access - a model defined in OpenAPI

        :param analysis_state: The analysis_state of this GoogleCloudAssetV1p4beta1Access.
        :param permission: The permission of this GoogleCloudAssetV1p4beta1Access.
        :param role: The role of this GoogleCloudAssetV1p4beta1Access.
        """
        self.openapi_types = {
            'analysis_state': GoogleCloudAssetV1p4beta1AnalysisState,
            'permission': str,
            'role': str
        }

        self.attribute_map = {
            'analysis_state': 'analysisState',
            'permission': 'permission',
            'role': 'role'
        }

        self._analysis_state = analysis_state
        self._permission = permission
        self._role = role

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAssetV1p4beta1Access':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAssetV1p4beta1Access of this GoogleCloudAssetV1p4beta1Access.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def analysis_state(self):
        """Gets the analysis_state of this GoogleCloudAssetV1p4beta1Access.


        :return: The analysis_state of this GoogleCloudAssetV1p4beta1Access.
        :rtype: GoogleCloudAssetV1p4beta1AnalysisState
        """
        return self._analysis_state

    @analysis_state.setter
    def analysis_state(self, analysis_state):
        """Sets the analysis_state of this GoogleCloudAssetV1p4beta1Access.


        :param analysis_state: The analysis_state of this GoogleCloudAssetV1p4beta1Access.
        :type analysis_state: GoogleCloudAssetV1p4beta1AnalysisState
        """

        self._analysis_state = analysis_state

    @property
    def permission(self):
        """Gets the permission of this GoogleCloudAssetV1p4beta1Access.

        The permission.

        :return: The permission of this GoogleCloudAssetV1p4beta1Access.
        :rtype: str
        """
        return self._permission

    @permission.setter
    def permission(self, permission):
        """Sets the permission of this GoogleCloudAssetV1p4beta1Access.

        The permission.

        :param permission: The permission of this GoogleCloudAssetV1p4beta1Access.
        :type permission: str
        """

        self._permission = permission

    @property
    def role(self):
        """Gets the role of this GoogleCloudAssetV1p4beta1Access.

        The role.

        :return: The role of this GoogleCloudAssetV1p4beta1Access.
        :rtype: str
        """
        return self._role

    @role.setter
    def role(self, role):
        """Sets the role of this GoogleCloudAssetV1p4beta1Access.

        The role.

        :param role: The role of this GoogleCloudAssetV1p4beta1Access.
        :type role: str
        """

        self._role = role
