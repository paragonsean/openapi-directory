# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.binding import Binding
from openapi_server.models.google_cloud_asset_v1p4beta1_access_control_list import GoogleCloudAssetV1p4beta1AccessControlList
from openapi_server.models.google_cloud_asset_v1p4beta1_identity_list import GoogleCloudAssetV1p4beta1IdentityList
from openapi_server import util


class IamPolicyAnalysisResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, access_control_lists: List[GoogleCloudAssetV1p4beta1AccessControlList]=None, attached_resource_full_name: str=None, fully_explored: bool=None, iam_binding: Binding=None, identity_list: GoogleCloudAssetV1p4beta1IdentityList=None):
        """IamPolicyAnalysisResult - a model defined in OpenAPI

        :param access_control_lists: The access_control_lists of this IamPolicyAnalysisResult.
        :param attached_resource_full_name: The attached_resource_full_name of this IamPolicyAnalysisResult.
        :param fully_explored: The fully_explored of this IamPolicyAnalysisResult.
        :param iam_binding: The iam_binding of this IamPolicyAnalysisResult.
        :param identity_list: The identity_list of this IamPolicyAnalysisResult.
        """
        self.openapi_types = {
            'access_control_lists': List[GoogleCloudAssetV1p4beta1AccessControlList],
            'attached_resource_full_name': str,
            'fully_explored': bool,
            'iam_binding': Binding,
            'identity_list': GoogleCloudAssetV1p4beta1IdentityList
        }

        self.attribute_map = {
            'access_control_lists': 'accessControlLists',
            'attached_resource_full_name': 'attachedResourceFullName',
            'fully_explored': 'fullyExplored',
            'iam_binding': 'iamBinding',
            'identity_list': 'identityList'
        }

        self._access_control_lists = access_control_lists
        self._attached_resource_full_name = attached_resource_full_name
        self._fully_explored = fully_explored
        self._iam_binding = iam_binding
        self._identity_list = identity_list

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IamPolicyAnalysisResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IamPolicyAnalysisResult of this IamPolicyAnalysisResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def access_control_lists(self):
        """Gets the access_control_lists of this IamPolicyAnalysisResult.

        The access control lists derived from the iam_binding that match or potentially match resource and access selectors specified in the request.

        :return: The access_control_lists of this IamPolicyAnalysisResult.
        :rtype: List[GoogleCloudAssetV1p4beta1AccessControlList]
        """
        return self._access_control_lists

    @access_control_lists.setter
    def access_control_lists(self, access_control_lists):
        """Sets the access_control_lists of this IamPolicyAnalysisResult.

        The access control lists derived from the iam_binding that match or potentially match resource and access selectors specified in the request.

        :param access_control_lists: The access_control_lists of this IamPolicyAnalysisResult.
        :type access_control_lists: List[GoogleCloudAssetV1p4beta1AccessControlList]
        """

        self._access_control_lists = access_control_lists

    @property
    def attached_resource_full_name(self):
        """Gets the attached_resource_full_name of this IamPolicyAnalysisResult.

        The [full resource name](https://cloud.google.com/asset-inventory/docs/resource-name-format) of the resource to which the iam_binding policy attaches.

        :return: The attached_resource_full_name of this IamPolicyAnalysisResult.
        :rtype: str
        """
        return self._attached_resource_full_name

    @attached_resource_full_name.setter
    def attached_resource_full_name(self, attached_resource_full_name):
        """Sets the attached_resource_full_name of this IamPolicyAnalysisResult.

        The [full resource name](https://cloud.google.com/asset-inventory/docs/resource-name-format) of the resource to which the iam_binding policy attaches.

        :param attached_resource_full_name: The attached_resource_full_name of this IamPolicyAnalysisResult.
        :type attached_resource_full_name: str
        """

        self._attached_resource_full_name = attached_resource_full_name

    @property
    def fully_explored(self):
        """Gets the fully_explored of this IamPolicyAnalysisResult.

        Represents whether all analyses on the iam_binding have successfully finished.

        :return: The fully_explored of this IamPolicyAnalysisResult.
        :rtype: bool
        """
        return self._fully_explored

    @fully_explored.setter
    def fully_explored(self, fully_explored):
        """Sets the fully_explored of this IamPolicyAnalysisResult.

        Represents whether all analyses on the iam_binding have successfully finished.

        :param fully_explored: The fully_explored of this IamPolicyAnalysisResult.
        :type fully_explored: bool
        """

        self._fully_explored = fully_explored

    @property
    def iam_binding(self):
        """Gets the iam_binding of this IamPolicyAnalysisResult.


        :return: The iam_binding of this IamPolicyAnalysisResult.
        :rtype: Binding
        """
        return self._iam_binding

    @iam_binding.setter
    def iam_binding(self, iam_binding):
        """Sets the iam_binding of this IamPolicyAnalysisResult.


        :param iam_binding: The iam_binding of this IamPolicyAnalysisResult.
        :type iam_binding: Binding
        """

        self._iam_binding = iam_binding

    @property
    def identity_list(self):
        """Gets the identity_list of this IamPolicyAnalysisResult.


        :return: The identity_list of this IamPolicyAnalysisResult.
        :rtype: GoogleCloudAssetV1p4beta1IdentityList
        """
        return self._identity_list

    @identity_list.setter
    def identity_list(self, identity_list):
        """Sets the identity_list of this IamPolicyAnalysisResult.


        :param identity_list: The identity_list of this IamPolicyAnalysisResult.
        :type identity_list: GoogleCloudAssetV1p4beta1IdentityList
        """

        self._identity_list = identity_list
