# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.iam_policy_analysis_output_config import IamPolicyAnalysisOutputConfig
from openapi_server.models.iam_policy_analysis_query import IamPolicyAnalysisQuery
from openapi_server.models.options import Options
from openapi_server import util


class ExportIamPolicyAnalysisRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, analysis_query: IamPolicyAnalysisQuery=None, options: Options=None, output_config: IamPolicyAnalysisOutputConfig=None):
        """ExportIamPolicyAnalysisRequest - a model defined in OpenAPI

        :param analysis_query: The analysis_query of this ExportIamPolicyAnalysisRequest.
        :param options: The options of this ExportIamPolicyAnalysisRequest.
        :param output_config: The output_config of this ExportIamPolicyAnalysisRequest.
        """
        self.openapi_types = {
            'analysis_query': IamPolicyAnalysisQuery,
            'options': Options,
            'output_config': IamPolicyAnalysisOutputConfig
        }

        self.attribute_map = {
            'analysis_query': 'analysisQuery',
            'options': 'options',
            'output_config': 'outputConfig'
        }

        self._analysis_query = analysis_query
        self._options = options
        self._output_config = output_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExportIamPolicyAnalysisRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ExportIamPolicyAnalysisRequest of this ExportIamPolicyAnalysisRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def analysis_query(self):
        """Gets the analysis_query of this ExportIamPolicyAnalysisRequest.


        :return: The analysis_query of this ExportIamPolicyAnalysisRequest.
        :rtype: IamPolicyAnalysisQuery
        """
        return self._analysis_query

    @analysis_query.setter
    def analysis_query(self, analysis_query):
        """Sets the analysis_query of this ExportIamPolicyAnalysisRequest.


        :param analysis_query: The analysis_query of this ExportIamPolicyAnalysisRequest.
        :type analysis_query: IamPolicyAnalysisQuery
        """

        self._analysis_query = analysis_query

    @property
    def options(self):
        """Gets the options of this ExportIamPolicyAnalysisRequest.


        :return: The options of this ExportIamPolicyAnalysisRequest.
        :rtype: Options
        """
        return self._options

    @options.setter
    def options(self, options):
        """Sets the options of this ExportIamPolicyAnalysisRequest.


        :param options: The options of this ExportIamPolicyAnalysisRequest.
        :type options: Options
        """

        self._options = options

    @property
    def output_config(self):
        """Gets the output_config of this ExportIamPolicyAnalysisRequest.


        :return: The output_config of this ExportIamPolicyAnalysisRequest.
        :rtype: IamPolicyAnalysisOutputConfig
        """
        return self._output_config

    @output_config.setter
    def output_config(self, output_config):
        """Sets the output_config of this ExportIamPolicyAnalysisRequest.


        :param output_config: The output_config of this ExportIamPolicyAnalysisRequest.
        :type output_config: IamPolicyAnalysisOutputConfig
        """

        self._output_config = output_config
