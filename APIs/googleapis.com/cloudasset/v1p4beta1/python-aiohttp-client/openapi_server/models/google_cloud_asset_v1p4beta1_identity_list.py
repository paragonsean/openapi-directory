# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_asset_v1p4beta1_edge import GoogleCloudAssetV1p4beta1Edge
from openapi_server.models.google_cloud_asset_v1p4beta1_identity import GoogleCloudAssetV1p4beta1Identity
from openapi_server import util


class GoogleCloudAssetV1p4beta1IdentityList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, group_edges: List[GoogleCloudAssetV1p4beta1Edge]=None, identities: List[GoogleCloudAssetV1p4beta1Identity]=None):
        """GoogleCloudAssetV1p4beta1IdentityList - a model defined in OpenAPI

        :param group_edges: The group_edges of this GoogleCloudAssetV1p4beta1IdentityList.
        :param identities: The identities of this GoogleCloudAssetV1p4beta1IdentityList.
        """
        self.openapi_types = {
            'group_edges': List[GoogleCloudAssetV1p4beta1Edge],
            'identities': List[GoogleCloudAssetV1p4beta1Identity]
        }

        self.attribute_map = {
            'group_edges': 'groupEdges',
            'identities': 'identities'
        }

        self._group_edges = group_edges
        self._identities = identities

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAssetV1p4beta1IdentityList':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAssetV1p4beta1IdentityList of this GoogleCloudAssetV1p4beta1IdentityList.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def group_edges(self):
        """Gets the group_edges of this GoogleCloudAssetV1p4beta1IdentityList.

        Group identity edges of the graph starting from the binding's group members to any node of the identities. The Edge.source_node contains a group, such as \"group:parent@google.com\". The Edge.target_node contains a member of the group, such as \"group:child@google.com\" or \"user:foo@google.com\". This field is present only if the output_group_edges option is enabled in request.

        :return: The group_edges of this GoogleCloudAssetV1p4beta1IdentityList.
        :rtype: List[GoogleCloudAssetV1p4beta1Edge]
        """
        return self._group_edges

    @group_edges.setter
    def group_edges(self, group_edges):
        """Sets the group_edges of this GoogleCloudAssetV1p4beta1IdentityList.

        Group identity edges of the graph starting from the binding's group members to any node of the identities. The Edge.source_node contains a group, such as \"group:parent@google.com\". The Edge.target_node contains a member of the group, such as \"group:child@google.com\" or \"user:foo@google.com\". This field is present only if the output_group_edges option is enabled in request.

        :param group_edges: The group_edges of this GoogleCloudAssetV1p4beta1IdentityList.
        :type group_edges: List[GoogleCloudAssetV1p4beta1Edge]
        """

        self._group_edges = group_edges

    @property
    def identities(self):
        """Gets the identities of this GoogleCloudAssetV1p4beta1IdentityList.

        Only the identities that match one of the following conditions will be presented: - The identity_selector, if it is specified in request; - Otherwise, identities reachable from the policy binding's members.

        :return: The identities of this GoogleCloudAssetV1p4beta1IdentityList.
        :rtype: List[GoogleCloudAssetV1p4beta1Identity]
        """
        return self._identities

    @identities.setter
    def identities(self, identities):
        """Sets the identities of this GoogleCloudAssetV1p4beta1IdentityList.

        Only the identities that match one of the following conditions will be presented: - The identity_selector, if it is specified in request; - Otherwise, identities reachable from the policy binding's members.

        :param identities: The identities of this GoogleCloudAssetV1p4beta1IdentityList.
        :type identities: List[GoogleCloudAssetV1p4beta1Identity]
        """

        self._identities = identities
