/**
 * Cloud Asset API
 * The cloud asset API manages the history and inventory of cloud resources.
 *
 * The version of the OpenAPI document: v1p4beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import IamPolicyAnalysisQuery from './IamPolicyAnalysisQuery';
import IamPolicyAnalysisResult from './IamPolicyAnalysisResult';

/**
 * The IamPolicyAnalysis model module.
 * @module model/IamPolicyAnalysis
 * @version v1p4beta1
 */
class IamPolicyAnalysis {
    /**
     * Constructs a new <code>IamPolicyAnalysis</code>.
     * An analysis message to group the query and results.
     * @alias module:model/IamPolicyAnalysis
     */
    constructor() { 
        
        IamPolicyAnalysis.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>IamPolicyAnalysis</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IamPolicyAnalysis} obj Optional instance to populate.
     * @return {module:model/IamPolicyAnalysis} The populated <code>IamPolicyAnalysis</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IamPolicyAnalysis();

            if (data.hasOwnProperty('analysisQuery')) {
                obj['analysisQuery'] = IamPolicyAnalysisQuery.constructFromObject(data['analysisQuery']);
            }
            if (data.hasOwnProperty('analysisResults')) {
                obj['analysisResults'] = ApiClient.convertToType(data['analysisResults'], [IamPolicyAnalysisResult]);
            }
            if (data.hasOwnProperty('fullyExplored')) {
                obj['fullyExplored'] = ApiClient.convertToType(data['fullyExplored'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IamPolicyAnalysis</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IamPolicyAnalysis</code>.
     */
    static validateJSON(data) {
        // validate the optional field `analysisQuery`
        if (data['analysisQuery']) { // data not null
          IamPolicyAnalysisQuery.validateJSON(data['analysisQuery']);
        }
        if (data['analysisResults']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['analysisResults'])) {
                throw new Error("Expected the field `analysisResults` to be an array in the JSON data but got " + data['analysisResults']);
            }
            // validate the optional field `analysisResults` (array)
            for (const item of data['analysisResults']) {
                IamPolicyAnalysisResult.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {module:model/IamPolicyAnalysisQuery} analysisQuery
 */
IamPolicyAnalysis.prototype['analysisQuery'] = undefined;

/**
 * A list of IamPolicyAnalysisResult that matches the analysis query, or empty if no result is found.
 * @member {Array.<module:model/IamPolicyAnalysisResult>} analysisResults
 */
IamPolicyAnalysis.prototype['analysisResults'] = undefined;

/**
 * Represents whether all entries in the analysis_results have been fully explored to answer the query.
 * @member {Boolean} fullyExplored
 */
IamPolicyAnalysis.prototype['fullyExplored'] = undefined;






export default IamPolicyAnalysis;

