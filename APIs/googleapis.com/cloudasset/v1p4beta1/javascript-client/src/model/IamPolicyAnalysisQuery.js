/**
 * Cloud Asset API
 * The cloud asset API manages the history and inventory of cloud resources.
 *
 * The version of the OpenAPI document: v1p4beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AccessSelector from './AccessSelector';
import IdentitySelector from './IdentitySelector';
import ResourceSelector from './ResourceSelector';

/**
 * The IamPolicyAnalysisQuery model module.
 * @module model/IamPolicyAnalysisQuery
 * @version v1p4beta1
 */
class IamPolicyAnalysisQuery {
    /**
     * Constructs a new <code>IamPolicyAnalysisQuery</code>.
     * IAM policy analysis query message.
     * @alias module:model/IamPolicyAnalysisQuery
     */
    constructor() { 
        
        IamPolicyAnalysisQuery.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>IamPolicyAnalysisQuery</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IamPolicyAnalysisQuery} obj Optional instance to populate.
     * @return {module:model/IamPolicyAnalysisQuery} The populated <code>IamPolicyAnalysisQuery</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IamPolicyAnalysisQuery();

            if (data.hasOwnProperty('accessSelector')) {
                obj['accessSelector'] = AccessSelector.constructFromObject(data['accessSelector']);
            }
            if (data.hasOwnProperty('identitySelector')) {
                obj['identitySelector'] = IdentitySelector.constructFromObject(data['identitySelector']);
            }
            if (data.hasOwnProperty('parent')) {
                obj['parent'] = ApiClient.convertToType(data['parent'], 'String');
            }
            if (data.hasOwnProperty('resourceSelector')) {
                obj['resourceSelector'] = ResourceSelector.constructFromObject(data['resourceSelector']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IamPolicyAnalysisQuery</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IamPolicyAnalysisQuery</code>.
     */
    static validateJSON(data) {
        // validate the optional field `accessSelector`
        if (data['accessSelector']) { // data not null
          AccessSelector.validateJSON(data['accessSelector']);
        }
        // validate the optional field `identitySelector`
        if (data['identitySelector']) { // data not null
          IdentitySelector.validateJSON(data['identitySelector']);
        }
        // ensure the json data is a string
        if (data['parent'] && !(typeof data['parent'] === 'string' || data['parent'] instanceof String)) {
            throw new Error("Expected the field `parent` to be a primitive type in the JSON string but got " + data['parent']);
        }
        // validate the optional field `resourceSelector`
        if (data['resourceSelector']) { // data not null
          ResourceSelector.validateJSON(data['resourceSelector']);
        }

        return true;
    }


}



/**
 * @member {module:model/AccessSelector} accessSelector
 */
IamPolicyAnalysisQuery.prototype['accessSelector'] = undefined;

/**
 * @member {module:model/IdentitySelector} identitySelector
 */
IamPolicyAnalysisQuery.prototype['identitySelector'] = undefined;

/**
 * Required. The relative name of the root asset. Only resources and IAM policies within the parent will be analyzed. This can only be an organization number (such as \"organizations/123\"), a folder number (such as \"folders/123\"), a project ID (such as \"projects/my-project-id\"), or a project number (such as \"projects/12345\"). To know how to get organization id, visit [here ](https://cloud.google.com/resource-manager/docs/creating-managing-organization#retrieving_your_organization_id). To know how to get folder or project id, visit [here ](https://cloud.google.com/resource-manager/docs/creating-managing-folders#viewing_or_listing_folders_and_projects).
 * @member {String} parent
 */
IamPolicyAnalysisQuery.prototype['parent'] = undefined;

/**
 * @member {module:model/ResourceSelector} resourceSelector
 */
IamPolicyAnalysisQuery.prototype['resourceSelector'] = undefined;






export default IamPolicyAnalysisQuery;

