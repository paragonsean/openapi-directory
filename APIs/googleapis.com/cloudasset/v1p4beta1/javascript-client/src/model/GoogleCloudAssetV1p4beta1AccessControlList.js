/**
 * Cloud Asset API
 * The cloud asset API manages the history and inventory of cloud resources.
 *
 * The version of the OpenAPI document: v1p4beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudAssetV1p4beta1Access from './GoogleCloudAssetV1p4beta1Access';
import GoogleCloudAssetV1p4beta1Edge from './GoogleCloudAssetV1p4beta1Edge';
import GoogleCloudAssetV1p4beta1Resource from './GoogleCloudAssetV1p4beta1Resource';

/**
 * The GoogleCloudAssetV1p4beta1AccessControlList model module.
 * @module model/GoogleCloudAssetV1p4beta1AccessControlList
 * @version v1p4beta1
 */
class GoogleCloudAssetV1p4beta1AccessControlList {
    /**
     * Constructs a new <code>GoogleCloudAssetV1p4beta1AccessControlList</code>.
     * An access control list, derived from the above IAM policy binding, which contains a set of resources and accesses. May include one item from each set to compose an access control entry. NOTICE that there could be multiple access control lists for one IAM policy binding. The access control lists are created based on resource and access combinations. For example, assume we have the following cases in one IAM policy binding: - Permission P1 and P2 apply to resource R1 and R2; - Permission P3 applies to resource R2 and R3; This will result in the following access control lists: - AccessControlList 1: [R1, R2], [P1, P2] - AccessControlList 2: [R2, R3], [P3]
     * @alias module:model/GoogleCloudAssetV1p4beta1AccessControlList
     */
    constructor() { 
        
        GoogleCloudAssetV1p4beta1AccessControlList.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudAssetV1p4beta1AccessControlList</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudAssetV1p4beta1AccessControlList} obj Optional instance to populate.
     * @return {module:model/GoogleCloudAssetV1p4beta1AccessControlList} The populated <code>GoogleCloudAssetV1p4beta1AccessControlList</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudAssetV1p4beta1AccessControlList();

            if (data.hasOwnProperty('accesses')) {
                obj['accesses'] = ApiClient.convertToType(data['accesses'], [GoogleCloudAssetV1p4beta1Access]);
            }
            if (data.hasOwnProperty('resourceEdges')) {
                obj['resourceEdges'] = ApiClient.convertToType(data['resourceEdges'], [GoogleCloudAssetV1p4beta1Edge]);
            }
            if (data.hasOwnProperty('resources')) {
                obj['resources'] = ApiClient.convertToType(data['resources'], [GoogleCloudAssetV1p4beta1Resource]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudAssetV1p4beta1AccessControlList</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudAssetV1p4beta1AccessControlList</code>.
     */
    static validateJSON(data) {
        if (data['accesses']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['accesses'])) {
                throw new Error("Expected the field `accesses` to be an array in the JSON data but got " + data['accesses']);
            }
            // validate the optional field `accesses` (array)
            for (const item of data['accesses']) {
                GoogleCloudAssetV1p4beta1Access.validateJSON(item);
            };
        }
        if (data['resourceEdges']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['resourceEdges'])) {
                throw new Error("Expected the field `resourceEdges` to be an array in the JSON data but got " + data['resourceEdges']);
            }
            // validate the optional field `resourceEdges` (array)
            for (const item of data['resourceEdges']) {
                GoogleCloudAssetV1p4beta1Edge.validateJSON(item);
            };
        }
        if (data['resources']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['resources'])) {
                throw new Error("Expected the field `resources` to be an array in the JSON data but got " + data['resources']);
            }
            // validate the optional field `resources` (array)
            for (const item of data['resources']) {
                GoogleCloudAssetV1p4beta1Resource.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The accesses that match one of the following conditions: - The access_selector, if it is specified in request; - Otherwise, access specifiers reachable from the policy binding's role.
 * @member {Array.<module:model/GoogleCloudAssetV1p4beta1Access>} accesses
 */
GoogleCloudAssetV1p4beta1AccessControlList.prototype['accesses'] = undefined;

/**
 * Resource edges of the graph starting from the policy attached resource to any descendant resources. The Edge.source_node contains the full resource name of a parent resource and Edge.target_node contains the full resource name of a child resource. This field is present only if the output_resource_edges option is enabled in request.
 * @member {Array.<module:model/GoogleCloudAssetV1p4beta1Edge>} resourceEdges
 */
GoogleCloudAssetV1p4beta1AccessControlList.prototype['resourceEdges'] = undefined;

/**
 * The resources that match one of the following conditions: - The resource_selector, if it is specified in request; - Otherwise, resources reachable from the policy attached resource.
 * @member {Array.<module:model/GoogleCloudAssetV1p4beta1Resource>} resources
 */
GoogleCloudAssetV1p4beta1AccessControlList.prototype['resources'] = undefined;






export default GoogleCloudAssetV1p4beta1AccessControlList;

