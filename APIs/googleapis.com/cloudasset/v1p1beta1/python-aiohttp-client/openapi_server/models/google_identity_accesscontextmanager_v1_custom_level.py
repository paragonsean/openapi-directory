# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.expr import Expr
from openapi_server import util


class GoogleIdentityAccesscontextmanagerV1CustomLevel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, expr: Expr=None):
        """GoogleIdentityAccesscontextmanagerV1CustomLevel - a model defined in OpenAPI

        :param expr: The expr of this GoogleIdentityAccesscontextmanagerV1CustomLevel.
        """
        self.openapi_types = {
            'expr': Expr
        }

        self.attribute_map = {
            'expr': 'expr'
        }

        self._expr = expr

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleIdentityAccesscontextmanagerV1CustomLevel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleIdentityAccesscontextmanagerV1CustomLevel of this GoogleIdentityAccesscontextmanagerV1CustomLevel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def expr(self):
        """Gets the expr of this GoogleIdentityAccesscontextmanagerV1CustomLevel.


        :return: The expr of this GoogleIdentityAccesscontextmanagerV1CustomLevel.
        :rtype: Expr
        """
        return self._expr

    @expr.setter
    def expr(self, expr):
        """Sets the expr of this GoogleIdentityAccesscontextmanagerV1CustomLevel.


        :param expr: The expr of this GoogleIdentityAccesscontextmanagerV1CustomLevel.
        :type expr: Expr
        """

        self._expr = expr
