# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleIdentityAccesscontextmanagerV1IngressSource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, access_level: str=None, resource: str=None):
        """GoogleIdentityAccesscontextmanagerV1IngressSource - a model defined in OpenAPI

        :param access_level: The access_level of this GoogleIdentityAccesscontextmanagerV1IngressSource.
        :param resource: The resource of this GoogleIdentityAccesscontextmanagerV1IngressSource.
        """
        self.openapi_types = {
            'access_level': str,
            'resource': str
        }

        self.attribute_map = {
            'access_level': 'accessLevel',
            'resource': 'resource'
        }

        self._access_level = access_level
        self._resource = resource

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleIdentityAccesscontextmanagerV1IngressSource':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleIdentityAccesscontextmanagerV1IngressSource of this GoogleIdentityAccesscontextmanagerV1IngressSource.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def access_level(self):
        """Gets the access_level of this GoogleIdentityAccesscontextmanagerV1IngressSource.

        An AccessLevel resource name that allow resources within the ServicePerimeters to be accessed from the internet. AccessLevels listed must be in the same policy as this ServicePerimeter. Referencing a nonexistent AccessLevel will cause an error. If no AccessLevel names are listed, resources within the perimeter can only be accessed via Google Cloud calls with request origins within the perimeter. Example: `accessPolicies/MY_POLICY/accessLevels/MY_LEVEL`. If a single `*` is specified for `access_level`, then all IngressSources will be allowed.

        :return: The access_level of this GoogleIdentityAccesscontextmanagerV1IngressSource.
        :rtype: str
        """
        return self._access_level

    @access_level.setter
    def access_level(self, access_level):
        """Sets the access_level of this GoogleIdentityAccesscontextmanagerV1IngressSource.

        An AccessLevel resource name that allow resources within the ServicePerimeters to be accessed from the internet. AccessLevels listed must be in the same policy as this ServicePerimeter. Referencing a nonexistent AccessLevel will cause an error. If no AccessLevel names are listed, resources within the perimeter can only be accessed via Google Cloud calls with request origins within the perimeter. Example: `accessPolicies/MY_POLICY/accessLevels/MY_LEVEL`. If a single `*` is specified for `access_level`, then all IngressSources will be allowed.

        :param access_level: The access_level of this GoogleIdentityAccesscontextmanagerV1IngressSource.
        :type access_level: str
        """

        self._access_level = access_level

    @property
    def resource(self):
        """Gets the resource of this GoogleIdentityAccesscontextmanagerV1IngressSource.

        A Google Cloud resource that is allowed to ingress the perimeter. Requests from these resources will be allowed to access perimeter data. Currently only projects and VPCs are allowed. Project format: `projects/{project_number}` VPC network format: `//compute.googleapis.com/projects/{PROJECT_ID}/global/networks/{NAME}`. The project may be in any Google Cloud organization, not just the organization that the perimeter is defined in. `*` is not allowed, the case of allowing all Google Cloud resources only is not supported.

        :return: The resource of this GoogleIdentityAccesscontextmanagerV1IngressSource.
        :rtype: str
        """
        return self._resource

    @resource.setter
    def resource(self, resource):
        """Sets the resource of this GoogleIdentityAccesscontextmanagerV1IngressSource.

        A Google Cloud resource that is allowed to ingress the perimeter. Requests from these resources will be allowed to access perimeter data. Currently only projects and VPCs are allowed. Project format: `projects/{project_number}` VPC network format: `//compute.googleapis.com/projects/{PROJECT_ID}/global/networks/{NAME}`. The project may be in any Google Cloud organization, not just the organization that the perimeter is defined in. `*` is not allowed, the case of allowing all Google Cloud resources only is not supported.

        :param resource: The resource of this GoogleIdentityAccesscontextmanagerV1IngressSource.
        :type resource: str
        """

        self._resource = resource
