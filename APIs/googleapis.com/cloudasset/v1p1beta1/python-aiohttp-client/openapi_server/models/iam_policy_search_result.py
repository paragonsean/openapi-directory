# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.explanation import Explanation
from openapi_server.models.policy import Policy
from openapi_server import util


class IamPolicySearchResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, explanation: Explanation=None, policy: Policy=None, project: str=None, resource: str=None):
        """IamPolicySearchResult - a model defined in OpenAPI

        :param explanation: The explanation of this IamPolicySearchResult.
        :param policy: The policy of this IamPolicySearchResult.
        :param project: The project of this IamPolicySearchResult.
        :param resource: The resource of this IamPolicySearchResult.
        """
        self.openapi_types = {
            'explanation': Explanation,
            'policy': Policy,
            'project': str,
            'resource': str
        }

        self.attribute_map = {
            'explanation': 'explanation',
            'policy': 'policy',
            'project': 'project',
            'resource': 'resource'
        }

        self._explanation = explanation
        self._policy = policy
        self._project = project
        self._resource = resource

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IamPolicySearchResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IamPolicySearchResult of this IamPolicySearchResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def explanation(self):
        """Gets the explanation of this IamPolicySearchResult.


        :return: The explanation of this IamPolicySearchResult.
        :rtype: Explanation
        """
        return self._explanation

    @explanation.setter
    def explanation(self, explanation):
        """Sets the explanation of this IamPolicySearchResult.


        :param explanation: The explanation of this IamPolicySearchResult.
        :type explanation: Explanation
        """

        self._explanation = explanation

    @property
    def policy(self):
        """Gets the policy of this IamPolicySearchResult.


        :return: The policy of this IamPolicySearchResult.
        :rtype: Policy
        """
        return self._policy

    @policy.setter
    def policy(self, policy):
        """Sets the policy of this IamPolicySearchResult.


        :param policy: The policy of this IamPolicySearchResult.
        :type policy: Policy
        """

        self._policy = policy

    @property
    def project(self):
        """Gets the project of this IamPolicySearchResult.

        The project that the associated Google Cloud resource belongs to, in the form of `projects/{project_number}`. If an IAM policy is set on a resource -- such as a Compute Engine instance or a Cloud Storage bucket -- the project field will indicate the project that contains the resource. If an IAM policy is set on a folder or orgnization, the project field will be empty.

        :return: The project of this IamPolicySearchResult.
        :rtype: str
        """
        return self._project

    @project.setter
    def project(self, project):
        """Sets the project of this IamPolicySearchResult.

        The project that the associated Google Cloud resource belongs to, in the form of `projects/{project_number}`. If an IAM policy is set on a resource -- such as a Compute Engine instance or a Cloud Storage bucket -- the project field will indicate the project that contains the resource. If an IAM policy is set on a folder or orgnization, the project field will be empty.

        :param project: The project of this IamPolicySearchResult.
        :type project: str
        """

        self._project = project

    @property
    def resource(self):
        """Gets the resource of this IamPolicySearchResult.

        The [full resource name](https://cloud.google.com/apis/design/resource_names#full_resource_name) of the resource associated with this IAM policy.

        :return: The resource of this IamPolicySearchResult.
        :rtype: str
        """
        return self._resource

    @resource.setter
    def resource(self, resource):
        """Sets the resource of this IamPolicySearchResult.

        The [full resource name](https://cloud.google.com/apis/design/resource_names#full_resource_name) of the resource associated with this IAM policy.

        :param resource: The resource of this IamPolicySearchResult.
        :type resource: str
        """

        self._resource = resource
