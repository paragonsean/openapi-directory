/**
 * Cloud Asset API
 * The Cloud Asset API manages the history and inventory of Google Cloud resources.
 *
 * The version of the OpenAPI document: v1p1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleIdentityAccesscontextmanagerV1VpcAccessibleServices.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleIdentityAccesscontextmanagerV1VpcAccessibleServices::OAIGoogleIdentityAccesscontextmanagerV1VpcAccessibleServices(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleIdentityAccesscontextmanagerV1VpcAccessibleServices::OAIGoogleIdentityAccesscontextmanagerV1VpcAccessibleServices() {
    this->initializeModel();
}

OAIGoogleIdentityAccesscontextmanagerV1VpcAccessibleServices::~OAIGoogleIdentityAccesscontextmanagerV1VpcAccessibleServices() {}

void OAIGoogleIdentityAccesscontextmanagerV1VpcAccessibleServices::initializeModel() {

    m_allowed_services_isSet = false;
    m_allowed_services_isValid = false;

    m_enable_restriction_isSet = false;
    m_enable_restriction_isValid = false;
}

void OAIGoogleIdentityAccesscontextmanagerV1VpcAccessibleServices::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleIdentityAccesscontextmanagerV1VpcAccessibleServices::fromJsonObject(QJsonObject json) {

    m_allowed_services_isValid = ::OpenAPI::fromJsonValue(m_allowed_services, json[QString("allowedServices")]);
    m_allowed_services_isSet = !json[QString("allowedServices")].isNull() && m_allowed_services_isValid;

    m_enable_restriction_isValid = ::OpenAPI::fromJsonValue(m_enable_restriction, json[QString("enableRestriction")]);
    m_enable_restriction_isSet = !json[QString("enableRestriction")].isNull() && m_enable_restriction_isValid;
}

QString OAIGoogleIdentityAccesscontextmanagerV1VpcAccessibleServices::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleIdentityAccesscontextmanagerV1VpcAccessibleServices::asJsonObject() const {
    QJsonObject obj;
    if (m_allowed_services.size() > 0) {
        obj.insert(QString("allowedServices"), ::OpenAPI::toJsonValue(m_allowed_services));
    }
    if (m_enable_restriction_isSet) {
        obj.insert(QString("enableRestriction"), ::OpenAPI::toJsonValue(m_enable_restriction));
    }
    return obj;
}

QList<QString> OAIGoogleIdentityAccesscontextmanagerV1VpcAccessibleServices::getAllowedServices() const {
    return m_allowed_services;
}
void OAIGoogleIdentityAccesscontextmanagerV1VpcAccessibleServices::setAllowedServices(const QList<QString> &allowed_services) {
    m_allowed_services = allowed_services;
    m_allowed_services_isSet = true;
}

bool OAIGoogleIdentityAccesscontextmanagerV1VpcAccessibleServices::is_allowed_services_Set() const{
    return m_allowed_services_isSet;
}

bool OAIGoogleIdentityAccesscontextmanagerV1VpcAccessibleServices::is_allowed_services_Valid() const{
    return m_allowed_services_isValid;
}

bool OAIGoogleIdentityAccesscontextmanagerV1VpcAccessibleServices::isEnableRestriction() const {
    return m_enable_restriction;
}
void OAIGoogleIdentityAccesscontextmanagerV1VpcAccessibleServices::setEnableRestriction(const bool &enable_restriction) {
    m_enable_restriction = enable_restriction;
    m_enable_restriction_isSet = true;
}

bool OAIGoogleIdentityAccesscontextmanagerV1VpcAccessibleServices::is_enable_restriction_Set() const{
    return m_enable_restriction_isSet;
}

bool OAIGoogleIdentityAccesscontextmanagerV1VpcAccessibleServices::is_enable_restriction_Valid() const{
    return m_enable_restriction_isValid;
}

bool OAIGoogleIdentityAccesscontextmanagerV1VpcAccessibleServices::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_allowed_services.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_enable_restriction_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleIdentityAccesscontextmanagerV1VpcAccessibleServices::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
