/**
 * Cloud Asset API
 * The Cloud Asset API manages the history and inventory of Google Cloud resources.
 *
 * The version of the OpenAPI document: v1p1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleIdentityAccesscontextmanagerV1VpcNetworkSource.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleIdentityAccesscontextmanagerV1VpcNetworkSource::OAIGoogleIdentityAccesscontextmanagerV1VpcNetworkSource(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleIdentityAccesscontextmanagerV1VpcNetworkSource::OAIGoogleIdentityAccesscontextmanagerV1VpcNetworkSource() {
    this->initializeModel();
}

OAIGoogleIdentityAccesscontextmanagerV1VpcNetworkSource::~OAIGoogleIdentityAccesscontextmanagerV1VpcNetworkSource() {}

void OAIGoogleIdentityAccesscontextmanagerV1VpcNetworkSource::initializeModel() {

    m_vpc_subnetwork_isSet = false;
    m_vpc_subnetwork_isValid = false;
}

void OAIGoogleIdentityAccesscontextmanagerV1VpcNetworkSource::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleIdentityAccesscontextmanagerV1VpcNetworkSource::fromJsonObject(QJsonObject json) {

    m_vpc_subnetwork_isValid = ::OpenAPI::fromJsonValue(m_vpc_subnetwork, json[QString("vpcSubnetwork")]);
    m_vpc_subnetwork_isSet = !json[QString("vpcSubnetwork")].isNull() && m_vpc_subnetwork_isValid;
}

QString OAIGoogleIdentityAccesscontextmanagerV1VpcNetworkSource::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleIdentityAccesscontextmanagerV1VpcNetworkSource::asJsonObject() const {
    QJsonObject obj;
    if (m_vpc_subnetwork.isSet()) {
        obj.insert(QString("vpcSubnetwork"), ::OpenAPI::toJsonValue(m_vpc_subnetwork));
    }
    return obj;
}

OAIGoogleIdentityAccesscontextmanagerV1VpcSubNetwork OAIGoogleIdentityAccesscontextmanagerV1VpcNetworkSource::getVpcSubnetwork() const {
    return m_vpc_subnetwork;
}
void OAIGoogleIdentityAccesscontextmanagerV1VpcNetworkSource::setVpcSubnetwork(const OAIGoogleIdentityAccesscontextmanagerV1VpcSubNetwork &vpc_subnetwork) {
    m_vpc_subnetwork = vpc_subnetwork;
    m_vpc_subnetwork_isSet = true;
}

bool OAIGoogleIdentityAccesscontextmanagerV1VpcNetworkSource::is_vpc_subnetwork_Set() const{
    return m_vpc_subnetwork_isSet;
}

bool OAIGoogleIdentityAccesscontextmanagerV1VpcNetworkSource::is_vpc_subnetwork_Valid() const{
    return m_vpc_subnetwork_isValid;
}

bool OAIGoogleIdentityAccesscontextmanagerV1VpcNetworkSource::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_vpc_subnetwork.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleIdentityAccesscontextmanagerV1VpcNetworkSource::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
