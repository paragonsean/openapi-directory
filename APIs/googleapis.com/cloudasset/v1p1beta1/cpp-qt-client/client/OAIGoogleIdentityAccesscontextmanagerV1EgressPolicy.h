/**
 * Cloud Asset API
 * The Cloud Asset API manages the history and inventory of Google Cloud resources.
 *
 * The version of the OpenAPI document: v1p1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleIdentityAccesscontextmanagerV1EgressPolicy.h
 *
 * Policy for egress from perimeter. EgressPolicies match requests based on &#x60;egress_from&#x60; and &#x60;egress_to&#x60; stanzas. For an EgressPolicy to match, both &#x60;egress_from&#x60; and &#x60;egress_to&#x60; stanzas must be matched. If an EgressPolicy matches a request, the request is allowed to span the ServicePerimeter boundary. For example, an EgressPolicy can be used to allow VMs on networks within the ServicePerimeter to access a defined set of projects outside the perimeter in certain contexts (e.g. to read data from a Cloud Storage bucket or query against a BigQuery dataset). EgressPolicies are concerned with the *resources* that a request relates as well as the API services and API actions being used. They do not related to the direction of data movement. More detailed documentation for this concept can be found in the descriptions of EgressFrom and EgressTo.
 */

#ifndef OAIGoogleIdentityAccesscontextmanagerV1EgressPolicy_H
#define OAIGoogleIdentityAccesscontextmanagerV1EgressPolicy_H

#include <QJsonObject>

#include "OAIGoogleIdentityAccesscontextmanagerV1EgressFrom.h"
#include "OAIGoogleIdentityAccesscontextmanagerV1EgressTo.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleIdentityAccesscontextmanagerV1EgressFrom;
class OAIGoogleIdentityAccesscontextmanagerV1EgressTo;

class OAIGoogleIdentityAccesscontextmanagerV1EgressPolicy : public OAIObject {
public:
    OAIGoogleIdentityAccesscontextmanagerV1EgressPolicy();
    OAIGoogleIdentityAccesscontextmanagerV1EgressPolicy(QString json);
    ~OAIGoogleIdentityAccesscontextmanagerV1EgressPolicy() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGoogleIdentityAccesscontextmanagerV1EgressFrom getEgressFrom() const;
    void setEgressFrom(const OAIGoogleIdentityAccesscontextmanagerV1EgressFrom &egress_from);
    bool is_egress_from_Set() const;
    bool is_egress_from_Valid() const;

    OAIGoogleIdentityAccesscontextmanagerV1EgressTo getEgressTo() const;
    void setEgressTo(const OAIGoogleIdentityAccesscontextmanagerV1EgressTo &egress_to);
    bool is_egress_to_Set() const;
    bool is_egress_to_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGoogleIdentityAccesscontextmanagerV1EgressFrom m_egress_from;
    bool m_egress_from_isSet;
    bool m_egress_from_isValid;

    OAIGoogleIdentityAccesscontextmanagerV1EgressTo m_egress_to;
    bool m_egress_to_isSet;
    bool m_egress_to_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleIdentityAccesscontextmanagerV1EgressPolicy)

#endif // OAIGoogleIdentityAccesscontextmanagerV1EgressPolicy_H
