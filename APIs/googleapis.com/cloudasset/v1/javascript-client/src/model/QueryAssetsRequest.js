/**
 * Cloud Asset API
 * The Cloud Asset API manages the history and inventory of Google Cloud resources.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import QueryAssetsOutputConfig from './QueryAssetsOutputConfig';
import TimeWindow from './TimeWindow';

/**
 * The QueryAssetsRequest model module.
 * @module model/QueryAssetsRequest
 * @version v1
 */
class QueryAssetsRequest {
    /**
     * Constructs a new <code>QueryAssetsRequest</code>.
     * QueryAssets request.
     * @alias module:model/QueryAssetsRequest
     */
    constructor() { 
        
        QueryAssetsRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>QueryAssetsRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/QueryAssetsRequest} obj Optional instance to populate.
     * @return {module:model/QueryAssetsRequest} The populated <code>QueryAssetsRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new QueryAssetsRequest();

            if (data.hasOwnProperty('jobReference')) {
                obj['jobReference'] = ApiClient.convertToType(data['jobReference'], 'String');
            }
            if (data.hasOwnProperty('outputConfig')) {
                obj['outputConfig'] = QueryAssetsOutputConfig.constructFromObject(data['outputConfig']);
            }
            if (data.hasOwnProperty('pageSize')) {
                obj['pageSize'] = ApiClient.convertToType(data['pageSize'], 'Number');
            }
            if (data.hasOwnProperty('pageToken')) {
                obj['pageToken'] = ApiClient.convertToType(data['pageToken'], 'String');
            }
            if (data.hasOwnProperty('readTime')) {
                obj['readTime'] = ApiClient.convertToType(data['readTime'], 'String');
            }
            if (data.hasOwnProperty('readTimeWindow')) {
                obj['readTimeWindow'] = TimeWindow.constructFromObject(data['readTimeWindow']);
            }
            if (data.hasOwnProperty('statement')) {
                obj['statement'] = ApiClient.convertToType(data['statement'], 'String');
            }
            if (data.hasOwnProperty('timeout')) {
                obj['timeout'] = ApiClient.convertToType(data['timeout'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>QueryAssetsRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>QueryAssetsRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['jobReference'] && !(typeof data['jobReference'] === 'string' || data['jobReference'] instanceof String)) {
            throw new Error("Expected the field `jobReference` to be a primitive type in the JSON string but got " + data['jobReference']);
        }
        // validate the optional field `outputConfig`
        if (data['outputConfig']) { // data not null
          QueryAssetsOutputConfig.validateJSON(data['outputConfig']);
        }
        // ensure the json data is a string
        if (data['pageToken'] && !(typeof data['pageToken'] === 'string' || data['pageToken'] instanceof String)) {
            throw new Error("Expected the field `pageToken` to be a primitive type in the JSON string but got " + data['pageToken']);
        }
        // ensure the json data is a string
        if (data['readTime'] && !(typeof data['readTime'] === 'string' || data['readTime'] instanceof String)) {
            throw new Error("Expected the field `readTime` to be a primitive type in the JSON string but got " + data['readTime']);
        }
        // validate the optional field `readTimeWindow`
        if (data['readTimeWindow']) { // data not null
          TimeWindow.validateJSON(data['readTimeWindow']);
        }
        // ensure the json data is a string
        if (data['statement'] && !(typeof data['statement'] === 'string' || data['statement'] instanceof String)) {
            throw new Error("Expected the field `statement` to be a primitive type in the JSON string but got " + data['statement']);
        }
        // ensure the json data is a string
        if (data['timeout'] && !(typeof data['timeout'] === 'string' || data['timeout'] instanceof String)) {
            throw new Error("Expected the field `timeout` to be a primitive type in the JSON string but got " + data['timeout']);
        }

        return true;
    }


}



/**
 * Optional. Reference to the query job, which is from the `QueryAssetsResponse` of previous `QueryAssets` call.
 * @member {String} jobReference
 */
QueryAssetsRequest.prototype['jobReference'] = undefined;

/**
 * @member {module:model/QueryAssetsOutputConfig} outputConfig
 */
QueryAssetsRequest.prototype['outputConfig'] = undefined;

/**
 * Optional. The maximum number of rows to return in the results. Responses are limited to 10 MB and 1000 rows. By default, the maximum row count is 1000. When the byte or row count limit is reached, the rest of the query results will be paginated. The field will be ignored when [output_config] is specified.
 * @member {Number} pageSize
 */
QueryAssetsRequest.prototype['pageSize'] = undefined;

/**
 * Optional. A page token received from previous `QueryAssets`. The field will be ignored when [output_config] is specified.
 * @member {String} pageToken
 */
QueryAssetsRequest.prototype['pageToken'] = undefined;

/**
 * Optional. Queries cloud assets as they appeared at the specified point in time.
 * @member {String} readTime
 */
QueryAssetsRequest.prototype['readTime'] = undefined;

/**
 * @member {module:model/TimeWindow} readTimeWindow
 */
QueryAssetsRequest.prototype['readTimeWindow'] = undefined;

/**
 * Optional. A SQL statement that's compatible with [BigQuery SQL](https://cloud.google.com/bigquery/docs/introduction-sql).
 * @member {String} statement
 */
QueryAssetsRequest.prototype['statement'] = undefined;

/**
 * Optional. Specifies the maximum amount of time that the client is willing to wait for the query to complete. By default, this limit is 5 min for the first query, and 1 minute for the following queries. If the query is complete, the `done` field in the `QueryAssetsResponse` is true, otherwise false. Like BigQuery [jobs.query API](https://cloud.google.com/bigquery/docs/reference/rest/v2/jobs/query#queryrequest) The call is not guaranteed to wait for the specified timeout; it typically returns after around 200 seconds (200,000 milliseconds), even if the query is not complete. The field will be ignored when [output_config] is specified.
 * @member {String} timeout
 */
QueryAssetsRequest.prototype['timeout'] = undefined;






export default QueryAssetsRequest;

