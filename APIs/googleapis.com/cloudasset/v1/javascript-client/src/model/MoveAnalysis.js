/**
 * Cloud Asset API
 * The Cloud Asset API manages the history and inventory of Google Cloud resources.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MoveAnalysisResult from './MoveAnalysisResult';
import Status from './Status';

/**
 * The MoveAnalysis model module.
 * @module model/MoveAnalysis
 * @version v1
 */
class MoveAnalysis {
    /**
     * Constructs a new <code>MoveAnalysis</code>.
     * A message to group the analysis information.
     * @alias module:model/MoveAnalysis
     */
    constructor() { 
        
        MoveAnalysis.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MoveAnalysis</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MoveAnalysis} obj Optional instance to populate.
     * @return {module:model/MoveAnalysis} The populated <code>MoveAnalysis</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MoveAnalysis();

            if (data.hasOwnProperty('analysis')) {
                obj['analysis'] = MoveAnalysisResult.constructFromObject(data['analysis']);
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('error')) {
                obj['error'] = Status.constructFromObject(data['error']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MoveAnalysis</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MoveAnalysis</code>.
     */
    static validateJSON(data) {
        // validate the optional field `analysis`
        if (data['analysis']) { // data not null
          MoveAnalysisResult.validateJSON(data['analysis']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // validate the optional field `error`
        if (data['error']) { // data not null
          Status.validateJSON(data['error']);
        }

        return true;
    }


}



/**
 * @member {module:model/MoveAnalysisResult} analysis
 */
MoveAnalysis.prototype['analysis'] = undefined;

/**
 * The user friendly display name of the analysis. E.g. IAM, organization policy etc.
 * @member {String} displayName
 */
MoveAnalysis.prototype['displayName'] = undefined;

/**
 * @member {module:model/Status} error
 */
MoveAnalysis.prototype['error'] = undefined;






export default MoveAnalysis;

