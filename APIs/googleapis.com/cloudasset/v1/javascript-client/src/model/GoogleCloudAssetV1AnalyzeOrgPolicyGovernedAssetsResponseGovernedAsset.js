/**
 * Cloud Asset API
 * The Cloud Asset API manages the history and inventory of Google Cloud resources.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AnalyzerOrgPolicy from './AnalyzerOrgPolicy';
import GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedIamPolicy from './GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedIamPolicy';
import GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedResource from './GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedResource';

/**
 * The GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedAsset model module.
 * @module model/GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedAsset
 * @version v1
 */
class GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedAsset {
    /**
     * Constructs a new <code>GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedAsset</code>.
     * Represents a Google Cloud asset(resource or IAM policy) governed by the organization policies of the AnalyzeOrgPolicyGovernedAssetsRequest.constraint.
     * @alias module:model/GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedAsset
     */
    constructor() { 
        
        GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedAsset.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedAsset</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedAsset} obj Optional instance to populate.
     * @return {module:model/GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedAsset} The populated <code>GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedAsset</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedAsset();

            if (data.hasOwnProperty('consolidatedPolicy')) {
                obj['consolidatedPolicy'] = AnalyzerOrgPolicy.constructFromObject(data['consolidatedPolicy']);
            }
            if (data.hasOwnProperty('governedIamPolicy')) {
                obj['governedIamPolicy'] = GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedIamPolicy.constructFromObject(data['governedIamPolicy']);
            }
            if (data.hasOwnProperty('governedResource')) {
                obj['governedResource'] = GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedResource.constructFromObject(data['governedResource']);
            }
            if (data.hasOwnProperty('policyBundle')) {
                obj['policyBundle'] = ApiClient.convertToType(data['policyBundle'], [AnalyzerOrgPolicy]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedAsset</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedAsset</code>.
     */
    static validateJSON(data) {
        // validate the optional field `consolidatedPolicy`
        if (data['consolidatedPolicy']) { // data not null
          AnalyzerOrgPolicy.validateJSON(data['consolidatedPolicy']);
        }
        // validate the optional field `governedIamPolicy`
        if (data['governedIamPolicy']) { // data not null
          GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedIamPolicy.validateJSON(data['governedIamPolicy']);
        }
        // validate the optional field `governedResource`
        if (data['governedResource']) { // data not null
          GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedResource.validateJSON(data['governedResource']);
        }
        if (data['policyBundle']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['policyBundle'])) {
                throw new Error("Expected the field `policyBundle` to be an array in the JSON data but got " + data['policyBundle']);
            }
            // validate the optional field `policyBundle` (array)
            for (const item of data['policyBundle']) {
                AnalyzerOrgPolicy.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {module:model/AnalyzerOrgPolicy} consolidatedPolicy
 */
GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedAsset.prototype['consolidatedPolicy'] = undefined;

/**
 * @member {module:model/GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedIamPolicy} governedIamPolicy
 */
GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedAsset.prototype['governedIamPolicy'] = undefined;

/**
 * @member {module:model/GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedResource} governedResource
 */
GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedAsset.prototype['governedResource'] = undefined;

/**
 * The ordered list of all organization policies from the AnalyzeOrgPoliciesResponse.OrgPolicyResult.consolidated_policy.attached_resource to the scope specified in the request. If the constraint is defined with default policy, it will also appear in the list.
 * @member {Array.<module:model/AnalyzerOrgPolicy>} policyBundle
 */
GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedAsset.prototype['policyBundle'] = undefined;






export default GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedAsset;

