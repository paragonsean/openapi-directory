/**
 * Cloud Asset API
 * The Cloud Asset API manages the history and inventory of Google Cloud resources.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudAssetV1Rule from './GoogleCloudAssetV1Rule';

/**
 * The AnalyzerOrgPolicy model module.
 * @module model/AnalyzerOrgPolicy
 * @version v1
 */
class AnalyzerOrgPolicy {
    /**
     * Constructs a new <code>AnalyzerOrgPolicy</code>.
     * This organization policy message is a modified version of the one defined in the Organization Policy system. This message contains several fields defined in the original organization policy with some new fields for analysis purpose.
     * @alias module:model/AnalyzerOrgPolicy
     */
    constructor() { 
        
        AnalyzerOrgPolicy.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AnalyzerOrgPolicy</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AnalyzerOrgPolicy} obj Optional instance to populate.
     * @return {module:model/AnalyzerOrgPolicy} The populated <code>AnalyzerOrgPolicy</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AnalyzerOrgPolicy();

            if (data.hasOwnProperty('appliedResource')) {
                obj['appliedResource'] = ApiClient.convertToType(data['appliedResource'], 'String');
            }
            if (data.hasOwnProperty('attachedResource')) {
                obj['attachedResource'] = ApiClient.convertToType(data['attachedResource'], 'String');
            }
            if (data.hasOwnProperty('inheritFromParent')) {
                obj['inheritFromParent'] = ApiClient.convertToType(data['inheritFromParent'], 'Boolean');
            }
            if (data.hasOwnProperty('reset')) {
                obj['reset'] = ApiClient.convertToType(data['reset'], 'Boolean');
            }
            if (data.hasOwnProperty('rules')) {
                obj['rules'] = ApiClient.convertToType(data['rules'], [GoogleCloudAssetV1Rule]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AnalyzerOrgPolicy</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AnalyzerOrgPolicy</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['appliedResource'] && !(typeof data['appliedResource'] === 'string' || data['appliedResource'] instanceof String)) {
            throw new Error("Expected the field `appliedResource` to be a primitive type in the JSON string but got " + data['appliedResource']);
        }
        // ensure the json data is a string
        if (data['attachedResource'] && !(typeof data['attachedResource'] === 'string' || data['attachedResource'] instanceof String)) {
            throw new Error("Expected the field `attachedResource` to be a primitive type in the JSON string but got " + data['attachedResource']);
        }
        if (data['rules']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['rules'])) {
                throw new Error("Expected the field `rules` to be an array in the JSON data but got " + data['rules']);
            }
            // validate the optional field `rules` (array)
            for (const item of data['rules']) {
                GoogleCloudAssetV1Rule.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The [full resource name] (https://cloud.google.com/asset-inventory/docs/resource-name-format) of an organization/folder/project resource where this organization policy applies to. For any user defined org policies, this field has the same value as the [attached_resource] field. Only for default policy, this field has the different value.
 * @member {String} appliedResource
 */
AnalyzerOrgPolicy.prototype['appliedResource'] = undefined;

/**
 * The [full resource name] (https://cloud.google.com/asset-inventory/docs/resource-name-format) of an organization/folder/project resource where this organization policy is set. Notice that some type of constraints are defined with default policy. This field will be empty for them.
 * @member {String} attachedResource
 */
AnalyzerOrgPolicy.prototype['attachedResource'] = undefined;

/**
 * If `inherit_from_parent` is true, Rules set higher up in the hierarchy (up to the closest root) are inherited and present in the effective policy. If it is false, then no rules are inherited, and this policy becomes the effective root for evaluation.
 * @member {Boolean} inheritFromParent
 */
AnalyzerOrgPolicy.prototype['inheritFromParent'] = undefined;

/**
 * Ignores policies set above this resource and restores the default behavior of the constraint at this resource. This field can be set in policies for either list or boolean constraints. If set, `rules` must be empty and `inherit_from_parent` must be set to false.
 * @member {Boolean} reset
 */
AnalyzerOrgPolicy.prototype['reset'] = undefined;

/**
 * List of rules for this organization policy.
 * @member {Array.<module:model/GoogleCloudAssetV1Rule>} rules
 */
AnalyzerOrgPolicy.prototype['rules'] = undefined;






export default AnalyzerOrgPolicy;

