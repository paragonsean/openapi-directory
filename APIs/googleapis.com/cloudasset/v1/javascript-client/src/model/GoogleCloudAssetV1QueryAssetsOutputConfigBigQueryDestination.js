/**
 * Cloud Asset API
 * The Cloud Asset API manages the history and inventory of Google Cloud resources.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudAssetV1QueryAssetsOutputConfigBigQueryDestination model module.
 * @module model/GoogleCloudAssetV1QueryAssetsOutputConfigBigQueryDestination
 * @version v1
 */
class GoogleCloudAssetV1QueryAssetsOutputConfigBigQueryDestination {
    /**
     * Constructs a new <code>GoogleCloudAssetV1QueryAssetsOutputConfigBigQueryDestination</code>.
     * BigQuery destination.
     * @alias module:model/GoogleCloudAssetV1QueryAssetsOutputConfigBigQueryDestination
     */
    constructor() { 
        
        GoogleCloudAssetV1QueryAssetsOutputConfigBigQueryDestination.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudAssetV1QueryAssetsOutputConfigBigQueryDestination</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudAssetV1QueryAssetsOutputConfigBigQueryDestination} obj Optional instance to populate.
     * @return {module:model/GoogleCloudAssetV1QueryAssetsOutputConfigBigQueryDestination} The populated <code>GoogleCloudAssetV1QueryAssetsOutputConfigBigQueryDestination</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudAssetV1QueryAssetsOutputConfigBigQueryDestination();

            if (data.hasOwnProperty('dataset')) {
                obj['dataset'] = ApiClient.convertToType(data['dataset'], 'String');
            }
            if (data.hasOwnProperty('table')) {
                obj['table'] = ApiClient.convertToType(data['table'], 'String');
            }
            if (data.hasOwnProperty('writeDisposition')) {
                obj['writeDisposition'] = ApiClient.convertToType(data['writeDisposition'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudAssetV1QueryAssetsOutputConfigBigQueryDestination</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudAssetV1QueryAssetsOutputConfigBigQueryDestination</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['dataset'] && !(typeof data['dataset'] === 'string' || data['dataset'] instanceof String)) {
            throw new Error("Expected the field `dataset` to be a primitive type in the JSON string but got " + data['dataset']);
        }
        // ensure the json data is a string
        if (data['table'] && !(typeof data['table'] === 'string' || data['table'] instanceof String)) {
            throw new Error("Expected the field `table` to be a primitive type in the JSON string but got " + data['table']);
        }
        // ensure the json data is a string
        if (data['writeDisposition'] && !(typeof data['writeDisposition'] === 'string' || data['writeDisposition'] instanceof String)) {
            throw new Error("Expected the field `writeDisposition` to be a primitive type in the JSON string but got " + data['writeDisposition']);
        }

        return true;
    }


}



/**
 * Required. The BigQuery dataset where the query results will be saved. It has the format of \"projects/{projectId}/datasets/{datasetId}\".
 * @member {String} dataset
 */
GoogleCloudAssetV1QueryAssetsOutputConfigBigQueryDestination.prototype['dataset'] = undefined;

/**
 * Required. The BigQuery table where the query results will be saved. If this table does not exist, a new table with the given name will be created.
 * @member {String} table
 */
GoogleCloudAssetV1QueryAssetsOutputConfigBigQueryDestination.prototype['table'] = undefined;

/**
 * Specifies the action that occurs if the destination table or partition already exists. The following values are supported: * WRITE_TRUNCATE: If the table or partition already exists, BigQuery overwrites the entire table or all the partitions data. * WRITE_APPEND: If the table or partition already exists, BigQuery appends the data to the table or the latest partition. * WRITE_EMPTY: If the table already exists and contains data, a 'duplicate' error is returned in the job result. The default value is WRITE_EMPTY.
 * @member {String} writeDisposition
 */
GoogleCloudAssetV1QueryAssetsOutputConfigBigQueryDestination.prototype['writeDisposition'] = undefined;






export default GoogleCloudAssetV1QueryAssetsOutputConfigBigQueryDestination;

