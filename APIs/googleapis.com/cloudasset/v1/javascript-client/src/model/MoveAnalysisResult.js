/**
 * Cloud Asset API
 * The Cloud Asset API manages the history and inventory of Google Cloud resources.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MoveImpact from './MoveImpact';

/**
 * The MoveAnalysisResult model module.
 * @module model/MoveAnalysisResult
 * @version v1
 */
class MoveAnalysisResult {
    /**
     * Constructs a new <code>MoveAnalysisResult</code>.
     * An analysis result including blockers and warnings.
     * @alias module:model/MoveAnalysisResult
     */
    constructor() { 
        
        MoveAnalysisResult.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MoveAnalysisResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MoveAnalysisResult} obj Optional instance to populate.
     * @return {module:model/MoveAnalysisResult} The populated <code>MoveAnalysisResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MoveAnalysisResult();

            if (data.hasOwnProperty('blockers')) {
                obj['blockers'] = ApiClient.convertToType(data['blockers'], [MoveImpact]);
            }
            if (data.hasOwnProperty('warnings')) {
                obj['warnings'] = ApiClient.convertToType(data['warnings'], [MoveImpact]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MoveAnalysisResult</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MoveAnalysisResult</code>.
     */
    static validateJSON(data) {
        if (data['blockers']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['blockers'])) {
                throw new Error("Expected the field `blockers` to be an array in the JSON data but got " + data['blockers']);
            }
            // validate the optional field `blockers` (array)
            for (const item of data['blockers']) {
                MoveImpact.validateJSON(item);
            };
        }
        if (data['warnings']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['warnings'])) {
                throw new Error("Expected the field `warnings` to be an array in the JSON data but got " + data['warnings']);
            }
            // validate the optional field `warnings` (array)
            for (const item of data['warnings']) {
                MoveImpact.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Blocking information that would prevent the target resource from moving to the specified destination at runtime.
 * @member {Array.<module:model/MoveImpact>} blockers
 */
MoveAnalysisResult.prototype['blockers'] = undefined;

/**
 * Warning information indicating that moving the target resource to the specified destination might be unsafe. This can include important policy information and configuration changes, but will not block moves at runtime.
 * @member {Array.<module:model/MoveImpact>} warnings
 */
MoveAnalysisResult.prototype['warnings'] = undefined;






export default MoveAnalysisResult;

