/**
 * Cloud Asset API
 * The Cloud Asset API manages the history and inventory of Google Cloud resources.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ConditionEvaluation from './ConditionEvaluation';
import Expr from './Expr';
import GoogleCloudAssetV1StringValues from './GoogleCloudAssetV1StringValues';

/**
 * The GoogleCloudAssetV1Rule model module.
 * @module model/GoogleCloudAssetV1Rule
 * @version v1
 */
class GoogleCloudAssetV1Rule {
    /**
     * Constructs a new <code>GoogleCloudAssetV1Rule</code>.
     * This rule message is a customized version of the one defined in the Organization Policy system. In addition to the fields defined in the original organization policy, it contains additional field(s) under specific circumstances to support analysis results.
     * @alias module:model/GoogleCloudAssetV1Rule
     */
    constructor() { 
        
        GoogleCloudAssetV1Rule.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudAssetV1Rule</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudAssetV1Rule} obj Optional instance to populate.
     * @return {module:model/GoogleCloudAssetV1Rule} The populated <code>GoogleCloudAssetV1Rule</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudAssetV1Rule();

            if (data.hasOwnProperty('allowAll')) {
                obj['allowAll'] = ApiClient.convertToType(data['allowAll'], 'Boolean');
            }
            if (data.hasOwnProperty('condition')) {
                obj['condition'] = Expr.constructFromObject(data['condition']);
            }
            if (data.hasOwnProperty('conditionEvaluation')) {
                obj['conditionEvaluation'] = ConditionEvaluation.constructFromObject(data['conditionEvaluation']);
            }
            if (data.hasOwnProperty('denyAll')) {
                obj['denyAll'] = ApiClient.convertToType(data['denyAll'], 'Boolean');
            }
            if (data.hasOwnProperty('enforce')) {
                obj['enforce'] = ApiClient.convertToType(data['enforce'], 'Boolean');
            }
            if (data.hasOwnProperty('values')) {
                obj['values'] = GoogleCloudAssetV1StringValues.constructFromObject(data['values']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudAssetV1Rule</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudAssetV1Rule</code>.
     */
    static validateJSON(data) {
        // validate the optional field `condition`
        if (data['condition']) { // data not null
          Expr.validateJSON(data['condition']);
        }
        // validate the optional field `conditionEvaluation`
        if (data['conditionEvaluation']) { // data not null
          ConditionEvaluation.validateJSON(data['conditionEvaluation']);
        }
        // validate the optional field `values`
        if (data['values']) { // data not null
          GoogleCloudAssetV1StringValues.validateJSON(data['values']);
        }

        return true;
    }


}



/**
 * Setting this to true means that all values are allowed. This field can be set only in Policies for list constraints.
 * @member {Boolean} allowAll
 */
GoogleCloudAssetV1Rule.prototype['allowAll'] = undefined;

/**
 * @member {module:model/Expr} condition
 */
GoogleCloudAssetV1Rule.prototype['condition'] = undefined;

/**
 * @member {module:model/ConditionEvaluation} conditionEvaluation
 */
GoogleCloudAssetV1Rule.prototype['conditionEvaluation'] = undefined;

/**
 * Setting this to true means that all values are denied. This field can be set only in Policies for list constraints.
 * @member {Boolean} denyAll
 */
GoogleCloudAssetV1Rule.prototype['denyAll'] = undefined;

/**
 * If `true`, then the `Policy` is enforced. If `false`, then any configuration is acceptable. This field can be set only in Policies for boolean constraints.
 * @member {Boolean} enforce
 */
GoogleCloudAssetV1Rule.prototype['enforce'] = undefined;

/**
 * @member {module:model/GoogleCloudAssetV1StringValues} values
 */
GoogleCloudAssetV1Rule.prototype['values'] = undefined;






export default GoogleCloudAssetV1Rule;

