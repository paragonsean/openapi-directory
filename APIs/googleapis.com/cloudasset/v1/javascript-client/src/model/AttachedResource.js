/**
 * Cloud Asset API
 * The Cloud Asset API manages the history and inventory of Google Cloud resources.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import VersionedResource from './VersionedResource';

/**
 * The AttachedResource model module.
 * @module model/AttachedResource
 * @version v1
 */
class AttachedResource {
    /**
     * Constructs a new <code>AttachedResource</code>.
     * Attached resource representation, which is defined by the corresponding service provider. It represents an attached resource&#39;s payload.
     * @alias module:model/AttachedResource
     */
    constructor() { 
        
        AttachedResource.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AttachedResource</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AttachedResource} obj Optional instance to populate.
     * @return {module:model/AttachedResource} The populated <code>AttachedResource</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AttachedResource();

            if (data.hasOwnProperty('assetType')) {
                obj['assetType'] = ApiClient.convertToType(data['assetType'], 'String');
            }
            if (data.hasOwnProperty('versionedResources')) {
                obj['versionedResources'] = ApiClient.convertToType(data['versionedResources'], [VersionedResource]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AttachedResource</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AttachedResource</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['assetType'] && !(typeof data['assetType'] === 'string' || data['assetType'] instanceof String)) {
            throw new Error("Expected the field `assetType` to be a primitive type in the JSON string but got " + data['assetType']);
        }
        if (data['versionedResources']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['versionedResources'])) {
                throw new Error("Expected the field `versionedResources` to be an array in the JSON data but got " + data['versionedResources']);
            }
            // validate the optional field `versionedResources` (array)
            for (const item of data['versionedResources']) {
                VersionedResource.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The type of this attached resource. Example: `osconfig.googleapis.com/Inventory` You can find the supported attached asset types of each resource in this table: `https://cloud.google.com/asset-inventory/docs/supported-asset-types`
 * @member {String} assetType
 */
AttachedResource.prototype['assetType'] = undefined;

/**
 * Versioned resource representations of this attached resource. This is repeated because there could be multiple versions of the attached resource representations during version migration.
 * @member {Array.<module:model/VersionedResource>} versionedResources
 */
AttachedResource.prototype['versionedResources'] = undefined;






export default AttachedResource;

