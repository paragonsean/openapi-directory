/**
 * Cloud Asset API
 * The Cloud Asset API manages the history and inventory of Google Cloud resources.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Tag model module.
 * @module model/Tag
 * @version v1
 */
class Tag {
    /**
     * Constructs a new <code>Tag</code>.
     * The key and value for a [tag](https://cloud.google.com/resource-manager/docs/tags/tags-overview).
     * @alias module:model/Tag
     */
    constructor() { 
        
        Tag.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Tag</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Tag} obj Optional instance to populate.
     * @return {module:model/Tag} The populated <code>Tag</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Tag();

            if (data.hasOwnProperty('tagKey')) {
                obj['tagKey'] = ApiClient.convertToType(data['tagKey'], 'String');
            }
            if (data.hasOwnProperty('tagValue')) {
                obj['tagValue'] = ApiClient.convertToType(data['tagValue'], 'String');
            }
            if (data.hasOwnProperty('tagValueId')) {
                obj['tagValueId'] = ApiClient.convertToType(data['tagValueId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Tag</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Tag</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['tagKey'] && !(typeof data['tagKey'] === 'string' || data['tagKey'] instanceof String)) {
            throw new Error("Expected the field `tagKey` to be a primitive type in the JSON string but got " + data['tagKey']);
        }
        // ensure the json data is a string
        if (data['tagValue'] && !(typeof data['tagValue'] === 'string' || data['tagValue'] instanceof String)) {
            throw new Error("Expected the field `tagValue` to be a primitive type in the JSON string but got " + data['tagValue']);
        }
        // ensure the json data is a string
        if (data['tagValueId'] && !(typeof data['tagValueId'] === 'string' || data['tagValueId'] instanceof String)) {
            throw new Error("Expected the field `tagValueId` to be a primitive type in the JSON string but got " + data['tagValueId']);
        }

        return true;
    }


}



/**
 * TagKey namespaced name, in the format of {ORG_ID}/{TAG_KEY_SHORT_NAME}.
 * @member {String} tagKey
 */
Tag.prototype['tagKey'] = undefined;

/**
 * TagValue namespaced name, in the format of {ORG_ID}/{TAG_KEY_SHORT_NAME}/{TAG_VALUE_SHORT_NAME}.
 * @member {String} tagValue
 */
Tag.prototype['tagValue'] = undefined;

/**
 * TagValue ID, in the format of tagValues/{TAG_VALUE_ID}.
 * @member {String} tagValueId
 */
Tag.prototype['tagValueId'] = undefined;






export default Tag;

