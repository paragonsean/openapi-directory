/**
 * Cloud Asset API
 * The Cloud Asset API manages the history and inventory of Google Cloud resources.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ModelDate from './ModelDate';

/**
 * The WindowsApplication model module.
 * @module model/WindowsApplication
 * @version v1
 */
class WindowsApplication {
    /**
     * Constructs a new <code>WindowsApplication</code>.
     * Contains information about a Windows application that is retrieved from the Windows Registry. For more information about these fields, see: https://docs.microsoft.com/en-us/windows/win32/msi/uninstall-registry-key
     * @alias module:model/WindowsApplication
     */
    constructor() { 
        
        WindowsApplication.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>WindowsApplication</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WindowsApplication} obj Optional instance to populate.
     * @return {module:model/WindowsApplication} The populated <code>WindowsApplication</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WindowsApplication();

            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('displayVersion')) {
                obj['displayVersion'] = ApiClient.convertToType(data['displayVersion'], 'String');
            }
            if (data.hasOwnProperty('helpLink')) {
                obj['helpLink'] = ApiClient.convertToType(data['helpLink'], 'String');
            }
            if (data.hasOwnProperty('installDate')) {
                obj['installDate'] = ModelDate.constructFromObject(data['installDate']);
            }
            if (data.hasOwnProperty('publisher')) {
                obj['publisher'] = ApiClient.convertToType(data['publisher'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WindowsApplication</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WindowsApplication</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['displayVersion'] && !(typeof data['displayVersion'] === 'string' || data['displayVersion'] instanceof String)) {
            throw new Error("Expected the field `displayVersion` to be a primitive type in the JSON string but got " + data['displayVersion']);
        }
        // ensure the json data is a string
        if (data['helpLink'] && !(typeof data['helpLink'] === 'string' || data['helpLink'] instanceof String)) {
            throw new Error("Expected the field `helpLink` to be a primitive type in the JSON string but got " + data['helpLink']);
        }
        // validate the optional field `installDate`
        if (data['installDate']) { // data not null
          ModelDate.validateJSON(data['installDate']);
        }
        // ensure the json data is a string
        if (data['publisher'] && !(typeof data['publisher'] === 'string' || data['publisher'] instanceof String)) {
            throw new Error("Expected the field `publisher` to be a primitive type in the JSON string but got " + data['publisher']);
        }

        return true;
    }


}



/**
 * The name of the application or product.
 * @member {String} displayName
 */
WindowsApplication.prototype['displayName'] = undefined;

/**
 * The version of the product or application in string format.
 * @member {String} displayVersion
 */
WindowsApplication.prototype['displayVersion'] = undefined;

/**
 * The internet address for technical support.
 * @member {String} helpLink
 */
WindowsApplication.prototype['helpLink'] = undefined;

/**
 * @member {module:model/ModelDate} installDate
 */
WindowsApplication.prototype['installDate'] = undefined;

/**
 * The name of the manufacturer for the product or application.
 * @member {String} publisher
 */
WindowsApplication.prototype['publisher'] = undefined;






export default WindowsApplication;

