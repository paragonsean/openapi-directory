/**
 * Cloud Asset API
 * The Cloud Asset API manages the history and inventory of Google Cloud resources.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudAssetV1ListConstraint from './GoogleCloudAssetV1ListConstraint';

/**
 * The GoogleCloudAssetV1Constraint model module.
 * @module model/GoogleCloudAssetV1Constraint
 * @version v1
 */
class GoogleCloudAssetV1Constraint {
    /**
     * Constructs a new <code>GoogleCloudAssetV1Constraint</code>.
     * The definition of a constraint.
     * @alias module:model/GoogleCloudAssetV1Constraint
     */
    constructor() { 
        
        GoogleCloudAssetV1Constraint.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudAssetV1Constraint</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudAssetV1Constraint} obj Optional instance to populate.
     * @return {module:model/GoogleCloudAssetV1Constraint} The populated <code>GoogleCloudAssetV1Constraint</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudAssetV1Constraint();

            if (data.hasOwnProperty('booleanConstraint')) {
                obj['booleanConstraint'] = ApiClient.convertToType(data['booleanConstraint'], Object);
            }
            if (data.hasOwnProperty('constraintDefault')) {
                obj['constraintDefault'] = ApiClient.convertToType(data['constraintDefault'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('listConstraint')) {
                obj['listConstraint'] = GoogleCloudAssetV1ListConstraint.constructFromObject(data['listConstraint']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudAssetV1Constraint</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudAssetV1Constraint</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['constraintDefault'] && !(typeof data['constraintDefault'] === 'string' || data['constraintDefault'] instanceof String)) {
            throw new Error("Expected the field `constraintDefault` to be a primitive type in the JSON string but got " + data['constraintDefault']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // validate the optional field `listConstraint`
        if (data['listConstraint']) { // data not null
          GoogleCloudAssetV1ListConstraint.validateJSON(data['listConstraint']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}



/**
 * A `Constraint` that is either enforced or not. For example a constraint `constraints/compute.disableSerialPortAccess`. If it is enforced on a VM instance, serial port connections will not be opened to that instance.
 * @member {Object} booleanConstraint
 */
GoogleCloudAssetV1Constraint.prototype['booleanConstraint'] = undefined;

/**
 * The evaluation behavior of this constraint in the absence of 'Policy'.
 * @member {module:model/GoogleCloudAssetV1Constraint.ConstraintDefaultEnum} constraintDefault
 */
GoogleCloudAssetV1Constraint.prototype['constraintDefault'] = undefined;

/**
 * Detailed description of what this `Constraint` controls as well as how and where it is enforced.
 * @member {String} description
 */
GoogleCloudAssetV1Constraint.prototype['description'] = undefined;

/**
 * The human readable name of the constraint.
 * @member {String} displayName
 */
GoogleCloudAssetV1Constraint.prototype['displayName'] = undefined;

/**
 * @member {module:model/GoogleCloudAssetV1ListConstraint} listConstraint
 */
GoogleCloudAssetV1Constraint.prototype['listConstraint'] = undefined;

/**
 * The unique name of the constraint. Format of the name should be * `constraints/{constraint_name}` For example, `constraints/compute.disableSerialPortAccess`.
 * @member {String} name
 */
GoogleCloudAssetV1Constraint.prototype['name'] = undefined;





/**
 * Allowed values for the <code>constraintDefault</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudAssetV1Constraint['ConstraintDefaultEnum'] = {

    /**
     * value: "CONSTRAINT_DEFAULT_UNSPECIFIED"
     * @const
     */
    "CONSTRAINT_DEFAULT_UNSPECIFIED": "CONSTRAINT_DEFAULT_UNSPECIFIED",

    /**
     * value: "ALLOW"
     * @const
     */
    "ALLOW": "ALLOW",

    /**
     * value: "DENY"
     * @const
     */
    "DENY": "DENY"
};



export default GoogleCloudAssetV1Constraint;

