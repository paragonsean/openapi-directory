/*
 * Cloud Asset API
 * The Cloud Asset API manages the history and inventory of Google Cloud resources.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AnalyzerOrgPolicy;
import org.openapitools.client.model.GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedIamPolicy;
import org.openapitools.client.model.GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedResource;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents a Google Cloud asset(resource or IAM policy) governed by the organization policies of the AnalyzeOrgPolicyGovernedAssetsRequest.constraint.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:36:52.366195-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedAsset {
  public static final String SERIALIZED_NAME_CONSOLIDATED_POLICY = "consolidatedPolicy";
  @SerializedName(SERIALIZED_NAME_CONSOLIDATED_POLICY)
  private AnalyzerOrgPolicy consolidatedPolicy;

  public static final String SERIALIZED_NAME_GOVERNED_IAM_POLICY = "governedIamPolicy";
  @SerializedName(SERIALIZED_NAME_GOVERNED_IAM_POLICY)
  private GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedIamPolicy governedIamPolicy;

  public static final String SERIALIZED_NAME_GOVERNED_RESOURCE = "governedResource";
  @SerializedName(SERIALIZED_NAME_GOVERNED_RESOURCE)
  private GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedResource governedResource;

  public static final String SERIALIZED_NAME_POLICY_BUNDLE = "policyBundle";
  @SerializedName(SERIALIZED_NAME_POLICY_BUNDLE)
  private List<AnalyzerOrgPolicy> policyBundle = new ArrayList<>();

  public GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedAsset() {
  }

  public GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedAsset consolidatedPolicy(AnalyzerOrgPolicy consolidatedPolicy) {
    this.consolidatedPolicy = consolidatedPolicy;
    return this;
  }

  /**
   * Get consolidatedPolicy
   * @return consolidatedPolicy
   */
  @javax.annotation.Nullable
  public AnalyzerOrgPolicy getConsolidatedPolicy() {
    return consolidatedPolicy;
  }

  public void setConsolidatedPolicy(AnalyzerOrgPolicy consolidatedPolicy) {
    this.consolidatedPolicy = consolidatedPolicy;
  }


  public GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedAsset governedIamPolicy(GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedIamPolicy governedIamPolicy) {
    this.governedIamPolicy = governedIamPolicy;
    return this;
  }

  /**
   * Get governedIamPolicy
   * @return governedIamPolicy
   */
  @javax.annotation.Nullable
  public GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedIamPolicy getGovernedIamPolicy() {
    return governedIamPolicy;
  }

  public void setGovernedIamPolicy(GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedIamPolicy governedIamPolicy) {
    this.governedIamPolicy = governedIamPolicy;
  }


  public GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedAsset governedResource(GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedResource governedResource) {
    this.governedResource = governedResource;
    return this;
  }

  /**
   * Get governedResource
   * @return governedResource
   */
  @javax.annotation.Nullable
  public GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedResource getGovernedResource() {
    return governedResource;
  }

  public void setGovernedResource(GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedResource governedResource) {
    this.governedResource = governedResource;
  }


  public GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedAsset policyBundle(List<AnalyzerOrgPolicy> policyBundle) {
    this.policyBundle = policyBundle;
    return this;
  }

  public GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedAsset addPolicyBundleItem(AnalyzerOrgPolicy policyBundleItem) {
    if (this.policyBundle == null) {
      this.policyBundle = new ArrayList<>();
    }
    this.policyBundle.add(policyBundleItem);
    return this;
  }

  /**
   * The ordered list of all organization policies from the AnalyzeOrgPoliciesResponse.OrgPolicyResult.consolidated_policy.attached_resource to the scope specified in the request. If the constraint is defined with default policy, it will also appear in the list.
   * @return policyBundle
   */
  @javax.annotation.Nullable
  public List<AnalyzerOrgPolicy> getPolicyBundle() {
    return policyBundle;
  }

  public void setPolicyBundle(List<AnalyzerOrgPolicy> policyBundle) {
    this.policyBundle = policyBundle;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedAsset googleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedAsset = (GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedAsset) o;
    return Objects.equals(this.consolidatedPolicy, googleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedAsset.consolidatedPolicy) &&
        Objects.equals(this.governedIamPolicy, googleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedAsset.governedIamPolicy) &&
        Objects.equals(this.governedResource, googleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedAsset.governedResource) &&
        Objects.equals(this.policyBundle, googleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedAsset.policyBundle);
  }

  @Override
  public int hashCode() {
    return Objects.hash(consolidatedPolicy, governedIamPolicy, governedResource, policyBundle);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedAsset {\n");
    sb.append("    consolidatedPolicy: ").append(toIndentedString(consolidatedPolicy)).append("\n");
    sb.append("    governedIamPolicy: ").append(toIndentedString(governedIamPolicy)).append("\n");
    sb.append("    governedResource: ").append(toIndentedString(governedResource)).append("\n");
    sb.append("    policyBundle: ").append(toIndentedString(policyBundle)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("consolidatedPolicy");
    openapiFields.add("governedIamPolicy");
    openapiFields.add("governedResource");
    openapiFields.add("policyBundle");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedAsset
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedAsset.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedAsset is not found in the empty JSON string", GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedAsset.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedAsset.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedAsset` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `consolidatedPolicy`
      if (jsonObj.get("consolidatedPolicy") != null && !jsonObj.get("consolidatedPolicy").isJsonNull()) {
        AnalyzerOrgPolicy.validateJsonElement(jsonObj.get("consolidatedPolicy"));
      }
      // validate the optional field `governedIamPolicy`
      if (jsonObj.get("governedIamPolicy") != null && !jsonObj.get("governedIamPolicy").isJsonNull()) {
        GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedIamPolicy.validateJsonElement(jsonObj.get("governedIamPolicy"));
      }
      // validate the optional field `governedResource`
      if (jsonObj.get("governedResource") != null && !jsonObj.get("governedResource").isJsonNull()) {
        GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedResource.validateJsonElement(jsonObj.get("governedResource"));
      }
      if (jsonObj.get("policyBundle") != null && !jsonObj.get("policyBundle").isJsonNull()) {
        JsonArray jsonArraypolicyBundle = jsonObj.getAsJsonArray("policyBundle");
        if (jsonArraypolicyBundle != null) {
          // ensure the json data is an array
          if (!jsonObj.get("policyBundle").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `policyBundle` to be an array in the JSON string but got `%s`", jsonObj.get("policyBundle").toString()));
          }

          // validate the optional field `policyBundle` (array)
          for (int i = 0; i < jsonArraypolicyBundle.size(); i++) {
            AnalyzerOrgPolicy.validateJsonElement(jsonArraypolicyBundle.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedAsset.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedAsset' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedAsset> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedAsset.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedAsset>() {
           @Override
           public void write(JsonWriter out, GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedAsset value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedAsset read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedAsset given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedAsset
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedAsset
   */
  public static GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedAsset fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedAsset.class);
  }

  /**
   * Convert an instance of GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedAsset to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

