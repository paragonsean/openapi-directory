/*
 * Cloud Asset API
 * The Cloud Asset API manages the history and inventory of Google Cloud resources.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.QueryContent;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A saved query which can be shared with others or used later.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:36:52.366195-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class SavedQuery {
  public static final String SERIALIZED_NAME_CONTENT = "content";
  @SerializedName(SERIALIZED_NAME_CONTENT)
  private QueryContent content;

  public static final String SERIALIZED_NAME_CREATE_TIME = "createTime";
  @SerializedName(SERIALIZED_NAME_CREATE_TIME)
  private String createTime;

  public static final String SERIALIZED_NAME_CREATOR = "creator";
  @SerializedName(SERIALIZED_NAME_CREATOR)
  private String creator;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_LABELS = "labels";
  @SerializedName(SERIALIZED_NAME_LABELS)
  private Map<String, String> labels = new HashMap<>();

  public static final String SERIALIZED_NAME_LAST_UPDATE_TIME = "lastUpdateTime";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATE_TIME)
  private String lastUpdateTime;

  public static final String SERIALIZED_NAME_LAST_UPDATER = "lastUpdater";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATER)
  private String lastUpdater;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public SavedQuery() {
  }

  public SavedQuery(
     String createTime, 
     String creator, 
     String lastUpdateTime, 
     String lastUpdater
  ) {
    this();
    this.createTime = createTime;
    this.creator = creator;
    this.lastUpdateTime = lastUpdateTime;
    this.lastUpdater = lastUpdater;
  }

  public SavedQuery content(QueryContent content) {
    this.content = content;
    return this;
  }

  /**
   * Get content
   * @return content
   */
  @javax.annotation.Nullable
  public QueryContent getContent() {
    return content;
  }

  public void setContent(QueryContent content) {
    this.content = content;
  }


  /**
   * Output only. The create time of this saved query.
   * @return createTime
   */
  @javax.annotation.Nullable
  public String getCreateTime() {
    return createTime;
  }



  /**
   * Output only. The account&#39;s email address who has created this saved query.
   * @return creator
   */
  @javax.annotation.Nullable
  public String getCreator() {
    return creator;
  }



  public SavedQuery description(String description) {
    this.description = description;
    return this;
  }

  /**
   * The description of this saved query. This value should be fewer than 255 characters.
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public SavedQuery labels(Map<String, String> labels) {
    this.labels = labels;
    return this;
  }

  public SavedQuery putLabelsItem(String key, String labelsItem) {
    if (this.labels == null) {
      this.labels = new HashMap<>();
    }
    this.labels.put(key, labelsItem);
    return this;
  }

  /**
   * Labels applied on the resource. This value should not contain more than 10 entries. The key and value of each entry must be non-empty and fewer than 64 characters.
   * @return labels
   */
  @javax.annotation.Nullable
  public Map<String, String> getLabels() {
    return labels;
  }

  public void setLabels(Map<String, String> labels) {
    this.labels = labels;
  }


  /**
   * Output only. The last update time of this saved query.
   * @return lastUpdateTime
   */
  @javax.annotation.Nullable
  public String getLastUpdateTime() {
    return lastUpdateTime;
  }



  /**
   * Output only. The account&#39;s email address who has updated this saved query most recently.
   * @return lastUpdater
   */
  @javax.annotation.Nullable
  public String getLastUpdater() {
    return lastUpdater;
  }



  public SavedQuery name(String name) {
    this.name = name;
    return this;
  }

  /**
   * The resource name of the saved query. The format must be: * projects/project_number/savedQueries/saved_query_id * folders/folder_number/savedQueries/saved_query_id * organizations/organization_number/savedQueries/saved_query_id
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SavedQuery savedQuery = (SavedQuery) o;
    return Objects.equals(this.content, savedQuery.content) &&
        Objects.equals(this.createTime, savedQuery.createTime) &&
        Objects.equals(this.creator, savedQuery.creator) &&
        Objects.equals(this.description, savedQuery.description) &&
        Objects.equals(this.labels, savedQuery.labels) &&
        Objects.equals(this.lastUpdateTime, savedQuery.lastUpdateTime) &&
        Objects.equals(this.lastUpdater, savedQuery.lastUpdater) &&
        Objects.equals(this.name, savedQuery.name);
  }

  @Override
  public int hashCode() {
    return Objects.hash(content, createTime, creator, description, labels, lastUpdateTime, lastUpdater, name);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SavedQuery {\n");
    sb.append("    content: ").append(toIndentedString(content)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    creator: ").append(toIndentedString(creator)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    lastUpdateTime: ").append(toIndentedString(lastUpdateTime)).append("\n");
    sb.append("    lastUpdater: ").append(toIndentedString(lastUpdater)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("content");
    openapiFields.add("createTime");
    openapiFields.add("creator");
    openapiFields.add("description");
    openapiFields.add("labels");
    openapiFields.add("lastUpdateTime");
    openapiFields.add("lastUpdater");
    openapiFields.add("name");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SavedQuery
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SavedQuery.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SavedQuery is not found in the empty JSON string", SavedQuery.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SavedQuery.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SavedQuery` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `content`
      if (jsonObj.get("content") != null && !jsonObj.get("content").isJsonNull()) {
        QueryContent.validateJsonElement(jsonObj.get("content"));
      }
      if ((jsonObj.get("createTime") != null && !jsonObj.get("createTime").isJsonNull()) && !jsonObj.get("createTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createTime").toString()));
      }
      if ((jsonObj.get("creator") != null && !jsonObj.get("creator").isJsonNull()) && !jsonObj.get("creator").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `creator` to be a primitive type in the JSON string but got `%s`", jsonObj.get("creator").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("lastUpdateTime") != null && !jsonObj.get("lastUpdateTime").isJsonNull()) && !jsonObj.get("lastUpdateTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastUpdateTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastUpdateTime").toString()));
      }
      if ((jsonObj.get("lastUpdater") != null && !jsonObj.get("lastUpdater").isJsonNull()) && !jsonObj.get("lastUpdater").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastUpdater` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastUpdater").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SavedQuery.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SavedQuery' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SavedQuery> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SavedQuery.class));

       return (TypeAdapter<T>) new TypeAdapter<SavedQuery>() {
           @Override
           public void write(JsonWriter out, SavedQuery value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SavedQuery read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SavedQuery given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SavedQuery
   * @throws IOException if the JSON string is invalid with respect to SavedQuery
   */
  public static SavedQuery fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SavedQuery.class);
  }

  /**
   * Convert an instance of SavedQuery to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

