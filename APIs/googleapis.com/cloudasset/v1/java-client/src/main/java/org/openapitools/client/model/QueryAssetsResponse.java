/*
 * Cloud Asset API
 * The Cloud Asset API manages the history and inventory of Google Cloud resources.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.QueryAssetsOutputConfig;
import org.openapitools.client.model.QueryResult;
import org.openapitools.client.model.Status;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * QueryAssets response.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:36:52.366195-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class QueryAssetsResponse {
  public static final String SERIALIZED_NAME_DONE = "done";
  @SerializedName(SERIALIZED_NAME_DONE)
  private Boolean done;

  public static final String SERIALIZED_NAME_ERROR = "error";
  @SerializedName(SERIALIZED_NAME_ERROR)
  private Status error;

  public static final String SERIALIZED_NAME_JOB_REFERENCE = "jobReference";
  @SerializedName(SERIALIZED_NAME_JOB_REFERENCE)
  private String jobReference;

  public static final String SERIALIZED_NAME_OUTPUT_CONFIG = "outputConfig";
  @SerializedName(SERIALIZED_NAME_OUTPUT_CONFIG)
  private QueryAssetsOutputConfig outputConfig;

  public static final String SERIALIZED_NAME_QUERY_RESULT = "queryResult";
  @SerializedName(SERIALIZED_NAME_QUERY_RESULT)
  private QueryResult queryResult;

  public QueryAssetsResponse() {
  }

  public QueryAssetsResponse done(Boolean done) {
    this.done = done;
    return this;
  }

  /**
   * The query response, which can be either an &#x60;error&#x60; or a valid &#x60;response&#x60;. If &#x60;done&#x60; &#x3D;&#x3D; &#x60;false&#x60; and the query result is being saved in a output, the output_config field will be set. If &#x60;done&#x60; &#x3D;&#x3D; &#x60;true&#x60;, exactly one of &#x60;error&#x60;, &#x60;query_result&#x60; or &#x60;output_config&#x60; will be set.
   * @return done
   */
  @javax.annotation.Nullable
  public Boolean getDone() {
    return done;
  }

  public void setDone(Boolean done) {
    this.done = done;
  }


  public QueryAssetsResponse error(Status error) {
    this.error = error;
    return this;
  }

  /**
   * Get error
   * @return error
   */
  @javax.annotation.Nullable
  public Status getError() {
    return error;
  }

  public void setError(Status error) {
    this.error = error;
  }


  public QueryAssetsResponse jobReference(String jobReference) {
    this.jobReference = jobReference;
    return this;
  }

  /**
   * Reference to a query job.
   * @return jobReference
   */
  @javax.annotation.Nullable
  public String getJobReference() {
    return jobReference;
  }

  public void setJobReference(String jobReference) {
    this.jobReference = jobReference;
  }


  public QueryAssetsResponse outputConfig(QueryAssetsOutputConfig outputConfig) {
    this.outputConfig = outputConfig;
    return this;
  }

  /**
   * Get outputConfig
   * @return outputConfig
   */
  @javax.annotation.Nullable
  public QueryAssetsOutputConfig getOutputConfig() {
    return outputConfig;
  }

  public void setOutputConfig(QueryAssetsOutputConfig outputConfig) {
    this.outputConfig = outputConfig;
  }


  public QueryAssetsResponse queryResult(QueryResult queryResult) {
    this.queryResult = queryResult;
    return this;
  }

  /**
   * Get queryResult
   * @return queryResult
   */
  @javax.annotation.Nullable
  public QueryResult getQueryResult() {
    return queryResult;
  }

  public void setQueryResult(QueryResult queryResult) {
    this.queryResult = queryResult;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    QueryAssetsResponse queryAssetsResponse = (QueryAssetsResponse) o;
    return Objects.equals(this.done, queryAssetsResponse.done) &&
        Objects.equals(this.error, queryAssetsResponse.error) &&
        Objects.equals(this.jobReference, queryAssetsResponse.jobReference) &&
        Objects.equals(this.outputConfig, queryAssetsResponse.outputConfig) &&
        Objects.equals(this.queryResult, queryAssetsResponse.queryResult);
  }

  @Override
  public int hashCode() {
    return Objects.hash(done, error, jobReference, outputConfig, queryResult);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class QueryAssetsResponse {\n");
    sb.append("    done: ").append(toIndentedString(done)).append("\n");
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("    jobReference: ").append(toIndentedString(jobReference)).append("\n");
    sb.append("    outputConfig: ").append(toIndentedString(outputConfig)).append("\n");
    sb.append("    queryResult: ").append(toIndentedString(queryResult)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("done");
    openapiFields.add("error");
    openapiFields.add("jobReference");
    openapiFields.add("outputConfig");
    openapiFields.add("queryResult");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to QueryAssetsResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!QueryAssetsResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in QueryAssetsResponse is not found in the empty JSON string", QueryAssetsResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!QueryAssetsResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `QueryAssetsResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `error`
      if (jsonObj.get("error") != null && !jsonObj.get("error").isJsonNull()) {
        Status.validateJsonElement(jsonObj.get("error"));
      }
      if ((jsonObj.get("jobReference") != null && !jsonObj.get("jobReference").isJsonNull()) && !jsonObj.get("jobReference").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `jobReference` to be a primitive type in the JSON string but got `%s`", jsonObj.get("jobReference").toString()));
      }
      // validate the optional field `outputConfig`
      if (jsonObj.get("outputConfig") != null && !jsonObj.get("outputConfig").isJsonNull()) {
        QueryAssetsOutputConfig.validateJsonElement(jsonObj.get("outputConfig"));
      }
      // validate the optional field `queryResult`
      if (jsonObj.get("queryResult") != null && !jsonObj.get("queryResult").isJsonNull()) {
        QueryResult.validateJsonElement(jsonObj.get("queryResult"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!QueryAssetsResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'QueryAssetsResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<QueryAssetsResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(QueryAssetsResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<QueryAssetsResponse>() {
           @Override
           public void write(JsonWriter out, QueryAssetsResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public QueryAssetsResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of QueryAssetsResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of QueryAssetsResponse
   * @throws IOException if the JSON string is invalid with respect to QueryAssetsResponse
   */
  public static QueryAssetsResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, QueryAssetsResponse.class);
  }

  /**
   * Convert an instance of QueryAssetsResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

