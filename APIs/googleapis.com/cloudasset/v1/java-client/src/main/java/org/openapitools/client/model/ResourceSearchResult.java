/*
 * Cloud Asset API
 * The Cloud Asset API manages the history and inventory of Google Cloud resources.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.AttachedResource;
import org.openapitools.client.model.EffectiveTagDetails;
import org.openapitools.client.model.RelatedResources;
import org.openapitools.client.model.Tag;
import org.openapitools.client.model.VersionedResource;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A result of Resource Search, containing information of a cloud resource. Next ID: 34
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:36:52.366195-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ResourceSearchResult {
  public static final String SERIALIZED_NAME_ADDITIONAL_ATTRIBUTES = "additionalAttributes";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_ATTRIBUTES)
  private Map<String, Object> additionalAttributes = new HashMap<>();

  public static final String SERIALIZED_NAME_ASSET_TYPE = "assetType";
  @SerializedName(SERIALIZED_NAME_ASSET_TYPE)
  private String assetType;

  public static final String SERIALIZED_NAME_ATTACHED_RESOURCES = "attachedResources";
  @SerializedName(SERIALIZED_NAME_ATTACHED_RESOURCES)
  private List<AttachedResource> attachedResources = new ArrayList<>();

  public static final String SERIALIZED_NAME_CREATE_TIME = "createTime";
  @SerializedName(SERIALIZED_NAME_CREATE_TIME)
  private String createTime;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_EFFECTIVE_TAGS = "effectiveTags";
  @SerializedName(SERIALIZED_NAME_EFFECTIVE_TAGS)
  private List<EffectiveTagDetails> effectiveTags = new ArrayList<>();

  public static final String SERIALIZED_NAME_FOLDERS = "folders";
  @SerializedName(SERIALIZED_NAME_FOLDERS)
  private List<String> folders = new ArrayList<>();

  public static final String SERIALIZED_NAME_KMS_KEY = "kmsKey";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_KMS_KEY)
  private String kmsKey;

  public static final String SERIALIZED_NAME_KMS_KEYS = "kmsKeys";
  @SerializedName(SERIALIZED_NAME_KMS_KEYS)
  private List<String> kmsKeys = new ArrayList<>();

  public static final String SERIALIZED_NAME_LABELS = "labels";
  @SerializedName(SERIALIZED_NAME_LABELS)
  private Map<String, String> labels = new HashMap<>();

  public static final String SERIALIZED_NAME_LOCATION = "location";
  @SerializedName(SERIALIZED_NAME_LOCATION)
  private String location;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_NETWORK_TAGS = "networkTags";
  @SerializedName(SERIALIZED_NAME_NETWORK_TAGS)
  private List<String> networkTags = new ArrayList<>();

  public static final String SERIALIZED_NAME_ORGANIZATION = "organization";
  @SerializedName(SERIALIZED_NAME_ORGANIZATION)
  private String organization;

  public static final String SERIALIZED_NAME_PARENT_ASSET_TYPE = "parentAssetType";
  @SerializedName(SERIALIZED_NAME_PARENT_ASSET_TYPE)
  private String parentAssetType;

  public static final String SERIALIZED_NAME_PARENT_FULL_RESOURCE_NAME = "parentFullResourceName";
  @SerializedName(SERIALIZED_NAME_PARENT_FULL_RESOURCE_NAME)
  private String parentFullResourceName;

  public static final String SERIALIZED_NAME_PROJECT = "project";
  @SerializedName(SERIALIZED_NAME_PROJECT)
  private String project;

  public static final String SERIALIZED_NAME_RELATIONSHIPS = "relationships";
  @SerializedName(SERIALIZED_NAME_RELATIONSHIPS)
  private Map<String, RelatedResources> relationships = new HashMap<>();

  public static final String SERIALIZED_NAME_SCC_SECURITY_MARKS = "sccSecurityMarks";
  @SerializedName(SERIALIZED_NAME_SCC_SECURITY_MARKS)
  private Map<String, String> sccSecurityMarks = new HashMap<>();

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private String state;

  public static final String SERIALIZED_NAME_TAG_KEYS = "tagKeys";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_TAG_KEYS)
  private List<String> tagKeys = new ArrayList<>();

  public static final String SERIALIZED_NAME_TAG_VALUE_IDS = "tagValueIds";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_TAG_VALUE_IDS)
  private List<String> tagValueIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_TAG_VALUES = "tagValues";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_TAG_VALUES)
  private List<String> tagValues = new ArrayList<>();

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<Tag> tags = new ArrayList<>();

  public static final String SERIALIZED_NAME_UPDATE_TIME = "updateTime";
  @SerializedName(SERIALIZED_NAME_UPDATE_TIME)
  private String updateTime;

  public static final String SERIALIZED_NAME_VERSIONED_RESOURCES = "versionedResources";
  @SerializedName(SERIALIZED_NAME_VERSIONED_RESOURCES)
  private List<VersionedResource> versionedResources = new ArrayList<>();

  public ResourceSearchResult() {
  }

  public ResourceSearchResult additionalAttributes(Map<String, Object> additionalAttributes) {
    this.additionalAttributes = additionalAttributes;
    return this;
  }

  public ResourceSearchResult putAdditionalAttributesItem(String key, Object additionalAttributesItem) {
    if (this.additionalAttributes == null) {
      this.additionalAttributes = new HashMap<>();
    }
    this.additionalAttributes.put(key, additionalAttributesItem);
    return this;
  }

  /**
   * The additional searchable attributes of this resource. The attributes may vary from one resource type to another. Examples: &#x60;projectId&#x60; for Project, &#x60;dnsName&#x60; for DNS ManagedZone. This field contains a subset of the resource metadata fields that are returned by the List or Get APIs provided by the corresponding Google Cloud service (e.g., Compute Engine). see [API references and supported searchable attributes](https://cloud.google.com/asset-inventory/docs/supported-asset-types) to see which fields are included. You can search values of these fields through free text search. However, you should not consume the field programically as the field names and values may change as the Google Cloud service updates to a new incompatible API version. To search against the &#x60;additional_attributes&#x60;: * Use a free text query to match the attributes values. Example: to search &#x60;additional_attributes &#x3D; { dnsName: \&quot;foobar\&quot; }&#x60;, you can issue a query &#x60;foobar&#x60;.
   * @return additionalAttributes
   */
  @javax.annotation.Nullable
  public Map<String, Object> getAdditionalAttributes() {
    return additionalAttributes;
  }

  public void setAdditionalAttributes(Map<String, Object> additionalAttributes) {
    this.additionalAttributes = additionalAttributes;
  }


  public ResourceSearchResult assetType(String assetType) {
    this.assetType = assetType;
    return this;
  }

  /**
   * The type of this resource. Example: &#x60;compute.googleapis.com/Disk&#x60;. To search against the &#x60;asset_type&#x60;: * Specify the &#x60;asset_type&#x60; field in your search request.
   * @return assetType
   */
  @javax.annotation.Nullable
  public String getAssetType() {
    return assetType;
  }

  public void setAssetType(String assetType) {
    this.assetType = assetType;
  }


  public ResourceSearchResult attachedResources(List<AttachedResource> attachedResources) {
    this.attachedResources = attachedResources;
    return this;
  }

  public ResourceSearchResult addAttachedResourcesItem(AttachedResource attachedResourcesItem) {
    if (this.attachedResources == null) {
      this.attachedResources = new ArrayList<>();
    }
    this.attachedResources.add(attachedResourcesItem);
    return this;
  }

  /**
   * Attached resources of this resource. For example, an OSConfig Inventory is an attached resource of a Compute Instance. This field is repeated because a resource could have multiple attached resources. This &#x60;attached_resources&#x60; field is not searchable. Some attributes of the attached resources are exposed in &#x60;additional_attributes&#x60; field, so as to allow users to search on them.
   * @return attachedResources
   */
  @javax.annotation.Nullable
  public List<AttachedResource> getAttachedResources() {
    return attachedResources;
  }

  public void setAttachedResources(List<AttachedResource> attachedResources) {
    this.attachedResources = attachedResources;
  }


  public ResourceSearchResult createTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * The create timestamp of this resource, at which the resource was created. The granularity is in seconds. Timestamp.nanos will always be 0. This field is available only when the resource&#39;s Protobuf contains it. To search against &#x60;create_time&#x60;: * Use a field query. - value in seconds since unix epoch. Example: &#x60;createTime &gt; 1609459200&#x60; - value in date string. Example: &#x60;createTime &gt; 2021-01-01&#x60; - value in date-time string (must be quoted). Example: &#x60;createTime &gt; \&quot;2021-01-01T00:00:00\&quot;&#x60;
   * @return createTime
   */
  @javax.annotation.Nullable
  public String getCreateTime() {
    return createTime;
  }

  public void setCreateTime(String createTime) {
    this.createTime = createTime;
  }


  public ResourceSearchResult description(String description) {
    this.description = description;
    return this;
  }

  /**
   * One or more paragraphs of text description of this resource. Maximum length could be up to 1M bytes. This field is available only when the resource&#39;s Protobuf contains it. To search against the &#x60;description&#x60;: * Use a field query. Example: &#x60;description:\&quot;important instance\&quot;&#x60; * Use a free text query. Example: &#x60;\&quot;important instance\&quot;&#x60;
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public ResourceSearchResult displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * The display name of this resource. This field is available only when the resource&#39;s Protobuf contains it. To search against the &#x60;display_name&#x60;: * Use a field query. Example: &#x60;displayName:\&quot;My Instance\&quot;&#x60; * Use a free text query. Example: &#x60;\&quot;My Instance\&quot;&#x60;
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public ResourceSearchResult effectiveTags(List<EffectiveTagDetails> effectiveTags) {
    this.effectiveTags = effectiveTags;
    return this;
  }

  public ResourceSearchResult addEffectiveTagsItem(EffectiveTagDetails effectiveTagsItem) {
    if (this.effectiveTags == null) {
      this.effectiveTags = new ArrayList<>();
    }
    this.effectiveTags.add(effectiveTagsItem);
    return this;
  }

  /**
   * The effective tags on this resource. All of the tags that are both attached to and inherited by a resource are collectively called the effective tags. For more information, see [tag inheritance](https://cloud.google.com/resource-manager/docs/tags/tags-overview#inheritance). To search against the &#x60;effective_tags&#x60;: * Use a field query. Example: - &#x60;effectiveTagKeys:\&quot;123456789/env*\&quot;&#x60; - &#x60;effectiveTagKeys&#x3D;\&quot;123456789/env\&quot;&#x60; - &#x60;effectiveTagKeys:\&quot;env\&quot;&#x60; - &#x60;effectiveTagValues:\&quot;env\&quot;&#x60; - &#x60;effectiveTagValues:\&quot;env/prod\&quot;&#x60; - &#x60;effectiveTagValues:\&quot;123456789/env/prod*\&quot;&#x60; - &#x60;effectiveTagValues&#x3D;\&quot;123456789/env/prod\&quot;&#x60; - &#x60;effectiveTagValueIds&#x3D;\&quot;tagValues/456\&quot;&#x60;
   * @return effectiveTags
   */
  @javax.annotation.Nullable
  public List<EffectiveTagDetails> getEffectiveTags() {
    return effectiveTags;
  }

  public void setEffectiveTags(List<EffectiveTagDetails> effectiveTags) {
    this.effectiveTags = effectiveTags;
  }


  public ResourceSearchResult folders(List<String> folders) {
    this.folders = folders;
    return this;
  }

  public ResourceSearchResult addFoldersItem(String foldersItem) {
    if (this.folders == null) {
      this.folders = new ArrayList<>();
    }
    this.folders.add(foldersItem);
    return this;
  }

  /**
   * The folder(s) that this resource belongs to, in the form of folders/{FOLDER_NUMBER}. This field is available when the resource belongs to one or more folders. To search against &#x60;folders&#x60;: * Use a field query. Example: &#x60;folders:(123 OR 456)&#x60; * Use a free text query. Example: &#x60;123&#x60; * Specify the &#x60;scope&#x60; field as this folder in your search request.
   * @return folders
   */
  @javax.annotation.Nullable
  public List<String> getFolders() {
    return folders;
  }

  public void setFolders(List<String> folders) {
    this.folders = folders;
  }


  @Deprecated
  public ResourceSearchResult kmsKey(String kmsKey) {
    this.kmsKey = kmsKey;
    return this;
  }

  /**
   * The Cloud KMS [CryptoKey](https://cloud.google.com/kms/docs/reference/rest/v1/projects.locations.keyRings.cryptoKeys) name or [CryptoKeyVersion](https://cloud.google.com/kms/docs/reference/rest/v1/projects.locations.keyRings.cryptoKeys.cryptoKeyVersions) name. This field only presents for the purpose of backward compatibility. Use the &#x60;kms_keys&#x60; field to retrieve Cloud KMS key information. This field is available only when the resource&#39;s Protobuf contains it and will only be populated for [these resource types](https://cloud.google.com/asset-inventory/docs/legacy-field-names#resource_types_with_the_to_be_deprecated_kmskey_field) for backward compatible purposes. To search against the &#x60;kms_key&#x60;: * Use a field query. Example: &#x60;kmsKey:key&#x60; * Use a free text query. Example: &#x60;key&#x60;
   * @return kmsKey
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public String getKmsKey() {
    return kmsKey;
  }

  @Deprecated
  public void setKmsKey(String kmsKey) {
    this.kmsKey = kmsKey;
  }


  public ResourceSearchResult kmsKeys(List<String> kmsKeys) {
    this.kmsKeys = kmsKeys;
    return this;
  }

  public ResourceSearchResult addKmsKeysItem(String kmsKeysItem) {
    if (this.kmsKeys == null) {
      this.kmsKeys = new ArrayList<>();
    }
    this.kmsKeys.add(kmsKeysItem);
    return this;
  }

  /**
   * The Cloud KMS [CryptoKey](https://cloud.google.com/kms/docs/reference/rest/v1/projects.locations.keyRings.cryptoKeys) names or [CryptoKeyVersion](https://cloud.google.com/kms/docs/reference/rest/v1/projects.locations.keyRings.cryptoKeys.cryptoKeyVersions) names. This field is available only when the resource&#39;s Protobuf contains it. To search against the &#x60;kms_keys&#x60;: * Use a field query. Example: &#x60;kmsKeys:key&#x60; * Use a free text query. Example: &#x60;key&#x60;
   * @return kmsKeys
   */
  @javax.annotation.Nullable
  public List<String> getKmsKeys() {
    return kmsKeys;
  }

  public void setKmsKeys(List<String> kmsKeys) {
    this.kmsKeys = kmsKeys;
  }


  public ResourceSearchResult labels(Map<String, String> labels) {
    this.labels = labels;
    return this;
  }

  public ResourceSearchResult putLabelsItem(String key, String labelsItem) {
    if (this.labels == null) {
      this.labels = new HashMap<>();
    }
    this.labels.put(key, labelsItem);
    return this;
  }

  /**
   * Labels associated with this resource. See [Labelling and grouping Google Cloud resources](https://cloud.google.com/blog/products/gcp/labelling-and-grouping-your-google-cloud-platform-resources) for more information. This field is available only when the resource&#39;s Protobuf contains it. To search against the &#x60;labels&#x60;: * Use a field query: - query on any label&#39;s key or value. Example: &#x60;labels:prod&#x60; - query by a given label. Example: &#x60;labels.env:prod&#x60; - query by a given label&#39;s existence. Example: &#x60;labels.env:*&#x60; * Use a free text query. Example: &#x60;prod&#x60;
   * @return labels
   */
  @javax.annotation.Nullable
  public Map<String, String> getLabels() {
    return labels;
  }

  public void setLabels(Map<String, String> labels) {
    this.labels = labels;
  }


  public ResourceSearchResult location(String location) {
    this.location = location;
    return this;
  }

  /**
   * Location can be &#x60;global&#x60;, regional like &#x60;us-east1&#x60;, or zonal like &#x60;us-west1-b&#x60;. This field is available only when the resource&#39;s Protobuf contains it. To search against the &#x60;location&#x60;: * Use a field query. Example: &#x60;location:us-west*&#x60; * Use a free text query. Example: &#x60;us-west*&#x60;
   * @return location
   */
  @javax.annotation.Nullable
  public String getLocation() {
    return location;
  }

  public void setLocation(String location) {
    this.location = location;
  }


  public ResourceSearchResult name(String name) {
    this.name = name;
    return this;
  }

  /**
   * The full resource name of this resource. Example: &#x60;//compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1&#x60;. See [Cloud Asset Inventory Resource Name Format](https://cloud.google.com/asset-inventory/docs/resource-name-format) for more information. To search against the &#x60;name&#x60;: * Use a field query. Example: &#x60;name:instance1&#x60; * Use a free text query. Example: &#x60;instance1&#x60;
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public ResourceSearchResult networkTags(List<String> networkTags) {
    this.networkTags = networkTags;
    return this;
  }

  public ResourceSearchResult addNetworkTagsItem(String networkTagsItem) {
    if (this.networkTags == null) {
      this.networkTags = new ArrayList<>();
    }
    this.networkTags.add(networkTagsItem);
    return this;
  }

  /**
   * Network tags associated with this resource. Like labels, network tags are a type of annotations used to group Google Cloud resources. See [Labelling Google Cloud resources](https://cloud.google.com/blog/products/gcp/labelling-and-grouping-your-google-cloud-platform-resources) for more information. This field is available only when the resource&#39;s Protobuf contains it. To search against the &#x60;network_tags&#x60;: * Use a field query. Example: &#x60;networkTags:internal&#x60; * Use a free text query. Example: &#x60;internal&#x60;
   * @return networkTags
   */
  @javax.annotation.Nullable
  public List<String> getNetworkTags() {
    return networkTags;
  }

  public void setNetworkTags(List<String> networkTags) {
    this.networkTags = networkTags;
  }


  public ResourceSearchResult organization(String organization) {
    this.organization = organization;
    return this;
  }

  /**
   * The organization that this resource belongs to, in the form of organizations/{ORGANIZATION_NUMBER}. This field is available when the resource belongs to an organization. To search against &#x60;organization&#x60;: * Use a field query. Example: &#x60;organization:123&#x60; * Use a free text query. Example: &#x60;123&#x60; * Specify the &#x60;scope&#x60; field as this organization in your search request.
   * @return organization
   */
  @javax.annotation.Nullable
  public String getOrganization() {
    return organization;
  }

  public void setOrganization(String organization) {
    this.organization = organization;
  }


  public ResourceSearchResult parentAssetType(String parentAssetType) {
    this.parentAssetType = parentAssetType;
    return this;
  }

  /**
   * The type of this resource&#39;s immediate parent, if there is one. To search against the &#x60;parent_asset_type&#x60;: * Use a field query. Example: &#x60;parentAssetType:\&quot;cloudresourcemanager.googleapis.com/Project\&quot;&#x60; * Use a free text query. Example: &#x60;cloudresourcemanager.googleapis.com/Project&#x60;
   * @return parentAssetType
   */
  @javax.annotation.Nullable
  public String getParentAssetType() {
    return parentAssetType;
  }

  public void setParentAssetType(String parentAssetType) {
    this.parentAssetType = parentAssetType;
  }


  public ResourceSearchResult parentFullResourceName(String parentFullResourceName) {
    this.parentFullResourceName = parentFullResourceName;
    return this;
  }

  /**
   * The full resource name of this resource&#39;s parent, if it has one. To search against the &#x60;parent_full_resource_name&#x60;: * Use a field query. Example: &#x60;parentFullResourceName:\&quot;project-name\&quot;&#x60; * Use a free text query. Example: &#x60;project-name&#x60;
   * @return parentFullResourceName
   */
  @javax.annotation.Nullable
  public String getParentFullResourceName() {
    return parentFullResourceName;
  }

  public void setParentFullResourceName(String parentFullResourceName) {
    this.parentFullResourceName = parentFullResourceName;
  }


  public ResourceSearchResult project(String project) {
    this.project = project;
    return this;
  }

  /**
   * The project that this resource belongs to, in the form of projects/{PROJECT_NUMBER}. This field is available when the resource belongs to a project. To search against &#x60;project&#x60;: * Use a field query. Example: &#x60;project:12345&#x60; * Use a free text query. Example: &#x60;12345&#x60; * Specify the &#x60;scope&#x60; field as this project in your search request.
   * @return project
   */
  @javax.annotation.Nullable
  public String getProject() {
    return project;
  }

  public void setProject(String project) {
    this.project = project;
  }


  public ResourceSearchResult relationships(Map<String, RelatedResources> relationships) {
    this.relationships = relationships;
    return this;
  }

  public ResourceSearchResult putRelationshipsItem(String key, RelatedResources relationshipsItem) {
    if (this.relationships == null) {
      this.relationships = new HashMap<>();
    }
    this.relationships.put(key, relationshipsItem);
    return this;
  }

  /**
   * A map of related resources of this resource, keyed by the relationship type. A relationship type is in the format of {SourceType}_{ACTION}_{DestType}. Example: &#x60;DISK_TO_INSTANCE&#x60;, &#x60;DISK_TO_NETWORK&#x60;, &#x60;INSTANCE_TO_INSTANCEGROUP&#x60;. See [supported relationship types](https://cloud.google.com/asset-inventory/docs/supported-asset-types#supported_relationship_types).
   * @return relationships
   */
  @javax.annotation.Nullable
  public Map<String, RelatedResources> getRelationships() {
    return relationships;
  }

  public void setRelationships(Map<String, RelatedResources> relationships) {
    this.relationships = relationships;
  }


  public ResourceSearchResult sccSecurityMarks(Map<String, String> sccSecurityMarks) {
    this.sccSecurityMarks = sccSecurityMarks;
    return this;
  }

  public ResourceSearchResult putSccSecurityMarksItem(String key, String sccSecurityMarksItem) {
    if (this.sccSecurityMarks == null) {
      this.sccSecurityMarks = new HashMap<>();
    }
    this.sccSecurityMarks.put(key, sccSecurityMarksItem);
    return this;
  }

  /**
   * The actual content of Security Command Center security marks associated with the asset. To search against SCC SecurityMarks field: * Use a field query: - query by a given key value pair. Example: &#x60;sccSecurityMarks.foo&#x3D;bar&#x60; - query by a given key&#39;s existence. Example: &#x60;sccSecurityMarks.foo:*&#x60;
   * @return sccSecurityMarks
   */
  @javax.annotation.Nullable
  public Map<String, String> getSccSecurityMarks() {
    return sccSecurityMarks;
  }

  public void setSccSecurityMarks(Map<String, String> sccSecurityMarks) {
    this.sccSecurityMarks = sccSecurityMarks;
  }


  public ResourceSearchResult state(String state) {
    this.state = state;
    return this;
  }

  /**
   * The state of this resource. Different resources types have different state definitions that are mapped from various fields of different resource types. This field is available only when the resource&#39;s Protobuf contains it. Example: If the resource is an instance provided by Compute Engine, its state will include PROVISIONING, STAGING, RUNNING, STOPPING, SUSPENDING, SUSPENDED, REPAIRING, and TERMINATED. See &#x60;status&#x60; definition in [API Reference](https://cloud.google.com/compute/docs/reference/rest/v1/instances). If the resource is a project provided by Resource Manager, its state will include LIFECYCLE_STATE_UNSPECIFIED, ACTIVE, DELETE_REQUESTED and DELETE_IN_PROGRESS. See &#x60;lifecycleState&#x60; definition in [API Reference](https://cloud.google.com/resource-manager/reference/rest/v1/projects). To search against the &#x60;state&#x60;: * Use a field query. Example: &#x60;state:RUNNING&#x60; * Use a free text query. Example: &#x60;RUNNING&#x60;
   * @return state
   */
  @javax.annotation.Nullable
  public String getState() {
    return state;
  }

  public void setState(String state) {
    this.state = state;
  }


  @Deprecated
  public ResourceSearchResult tagKeys(List<String> tagKeys) {
    this.tagKeys = tagKeys;
    return this;
  }

  public ResourceSearchResult addTagKeysItem(String tagKeysItem) {
    if (this.tagKeys == null) {
      this.tagKeys = new ArrayList<>();
    }
    this.tagKeys.add(tagKeysItem);
    return this;
  }

  /**
   * This field is only present for the purpose of backward compatibility. Use the &#x60;tags&#x60; field instead. TagKey namespaced names, in the format of {ORG_ID}/{TAG_KEY_SHORT_NAME}. To search against the &#x60;tagKeys&#x60;: * Use a field query. Example: - &#x60;tagKeys:\&quot;123456789/env*\&quot;&#x60; - &#x60;tagKeys&#x3D;\&quot;123456789/env\&quot;&#x60; - &#x60;tagKeys:\&quot;env\&quot;&#x60; * Use a free text query. Example: - &#x60;env&#x60;
   * @return tagKeys
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public List<String> getTagKeys() {
    return tagKeys;
  }

  @Deprecated
  public void setTagKeys(List<String> tagKeys) {
    this.tagKeys = tagKeys;
  }


  @Deprecated
  public ResourceSearchResult tagValueIds(List<String> tagValueIds) {
    this.tagValueIds = tagValueIds;
    return this;
  }

  public ResourceSearchResult addTagValueIdsItem(String tagValueIdsItem) {
    if (this.tagValueIds == null) {
      this.tagValueIds = new ArrayList<>();
    }
    this.tagValueIds.add(tagValueIdsItem);
    return this;
  }

  /**
   * This field is only present for the purpose of backward compatibility. Use the &#x60;tags&#x60; field instead. TagValue IDs, in the format of tagValues/{TAG_VALUE_ID}. To search against the &#x60;tagValueIds&#x60;: * Use a field query. Example: - &#x60;tagValueIds&#x3D;\&quot;tagValues/456\&quot;&#x60; * Use a free text query. Example: - &#x60;456&#x60;
   * @return tagValueIds
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public List<String> getTagValueIds() {
    return tagValueIds;
  }

  @Deprecated
  public void setTagValueIds(List<String> tagValueIds) {
    this.tagValueIds = tagValueIds;
  }


  @Deprecated
  public ResourceSearchResult tagValues(List<String> tagValues) {
    this.tagValues = tagValues;
    return this;
  }

  public ResourceSearchResult addTagValuesItem(String tagValuesItem) {
    if (this.tagValues == null) {
      this.tagValues = new ArrayList<>();
    }
    this.tagValues.add(tagValuesItem);
    return this;
  }

  /**
   * This field is only present for the purpose of backward compatibility. Use the &#x60;tags&#x60; field instead. TagValue namespaced names, in the format of {ORG_ID}/{TAG_KEY_SHORT_NAME}/{TAG_VALUE_SHORT_NAME}. To search against the &#x60;tagValues&#x60;: * Use a field query. Example: - &#x60;tagValues:\&quot;env\&quot;&#x60; - &#x60;tagValues:\&quot;env/prod\&quot;&#x60; - &#x60;tagValues:\&quot;123456789/env/prod*\&quot;&#x60; - &#x60;tagValues&#x3D;\&quot;123456789/env/prod\&quot;&#x60; * Use a free text query. Example: - &#x60;prod&#x60;
   * @return tagValues
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public List<String> getTagValues() {
    return tagValues;
  }

  @Deprecated
  public void setTagValues(List<String> tagValues) {
    this.tagValues = tagValues;
  }


  public ResourceSearchResult tags(List<Tag> tags) {
    this.tags = tags;
    return this;
  }

  public ResourceSearchResult addTagsItem(Tag tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

  /**
   * The tags directly attached to this resource. To search against the &#x60;tags&#x60;: * Use a field query. Example: - &#x60;tagKeys:\&quot;123456789/env*\&quot;&#x60; - &#x60;tagKeys&#x3D;\&quot;123456789/env\&quot;&#x60; - &#x60;tagKeys:\&quot;env\&quot;&#x60; - &#x60;tagValues:\&quot;env\&quot;&#x60; - &#x60;tagValues:\&quot;env/prod\&quot;&#x60; - &#x60;tagValues:\&quot;123456789/env/prod*\&quot;&#x60; - &#x60;tagValues&#x3D;\&quot;123456789/env/prod\&quot;&#x60; - &#x60;tagValueIds&#x3D;\&quot;tagValues/456\&quot;&#x60; * Use a free text query. Example: - &#x60;env/prod&#x60;
   * @return tags
   */
  @javax.annotation.Nullable
  public List<Tag> getTags() {
    return tags;
  }

  public void setTags(List<Tag> tags) {
    this.tags = tags;
  }


  public ResourceSearchResult updateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  /**
   * The last update timestamp of this resource, at which the resource was last modified or deleted. The granularity is in seconds. Timestamp.nanos will always be 0. This field is available only when the resource&#39;s Protobuf contains it. To search against &#x60;update_time&#x60;: * Use a field query. - value in seconds since unix epoch. Example: &#x60;updateTime &lt; 1609459200&#x60; - value in date string. Example: &#x60;updateTime &lt; 2021-01-01&#x60; - value in date-time string (must be quoted). Example: &#x60;updateTime &lt; \&quot;2021-01-01T00:00:00\&quot;&#x60;
   * @return updateTime
   */
  @javax.annotation.Nullable
  public String getUpdateTime() {
    return updateTime;
  }

  public void setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
  }


  public ResourceSearchResult versionedResources(List<VersionedResource> versionedResources) {
    this.versionedResources = versionedResources;
    return this;
  }

  public ResourceSearchResult addVersionedResourcesItem(VersionedResource versionedResourcesItem) {
    if (this.versionedResources == null) {
      this.versionedResources = new ArrayList<>();
    }
    this.versionedResources.add(versionedResourcesItem);
    return this;
  }

  /**
   * Versioned resource representations of this resource. This is repeated because there could be multiple versions of resource representations during version migration. This &#x60;versioned_resources&#x60; field is not searchable. Some attributes of the resource representations are exposed in &#x60;additional_attributes&#x60; field, so as to allow users to search on them.
   * @return versionedResources
   */
  @javax.annotation.Nullable
  public List<VersionedResource> getVersionedResources() {
    return versionedResources;
  }

  public void setVersionedResources(List<VersionedResource> versionedResources) {
    this.versionedResources = versionedResources;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResourceSearchResult resourceSearchResult = (ResourceSearchResult) o;
    return Objects.equals(this.additionalAttributes, resourceSearchResult.additionalAttributes) &&
        Objects.equals(this.assetType, resourceSearchResult.assetType) &&
        Objects.equals(this.attachedResources, resourceSearchResult.attachedResources) &&
        Objects.equals(this.createTime, resourceSearchResult.createTime) &&
        Objects.equals(this.description, resourceSearchResult.description) &&
        Objects.equals(this.displayName, resourceSearchResult.displayName) &&
        Objects.equals(this.effectiveTags, resourceSearchResult.effectiveTags) &&
        Objects.equals(this.folders, resourceSearchResult.folders) &&
        Objects.equals(this.kmsKey, resourceSearchResult.kmsKey) &&
        Objects.equals(this.kmsKeys, resourceSearchResult.kmsKeys) &&
        Objects.equals(this.labels, resourceSearchResult.labels) &&
        Objects.equals(this.location, resourceSearchResult.location) &&
        Objects.equals(this.name, resourceSearchResult.name) &&
        Objects.equals(this.networkTags, resourceSearchResult.networkTags) &&
        Objects.equals(this.organization, resourceSearchResult.organization) &&
        Objects.equals(this.parentAssetType, resourceSearchResult.parentAssetType) &&
        Objects.equals(this.parentFullResourceName, resourceSearchResult.parentFullResourceName) &&
        Objects.equals(this.project, resourceSearchResult.project) &&
        Objects.equals(this.relationships, resourceSearchResult.relationships) &&
        Objects.equals(this.sccSecurityMarks, resourceSearchResult.sccSecurityMarks) &&
        Objects.equals(this.state, resourceSearchResult.state) &&
        Objects.equals(this.tagKeys, resourceSearchResult.tagKeys) &&
        Objects.equals(this.tagValueIds, resourceSearchResult.tagValueIds) &&
        Objects.equals(this.tagValues, resourceSearchResult.tagValues) &&
        Objects.equals(this.tags, resourceSearchResult.tags) &&
        Objects.equals(this.updateTime, resourceSearchResult.updateTime) &&
        Objects.equals(this.versionedResources, resourceSearchResult.versionedResources);
  }

  @Override
  public int hashCode() {
    return Objects.hash(additionalAttributes, assetType, attachedResources, createTime, description, displayName, effectiveTags, folders, kmsKey, kmsKeys, labels, location, name, networkTags, organization, parentAssetType, parentFullResourceName, project, relationships, sccSecurityMarks, state, tagKeys, tagValueIds, tagValues, tags, updateTime, versionedResources);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResourceSearchResult {\n");
    sb.append("    additionalAttributes: ").append(toIndentedString(additionalAttributes)).append("\n");
    sb.append("    assetType: ").append(toIndentedString(assetType)).append("\n");
    sb.append("    attachedResources: ").append(toIndentedString(attachedResources)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    effectiveTags: ").append(toIndentedString(effectiveTags)).append("\n");
    sb.append("    folders: ").append(toIndentedString(folders)).append("\n");
    sb.append("    kmsKey: ").append(toIndentedString(kmsKey)).append("\n");
    sb.append("    kmsKeys: ").append(toIndentedString(kmsKeys)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    networkTags: ").append(toIndentedString(networkTags)).append("\n");
    sb.append("    organization: ").append(toIndentedString(organization)).append("\n");
    sb.append("    parentAssetType: ").append(toIndentedString(parentAssetType)).append("\n");
    sb.append("    parentFullResourceName: ").append(toIndentedString(parentFullResourceName)).append("\n");
    sb.append("    project: ").append(toIndentedString(project)).append("\n");
    sb.append("    relationships: ").append(toIndentedString(relationships)).append("\n");
    sb.append("    sccSecurityMarks: ").append(toIndentedString(sccSecurityMarks)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    tagKeys: ").append(toIndentedString(tagKeys)).append("\n");
    sb.append("    tagValueIds: ").append(toIndentedString(tagValueIds)).append("\n");
    sb.append("    tagValues: ").append(toIndentedString(tagValues)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("    versionedResources: ").append(toIndentedString(versionedResources)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("additionalAttributes");
    openapiFields.add("assetType");
    openapiFields.add("attachedResources");
    openapiFields.add("createTime");
    openapiFields.add("description");
    openapiFields.add("displayName");
    openapiFields.add("effectiveTags");
    openapiFields.add("folders");
    openapiFields.add("kmsKey");
    openapiFields.add("kmsKeys");
    openapiFields.add("labels");
    openapiFields.add("location");
    openapiFields.add("name");
    openapiFields.add("networkTags");
    openapiFields.add("organization");
    openapiFields.add("parentAssetType");
    openapiFields.add("parentFullResourceName");
    openapiFields.add("project");
    openapiFields.add("relationships");
    openapiFields.add("sccSecurityMarks");
    openapiFields.add("state");
    openapiFields.add("tagKeys");
    openapiFields.add("tagValueIds");
    openapiFields.add("tagValues");
    openapiFields.add("tags");
    openapiFields.add("updateTime");
    openapiFields.add("versionedResources");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ResourceSearchResult
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ResourceSearchResult.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ResourceSearchResult is not found in the empty JSON string", ResourceSearchResult.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ResourceSearchResult.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ResourceSearchResult` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("assetType") != null && !jsonObj.get("assetType").isJsonNull()) && !jsonObj.get("assetType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `assetType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("assetType").toString()));
      }
      if (jsonObj.get("attachedResources") != null && !jsonObj.get("attachedResources").isJsonNull()) {
        JsonArray jsonArrayattachedResources = jsonObj.getAsJsonArray("attachedResources");
        if (jsonArrayattachedResources != null) {
          // ensure the json data is an array
          if (!jsonObj.get("attachedResources").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `attachedResources` to be an array in the JSON string but got `%s`", jsonObj.get("attachedResources").toString()));
          }

          // validate the optional field `attachedResources` (array)
          for (int i = 0; i < jsonArrayattachedResources.size(); i++) {
            AttachedResource.validateJsonElement(jsonArrayattachedResources.get(i));
          };
        }
      }
      if ((jsonObj.get("createTime") != null && !jsonObj.get("createTime").isJsonNull()) && !jsonObj.get("createTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createTime").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      if (jsonObj.get("effectiveTags") != null && !jsonObj.get("effectiveTags").isJsonNull()) {
        JsonArray jsonArrayeffectiveTags = jsonObj.getAsJsonArray("effectiveTags");
        if (jsonArrayeffectiveTags != null) {
          // ensure the json data is an array
          if (!jsonObj.get("effectiveTags").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `effectiveTags` to be an array in the JSON string but got `%s`", jsonObj.get("effectiveTags").toString()));
          }

          // validate the optional field `effectiveTags` (array)
          for (int i = 0; i < jsonArrayeffectiveTags.size(); i++) {
            EffectiveTagDetails.validateJsonElement(jsonArrayeffectiveTags.get(i));
          };
        }
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("folders") != null && !jsonObj.get("folders").isJsonNull() && !jsonObj.get("folders").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `folders` to be an array in the JSON string but got `%s`", jsonObj.get("folders").toString()));
      }
      if ((jsonObj.get("kmsKey") != null && !jsonObj.get("kmsKey").isJsonNull()) && !jsonObj.get("kmsKey").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kmsKey` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kmsKey").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("kmsKeys") != null && !jsonObj.get("kmsKeys").isJsonNull() && !jsonObj.get("kmsKeys").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `kmsKeys` to be an array in the JSON string but got `%s`", jsonObj.get("kmsKeys").toString()));
      }
      if ((jsonObj.get("location") != null && !jsonObj.get("location").isJsonNull()) && !jsonObj.get("location").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `location` to be a primitive type in the JSON string but got `%s`", jsonObj.get("location").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("networkTags") != null && !jsonObj.get("networkTags").isJsonNull() && !jsonObj.get("networkTags").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `networkTags` to be an array in the JSON string but got `%s`", jsonObj.get("networkTags").toString()));
      }
      if ((jsonObj.get("organization") != null && !jsonObj.get("organization").isJsonNull()) && !jsonObj.get("organization").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `organization` to be a primitive type in the JSON string but got `%s`", jsonObj.get("organization").toString()));
      }
      if ((jsonObj.get("parentAssetType") != null && !jsonObj.get("parentAssetType").isJsonNull()) && !jsonObj.get("parentAssetType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `parentAssetType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("parentAssetType").toString()));
      }
      if ((jsonObj.get("parentFullResourceName") != null && !jsonObj.get("parentFullResourceName").isJsonNull()) && !jsonObj.get("parentFullResourceName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `parentFullResourceName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("parentFullResourceName").toString()));
      }
      if ((jsonObj.get("project") != null && !jsonObj.get("project").isJsonNull()) && !jsonObj.get("project").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `project` to be a primitive type in the JSON string but got `%s`", jsonObj.get("project").toString()));
      }
      if ((jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) && !jsonObj.get("state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("tagKeys") != null && !jsonObj.get("tagKeys").isJsonNull() && !jsonObj.get("tagKeys").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `tagKeys` to be an array in the JSON string but got `%s`", jsonObj.get("tagKeys").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("tagValueIds") != null && !jsonObj.get("tagValueIds").isJsonNull() && !jsonObj.get("tagValueIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `tagValueIds` to be an array in the JSON string but got `%s`", jsonObj.get("tagValueIds").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("tagValues") != null && !jsonObj.get("tagValues").isJsonNull() && !jsonObj.get("tagValues").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `tagValues` to be an array in the JSON string but got `%s`", jsonObj.get("tagValues").toString()));
      }
      if (jsonObj.get("tags") != null && !jsonObj.get("tags").isJsonNull()) {
        JsonArray jsonArraytags = jsonObj.getAsJsonArray("tags");
        if (jsonArraytags != null) {
          // ensure the json data is an array
          if (!jsonObj.get("tags").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `tags` to be an array in the JSON string but got `%s`", jsonObj.get("tags").toString()));
          }

          // validate the optional field `tags` (array)
          for (int i = 0; i < jsonArraytags.size(); i++) {
            Tag.validateJsonElement(jsonArraytags.get(i));
          };
        }
      }
      if ((jsonObj.get("updateTime") != null && !jsonObj.get("updateTime").isJsonNull()) && !jsonObj.get("updateTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updateTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updateTime").toString()));
      }
      if (jsonObj.get("versionedResources") != null && !jsonObj.get("versionedResources").isJsonNull()) {
        JsonArray jsonArrayversionedResources = jsonObj.getAsJsonArray("versionedResources");
        if (jsonArrayversionedResources != null) {
          // ensure the json data is an array
          if (!jsonObj.get("versionedResources").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `versionedResources` to be an array in the JSON string but got `%s`", jsonObj.get("versionedResources").toString()));
          }

          // validate the optional field `versionedResources` (array)
          for (int i = 0; i < jsonArrayversionedResources.size(); i++) {
            VersionedResource.validateJsonElement(jsonArrayversionedResources.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ResourceSearchResult.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ResourceSearchResult' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ResourceSearchResult> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ResourceSearchResult.class));

       return (TypeAdapter<T>) new TypeAdapter<ResourceSearchResult>() {
           @Override
           public void write(JsonWriter out, ResourceSearchResult value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ResourceSearchResult read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ResourceSearchResult given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ResourceSearchResult
   * @throws IOException if the JSON string is invalid with respect to ResourceSearchResult
   */
  public static ResourceSearchResult fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ResourceSearchResult.class);
  }

  /**
   * Convert an instance of ResourceSearchResult to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

