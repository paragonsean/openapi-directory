/*
 * Cloud Asset API
 * The Cloud Asset API manages the history and inventory of Google Cloud resources.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.EffectiveTagDetails;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The Google Cloud resources governed by the organization policies of the AnalyzeOrgPolicyGovernedAssetsRequest.constraint.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:36:52.366195-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedResource {
  public static final String SERIALIZED_NAME_ASSET_TYPE = "assetType";
  @SerializedName(SERIALIZED_NAME_ASSET_TYPE)
  private String assetType;

  public static final String SERIALIZED_NAME_EFFECTIVE_TAGS = "effectiveTags";
  @SerializedName(SERIALIZED_NAME_EFFECTIVE_TAGS)
  private List<EffectiveTagDetails> effectiveTags = new ArrayList<>();

  public static final String SERIALIZED_NAME_FOLDERS = "folders";
  @SerializedName(SERIALIZED_NAME_FOLDERS)
  private List<String> folders = new ArrayList<>();

  public static final String SERIALIZED_NAME_FULL_RESOURCE_NAME = "fullResourceName";
  @SerializedName(SERIALIZED_NAME_FULL_RESOURCE_NAME)
  private String fullResourceName;

  public static final String SERIALIZED_NAME_ORGANIZATION = "organization";
  @SerializedName(SERIALIZED_NAME_ORGANIZATION)
  private String organization;

  public static final String SERIALIZED_NAME_PARENT = "parent";
  @SerializedName(SERIALIZED_NAME_PARENT)
  private String parent;

  public static final String SERIALIZED_NAME_PROJECT = "project";
  @SerializedName(SERIALIZED_NAME_PROJECT)
  private String project;

  public GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedResource() {
  }

  public GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedResource assetType(String assetType) {
    this.assetType = assetType;
    return this;
  }

  /**
   * The asset type of the AnalyzeOrgPolicyGovernedAssetsResponse.GovernedResource.full_resource_name Example: &#x60;cloudresourcemanager.googleapis.com/Project&#x60; See [Cloud Asset Inventory Supported Asset Types](https://cloud.google.com/asset-inventory/docs/supported-asset-types) for all supported asset types.
   * @return assetType
   */
  @javax.annotation.Nullable
  public String getAssetType() {
    return assetType;
  }

  public void setAssetType(String assetType) {
    this.assetType = assetType;
  }


  public GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedResource effectiveTags(List<EffectiveTagDetails> effectiveTags) {
    this.effectiveTags = effectiveTags;
    return this;
  }

  public GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedResource addEffectiveTagsItem(EffectiveTagDetails effectiveTagsItem) {
    if (this.effectiveTags == null) {
      this.effectiveTags = new ArrayList<>();
    }
    this.effectiveTags.add(effectiveTagsItem);
    return this;
  }

  /**
   * The effective tags on this resource.
   * @return effectiveTags
   */
  @javax.annotation.Nullable
  public List<EffectiveTagDetails> getEffectiveTags() {
    return effectiveTags;
  }

  public void setEffectiveTags(List<EffectiveTagDetails> effectiveTags) {
    this.effectiveTags = effectiveTags;
  }


  public GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedResource folders(List<String> folders) {
    this.folders = folders;
    return this;
  }

  public GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedResource addFoldersItem(String foldersItem) {
    if (this.folders == null) {
      this.folders = new ArrayList<>();
    }
    this.folders.add(foldersItem);
    return this;
  }

  /**
   * The folder(s) that this resource belongs to, in the format of folders/{FOLDER_NUMBER}. This field is available when the resource belongs (directly or cascadingly) to one or more folders.
   * @return folders
   */
  @javax.annotation.Nullable
  public List<String> getFolders() {
    return folders;
  }

  public void setFolders(List<String> folders) {
    this.folders = folders;
  }


  public GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedResource fullResourceName(String fullResourceName) {
    this.fullResourceName = fullResourceName;
    return this;
  }

  /**
   * The [full resource name] (https://cloud.google.com/asset-inventory/docs/resource-name-format) of the Google Cloud resource.
   * @return fullResourceName
   */
  @javax.annotation.Nullable
  public String getFullResourceName() {
    return fullResourceName;
  }

  public void setFullResourceName(String fullResourceName) {
    this.fullResourceName = fullResourceName;
  }


  public GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedResource organization(String organization) {
    this.organization = organization;
    return this;
  }

  /**
   * The organization that this resource belongs to, in the format of organizations/{ORGANIZATION_NUMBER}. This field is available when the resource belongs (directly or cascadingly) to an organization.
   * @return organization
   */
  @javax.annotation.Nullable
  public String getOrganization() {
    return organization;
  }

  public void setOrganization(String organization) {
    this.organization = organization;
  }


  public GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedResource parent(String parent) {
    this.parent = parent;
    return this;
  }

  /**
   * The [full resource name] (https://cloud.google.com/asset-inventory/docs/resource-name-format) of the parent of AnalyzeOrgPolicyGovernedAssetsResponse.GovernedResource.full_resource_name.
   * @return parent
   */
  @javax.annotation.Nullable
  public String getParent() {
    return parent;
  }

  public void setParent(String parent) {
    this.parent = parent;
  }


  public GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedResource project(String project) {
    this.project = project;
    return this;
  }

  /**
   * The project that this resource belongs to, in the format of projects/{PROJECT_NUMBER}. This field is available when the resource belongs to a project.
   * @return project
   */
  @javax.annotation.Nullable
  public String getProject() {
    return project;
  }

  public void setProject(String project) {
    this.project = project;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedResource googleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedResource = (GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedResource) o;
    return Objects.equals(this.assetType, googleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedResource.assetType) &&
        Objects.equals(this.effectiveTags, googleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedResource.effectiveTags) &&
        Objects.equals(this.folders, googleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedResource.folders) &&
        Objects.equals(this.fullResourceName, googleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedResource.fullResourceName) &&
        Objects.equals(this.organization, googleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedResource.organization) &&
        Objects.equals(this.parent, googleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedResource.parent) &&
        Objects.equals(this.project, googleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedResource.project);
  }

  @Override
  public int hashCode() {
    return Objects.hash(assetType, effectiveTags, folders, fullResourceName, organization, parent, project);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedResource {\n");
    sb.append("    assetType: ").append(toIndentedString(assetType)).append("\n");
    sb.append("    effectiveTags: ").append(toIndentedString(effectiveTags)).append("\n");
    sb.append("    folders: ").append(toIndentedString(folders)).append("\n");
    sb.append("    fullResourceName: ").append(toIndentedString(fullResourceName)).append("\n");
    sb.append("    organization: ").append(toIndentedString(organization)).append("\n");
    sb.append("    parent: ").append(toIndentedString(parent)).append("\n");
    sb.append("    project: ").append(toIndentedString(project)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("assetType");
    openapiFields.add("effectiveTags");
    openapiFields.add("folders");
    openapiFields.add("fullResourceName");
    openapiFields.add("organization");
    openapiFields.add("parent");
    openapiFields.add("project");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedResource
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedResource.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedResource is not found in the empty JSON string", GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedResource.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedResource.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedResource` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("assetType") != null && !jsonObj.get("assetType").isJsonNull()) && !jsonObj.get("assetType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `assetType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("assetType").toString()));
      }
      if (jsonObj.get("effectiveTags") != null && !jsonObj.get("effectiveTags").isJsonNull()) {
        JsonArray jsonArrayeffectiveTags = jsonObj.getAsJsonArray("effectiveTags");
        if (jsonArrayeffectiveTags != null) {
          // ensure the json data is an array
          if (!jsonObj.get("effectiveTags").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `effectiveTags` to be an array in the JSON string but got `%s`", jsonObj.get("effectiveTags").toString()));
          }

          // validate the optional field `effectiveTags` (array)
          for (int i = 0; i < jsonArrayeffectiveTags.size(); i++) {
            EffectiveTagDetails.validateJsonElement(jsonArrayeffectiveTags.get(i));
          };
        }
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("folders") != null && !jsonObj.get("folders").isJsonNull() && !jsonObj.get("folders").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `folders` to be an array in the JSON string but got `%s`", jsonObj.get("folders").toString()));
      }
      if ((jsonObj.get("fullResourceName") != null && !jsonObj.get("fullResourceName").isJsonNull()) && !jsonObj.get("fullResourceName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fullResourceName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fullResourceName").toString()));
      }
      if ((jsonObj.get("organization") != null && !jsonObj.get("organization").isJsonNull()) && !jsonObj.get("organization").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `organization` to be a primitive type in the JSON string but got `%s`", jsonObj.get("organization").toString()));
      }
      if ((jsonObj.get("parent") != null && !jsonObj.get("parent").isJsonNull()) && !jsonObj.get("parent").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `parent` to be a primitive type in the JSON string but got `%s`", jsonObj.get("parent").toString()));
      }
      if ((jsonObj.get("project") != null && !jsonObj.get("project").isJsonNull()) && !jsonObj.get("project").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `project` to be a primitive type in the JSON string but got `%s`", jsonObj.get("project").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedResource.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedResource' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedResource> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedResource.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedResource>() {
           @Override
           public void write(JsonWriter out, GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedResource value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedResource read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedResource given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedResource
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedResource
   */
  public static GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedResource fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedResource.class);
  }

  /**
   * Convert an instance of GoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedResource to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

