/*
 * Cloud Asset API
 * The Cloud Asset API manages the history and inventory of Google Cloud resources.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleIdentityAccesscontextmanagerV1MethodSelector;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Identification for an API Operation.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:36:52.366195-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleIdentityAccesscontextmanagerV1ApiOperation {
  public static final String SERIALIZED_NAME_METHOD_SELECTORS = "methodSelectors";
  @SerializedName(SERIALIZED_NAME_METHOD_SELECTORS)
  private List<GoogleIdentityAccesscontextmanagerV1MethodSelector> methodSelectors = new ArrayList<>();

  public static final String SERIALIZED_NAME_SERVICE_NAME = "serviceName";
  @SerializedName(SERIALIZED_NAME_SERVICE_NAME)
  private String serviceName;

  public GoogleIdentityAccesscontextmanagerV1ApiOperation() {
  }

  public GoogleIdentityAccesscontextmanagerV1ApiOperation methodSelectors(List<GoogleIdentityAccesscontextmanagerV1MethodSelector> methodSelectors) {
    this.methodSelectors = methodSelectors;
    return this;
  }

  public GoogleIdentityAccesscontextmanagerV1ApiOperation addMethodSelectorsItem(GoogleIdentityAccesscontextmanagerV1MethodSelector methodSelectorsItem) {
    if (this.methodSelectors == null) {
      this.methodSelectors = new ArrayList<>();
    }
    this.methodSelectors.add(methodSelectorsItem);
    return this;
  }

  /**
   * API methods or permissions to allow. Method or permission must belong to the service specified by &#x60;service_name&#x60; field. A single MethodSelector entry with &#x60;*&#x60; specified for the &#x60;method&#x60; field will allow all methods AND permissions for the service specified in &#x60;service_name&#x60;.
   * @return methodSelectors
   */
  @javax.annotation.Nullable
  public List<GoogleIdentityAccesscontextmanagerV1MethodSelector> getMethodSelectors() {
    return methodSelectors;
  }

  public void setMethodSelectors(List<GoogleIdentityAccesscontextmanagerV1MethodSelector> methodSelectors) {
    this.methodSelectors = methodSelectors;
  }


  public GoogleIdentityAccesscontextmanagerV1ApiOperation serviceName(String serviceName) {
    this.serviceName = serviceName;
    return this;
  }

  /**
   * The name of the API whose methods or permissions the IngressPolicy or EgressPolicy want to allow. A single ApiOperation with &#x60;service_name&#x60; field set to &#x60;*&#x60; will allow all methods AND permissions for all services.
   * @return serviceName
   */
  @javax.annotation.Nullable
  public String getServiceName() {
    return serviceName;
  }

  public void setServiceName(String serviceName) {
    this.serviceName = serviceName;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleIdentityAccesscontextmanagerV1ApiOperation googleIdentityAccesscontextmanagerV1ApiOperation = (GoogleIdentityAccesscontextmanagerV1ApiOperation) o;
    return Objects.equals(this.methodSelectors, googleIdentityAccesscontextmanagerV1ApiOperation.methodSelectors) &&
        Objects.equals(this.serviceName, googleIdentityAccesscontextmanagerV1ApiOperation.serviceName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(methodSelectors, serviceName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleIdentityAccesscontextmanagerV1ApiOperation {\n");
    sb.append("    methodSelectors: ").append(toIndentedString(methodSelectors)).append("\n");
    sb.append("    serviceName: ").append(toIndentedString(serviceName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("methodSelectors");
    openapiFields.add("serviceName");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleIdentityAccesscontextmanagerV1ApiOperation
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleIdentityAccesscontextmanagerV1ApiOperation.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleIdentityAccesscontextmanagerV1ApiOperation is not found in the empty JSON string", GoogleIdentityAccesscontextmanagerV1ApiOperation.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleIdentityAccesscontextmanagerV1ApiOperation.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleIdentityAccesscontextmanagerV1ApiOperation` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("methodSelectors") != null && !jsonObj.get("methodSelectors").isJsonNull()) {
        JsonArray jsonArraymethodSelectors = jsonObj.getAsJsonArray("methodSelectors");
        if (jsonArraymethodSelectors != null) {
          // ensure the json data is an array
          if (!jsonObj.get("methodSelectors").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `methodSelectors` to be an array in the JSON string but got `%s`", jsonObj.get("methodSelectors").toString()));
          }

          // validate the optional field `methodSelectors` (array)
          for (int i = 0; i < jsonArraymethodSelectors.size(); i++) {
            GoogleIdentityAccesscontextmanagerV1MethodSelector.validateJsonElement(jsonArraymethodSelectors.get(i));
          };
        }
      }
      if ((jsonObj.get("serviceName") != null && !jsonObj.get("serviceName").isJsonNull()) && !jsonObj.get("serviceName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `serviceName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("serviceName").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleIdentityAccesscontextmanagerV1ApiOperation.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleIdentityAccesscontextmanagerV1ApiOperation' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleIdentityAccesscontextmanagerV1ApiOperation> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleIdentityAccesscontextmanagerV1ApiOperation.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleIdentityAccesscontextmanagerV1ApiOperation>() {
           @Override
           public void write(JsonWriter out, GoogleIdentityAccesscontextmanagerV1ApiOperation value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleIdentityAccesscontextmanagerV1ApiOperation read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleIdentityAccesscontextmanagerV1ApiOperation given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleIdentityAccesscontextmanagerV1ApiOperation
   * @throws IOException if the JSON string is invalid with respect to GoogleIdentityAccesscontextmanagerV1ApiOperation
   */
  public static GoogleIdentityAccesscontextmanagerV1ApiOperation fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleIdentityAccesscontextmanagerV1ApiOperation.class);
  }

  /**
   * Convert an instance of GoogleIdentityAccesscontextmanagerV1ApiOperation to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

