/*
 * Cloud Asset API
 * The Cloud Asset API manages the history and inventory of Google Cloud resources.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.QueryAssetsOutputConfig;
import org.openapitools.client.model.TimeWindow;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * QueryAssets request.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:36:52.366195-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class QueryAssetsRequest {
  public static final String SERIALIZED_NAME_JOB_REFERENCE = "jobReference";
  @SerializedName(SERIALIZED_NAME_JOB_REFERENCE)
  private String jobReference;

  public static final String SERIALIZED_NAME_OUTPUT_CONFIG = "outputConfig";
  @SerializedName(SERIALIZED_NAME_OUTPUT_CONFIG)
  private QueryAssetsOutputConfig outputConfig;

  public static final String SERIALIZED_NAME_PAGE_SIZE = "pageSize";
  @SerializedName(SERIALIZED_NAME_PAGE_SIZE)
  private Integer pageSize;

  public static final String SERIALIZED_NAME_PAGE_TOKEN = "pageToken";
  @SerializedName(SERIALIZED_NAME_PAGE_TOKEN)
  private String pageToken;

  public static final String SERIALIZED_NAME_READ_TIME = "readTime";
  @SerializedName(SERIALIZED_NAME_READ_TIME)
  private String readTime;

  public static final String SERIALIZED_NAME_READ_TIME_WINDOW = "readTimeWindow";
  @SerializedName(SERIALIZED_NAME_READ_TIME_WINDOW)
  private TimeWindow readTimeWindow;

  public static final String SERIALIZED_NAME_STATEMENT = "statement";
  @SerializedName(SERIALIZED_NAME_STATEMENT)
  private String statement;

  public static final String SERIALIZED_NAME_TIMEOUT = "timeout";
  @SerializedName(SERIALIZED_NAME_TIMEOUT)
  private String timeout;

  public QueryAssetsRequest() {
  }

  public QueryAssetsRequest jobReference(String jobReference) {
    this.jobReference = jobReference;
    return this;
  }

  /**
   * Optional. Reference to the query job, which is from the &#x60;QueryAssetsResponse&#x60; of previous &#x60;QueryAssets&#x60; call.
   * @return jobReference
   */
  @javax.annotation.Nullable
  public String getJobReference() {
    return jobReference;
  }

  public void setJobReference(String jobReference) {
    this.jobReference = jobReference;
  }


  public QueryAssetsRequest outputConfig(QueryAssetsOutputConfig outputConfig) {
    this.outputConfig = outputConfig;
    return this;
  }

  /**
   * Get outputConfig
   * @return outputConfig
   */
  @javax.annotation.Nullable
  public QueryAssetsOutputConfig getOutputConfig() {
    return outputConfig;
  }

  public void setOutputConfig(QueryAssetsOutputConfig outputConfig) {
    this.outputConfig = outputConfig;
  }


  public QueryAssetsRequest pageSize(Integer pageSize) {
    this.pageSize = pageSize;
    return this;
  }

  /**
   * Optional. The maximum number of rows to return in the results. Responses are limited to 10 MB and 1000 rows. By default, the maximum row count is 1000. When the byte or row count limit is reached, the rest of the query results will be paginated. The field will be ignored when [output_config] is specified.
   * @return pageSize
   */
  @javax.annotation.Nullable
  public Integer getPageSize() {
    return pageSize;
  }

  public void setPageSize(Integer pageSize) {
    this.pageSize = pageSize;
  }


  public QueryAssetsRequest pageToken(String pageToken) {
    this.pageToken = pageToken;
    return this;
  }

  /**
   * Optional. A page token received from previous &#x60;QueryAssets&#x60;. The field will be ignored when [output_config] is specified.
   * @return pageToken
   */
  @javax.annotation.Nullable
  public String getPageToken() {
    return pageToken;
  }

  public void setPageToken(String pageToken) {
    this.pageToken = pageToken;
  }


  public QueryAssetsRequest readTime(String readTime) {
    this.readTime = readTime;
    return this;
  }

  /**
   * Optional. Queries cloud assets as they appeared at the specified point in time.
   * @return readTime
   */
  @javax.annotation.Nullable
  public String getReadTime() {
    return readTime;
  }

  public void setReadTime(String readTime) {
    this.readTime = readTime;
  }


  public QueryAssetsRequest readTimeWindow(TimeWindow readTimeWindow) {
    this.readTimeWindow = readTimeWindow;
    return this;
  }

  /**
   * Get readTimeWindow
   * @return readTimeWindow
   */
  @javax.annotation.Nullable
  public TimeWindow getReadTimeWindow() {
    return readTimeWindow;
  }

  public void setReadTimeWindow(TimeWindow readTimeWindow) {
    this.readTimeWindow = readTimeWindow;
  }


  public QueryAssetsRequest statement(String statement) {
    this.statement = statement;
    return this;
  }

  /**
   * Optional. A SQL statement that&#39;s compatible with [BigQuery SQL](https://cloud.google.com/bigquery/docs/introduction-sql).
   * @return statement
   */
  @javax.annotation.Nullable
  public String getStatement() {
    return statement;
  }

  public void setStatement(String statement) {
    this.statement = statement;
  }


  public QueryAssetsRequest timeout(String timeout) {
    this.timeout = timeout;
    return this;
  }

  /**
   * Optional. Specifies the maximum amount of time that the client is willing to wait for the query to complete. By default, this limit is 5 min for the first query, and 1 minute for the following queries. If the query is complete, the &#x60;done&#x60; field in the &#x60;QueryAssetsResponse&#x60; is true, otherwise false. Like BigQuery [jobs.query API](https://cloud.google.com/bigquery/docs/reference/rest/v2/jobs/query#queryrequest) The call is not guaranteed to wait for the specified timeout; it typically returns after around 200 seconds (200,000 milliseconds), even if the query is not complete. The field will be ignored when [output_config] is specified.
   * @return timeout
   */
  @javax.annotation.Nullable
  public String getTimeout() {
    return timeout;
  }

  public void setTimeout(String timeout) {
    this.timeout = timeout;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    QueryAssetsRequest queryAssetsRequest = (QueryAssetsRequest) o;
    return Objects.equals(this.jobReference, queryAssetsRequest.jobReference) &&
        Objects.equals(this.outputConfig, queryAssetsRequest.outputConfig) &&
        Objects.equals(this.pageSize, queryAssetsRequest.pageSize) &&
        Objects.equals(this.pageToken, queryAssetsRequest.pageToken) &&
        Objects.equals(this.readTime, queryAssetsRequest.readTime) &&
        Objects.equals(this.readTimeWindow, queryAssetsRequest.readTimeWindow) &&
        Objects.equals(this.statement, queryAssetsRequest.statement) &&
        Objects.equals(this.timeout, queryAssetsRequest.timeout);
  }

  @Override
  public int hashCode() {
    return Objects.hash(jobReference, outputConfig, pageSize, pageToken, readTime, readTimeWindow, statement, timeout);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class QueryAssetsRequest {\n");
    sb.append("    jobReference: ").append(toIndentedString(jobReference)).append("\n");
    sb.append("    outputConfig: ").append(toIndentedString(outputConfig)).append("\n");
    sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
    sb.append("    pageToken: ").append(toIndentedString(pageToken)).append("\n");
    sb.append("    readTime: ").append(toIndentedString(readTime)).append("\n");
    sb.append("    readTimeWindow: ").append(toIndentedString(readTimeWindow)).append("\n");
    sb.append("    statement: ").append(toIndentedString(statement)).append("\n");
    sb.append("    timeout: ").append(toIndentedString(timeout)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("jobReference");
    openapiFields.add("outputConfig");
    openapiFields.add("pageSize");
    openapiFields.add("pageToken");
    openapiFields.add("readTime");
    openapiFields.add("readTimeWindow");
    openapiFields.add("statement");
    openapiFields.add("timeout");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to QueryAssetsRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!QueryAssetsRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in QueryAssetsRequest is not found in the empty JSON string", QueryAssetsRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!QueryAssetsRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `QueryAssetsRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("jobReference") != null && !jsonObj.get("jobReference").isJsonNull()) && !jsonObj.get("jobReference").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `jobReference` to be a primitive type in the JSON string but got `%s`", jsonObj.get("jobReference").toString()));
      }
      // validate the optional field `outputConfig`
      if (jsonObj.get("outputConfig") != null && !jsonObj.get("outputConfig").isJsonNull()) {
        QueryAssetsOutputConfig.validateJsonElement(jsonObj.get("outputConfig"));
      }
      if ((jsonObj.get("pageToken") != null && !jsonObj.get("pageToken").isJsonNull()) && !jsonObj.get("pageToken").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pageToken` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pageToken").toString()));
      }
      if ((jsonObj.get("readTime") != null && !jsonObj.get("readTime").isJsonNull()) && !jsonObj.get("readTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `readTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("readTime").toString()));
      }
      // validate the optional field `readTimeWindow`
      if (jsonObj.get("readTimeWindow") != null && !jsonObj.get("readTimeWindow").isJsonNull()) {
        TimeWindow.validateJsonElement(jsonObj.get("readTimeWindow"));
      }
      if ((jsonObj.get("statement") != null && !jsonObj.get("statement").isJsonNull()) && !jsonObj.get("statement").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `statement` to be a primitive type in the JSON string but got `%s`", jsonObj.get("statement").toString()));
      }
      if ((jsonObj.get("timeout") != null && !jsonObj.get("timeout").isJsonNull()) && !jsonObj.get("timeout").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `timeout` to be a primitive type in the JSON string but got `%s`", jsonObj.get("timeout").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!QueryAssetsRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'QueryAssetsRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<QueryAssetsRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(QueryAssetsRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<QueryAssetsRequest>() {
           @Override
           public void write(JsonWriter out, QueryAssetsRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public QueryAssetsRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of QueryAssetsRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of QueryAssetsRequest
   * @throws IOException if the JSON string is invalid with respect to QueryAssetsRequest
   */
  public static QueryAssetsRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, QueryAssetsRequest.class);
  }

  /**
   * Convert an instance of QueryAssetsRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

