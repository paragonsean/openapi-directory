/*
 * Cloud Asset API
 * The Cloud Asset API manages the history and inventory of Google Cloud resources.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The source that IngressPolicy authorizes access from.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:36:52.366195-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleIdentityAccesscontextmanagerV1IngressSource {
  public static final String SERIALIZED_NAME_ACCESS_LEVEL = "accessLevel";
  @SerializedName(SERIALIZED_NAME_ACCESS_LEVEL)
  private String accessLevel;

  public static final String SERIALIZED_NAME_RESOURCE = "resource";
  @SerializedName(SERIALIZED_NAME_RESOURCE)
  private String resource;

  public GoogleIdentityAccesscontextmanagerV1IngressSource() {
  }

  public GoogleIdentityAccesscontextmanagerV1IngressSource accessLevel(String accessLevel) {
    this.accessLevel = accessLevel;
    return this;
  }

  /**
   * An AccessLevel resource name that allow resources within the ServicePerimeters to be accessed from the internet. AccessLevels listed must be in the same policy as this ServicePerimeter. Referencing a nonexistent AccessLevel will cause an error. If no AccessLevel names are listed, resources within the perimeter can only be accessed via Google Cloud calls with request origins within the perimeter. Example: &#x60;accessPolicies/MY_POLICY/accessLevels/MY_LEVEL&#x60;. If a single &#x60;*&#x60; is specified for &#x60;access_level&#x60;, then all IngressSources will be allowed.
   * @return accessLevel
   */
  @javax.annotation.Nullable
  public String getAccessLevel() {
    return accessLevel;
  }

  public void setAccessLevel(String accessLevel) {
    this.accessLevel = accessLevel;
  }


  public GoogleIdentityAccesscontextmanagerV1IngressSource resource(String resource) {
    this.resource = resource;
    return this;
  }

  /**
   * A Google Cloud resource that is allowed to ingress the perimeter. Requests from these resources will be allowed to access perimeter data. Currently only projects and VPCs are allowed. Project format: &#x60;projects/{project_number}&#x60; VPC network format: &#x60;//compute.googleapis.com/projects/{PROJECT_ID}/global/networks/{NAME}&#x60;. The project may be in any Google Cloud organization, not just the organization that the perimeter is defined in. &#x60;*&#x60; is not allowed, the case of allowing all Google Cloud resources only is not supported.
   * @return resource
   */
  @javax.annotation.Nullable
  public String getResource() {
    return resource;
  }

  public void setResource(String resource) {
    this.resource = resource;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleIdentityAccesscontextmanagerV1IngressSource googleIdentityAccesscontextmanagerV1IngressSource = (GoogleIdentityAccesscontextmanagerV1IngressSource) o;
    return Objects.equals(this.accessLevel, googleIdentityAccesscontextmanagerV1IngressSource.accessLevel) &&
        Objects.equals(this.resource, googleIdentityAccesscontextmanagerV1IngressSource.resource);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accessLevel, resource);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleIdentityAccesscontextmanagerV1IngressSource {\n");
    sb.append("    accessLevel: ").append(toIndentedString(accessLevel)).append("\n");
    sb.append("    resource: ").append(toIndentedString(resource)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("accessLevel");
    openapiFields.add("resource");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleIdentityAccesscontextmanagerV1IngressSource
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleIdentityAccesscontextmanagerV1IngressSource.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleIdentityAccesscontextmanagerV1IngressSource is not found in the empty JSON string", GoogleIdentityAccesscontextmanagerV1IngressSource.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleIdentityAccesscontextmanagerV1IngressSource.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleIdentityAccesscontextmanagerV1IngressSource` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("accessLevel") != null && !jsonObj.get("accessLevel").isJsonNull()) && !jsonObj.get("accessLevel").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `accessLevel` to be a primitive type in the JSON string but got `%s`", jsonObj.get("accessLevel").toString()));
      }
      if ((jsonObj.get("resource") != null && !jsonObj.get("resource").isJsonNull()) && !jsonObj.get("resource").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `resource` to be a primitive type in the JSON string but got `%s`", jsonObj.get("resource").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleIdentityAccesscontextmanagerV1IngressSource.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleIdentityAccesscontextmanagerV1IngressSource' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleIdentityAccesscontextmanagerV1IngressSource> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleIdentityAccesscontextmanagerV1IngressSource.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleIdentityAccesscontextmanagerV1IngressSource>() {
           @Override
           public void write(JsonWriter out, GoogleIdentityAccesscontextmanagerV1IngressSource value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleIdentityAccesscontextmanagerV1IngressSource read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleIdentityAccesscontextmanagerV1IngressSource given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleIdentityAccesscontextmanagerV1IngressSource
   * @throws IOException if the JSON string is invalid with respect to GoogleIdentityAccesscontextmanagerV1IngressSource
   */
  public static GoogleIdentityAccesscontextmanagerV1IngressSource fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleIdentityAccesscontextmanagerV1IngressSource.class);
  }

  /**
   * Convert an instance of GoogleIdentityAccesscontextmanagerV1IngressSource to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

