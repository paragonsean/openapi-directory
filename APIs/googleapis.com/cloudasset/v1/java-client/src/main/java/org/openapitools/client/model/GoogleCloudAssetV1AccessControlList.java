/*
 * Cloud Asset API
 * The Cloud Asset API manages the history and inventory of Google Cloud resources.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ConditionEvaluation;
import org.openapitools.client.model.GoogleCloudAssetV1Access;
import org.openapitools.client.model.GoogleCloudAssetV1Edge;
import org.openapitools.client.model.GoogleCloudAssetV1Resource;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * An access control list, derived from the above IAM policy binding, which contains a set of resources and accesses. May include one item from each set to compose an access control entry. NOTICE that there could be multiple access control lists for one IAM policy binding. The access control lists are created based on resource and access combinations. For example, assume we have the following cases in one IAM policy binding: - Permission P1 and P2 apply to resource R1 and R2; - Permission P3 applies to resource R2 and R3; This will result in the following access control lists: - AccessControlList 1: [R1, R2], [P1, P2] - AccessControlList 2: [R2, R3], [P3]
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:36:52.366195-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudAssetV1AccessControlList {
  public static final String SERIALIZED_NAME_ACCESSES = "accesses";
  @SerializedName(SERIALIZED_NAME_ACCESSES)
  private List<GoogleCloudAssetV1Access> accesses = new ArrayList<>();

  public static final String SERIALIZED_NAME_CONDITION_EVALUATION = "conditionEvaluation";
  @SerializedName(SERIALIZED_NAME_CONDITION_EVALUATION)
  private ConditionEvaluation conditionEvaluation;

  public static final String SERIALIZED_NAME_RESOURCE_EDGES = "resourceEdges";
  @SerializedName(SERIALIZED_NAME_RESOURCE_EDGES)
  private List<GoogleCloudAssetV1Edge> resourceEdges = new ArrayList<>();

  public static final String SERIALIZED_NAME_RESOURCES = "resources";
  @SerializedName(SERIALIZED_NAME_RESOURCES)
  private List<GoogleCloudAssetV1Resource> resources = new ArrayList<>();

  public GoogleCloudAssetV1AccessControlList() {
  }

  public GoogleCloudAssetV1AccessControlList accesses(List<GoogleCloudAssetV1Access> accesses) {
    this.accesses = accesses;
    return this;
  }

  public GoogleCloudAssetV1AccessControlList addAccessesItem(GoogleCloudAssetV1Access accessesItem) {
    if (this.accesses == null) {
      this.accesses = new ArrayList<>();
    }
    this.accesses.add(accessesItem);
    return this;
  }

  /**
   * The accesses that match one of the following conditions: - The access_selector, if it is specified in request; - Otherwise, access specifiers reachable from the policy binding&#39;s role.
   * @return accesses
   */
  @javax.annotation.Nullable
  public List<GoogleCloudAssetV1Access> getAccesses() {
    return accesses;
  }

  public void setAccesses(List<GoogleCloudAssetV1Access> accesses) {
    this.accesses = accesses;
  }


  public GoogleCloudAssetV1AccessControlList conditionEvaluation(ConditionEvaluation conditionEvaluation) {
    this.conditionEvaluation = conditionEvaluation;
    return this;
  }

  /**
   * Get conditionEvaluation
   * @return conditionEvaluation
   */
  @javax.annotation.Nullable
  public ConditionEvaluation getConditionEvaluation() {
    return conditionEvaluation;
  }

  public void setConditionEvaluation(ConditionEvaluation conditionEvaluation) {
    this.conditionEvaluation = conditionEvaluation;
  }


  public GoogleCloudAssetV1AccessControlList resourceEdges(List<GoogleCloudAssetV1Edge> resourceEdges) {
    this.resourceEdges = resourceEdges;
    return this;
  }

  public GoogleCloudAssetV1AccessControlList addResourceEdgesItem(GoogleCloudAssetV1Edge resourceEdgesItem) {
    if (this.resourceEdges == null) {
      this.resourceEdges = new ArrayList<>();
    }
    this.resourceEdges.add(resourceEdgesItem);
    return this;
  }

  /**
   * Resource edges of the graph starting from the policy attached resource to any descendant resources. The Edge.source_node contains the full resource name of a parent resource and Edge.target_node contains the full resource name of a child resource. This field is present only if the output_resource_edges option is enabled in request.
   * @return resourceEdges
   */
  @javax.annotation.Nullable
  public List<GoogleCloudAssetV1Edge> getResourceEdges() {
    return resourceEdges;
  }

  public void setResourceEdges(List<GoogleCloudAssetV1Edge> resourceEdges) {
    this.resourceEdges = resourceEdges;
  }


  public GoogleCloudAssetV1AccessControlList resources(List<GoogleCloudAssetV1Resource> resources) {
    this.resources = resources;
    return this;
  }

  public GoogleCloudAssetV1AccessControlList addResourcesItem(GoogleCloudAssetV1Resource resourcesItem) {
    if (this.resources == null) {
      this.resources = new ArrayList<>();
    }
    this.resources.add(resourcesItem);
    return this;
  }

  /**
   * The resources that match one of the following conditions: - The resource_selector, if it is specified in request; - Otherwise, resources reachable from the policy attached resource.
   * @return resources
   */
  @javax.annotation.Nullable
  public List<GoogleCloudAssetV1Resource> getResources() {
    return resources;
  }

  public void setResources(List<GoogleCloudAssetV1Resource> resources) {
    this.resources = resources;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudAssetV1AccessControlList googleCloudAssetV1AccessControlList = (GoogleCloudAssetV1AccessControlList) o;
    return Objects.equals(this.accesses, googleCloudAssetV1AccessControlList.accesses) &&
        Objects.equals(this.conditionEvaluation, googleCloudAssetV1AccessControlList.conditionEvaluation) &&
        Objects.equals(this.resourceEdges, googleCloudAssetV1AccessControlList.resourceEdges) &&
        Objects.equals(this.resources, googleCloudAssetV1AccessControlList.resources);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accesses, conditionEvaluation, resourceEdges, resources);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudAssetV1AccessControlList {\n");
    sb.append("    accesses: ").append(toIndentedString(accesses)).append("\n");
    sb.append("    conditionEvaluation: ").append(toIndentedString(conditionEvaluation)).append("\n");
    sb.append("    resourceEdges: ").append(toIndentedString(resourceEdges)).append("\n");
    sb.append("    resources: ").append(toIndentedString(resources)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("accesses");
    openapiFields.add("conditionEvaluation");
    openapiFields.add("resourceEdges");
    openapiFields.add("resources");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudAssetV1AccessControlList
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudAssetV1AccessControlList.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudAssetV1AccessControlList is not found in the empty JSON string", GoogleCloudAssetV1AccessControlList.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudAssetV1AccessControlList.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudAssetV1AccessControlList` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("accesses") != null && !jsonObj.get("accesses").isJsonNull()) {
        JsonArray jsonArrayaccesses = jsonObj.getAsJsonArray("accesses");
        if (jsonArrayaccesses != null) {
          // ensure the json data is an array
          if (!jsonObj.get("accesses").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `accesses` to be an array in the JSON string but got `%s`", jsonObj.get("accesses").toString()));
          }

          // validate the optional field `accesses` (array)
          for (int i = 0; i < jsonArrayaccesses.size(); i++) {
            GoogleCloudAssetV1Access.validateJsonElement(jsonArrayaccesses.get(i));
          };
        }
      }
      // validate the optional field `conditionEvaluation`
      if (jsonObj.get("conditionEvaluation") != null && !jsonObj.get("conditionEvaluation").isJsonNull()) {
        ConditionEvaluation.validateJsonElement(jsonObj.get("conditionEvaluation"));
      }
      if (jsonObj.get("resourceEdges") != null && !jsonObj.get("resourceEdges").isJsonNull()) {
        JsonArray jsonArrayresourceEdges = jsonObj.getAsJsonArray("resourceEdges");
        if (jsonArrayresourceEdges != null) {
          // ensure the json data is an array
          if (!jsonObj.get("resourceEdges").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `resourceEdges` to be an array in the JSON string but got `%s`", jsonObj.get("resourceEdges").toString()));
          }

          // validate the optional field `resourceEdges` (array)
          for (int i = 0; i < jsonArrayresourceEdges.size(); i++) {
            GoogleCloudAssetV1Edge.validateJsonElement(jsonArrayresourceEdges.get(i));
          };
        }
      }
      if (jsonObj.get("resources") != null && !jsonObj.get("resources").isJsonNull()) {
        JsonArray jsonArrayresources = jsonObj.getAsJsonArray("resources");
        if (jsonArrayresources != null) {
          // ensure the json data is an array
          if (!jsonObj.get("resources").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `resources` to be an array in the JSON string but got `%s`", jsonObj.get("resources").toString()));
          }

          // validate the optional field `resources` (array)
          for (int i = 0; i < jsonArrayresources.size(); i++) {
            GoogleCloudAssetV1Resource.validateJsonElement(jsonArrayresources.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudAssetV1AccessControlList.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudAssetV1AccessControlList' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudAssetV1AccessControlList> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudAssetV1AccessControlList.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudAssetV1AccessControlList>() {
           @Override
           public void write(JsonWriter out, GoogleCloudAssetV1AccessControlList value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudAssetV1AccessControlList read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudAssetV1AccessControlList given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudAssetV1AccessControlList
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudAssetV1AccessControlList
   */
  public static GoogleCloudAssetV1AccessControlList fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudAssetV1AccessControlList.class);
  }

  /**
   * Convert an instance of GoogleCloudAssetV1AccessControlList to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

