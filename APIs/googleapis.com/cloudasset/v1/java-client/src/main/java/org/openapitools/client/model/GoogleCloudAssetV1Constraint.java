/*
 * Cloud Asset API
 * The Cloud Asset API manages the history and inventory of Google Cloud resources.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudAssetV1ListConstraint;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The definition of a constraint.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:36:52.366195-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudAssetV1Constraint {
  public static final String SERIALIZED_NAME_BOOLEAN_CONSTRAINT = "booleanConstraint";
  @SerializedName(SERIALIZED_NAME_BOOLEAN_CONSTRAINT)
  private Object booleanConstraint;

  /**
   * The evaluation behavior of this constraint in the absence of &#39;Policy&#39;.
   */
  @JsonAdapter(ConstraintDefaultEnum.Adapter.class)
  public enum ConstraintDefaultEnum {
    CONSTRAINT_DEFAULT_UNSPECIFIED("CONSTRAINT_DEFAULT_UNSPECIFIED"),
    
    ALLOW("ALLOW"),
    
    DENY("DENY");

    private String value;

    ConstraintDefaultEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ConstraintDefaultEnum fromValue(String value) {
      for (ConstraintDefaultEnum b : ConstraintDefaultEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ConstraintDefaultEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ConstraintDefaultEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ConstraintDefaultEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ConstraintDefaultEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ConstraintDefaultEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_CONSTRAINT_DEFAULT = "constraintDefault";
  @SerializedName(SERIALIZED_NAME_CONSTRAINT_DEFAULT)
  private ConstraintDefaultEnum constraintDefault;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_LIST_CONSTRAINT = "listConstraint";
  @SerializedName(SERIALIZED_NAME_LIST_CONSTRAINT)
  private GoogleCloudAssetV1ListConstraint listConstraint;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public GoogleCloudAssetV1Constraint() {
  }

  public GoogleCloudAssetV1Constraint booleanConstraint(Object booleanConstraint) {
    this.booleanConstraint = booleanConstraint;
    return this;
  }

  /**
   * A &#x60;Constraint&#x60; that is either enforced or not. For example a constraint &#x60;constraints/compute.disableSerialPortAccess&#x60;. If it is enforced on a VM instance, serial port connections will not be opened to that instance.
   * @return booleanConstraint
   */
  @javax.annotation.Nullable
  public Object getBooleanConstraint() {
    return booleanConstraint;
  }

  public void setBooleanConstraint(Object booleanConstraint) {
    this.booleanConstraint = booleanConstraint;
  }


  public GoogleCloudAssetV1Constraint constraintDefault(ConstraintDefaultEnum constraintDefault) {
    this.constraintDefault = constraintDefault;
    return this;
  }

  /**
   * The evaluation behavior of this constraint in the absence of &#39;Policy&#39;.
   * @return constraintDefault
   */
  @javax.annotation.Nullable
  public ConstraintDefaultEnum getConstraintDefault() {
    return constraintDefault;
  }

  public void setConstraintDefault(ConstraintDefaultEnum constraintDefault) {
    this.constraintDefault = constraintDefault;
  }


  public GoogleCloudAssetV1Constraint description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Detailed description of what this &#x60;Constraint&#x60; controls as well as how and where it is enforced.
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public GoogleCloudAssetV1Constraint displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * The human readable name of the constraint.
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public GoogleCloudAssetV1Constraint listConstraint(GoogleCloudAssetV1ListConstraint listConstraint) {
    this.listConstraint = listConstraint;
    return this;
  }

  /**
   * Get listConstraint
   * @return listConstraint
   */
  @javax.annotation.Nullable
  public GoogleCloudAssetV1ListConstraint getListConstraint() {
    return listConstraint;
  }

  public void setListConstraint(GoogleCloudAssetV1ListConstraint listConstraint) {
    this.listConstraint = listConstraint;
  }


  public GoogleCloudAssetV1Constraint name(String name) {
    this.name = name;
    return this;
  }

  /**
   * The unique name of the constraint. Format of the name should be * &#x60;constraints/{constraint_name}&#x60; For example, &#x60;constraints/compute.disableSerialPortAccess&#x60;.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudAssetV1Constraint googleCloudAssetV1Constraint = (GoogleCloudAssetV1Constraint) o;
    return Objects.equals(this.booleanConstraint, googleCloudAssetV1Constraint.booleanConstraint) &&
        Objects.equals(this.constraintDefault, googleCloudAssetV1Constraint.constraintDefault) &&
        Objects.equals(this.description, googleCloudAssetV1Constraint.description) &&
        Objects.equals(this.displayName, googleCloudAssetV1Constraint.displayName) &&
        Objects.equals(this.listConstraint, googleCloudAssetV1Constraint.listConstraint) &&
        Objects.equals(this.name, googleCloudAssetV1Constraint.name);
  }

  @Override
  public int hashCode() {
    return Objects.hash(booleanConstraint, constraintDefault, description, displayName, listConstraint, name);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudAssetV1Constraint {\n");
    sb.append("    booleanConstraint: ").append(toIndentedString(booleanConstraint)).append("\n");
    sb.append("    constraintDefault: ").append(toIndentedString(constraintDefault)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    listConstraint: ").append(toIndentedString(listConstraint)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("booleanConstraint");
    openapiFields.add("constraintDefault");
    openapiFields.add("description");
    openapiFields.add("displayName");
    openapiFields.add("listConstraint");
    openapiFields.add("name");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudAssetV1Constraint
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudAssetV1Constraint.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudAssetV1Constraint is not found in the empty JSON string", GoogleCloudAssetV1Constraint.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudAssetV1Constraint.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudAssetV1Constraint` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("constraintDefault") != null && !jsonObj.get("constraintDefault").isJsonNull()) && !jsonObj.get("constraintDefault").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `constraintDefault` to be a primitive type in the JSON string but got `%s`", jsonObj.get("constraintDefault").toString()));
      }
      // validate the optional field `constraintDefault`
      if (jsonObj.get("constraintDefault") != null && !jsonObj.get("constraintDefault").isJsonNull()) {
        ConstraintDefaultEnum.validateJsonElement(jsonObj.get("constraintDefault"));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      // validate the optional field `listConstraint`
      if (jsonObj.get("listConstraint") != null && !jsonObj.get("listConstraint").isJsonNull()) {
        GoogleCloudAssetV1ListConstraint.validateJsonElement(jsonObj.get("listConstraint"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudAssetV1Constraint.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudAssetV1Constraint' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudAssetV1Constraint> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudAssetV1Constraint.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudAssetV1Constraint>() {
           @Override
           public void write(JsonWriter out, GoogleCloudAssetV1Constraint value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudAssetV1Constraint read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudAssetV1Constraint given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudAssetV1Constraint
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudAssetV1Constraint
   */
  public static GoogleCloudAssetV1Constraint fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudAssetV1Constraint.class);
  }

  /**
   * Convert an instance of GoogleCloudAssetV1Constraint to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

