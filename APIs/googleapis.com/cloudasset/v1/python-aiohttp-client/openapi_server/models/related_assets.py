# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.related_asset import RelatedAsset
from openapi_server.models.relationship_attributes import RelationshipAttributes
from openapi_server import util


class RelatedAssets(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, assets: List[RelatedAsset]=None, relationship_attributes: RelationshipAttributes=None):
        """RelatedAssets - a model defined in OpenAPI

        :param assets: The assets of this RelatedAssets.
        :param relationship_attributes: The relationship_attributes of this RelatedAssets.
        """
        self.openapi_types = {
            'assets': List[RelatedAsset],
            'relationship_attributes': RelationshipAttributes
        }

        self.attribute_map = {
            'assets': 'assets',
            'relationship_attributes': 'relationshipAttributes'
        }

        self._assets = assets
        self._relationship_attributes = relationship_attributes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RelatedAssets':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RelatedAssets of this RelatedAssets.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def assets(self):
        """Gets the assets of this RelatedAssets.

        The peer resources of the relationship.

        :return: The assets of this RelatedAssets.
        :rtype: List[RelatedAsset]
        """
        return self._assets

    @assets.setter
    def assets(self, assets):
        """Sets the assets of this RelatedAssets.

        The peer resources of the relationship.

        :param assets: The assets of this RelatedAssets.
        :type assets: List[RelatedAsset]
        """

        self._assets = assets

    @property
    def relationship_attributes(self):
        """Gets the relationship_attributes of this RelatedAssets.


        :return: The relationship_attributes of this RelatedAssets.
        :rtype: RelationshipAttributes
        """
        return self._relationship_attributes

    @relationship_attributes.setter
    def relationship_attributes(self, relationship_attributes):
        """Sets the relationship_attributes of this RelatedAssets.


        :param relationship_attributes: The relationship_attributes of this RelatedAssets.
        :type relationship_attributes: RelationshipAttributes
        """

        self._relationship_attributes = relationship_attributes
