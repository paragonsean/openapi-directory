# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.condition_evaluation import ConditionEvaluation
from openapi_server.models.google_cloud_asset_v1_access import GoogleCloudAssetV1Access
from openapi_server.models.google_cloud_asset_v1_edge import GoogleCloudAssetV1Edge
from openapi_server.models.google_cloud_asset_v1_resource import GoogleCloudAssetV1Resource
from openapi_server import util


class GoogleCloudAssetV1AccessControlList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, accesses: List[GoogleCloudAssetV1Access]=None, condition_evaluation: ConditionEvaluation=None, resource_edges: List[GoogleCloudAssetV1Edge]=None, resources: List[GoogleCloudAssetV1Resource]=None):
        """GoogleCloudAssetV1AccessControlList - a model defined in OpenAPI

        :param accesses: The accesses of this GoogleCloudAssetV1AccessControlList.
        :param condition_evaluation: The condition_evaluation of this GoogleCloudAssetV1AccessControlList.
        :param resource_edges: The resource_edges of this GoogleCloudAssetV1AccessControlList.
        :param resources: The resources of this GoogleCloudAssetV1AccessControlList.
        """
        self.openapi_types = {
            'accesses': List[GoogleCloudAssetV1Access],
            'condition_evaluation': ConditionEvaluation,
            'resource_edges': List[GoogleCloudAssetV1Edge],
            'resources': List[GoogleCloudAssetV1Resource]
        }

        self.attribute_map = {
            'accesses': 'accesses',
            'condition_evaluation': 'conditionEvaluation',
            'resource_edges': 'resourceEdges',
            'resources': 'resources'
        }

        self._accesses = accesses
        self._condition_evaluation = condition_evaluation
        self._resource_edges = resource_edges
        self._resources = resources

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAssetV1AccessControlList':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAssetV1AccessControlList of this GoogleCloudAssetV1AccessControlList.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def accesses(self):
        """Gets the accesses of this GoogleCloudAssetV1AccessControlList.

        The accesses that match one of the following conditions: - The access_selector, if it is specified in request; - Otherwise, access specifiers reachable from the policy binding's role.

        :return: The accesses of this GoogleCloudAssetV1AccessControlList.
        :rtype: List[GoogleCloudAssetV1Access]
        """
        return self._accesses

    @accesses.setter
    def accesses(self, accesses):
        """Sets the accesses of this GoogleCloudAssetV1AccessControlList.

        The accesses that match one of the following conditions: - The access_selector, if it is specified in request; - Otherwise, access specifiers reachable from the policy binding's role.

        :param accesses: The accesses of this GoogleCloudAssetV1AccessControlList.
        :type accesses: List[GoogleCloudAssetV1Access]
        """

        self._accesses = accesses

    @property
    def condition_evaluation(self):
        """Gets the condition_evaluation of this GoogleCloudAssetV1AccessControlList.


        :return: The condition_evaluation of this GoogleCloudAssetV1AccessControlList.
        :rtype: ConditionEvaluation
        """
        return self._condition_evaluation

    @condition_evaluation.setter
    def condition_evaluation(self, condition_evaluation):
        """Sets the condition_evaluation of this GoogleCloudAssetV1AccessControlList.


        :param condition_evaluation: The condition_evaluation of this GoogleCloudAssetV1AccessControlList.
        :type condition_evaluation: ConditionEvaluation
        """

        self._condition_evaluation = condition_evaluation

    @property
    def resource_edges(self):
        """Gets the resource_edges of this GoogleCloudAssetV1AccessControlList.

        Resource edges of the graph starting from the policy attached resource to any descendant resources. The Edge.source_node contains the full resource name of a parent resource and Edge.target_node contains the full resource name of a child resource. This field is present only if the output_resource_edges option is enabled in request.

        :return: The resource_edges of this GoogleCloudAssetV1AccessControlList.
        :rtype: List[GoogleCloudAssetV1Edge]
        """
        return self._resource_edges

    @resource_edges.setter
    def resource_edges(self, resource_edges):
        """Sets the resource_edges of this GoogleCloudAssetV1AccessControlList.

        Resource edges of the graph starting from the policy attached resource to any descendant resources. The Edge.source_node contains the full resource name of a parent resource and Edge.target_node contains the full resource name of a child resource. This field is present only if the output_resource_edges option is enabled in request.

        :param resource_edges: The resource_edges of this GoogleCloudAssetV1AccessControlList.
        :type resource_edges: List[GoogleCloudAssetV1Edge]
        """

        self._resource_edges = resource_edges

    @property
    def resources(self):
        """Gets the resources of this GoogleCloudAssetV1AccessControlList.

        The resources that match one of the following conditions: - The resource_selector, if it is specified in request; - Otherwise, resources reachable from the policy attached resource.

        :return: The resources of this GoogleCloudAssetV1AccessControlList.
        :rtype: List[GoogleCloudAssetV1Resource]
        """
        return self._resources

    @resources.setter
    def resources(self, resources):
        """Sets the resources of this GoogleCloudAssetV1AccessControlList.

        The resources that match one of the following conditions: - The resource_selector, if it is specified in request; - Otherwise, resources reachable from the policy attached resource.

        :param resources: The resources of this GoogleCloudAssetV1AccessControlList.
        :type resources: List[GoogleCloudAssetV1Resource]
        """

        self._resources = resources
