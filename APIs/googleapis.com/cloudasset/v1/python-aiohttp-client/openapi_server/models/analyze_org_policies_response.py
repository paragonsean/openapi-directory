# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.analyzer_org_policy_constraint import AnalyzerOrgPolicyConstraint
from openapi_server.models.org_policy_result import OrgPolicyResult
from openapi_server import util


class AnalyzeOrgPoliciesResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, constraint: AnalyzerOrgPolicyConstraint=None, next_page_token: str=None, org_policy_results: List[OrgPolicyResult]=None):
        """AnalyzeOrgPoliciesResponse - a model defined in OpenAPI

        :param constraint: The constraint of this AnalyzeOrgPoliciesResponse.
        :param next_page_token: The next_page_token of this AnalyzeOrgPoliciesResponse.
        :param org_policy_results: The org_policy_results of this AnalyzeOrgPoliciesResponse.
        """
        self.openapi_types = {
            'constraint': AnalyzerOrgPolicyConstraint,
            'next_page_token': str,
            'org_policy_results': List[OrgPolicyResult]
        }

        self.attribute_map = {
            'constraint': 'constraint',
            'next_page_token': 'nextPageToken',
            'org_policy_results': 'orgPolicyResults'
        }

        self._constraint = constraint
        self._next_page_token = next_page_token
        self._org_policy_results = org_policy_results

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AnalyzeOrgPoliciesResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AnalyzeOrgPoliciesResponse of this AnalyzeOrgPoliciesResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def constraint(self):
        """Gets the constraint of this AnalyzeOrgPoliciesResponse.


        :return: The constraint of this AnalyzeOrgPoliciesResponse.
        :rtype: AnalyzerOrgPolicyConstraint
        """
        return self._constraint

    @constraint.setter
    def constraint(self, constraint):
        """Sets the constraint of this AnalyzeOrgPoliciesResponse.


        :param constraint: The constraint of this AnalyzeOrgPoliciesResponse.
        :type constraint: AnalyzerOrgPolicyConstraint
        """

        self._constraint = constraint

    @property
    def next_page_token(self):
        """Gets the next_page_token of this AnalyzeOrgPoliciesResponse.

        The page token to fetch the next page for AnalyzeOrgPoliciesResponse.org_policy_results.

        :return: The next_page_token of this AnalyzeOrgPoliciesResponse.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this AnalyzeOrgPoliciesResponse.

        The page token to fetch the next page for AnalyzeOrgPoliciesResponse.org_policy_results.

        :param next_page_token: The next_page_token of this AnalyzeOrgPoliciesResponse.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token

    @property
    def org_policy_results(self):
        """Gets the org_policy_results of this AnalyzeOrgPoliciesResponse.

        The organization policies under the AnalyzeOrgPoliciesRequest.scope with the AnalyzeOrgPoliciesRequest.constraint.

        :return: The org_policy_results of this AnalyzeOrgPoliciesResponse.
        :rtype: List[OrgPolicyResult]
        """
        return self._org_policy_results

    @org_policy_results.setter
    def org_policy_results(self, org_policy_results):
        """Sets the org_policy_results of this AnalyzeOrgPoliciesResponse.

        The organization policies under the AnalyzeOrgPoliciesRequest.scope with the AnalyzeOrgPoliciesRequest.constraint.

        :param org_policy_results: The org_policy_results of this AnalyzeOrgPoliciesResponse.
        :type org_policy_results: List[OrgPolicyResult]
        """

        self._org_policy_results = org_policy_results
