# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.model_date import ModelDate
from openapi_server import util


class WindowsApplication(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, display_name: str=None, display_version: str=None, help_link: str=None, install_date: ModelDate=None, publisher: str=None):
        """WindowsApplication - a model defined in OpenAPI

        :param display_name: The display_name of this WindowsApplication.
        :param display_version: The display_version of this WindowsApplication.
        :param help_link: The help_link of this WindowsApplication.
        :param install_date: The install_date of this WindowsApplication.
        :param publisher: The publisher of this WindowsApplication.
        """
        self.openapi_types = {
            'display_name': str,
            'display_version': str,
            'help_link': str,
            'install_date': ModelDate,
            'publisher': str
        }

        self.attribute_map = {
            'display_name': 'displayName',
            'display_version': 'displayVersion',
            'help_link': 'helpLink',
            'install_date': 'installDate',
            'publisher': 'publisher'
        }

        self._display_name = display_name
        self._display_version = display_version
        self._help_link = help_link
        self._install_date = install_date
        self._publisher = publisher

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WindowsApplication':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The WindowsApplication of this WindowsApplication.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def display_name(self):
        """Gets the display_name of this WindowsApplication.

        The name of the application or product.

        :return: The display_name of this WindowsApplication.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this WindowsApplication.

        The name of the application or product.

        :param display_name: The display_name of this WindowsApplication.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def display_version(self):
        """Gets the display_version of this WindowsApplication.

        The version of the product or application in string format.

        :return: The display_version of this WindowsApplication.
        :rtype: str
        """
        return self._display_version

    @display_version.setter
    def display_version(self, display_version):
        """Sets the display_version of this WindowsApplication.

        The version of the product or application in string format.

        :param display_version: The display_version of this WindowsApplication.
        :type display_version: str
        """

        self._display_version = display_version

    @property
    def help_link(self):
        """Gets the help_link of this WindowsApplication.

        The internet address for technical support.

        :return: The help_link of this WindowsApplication.
        :rtype: str
        """
        return self._help_link

    @help_link.setter
    def help_link(self, help_link):
        """Sets the help_link of this WindowsApplication.

        The internet address for technical support.

        :param help_link: The help_link of this WindowsApplication.
        :type help_link: str
        """

        self._help_link = help_link

    @property
    def install_date(self):
        """Gets the install_date of this WindowsApplication.


        :return: The install_date of this WindowsApplication.
        :rtype: ModelDate
        """
        return self._install_date

    @install_date.setter
    def install_date(self, install_date):
        """Sets the install_date of this WindowsApplication.


        :param install_date: The install_date of this WindowsApplication.
        :type install_date: ModelDate
        """

        self._install_date = install_date

    @property
    def publisher(self):
        """Gets the publisher of this WindowsApplication.

        The name of the manufacturer for the product or application.

        :return: The publisher of this WindowsApplication.
        :rtype: str
        """
        return self._publisher

    @publisher.setter
    def publisher(self, publisher):
        """Sets the publisher of this WindowsApplication.

        The name of the manufacturer for the product or application.

        :param publisher: The publisher of this WindowsApplication.
        :type publisher: str
        """

        self._publisher = publisher
