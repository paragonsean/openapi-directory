# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudAssetV1QueryAssetsOutputConfigBigQueryDestination(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dataset: str=None, table: str=None, write_disposition: str=None):
        """GoogleCloudAssetV1QueryAssetsOutputConfigBigQueryDestination - a model defined in OpenAPI

        :param dataset: The dataset of this GoogleCloudAssetV1QueryAssetsOutputConfigBigQueryDestination.
        :param table: The table of this GoogleCloudAssetV1QueryAssetsOutputConfigBigQueryDestination.
        :param write_disposition: The write_disposition of this GoogleCloudAssetV1QueryAssetsOutputConfigBigQueryDestination.
        """
        self.openapi_types = {
            'dataset': str,
            'table': str,
            'write_disposition': str
        }

        self.attribute_map = {
            'dataset': 'dataset',
            'table': 'table',
            'write_disposition': 'writeDisposition'
        }

        self._dataset = dataset
        self._table = table
        self._write_disposition = write_disposition

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAssetV1QueryAssetsOutputConfigBigQueryDestination':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAssetV1QueryAssetsOutputConfigBigQueryDestination of this GoogleCloudAssetV1QueryAssetsOutputConfigBigQueryDestination.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dataset(self):
        """Gets the dataset of this GoogleCloudAssetV1QueryAssetsOutputConfigBigQueryDestination.

        Required. The BigQuery dataset where the query results will be saved. It has the format of \"projects/{projectId}/datasets/{datasetId}\".

        :return: The dataset of this GoogleCloudAssetV1QueryAssetsOutputConfigBigQueryDestination.
        :rtype: str
        """
        return self._dataset

    @dataset.setter
    def dataset(self, dataset):
        """Sets the dataset of this GoogleCloudAssetV1QueryAssetsOutputConfigBigQueryDestination.

        Required. The BigQuery dataset where the query results will be saved. It has the format of \"projects/{projectId}/datasets/{datasetId}\".

        :param dataset: The dataset of this GoogleCloudAssetV1QueryAssetsOutputConfigBigQueryDestination.
        :type dataset: str
        """

        self._dataset = dataset

    @property
    def table(self):
        """Gets the table of this GoogleCloudAssetV1QueryAssetsOutputConfigBigQueryDestination.

        Required. The BigQuery table where the query results will be saved. If this table does not exist, a new table with the given name will be created.

        :return: The table of this GoogleCloudAssetV1QueryAssetsOutputConfigBigQueryDestination.
        :rtype: str
        """
        return self._table

    @table.setter
    def table(self, table):
        """Sets the table of this GoogleCloudAssetV1QueryAssetsOutputConfigBigQueryDestination.

        Required. The BigQuery table where the query results will be saved. If this table does not exist, a new table with the given name will be created.

        :param table: The table of this GoogleCloudAssetV1QueryAssetsOutputConfigBigQueryDestination.
        :type table: str
        """

        self._table = table

    @property
    def write_disposition(self):
        """Gets the write_disposition of this GoogleCloudAssetV1QueryAssetsOutputConfigBigQueryDestination.

        Specifies the action that occurs if the destination table or partition already exists. The following values are supported: * WRITE_TRUNCATE: If the table or partition already exists, BigQuery overwrites the entire table or all the partitions data. * WRITE_APPEND: If the table or partition already exists, BigQuery appends the data to the table or the latest partition. * WRITE_EMPTY: If the table already exists and contains data, a 'duplicate' error is returned in the job result. The default value is WRITE_EMPTY.

        :return: The write_disposition of this GoogleCloudAssetV1QueryAssetsOutputConfigBigQueryDestination.
        :rtype: str
        """
        return self._write_disposition

    @write_disposition.setter
    def write_disposition(self, write_disposition):
        """Sets the write_disposition of this GoogleCloudAssetV1QueryAssetsOutputConfigBigQueryDestination.

        Specifies the action that occurs if the destination table or partition already exists. The following values are supported: * WRITE_TRUNCATE: If the table or partition already exists, BigQuery overwrites the entire table or all the partitions data. * WRITE_APPEND: If the table or partition already exists, BigQuery appends the data to the table or the latest partition. * WRITE_EMPTY: If the table already exists and contains data, a 'duplicate' error is returned in the job result. The default value is WRITE_EMPTY.

        :param write_disposition: The write_disposition of this GoogleCloudAssetV1QueryAssetsOutputConfigBigQueryDestination.
        :type write_disposition: str
        """

        self._write_disposition = write_disposition
