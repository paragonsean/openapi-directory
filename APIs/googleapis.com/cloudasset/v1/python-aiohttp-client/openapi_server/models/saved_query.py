# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.query_content import QueryContent
from openapi_server import util


class SavedQuery(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, content: QueryContent=None, create_time: str=None, creator: str=None, description: str=None, labels: Dict[str, str]=None, last_update_time: str=None, last_updater: str=None, name: str=None):
        """SavedQuery - a model defined in OpenAPI

        :param content: The content of this SavedQuery.
        :param create_time: The create_time of this SavedQuery.
        :param creator: The creator of this SavedQuery.
        :param description: The description of this SavedQuery.
        :param labels: The labels of this SavedQuery.
        :param last_update_time: The last_update_time of this SavedQuery.
        :param last_updater: The last_updater of this SavedQuery.
        :param name: The name of this SavedQuery.
        """
        self.openapi_types = {
            'content': QueryContent,
            'create_time': str,
            'creator': str,
            'description': str,
            'labels': Dict[str, str],
            'last_update_time': str,
            'last_updater': str,
            'name': str
        }

        self.attribute_map = {
            'content': 'content',
            'create_time': 'createTime',
            'creator': 'creator',
            'description': 'description',
            'labels': 'labels',
            'last_update_time': 'lastUpdateTime',
            'last_updater': 'lastUpdater',
            'name': 'name'
        }

        self._content = content
        self._create_time = create_time
        self._creator = creator
        self._description = description
        self._labels = labels
        self._last_update_time = last_update_time
        self._last_updater = last_updater
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SavedQuery':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SavedQuery of this SavedQuery.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def content(self):
        """Gets the content of this SavedQuery.


        :return: The content of this SavedQuery.
        :rtype: QueryContent
        """
        return self._content

    @content.setter
    def content(self, content):
        """Sets the content of this SavedQuery.


        :param content: The content of this SavedQuery.
        :type content: QueryContent
        """

        self._content = content

    @property
    def create_time(self):
        """Gets the create_time of this SavedQuery.

        Output only. The create time of this saved query.

        :return: The create_time of this SavedQuery.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this SavedQuery.

        Output only. The create time of this saved query.

        :param create_time: The create_time of this SavedQuery.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def creator(self):
        """Gets the creator of this SavedQuery.

        Output only. The account's email address who has created this saved query.

        :return: The creator of this SavedQuery.
        :rtype: str
        """
        return self._creator

    @creator.setter
    def creator(self, creator):
        """Sets the creator of this SavedQuery.

        Output only. The account's email address who has created this saved query.

        :param creator: The creator of this SavedQuery.
        :type creator: str
        """

        self._creator = creator

    @property
    def description(self):
        """Gets the description of this SavedQuery.

        The description of this saved query. This value should be fewer than 255 characters.

        :return: The description of this SavedQuery.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this SavedQuery.

        The description of this saved query. This value should be fewer than 255 characters.

        :param description: The description of this SavedQuery.
        :type description: str
        """

        self._description = description

    @property
    def labels(self):
        """Gets the labels of this SavedQuery.

        Labels applied on the resource. This value should not contain more than 10 entries. The key and value of each entry must be non-empty and fewer than 64 characters.

        :return: The labels of this SavedQuery.
        :rtype: Dict[str, str]
        """
        return self._labels

    @labels.setter
    def labels(self, labels):
        """Sets the labels of this SavedQuery.

        Labels applied on the resource. This value should not contain more than 10 entries. The key and value of each entry must be non-empty and fewer than 64 characters.

        :param labels: The labels of this SavedQuery.
        :type labels: Dict[str, str]
        """

        self._labels = labels

    @property
    def last_update_time(self):
        """Gets the last_update_time of this SavedQuery.

        Output only. The last update time of this saved query.

        :return: The last_update_time of this SavedQuery.
        :rtype: str
        """
        return self._last_update_time

    @last_update_time.setter
    def last_update_time(self, last_update_time):
        """Sets the last_update_time of this SavedQuery.

        Output only. The last update time of this saved query.

        :param last_update_time: The last_update_time of this SavedQuery.
        :type last_update_time: str
        """

        self._last_update_time = last_update_time

    @property
    def last_updater(self):
        """Gets the last_updater of this SavedQuery.

        Output only. The account's email address who has updated this saved query most recently.

        :return: The last_updater of this SavedQuery.
        :rtype: str
        """
        return self._last_updater

    @last_updater.setter
    def last_updater(self, last_updater):
        """Sets the last_updater of this SavedQuery.

        Output only. The account's email address who has updated this saved query most recently.

        :param last_updater: The last_updater of this SavedQuery.
        :type last_updater: str
        """

        self._last_updater = last_updater

    @property
    def name(self):
        """Gets the name of this SavedQuery.

        The resource name of the saved query. The format must be: * projects/project_number/savedQueries/saved_query_id * folders/folder_number/savedQueries/saved_query_id * organizations/organization_number/savedQueries/saved_query_id

        :return: The name of this SavedQuery.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this SavedQuery.

        The resource name of the saved query. The format must be: * projects/project_number/savedQueries/saved_query_id * folders/folder_number/savedQueries/saved_query_id * organizations/organization_number/savedQueries/saved_query_id

        :param name: The name of this SavedQuery.
        :type name: str
        """

        self._name = name
