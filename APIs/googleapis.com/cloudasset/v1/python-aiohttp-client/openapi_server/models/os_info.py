# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class OsInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, architecture: str=None, hostname: str=None, kernel_release: str=None, kernel_version: str=None, long_name: str=None, osconfig_agent_version: str=None, short_name: str=None, version: str=None):
        """OsInfo - a model defined in OpenAPI

        :param architecture: The architecture of this OsInfo.
        :param hostname: The hostname of this OsInfo.
        :param kernel_release: The kernel_release of this OsInfo.
        :param kernel_version: The kernel_version of this OsInfo.
        :param long_name: The long_name of this OsInfo.
        :param osconfig_agent_version: The osconfig_agent_version of this OsInfo.
        :param short_name: The short_name of this OsInfo.
        :param version: The version of this OsInfo.
        """
        self.openapi_types = {
            'architecture': str,
            'hostname': str,
            'kernel_release': str,
            'kernel_version': str,
            'long_name': str,
            'osconfig_agent_version': str,
            'short_name': str,
            'version': str
        }

        self.attribute_map = {
            'architecture': 'architecture',
            'hostname': 'hostname',
            'kernel_release': 'kernelRelease',
            'kernel_version': 'kernelVersion',
            'long_name': 'longName',
            'osconfig_agent_version': 'osconfigAgentVersion',
            'short_name': 'shortName',
            'version': 'version'
        }

        self._architecture = architecture
        self._hostname = hostname
        self._kernel_release = kernel_release
        self._kernel_version = kernel_version
        self._long_name = long_name
        self._osconfig_agent_version = osconfig_agent_version
        self._short_name = short_name
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OsInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OsInfo of this OsInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def architecture(self):
        """Gets the architecture of this OsInfo.

        The system architecture of the operating system.

        :return: The architecture of this OsInfo.
        :rtype: str
        """
        return self._architecture

    @architecture.setter
    def architecture(self, architecture):
        """Sets the architecture of this OsInfo.

        The system architecture of the operating system.

        :param architecture: The architecture of this OsInfo.
        :type architecture: str
        """

        self._architecture = architecture

    @property
    def hostname(self):
        """Gets the hostname of this OsInfo.

        The VM hostname.

        :return: The hostname of this OsInfo.
        :rtype: str
        """
        return self._hostname

    @hostname.setter
    def hostname(self, hostname):
        """Sets the hostname of this OsInfo.

        The VM hostname.

        :param hostname: The hostname of this OsInfo.
        :type hostname: str
        """

        self._hostname = hostname

    @property
    def kernel_release(self):
        """Gets the kernel_release of this OsInfo.

        The kernel release of the operating system.

        :return: The kernel_release of this OsInfo.
        :rtype: str
        """
        return self._kernel_release

    @kernel_release.setter
    def kernel_release(self, kernel_release):
        """Sets the kernel_release of this OsInfo.

        The kernel release of the operating system.

        :param kernel_release: The kernel_release of this OsInfo.
        :type kernel_release: str
        """

        self._kernel_release = kernel_release

    @property
    def kernel_version(self):
        """Gets the kernel_version of this OsInfo.

        The kernel version of the operating system.

        :return: The kernel_version of this OsInfo.
        :rtype: str
        """
        return self._kernel_version

    @kernel_version.setter
    def kernel_version(self, kernel_version):
        """Sets the kernel_version of this OsInfo.

        The kernel version of the operating system.

        :param kernel_version: The kernel_version of this OsInfo.
        :type kernel_version: str
        """

        self._kernel_version = kernel_version

    @property
    def long_name(self):
        """Gets the long_name of this OsInfo.

        The operating system long name. For example 'Debian GNU/Linux 9' or 'Microsoft Window Server 2019 Datacenter'.

        :return: The long_name of this OsInfo.
        :rtype: str
        """
        return self._long_name

    @long_name.setter
    def long_name(self, long_name):
        """Sets the long_name of this OsInfo.

        The operating system long name. For example 'Debian GNU/Linux 9' or 'Microsoft Window Server 2019 Datacenter'.

        :param long_name: The long_name of this OsInfo.
        :type long_name: str
        """

        self._long_name = long_name

    @property
    def osconfig_agent_version(self):
        """Gets the osconfig_agent_version of this OsInfo.

        The current version of the OS Config agent running on the VM.

        :return: The osconfig_agent_version of this OsInfo.
        :rtype: str
        """
        return self._osconfig_agent_version

    @osconfig_agent_version.setter
    def osconfig_agent_version(self, osconfig_agent_version):
        """Sets the osconfig_agent_version of this OsInfo.

        The current version of the OS Config agent running on the VM.

        :param osconfig_agent_version: The osconfig_agent_version of this OsInfo.
        :type osconfig_agent_version: str
        """

        self._osconfig_agent_version = osconfig_agent_version

    @property
    def short_name(self):
        """Gets the short_name of this OsInfo.

        The operating system short name. For example, 'windows' or 'debian'.

        :return: The short_name of this OsInfo.
        :rtype: str
        """
        return self._short_name

    @short_name.setter
    def short_name(self, short_name):
        """Sets the short_name of this OsInfo.

        The operating system short name. For example, 'windows' or 'debian'.

        :param short_name: The short_name of this OsInfo.
        :type short_name: str
        """

        self._short_name = short_name

    @property
    def version(self):
        """Gets the version of this OsInfo.

        The version of the operating system.

        :return: The version of this OsInfo.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this OsInfo.

        The version of the operating system.

        :param version: The version of this OsInfo.
        :type version: str
        """

        self._version = version
