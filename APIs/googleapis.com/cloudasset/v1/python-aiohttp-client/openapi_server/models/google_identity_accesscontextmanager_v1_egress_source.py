# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleIdentityAccesscontextmanagerV1EgressSource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, access_level: str=None):
        """GoogleIdentityAccesscontextmanagerV1EgressSource - a model defined in OpenAPI

        :param access_level: The access_level of this GoogleIdentityAccesscontextmanagerV1EgressSource.
        """
        self.openapi_types = {
            'access_level': str
        }

        self.attribute_map = {
            'access_level': 'accessLevel'
        }

        self._access_level = access_level

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleIdentityAccesscontextmanagerV1EgressSource':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleIdentityAccesscontextmanagerV1EgressSource of this GoogleIdentityAccesscontextmanagerV1EgressSource.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def access_level(self):
        """Gets the access_level of this GoogleIdentityAccesscontextmanagerV1EgressSource.

        An AccessLevel resource name that allows protected resources inside the ServicePerimeters to access outside the ServicePerimeter boundaries. AccessLevels listed must be in the same policy as this ServicePerimeter. Referencing a nonexistent AccessLevel will cause an error. If an AccessLevel name is not specified, only resources within the perimeter can be accessed through Google Cloud calls with request origins within the perimeter. Example: `accessPolicies/MY_POLICY/accessLevels/MY_LEVEL`. If a single `*` is specified for `access_level`, then all EgressSources will be allowed.

        :return: The access_level of this GoogleIdentityAccesscontextmanagerV1EgressSource.
        :rtype: str
        """
        return self._access_level

    @access_level.setter
    def access_level(self, access_level):
        """Sets the access_level of this GoogleIdentityAccesscontextmanagerV1EgressSource.

        An AccessLevel resource name that allows protected resources inside the ServicePerimeters to access outside the ServicePerimeter boundaries. AccessLevels listed must be in the same policy as this ServicePerimeter. Referencing a nonexistent AccessLevel will cause an error. If an AccessLevel name is not specified, only resources within the perimeter can be accessed through Google Cloud calls with request origins within the perimeter. Example: `accessPolicies/MY_POLICY/accessLevels/MY_LEVEL`. If a single `*` is specified for `access_level`, then all EgressSources will be allowed.

        :param access_level: The access_level of this GoogleIdentityAccesscontextmanagerV1EgressSource.
        :type access_level: str
        """

        self._access_level = access_level
