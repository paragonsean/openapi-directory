# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.software_package import SoftwarePackage
from openapi_server import util


class Item(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, available_package: SoftwarePackage=None, create_time: str=None, id: str=None, installed_package: SoftwarePackage=None, origin_type: str=None, type: str=None, update_time: str=None):
        """Item - a model defined in OpenAPI

        :param available_package: The available_package of this Item.
        :param create_time: The create_time of this Item.
        :param id: The id of this Item.
        :param installed_package: The installed_package of this Item.
        :param origin_type: The origin_type of this Item.
        :param type: The type of this Item.
        :param update_time: The update_time of this Item.
        """
        self.openapi_types = {
            'available_package': SoftwarePackage,
            'create_time': str,
            'id': str,
            'installed_package': SoftwarePackage,
            'origin_type': str,
            'type': str,
            'update_time': str
        }

        self.attribute_map = {
            'available_package': 'availablePackage',
            'create_time': 'createTime',
            'id': 'id',
            'installed_package': 'installedPackage',
            'origin_type': 'originType',
            'type': 'type',
            'update_time': 'updateTime'
        }

        self._available_package = available_package
        self._create_time = create_time
        self._id = id
        self._installed_package = installed_package
        self._origin_type = origin_type
        self._type = type
        self._update_time = update_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Item':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Item of this Item.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def available_package(self):
        """Gets the available_package of this Item.


        :return: The available_package of this Item.
        :rtype: SoftwarePackage
        """
        return self._available_package

    @available_package.setter
    def available_package(self, available_package):
        """Sets the available_package of this Item.


        :param available_package: The available_package of this Item.
        :type available_package: SoftwarePackage
        """

        self._available_package = available_package

    @property
    def create_time(self):
        """Gets the create_time of this Item.

        When this inventory item was first detected.

        :return: The create_time of this Item.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this Item.

        When this inventory item was first detected.

        :param create_time: The create_time of this Item.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def id(self):
        """Gets the id of this Item.

        Identifier for this item, unique across items for this VM.

        :return: The id of this Item.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Item.

        Identifier for this item, unique across items for this VM.

        :param id: The id of this Item.
        :type id: str
        """

        self._id = id

    @property
    def installed_package(self):
        """Gets the installed_package of this Item.


        :return: The installed_package of this Item.
        :rtype: SoftwarePackage
        """
        return self._installed_package

    @installed_package.setter
    def installed_package(self, installed_package):
        """Sets the installed_package of this Item.


        :param installed_package: The installed_package of this Item.
        :type installed_package: SoftwarePackage
        """

        self._installed_package = installed_package

    @property
    def origin_type(self):
        """Gets the origin_type of this Item.

        The origin of this inventory item.

        :return: The origin_type of this Item.
        :rtype: str
        """
        return self._origin_type

    @origin_type.setter
    def origin_type(self, origin_type):
        """Sets the origin_type of this Item.

        The origin of this inventory item.

        :param origin_type: The origin_type of this Item.
        :type origin_type: str
        """
        allowed_values = ["ORIGIN_TYPE_UNSPECIFIED", "INVENTORY_REPORT"]  # noqa: E501
        if origin_type not in allowed_values:
            raise ValueError(
                "Invalid value for `origin_type` ({0}), must be one of {1}"
                .format(origin_type, allowed_values)
            )

        self._origin_type = origin_type

    @property
    def type(self):
        """Gets the type of this Item.

        The specific type of inventory, correlating to its specific details.

        :return: The type of this Item.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this Item.

        The specific type of inventory, correlating to its specific details.

        :param type: The type of this Item.
        :type type: str
        """
        allowed_values = ["TYPE_UNSPECIFIED", "INSTALLED_PACKAGE", "AVAILABLE_PACKAGE"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type

    @property
    def update_time(self):
        """Gets the update_time of this Item.

        When this inventory item was last modified.

        :return: The update_time of this Item.
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this Item.

        When this inventory item was last modified.

        :param update_time: The update_time of this Item.
        :type update_time: str
        """

        self._update_time = update_time
