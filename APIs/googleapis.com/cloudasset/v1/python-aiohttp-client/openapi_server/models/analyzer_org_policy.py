# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_asset_v1_rule import GoogleCloudAssetV1Rule
from openapi_server import util


class AnalyzerOrgPolicy(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, applied_resource: str=None, attached_resource: str=None, inherit_from_parent: bool=None, reset: bool=None, rules: List[GoogleCloudAssetV1Rule]=None):
        """AnalyzerOrgPolicy - a model defined in OpenAPI

        :param applied_resource: The applied_resource of this AnalyzerOrgPolicy.
        :param attached_resource: The attached_resource of this AnalyzerOrgPolicy.
        :param inherit_from_parent: The inherit_from_parent of this AnalyzerOrgPolicy.
        :param reset: The reset of this AnalyzerOrgPolicy.
        :param rules: The rules of this AnalyzerOrgPolicy.
        """
        self.openapi_types = {
            'applied_resource': str,
            'attached_resource': str,
            'inherit_from_parent': bool,
            'reset': bool,
            'rules': List[GoogleCloudAssetV1Rule]
        }

        self.attribute_map = {
            'applied_resource': 'appliedResource',
            'attached_resource': 'attachedResource',
            'inherit_from_parent': 'inheritFromParent',
            'reset': 'reset',
            'rules': 'rules'
        }

        self._applied_resource = applied_resource
        self._attached_resource = attached_resource
        self._inherit_from_parent = inherit_from_parent
        self._reset = reset
        self._rules = rules

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AnalyzerOrgPolicy':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AnalyzerOrgPolicy of this AnalyzerOrgPolicy.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def applied_resource(self):
        """Gets the applied_resource of this AnalyzerOrgPolicy.

        The [full resource name] (https://cloud.google.com/asset-inventory/docs/resource-name-format) of an organization/folder/project resource where this organization policy applies to. For any user defined org policies, this field has the same value as the [attached_resource] field. Only for default policy, this field has the different value.

        :return: The applied_resource of this AnalyzerOrgPolicy.
        :rtype: str
        """
        return self._applied_resource

    @applied_resource.setter
    def applied_resource(self, applied_resource):
        """Sets the applied_resource of this AnalyzerOrgPolicy.

        The [full resource name] (https://cloud.google.com/asset-inventory/docs/resource-name-format) of an organization/folder/project resource where this organization policy applies to. For any user defined org policies, this field has the same value as the [attached_resource] field. Only for default policy, this field has the different value.

        :param applied_resource: The applied_resource of this AnalyzerOrgPolicy.
        :type applied_resource: str
        """

        self._applied_resource = applied_resource

    @property
    def attached_resource(self):
        """Gets the attached_resource of this AnalyzerOrgPolicy.

        The [full resource name] (https://cloud.google.com/asset-inventory/docs/resource-name-format) of an organization/folder/project resource where this organization policy is set. Notice that some type of constraints are defined with default policy. This field will be empty for them.

        :return: The attached_resource of this AnalyzerOrgPolicy.
        :rtype: str
        """
        return self._attached_resource

    @attached_resource.setter
    def attached_resource(self, attached_resource):
        """Sets the attached_resource of this AnalyzerOrgPolicy.

        The [full resource name] (https://cloud.google.com/asset-inventory/docs/resource-name-format) of an organization/folder/project resource where this organization policy is set. Notice that some type of constraints are defined with default policy. This field will be empty for them.

        :param attached_resource: The attached_resource of this AnalyzerOrgPolicy.
        :type attached_resource: str
        """

        self._attached_resource = attached_resource

    @property
    def inherit_from_parent(self):
        """Gets the inherit_from_parent of this AnalyzerOrgPolicy.

        If `inherit_from_parent` is true, Rules set higher up in the hierarchy (up to the closest root) are inherited and present in the effective policy. If it is false, then no rules are inherited, and this policy becomes the effective root for evaluation.

        :return: The inherit_from_parent of this AnalyzerOrgPolicy.
        :rtype: bool
        """
        return self._inherit_from_parent

    @inherit_from_parent.setter
    def inherit_from_parent(self, inherit_from_parent):
        """Sets the inherit_from_parent of this AnalyzerOrgPolicy.

        If `inherit_from_parent` is true, Rules set higher up in the hierarchy (up to the closest root) are inherited and present in the effective policy. If it is false, then no rules are inherited, and this policy becomes the effective root for evaluation.

        :param inherit_from_parent: The inherit_from_parent of this AnalyzerOrgPolicy.
        :type inherit_from_parent: bool
        """

        self._inherit_from_parent = inherit_from_parent

    @property
    def reset(self):
        """Gets the reset of this AnalyzerOrgPolicy.

        Ignores policies set above this resource and restores the default behavior of the constraint at this resource. This field can be set in policies for either list or boolean constraints. If set, `rules` must be empty and `inherit_from_parent` must be set to false.

        :return: The reset of this AnalyzerOrgPolicy.
        :rtype: bool
        """
        return self._reset

    @reset.setter
    def reset(self, reset):
        """Sets the reset of this AnalyzerOrgPolicy.

        Ignores policies set above this resource and restores the default behavior of the constraint at this resource. This field can be set in policies for either list or boolean constraints. If set, `rules` must be empty and `inherit_from_parent` must be set to false.

        :param reset: The reset of this AnalyzerOrgPolicy.
        :type reset: bool
        """

        self._reset = reset

    @property
    def rules(self):
        """Gets the rules of this AnalyzerOrgPolicy.

        List of rules for this organization policy.

        :return: The rules of this AnalyzerOrgPolicy.
        :rtype: List[GoogleCloudAssetV1Rule]
        """
        return self._rules

    @rules.setter
    def rules(self, rules):
        """Sets the rules of this AnalyzerOrgPolicy.

        List of rules for this organization policy.

        :param rules: The rules of this AnalyzerOrgPolicy.
        :type rules: List[GoogleCloudAssetV1Rule]
        """

        self._rules = rules
