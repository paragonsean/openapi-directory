# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.policy import Policy
from openapi_server import util


class PolicyInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, attached_resource: str=None, policy: Policy=None):
        """PolicyInfo - a model defined in OpenAPI

        :param attached_resource: The attached_resource of this PolicyInfo.
        :param policy: The policy of this PolicyInfo.
        """
        self.openapi_types = {
            'attached_resource': str,
            'policy': Policy
        }

        self.attribute_map = {
            'attached_resource': 'attachedResource',
            'policy': 'policy'
        }

        self._attached_resource = attached_resource
        self._policy = policy

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PolicyInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PolicyInfo of this PolicyInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def attached_resource(self):
        """Gets the attached_resource of this PolicyInfo.

        The full resource name the policy is directly attached to.

        :return: The attached_resource of this PolicyInfo.
        :rtype: str
        """
        return self._attached_resource

    @attached_resource.setter
    def attached_resource(self, attached_resource):
        """Sets the attached_resource of this PolicyInfo.

        The full resource name the policy is directly attached to.

        :param attached_resource: The attached_resource of this PolicyInfo.
        :type attached_resource: str
        """

        self._attached_resource = attached_resource

    @property
    def policy(self):
        """Gets the policy of this PolicyInfo.


        :return: The policy of this PolicyInfo.
        :rtype: Policy
        """
        return self._policy

    @policy.setter
    def policy(self, policy):
        """Sets the policy of this PolicyInfo.


        :param policy: The policy of this PolicyInfo.
        :type policy: Policy
        """

        self._policy = policy
