# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.move_analysis import MoveAnalysis
from openapi_server import util


class AnalyzeMoveResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, move_analysis: List[MoveAnalysis]=None):
        """AnalyzeMoveResponse - a model defined in OpenAPI

        :param move_analysis: The move_analysis of this AnalyzeMoveResponse.
        """
        self.openapi_types = {
            'move_analysis': List[MoveAnalysis]
        }

        self.attribute_map = {
            'move_analysis': 'moveAnalysis'
        }

        self._move_analysis = move_analysis

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AnalyzeMoveResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AnalyzeMoveResponse of this AnalyzeMoveResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def move_analysis(self):
        """Gets the move_analysis of this AnalyzeMoveResponse.

        The list of analyses returned from performing the intended resource move analysis. The analysis is grouped by different Google Cloud services.

        :return: The move_analysis of this AnalyzeMoveResponse.
        :rtype: List[MoveAnalysis]
        """
        return self._move_analysis

    @move_analysis.setter
    def move_analysis(self, move_analysis):
        """Sets the move_analysis of this AnalyzeMoveResponse.

        The list of analyses returned from performing the intended resource move analysis. The analysis is grouped by different Google Cloud services.

        :param move_analysis: The move_analysis of this AnalyzeMoveResponse.
        :type move_analysis: List[MoveAnalysis]
        """

        self._move_analysis = move_analysis
