# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_orgpolicy_v1_policy import GoogleCloudOrgpolicyV1Policy
from openapi_server.models.google_identity_accesscontextmanager_v1_access_level import GoogleIdentityAccesscontextmanagerV1AccessLevel
from openapi_server.models.google_identity_accesscontextmanager_v1_access_policy import GoogleIdentityAccesscontextmanagerV1AccessPolicy
from openapi_server.models.google_identity_accesscontextmanager_v1_service_perimeter import GoogleIdentityAccesscontextmanagerV1ServicePerimeter
from openapi_server.models.inventory import Inventory
from openapi_server.models.policy import Policy
from openapi_server.models.related_asset import RelatedAsset
from openapi_server.models.related_assets import RelatedAssets
from openapi_server.models.resource import Resource
from openapi_server import util


class Asset(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, access_level: GoogleIdentityAccesscontextmanagerV1AccessLevel=None, access_policy: GoogleIdentityAccesscontextmanagerV1AccessPolicy=None, ancestors: List[str]=None, asset_type: str=None, iam_policy: Policy=None, name: str=None, org_policy: List[GoogleCloudOrgpolicyV1Policy]=None, os_inventory: Inventory=None, related_asset: RelatedAsset=None, related_assets: RelatedAssets=None, resource: Resource=None, service_perimeter: GoogleIdentityAccesscontextmanagerV1ServicePerimeter=None, update_time: str=None):
        """Asset - a model defined in OpenAPI

        :param access_level: The access_level of this Asset.
        :param access_policy: The access_policy of this Asset.
        :param ancestors: The ancestors of this Asset.
        :param asset_type: The asset_type of this Asset.
        :param iam_policy: The iam_policy of this Asset.
        :param name: The name of this Asset.
        :param org_policy: The org_policy of this Asset.
        :param os_inventory: The os_inventory of this Asset.
        :param related_asset: The related_asset of this Asset.
        :param related_assets: The related_assets of this Asset.
        :param resource: The resource of this Asset.
        :param service_perimeter: The service_perimeter of this Asset.
        :param update_time: The update_time of this Asset.
        """
        self.openapi_types = {
            'access_level': GoogleIdentityAccesscontextmanagerV1AccessLevel,
            'access_policy': GoogleIdentityAccesscontextmanagerV1AccessPolicy,
            'ancestors': List[str],
            'asset_type': str,
            'iam_policy': Policy,
            'name': str,
            'org_policy': List[GoogleCloudOrgpolicyV1Policy],
            'os_inventory': Inventory,
            'related_asset': RelatedAsset,
            'related_assets': RelatedAssets,
            'resource': Resource,
            'service_perimeter': GoogleIdentityAccesscontextmanagerV1ServicePerimeter,
            'update_time': str
        }

        self.attribute_map = {
            'access_level': 'accessLevel',
            'access_policy': 'accessPolicy',
            'ancestors': 'ancestors',
            'asset_type': 'assetType',
            'iam_policy': 'iamPolicy',
            'name': 'name',
            'org_policy': 'orgPolicy',
            'os_inventory': 'osInventory',
            'related_asset': 'relatedAsset',
            'related_assets': 'relatedAssets',
            'resource': 'resource',
            'service_perimeter': 'servicePerimeter',
            'update_time': 'updateTime'
        }

        self._access_level = access_level
        self._access_policy = access_policy
        self._ancestors = ancestors
        self._asset_type = asset_type
        self._iam_policy = iam_policy
        self._name = name
        self._org_policy = org_policy
        self._os_inventory = os_inventory
        self._related_asset = related_asset
        self._related_assets = related_assets
        self._resource = resource
        self._service_perimeter = service_perimeter
        self._update_time = update_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Asset':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Asset of this Asset.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def access_level(self):
        """Gets the access_level of this Asset.


        :return: The access_level of this Asset.
        :rtype: GoogleIdentityAccesscontextmanagerV1AccessLevel
        """
        return self._access_level

    @access_level.setter
    def access_level(self, access_level):
        """Sets the access_level of this Asset.


        :param access_level: The access_level of this Asset.
        :type access_level: GoogleIdentityAccesscontextmanagerV1AccessLevel
        """

        self._access_level = access_level

    @property
    def access_policy(self):
        """Gets the access_policy of this Asset.


        :return: The access_policy of this Asset.
        :rtype: GoogleIdentityAccesscontextmanagerV1AccessPolicy
        """
        return self._access_policy

    @access_policy.setter
    def access_policy(self, access_policy):
        """Sets the access_policy of this Asset.


        :param access_policy: The access_policy of this Asset.
        :type access_policy: GoogleIdentityAccesscontextmanagerV1AccessPolicy
        """

        self._access_policy = access_policy

    @property
    def ancestors(self):
        """Gets the ancestors of this Asset.

        The ancestry path of an asset in Google Cloud [resource hierarchy](https://cloud.google.com/resource-manager/docs/cloud-platform-resource-hierarchy), represented as a list of relative resource names. An ancestry path starts with the closest ancestor in the hierarchy and ends at root. If the asset is a project, folder, or organization, the ancestry path starts from the asset itself. Example: `[\"projects/123456789\", \"folders/5432\", \"organizations/1234\"]`

        :return: The ancestors of this Asset.
        :rtype: List[str]
        """
        return self._ancestors

    @ancestors.setter
    def ancestors(self, ancestors):
        """Sets the ancestors of this Asset.

        The ancestry path of an asset in Google Cloud [resource hierarchy](https://cloud.google.com/resource-manager/docs/cloud-platform-resource-hierarchy), represented as a list of relative resource names. An ancestry path starts with the closest ancestor in the hierarchy and ends at root. If the asset is a project, folder, or organization, the ancestry path starts from the asset itself. Example: `[\"projects/123456789\", \"folders/5432\", \"organizations/1234\"]`

        :param ancestors: The ancestors of this Asset.
        :type ancestors: List[str]
        """

        self._ancestors = ancestors

    @property
    def asset_type(self):
        """Gets the asset_type of this Asset.

        The type of the asset. Example: `compute.googleapis.com/Disk` See [Supported asset types](https://cloud.google.com/asset-inventory/docs/supported-asset-types) for more information.

        :return: The asset_type of this Asset.
        :rtype: str
        """
        return self._asset_type

    @asset_type.setter
    def asset_type(self, asset_type):
        """Sets the asset_type of this Asset.

        The type of the asset. Example: `compute.googleapis.com/Disk` See [Supported asset types](https://cloud.google.com/asset-inventory/docs/supported-asset-types) for more information.

        :param asset_type: The asset_type of this Asset.
        :type asset_type: str
        """

        self._asset_type = asset_type

    @property
    def iam_policy(self):
        """Gets the iam_policy of this Asset.


        :return: The iam_policy of this Asset.
        :rtype: Policy
        """
        return self._iam_policy

    @iam_policy.setter
    def iam_policy(self, iam_policy):
        """Sets the iam_policy of this Asset.


        :param iam_policy: The iam_policy of this Asset.
        :type iam_policy: Policy
        """

        self._iam_policy = iam_policy

    @property
    def name(self):
        """Gets the name of this Asset.

        The full name of the asset. Example: `//compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1` See [Resource names](https://cloud.google.com/apis/design/resource_names#full_resource_name) for more information.

        :return: The name of this Asset.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Asset.

        The full name of the asset. Example: `//compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1` See [Resource names](https://cloud.google.com/apis/design/resource_names#full_resource_name) for more information.

        :param name: The name of this Asset.
        :type name: str
        """

        self._name = name

    @property
    def org_policy(self):
        """Gets the org_policy of this Asset.

        A representation of an [organization policy](https://cloud.google.com/resource-manager/docs/organization-policy/overview#organization_policy). There can be more than one organization policy with different constraints set on a given resource.

        :return: The org_policy of this Asset.
        :rtype: List[GoogleCloudOrgpolicyV1Policy]
        """
        return self._org_policy

    @org_policy.setter
    def org_policy(self, org_policy):
        """Sets the org_policy of this Asset.

        A representation of an [organization policy](https://cloud.google.com/resource-manager/docs/organization-policy/overview#organization_policy). There can be more than one organization policy with different constraints set on a given resource.

        :param org_policy: The org_policy of this Asset.
        :type org_policy: List[GoogleCloudOrgpolicyV1Policy]
        """

        self._org_policy = org_policy

    @property
    def os_inventory(self):
        """Gets the os_inventory of this Asset.


        :return: The os_inventory of this Asset.
        :rtype: Inventory
        """
        return self._os_inventory

    @os_inventory.setter
    def os_inventory(self, os_inventory):
        """Sets the os_inventory of this Asset.


        :param os_inventory: The os_inventory of this Asset.
        :type os_inventory: Inventory
        """

        self._os_inventory = os_inventory

    @property
    def related_asset(self):
        """Gets the related_asset of this Asset.


        :return: The related_asset of this Asset.
        :rtype: RelatedAsset
        """
        return self._related_asset

    @related_asset.setter
    def related_asset(self, related_asset):
        """Sets the related_asset of this Asset.


        :param related_asset: The related_asset of this Asset.
        :type related_asset: RelatedAsset
        """

        self._related_asset = related_asset

    @property
    def related_assets(self):
        """Gets the related_assets of this Asset.


        :return: The related_assets of this Asset.
        :rtype: RelatedAssets
        """
        return self._related_assets

    @related_assets.setter
    def related_assets(self, related_assets):
        """Sets the related_assets of this Asset.


        :param related_assets: The related_assets of this Asset.
        :type related_assets: RelatedAssets
        """

        self._related_assets = related_assets

    @property
    def resource(self):
        """Gets the resource of this Asset.


        :return: The resource of this Asset.
        :rtype: Resource
        """
        return self._resource

    @resource.setter
    def resource(self, resource):
        """Sets the resource of this Asset.


        :param resource: The resource of this Asset.
        :type resource: Resource
        """

        self._resource = resource

    @property
    def service_perimeter(self):
        """Gets the service_perimeter of this Asset.


        :return: The service_perimeter of this Asset.
        :rtype: GoogleIdentityAccesscontextmanagerV1ServicePerimeter
        """
        return self._service_perimeter

    @service_perimeter.setter
    def service_perimeter(self, service_perimeter):
        """Sets the service_perimeter of this Asset.


        :param service_perimeter: The service_perimeter of this Asset.
        :type service_perimeter: GoogleIdentityAccesscontextmanagerV1ServicePerimeter
        """

        self._service_perimeter = service_perimeter

    @property
    def update_time(self):
        """Gets the update_time of this Asset.

        The last update timestamp of an asset. update_time is updated when create/update/delete operation is performed.

        :return: The update_time of this Asset.
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this Asset.

        The last update timestamp of an asset. update_time is updated when create/update/delete operation is performed.

        :param update_time: The update_time of this Asset.
        :type update_time: str
        """

        self._update_time = update_time
