# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.condition_evaluation import ConditionEvaluation
from openapi_server.models.expr import Expr
from openapi_server.models.google_cloud_asset_v1_string_values import GoogleCloudAssetV1StringValues
from openapi_server import util


class GoogleCloudAssetV1Rule(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, allow_all: bool=None, condition: Expr=None, condition_evaluation: ConditionEvaluation=None, deny_all: bool=None, enforce: bool=None, values: GoogleCloudAssetV1StringValues=None):
        """GoogleCloudAssetV1Rule - a model defined in OpenAPI

        :param allow_all: The allow_all of this GoogleCloudAssetV1Rule.
        :param condition: The condition of this GoogleCloudAssetV1Rule.
        :param condition_evaluation: The condition_evaluation of this GoogleCloudAssetV1Rule.
        :param deny_all: The deny_all of this GoogleCloudAssetV1Rule.
        :param enforce: The enforce of this GoogleCloudAssetV1Rule.
        :param values: The values of this GoogleCloudAssetV1Rule.
        """
        self.openapi_types = {
            'allow_all': bool,
            'condition': Expr,
            'condition_evaluation': ConditionEvaluation,
            'deny_all': bool,
            'enforce': bool,
            'values': GoogleCloudAssetV1StringValues
        }

        self.attribute_map = {
            'allow_all': 'allowAll',
            'condition': 'condition',
            'condition_evaluation': 'conditionEvaluation',
            'deny_all': 'denyAll',
            'enforce': 'enforce',
            'values': 'values'
        }

        self._allow_all = allow_all
        self._condition = condition
        self._condition_evaluation = condition_evaluation
        self._deny_all = deny_all
        self._enforce = enforce
        self._values = values

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAssetV1Rule':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAssetV1Rule of this GoogleCloudAssetV1Rule.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allow_all(self):
        """Gets the allow_all of this GoogleCloudAssetV1Rule.

        Setting this to true means that all values are allowed. This field can be set only in Policies for list constraints.

        :return: The allow_all of this GoogleCloudAssetV1Rule.
        :rtype: bool
        """
        return self._allow_all

    @allow_all.setter
    def allow_all(self, allow_all):
        """Sets the allow_all of this GoogleCloudAssetV1Rule.

        Setting this to true means that all values are allowed. This field can be set only in Policies for list constraints.

        :param allow_all: The allow_all of this GoogleCloudAssetV1Rule.
        :type allow_all: bool
        """

        self._allow_all = allow_all

    @property
    def condition(self):
        """Gets the condition of this GoogleCloudAssetV1Rule.


        :return: The condition of this GoogleCloudAssetV1Rule.
        :rtype: Expr
        """
        return self._condition

    @condition.setter
    def condition(self, condition):
        """Sets the condition of this GoogleCloudAssetV1Rule.


        :param condition: The condition of this GoogleCloudAssetV1Rule.
        :type condition: Expr
        """

        self._condition = condition

    @property
    def condition_evaluation(self):
        """Gets the condition_evaluation of this GoogleCloudAssetV1Rule.


        :return: The condition_evaluation of this GoogleCloudAssetV1Rule.
        :rtype: ConditionEvaluation
        """
        return self._condition_evaluation

    @condition_evaluation.setter
    def condition_evaluation(self, condition_evaluation):
        """Sets the condition_evaluation of this GoogleCloudAssetV1Rule.


        :param condition_evaluation: The condition_evaluation of this GoogleCloudAssetV1Rule.
        :type condition_evaluation: ConditionEvaluation
        """

        self._condition_evaluation = condition_evaluation

    @property
    def deny_all(self):
        """Gets the deny_all of this GoogleCloudAssetV1Rule.

        Setting this to true means that all values are denied. This field can be set only in Policies for list constraints.

        :return: The deny_all of this GoogleCloudAssetV1Rule.
        :rtype: bool
        """
        return self._deny_all

    @deny_all.setter
    def deny_all(self, deny_all):
        """Sets the deny_all of this GoogleCloudAssetV1Rule.

        Setting this to true means that all values are denied. This field can be set only in Policies for list constraints.

        :param deny_all: The deny_all of this GoogleCloudAssetV1Rule.
        :type deny_all: bool
        """

        self._deny_all = deny_all

    @property
    def enforce(self):
        """Gets the enforce of this GoogleCloudAssetV1Rule.

        If `true`, then the `Policy` is enforced. If `false`, then any configuration is acceptable. This field can be set only in Policies for boolean constraints.

        :return: The enforce of this GoogleCloudAssetV1Rule.
        :rtype: bool
        """
        return self._enforce

    @enforce.setter
    def enforce(self, enforce):
        """Sets the enforce of this GoogleCloudAssetV1Rule.

        If `true`, then the `Policy` is enforced. If `false`, then any configuration is acceptable. This field can be set only in Policies for boolean constraints.

        :param enforce: The enforce of this GoogleCloudAssetV1Rule.
        :type enforce: bool
        """

        self._enforce = enforce

    @property
    def values(self):
        """Gets the values of this GoogleCloudAssetV1Rule.


        :return: The values of this GoogleCloudAssetV1Rule.
        :rtype: GoogleCloudAssetV1StringValues
        """
        return self._values

    @values.setter
    def values(self, values):
        """Sets the values of this GoogleCloudAssetV1Rule.


        :param values: The values of this GoogleCloudAssetV1Rule.
        :type values: GoogleCloudAssetV1StringValues
        """

        self._values = values
