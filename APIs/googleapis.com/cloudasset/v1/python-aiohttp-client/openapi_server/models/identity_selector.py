# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class IdentitySelector(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, identity: str=None):
        """IdentitySelector - a model defined in OpenAPI

        :param identity: The identity of this IdentitySelector.
        """
        self.openapi_types = {
            'identity': str
        }

        self.attribute_map = {
            'identity': 'identity'
        }

        self._identity = identity

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IdentitySelector':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IdentitySelector of this IdentitySelector.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def identity(self):
        """Gets the identity of this IdentitySelector.

        Required. The identity appear in the form of principals in [IAM policy binding](https://cloud.google.com/iam/reference/rest/v1/Binding). The examples of supported forms are: \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\". Notice that wildcard characters (such as * and ?) are not supported. You must give a specific identity.

        :return: The identity of this IdentitySelector.
        :rtype: str
        """
        return self._identity

    @identity.setter
    def identity(self, identity):
        """Sets the identity of this IdentitySelector.

        Required. The identity appear in the form of principals in [IAM policy binding](https://cloud.google.com/iam/reference/rest/v1/Binding). The examples of supported forms are: \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\". Notice that wildcard characters (such as * and ?) are not supported. You must give a specific identity.

        :param identity: The identity of this IdentitySelector.
        :type identity: str
        """

        self._identity = identity
