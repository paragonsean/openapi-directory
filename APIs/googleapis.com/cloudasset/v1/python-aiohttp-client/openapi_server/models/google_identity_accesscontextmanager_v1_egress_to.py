# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_identity_accesscontextmanager_v1_api_operation import GoogleIdentityAccesscontextmanagerV1ApiOperation
from openapi_server import util


class GoogleIdentityAccesscontextmanagerV1EgressTo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, external_resources: List[str]=None, operations: List[GoogleIdentityAccesscontextmanagerV1ApiOperation]=None, resources: List[str]=None):
        """GoogleIdentityAccesscontextmanagerV1EgressTo - a model defined in OpenAPI

        :param external_resources: The external_resources of this GoogleIdentityAccesscontextmanagerV1EgressTo.
        :param operations: The operations of this GoogleIdentityAccesscontextmanagerV1EgressTo.
        :param resources: The resources of this GoogleIdentityAccesscontextmanagerV1EgressTo.
        """
        self.openapi_types = {
            'external_resources': List[str],
            'operations': List[GoogleIdentityAccesscontextmanagerV1ApiOperation],
            'resources': List[str]
        }

        self.attribute_map = {
            'external_resources': 'externalResources',
            'operations': 'operations',
            'resources': 'resources'
        }

        self._external_resources = external_resources
        self._operations = operations
        self._resources = resources

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleIdentityAccesscontextmanagerV1EgressTo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleIdentityAccesscontextmanagerV1EgressTo of this GoogleIdentityAccesscontextmanagerV1EgressTo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def external_resources(self):
        """Gets the external_resources of this GoogleIdentityAccesscontextmanagerV1EgressTo.

        A list of external resources that are allowed to be accessed. Only AWS and Azure resources are supported. For Amazon S3, the supported format is s3://BUCKET_NAME. For Azure Storage, the supported format is azure://myaccount.blob.core.windows.net/CONTAINER_NAME. A request matches if it contains an external resource in this list (Example: s3://bucket/path). Currently '*' is not allowed.

        :return: The external_resources of this GoogleIdentityAccesscontextmanagerV1EgressTo.
        :rtype: List[str]
        """
        return self._external_resources

    @external_resources.setter
    def external_resources(self, external_resources):
        """Sets the external_resources of this GoogleIdentityAccesscontextmanagerV1EgressTo.

        A list of external resources that are allowed to be accessed. Only AWS and Azure resources are supported. For Amazon S3, the supported format is s3://BUCKET_NAME. For Azure Storage, the supported format is azure://myaccount.blob.core.windows.net/CONTAINER_NAME. A request matches if it contains an external resource in this list (Example: s3://bucket/path). Currently '*' is not allowed.

        :param external_resources: The external_resources of this GoogleIdentityAccesscontextmanagerV1EgressTo.
        :type external_resources: List[str]
        """

        self._external_resources = external_resources

    @property
    def operations(self):
        """Gets the operations of this GoogleIdentityAccesscontextmanagerV1EgressTo.

        A list of ApiOperations allowed to be performed by the sources specified in the corresponding EgressFrom. A request matches if it uses an operation/service in this list.

        :return: The operations of this GoogleIdentityAccesscontextmanagerV1EgressTo.
        :rtype: List[GoogleIdentityAccesscontextmanagerV1ApiOperation]
        """
        return self._operations

    @operations.setter
    def operations(self, operations):
        """Sets the operations of this GoogleIdentityAccesscontextmanagerV1EgressTo.

        A list of ApiOperations allowed to be performed by the sources specified in the corresponding EgressFrom. A request matches if it uses an operation/service in this list.

        :param operations: The operations of this GoogleIdentityAccesscontextmanagerV1EgressTo.
        :type operations: List[GoogleIdentityAccesscontextmanagerV1ApiOperation]
        """

        self._operations = operations

    @property
    def resources(self):
        """Gets the resources of this GoogleIdentityAccesscontextmanagerV1EgressTo.

        A list of resources, currently only projects in the form `projects/`, that are allowed to be accessed by sources defined in the corresponding EgressFrom. A request matches if it contains a resource in this list. If `*` is specified for `resources`, then this EgressTo rule will authorize access to all resources outside the perimeter.

        :return: The resources of this GoogleIdentityAccesscontextmanagerV1EgressTo.
        :rtype: List[str]
        """
        return self._resources

    @resources.setter
    def resources(self, resources):
        """Sets the resources of this GoogleIdentityAccesscontextmanagerV1EgressTo.

        A list of resources, currently only projects in the form `projects/`, that are allowed to be accessed by sources defined in the corresponding EgressFrom. A request matches if it contains a resource in this list. If `*` is specified for `resources`, then this EgressTo rule will authorize access to all resources outside the perimeter.

        :param resources: The resources of this GoogleIdentityAccesscontextmanagerV1EgressTo.
        :type resources: List[str]
        """

        self._resources = resources
