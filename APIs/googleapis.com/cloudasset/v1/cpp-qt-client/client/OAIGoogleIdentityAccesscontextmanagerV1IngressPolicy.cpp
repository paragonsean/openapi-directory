/**
 * Cloud Asset API
 * The Cloud Asset API manages the history and inventory of Google Cloud resources.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleIdentityAccesscontextmanagerV1IngressPolicy.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleIdentityAccesscontextmanagerV1IngressPolicy::OAIGoogleIdentityAccesscontextmanagerV1IngressPolicy(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleIdentityAccesscontextmanagerV1IngressPolicy::OAIGoogleIdentityAccesscontextmanagerV1IngressPolicy() {
    this->initializeModel();
}

OAIGoogleIdentityAccesscontextmanagerV1IngressPolicy::~OAIGoogleIdentityAccesscontextmanagerV1IngressPolicy() {}

void OAIGoogleIdentityAccesscontextmanagerV1IngressPolicy::initializeModel() {

    m_ingress_from_isSet = false;
    m_ingress_from_isValid = false;

    m_ingress_to_isSet = false;
    m_ingress_to_isValid = false;
}

void OAIGoogleIdentityAccesscontextmanagerV1IngressPolicy::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleIdentityAccesscontextmanagerV1IngressPolicy::fromJsonObject(QJsonObject json) {

    m_ingress_from_isValid = ::OpenAPI::fromJsonValue(m_ingress_from, json[QString("ingressFrom")]);
    m_ingress_from_isSet = !json[QString("ingressFrom")].isNull() && m_ingress_from_isValid;

    m_ingress_to_isValid = ::OpenAPI::fromJsonValue(m_ingress_to, json[QString("ingressTo")]);
    m_ingress_to_isSet = !json[QString("ingressTo")].isNull() && m_ingress_to_isValid;
}

QString OAIGoogleIdentityAccesscontextmanagerV1IngressPolicy::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleIdentityAccesscontextmanagerV1IngressPolicy::asJsonObject() const {
    QJsonObject obj;
    if (m_ingress_from.isSet()) {
        obj.insert(QString("ingressFrom"), ::OpenAPI::toJsonValue(m_ingress_from));
    }
    if (m_ingress_to.isSet()) {
        obj.insert(QString("ingressTo"), ::OpenAPI::toJsonValue(m_ingress_to));
    }
    return obj;
}

OAIGoogleIdentityAccesscontextmanagerV1IngressFrom OAIGoogleIdentityAccesscontextmanagerV1IngressPolicy::getIngressFrom() const {
    return m_ingress_from;
}
void OAIGoogleIdentityAccesscontextmanagerV1IngressPolicy::setIngressFrom(const OAIGoogleIdentityAccesscontextmanagerV1IngressFrom &ingress_from) {
    m_ingress_from = ingress_from;
    m_ingress_from_isSet = true;
}

bool OAIGoogleIdentityAccesscontextmanagerV1IngressPolicy::is_ingress_from_Set() const{
    return m_ingress_from_isSet;
}

bool OAIGoogleIdentityAccesscontextmanagerV1IngressPolicy::is_ingress_from_Valid() const{
    return m_ingress_from_isValid;
}

OAIGoogleIdentityAccesscontextmanagerV1IngressTo OAIGoogleIdentityAccesscontextmanagerV1IngressPolicy::getIngressTo() const {
    return m_ingress_to;
}
void OAIGoogleIdentityAccesscontextmanagerV1IngressPolicy::setIngressTo(const OAIGoogleIdentityAccesscontextmanagerV1IngressTo &ingress_to) {
    m_ingress_to = ingress_to;
    m_ingress_to_isSet = true;
}

bool OAIGoogleIdentityAccesscontextmanagerV1IngressPolicy::is_ingress_to_Set() const{
    return m_ingress_to_isSet;
}

bool OAIGoogleIdentityAccesscontextmanagerV1IngressPolicy::is_ingress_to_Valid() const{
    return m_ingress_to_isValid;
}

bool OAIGoogleIdentityAccesscontextmanagerV1IngressPolicy::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_ingress_from.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_ingress_to.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleIdentityAccesscontextmanagerV1IngressPolicy::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
