/**
 * Cloud Asset API
 * The Cloud Asset API manages the history and inventory of Google Cloud resources.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleIdentityAccesscontextmanagerV1ApiOperation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleIdentityAccesscontextmanagerV1ApiOperation::OAIGoogleIdentityAccesscontextmanagerV1ApiOperation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleIdentityAccesscontextmanagerV1ApiOperation::OAIGoogleIdentityAccesscontextmanagerV1ApiOperation() {
    this->initializeModel();
}

OAIGoogleIdentityAccesscontextmanagerV1ApiOperation::~OAIGoogleIdentityAccesscontextmanagerV1ApiOperation() {}

void OAIGoogleIdentityAccesscontextmanagerV1ApiOperation::initializeModel() {

    m_method_selectors_isSet = false;
    m_method_selectors_isValid = false;

    m_service_name_isSet = false;
    m_service_name_isValid = false;
}

void OAIGoogleIdentityAccesscontextmanagerV1ApiOperation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleIdentityAccesscontextmanagerV1ApiOperation::fromJsonObject(QJsonObject json) {

    m_method_selectors_isValid = ::OpenAPI::fromJsonValue(m_method_selectors, json[QString("methodSelectors")]);
    m_method_selectors_isSet = !json[QString("methodSelectors")].isNull() && m_method_selectors_isValid;

    m_service_name_isValid = ::OpenAPI::fromJsonValue(m_service_name, json[QString("serviceName")]);
    m_service_name_isSet = !json[QString("serviceName")].isNull() && m_service_name_isValid;
}

QString OAIGoogleIdentityAccesscontextmanagerV1ApiOperation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleIdentityAccesscontextmanagerV1ApiOperation::asJsonObject() const {
    QJsonObject obj;
    if (m_method_selectors.size() > 0) {
        obj.insert(QString("methodSelectors"), ::OpenAPI::toJsonValue(m_method_selectors));
    }
    if (m_service_name_isSet) {
        obj.insert(QString("serviceName"), ::OpenAPI::toJsonValue(m_service_name));
    }
    return obj;
}

QList<OAIGoogleIdentityAccesscontextmanagerV1MethodSelector> OAIGoogleIdentityAccesscontextmanagerV1ApiOperation::getMethodSelectors() const {
    return m_method_selectors;
}
void OAIGoogleIdentityAccesscontextmanagerV1ApiOperation::setMethodSelectors(const QList<OAIGoogleIdentityAccesscontextmanagerV1MethodSelector> &method_selectors) {
    m_method_selectors = method_selectors;
    m_method_selectors_isSet = true;
}

bool OAIGoogleIdentityAccesscontextmanagerV1ApiOperation::is_method_selectors_Set() const{
    return m_method_selectors_isSet;
}

bool OAIGoogleIdentityAccesscontextmanagerV1ApiOperation::is_method_selectors_Valid() const{
    return m_method_selectors_isValid;
}

QString OAIGoogleIdentityAccesscontextmanagerV1ApiOperation::getServiceName() const {
    return m_service_name;
}
void OAIGoogleIdentityAccesscontextmanagerV1ApiOperation::setServiceName(const QString &service_name) {
    m_service_name = service_name;
    m_service_name_isSet = true;
}

bool OAIGoogleIdentityAccesscontextmanagerV1ApiOperation::is_service_name_Set() const{
    return m_service_name_isSet;
}

bool OAIGoogleIdentityAccesscontextmanagerV1ApiOperation::is_service_name_Valid() const{
    return m_service_name_isValid;
}

bool OAIGoogleIdentityAccesscontextmanagerV1ApiOperation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_method_selectors.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleIdentityAccesscontextmanagerV1ApiOperation::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
