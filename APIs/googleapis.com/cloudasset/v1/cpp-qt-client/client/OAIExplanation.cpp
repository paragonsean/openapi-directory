/**
 * Cloud Asset API
 * The Cloud Asset API manages the history and inventory of Google Cloud resources.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIExplanation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIExplanation::OAIExplanation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIExplanation::OAIExplanation() {
    this->initializeModel();
}

OAIExplanation::~OAIExplanation() {}

void OAIExplanation::initializeModel() {

    m_matched_permissions_isSet = false;
    m_matched_permissions_isValid = false;
}

void OAIExplanation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIExplanation::fromJsonObject(QJsonObject json) {

    m_matched_permissions_isValid = ::OpenAPI::fromJsonValue(m_matched_permissions, json[QString("matchedPermissions")]);
    m_matched_permissions_isSet = !json[QString("matchedPermissions")].isNull() && m_matched_permissions_isValid;
}

QString OAIExplanation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIExplanation::asJsonObject() const {
    QJsonObject obj;
    if (m_matched_permissions.size() > 0) {
        obj.insert(QString("matchedPermissions"), ::OpenAPI::toJsonValue(m_matched_permissions));
    }
    return obj;
}

QMap<QString, OAIPermissions> OAIExplanation::getMatchedPermissions() const {
    return m_matched_permissions;
}
void OAIExplanation::setMatchedPermissions(const QMap<QString, OAIPermissions> &matched_permissions) {
    m_matched_permissions = matched_permissions;
    m_matched_permissions_isSet = true;
}

bool OAIExplanation::is_matched_permissions_Set() const{
    return m_matched_permissions_isSet;
}

bool OAIExplanation::is_matched_permissions_Valid() const{
    return m_matched_permissions_isValid;
}

bool OAIExplanation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_matched_permissions.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIExplanation::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
