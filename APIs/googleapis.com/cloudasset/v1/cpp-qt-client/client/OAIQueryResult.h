/**
 * Cloud Asset API
 * The Cloud Asset API manages the history and inventory of Google Cloud resources.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIQueryResult.h
 *
 * Execution results of the query. The result is formatted as rows represented by BigQuery compatible [schema]. When pagination is necessary, it will contains the page token to retrieve the results of following pages.
 */

#ifndef OAIQueryResult_H
#define OAIQueryResult_H

#include <QJsonObject>

#include "OAITableSchema.h"
#include <QJsonValue>
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITableSchema;

class OAIQueryResult : public OAIObject {
public:
    OAIQueryResult();
    OAIQueryResult(QString json);
    ~OAIQueryResult() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getNextPageToken() const;
    void setNextPageToken(const QString &next_page_token);
    bool is_next_page_token_Set() const;
    bool is_next_page_token_Valid() const;

    QList<QMap<QString, QJsonValue>> getRows() const;
    void setRows(const QList<QMap<QString, QJsonValue>> &rows);
    bool is_rows_Set() const;
    bool is_rows_Valid() const;

    OAITableSchema getSchema() const;
    void setSchema(const OAITableSchema &schema);
    bool is_schema_Set() const;
    bool is_schema_Valid() const;

    QString getTotalRows() const;
    void setTotalRows(const QString &total_rows);
    bool is_total_rows_Set() const;
    bool is_total_rows_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_next_page_token;
    bool m_next_page_token_isSet;
    bool m_next_page_token_isValid;

    QList<QMap<QString, QJsonValue>> m_rows;
    bool m_rows_isSet;
    bool m_rows_isValid;

    OAITableSchema m_schema;
    bool m_schema_isSet;
    bool m_schema_isValid;

    QString m_total_rows;
    bool m_total_rows_isSet;
    bool m_total_rows_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIQueryResult)

#endif // OAIQueryResult_H
