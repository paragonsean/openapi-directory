/**
 * Cloud Asset API
 * The Cloud Asset API manages the history and inventory of Google Cloud resources.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAssetV1ListConstraint.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAssetV1ListConstraint::OAIGoogleCloudAssetV1ListConstraint(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAssetV1ListConstraint::OAIGoogleCloudAssetV1ListConstraint() {
    this->initializeModel();
}

OAIGoogleCloudAssetV1ListConstraint::~OAIGoogleCloudAssetV1ListConstraint() {}

void OAIGoogleCloudAssetV1ListConstraint::initializeModel() {

    m_supports_in_isSet = false;
    m_supports_in_isValid = false;

    m_supports_under_isSet = false;
    m_supports_under_isValid = false;
}

void OAIGoogleCloudAssetV1ListConstraint::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAssetV1ListConstraint::fromJsonObject(QJsonObject json) {

    m_supports_in_isValid = ::OpenAPI::fromJsonValue(m_supports_in, json[QString("supportsIn")]);
    m_supports_in_isSet = !json[QString("supportsIn")].isNull() && m_supports_in_isValid;

    m_supports_under_isValid = ::OpenAPI::fromJsonValue(m_supports_under, json[QString("supportsUnder")]);
    m_supports_under_isSet = !json[QString("supportsUnder")].isNull() && m_supports_under_isValid;
}

QString OAIGoogleCloudAssetV1ListConstraint::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAssetV1ListConstraint::asJsonObject() const {
    QJsonObject obj;
    if (m_supports_in_isSet) {
        obj.insert(QString("supportsIn"), ::OpenAPI::toJsonValue(m_supports_in));
    }
    if (m_supports_under_isSet) {
        obj.insert(QString("supportsUnder"), ::OpenAPI::toJsonValue(m_supports_under));
    }
    return obj;
}

bool OAIGoogleCloudAssetV1ListConstraint::isSupportsIn() const {
    return m_supports_in;
}
void OAIGoogleCloudAssetV1ListConstraint::setSupportsIn(const bool &supports_in) {
    m_supports_in = supports_in;
    m_supports_in_isSet = true;
}

bool OAIGoogleCloudAssetV1ListConstraint::is_supports_in_Set() const{
    return m_supports_in_isSet;
}

bool OAIGoogleCloudAssetV1ListConstraint::is_supports_in_Valid() const{
    return m_supports_in_isValid;
}

bool OAIGoogleCloudAssetV1ListConstraint::isSupportsUnder() const {
    return m_supports_under;
}
void OAIGoogleCloudAssetV1ListConstraint::setSupportsUnder(const bool &supports_under) {
    m_supports_under = supports_under;
    m_supports_under_isSet = true;
}

bool OAIGoogleCloudAssetV1ListConstraint::is_supports_under_Set() const{
    return m_supports_under_isSet;
}

bool OAIGoogleCloudAssetV1ListConstraint::is_supports_under_Valid() const{
    return m_supports_under_isValid;
}

bool OAIGoogleCloudAssetV1ListConstraint::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_supports_in_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_supports_under_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAssetV1ListConstraint::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
