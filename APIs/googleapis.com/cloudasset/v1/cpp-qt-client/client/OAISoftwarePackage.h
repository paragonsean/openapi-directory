/**
 * Cloud Asset API
 * The Cloud Asset API manages the history and inventory of Google Cloud resources.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISoftwarePackage.h
 *
 * Software package information of the operating system.
 */

#ifndef OAISoftwarePackage_H
#define OAISoftwarePackage_H

#include <QJsonObject>

#include "OAIVersionedPackage.h"
#include "OAIWindowsApplication.h"
#include "OAIWindowsQuickFixEngineeringPackage.h"
#include "OAIWindowsUpdatePackage.h"
#include "OAIZypperPatch.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIVersionedPackage;
class OAIWindowsQuickFixEngineeringPackage;
class OAIWindowsApplication;
class OAIWindowsUpdatePackage;
class OAIZypperPatch;

class OAISoftwarePackage : public OAIObject {
public:
    OAISoftwarePackage();
    OAISoftwarePackage(QString json);
    ~OAISoftwarePackage() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIVersionedPackage getAptPackage() const;
    void setAptPackage(const OAIVersionedPackage &apt_package);
    bool is_apt_package_Set() const;
    bool is_apt_package_Valid() const;

    OAIVersionedPackage getCosPackage() const;
    void setCosPackage(const OAIVersionedPackage &cos_package);
    bool is_cos_package_Set() const;
    bool is_cos_package_Valid() const;

    OAIVersionedPackage getGoogetPackage() const;
    void setGoogetPackage(const OAIVersionedPackage &googet_package);
    bool is_googet_package_Set() const;
    bool is_googet_package_Valid() const;

    OAIWindowsQuickFixEngineeringPackage getQfePackage() const;
    void setQfePackage(const OAIWindowsQuickFixEngineeringPackage &qfe_package);
    bool is_qfe_package_Set() const;
    bool is_qfe_package_Valid() const;

    OAIWindowsApplication getWindowsApplication() const;
    void setWindowsApplication(const OAIWindowsApplication &windows_application);
    bool is_windows_application_Set() const;
    bool is_windows_application_Valid() const;

    OAIWindowsUpdatePackage getWuaPackage() const;
    void setWuaPackage(const OAIWindowsUpdatePackage &wua_package);
    bool is_wua_package_Set() const;
    bool is_wua_package_Valid() const;

    OAIVersionedPackage getYumPackage() const;
    void setYumPackage(const OAIVersionedPackage &yum_package);
    bool is_yum_package_Set() const;
    bool is_yum_package_Valid() const;

    OAIVersionedPackage getZypperPackage() const;
    void setZypperPackage(const OAIVersionedPackage &zypper_package);
    bool is_zypper_package_Set() const;
    bool is_zypper_package_Valid() const;

    OAIZypperPatch getZypperPatch() const;
    void setZypperPatch(const OAIZypperPatch &zypper_patch);
    bool is_zypper_patch_Set() const;
    bool is_zypper_patch_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIVersionedPackage m_apt_package;
    bool m_apt_package_isSet;
    bool m_apt_package_isValid;

    OAIVersionedPackage m_cos_package;
    bool m_cos_package_isSet;
    bool m_cos_package_isValid;

    OAIVersionedPackage m_googet_package;
    bool m_googet_package_isSet;
    bool m_googet_package_isValid;

    OAIWindowsQuickFixEngineeringPackage m_qfe_package;
    bool m_qfe_package_isSet;
    bool m_qfe_package_isValid;

    OAIWindowsApplication m_windows_application;
    bool m_windows_application_isSet;
    bool m_windows_application_isValid;

    OAIWindowsUpdatePackage m_wua_package;
    bool m_wua_package_isSet;
    bool m_wua_package_isValid;

    OAIVersionedPackage m_yum_package;
    bool m_yum_package_isSet;
    bool m_yum_package_isValid;

    OAIVersionedPackage m_zypper_package;
    bool m_zypper_package_isSet;
    bool m_zypper_package_isValid;

    OAIZypperPatch m_zypper_patch;
    bool m_zypper_patch_isSet;
    bool m_zypper_patch_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISoftwarePackage)

#endif // OAISoftwarePackage_H
