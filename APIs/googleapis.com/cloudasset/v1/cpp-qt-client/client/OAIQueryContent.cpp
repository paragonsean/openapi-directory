/**
 * Cloud Asset API
 * The Cloud Asset API manages the history and inventory of Google Cloud resources.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIQueryContent.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIQueryContent::OAIQueryContent(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIQueryContent::OAIQueryContent() {
    this->initializeModel();
}

OAIQueryContent::~OAIQueryContent() {}

void OAIQueryContent::initializeModel() {

    m_iam_policy_analysis_query_isSet = false;
    m_iam_policy_analysis_query_isValid = false;
}

void OAIQueryContent::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIQueryContent::fromJsonObject(QJsonObject json) {

    m_iam_policy_analysis_query_isValid = ::OpenAPI::fromJsonValue(m_iam_policy_analysis_query, json[QString("iamPolicyAnalysisQuery")]);
    m_iam_policy_analysis_query_isSet = !json[QString("iamPolicyAnalysisQuery")].isNull() && m_iam_policy_analysis_query_isValid;
}

QString OAIQueryContent::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIQueryContent::asJsonObject() const {
    QJsonObject obj;
    if (m_iam_policy_analysis_query.isSet()) {
        obj.insert(QString("iamPolicyAnalysisQuery"), ::OpenAPI::toJsonValue(m_iam_policy_analysis_query));
    }
    return obj;
}

OAIIamPolicyAnalysisQuery OAIQueryContent::getIamPolicyAnalysisQuery() const {
    return m_iam_policy_analysis_query;
}
void OAIQueryContent::setIamPolicyAnalysisQuery(const OAIIamPolicyAnalysisQuery &iam_policy_analysis_query) {
    m_iam_policy_analysis_query = iam_policy_analysis_query;
    m_iam_policy_analysis_query_isSet = true;
}

bool OAIQueryContent::is_iam_policy_analysis_query_Set() const{
    return m_iam_policy_analysis_query_isSet;
}

bool OAIQueryContent::is_iam_policy_analysis_query_Valid() const{
    return m_iam_policy_analysis_query_isValid;
}

bool OAIQueryContent::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_iam_policy_analysis_query.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIQueryContent::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
