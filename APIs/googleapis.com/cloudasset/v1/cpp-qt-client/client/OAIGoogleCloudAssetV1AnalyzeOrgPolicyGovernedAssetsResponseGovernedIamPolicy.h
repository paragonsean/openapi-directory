/**
 * Cloud Asset API
 * The Cloud Asset API manages the history and inventory of Google Cloud resources.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedIamPolicy.h
 *
 * The IAM policies governed by the organization policies of the AnalyzeOrgPolicyGovernedAssetsRequest.constraint.
 */

#ifndef OAIGoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedIamPolicy_H
#define OAIGoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedIamPolicy_H

#include <QJsonObject>

#include "OAIPolicy.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPolicy;

class OAIGoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedIamPolicy : public OAIObject {
public:
    OAIGoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedIamPolicy();
    OAIGoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedIamPolicy(QString json);
    ~OAIGoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedIamPolicy() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAssetType() const;
    void setAssetType(const QString &asset_type);
    bool is_asset_type_Set() const;
    bool is_asset_type_Valid() const;

    QString getAttachedResource() const;
    void setAttachedResource(const QString &attached_resource);
    bool is_attached_resource_Set() const;
    bool is_attached_resource_Valid() const;

    QList<QString> getFolders() const;
    void setFolders(const QList<QString> &folders);
    bool is_folders_Set() const;
    bool is_folders_Valid() const;

    QString getOrganization() const;
    void setOrganization(const QString &organization);
    bool is_organization_Set() const;
    bool is_organization_Valid() const;

    OAIPolicy getPolicy() const;
    void setPolicy(const OAIPolicy &policy);
    bool is_policy_Set() const;
    bool is_policy_Valid() const;

    QString getProject() const;
    void setProject(const QString &project);
    bool is_project_Set() const;
    bool is_project_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_asset_type;
    bool m_asset_type_isSet;
    bool m_asset_type_isValid;

    QString m_attached_resource;
    bool m_attached_resource_isSet;
    bool m_attached_resource_isValid;

    QList<QString> m_folders;
    bool m_folders_isSet;
    bool m_folders_isValid;

    QString m_organization;
    bool m_organization_isSet;
    bool m_organization_isValid;

    OAIPolicy m_policy;
    bool m_policy_isSet;
    bool m_policy_isValid;

    QString m_project;
    bool m_project_isSet;
    bool m_project_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedIamPolicy)

#endif // OAIGoogleCloudAssetV1AnalyzeOrgPolicyGovernedAssetsResponseGovernedIamPolicy_H
