openapi: 3.0.0
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: "The My Business Q&A API allows questions and answers to be posted\
    \ for specific listings. Note - If you have a quota of 0 after enabling the API,\
    \ please request for GBP API access."
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: My Business Q&A API
  version: v1
  x-apisguru-categories:
  - analytics
  - media
  x-logo:
    url: https://upload.wikimedia.org/wikipedia/commons/e/e1/YouTube_play_buttom_icon_%282013-2017%29.svg
  x-origin:
  - format: google
    url: https://mybusinessqanda.googleapis.com/$discovery/rest?version=v1
    version: v1
  x-providerName: googleapis.com
  x-serviceName: mybusinessqanda
externalDocs:
  url: https://developers.google.com/my-business/
servers:
- url: https://mybusinessqanda.googleapis.com/
tags:
- name: locations
paths:
  /v1/{name}:
    delete:
      description: Deletes a specific question written by the current user.
      operationId: mybusinessqanda_locations_questions_delete
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Required. The name of the question to delete.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: Successful response
      tags:
      - locations
      x-openapi-router-controller: openapi_server.controllers.locations_controller
    patch:
      description: Updates a specific question written by the current user.
      operationId: mybusinessqanda_locations_questions_patch
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Immutable. The unique name for the question. locations/*/questions/*
          This field will be ignored if set during question creation.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Required. The specific fields to update. Only question text can
          be updated.
        explode: true
        in: query
        name: updateMask
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Question'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
          description: Successful response
      tags:
      - locations
      x-openapi-router-controller: openapi_server.controllers.locations_controller
      x-codegen-request-body-name: body
  /v1/{name}/answers:delete:
    delete:
      description: Deletes the answer written by the current user to a question.
      operationId: mybusinessqanda_locations_questions_answers_delete
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Required. The name of the question to delete an answer for.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: Successful response
      tags:
      - locations
      x-openapi-router-controller: openapi_server.controllers.locations_controller
  /v1/{parent}:
    get:
      description: Returns the paginated list of questions and some of its answers
        for a specified location. This operation is only valid if the specified location
        is verified.
      operationId: mybusinessqanda_locations_questions_list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Required. The name of the location to fetch questions for.
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: Optional. How many answers to fetch per question. The default
          and maximum `answers_per_question` values are 10.
        explode: true
        in: query
        name: answersPerQuestion
        required: false
        schema:
          type: integer
        style: form
      - description: Optional. A filter constraining the questions to return. The
          only filter currently supported is "ignore_answered=true"
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: "Optional. The order to return the questions. Valid options include\
          \ 'update_time desc' and 'upvote_count desc', which will return the questions\
          \ sorted descendingly by the requested field. The default sort order is\
          \ 'update_time desc'."
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Optional. How many questions to fetch per page. The default and
          maximum `page_size` values are 10.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: "Optional. If specified, the next page of questions is retrieved."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListQuestionsResponse'
          description: Successful response
      tags:
      - locations
      x-openapi-router-controller: openapi_server.controllers.locations_controller
    post:
      description: Adds a question for the specified location.
      operationId: mybusinessqanda_locations_questions_create
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Required. The name of the location to write a question for.
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Question'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
          description: Successful response
      tags:
      - locations
      x-openapi-router-controller: openapi_server.controllers.locations_controller
      x-codegen-request-body-name: body
  /v1/{parent}/answers:
    get:
      description: Returns the paginated list of answers for a specified question.
      operationId: mybusinessqanda_locations_questions_answers_list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Required. The name of the question to fetch answers for.
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: "Optional. The order to return the answers. Valid options include\
          \ 'update_time desc' and 'upvote_count desc', which will return the answers\
          \ sorted descendingly by the requested field. The default sort order is\
          \ 'update_time desc'."
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Optional. How many answers to fetch per page. The default and
          maximum `page_size` values are 10.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: "Optional. If specified, the next page of answers is retrieved."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAnswersResponse'
          description: Successful response
      tags:
      - locations
      x-openapi-router-controller: openapi_server.controllers.locations_controller
  /v1/{parent}/answers:upsert:
    post:
      description: Creates an answer or updates the existing answer written by the
        user for the specified question. A user can only create one answer per question.
      operationId: mybusinessqanda_locations_questions_answers_upsert
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Required. The name of the question to write an answer for.
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertAnswerRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Answer'
          description: Successful response
      tags:
      - locations
      x-openapi-router-controller: openapi_server.controllers.locations_controller
      x-codegen-request-body-name: body
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      explode: true
      in: query
      name: $.xgafv
      required: false
      schema:
        enum:
        - "1"
        - "2"
        type: string
      style: form
    access_token:
      description: OAuth access token.
      explode: true
      in: query
      name: access_token
      required: false
      schema:
        type: string
      style: form
    alt:
      description: Data format for response.
      explode: true
      in: query
      name: alt
      required: false
      schema:
        enum:
        - json
        - media
        - proto
        type: string
      style: form
    callback:
      description: JSONP
      explode: true
      in: query
      name: callback
      required: false
      schema:
        type: string
      style: form
    fields:
      description: Selector specifying which fields to include in a partial response.
      explode: true
      in: query
      name: fields
      required: false
      schema:
        type: string
      style: form
    key:
      description: "API key. Your API key identifies your project and provides you\
        \ with API access, quota, and reports. Required unless you provide an OAuth\
        \ 2.0 token."
      explode: true
      in: query
      name: key
      required: false
      schema:
        type: string
      style: form
    oauth_token:
      description: OAuth 2.0 token for the current user.
      explode: true
      in: query
      name: oauth_token
      required: false
      schema:
        type: string
      style: form
    prettyPrint:
      description: Returns response with indentations and line breaks.
      explode: true
      in: query
      name: prettyPrint
      required: false
      schema:
        type: boolean
      style: form
    quotaUser:
      description: "Available to use for quota purposes for server-side applications.\
        \ Can be any arbitrary string assigned to a user, but should not exceed 40\
        \ characters."
      explode: true
      in: query
      name: quotaUser
      required: false
      schema:
        type: string
      style: form
    uploadType:
      description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
        )."
      explode: true
      in: query
      name: uploadType
      required: false
      schema:
        type: string
      style: form
    upload_protocol:
      description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      explode: true
      in: query
      name: upload_protocol
      required: false
      schema:
        type: string
      style: form
  schemas:
    Answer:
      description: Represents an answer to a question
      example:
        createTime: createTime
        author:
          displayName: displayName
          profilePhotoUri: profilePhotoUri
          type: AUTHOR_TYPE_UNSPECIFIED
        name: name
        updateTime: updateTime
        text: text
        upvoteCount: 0
      properties:
        author:
          $ref: '#/components/schemas/Author'
        createTime:
          description: Output only. The timestamp for when the answer was written.
            Only retrieved during ListResponse fetching.
          format: google-datetime
          readOnly: true
          title: createTime
          type: string
        name:
          description: Output only. The unique name for the answer locations/*/questions/*/answers/*
          readOnly: true
          title: name
          type: string
        text:
          description: Required. The text of the answer. It should contain at least
            one non-whitespace character. The maximum length is 4096 characters.
          title: text
          type: string
        updateTime:
          description: Output only. The timestamp for when the answer was last modified.
          format: google-datetime
          readOnly: true
          title: updateTime
          type: string
        upvoteCount:
          description: Output only. The number of upvotes for the answer.
          format: int32
          readOnly: true
          title: upvoteCount
          type: integer
      title: Answer
      type: object
    Author:
      description: Represents the author of a question or answer
      example:
        displayName: displayName
        profilePhotoUri: profilePhotoUri
        type: AUTHOR_TYPE_UNSPECIFIED
      properties:
        displayName:
          description: The display name of the user
          title: displayName
          type: string
        profilePhotoUri:
          description: The profile photo URI of the user.
          title: profilePhotoUri
          type: string
        type:
          description: The type of user the author is.
          enum:
          - AUTHOR_TYPE_UNSPECIFIED
          - REGULAR_USER
          - LOCAL_GUIDE
          - MERCHANT
          title: type
          type: string
      title: Author
      type: object
    Empty:
      description: "A generic empty message that you can re-use to avoid defining\
        \ duplicated empty messages in your APIs. A typical example is to use it as\
        \ the request or the response type of an API method. For instance: service\
        \ Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
      properties: {}
      type: object
    ListAnswersResponse:
      description: Response message for QuestionsAndAnswers.ListAnswers
      example:
        totalSize: 0
        nextPageToken: nextPageToken
        answers:
        - createTime: createTime
          author:
            displayName: displayName
            profilePhotoUri: profilePhotoUri
            type: AUTHOR_TYPE_UNSPECIFIED
          name: name
          updateTime: updateTime
          text: text
          upvoteCount: 0
        - createTime: createTime
          author:
            displayName: displayName
            profilePhotoUri: profilePhotoUri
            type: AUTHOR_TYPE_UNSPECIFIED
          name: name
          updateTime: updateTime
          text: text
          upvoteCount: 0
      properties:
        answers:
          description: The requested answers.
          items:
            $ref: '#/components/schemas/Answer'
          title: answers
          type: array
        nextPageToken:
          description: "If the number of answers exceeds the requested max page size,\
            \ this field is populated with a token to fetch the next page of answers\
            \ on a subsequent call. If there are no more answers, this field is not\
            \ present in the response."
          title: nextPageToken
          type: string
        totalSize:
          description: The total number of answers posted for this question across
            all pages.
          format: int32
          title: totalSize
          type: integer
      title: ListAnswersResponse
      type: object
    ListQuestionsResponse:
      description: Response message for QuestionsAndAnswers.ListQuestions
      example:
        totalSize: 0
        nextPageToken: nextPageToken
        questions:
        - totalAnswerCount: 6
          createTime: createTime
          author:
            displayName: displayName
            profilePhotoUri: profilePhotoUri
            type: AUTHOR_TYPE_UNSPECIFIED
          name: name
          updateTime: updateTime
          text: text
          topAnswers:
          - createTime: createTime
            author:
              displayName: displayName
              profilePhotoUri: profilePhotoUri
              type: AUTHOR_TYPE_UNSPECIFIED
            name: name
            updateTime: updateTime
            text: text
            upvoteCount: 0
          - createTime: createTime
            author:
              displayName: displayName
              profilePhotoUri: profilePhotoUri
              type: AUTHOR_TYPE_UNSPECIFIED
            name: name
            updateTime: updateTime
            text: text
            upvoteCount: 0
          upvoteCount: 1
        - totalAnswerCount: 6
          createTime: createTime
          author:
            displayName: displayName
            profilePhotoUri: profilePhotoUri
            type: AUTHOR_TYPE_UNSPECIFIED
          name: name
          updateTime: updateTime
          text: text
          topAnswers:
          - createTime: createTime
            author:
              displayName: displayName
              profilePhotoUri: profilePhotoUri
              type: AUTHOR_TYPE_UNSPECIFIED
            name: name
            updateTime: updateTime
            text: text
            upvoteCount: 0
          - createTime: createTime
            author:
              displayName: displayName
              profilePhotoUri: profilePhotoUri
              type: AUTHOR_TYPE_UNSPECIFIED
            name: name
            updateTime: updateTime
            text: text
            upvoteCount: 0
          upvoteCount: 1
      properties:
        nextPageToken:
          description: "If the number of questions exceeds the requested max page\
            \ size, this field is populated with a token to fetch the next page of\
            \ questions on a subsequent call. If there are no more questions, this\
            \ field is not present in the response."
          title: nextPageToken
          type: string
        questions:
          description: "The requested questions,"
          items:
            $ref: '#/components/schemas/Question'
          title: questions
          type: array
        totalSize:
          description: The total number of questions posted for this location across
            all pages.
          format: int32
          title: totalSize
          type: integer
      title: ListQuestionsResponse
      type: object
    Question:
      description: Represents a single question and some of its answers.
      example:
        totalAnswerCount: 6
        createTime: createTime
        author:
          displayName: displayName
          profilePhotoUri: profilePhotoUri
          type: AUTHOR_TYPE_UNSPECIFIED
        name: name
        updateTime: updateTime
        text: text
        topAnswers:
        - createTime: createTime
          author:
            displayName: displayName
            profilePhotoUri: profilePhotoUri
            type: AUTHOR_TYPE_UNSPECIFIED
          name: name
          updateTime: updateTime
          text: text
          upvoteCount: 0
        - createTime: createTime
          author:
            displayName: displayName
            profilePhotoUri: profilePhotoUri
            type: AUTHOR_TYPE_UNSPECIFIED
          name: name
          updateTime: updateTime
          text: text
          upvoteCount: 0
        upvoteCount: 1
      properties:
        author:
          $ref: '#/components/schemas/Author'
        createTime:
          description: Output only. The timestamp for when the question was written.
          format: google-datetime
          readOnly: true
          title: createTime
          type: string
        name:
          description: Immutable. The unique name for the question. locations/*/questions/*
            This field will be ignored if set during question creation.
          title: name
          type: string
        text:
          description: Required. The text of the question. It should contain at least
            three words and the total length should be greater than or equal to 10
            characters. The maximum length is 4096 characters.
          title: text
          type: string
        topAnswers:
          description: "Output only. A list of answers to the question, sorted by\
            \ upvotes. This may not be a complete list of answers depending on the\
            \ request parameters (answers_per_question)"
          items:
            $ref: '#/components/schemas/Answer'
          readOnly: true
          title: topAnswers
          type: array
        totalAnswerCount:
          description: Output only. The total number of answers posted for this question.
          format: int32
          readOnly: true
          title: totalAnswerCount
          type: integer
        updateTime:
          description: Output only. The timestamp for when the question was last modified.
          format: google-datetime
          readOnly: true
          title: updateTime
          type: string
        upvoteCount:
          description: Output only. The number of upvotes for the question.
          format: int32
          readOnly: true
          title: upvoteCount
          type: integer
      title: Question
      type: object
    UpsertAnswerRequest:
      description: Request message for QuestionsAndAnswers.UpsertAnswer
      example:
        answer:
          createTime: createTime
          author:
            displayName: displayName
            profilePhotoUri: profilePhotoUri
            type: AUTHOR_TYPE_UNSPECIFIED
          name: name
          updateTime: updateTime
          text: text
          upvoteCount: 0
      properties:
        answer:
          $ref: '#/components/schemas/Answer'
      title: UpsertAnswerRequest
      type: object
x-hasEquivalentPaths: true
