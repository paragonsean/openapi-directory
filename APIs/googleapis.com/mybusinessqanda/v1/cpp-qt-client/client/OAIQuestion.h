/**
 * My Business Q&A API
 * The My Business Q&A API allows questions and answers to be posted for specific listings. Note - If you have a quota of 0 after enabling the API, please request for GBP API access.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIQuestion.h
 *
 * Represents a single question and some of its answers.
 */

#ifndef OAIQuestion_H
#define OAIQuestion_H

#include <QJsonObject>

#include "OAIAnswer.h"
#include "OAIAuthor.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAuthor;
class OAIAnswer;

class OAIQuestion : public OAIObject {
public:
    OAIQuestion();
    OAIQuestion(QString json);
    ~OAIQuestion() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAuthor getAuthor() const;
    void setAuthor(const OAIAuthor &author);
    bool is_author_Set() const;
    bool is_author_Valid() const;

    QString getCreateTime() const;
    void setCreateTime(const QString &create_time);
    bool is_create_time_Set() const;
    bool is_create_time_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getText() const;
    void setText(const QString &text);
    bool is_text_Set() const;
    bool is_text_Valid() const;

    QList<OAIAnswer> getTopAnswers() const;
    void setTopAnswers(const QList<OAIAnswer> &top_answers);
    bool is_top_answers_Set() const;
    bool is_top_answers_Valid() const;

    qint32 getTotalAnswerCount() const;
    void setTotalAnswerCount(const qint32 &total_answer_count);
    bool is_total_answer_count_Set() const;
    bool is_total_answer_count_Valid() const;

    QString getUpdateTime() const;
    void setUpdateTime(const QString &update_time);
    bool is_update_time_Set() const;
    bool is_update_time_Valid() const;

    qint32 getUpvoteCount() const;
    void setUpvoteCount(const qint32 &upvote_count);
    bool is_upvote_count_Set() const;
    bool is_upvote_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAuthor m_author;
    bool m_author_isSet;
    bool m_author_isValid;

    QString m_create_time;
    bool m_create_time_isSet;
    bool m_create_time_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_text;
    bool m_text_isSet;
    bool m_text_isValid;

    QList<OAIAnswer> m_top_answers;
    bool m_top_answers_isSet;
    bool m_top_answers_isValid;

    qint32 m_total_answer_count;
    bool m_total_answer_count_isSet;
    bool m_total_answer_count_isValid;

    QString m_update_time;
    bool m_update_time_isSet;
    bool m_update_time_isValid;

    qint32 m_upvote_count;
    bool m_upvote_count_isSet;
    bool m_upvote_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIQuestion)

#endif // OAIQuestion_H
