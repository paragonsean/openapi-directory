# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.user_owned_drydock_note import UserOwnedDrydockNote
from openapi_server import util


class Attestor(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, etag: str=None, name: str=None, update_time: str=None, user_owned_drydock_note: UserOwnedDrydockNote=None):
        """Attestor - a model defined in OpenAPI

        :param description: The description of this Attestor.
        :param etag: The etag of this Attestor.
        :param name: The name of this Attestor.
        :param update_time: The update_time of this Attestor.
        :param user_owned_drydock_note: The user_owned_drydock_note of this Attestor.
        """
        self.openapi_types = {
            'description': str,
            'etag': str,
            'name': str,
            'update_time': str,
            'user_owned_drydock_note': UserOwnedDrydockNote
        }

        self.attribute_map = {
            'description': 'description',
            'etag': 'etag',
            'name': 'name',
            'update_time': 'updateTime',
            'user_owned_drydock_note': 'userOwnedDrydockNote'
        }

        self._description = description
        self._etag = etag
        self._name = name
        self._update_time = update_time
        self._user_owned_drydock_note = user_owned_drydock_note

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Attestor':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Attestor of this Attestor.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this Attestor.

        Optional. A descriptive comment. This field may be updated. The field may be displayed in chooser dialogs.

        :return: The description of this Attestor.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this Attestor.

        Optional. A descriptive comment. This field may be updated. The field may be displayed in chooser dialogs.

        :param description: The description of this Attestor.
        :type description: str
        """

        self._description = description

    @property
    def etag(self):
        """Gets the etag of this Attestor.

        Optional. A checksum, returned by the server, that can be sent on update requests to ensure the attestor has an up-to-date value before attempting to update it. See https://google.aip.dev/154.

        :return: The etag of this Attestor.
        :rtype: str
        """
        return self._etag

    @etag.setter
    def etag(self, etag):
        """Sets the etag of this Attestor.

        Optional. A checksum, returned by the server, that can be sent on update requests to ensure the attestor has an up-to-date value before attempting to update it. See https://google.aip.dev/154.

        :param etag: The etag of this Attestor.
        :type etag: str
        """

        self._etag = etag

    @property
    def name(self):
        """Gets the name of this Attestor.

        Required. The resource name, in the format: `projects/*/attestors/*`. This field may not be updated.

        :return: The name of this Attestor.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Attestor.

        Required. The resource name, in the format: `projects/*/attestors/*`. This field may not be updated.

        :param name: The name of this Attestor.
        :type name: str
        """

        self._name = name

    @property
    def update_time(self):
        """Gets the update_time of this Attestor.

        Output only. Time when the attestor was last updated.

        :return: The update_time of this Attestor.
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this Attestor.

        Output only. Time when the attestor was last updated.

        :param update_time: The update_time of this Attestor.
        :type update_time: str
        """

        self._update_time = update_time

    @property
    def user_owned_drydock_note(self):
        """Gets the user_owned_drydock_note of this Attestor.


        :return: The user_owned_drydock_note of this Attestor.
        :rtype: UserOwnedDrydockNote
        """
        return self._user_owned_drydock_note

    @user_owned_drydock_note.setter
    def user_owned_drydock_note(self, user_owned_drydock_note):
        """Sets the user_owned_drydock_note of this Attestor.


        :param user_owned_drydock_note: The user_owned_drydock_note of this Attestor.
        :type user_owned_drydock_note: UserOwnedDrydockNote
        """

        self._user_owned_drydock_note = user_owned_drydock_note
