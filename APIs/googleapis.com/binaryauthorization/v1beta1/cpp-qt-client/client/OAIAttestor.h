/**
 * Binary Authorization API
 * The management interface for Binary Authorization, a service that provides policy-based deployment validation and control for images deployed to Google Kubernetes Engine (GKE), Anthos Service Mesh, Anthos Clusters, and Cloud Run. 
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAttestor.h
 *
 * An attestor that attests to container image artifacts. An existing attestor cannot be modified except where indicated.
 */

#ifndef OAIAttestor_H
#define OAIAttestor_H

#include <QJsonObject>

#include "OAIUserOwnedDrydockNote.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUserOwnedDrydockNote;

class OAIAttestor : public OAIObject {
public:
    OAIAttestor();
    OAIAttestor(QString json);
    ~OAIAttestor() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getEtag() const;
    void setEtag(const QString &etag);
    bool is_etag_Set() const;
    bool is_etag_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getUpdateTime() const;
    void setUpdateTime(const QString &update_time);
    bool is_update_time_Set() const;
    bool is_update_time_Valid() const;

    OAIUserOwnedDrydockNote getUserOwnedDrydockNote() const;
    void setUserOwnedDrydockNote(const OAIUserOwnedDrydockNote &user_owned_drydock_note);
    bool is_user_owned_drydock_note_Set() const;
    bool is_user_owned_drydock_note_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_etag;
    bool m_etag_isSet;
    bool m_etag_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_update_time;
    bool m_update_time_isSet;
    bool m_update_time_isValid;

    OAIUserOwnedDrydockNote m_user_owned_drydock_note;
    bool m_user_owned_drydock_note_isSet;
    bool m_user_owned_drydock_note_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAttestor)

#endif // OAIAttestor_H
