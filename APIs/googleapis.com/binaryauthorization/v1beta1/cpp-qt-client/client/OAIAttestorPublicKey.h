/**
 * Binary Authorization API
 * The management interface for Binary Authorization, a service that provides policy-based deployment validation and control for images deployed to Google Kubernetes Engine (GKE), Anthos Service Mesh, Anthos Clusters, and Cloud Run. 
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAttestorPublicKey.h
 *
 * An attestor public key that will be used to verify attestations signed by this attestor.
 */

#ifndef OAIAttestorPublicKey_H
#define OAIAttestorPublicKey_H

#include <QJsonObject>

#include "OAIPkixPublicKey.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPkixPublicKey;

class OAIAttestorPublicKey : public OAIObject {
public:
    OAIAttestorPublicKey();
    OAIAttestorPublicKey(QString json);
    ~OAIAttestorPublicKey() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAsciiArmoredPgpPublicKey() const;
    void setAsciiArmoredPgpPublicKey(const QString &ascii_armored_pgp_public_key);
    bool is_ascii_armored_pgp_public_key_Set() const;
    bool is_ascii_armored_pgp_public_key_Valid() const;

    QString getComment() const;
    void setComment(const QString &comment);
    bool is_comment_Set() const;
    bool is_comment_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIPkixPublicKey getPkixPublicKey() const;
    void setPkixPublicKey(const OAIPkixPublicKey &pkix_public_key);
    bool is_pkix_public_key_Set() const;
    bool is_pkix_public_key_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_ascii_armored_pgp_public_key;
    bool m_ascii_armored_pgp_public_key_isSet;
    bool m_ascii_armored_pgp_public_key_isValid;

    QString m_comment;
    bool m_comment_isSet;
    bool m_comment_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIPkixPublicKey m_pkix_public_key;
    bool m_pkix_public_key_isSet;
    bool m_pkix_public_key_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAttestorPublicKey)

#endif // OAIAttestorPublicKey_H
