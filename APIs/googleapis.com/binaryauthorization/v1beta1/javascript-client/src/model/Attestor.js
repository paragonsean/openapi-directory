/**
 * Binary Authorization API
 * The management interface for Binary Authorization, a service that provides policy-based deployment validation and control for images deployed to Google Kubernetes Engine (GKE), Anthos Service Mesh, Anthos Clusters, and Cloud Run. 
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UserOwnedDrydockNote from './UserOwnedDrydockNote';

/**
 * The Attestor model module.
 * @module model/Attestor
 * @version v1beta1
 */
class Attestor {
    /**
     * Constructs a new <code>Attestor</code>.
     * An attestor that attests to container image artifacts. An existing attestor cannot be modified except where indicated.
     * @alias module:model/Attestor
     */
    constructor() { 
        
        Attestor.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Attestor</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Attestor} obj Optional instance to populate.
     * @return {module:model/Attestor} The populated <code>Attestor</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Attestor();

            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('etag')) {
                obj['etag'] = ApiClient.convertToType(data['etag'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('updateTime')) {
                obj['updateTime'] = ApiClient.convertToType(data['updateTime'], 'String');
            }
            if (data.hasOwnProperty('userOwnedDrydockNote')) {
                obj['userOwnedDrydockNote'] = UserOwnedDrydockNote.constructFromObject(data['userOwnedDrydockNote']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Attestor</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Attestor</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['etag'] && !(typeof data['etag'] === 'string' || data['etag'] instanceof String)) {
            throw new Error("Expected the field `etag` to be a primitive type in the JSON string but got " + data['etag']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['updateTime'] && !(typeof data['updateTime'] === 'string' || data['updateTime'] instanceof String)) {
            throw new Error("Expected the field `updateTime` to be a primitive type in the JSON string but got " + data['updateTime']);
        }
        // validate the optional field `userOwnedDrydockNote`
        if (data['userOwnedDrydockNote']) { // data not null
          UserOwnedDrydockNote.validateJSON(data['userOwnedDrydockNote']);
        }

        return true;
    }


}



/**
 * Optional. A descriptive comment. This field may be updated. The field may be displayed in chooser dialogs.
 * @member {String} description
 */
Attestor.prototype['description'] = undefined;

/**
 * Optional. A checksum, returned by the server, that can be sent on update requests to ensure the attestor has an up-to-date value before attempting to update it. See https://google.aip.dev/154.
 * @member {String} etag
 */
Attestor.prototype['etag'] = undefined;

/**
 * Required. The resource name, in the format: `projects/_*_/attestors/_*`. This field may not be updated.
 * @member {String} name
 */
Attestor.prototype['name'] = undefined;

/**
 * Output only. Time when the attestor was last updated.
 * @member {String} updateTime
 */
Attestor.prototype['updateTime'] = undefined;

/**
 * @member {module:model/UserOwnedDrydockNote} userOwnedDrydockNote
 */
Attestor.prototype['userOwnedDrydockNote'] = undefined;






export default Attestor;

