/**
 * Binary Authorization API
 * The management interface for Binary Authorization, a service that provides policy-based deployment validation and control for images deployed to Google Kubernetes Engine (GKE), Anthos Service Mesh, Anthos Clusters, and Cloud Run. 
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BinaryAuthorizationApi);
  }
}(this, function(expect, BinaryAuthorizationApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new BinaryAuthorizationApi.ProjectsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ProjectsApi', function() {
    describe('binaryauthorizationProjectsAttestorsCreate', function() {
      it('should call binaryauthorizationProjectsAttestorsCreate successfully', function(done) {
        //uncomment below and update the code to test binaryauthorizationProjectsAttestorsCreate
        //instance.binaryauthorizationProjectsAttestorsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('binaryauthorizationProjectsAttestorsDelete', function() {
      it('should call binaryauthorizationProjectsAttestorsDelete successfully', function(done) {
        //uncomment below and update the code to test binaryauthorizationProjectsAttestorsDelete
        //instance.binaryauthorizationProjectsAttestorsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('binaryauthorizationProjectsAttestorsList', function() {
      it('should call binaryauthorizationProjectsAttestorsList successfully', function(done) {
        //uncomment below and update the code to test binaryauthorizationProjectsAttestorsList
        //instance.binaryauthorizationProjectsAttestorsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('binaryauthorizationProjectsAttestorsUpdate', function() {
      it('should call binaryauthorizationProjectsAttestorsUpdate successfully', function(done) {
        //uncomment below and update the code to test binaryauthorizationProjectsAttestorsUpdate
        //instance.binaryauthorizationProjectsAttestorsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('binaryauthorizationProjectsAttestorsValidateAttestationOccurrence', function() {
      it('should call binaryauthorizationProjectsAttestorsValidateAttestationOccurrence successfully', function(done) {
        //uncomment below and update the code to test binaryauthorizationProjectsAttestorsValidateAttestationOccurrence
        //instance.binaryauthorizationProjectsAttestorsValidateAttestationOccurrence(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('binaryauthorizationProjectsPolicyGetIamPolicy', function() {
      it('should call binaryauthorizationProjectsPolicyGetIamPolicy successfully', function(done) {
        //uncomment below and update the code to test binaryauthorizationProjectsPolicyGetIamPolicy
        //instance.binaryauthorizationProjectsPolicyGetIamPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('binaryauthorizationProjectsPolicySetIamPolicy', function() {
      it('should call binaryauthorizationProjectsPolicySetIamPolicy successfully', function(done) {
        //uncomment below and update the code to test binaryauthorizationProjectsPolicySetIamPolicy
        //instance.binaryauthorizationProjectsPolicySetIamPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('binaryauthorizationProjectsPolicyTestIamPermissions', function() {
      it('should call binaryauthorizationProjectsPolicyTestIamPermissions successfully', function(done) {
        //uncomment below and update the code to test binaryauthorizationProjectsPolicyTestIamPermissions
        //instance.binaryauthorizationProjectsPolicyTestIamPermissions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
