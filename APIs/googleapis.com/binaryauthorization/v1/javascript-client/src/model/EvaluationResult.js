/**
 * Binary Authorization API
 * The management interface for Binary Authorization, a service that provides policy-based deployment validation and control for images deployed to Google Kubernetes Engine (GKE), Anthos Service Mesh, Anthos Clusters, and Cloud Run. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The EvaluationResult model module.
 * @module model/EvaluationResult
 * @version v1
 */
class EvaluationResult {
    /**
     * Constructs a new <code>EvaluationResult</code>.
     * Result of evaluating one check.
     * @alias module:model/EvaluationResult
     */
    constructor() { 
        
        EvaluationResult.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EvaluationResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EvaluationResult} obj Optional instance to populate.
     * @return {module:model/EvaluationResult} The populated <code>EvaluationResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EvaluationResult();

            if (data.hasOwnProperty('verdict')) {
                obj['verdict'] = ApiClient.convertToType(data['verdict'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EvaluationResult</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EvaluationResult</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['verdict'] && !(typeof data['verdict'] === 'string' || data['verdict'] instanceof String)) {
            throw new Error("Expected the field `verdict` to be a primitive type in the JSON string but got " + data['verdict']);
        }

        return true;
    }


}



/**
 * The result of evaluating this check.
 * @member {module:model/EvaluationResult.VerdictEnum} verdict
 */
EvaluationResult.prototype['verdict'] = undefined;





/**
 * Allowed values for the <code>verdict</code> property.
 * @enum {String}
 * @readonly
 */
EvaluationResult['VerdictEnum'] = {

    /**
     * value: "CHECK_VERDICT_UNSPECIFIED"
     * @const
     */
    "CHECK_VERDICT_UNSPECIFIED": "CHECK_VERDICT_UNSPECIFIED",

    /**
     * value: "CONFORMANT"
     * @const
     */
    "CONFORMANT": "CONFORMANT",

    /**
     * value: "NON_CONFORMANT"
     * @const
     */
    "NON_CONFORMANT": "NON_CONFORMANT",

    /**
     * value: "ERROR"
     * @const
     */
    "ERROR": "ERROR"
};



export default EvaluationResult;

