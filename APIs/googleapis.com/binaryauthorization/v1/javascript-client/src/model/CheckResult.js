/**
 * Binary Authorization API
 * The management interface for Binary Authorization, a service that provides policy-based deployment validation and control for images deployed to Google Kubernetes Engine (GKE), Anthos Service Mesh, Anthos Clusters, and Cloud Run. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AllowlistResult from './AllowlistResult';
import EvaluationResult from './EvaluationResult';

/**
 * The CheckResult model module.
 * @module model/CheckResult
 * @version v1
 */
class CheckResult {
    /**
     * Constructs a new <code>CheckResult</code>.
     * Result of evaluating one check.
     * @alias module:model/CheckResult
     */
    constructor() { 
        
        CheckResult.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CheckResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CheckResult} obj Optional instance to populate.
     * @return {module:model/CheckResult} The populated <code>CheckResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CheckResult();

            if (data.hasOwnProperty('allowlistResult')) {
                obj['allowlistResult'] = AllowlistResult.constructFromObject(data['allowlistResult']);
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('evaluationResult')) {
                obj['evaluationResult'] = EvaluationResult.constructFromObject(data['evaluationResult']);
            }
            if (data.hasOwnProperty('explanation')) {
                obj['explanation'] = ApiClient.convertToType(data['explanation'], 'String');
            }
            if (data.hasOwnProperty('index')) {
                obj['index'] = ApiClient.convertToType(data['index'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CheckResult</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CheckResult</code>.
     */
    static validateJSON(data) {
        // validate the optional field `allowlistResult`
        if (data['allowlistResult']) { // data not null
          AllowlistResult.validateJSON(data['allowlistResult']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // validate the optional field `evaluationResult`
        if (data['evaluationResult']) { // data not null
          EvaluationResult.validateJSON(data['evaluationResult']);
        }
        // ensure the json data is a string
        if (data['explanation'] && !(typeof data['explanation'] === 'string' || data['explanation'] instanceof String)) {
            throw new Error("Expected the field `explanation` to be a primitive type in the JSON string but got " + data['explanation']);
        }
        // ensure the json data is a string
        if (data['index'] && !(typeof data['index'] === 'string' || data['index'] instanceof String)) {
            throw new Error("Expected the field `index` to be a primitive type in the JSON string but got " + data['index']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * @member {module:model/AllowlistResult} allowlistResult
 */
CheckResult.prototype['allowlistResult'] = undefined;

/**
 * The name of the check.
 * @member {String} displayName
 */
CheckResult.prototype['displayName'] = undefined;

/**
 * @member {module:model/EvaluationResult} evaluationResult
 */
CheckResult.prototype['evaluationResult'] = undefined;

/**
 * Explanation of this check result.
 * @member {String} explanation
 */
CheckResult.prototype['explanation'] = undefined;

/**
 * The index of the check.
 * @member {String} index
 */
CheckResult.prototype['index'] = undefined;

/**
 * The type of the check.
 * @member {String} type
 */
CheckResult.prototype['type'] = undefined;






export default CheckResult;

