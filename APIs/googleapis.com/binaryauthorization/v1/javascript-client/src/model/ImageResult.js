/**
 * Binary Authorization API
 * The management interface for Binary Authorization, a service that provides policy-based deployment validation and control for images deployed to Google Kubernetes Engine (GKE), Anthos Service Mesh, Anthos Clusters, and Cloud Run. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AllowlistResult from './AllowlistResult';
import CheckSetResult from './CheckSetResult';

/**
 * The ImageResult model module.
 * @module model/ImageResult
 * @version v1
 */
class ImageResult {
    /**
     * Constructs a new <code>ImageResult</code>.
     * Result of evaluating one image.
     * @alias module:model/ImageResult
     */
    constructor() { 
        
        ImageResult.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ImageResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ImageResult} obj Optional instance to populate.
     * @return {module:model/ImageResult} The populated <code>ImageResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ImageResult();

            if (data.hasOwnProperty('allowlistResult')) {
                obj['allowlistResult'] = AllowlistResult.constructFromObject(data['allowlistResult']);
            }
            if (data.hasOwnProperty('checkSetResult')) {
                obj['checkSetResult'] = CheckSetResult.constructFromObject(data['checkSetResult']);
            }
            if (data.hasOwnProperty('explanation')) {
                obj['explanation'] = ApiClient.convertToType(data['explanation'], 'String');
            }
            if (data.hasOwnProperty('imageUri')) {
                obj['imageUri'] = ApiClient.convertToType(data['imageUri'], 'String');
            }
            if (data.hasOwnProperty('verdict')) {
                obj['verdict'] = ApiClient.convertToType(data['verdict'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ImageResult</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ImageResult</code>.
     */
    static validateJSON(data) {
        // validate the optional field `allowlistResult`
        if (data['allowlistResult']) { // data not null
          AllowlistResult.validateJSON(data['allowlistResult']);
        }
        // validate the optional field `checkSetResult`
        if (data['checkSetResult']) { // data not null
          CheckSetResult.validateJSON(data['checkSetResult']);
        }
        // ensure the json data is a string
        if (data['explanation'] && !(typeof data['explanation'] === 'string' || data['explanation'] instanceof String)) {
            throw new Error("Expected the field `explanation` to be a primitive type in the JSON string but got " + data['explanation']);
        }
        // ensure the json data is a string
        if (data['imageUri'] && !(typeof data['imageUri'] === 'string' || data['imageUri'] instanceof String)) {
            throw new Error("Expected the field `imageUri` to be a primitive type in the JSON string but got " + data['imageUri']);
        }
        // ensure the json data is a string
        if (data['verdict'] && !(typeof data['verdict'] === 'string' || data['verdict'] instanceof String)) {
            throw new Error("Expected the field `verdict` to be a primitive type in the JSON string but got " + data['verdict']);
        }

        return true;
    }


}



/**
 * @member {module:model/AllowlistResult} allowlistResult
 */
ImageResult.prototype['allowlistResult'] = undefined;

/**
 * @member {module:model/CheckSetResult} checkSetResult
 */
ImageResult.prototype['checkSetResult'] = undefined;

/**
 * Explanation of this image result. Only populated if no check sets were evaluated.
 * @member {String} explanation
 */
ImageResult.prototype['explanation'] = undefined;

/**
 * Image URI from the request.
 * @member {String} imageUri
 */
ImageResult.prototype['imageUri'] = undefined;

/**
 * The result of evaluating this image.
 * @member {module:model/ImageResult.VerdictEnum} verdict
 */
ImageResult.prototype['verdict'] = undefined;





/**
 * Allowed values for the <code>verdict</code> property.
 * @enum {String}
 * @readonly
 */
ImageResult['VerdictEnum'] = {

    /**
     * value: "IMAGE_VERDICT_UNSPECIFIED"
     * @const
     */
    "IMAGE_VERDICT_UNSPECIFIED": "IMAGE_VERDICT_UNSPECIFIED",

    /**
     * value: "CONFORMANT"
     * @const
     */
    "CONFORMANT": "CONFORMANT",

    /**
     * value: "NON_CONFORMANT"
     * @const
     */
    "NON_CONFORMANT": "NON_CONFORMANT",

    /**
     * value: "ERROR"
     * @const
     */
    "ERROR": "ERROR"
};



export default ImageResult;

