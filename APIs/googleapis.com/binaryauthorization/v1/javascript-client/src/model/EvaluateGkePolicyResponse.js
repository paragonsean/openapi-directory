/**
 * Binary Authorization API
 * The management interface for Binary Authorization, a service that provides policy-based deployment validation and control for images deployed to Google Kubernetes Engine (GKE), Anthos Service Mesh, Anthos Clusters, and Cloud Run. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PodResult from './PodResult';

/**
 * The EvaluateGkePolicyResponse model module.
 * @module model/EvaluateGkePolicyResponse
 * @version v1
 */
class EvaluateGkePolicyResponse {
    /**
     * Constructs a new <code>EvaluateGkePolicyResponse</code>.
     * Response message for PlatformPolicyEvaluationService.EvaluateGkePolicy.
     * @alias module:model/EvaluateGkePolicyResponse
     */
    constructor() { 
        
        EvaluateGkePolicyResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EvaluateGkePolicyResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EvaluateGkePolicyResponse} obj Optional instance to populate.
     * @return {module:model/EvaluateGkePolicyResponse} The populated <code>EvaluateGkePolicyResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EvaluateGkePolicyResponse();

            if (data.hasOwnProperty('results')) {
                obj['results'] = ApiClient.convertToType(data['results'], [PodResult]);
            }
            if (data.hasOwnProperty('verdict')) {
                obj['verdict'] = ApiClient.convertToType(data['verdict'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EvaluateGkePolicyResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EvaluateGkePolicyResponse</code>.
     */
    static validateJSON(data) {
        if (data['results']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['results'])) {
                throw new Error("Expected the field `results` to be an array in the JSON data but got " + data['results']);
            }
            // validate the optional field `results` (array)
            for (const item of data['results']) {
                PodResult.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['verdict'] && !(typeof data['verdict'] === 'string' || data['verdict'] instanceof String)) {
            throw new Error("Expected the field `verdict` to be a primitive type in the JSON string but got " + data['verdict']);
        }

        return true;
    }


}



/**
 * Evaluation result for each Pod contained in the request.
 * @member {Array.<module:model/PodResult>} results
 */
EvaluateGkePolicyResponse.prototype['results'] = undefined;

/**
 * The result of evaluating all Pods in the request.
 * @member {module:model/EvaluateGkePolicyResponse.VerdictEnum} verdict
 */
EvaluateGkePolicyResponse.prototype['verdict'] = undefined;





/**
 * Allowed values for the <code>verdict</code> property.
 * @enum {String}
 * @readonly
 */
EvaluateGkePolicyResponse['VerdictEnum'] = {

    /**
     * value: "VERDICT_UNSPECIFIED"
     * @const
     */
    "VERDICT_UNSPECIFIED": "VERDICT_UNSPECIFIED",

    /**
     * value: "CONFORMANT"
     * @const
     */
    "CONFORMANT": "CONFORMANT",

    /**
     * value: "NON_CONFORMANT"
     * @const
     */
    "NON_CONFORMANT": "NON_CONFORMANT",

    /**
     * value: "ERROR"
     * @const
     */
    "ERROR": "ERROR"
};



export default EvaluateGkePolicyResponse;

