/**
 * Binary Authorization API
 * The management interface for Binary Authorization, a service that provides policy-based deployment validation and control for images deployed to Google Kubernetes Engine (GKE), Anthos Service Mesh, Anthos Clusters, and Cloud Run. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TrustedDirectoryCheck model module.
 * @module model/TrustedDirectoryCheck
 * @version v1
 */
class TrustedDirectoryCheck {
    /**
     * Constructs a new <code>TrustedDirectoryCheck</code>.
     * A trusted directory check, which rejects images that do not come from the set of user-configured trusted directories.
     * @alias module:model/TrustedDirectoryCheck
     */
    constructor() { 
        
        TrustedDirectoryCheck.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TrustedDirectoryCheck</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TrustedDirectoryCheck} obj Optional instance to populate.
     * @return {module:model/TrustedDirectoryCheck} The populated <code>TrustedDirectoryCheck</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TrustedDirectoryCheck();

            if (data.hasOwnProperty('trustedDirPatterns')) {
                obj['trustedDirPatterns'] = ApiClient.convertToType(data['trustedDirPatterns'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TrustedDirectoryCheck</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TrustedDirectoryCheck</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['trustedDirPatterns'])) {
            throw new Error("Expected the field `trustedDirPatterns` to be an array in the JSON data but got " + data['trustedDirPatterns']);
        }

        return true;
    }


}



/**
 * Required. List of trusted directory patterns. A pattern is in the form \"registry/path/to/directory\". The registry domain part is defined as two or more dot-separated words, e.g., `us.pkg.dev`, or `gcr.io`. Additionally, `*` can be used in three ways as wildcards: 1. leading `*` to match varying prefixes in registry subdomain (useful for location prefixes); 2. trailing `*` after registry/ to match varying endings; 3. trailing `**` after registry/ to match \"/\" as well. For example: -- `gcr.io/my-project/my-repo` is valid to match a single directory -- `*-docker.pkg.dev/my-project/my-repo` or `*.gcr.io/my-project` are valid to match varying prefixes -- `gcr.io/my-project/_*` will match all direct directories in `my-project` -- `gcr.io/my-project/_**` would match all directories in `my-project` -- `gcr.i*` is not allowed since the registry is not completely specified -- `sub*domain.gcr.io/nginx` is not valid because only leading `*` or trailing `*` are allowed. -- `*pkg.dev/my-project/my-repo` is not valid because leading `*` can only match subdomain -- `**-docker.pkg.dev` is not valid because one leading `*` is allowed, and that it cannot match `/`
 * @member {Array.<String>} trustedDirPatterns
 */
TrustedDirectoryCheck.prototype['trustedDirPatterns'] = undefined;






export default TrustedDirectoryCheck;

