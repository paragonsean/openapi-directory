# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AllowlistResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, matched_pattern: str=None):
        """AllowlistResult - a model defined in OpenAPI

        :param matched_pattern: The matched_pattern of this AllowlistResult.
        """
        self.openapi_types = {
            'matched_pattern': str
        }

        self.attribute_map = {
            'matched_pattern': 'matchedPattern'
        }

        self._matched_pattern = matched_pattern

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AllowlistResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AllowlistResult of this AllowlistResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def matched_pattern(self):
        """Gets the matched_pattern of this AllowlistResult.

        The allowlist pattern that the image matched.

        :return: The matched_pattern of this AllowlistResult.
        :rtype: str
        """
        return self._matched_pattern

    @matched_pattern.setter
    def matched_pattern(self, matched_pattern):
        """Sets the matched_pattern of this AllowlistResult.

        The allowlist pattern that the image matched.

        :param matched_pattern: The matched_pattern of this AllowlistResult.
        :type matched_pattern: str
        """

        self._matched_pattern = matched_pattern
