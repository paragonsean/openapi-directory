# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EvaluateGkePolicyRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, resource: Dict[str, object]=None):
        """EvaluateGkePolicyRequest - a model defined in OpenAPI

        :param resource: The resource of this EvaluateGkePolicyRequest.
        """
        self.openapi_types = {
            'resource': Dict[str, object]
        }

        self.attribute_map = {
            'resource': 'resource'
        }

        self._resource = resource

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EvaluateGkePolicyRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EvaluateGkePolicyRequest of this EvaluateGkePolicyRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def resource(self):
        """Gets the resource of this EvaluateGkePolicyRequest.

        Required. JSON or YAML blob representing a Kubernetes resource.

        :return: The resource of this EvaluateGkePolicyRequest.
        :rtype: Dict[str, object]
        """
        return self._resource

    @resource.setter
    def resource(self, resource):
        """Sets the resource of this EvaluateGkePolicyRequest.

        Required. JSON or YAML blob representing a Kubernetes resource.

        :param resource: The resource of this EvaluateGkePolicyRequest.
        :type resource: Dict[str, object]
        """

        self._resource = resource
