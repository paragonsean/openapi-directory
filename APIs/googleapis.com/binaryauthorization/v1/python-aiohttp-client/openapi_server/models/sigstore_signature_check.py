# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.sigstore_authority import SigstoreAuthority
from openapi_server import util


class SigstoreSignatureCheck(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, sigstore_authorities: List[SigstoreAuthority]=None):
        """SigstoreSignatureCheck - a model defined in OpenAPI

        :param sigstore_authorities: The sigstore_authorities of this SigstoreSignatureCheck.
        """
        self.openapi_types = {
            'sigstore_authorities': List[SigstoreAuthority]
        }

        self.attribute_map = {
            'sigstore_authorities': 'sigstoreAuthorities'
        }

        self._sigstore_authorities = sigstore_authorities

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SigstoreSignatureCheck':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SigstoreSignatureCheck of this SigstoreSignatureCheck.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def sigstore_authorities(self):
        """Gets the sigstore_authorities of this SigstoreSignatureCheck.

        Required. The authorities required by this check to verify the signature. A signature only needs to be verified by one authority to pass the check.

        :return: The sigstore_authorities of this SigstoreSignatureCheck.
        :rtype: List[SigstoreAuthority]
        """
        return self._sigstore_authorities

    @sigstore_authorities.setter
    def sigstore_authorities(self, sigstore_authorities):
        """Sets the sigstore_authorities of this SigstoreSignatureCheck.

        Required. The authorities required by this check to verify the signature. A signature only needs to be verified by one authority to pass the check.

        :param sigstore_authorities: The sigstore_authorities of this SigstoreSignatureCheck.
        :type sigstore_authorities: List[SigstoreAuthority]
        """

        self._sigstore_authorities = sigstore_authorities
