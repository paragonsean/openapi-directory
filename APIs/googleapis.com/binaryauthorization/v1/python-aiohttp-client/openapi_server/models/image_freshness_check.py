# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ImageFreshnessCheck(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, max_upload_age_days: int=None):
        """ImageFreshnessCheck - a model defined in OpenAPI

        :param max_upload_age_days: The max_upload_age_days of this ImageFreshnessCheck.
        """
        self.openapi_types = {
            'max_upload_age_days': int
        }

        self.attribute_map = {
            'max_upload_age_days': 'maxUploadAgeDays'
        }

        self._max_upload_age_days = max_upload_age_days

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ImageFreshnessCheck':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ImageFreshnessCheck of this ImageFreshnessCheck.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def max_upload_age_days(self):
        """Gets the max_upload_age_days of this ImageFreshnessCheck.

        Required. The max number of days that is allowed since the image was uploaded. Must be greater than zero.

        :return: The max_upload_age_days of this ImageFreshnessCheck.
        :rtype: int
        """
        return self._max_upload_age_days

    @max_upload_age_days.setter
    def max_upload_age_days(self, max_upload_age_days):
        """Sets the max_upload_age_days of this ImageFreshnessCheck.

        Required. The max number of days that is allowed since the image was uploaded. Must be greater than zero.

        :param max_upload_age_days: The max_upload_age_days of this ImageFreshnessCheck.
        :type max_upload_age_days: int
        """

        self._max_upload_age_days = max_upload_age_days
