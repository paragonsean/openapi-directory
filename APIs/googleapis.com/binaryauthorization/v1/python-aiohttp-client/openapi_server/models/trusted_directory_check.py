# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TrustedDirectoryCheck(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, trusted_dir_patterns: List[str]=None):
        """TrustedDirectoryCheck - a model defined in OpenAPI

        :param trusted_dir_patterns: The trusted_dir_patterns of this TrustedDirectoryCheck.
        """
        self.openapi_types = {
            'trusted_dir_patterns': List[str]
        }

        self.attribute_map = {
            'trusted_dir_patterns': 'trustedDirPatterns'
        }

        self._trusted_dir_patterns = trusted_dir_patterns

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TrustedDirectoryCheck':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TrustedDirectoryCheck of this TrustedDirectoryCheck.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def trusted_dir_patterns(self):
        """Gets the trusted_dir_patterns of this TrustedDirectoryCheck.

        Required. List of trusted directory patterns. A pattern is in the form \"registry/path/to/directory\". The registry domain part is defined as two or more dot-separated words, e.g., `us.pkg.dev`, or `gcr.io`. Additionally, `*` can be used in three ways as wildcards: 1. leading `*` to match varying prefixes in registry subdomain (useful for location prefixes); 2. trailing `*` after registry/ to match varying endings; 3. trailing `**` after registry/ to match \"/\" as well. For example: -- `gcr.io/my-project/my-repo` is valid to match a single directory -- `*-docker.pkg.dev/my-project/my-repo` or `*.gcr.io/my-project` are valid to match varying prefixes -- `gcr.io/my-project/*` will match all direct directories in `my-project` -- `gcr.io/my-project/**` would match all directories in `my-project` -- `gcr.i*` is not allowed since the registry is not completely specified -- `sub*domain.gcr.io/nginx` is not valid because only leading `*` or trailing `*` are allowed. -- `*pkg.dev/my-project/my-repo` is not valid because leading `*` can only match subdomain -- `**-docker.pkg.dev` is not valid because one leading `*` is allowed, and that it cannot match `/`

        :return: The trusted_dir_patterns of this TrustedDirectoryCheck.
        :rtype: List[str]
        """
        return self._trusted_dir_patterns

    @trusted_dir_patterns.setter
    def trusted_dir_patterns(self, trusted_dir_patterns):
        """Sets the trusted_dir_patterns of this TrustedDirectoryCheck.

        Required. List of trusted directory patterns. A pattern is in the form \"registry/path/to/directory\". The registry domain part is defined as two or more dot-separated words, e.g., `us.pkg.dev`, or `gcr.io`. Additionally, `*` can be used in three ways as wildcards: 1. leading `*` to match varying prefixes in registry subdomain (useful for location prefixes); 2. trailing `*` after registry/ to match varying endings; 3. trailing `**` after registry/ to match \"/\" as well. For example: -- `gcr.io/my-project/my-repo` is valid to match a single directory -- `*-docker.pkg.dev/my-project/my-repo` or `*.gcr.io/my-project` are valid to match varying prefixes -- `gcr.io/my-project/*` will match all direct directories in `my-project` -- `gcr.io/my-project/**` would match all directories in `my-project` -- `gcr.i*` is not allowed since the registry is not completely specified -- `sub*domain.gcr.io/nginx` is not valid because only leading `*` or trailing `*` are allowed. -- `*pkg.dev/my-project/my-repo` is not valid because leading `*` can only match subdomain -- `**-docker.pkg.dev` is not valid because one leading `*` is allowed, and that it cannot match `/`

        :param trusted_dir_patterns: The trusted_dir_patterns of this TrustedDirectoryCheck.
        :type trusted_dir_patterns: List[str]
        """

        self._trusted_dir_patterns = trusted_dir_patterns
