# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.attestation_occurrence import AttestationOccurrence
from openapi_server import util


class ValidateAttestationOccurrenceRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, attestation: AttestationOccurrence=None, occurrence_note: str=None, occurrence_resource_uri: str=None):
        """ValidateAttestationOccurrenceRequest - a model defined in OpenAPI

        :param attestation: The attestation of this ValidateAttestationOccurrenceRequest.
        :param occurrence_note: The occurrence_note of this ValidateAttestationOccurrenceRequest.
        :param occurrence_resource_uri: The occurrence_resource_uri of this ValidateAttestationOccurrenceRequest.
        """
        self.openapi_types = {
            'attestation': AttestationOccurrence,
            'occurrence_note': str,
            'occurrence_resource_uri': str
        }

        self.attribute_map = {
            'attestation': 'attestation',
            'occurrence_note': 'occurrenceNote',
            'occurrence_resource_uri': 'occurrenceResourceUri'
        }

        self._attestation = attestation
        self._occurrence_note = occurrence_note
        self._occurrence_resource_uri = occurrence_resource_uri

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ValidateAttestationOccurrenceRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ValidateAttestationOccurrenceRequest of this ValidateAttestationOccurrenceRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def attestation(self):
        """Gets the attestation of this ValidateAttestationOccurrenceRequest.


        :return: The attestation of this ValidateAttestationOccurrenceRequest.
        :rtype: AttestationOccurrence
        """
        return self._attestation

    @attestation.setter
    def attestation(self, attestation):
        """Sets the attestation of this ValidateAttestationOccurrenceRequest.


        :param attestation: The attestation of this ValidateAttestationOccurrenceRequest.
        :type attestation: AttestationOccurrence
        """

        self._attestation = attestation

    @property
    def occurrence_note(self):
        """Gets the occurrence_note of this ValidateAttestationOccurrenceRequest.

        Required. The resource name of the Note to which the containing Occurrence is associated.

        :return: The occurrence_note of this ValidateAttestationOccurrenceRequest.
        :rtype: str
        """
        return self._occurrence_note

    @occurrence_note.setter
    def occurrence_note(self, occurrence_note):
        """Sets the occurrence_note of this ValidateAttestationOccurrenceRequest.

        Required. The resource name of the Note to which the containing Occurrence is associated.

        :param occurrence_note: The occurrence_note of this ValidateAttestationOccurrenceRequest.
        :type occurrence_note: str
        """

        self._occurrence_note = occurrence_note

    @property
    def occurrence_resource_uri(self):
        """Gets the occurrence_resource_uri of this ValidateAttestationOccurrenceRequest.

        Required. The URI of the artifact (e.g. container image) that is the subject of the containing Occurrence.

        :return: The occurrence_resource_uri of this ValidateAttestationOccurrenceRequest.
        :rtype: str
        """
        return self._occurrence_resource_uri

    @occurrence_resource_uri.setter
    def occurrence_resource_uri(self, occurrence_resource_uri):
        """Sets the occurrence_resource_uri of this ValidateAttestationOccurrenceRequest.

        Required. The URI of the artifact (e.g. container image) that is the subject of the containing Occurrence.

        :param occurrence_resource_uri: The occurrence_resource_uri of this ValidateAttestationOccurrenceRequest.
        :type occurrence_resource_uri: str
        """

        self._occurrence_resource_uri = occurrence_resource_uri
