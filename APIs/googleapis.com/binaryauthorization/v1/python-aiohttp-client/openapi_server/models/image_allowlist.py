# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ImageAllowlist(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, allow_pattern: List[str]=None):
        """ImageAllowlist - a model defined in OpenAPI

        :param allow_pattern: The allow_pattern of this ImageAllowlist.
        """
        self.openapi_types = {
            'allow_pattern': List[str]
        }

        self.attribute_map = {
            'allow_pattern': 'allowPattern'
        }

        self._allow_pattern = allow_pattern

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ImageAllowlist':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ImageAllowlist of this ImageAllowlist.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allow_pattern(self):
        """Gets the allow_pattern of this ImageAllowlist.

        Required. A disjunction of image patterns to allow. If any of these patterns match, then the image is considered exempted by this allowlist.

        :return: The allow_pattern of this ImageAllowlist.
        :rtype: List[str]
        """
        return self._allow_pattern

    @allow_pattern.setter
    def allow_pattern(self, allow_pattern):
        """Sets the allow_pattern of this ImageAllowlist.

        Required. A disjunction of image patterns to allow. If any of these patterns match, then the image is considered exempted by this allowlist.

        :param allow_pattern: The allow_pattern of this ImageAllowlist.
        :type allow_pattern: List[str]
        """

        self._allow_pattern = allow_pattern
