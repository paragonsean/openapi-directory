/**
 * Binary Authorization API
 * The management interface for Binary Authorization, a service that provides policy-based deployment validation and control for images deployed to Google Kubernetes Engine (GKE), Anthos Service Mesh, Anthos Clusters, and Cloud Run. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISigstoreAuthority.h
 *
 * A Sigstore authority, used to verify signatures that are created by Sigstore. An authority is analogous to an attestation authenticator, verifying that a signature is valid or invalid.
 */

#ifndef OAISigstoreAuthority_H
#define OAISigstoreAuthority_H

#include <QJsonObject>

#include "OAISigstorePublicKeySet.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISigstorePublicKeySet;

class OAISigstoreAuthority : public OAIObject {
public:
    OAISigstoreAuthority();
    OAISigstoreAuthority(QString json);
    ~OAISigstoreAuthority() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    OAISigstorePublicKeySet getPublicKeySet() const;
    void setPublicKeySet(const OAISigstorePublicKeySet &public_key_set);
    bool is_public_key_set_Set() const;
    bool is_public_key_set_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    OAISigstorePublicKeySet m_public_key_set;
    bool m_public_key_set_isSet;
    bool m_public_key_set_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISigstoreAuthority)

#endif // OAISigstoreAuthority_H
