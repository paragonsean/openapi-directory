/**
 * Binary Authorization API
 * The management interface for Binary Authorization, a service that provides policy-based deployment validation and control for images deployed to Google Kubernetes Engine (GKE), Anthos Service Mesh, Anthos Clusters, and Cloud Run. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAttestationSource.h
 *
 * Specifies the locations for fetching the provenance attestations.
 */

#ifndef OAIAttestationSource_H
#define OAIAttestationSource_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAttestationSource : public OAIObject {
public:
    OAIAttestationSource();
    OAIAttestationSource(QString json);
    ~OAIAttestationSource() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getContainerAnalysisAttestationProjects() const;
    void setContainerAnalysisAttestationProjects(const QList<QString> &container_analysis_attestation_projects);
    bool is_container_analysis_attestation_projects_Set() const;
    bool is_container_analysis_attestation_projects_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_container_analysis_attestation_projects;
    bool m_container_analysis_attestation_projects_isSet;
    bool m_container_analysis_attestation_projects_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAttestationSource)

#endif // OAIAttestationSource_H
