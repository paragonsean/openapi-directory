/**
 * Binary Authorization API
 * The management interface for Binary Authorization, a service that provides policy-based deployment validation and control for images deployed to Google Kubernetes Engine (GKE), Anthos Service Mesh, Anthos Clusters, and Cloud Run. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICheckSet.h
 *
 * A conjunction of policy checks, scoped to a particular namespace or Kubernetes service account. In order for evaluation of a &#x60;CheckSet&#x60; to return \&quot;allowed\&quot; for a given image in a given Pod, one of the following conditions must be satisfied: * The image is explicitly exempted by an entry in &#x60;image_allowlist&#x60;, OR * ALL of the &#x60;checks&#x60; evaluate to \&quot;allowed\&quot;.
 */

#ifndef OAICheckSet_H
#define OAICheckSet_H

#include <QJsonObject>

#include "OAICheck.h"
#include "OAIImageAllowlist.h"
#include "OAIScope.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICheck;
class OAIImageAllowlist;
class OAIScope;

class OAICheckSet : public OAIObject {
public:
    OAICheckSet();
    OAICheckSet(QString json);
    ~OAICheckSet() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAICheck> getChecks() const;
    void setChecks(const QList<OAICheck> &checks);
    bool is_checks_Set() const;
    bool is_checks_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    OAIImageAllowlist getImageAllowlist() const;
    void setImageAllowlist(const OAIImageAllowlist &image_allowlist);
    bool is_image_allowlist_Set() const;
    bool is_image_allowlist_Valid() const;

    OAIScope getScope() const;
    void setScope(const OAIScope &scope);
    bool is_scope_Set() const;
    bool is_scope_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAICheck> m_checks;
    bool m_checks_isSet;
    bool m_checks_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    OAIImageAllowlist m_image_allowlist;
    bool m_image_allowlist_isSet;
    bool m_image_allowlist_isValid;

    OAIScope m_scope;
    bool m_scope_isSet;
    bool m_scope_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICheckSet)

#endif // OAICheckSet_H
