/**
 * Binary Authorization API
 * The management interface for Binary Authorization, a service that provides policy-based deployment validation and control for images deployed to Google Kubernetes Engine (GKE), Anthos Service Mesh, Anthos Clusters, and Cloud Run. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEvaluateGkePolicyRequest.h
 *
 * Request message for PlatformPolicyEvaluationService.EvaluateGkePolicy.
 */

#ifndef OAIEvaluateGkePolicyRequest_H
#define OAIEvaluateGkePolicyRequest_H

#include <QJsonObject>

#include <QJsonValue>
#include <QMap>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIEvaluateGkePolicyRequest : public OAIObject {
public:
    OAIEvaluateGkePolicyRequest();
    OAIEvaluateGkePolicyRequest(QString json);
    ~OAIEvaluateGkePolicyRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QMap<QString, QJsonValue> getResource() const;
    void setResource(const QMap<QString, QJsonValue> &resource);
    bool is_resource_Set() const;
    bool is_resource_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QMap<QString, QJsonValue> m_resource;
    bool m_resource_isSet;
    bool m_resource_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEvaluateGkePolicyRequest)

#endif // OAIEvaluateGkePolicyRequest_H
