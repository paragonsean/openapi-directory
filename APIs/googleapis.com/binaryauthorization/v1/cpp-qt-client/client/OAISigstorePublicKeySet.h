/**
 * Binary Authorization API
 * The management interface for Binary Authorization, a service that provides policy-based deployment validation and control for images deployed to Google Kubernetes Engine (GKE), Anthos Service Mesh, Anthos Clusters, and Cloud Run. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISigstorePublicKeySet.h
 *
 * A bundle of Sigstore public keys, used to verify Sigstore signatures. A signature is authenticated by a &#x60;SigstorePublicKeySet&#x60; if any of the keys verify it.
 */

#ifndef OAISigstorePublicKeySet_H
#define OAISigstorePublicKeySet_H

#include <QJsonObject>

#include "OAISigstorePublicKey.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISigstorePublicKey;

class OAISigstorePublicKeySet : public OAIObject {
public:
    OAISigstorePublicKeySet();
    OAISigstorePublicKeySet(QString json);
    ~OAISigstorePublicKeySet() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAISigstorePublicKey> getPublicKeys() const;
    void setPublicKeys(const QList<OAISigstorePublicKey> &public_keys);
    bool is_public_keys_Set() const;
    bool is_public_keys_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAISigstorePublicKey> m_public_keys;
    bool m_public_keys_isSet;
    bool m_public_keys_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISigstorePublicKeySet)

#endif // OAISigstorePublicKeySet_H
