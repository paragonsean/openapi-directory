/**
 * Binary Authorization API
 * The management interface for Binary Authorization, a service that provides policy-based deployment validation and control for images deployed to Google Kubernetes Engine (GKE), Anthos Service Mesh, Anthos Clusters, and Cloud Run. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISlsaCheck.h
 *
 * A SLSA provenance attestation check, which ensures that images are built by a trusted builder using source code from its trusted repositories only.
 */

#ifndef OAISlsaCheck_H
#define OAISlsaCheck_H

#include <QJsonObject>

#include "OAIVerificationRule.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIVerificationRule;

class OAISlsaCheck : public OAIObject {
public:
    OAISlsaCheck();
    OAISlsaCheck(QString json);
    ~OAISlsaCheck() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIVerificationRule> getRules() const;
    void setRules(const QList<OAIVerificationRule> &rules);
    bool is_rules_Set() const;
    bool is_rules_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIVerificationRule> m_rules;
    bool m_rules_isSet;
    bool m_rules_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISlsaCheck)

#endif // OAISlsaCheck_H
