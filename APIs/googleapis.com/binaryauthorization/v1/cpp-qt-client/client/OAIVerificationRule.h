/**
 * Binary Authorization API
 * The management interface for Binary Authorization, a service that provides policy-based deployment validation and control for images deployed to Google Kubernetes Engine (GKE), Anthos Service Mesh, Anthos Clusters, and Cloud Run. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVerificationRule.h
 *
 * Specifies verification rules for evaluating the SLSA attestations including: which builders to trust, where to fetch the SLSA attestations generated by those builders, and other builder-specific evaluation rules such as which source repositories are trusted. An image is considered verified by the rule if any of the fetched SLSA attestations is verified.
 */

#ifndef OAIVerificationRule_H
#define OAIVerificationRule_H

#include <QJsonObject>

#include "OAIAttestationSource.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAttestationSource;

class OAIVerificationRule : public OAIObject {
public:
    OAIVerificationRule();
    OAIVerificationRule(QString json);
    ~OAIVerificationRule() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAttestationSource getAttestationSource() const;
    void setAttestationSource(const OAIAttestationSource &attestation_source);
    bool is_attestation_source_Set() const;
    bool is_attestation_source_Valid() const;

    bool isConfigBasedBuildRequired() const;
    void setConfigBasedBuildRequired(const bool &config_based_build_required);
    bool is_config_based_build_required_Set() const;
    bool is_config_based_build_required_Valid() const;

    QString getTrustedBuilder() const;
    void setTrustedBuilder(const QString &trusted_builder);
    bool is_trusted_builder_Set() const;
    bool is_trusted_builder_Valid() const;

    QList<QString> getTrustedSourceRepoPatterns() const;
    void setTrustedSourceRepoPatterns(const QList<QString> &trusted_source_repo_patterns);
    bool is_trusted_source_repo_patterns_Set() const;
    bool is_trusted_source_repo_patterns_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAttestationSource m_attestation_source;
    bool m_attestation_source_isSet;
    bool m_attestation_source_isValid;

    bool m_config_based_build_required;
    bool m_config_based_build_required_isSet;
    bool m_config_based_build_required_isValid;

    QString m_trusted_builder;
    bool m_trusted_builder_isSet;
    bool m_trusted_builder_isValid;

    QList<QString> m_trusted_source_repo_patterns;
    bool m_trusted_source_repo_patterns_isSet;
    bool m_trusted_source_repo_patterns_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVerificationRule)

#endif // OAIVerificationRule_H
