/**
 * Binary Authorization API
 * The management interface for Binary Authorization, a service that provides policy-based deployment validation and control for images deployed to Google Kubernetes Engine (GKE), Anthos Service Mesh, Anthos Clusters, and Cloud Run. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICheckSetResult.h
 *
 * Result of evaluating one check set.
 */

#ifndef OAICheckSetResult_H
#define OAICheckSetResult_H

#include <QJsonObject>

#include "OAIAllowlistResult.h"
#include "OAICheckResults.h"
#include "OAIScope.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAllowlistResult;
class OAICheckResults;
class OAIScope;

class OAICheckSetResult : public OAIObject {
public:
    OAICheckSetResult();
    OAICheckSetResult(QString json);
    ~OAICheckSetResult() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAllowlistResult getAllowlistResult() const;
    void setAllowlistResult(const OAIAllowlistResult &allowlist_result);
    bool is_allowlist_result_Set() const;
    bool is_allowlist_result_Valid() const;

    OAICheckResults getCheckResults() const;
    void setCheckResults(const OAICheckResults &check_results);
    bool is_check_results_Set() const;
    bool is_check_results_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    QString getExplanation() const;
    void setExplanation(const QString &explanation);
    bool is_explanation_Set() const;
    bool is_explanation_Valid() const;

    QString getIndex() const;
    void setIndex(const QString &index);
    bool is_index_Set() const;
    bool is_index_Valid() const;

    OAIScope getScope() const;
    void setScope(const OAIScope &scope);
    bool is_scope_Set() const;
    bool is_scope_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAllowlistResult m_allowlist_result;
    bool m_allowlist_result_isSet;
    bool m_allowlist_result_isValid;

    OAICheckResults m_check_results;
    bool m_check_results_isSet;
    bool m_check_results_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    QString m_explanation;
    bool m_explanation_isSet;
    bool m_explanation_isValid;

    QString m_index;
    bool m_index_isSet;
    bool m_index_isValid;

    OAIScope m_scope;
    bool m_scope_isSet;
    bool m_scope_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICheckSetResult)

#endif // OAICheckSetResult_H
