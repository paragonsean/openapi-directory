/**
 * Binary Authorization API
 * The management interface for Binary Authorization, a service that provides policy-based deployment validation and control for images deployed to Google Kubernetes Engine (GKE), Anthos Service Mesh, Anthos Clusters, and Cloud Run. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICheck.h
 *
 * A single check to perform against a Pod. Checks are grouped into &#x60;CheckSet&#x60; objects, which are defined by the top-level policy.
 */

#ifndef OAICheck_H
#define OAICheck_H

#include <QJsonObject>

#include "OAIImageAllowlist.h"
#include "OAIImageFreshnessCheck.h"
#include "OAISigstoreSignatureCheck.h"
#include "OAISimpleSigningAttestationCheck.h"
#include "OAISlsaCheck.h"
#include "OAITrustedDirectoryCheck.h"
#include "OAIVulnerabilityCheck.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIImageAllowlist;
class OAIImageFreshnessCheck;
class OAISigstoreSignatureCheck;
class OAISimpleSigningAttestationCheck;
class OAISlsaCheck;
class OAITrustedDirectoryCheck;
class OAIVulnerabilityCheck;

class OAICheck : public OAIObject {
public:
    OAICheck();
    OAICheck(QString json);
    ~OAICheck() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAlwaysDeny() const;
    void setAlwaysDeny(const bool &always_deny);
    bool is_always_deny_Set() const;
    bool is_always_deny_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    OAIImageAllowlist getImageAllowlist() const;
    void setImageAllowlist(const OAIImageAllowlist &image_allowlist);
    bool is_image_allowlist_Set() const;
    bool is_image_allowlist_Valid() const;

    OAIImageFreshnessCheck getImageFreshnessCheck() const;
    void setImageFreshnessCheck(const OAIImageFreshnessCheck &image_freshness_check);
    bool is_image_freshness_check_Set() const;
    bool is_image_freshness_check_Valid() const;

    OAISigstoreSignatureCheck getSigstoreSignatureCheck() const;
    void setSigstoreSignatureCheck(const OAISigstoreSignatureCheck &sigstore_signature_check);
    bool is_sigstore_signature_check_Set() const;
    bool is_sigstore_signature_check_Valid() const;

    OAISimpleSigningAttestationCheck getSimpleSigningAttestationCheck() const;
    void setSimpleSigningAttestationCheck(const OAISimpleSigningAttestationCheck &simple_signing_attestation_check);
    bool is_simple_signing_attestation_check_Set() const;
    bool is_simple_signing_attestation_check_Valid() const;

    OAISlsaCheck getSlsaCheck() const;
    void setSlsaCheck(const OAISlsaCheck &slsa_check);
    bool is_slsa_check_Set() const;
    bool is_slsa_check_Valid() const;

    OAITrustedDirectoryCheck getTrustedDirectoryCheck() const;
    void setTrustedDirectoryCheck(const OAITrustedDirectoryCheck &trusted_directory_check);
    bool is_trusted_directory_check_Set() const;
    bool is_trusted_directory_check_Valid() const;

    OAIVulnerabilityCheck getVulnerabilityCheck() const;
    void setVulnerabilityCheck(const OAIVulnerabilityCheck &vulnerability_check);
    bool is_vulnerability_check_Set() const;
    bool is_vulnerability_check_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_always_deny;
    bool m_always_deny_isSet;
    bool m_always_deny_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    OAIImageAllowlist m_image_allowlist;
    bool m_image_allowlist_isSet;
    bool m_image_allowlist_isValid;

    OAIImageFreshnessCheck m_image_freshness_check;
    bool m_image_freshness_check_isSet;
    bool m_image_freshness_check_isValid;

    OAISigstoreSignatureCheck m_sigstore_signature_check;
    bool m_sigstore_signature_check_isSet;
    bool m_sigstore_signature_check_isValid;

    OAISimpleSigningAttestationCheck m_simple_signing_attestation_check;
    bool m_simple_signing_attestation_check_isSet;
    bool m_simple_signing_attestation_check_isValid;

    OAISlsaCheck m_slsa_check;
    bool m_slsa_check_isSet;
    bool m_slsa_check_isValid;

    OAITrustedDirectoryCheck m_trusted_directory_check;
    bool m_trusted_directory_check_isSet;
    bool m_trusted_directory_check_isValid;

    OAIVulnerabilityCheck m_vulnerability_check;
    bool m_vulnerability_check_isSet;
    bool m_vulnerability_check_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICheck)

#endif // OAICheck_H
