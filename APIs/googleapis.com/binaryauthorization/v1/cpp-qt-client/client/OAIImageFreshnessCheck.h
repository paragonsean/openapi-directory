/**
 * Binary Authorization API
 * The management interface for Binary Authorization, a service that provides policy-based deployment validation and control for images deployed to Google Kubernetes Engine (GKE), Anthos Service Mesh, Anthos Clusters, and Cloud Run. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIImageFreshnessCheck.h
 *
 * An image freshness check, which rejects images that were uploaded before the set number of days ago to the supported repositories.
 */

#ifndef OAIImageFreshnessCheck_H
#define OAIImageFreshnessCheck_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIImageFreshnessCheck : public OAIObject {
public:
    OAIImageFreshnessCheck();
    OAIImageFreshnessCheck(QString json);
    ~OAIImageFreshnessCheck() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getMaxUploadAgeDays() const;
    void setMaxUploadAgeDays(const qint32 &max_upload_age_days);
    bool is_max_upload_age_days_Set() const;
    bool is_max_upload_age_days_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_max_upload_age_days;
    bool m_max_upload_age_days_isSet;
    bool m_max_upload_age_days_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIImageFreshnessCheck)

#endif // OAIImageFreshnessCheck_H
