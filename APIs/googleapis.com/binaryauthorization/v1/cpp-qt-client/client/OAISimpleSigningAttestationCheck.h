/**
 * Binary Authorization API
 * The management interface for Binary Authorization, a service that provides policy-based deployment validation and control for images deployed to Google Kubernetes Engine (GKE), Anthos Service Mesh, Anthos Clusters, and Cloud Run. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISimpleSigningAttestationCheck.h
 *
 * Require a signed [DSSE](https://github.com/secure-systems-lab/dsse) attestation with type SimpleSigning.
 */

#ifndef OAISimpleSigningAttestationCheck_H
#define OAISimpleSigningAttestationCheck_H

#include <QJsonObject>

#include "OAIAttestationAuthenticator.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAttestationAuthenticator;

class OAISimpleSigningAttestationCheck : public OAIObject {
public:
    OAISimpleSigningAttestationCheck();
    OAISimpleSigningAttestationCheck(QString json);
    ~OAISimpleSigningAttestationCheck() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIAttestationAuthenticator> getAttestationAuthenticators() const;
    void setAttestationAuthenticators(const QList<OAIAttestationAuthenticator> &attestation_authenticators);
    bool is_attestation_authenticators_Set() const;
    bool is_attestation_authenticators_Valid() const;

    QList<QString> getContainerAnalysisAttestationProjects() const;
    void setContainerAnalysisAttestationProjects(const QList<QString> &container_analysis_attestation_projects);
    bool is_container_analysis_attestation_projects_Set() const;
    bool is_container_analysis_attestation_projects_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIAttestationAuthenticator> m_attestation_authenticators;
    bool m_attestation_authenticators_isSet;
    bool m_attestation_authenticators_isValid;

    QList<QString> m_container_analysis_attestation_projects;
    bool m_container_analysis_attestation_projects_isSet;
    bool m_container_analysis_attestation_projects_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISimpleSigningAttestationCheck)

#endif // OAISimpleSigningAttestationCheck_H
