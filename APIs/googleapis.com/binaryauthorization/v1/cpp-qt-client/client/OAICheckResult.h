/**
 * Binary Authorization API
 * The management interface for Binary Authorization, a service that provides policy-based deployment validation and control for images deployed to Google Kubernetes Engine (GKE), Anthos Service Mesh, Anthos Clusters, and Cloud Run. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICheckResult.h
 *
 * Result of evaluating one check.
 */

#ifndef OAICheckResult_H
#define OAICheckResult_H

#include <QJsonObject>

#include "OAIAllowlistResult.h"
#include "OAIEvaluationResult.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAllowlistResult;
class OAIEvaluationResult;

class OAICheckResult : public OAIObject {
public:
    OAICheckResult();
    OAICheckResult(QString json);
    ~OAICheckResult() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAllowlistResult getAllowlistResult() const;
    void setAllowlistResult(const OAIAllowlistResult &allowlist_result);
    bool is_allowlist_result_Set() const;
    bool is_allowlist_result_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    OAIEvaluationResult getEvaluationResult() const;
    void setEvaluationResult(const OAIEvaluationResult &evaluation_result);
    bool is_evaluation_result_Set() const;
    bool is_evaluation_result_Valid() const;

    QString getExplanation() const;
    void setExplanation(const QString &explanation);
    bool is_explanation_Set() const;
    bool is_explanation_Valid() const;

    QString getIndex() const;
    void setIndex(const QString &index);
    bool is_index_Set() const;
    bool is_index_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAllowlistResult m_allowlist_result;
    bool m_allowlist_result_isSet;
    bool m_allowlist_result_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    OAIEvaluationResult m_evaluation_result;
    bool m_evaluation_result_isSet;
    bool m_evaluation_result_isValid;

    QString m_explanation;
    bool m_explanation_isSet;
    bool m_explanation_isValid;

    QString m_index;
    bool m_index_isSet;
    bool m_index_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICheckResult)

#endif // OAICheckResult_H
