/**
 * Binary Authorization API
 * The management interface for Binary Authorization, a service that provides policy-based deployment validation and control for images deployed to Google Kubernetes Engine (GKE), Anthos Service Mesh, Anthos Clusters, and Cloud Run. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPolicy.h
 *
 * A policy for container image binary authorization.
 */

#ifndef OAIPolicy_H
#define OAIPolicy_H

#include <QJsonObject>

#include "OAIAdmissionRule.h"
#include "OAIAdmissionWhitelistPattern.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAdmissionWhitelistPattern;
class OAIAdmissionRule;

class OAIPolicy : public OAIObject {
public:
    OAIPolicy();
    OAIPolicy(QString json);
    ~OAIPolicy() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIAdmissionWhitelistPattern> getAdmissionWhitelistPatterns() const;
    void setAdmissionWhitelistPatterns(const QList<OAIAdmissionWhitelistPattern> &admission_whitelist_patterns);
    bool is_admission_whitelist_patterns_Set() const;
    bool is_admission_whitelist_patterns_Valid() const;

    QMap<QString, OAIAdmissionRule> getClusterAdmissionRules() const;
    void setClusterAdmissionRules(const QMap<QString, OAIAdmissionRule> &cluster_admission_rules);
    bool is_cluster_admission_rules_Set() const;
    bool is_cluster_admission_rules_Valid() const;

    OAIAdmissionRule getDefaultAdmissionRule() const;
    void setDefaultAdmissionRule(const OAIAdmissionRule &default_admission_rule);
    bool is_default_admission_rule_Set() const;
    bool is_default_admission_rule_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getEtag() const;
    void setEtag(const QString &etag);
    bool is_etag_Set() const;
    bool is_etag_Valid() const;

    QString getGlobalPolicyEvaluationMode() const;
    void setGlobalPolicyEvaluationMode(const QString &global_policy_evaluation_mode);
    bool is_global_policy_evaluation_mode_Set() const;
    bool is_global_policy_evaluation_mode_Valid() const;

    QMap<QString, OAIAdmissionRule> getIstioServiceIdentityAdmissionRules() const;
    void setIstioServiceIdentityAdmissionRules(const QMap<QString, OAIAdmissionRule> &istio_service_identity_admission_rules);
    bool is_istio_service_identity_admission_rules_Set() const;
    bool is_istio_service_identity_admission_rules_Valid() const;

    QMap<QString, OAIAdmissionRule> getKubernetesNamespaceAdmissionRules() const;
    void setKubernetesNamespaceAdmissionRules(const QMap<QString, OAIAdmissionRule> &kubernetes_namespace_admission_rules);
    bool is_kubernetes_namespace_admission_rules_Set() const;
    bool is_kubernetes_namespace_admission_rules_Valid() const;

    QMap<QString, OAIAdmissionRule> getKubernetesServiceAccountAdmissionRules() const;
    void setKubernetesServiceAccountAdmissionRules(const QMap<QString, OAIAdmissionRule> &kubernetes_service_account_admission_rules);
    bool is_kubernetes_service_account_admission_rules_Set() const;
    bool is_kubernetes_service_account_admission_rules_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getUpdateTime() const;
    void setUpdateTime(const QString &update_time);
    bool is_update_time_Set() const;
    bool is_update_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIAdmissionWhitelistPattern> m_admission_whitelist_patterns;
    bool m_admission_whitelist_patterns_isSet;
    bool m_admission_whitelist_patterns_isValid;

    QMap<QString, OAIAdmissionRule> m_cluster_admission_rules;
    bool m_cluster_admission_rules_isSet;
    bool m_cluster_admission_rules_isValid;

    OAIAdmissionRule m_default_admission_rule;
    bool m_default_admission_rule_isSet;
    bool m_default_admission_rule_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_etag;
    bool m_etag_isSet;
    bool m_etag_isValid;

    QString m_global_policy_evaluation_mode;
    bool m_global_policy_evaluation_mode_isSet;
    bool m_global_policy_evaluation_mode_isValid;

    QMap<QString, OAIAdmissionRule> m_istio_service_identity_admission_rules;
    bool m_istio_service_identity_admission_rules_isSet;
    bool m_istio_service_identity_admission_rules_isValid;

    QMap<QString, OAIAdmissionRule> m_kubernetes_namespace_admission_rules;
    bool m_kubernetes_namespace_admission_rules_isSet;
    bool m_kubernetes_namespace_admission_rules_isValid;

    QMap<QString, OAIAdmissionRule> m_kubernetes_service_account_admission_rules;
    bool m_kubernetes_service_account_admission_rules_isSet;
    bool m_kubernetes_service_account_admission_rules_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_update_time;
    bool m_update_time_isSet;
    bool m_update_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPolicy)

#endif // OAIPolicy_H
