/**
 * Binary Authorization API
 * The management interface for Binary Authorization, a service that provides policy-based deployment validation and control for images deployed to Google Kubernetes Engine (GKE), Anthos Service Mesh, Anthos Clusters, and Cloud Run. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEvaluationResult.h
 *
 * Result of evaluating one check.
 */

#ifndef OAIEvaluationResult_H
#define OAIEvaluationResult_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIEvaluationResult : public OAIObject {
public:
    OAIEvaluationResult();
    OAIEvaluationResult(QString json);
    ~OAIEvaluationResult() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getVerdict() const;
    void setVerdict(const QString &verdict);
    bool is_verdict_Set() const;
    bool is_verdict_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_verdict;
    bool m_verdict_isSet;
    bool m_verdict_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEvaluationResult)

#endif // OAIEvaluationResult_H
