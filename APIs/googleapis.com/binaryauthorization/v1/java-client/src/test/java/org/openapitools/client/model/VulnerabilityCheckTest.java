/*
 * Binary Authorization API
 * The management interface for Binary Authorization, a service that provides policy-based deployment validation and control for images deployed to Google Kubernetes Engine (GKE), Anthos Service Mesh, Anthos Clusters, and Cloud Run. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for VulnerabilityCheck
 */
public class VulnerabilityCheckTest {
    private final VulnerabilityCheck model = new VulnerabilityCheck();

    /**
     * Model tests for VulnerabilityCheck
     */
    @Test
    public void testVulnerabilityCheck() {
        // TODO: test VulnerabilityCheck
    }

    /**
     * Test the property 'allowedCves'
     */
    @Test
    public void allowedCvesTest() {
        // TODO: test allowedCves
    }

    /**
     * Test the property 'blockedCves'
     */
    @Test
    public void blockedCvesTest() {
        // TODO: test blockedCves
    }

    /**
     * Test the property 'containerAnalysisVulnerabilityProjects'
     */
    @Test
    public void containerAnalysisVulnerabilityProjectsTest() {
        // TODO: test containerAnalysisVulnerabilityProjects
    }

    /**
     * Test the property 'maximumFixableSeverity'
     */
    @Test
    public void maximumFixableSeverityTest() {
        // TODO: test maximumFixableSeverity
    }

    /**
     * Test the property 'maximumUnfixableSeverity'
     */
    @Test
    public void maximumUnfixableSeverityTest() {
        // TODO: test maximumUnfixableSeverity
    }

}
