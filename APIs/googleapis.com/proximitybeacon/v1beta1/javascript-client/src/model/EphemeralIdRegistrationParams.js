/**
 * Proximity Beacon API
 * Registers, manages, indexes, and searches beacons.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The EphemeralIdRegistrationParams model module.
 * @module model/EphemeralIdRegistrationParams
 * @version v1beta1
 */
class EphemeralIdRegistrationParams {
    /**
     * Constructs a new <code>EphemeralIdRegistrationParams</code>.
     * Information a client needs to provision and register beacons that broadcast Eddystone-EID format beacon IDs, using Elliptic curve Diffie-Hellman key exchange. See [the Eddystone specification](https://github.com/google/eddystone/tree/master/eddystone-eid) at GitHub.
     * @alias module:model/EphemeralIdRegistrationParams
     */
    constructor() { 
        
        EphemeralIdRegistrationParams.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EphemeralIdRegistrationParams</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EphemeralIdRegistrationParams} obj Optional instance to populate.
     * @return {module:model/EphemeralIdRegistrationParams} The populated <code>EphemeralIdRegistrationParams</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EphemeralIdRegistrationParams();

            if (data.hasOwnProperty('maxRotationPeriodExponent')) {
                obj['maxRotationPeriodExponent'] = ApiClient.convertToType(data['maxRotationPeriodExponent'], 'Number');
            }
            if (data.hasOwnProperty('minRotationPeriodExponent')) {
                obj['minRotationPeriodExponent'] = ApiClient.convertToType(data['minRotationPeriodExponent'], 'Number');
            }
            if (data.hasOwnProperty('serviceEcdhPublicKey')) {
                obj['serviceEcdhPublicKey'] = ApiClient.convertToType(data['serviceEcdhPublicKey'], 'Blob');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EphemeralIdRegistrationParams</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EphemeralIdRegistrationParams</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * Indicates the maximum rotation period supported by the service. See EddystoneEidRegistration.rotation_period_exponent
 * @member {Number} maxRotationPeriodExponent
 */
EphemeralIdRegistrationParams.prototype['maxRotationPeriodExponent'] = undefined;

/**
 * Indicates the minimum rotation period supported by the service. See EddystoneEidRegistration.rotation_period_exponent
 * @member {Number} minRotationPeriodExponent
 */
EphemeralIdRegistrationParams.prototype['minRotationPeriodExponent'] = undefined;

/**
 * The beacon service's public key for use by a beacon to derive its Identity Key using Elliptic Curve Diffie-Hellman key exchange.
 * @member {Blob} serviceEcdhPublicKey
 */
EphemeralIdRegistrationParams.prototype['serviceEcdhPublicKey'] = undefined;






export default EphemeralIdRegistrationParams;

