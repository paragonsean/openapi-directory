/**
 * Proximity Beacon API
 * Registers, manages, indexes, and searches beacons.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AdvertisedId from './model/AdvertisedId';
import AttachmentInfo from './model/AttachmentInfo';
import Beacon from './model/Beacon';
import BeaconAttachment from './model/BeaconAttachment';
import BeaconInfo from './model/BeaconInfo';
import DeleteAttachmentsResponse from './model/DeleteAttachmentsResponse';
import Diagnostics from './model/Diagnostics';
import EphemeralIdRegistration from './model/EphemeralIdRegistration';
import EphemeralIdRegistrationParams from './model/EphemeralIdRegistrationParams';
import GetInfoForObservedBeaconsRequest from './model/GetInfoForObservedBeaconsRequest';
import GetInfoForObservedBeaconsResponse from './model/GetInfoForObservedBeaconsResponse';
import IndoorLevel from './model/IndoorLevel';
import LatLng from './model/LatLng';
import ListBeaconAttachmentsResponse from './model/ListBeaconAttachmentsResponse';
import ListBeaconsResponse from './model/ListBeaconsResponse';
import ListDiagnosticsResponse from './model/ListDiagnosticsResponse';
import ListNamespacesResponse from './model/ListNamespacesResponse';
import ModelDate from './model/ModelDate';
import Namespace from './model/Namespace';
import Observation from './model/Observation';
import BeaconinfoApi from './api/BeaconinfoApi';
import BeaconsApi from './api/BeaconsApi';
import NamespacesApi from './api/NamespacesApi';
import V1beta1Api from './api/V1beta1Api';


/**
* Registers, manages, indexes, and searches beacons..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var ProximityBeaconApi = require('index'); // See note below*.
* var xxxSvc = new ProximityBeaconApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new ProximityBeaconApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new ProximityBeaconApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new ProximityBeaconApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v1beta1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AdvertisedId model constructor.
     * @property {module:model/AdvertisedId}
     */
    AdvertisedId,

    /**
     * The AttachmentInfo model constructor.
     * @property {module:model/AttachmentInfo}
     */
    AttachmentInfo,

    /**
     * The Beacon model constructor.
     * @property {module:model/Beacon}
     */
    Beacon,

    /**
     * The BeaconAttachment model constructor.
     * @property {module:model/BeaconAttachment}
     */
    BeaconAttachment,

    /**
     * The BeaconInfo model constructor.
     * @property {module:model/BeaconInfo}
     */
    BeaconInfo,

    /**
     * The DeleteAttachmentsResponse model constructor.
     * @property {module:model/DeleteAttachmentsResponse}
     */
    DeleteAttachmentsResponse,

    /**
     * The Diagnostics model constructor.
     * @property {module:model/Diagnostics}
     */
    Diagnostics,

    /**
     * The EphemeralIdRegistration model constructor.
     * @property {module:model/EphemeralIdRegistration}
     */
    EphemeralIdRegistration,

    /**
     * The EphemeralIdRegistrationParams model constructor.
     * @property {module:model/EphemeralIdRegistrationParams}
     */
    EphemeralIdRegistrationParams,

    /**
     * The GetInfoForObservedBeaconsRequest model constructor.
     * @property {module:model/GetInfoForObservedBeaconsRequest}
     */
    GetInfoForObservedBeaconsRequest,

    /**
     * The GetInfoForObservedBeaconsResponse model constructor.
     * @property {module:model/GetInfoForObservedBeaconsResponse}
     */
    GetInfoForObservedBeaconsResponse,

    /**
     * The IndoorLevel model constructor.
     * @property {module:model/IndoorLevel}
     */
    IndoorLevel,

    /**
     * The LatLng model constructor.
     * @property {module:model/LatLng}
     */
    LatLng,

    /**
     * The ListBeaconAttachmentsResponse model constructor.
     * @property {module:model/ListBeaconAttachmentsResponse}
     */
    ListBeaconAttachmentsResponse,

    /**
     * The ListBeaconsResponse model constructor.
     * @property {module:model/ListBeaconsResponse}
     */
    ListBeaconsResponse,

    /**
     * The ListDiagnosticsResponse model constructor.
     * @property {module:model/ListDiagnosticsResponse}
     */
    ListDiagnosticsResponse,

    /**
     * The ListNamespacesResponse model constructor.
     * @property {module:model/ListNamespacesResponse}
     */
    ListNamespacesResponse,

    /**
     * The ModelDate model constructor.
     * @property {module:model/ModelDate}
     */
    ModelDate,

    /**
     * The Namespace model constructor.
     * @property {module:model/Namespace}
     */
    Namespace,

    /**
     * The Observation model constructor.
     * @property {module:model/Observation}
     */
    Observation,

    /**
    * The BeaconinfoApi service constructor.
    * @property {module:api/BeaconinfoApi}
    */
    BeaconinfoApi,

    /**
    * The BeaconsApi service constructor.
    * @property {module:api/BeaconsApi}
    */
    BeaconsApi,

    /**
    * The NamespacesApi service constructor.
    * @property {module:api/NamespacesApi}
    */
    NamespacesApi,

    /**
    * The V1beta1Api service constructor.
    * @property {module:api/V1beta1Api}
    */
    V1beta1Api
};
