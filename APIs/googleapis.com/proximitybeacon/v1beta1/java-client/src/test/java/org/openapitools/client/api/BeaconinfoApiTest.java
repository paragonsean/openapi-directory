/*
 * Proximity Beacon API
 * Registers, manages, indexes, and searches beacons.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.GetInfoForObservedBeaconsRequest;
import org.openapitools.client.model.GetInfoForObservedBeaconsResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BeaconinfoApi
 */
@Disabled
public class BeaconinfoApiTest {

    private final BeaconinfoApi api = new BeaconinfoApi();

    /**
     * Given one or more beacon observations, returns any beacon information and attachments accessible to your application. Authorize by using the [API key](https://developers.google.com/beacons/proximity/get-started#request_a_browser_api_key) for the application.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void proximitybeaconBeaconinfoGetforobservedTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GetInfoForObservedBeaconsRequest getInfoForObservedBeaconsRequest = null;
        GetInfoForObservedBeaconsResponse response = api.proximitybeaconBeaconinfoGetforobserved($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, getInfoForObservedBeaconsRequest);
        // TODO: test validations
    }

}
