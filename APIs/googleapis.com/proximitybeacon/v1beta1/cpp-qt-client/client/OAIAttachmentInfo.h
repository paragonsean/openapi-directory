/**
 * Proximity Beacon API
 * Registers, manages, indexes, and searches beacons.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAttachmentInfo.h
 *
 * A subset of attachment information served via the &#x60;beaconinfo.getforobserved&#x60; method, used when your users encounter your beacons.
 */

#ifndef OAIAttachmentInfo_H
#define OAIAttachmentInfo_H

#include <QJsonObject>

#include <QByteArray>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAttachmentInfo : public OAIObject {
public:
    OAIAttachmentInfo();
    OAIAttachmentInfo(QString json);
    ~OAIAttachmentInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QByteArray getData() const;
    void setData(const QByteArray &data);
    bool is_data_Set() const;
    bool is_data_Valid() const;

    double getMaxDistanceMeters() const;
    void setMaxDistanceMeters(const double &max_distance_meters);
    bool is_max_distance_meters_Set() const;
    bool is_max_distance_meters_Valid() const;

    QString getNamespacedType() const;
    void setNamespacedType(const QString &namespaced_type);
    bool is_namespaced_type_Set() const;
    bool is_namespaced_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QByteArray m_data;
    bool m_data_isSet;
    bool m_data_isValid;

    double m_max_distance_meters;
    bool m_max_distance_meters_isSet;
    bool m_max_distance_meters_isValid;

    QString m_namespaced_type;
    bool m_namespaced_type_isSet;
    bool m_namespaced_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAttachmentInfo)

#endif // OAIAttachmentInfo_H
