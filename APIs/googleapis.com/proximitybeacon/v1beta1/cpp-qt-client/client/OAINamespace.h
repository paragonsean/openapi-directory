/**
 * Proximity Beacon API
 * Registers, manages, indexes, and searches beacons.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINamespace.h
 *
 * An attachment namespace defines read and write access for all the attachments created under it. Each namespace is globally unique, and owned by one project which is the only project that can create attachments under it.
 */

#ifndef OAINamespace_H
#define OAINamespace_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAINamespace : public OAIObject {
public:
    OAINamespace();
    OAINamespace(QString json);
    ~OAINamespace() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getNamespaceName() const;
    void setNamespaceName(const QString &namespace_name);
    bool is_namespace_name_Set() const;
    bool is_namespace_name_Valid() const;

    QString getServingVisibility() const;
    void setServingVisibility(const QString &serving_visibility);
    bool is_serving_visibility_Set() const;
    bool is_serving_visibility_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_namespace_name;
    bool m_namespace_name_isSet;
    bool m_namespace_name_isValid;

    QString m_serving_visibility;
    bool m_serving_visibility_isSet;
    bool m_serving_visibility_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINamespace)

#endif // OAINamespace_H
