/**
 * Proximity Beacon API
 * Registers, manages, indexes, and searches beacons.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBeaconInfo.h
 *
 * A subset of beacon information served via the &#x60;beaconinfo.getforobserved&#x60; method, which you call when users of your app encounter your beacons.
 */

#ifndef OAIBeaconInfo_H
#define OAIBeaconInfo_H

#include <QJsonObject>

#include "OAIAdvertisedId.h"
#include "OAIAttachmentInfo.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAdvertisedId;
class OAIAttachmentInfo;

class OAIBeaconInfo : public OAIObject {
public:
    OAIBeaconInfo();
    OAIBeaconInfo(QString json);
    ~OAIBeaconInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAdvertisedId getAdvertisedId() const;
    void setAdvertisedId(const OAIAdvertisedId &advertised_id);
    bool is_advertised_id_Set() const;
    bool is_advertised_id_Valid() const;

    QList<OAIAttachmentInfo> getAttachments() const;
    void setAttachments(const QList<OAIAttachmentInfo> &attachments);
    bool is_attachments_Set() const;
    bool is_attachments_Valid() const;

    QString getBeaconName() const;
    void setBeaconName(const QString &beacon_name);
    bool is_beacon_name_Set() const;
    bool is_beacon_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAdvertisedId m_advertised_id;
    bool m_advertised_id_isSet;
    bool m_advertised_id_isValid;

    QList<OAIAttachmentInfo> m_attachments;
    bool m_attachments_isSet;
    bool m_attachments_isValid;

    QString m_beacon_name;
    bool m_beacon_name_isSet;
    bool m_beacon_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBeaconInfo)

#endif // OAIBeaconInfo_H
