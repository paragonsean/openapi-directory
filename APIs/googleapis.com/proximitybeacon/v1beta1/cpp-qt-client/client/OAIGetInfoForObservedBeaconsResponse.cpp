/**
 * Proximity Beacon API
 * Registers, manages, indexes, and searches beacons.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetInfoForObservedBeaconsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetInfoForObservedBeaconsResponse::OAIGetInfoForObservedBeaconsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetInfoForObservedBeaconsResponse::OAIGetInfoForObservedBeaconsResponse() {
    this->initializeModel();
}

OAIGetInfoForObservedBeaconsResponse::~OAIGetInfoForObservedBeaconsResponse() {}

void OAIGetInfoForObservedBeaconsResponse::initializeModel() {

    m_beacons_isSet = false;
    m_beacons_isValid = false;
}

void OAIGetInfoForObservedBeaconsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetInfoForObservedBeaconsResponse::fromJsonObject(QJsonObject json) {

    m_beacons_isValid = ::OpenAPI::fromJsonValue(m_beacons, json[QString("beacons")]);
    m_beacons_isSet = !json[QString("beacons")].isNull() && m_beacons_isValid;
}

QString OAIGetInfoForObservedBeaconsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetInfoForObservedBeaconsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_beacons.size() > 0) {
        obj.insert(QString("beacons"), ::OpenAPI::toJsonValue(m_beacons));
    }
    return obj;
}

QList<OAIBeaconInfo> OAIGetInfoForObservedBeaconsResponse::getBeacons() const {
    return m_beacons;
}
void OAIGetInfoForObservedBeaconsResponse::setBeacons(const QList<OAIBeaconInfo> &beacons) {
    m_beacons = beacons;
    m_beacons_isSet = true;
}

bool OAIGetInfoForObservedBeaconsResponse::is_beacons_Set() const{
    return m_beacons_isSet;
}

bool OAIGetInfoForObservedBeaconsResponse::is_beacons_Valid() const{
    return m_beacons_isValid;
}

bool OAIGetInfoForObservedBeaconsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_beacons.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetInfoForObservedBeaconsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
