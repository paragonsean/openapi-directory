/**
 * Proximity Beacon API
 * Registers, manages, indexes, and searches beacons.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetInfoForObservedBeaconsResponse.h
 *
 * Information about the requested beacons, optionally including attachment data.
 */

#ifndef OAIGetInfoForObservedBeaconsResponse_H
#define OAIGetInfoForObservedBeaconsResponse_H

#include <QJsonObject>

#include "OAIBeaconInfo.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBeaconInfo;

class OAIGetInfoForObservedBeaconsResponse : public OAIObject {
public:
    OAIGetInfoForObservedBeaconsResponse();
    OAIGetInfoForObservedBeaconsResponse(QString json);
    ~OAIGetInfoForObservedBeaconsResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIBeaconInfo> getBeacons() const;
    void setBeacons(const QList<OAIBeaconInfo> &beacons);
    bool is_beacons_Set() const;
    bool is_beacons_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIBeaconInfo> m_beacons;
    bool m_beacons_isSet;
    bool m_beacons_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetInfoForObservedBeaconsResponse)

#endif // OAIGetInfoForObservedBeaconsResponse_H
