# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.namespace import Namespace
from openapi_server import util


class ListNamespacesResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, namespaces: List[Namespace]=None):
        """ListNamespacesResponse - a model defined in OpenAPI

        :param namespaces: The namespaces of this ListNamespacesResponse.
        """
        self.openapi_types = {
            'namespaces': List[Namespace]
        }

        self.attribute_map = {
            'namespaces': 'namespaces'
        }

        self._namespaces = namespaces

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListNamespacesResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListNamespacesResponse of this ListNamespacesResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def namespaces(self):
        """Gets the namespaces of this ListNamespacesResponse.

        The attachments that corresponded to the request params.

        :return: The namespaces of this ListNamespacesResponse.
        :rtype: List[Namespace]
        """
        return self._namespaces

    @namespaces.setter
    def namespaces(self, namespaces):
        """Sets the namespaces of this ListNamespacesResponse.

        The attachments that corresponded to the request params.

        :param namespaces: The namespaces of this ListNamespacesResponse.
        :type namespaces: List[Namespace]
        """

        self._namespaces = namespaces
