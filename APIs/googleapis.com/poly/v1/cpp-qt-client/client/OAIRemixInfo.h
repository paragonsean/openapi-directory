/**
 * Poly API
 * The Poly API provides read access to assets hosted on poly.google.com to all, and upload access to poly.google.com for whitelisted accounts. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRemixInfo.h
 *
 * Info about the sources of this asset (i.e. assets that were remixed to create this asset).
 */

#ifndef OAIRemixInfo_H
#define OAIRemixInfo_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIRemixInfo : public OAIObject {
public:
    OAIRemixInfo();
    OAIRemixInfo(QString json);
    ~OAIRemixInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getSourceAsset() const;
    void setSourceAsset(const QList<QString> &source_asset);
    bool is_source_asset_Set() const;
    bool is_source_asset_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_source_asset;
    bool m_source_asset_isSet;
    bool m_source_asset_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRemixInfo)

#endif // OAIRemixInfo_H
