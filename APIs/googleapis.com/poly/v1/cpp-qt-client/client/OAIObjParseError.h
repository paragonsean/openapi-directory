/**
 * Poly API
 * The Poly API provides read access to assets hosted on poly.google.com to all, and upload access to poly.google.com for whitelisted accounts. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIObjParseError.h
 *
 * Details of an error resulting from parsing an OBJ file
 */

#ifndef OAIObjParseError_H
#define OAIObjParseError_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIObjParseError : public OAIObject {
public:
    OAIObjParseError();
    OAIObjParseError(QString json);
    ~OAIObjParseError() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCode() const;
    void setCode(const QString &code);
    bool is_code_Set() const;
    bool is_code_Valid() const;

    qint32 getEndIndex() const;
    void setEndIndex(const qint32 &end_index);
    bool is_end_index_Set() const;
    bool is_end_index_Valid() const;

    QString getFilePath() const;
    void setFilePath(const QString &file_path);
    bool is_file_path_Set() const;
    bool is_file_path_Valid() const;

    QString getLine() const;
    void setLine(const QString &line);
    bool is_line_Set() const;
    bool is_line_Valid() const;

    qint32 getLineNumber() const;
    void setLineNumber(const qint32 &line_number);
    bool is_line_number_Set() const;
    bool is_line_number_Valid() const;

    qint32 getStartIndex() const;
    void setStartIndex(const qint32 &start_index);
    bool is_start_index_Set() const;
    bool is_start_index_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_code;
    bool m_code_isSet;
    bool m_code_isValid;

    qint32 m_end_index;
    bool m_end_index_isSet;
    bool m_end_index_isValid;

    QString m_file_path;
    bool m_file_path_isSet;
    bool m_file_path_isValid;

    QString m_line;
    bool m_line_isSet;
    bool m_line_isValid;

    qint32 m_line_number;
    bool m_line_number_isSet;
    bool m_line_number_isValid;

    qint32 m_start_index;
    bool m_start_index_isSet;
    bool m_start_index_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIObjParseError)

#endif // OAIObjParseError_H
