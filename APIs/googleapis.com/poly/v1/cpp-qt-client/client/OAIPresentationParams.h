/**
 * Poly API
 * The Poly API provides read access to assets hosted on poly.google.com to all, and upload access to poly.google.com for whitelisted accounts. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPresentationParams.h
 *
 * Hints for displaying the asset, based on information available when the asset was uploaded.
 */

#ifndef OAIPresentationParams_H
#define OAIPresentationParams_H

#include <QJsonObject>

#include "OAIQuaternion.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIQuaternion;

class OAIPresentationParams : public OAIObject {
public:
    OAIPresentationParams();
    OAIPresentationParams(QString json);
    ~OAIPresentationParams() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBackgroundColor() const;
    void setBackgroundColor(const QString &background_color);
    bool is_background_color_Set() const;
    bool is_background_color_Valid() const;

    QString getColorSpace() const;
    void setColorSpace(const QString &color_space);
    bool is_color_space_Set() const;
    bool is_color_space_Valid() const;

    OAIQuaternion getOrientingRotation() const;
    void setOrientingRotation(const OAIQuaternion &orienting_rotation);
    bool is_orienting_rotation_Set() const;
    bool is_orienting_rotation_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_background_color;
    bool m_background_color_isSet;
    bool m_background_color_isValid;

    QString m_color_space;
    bool m_color_space_isSet;
    bool m_color_space_isValid;

    OAIQuaternion m_orienting_rotation;
    bool m_orienting_rotation_isSet;
    bool m_orienting_rotation_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPresentationParams)

#endif // OAIPresentationParams_H
