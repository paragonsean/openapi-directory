/**
 * Poly API
 * The Poly API provides read access to assets hosted on poly.google.com to all, and upload access to poly.google.com for whitelisted accounts. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUserAsset.h
 *
 * Data about the user&#39;s asset.
 */

#ifndef OAIUserAsset_H
#define OAIUserAsset_H

#include <QJsonObject>

#include "OAIAsset.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAsset;

class OAIUserAsset : public OAIObject {
public:
    OAIUserAsset();
    OAIUserAsset(QString json);
    ~OAIUserAsset() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAsset getAsset() const;
    void setAsset(const OAIAsset &asset);
    bool is_asset_Set() const;
    bool is_asset_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAsset m_asset;
    bool m_asset_isSet;
    bool m_asset_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUserAsset)

#endif // OAIUserAsset_H
