/**
 * Poly API
 * The Poly API provides read access to assets hosted on poly.google.com to all, and upload access to poly.google.com for whitelisted accounts. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFormat.h
 *
 * The same asset can be represented in different formats, for example, a [WaveFront .obj](//en.wikipedia.org/wiki/Wavefront_.obj_file) file with its corresponding .mtl file or a [Khronos glTF](//www.khronos.org/gltf) file with its corresponding .glb binary data. A format refers to a specific representation of an asset and contains all information needed to retrieve and describe this representation.
 */

#ifndef OAIFormat_H
#define OAIFormat_H

#include <QJsonObject>

#include "OAIFile.h"
#include "OAIFormatComplexity.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIFormatComplexity;
class OAIFile;

class OAIFormat : public OAIObject {
public:
    OAIFormat();
    OAIFormat(QString json);
    ~OAIFormat() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIFormatComplexity getFormatComplexity() const;
    void setFormatComplexity(const OAIFormatComplexity &format_complexity);
    bool is_format_complexity_Set() const;
    bool is_format_complexity_Valid() const;

    QString getFormatType() const;
    void setFormatType(const QString &format_type);
    bool is_format_type_Set() const;
    bool is_format_type_Valid() const;

    QList<OAIFile> getResources() const;
    void setResources(const QList<OAIFile> &resources);
    bool is_resources_Set() const;
    bool is_resources_Valid() const;

    OAIFile getRoot() const;
    void setRoot(const OAIFile &root);
    bool is_root_Set() const;
    bool is_root_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIFormatComplexity m_format_complexity;
    bool m_format_complexity_isSet;
    bool m_format_complexity_isValid;

    QString m_format_type;
    bool m_format_type_isSet;
    bool m_format_type_isValid;

    QList<OAIFile> m_resources;
    bool m_resources_isSet;
    bool m_resources_isValid;

    OAIFile m_root;
    bool m_root_isSet;
    bool m_root_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFormat)

#endif // OAIFormat_H
