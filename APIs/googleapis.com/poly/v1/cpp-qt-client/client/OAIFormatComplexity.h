/**
 * Poly API
 * The Poly API provides read access to assets hosted on poly.google.com to all, and upload access to poly.google.com for whitelisted accounts. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFormatComplexity.h
 *
 * Information on the complexity of this Format.
 */

#ifndef OAIFormatComplexity_H
#define OAIFormatComplexity_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIFormatComplexity : public OAIObject {
public:
    OAIFormatComplexity();
    OAIFormatComplexity(QString json);
    ~OAIFormatComplexity() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getLodHint() const;
    void setLodHint(const qint32 &lod_hint);
    bool is_lod_hint_Set() const;
    bool is_lod_hint_Valid() const;

    QString getTriangleCount() const;
    void setTriangleCount(const QString &triangle_count);
    bool is_triangle_count_Set() const;
    bool is_triangle_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_lod_hint;
    bool m_lod_hint_isSet;
    bool m_lod_hint_isValid;

    QString m_triangle_count;
    bool m_triangle_count_isSet;
    bool m_triangle_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFormatComplexity)

#endif // OAIFormatComplexity_H
