# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class File(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, content_type: str=None, relative_path: str=None, url: str=None):
        """File - a model defined in OpenAPI

        :param content_type: The content_type of this File.
        :param relative_path: The relative_path of this File.
        :param url: The url of this File.
        """
        self.openapi_types = {
            'content_type': str,
            'relative_path': str,
            'url': str
        }

        self.attribute_map = {
            'content_type': 'contentType',
            'relative_path': 'relativePath',
            'url': 'url'
        }

        self._content_type = content_type
        self._relative_path = relative_path
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'File':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The File of this File.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def content_type(self):
        """Gets the content_type of this File.

        The MIME content-type, such as `image/png`. For more information, see [MIME types](//developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types).

        :return: The content_type of this File.
        :rtype: str
        """
        return self._content_type

    @content_type.setter
    def content_type(self, content_type):
        """Sets the content_type of this File.

        The MIME content-type, such as `image/png`. For more information, see [MIME types](//developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types).

        :param content_type: The content_type of this File.
        :type content_type: str
        """

        self._content_type = content_type

    @property
    def relative_path(self):
        """Gets the relative_path of this File.

        The path of the resource file relative to the root file. For root or thumbnail files, this is just the filename.

        :return: The relative_path of this File.
        :rtype: str
        """
        return self._relative_path

    @relative_path.setter
    def relative_path(self, relative_path):
        """Sets the relative_path of this File.

        The path of the resource file relative to the root file. For root or thumbnail files, this is just the filename.

        :param relative_path: The relative_path of this File.
        :type relative_path: str
        """

        self._relative_path = relative_path

    @property
    def url(self):
        """Gets the url of this File.

        The URL where the file data can be retrieved.

        :return: The url of this File.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this File.

        The URL where the file data can be retrieved.

        :param url: The url of this File.
        :type url: str
        """

        self._url = url
