# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RemixInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, source_asset: List[str]=None):
        """RemixInfo - a model defined in OpenAPI

        :param source_asset: The source_asset of this RemixInfo.
        """
        self.openapi_types = {
            'source_asset': List[str]
        }

        self.attribute_map = {
            'source_asset': 'sourceAsset'
        }

        self._source_asset = source_asset

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RemixInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RemixInfo of this RemixInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def source_asset(self):
        """Gets the source_asset of this RemixInfo.

        Resource ids for the sources of this remix, of the form: `assets/{ASSET_ID}`

        :return: The source_asset of this RemixInfo.
        :rtype: List[str]
        """
        return self._source_asset

    @source_asset.setter
    def source_asset(self, source_asset):
        """Sets the source_asset of this RemixInfo.

        Resource ids for the sources of this remix, of the form: `assets/{ASSET_ID}`

        :param source_asset: The source_asset of this RemixInfo.
        :type source_asset: List[str]
        """

        self._source_asset = source_asset
