# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.asset import Asset
from openapi_server import util


class ListLikedAssetsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, assets: List[Asset]=None, next_page_token: str=None, total_size: int=None):
        """ListLikedAssetsResponse - a model defined in OpenAPI

        :param assets: The assets of this ListLikedAssetsResponse.
        :param next_page_token: The next_page_token of this ListLikedAssetsResponse.
        :param total_size: The total_size of this ListLikedAssetsResponse.
        """
        self.openapi_types = {
            'assets': List[Asset],
            'next_page_token': str,
            'total_size': int
        }

        self.attribute_map = {
            'assets': 'assets',
            'next_page_token': 'nextPageToken',
            'total_size': 'totalSize'
        }

        self._assets = assets
        self._next_page_token = next_page_token
        self._total_size = total_size

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListLikedAssetsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListLikedAssetsResponse of this ListLikedAssetsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def assets(self):
        """Gets the assets of this ListLikedAssetsResponse.

        A list of assets that match the criteria specified in the request.

        :return: The assets of this ListLikedAssetsResponse.
        :rtype: List[Asset]
        """
        return self._assets

    @assets.setter
    def assets(self, assets):
        """Sets the assets of this ListLikedAssetsResponse.

        A list of assets that match the criteria specified in the request.

        :param assets: The assets of this ListLikedAssetsResponse.
        :type assets: List[Asset]
        """

        self._assets = assets

    @property
    def next_page_token(self):
        """Gets the next_page_token of this ListLikedAssetsResponse.

        The continuation token for retrieving the next page. If empty, indicates that there are no more pages. To get the next page, submit the same request specifying this value as the page_token.

        :return: The next_page_token of this ListLikedAssetsResponse.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this ListLikedAssetsResponse.

        The continuation token for retrieving the next page. If empty, indicates that there are no more pages. To get the next page, submit the same request specifying this value as the page_token.

        :param next_page_token: The next_page_token of this ListLikedAssetsResponse.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token

    @property
    def total_size(self):
        """Gets the total_size of this ListLikedAssetsResponse.

        The total number of assets in the list, without pagination.

        :return: The total_size of this ListLikedAssetsResponse.
        :rtype: int
        """
        return self._total_size

    @total_size.setter
    def total_size(self, total_size):
        """Sets the total_size of this ListLikedAssetsResponse.

        The total number of assets in the list, without pagination.

        :param total_size: The total_size of this ListLikedAssetsResponse.
        :type total_size: int
        """

        self._total_size = total_size
