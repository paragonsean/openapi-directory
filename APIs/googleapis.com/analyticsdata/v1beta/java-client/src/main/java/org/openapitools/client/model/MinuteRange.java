/*
 * Google Analytics Data API
 * Accesses report data in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning. 
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A contiguous set of minutes: &#x60;startMinutesAgo&#x60;, &#x60;startMinutesAgo + 1&#x60;, ..., &#x60;endMinutesAgo&#x60;. Requests are allowed up to 2 minute ranges.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:33:54.521143-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class MinuteRange {
  public static final String SERIALIZED_NAME_END_MINUTES_AGO = "endMinutesAgo";
  @SerializedName(SERIALIZED_NAME_END_MINUTES_AGO)
  private Integer endMinutesAgo;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_START_MINUTES_AGO = "startMinutesAgo";
  @SerializedName(SERIALIZED_NAME_START_MINUTES_AGO)
  private Integer startMinutesAgo;

  public MinuteRange() {
  }

  public MinuteRange endMinutesAgo(Integer endMinutesAgo) {
    this.endMinutesAgo = endMinutesAgo;
    return this;
  }

  /**
   * The inclusive end minute for the query as a number of minutes before now. Cannot be before &#x60;startMinutesAgo&#x60;. For example, &#x60;\&quot;endMinutesAgo\&quot;: 15&#x60; specifies the report should include event data from prior to 15 minutes ago. If unspecified, &#x60;endMinutesAgo&#x60; is defaulted to 0. Standard Analytics properties can request any minute in the last 30 minutes of event data (&#x60;endMinutesAgo &lt;&#x3D; 29&#x60;), and 360 Analytics properties can request any minute in the last 60 minutes of event data (&#x60;endMinutesAgo &lt;&#x3D; 59&#x60;).
   * @return endMinutesAgo
   */
  @javax.annotation.Nullable
  public Integer getEndMinutesAgo() {
    return endMinutesAgo;
  }

  public void setEndMinutesAgo(Integer endMinutesAgo) {
    this.endMinutesAgo = endMinutesAgo;
  }


  public MinuteRange name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Assigns a name to this minute range. The dimension &#x60;dateRange&#x60; is valued to this name in a report response. If set, cannot begin with &#x60;date_range_&#x60; or &#x60;RESERVED_&#x60;. If not set, minute ranges are named by their zero based index in the request: &#x60;date_range_0&#x60;, &#x60;date_range_1&#x60;, etc.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public MinuteRange startMinutesAgo(Integer startMinutesAgo) {
    this.startMinutesAgo = startMinutesAgo;
    return this;
  }

  /**
   * The inclusive start minute for the query as a number of minutes before now. For example, &#x60;\&quot;startMinutesAgo\&quot;: 29&#x60; specifies the report should include event data from 29 minutes ago and after. Cannot be after &#x60;endMinutesAgo&#x60;. If unspecified, &#x60;startMinutesAgo&#x60; is defaulted to 29. Standard Analytics properties can request up to the last 30 minutes of event data (&#x60;startMinutesAgo &lt;&#x3D; 29&#x60;), and 360 Analytics properties can request up to the last 60 minutes of event data (&#x60;startMinutesAgo &lt;&#x3D; 59&#x60;).
   * @return startMinutesAgo
   */
  @javax.annotation.Nullable
  public Integer getStartMinutesAgo() {
    return startMinutesAgo;
  }

  public void setStartMinutesAgo(Integer startMinutesAgo) {
    this.startMinutesAgo = startMinutesAgo;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MinuteRange minuteRange = (MinuteRange) o;
    return Objects.equals(this.endMinutesAgo, minuteRange.endMinutesAgo) &&
        Objects.equals(this.name, minuteRange.name) &&
        Objects.equals(this.startMinutesAgo, minuteRange.startMinutesAgo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(endMinutesAgo, name, startMinutesAgo);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MinuteRange {\n");
    sb.append("    endMinutesAgo: ").append(toIndentedString(endMinutesAgo)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    startMinutesAgo: ").append(toIndentedString(startMinutesAgo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("endMinutesAgo");
    openapiFields.add("name");
    openapiFields.add("startMinutesAgo");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to MinuteRange
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!MinuteRange.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in MinuteRange is not found in the empty JSON string", MinuteRange.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!MinuteRange.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `MinuteRange` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!MinuteRange.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'MinuteRange' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<MinuteRange> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(MinuteRange.class));

       return (TypeAdapter<T>) new TypeAdapter<MinuteRange>() {
           @Override
           public void write(JsonWriter out, MinuteRange value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public MinuteRange read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of MinuteRange given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of MinuteRange
   * @throws IOException if the JSON string is invalid with respect to MinuteRange
   */
  public static MinuteRange fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, MinuteRange.class);
  }

  /**
   * Convert an instance of MinuteRange to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

