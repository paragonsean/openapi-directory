/**
 * Google Analytics Data API
 * Accesses report data in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning. 
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CohortsRange model module.
 * @module model/CohortsRange
 * @version v1beta
 */
class CohortsRange {
    /**
     * Constructs a new <code>CohortsRange</code>.
     * Configures the extended reporting date range for a cohort report. Specifies an offset duration to follow the cohorts over.
     * @alias module:model/CohortsRange
     */
    constructor() { 
        
        CohortsRange.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CohortsRange</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CohortsRange} obj Optional instance to populate.
     * @return {module:model/CohortsRange} The populated <code>CohortsRange</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CohortsRange();

            if (data.hasOwnProperty('endOffset')) {
                obj['endOffset'] = ApiClient.convertToType(data['endOffset'], 'Number');
            }
            if (data.hasOwnProperty('granularity')) {
                obj['granularity'] = ApiClient.convertToType(data['granularity'], 'String');
            }
            if (data.hasOwnProperty('startOffset')) {
                obj['startOffset'] = ApiClient.convertToType(data['startOffset'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CohortsRange</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CohortsRange</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['granularity'] && !(typeof data['granularity'] === 'string' || data['granularity'] instanceof String)) {
            throw new Error("Expected the field `granularity` to be a primitive type in the JSON string but got " + data['granularity']);
        }

        return true;
    }


}



/**
 * Required. `endOffset` specifies the end date of the extended reporting date range for a cohort report. `endOffset` can be any positive integer but is commonly set to 5 to 10 so that reports contain data on the cohort for the next several granularity time periods. If `granularity` is `DAILY`, the `endDate` of the extended reporting date range is `endDate` of the cohort plus `endOffset` days. If `granularity` is `WEEKLY`, the `endDate` of the extended reporting date range is `endDate` of the cohort plus `endOffset * 7` days. If `granularity` is `MONTHLY`, the `endDate` of the extended reporting date range is `endDate` of the cohort plus `endOffset * 30` days.
 * @member {Number} endOffset
 */
CohortsRange.prototype['endOffset'] = undefined;

/**
 * Required. The granularity used to interpret the `startOffset` and `endOffset` for the extended reporting date range for a cohort report.
 * @member {module:model/CohortsRange.GranularityEnum} granularity
 */
CohortsRange.prototype['granularity'] = undefined;

/**
 * `startOffset` specifies the start date of the extended reporting date range for a cohort report. `startOffset` is commonly set to 0 so that reports contain data from the acquisition of the cohort forward. If `granularity` is `DAILY`, the `startDate` of the extended reporting date range is `startDate` of the cohort plus `startOffset` days. If `granularity` is `WEEKLY`, the `startDate` of the extended reporting date range is `startDate` of the cohort plus `startOffset * 7` days. If `granularity` is `MONTHLY`, the `startDate` of the extended reporting date range is `startDate` of the cohort plus `startOffset * 30` days.
 * @member {Number} startOffset
 */
CohortsRange.prototype['startOffset'] = undefined;





/**
 * Allowed values for the <code>granularity</code> property.
 * @enum {String}
 * @readonly
 */
CohortsRange['GranularityEnum'] = {

    /**
     * value: "GRANULARITY_UNSPECIFIED"
     * @const
     */
    "GRANULARITY_UNSPECIFIED": "GRANULARITY_UNSPECIFIED",

    /**
     * value: "DAILY"
     * @const
     */
    "DAILY": "DAILY",

    /**
     * value: "WEEKLY"
     * @const
     */
    "WEEKLY": "WEEKLY",

    /**
     * value: "MONTHLY"
     * @const
     */
    "MONTHLY": "MONTHLY"
};



export default CohortsRange;

