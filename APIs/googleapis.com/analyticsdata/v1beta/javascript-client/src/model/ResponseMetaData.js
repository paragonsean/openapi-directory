/**
 * Google Analytics Data API
 * Accesses report data in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning. 
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SamplingMetadata from './SamplingMetadata';
import SchemaRestrictionResponse from './SchemaRestrictionResponse';

/**
 * The ResponseMetaData model module.
 * @module model/ResponseMetaData
 * @version v1beta
 */
class ResponseMetaData {
    /**
     * Constructs a new <code>ResponseMetaData</code>.
     * Response&#39;s metadata carrying additional information about the report content.
     * @alias module:model/ResponseMetaData
     */
    constructor() { 
        
        ResponseMetaData.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ResponseMetaData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ResponseMetaData} obj Optional instance to populate.
     * @return {module:model/ResponseMetaData} The populated <code>ResponseMetaData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ResponseMetaData();

            if (data.hasOwnProperty('currencyCode')) {
                obj['currencyCode'] = ApiClient.convertToType(data['currencyCode'], 'String');
            }
            if (data.hasOwnProperty('dataLossFromOtherRow')) {
                obj['dataLossFromOtherRow'] = ApiClient.convertToType(data['dataLossFromOtherRow'], 'Boolean');
            }
            if (data.hasOwnProperty('emptyReason')) {
                obj['emptyReason'] = ApiClient.convertToType(data['emptyReason'], 'String');
            }
            if (data.hasOwnProperty('samplingMetadatas')) {
                obj['samplingMetadatas'] = ApiClient.convertToType(data['samplingMetadatas'], [SamplingMetadata]);
            }
            if (data.hasOwnProperty('schemaRestrictionResponse')) {
                obj['schemaRestrictionResponse'] = SchemaRestrictionResponse.constructFromObject(data['schemaRestrictionResponse']);
            }
            if (data.hasOwnProperty('subjectToThresholding')) {
                obj['subjectToThresholding'] = ApiClient.convertToType(data['subjectToThresholding'], 'Boolean');
            }
            if (data.hasOwnProperty('timeZone')) {
                obj['timeZone'] = ApiClient.convertToType(data['timeZone'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ResponseMetaData</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ResponseMetaData</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['currencyCode'] && !(typeof data['currencyCode'] === 'string' || data['currencyCode'] instanceof String)) {
            throw new Error("Expected the field `currencyCode` to be a primitive type in the JSON string but got " + data['currencyCode']);
        }
        // ensure the json data is a string
        if (data['emptyReason'] && !(typeof data['emptyReason'] === 'string' || data['emptyReason'] instanceof String)) {
            throw new Error("Expected the field `emptyReason` to be a primitive type in the JSON string but got " + data['emptyReason']);
        }
        if (data['samplingMetadatas']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['samplingMetadatas'])) {
                throw new Error("Expected the field `samplingMetadatas` to be an array in the JSON data but got " + data['samplingMetadatas']);
            }
            // validate the optional field `samplingMetadatas` (array)
            for (const item of data['samplingMetadatas']) {
                SamplingMetadata.validateJSON(item);
            };
        }
        // validate the optional field `schemaRestrictionResponse`
        if (data['schemaRestrictionResponse']) { // data not null
          SchemaRestrictionResponse.validateJSON(data['schemaRestrictionResponse']);
        }
        // ensure the json data is a string
        if (data['timeZone'] && !(typeof data['timeZone'] === 'string' || data['timeZone'] instanceof String)) {
            throw new Error("Expected the field `timeZone` to be a primitive type in the JSON string but got " + data['timeZone']);
        }

        return true;
    }


}



/**
 * The currency code used in this report. Intended to be used in formatting currency metrics like `purchaseRevenue` for visualization. If currency_code was specified in the request, this response parameter will echo the request parameter; otherwise, this response parameter is the property's current currency_code. Currency codes are string encodings of currency types from the ISO 4217 standard (https://en.wikipedia.org/wiki/ISO_4217); for example \"USD\", \"EUR\", \"JPY\". To learn more, see https://support.google.com/analytics/answer/9796179.
 * @member {String} currencyCode
 */
ResponseMetaData.prototype['currencyCode'] = undefined;

/**
 * If true, indicates some buckets of dimension combinations are rolled into \"(other)\" row. This can happen for high cardinality reports. The metadata parameter dataLossFromOtherRow is populated based on the aggregated data table used in the report. The parameter will be accurately populated regardless of the filters and limits in the report. For example, the (other) row could be dropped from the report because the request contains a filter on sessionSource = google. This parameter will still be populated if data loss from other row was present in the input aggregate data used to generate this report. To learn more, see [About the (other) row and data sampling](https://support.google.com/analytics/answer/13208658#reports).
 * @member {Boolean} dataLossFromOtherRow
 */
ResponseMetaData.prototype['dataLossFromOtherRow'] = undefined;

/**
 * If empty reason is specified, the report is empty for this reason.
 * @member {String} emptyReason
 */
ResponseMetaData.prototype['emptyReason'] = undefined;

/**
 * If this report results is [sampled](https://support.google.com/analytics/answer/13331292), this describes the percentage of events used in this report. One `samplingMetadatas` is populated for each date range. Each `samplingMetadatas` corresponds to a date range in order that date ranges were specified in the request. However if the results are not sampled, this field will not be defined.
 * @member {Array.<module:model/SamplingMetadata>} samplingMetadatas
 */
ResponseMetaData.prototype['samplingMetadatas'] = undefined;

/**
 * @member {module:model/SchemaRestrictionResponse} schemaRestrictionResponse
 */
ResponseMetaData.prototype['schemaRestrictionResponse'] = undefined;

/**
 * If `subjectToThresholding` is true, this report is subject to thresholding and only returns data that meets the minimum aggregation thresholds. It is possible for a request to be subject to thresholding thresholding and no data is absent from the report, and this happens when all data is above the thresholds. To learn more, see [Data thresholds](https://support.google.com/analytics/answer/9383630).
 * @member {Boolean} subjectToThresholding
 */
ResponseMetaData.prototype['subjectToThresholding'] = undefined;

/**
 * The property's current timezone. Intended to be used to interpret time-based dimensions like `hour` and `minute`. Formatted as strings from the IANA Time Zone database (https://www.iana.org/time-zones); for example \"America/New_York\" or \"Asia/Tokyo\".
 * @member {String} timeZone
 */
ResponseMetaData.prototype['timeZone'] = undefined;






export default ResponseMetaData;

