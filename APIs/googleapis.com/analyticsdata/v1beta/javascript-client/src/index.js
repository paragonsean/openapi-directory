/**
 * Google Analytics Data API
 * Accesses report data in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning. 
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import ActiveMetricRestriction from './model/ActiveMetricRestriction';
import AudienceExport from './model/AudienceExport';
import BatchRunPivotReportsRequest from './model/BatchRunPivotReportsRequest';
import BatchRunPivotReportsResponse from './model/BatchRunPivotReportsResponse';
import BatchRunReportsRequest from './model/BatchRunReportsRequest';
import BatchRunReportsResponse from './model/BatchRunReportsResponse';
import BetweenFilter from './model/BetweenFilter';
import CaseExpression from './model/CaseExpression';
import CheckCompatibilityRequest from './model/CheckCompatibilityRequest';
import CheckCompatibilityResponse from './model/CheckCompatibilityResponse';
import Cohort from './model/Cohort';
import CohortReportSettings from './model/CohortReportSettings';
import CohortSpec from './model/CohortSpec';
import CohortsRange from './model/CohortsRange';
import ConcatenateExpression from './model/ConcatenateExpression';
import DateRange from './model/DateRange';
import Dimension from './model/Dimension';
import DimensionCompatibility from './model/DimensionCompatibility';
import DimensionExpression from './model/DimensionExpression';
import DimensionHeader from './model/DimensionHeader';
import DimensionMetadata from './model/DimensionMetadata';
import DimensionOrderBy from './model/DimensionOrderBy';
import DimensionValue from './model/DimensionValue';
import Filter from './model/Filter';
import FilterExpression from './model/FilterExpression';
import FilterExpressionList from './model/FilterExpressionList';
import InListFilter from './model/InListFilter';
import ListAudienceExportsResponse from './model/ListAudienceExportsResponse';
import Metadata from './model/Metadata';
import Metric from './model/Metric';
import MetricCompatibility from './model/MetricCompatibility';
import MetricHeader from './model/MetricHeader';
import MetricMetadata from './model/MetricMetadata';
import MetricOrderBy from './model/MetricOrderBy';
import MetricValue from './model/MetricValue';
import MinuteRange from './model/MinuteRange';
import NumericFilter from './model/NumericFilter';
import NumericValue from './model/NumericValue';
import Operation from './model/Operation';
import OrderBy from './model/OrderBy';
import Pivot from './model/Pivot';
import PivotDimensionHeader from './model/PivotDimensionHeader';
import PivotHeader from './model/PivotHeader';
import PivotOrderBy from './model/PivotOrderBy';
import PivotSelection from './model/PivotSelection';
import PropertyQuota from './model/PropertyQuota';
import QueryAudienceExportRequest from './model/QueryAudienceExportRequest';
import QueryAudienceExportResponse from './model/QueryAudienceExportResponse';
import QuotaStatus from './model/QuotaStatus';
import ResponseMetaData from './model/ResponseMetaData';
import Row from './model/Row';
import RunPivotReportRequest from './model/RunPivotReportRequest';
import RunPivotReportResponse from './model/RunPivotReportResponse';
import RunRealtimeReportRequest from './model/RunRealtimeReportRequest';
import RunRealtimeReportResponse from './model/RunRealtimeReportResponse';
import RunReportRequest from './model/RunReportRequest';
import RunReportResponse from './model/RunReportResponse';
import SamplingMetadata from './model/SamplingMetadata';
import SchemaRestrictionResponse from './model/SchemaRestrictionResponse';
import Status from './model/Status';
import StringFilter from './model/StringFilter';
import V1betaAudienceDimension from './model/V1betaAudienceDimension';
import V1betaAudienceDimensionValue from './model/V1betaAudienceDimensionValue';
import V1betaAudienceRow from './model/V1betaAudienceRow';
import PropertiesApi from './api/PropertiesApi';


/**
* Accesses report data in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning. .<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var GoogleAnalyticsDataApi = require('index'); // See note below*.
* var xxxSvc = new GoogleAnalyticsDataApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new GoogleAnalyticsDataApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new GoogleAnalyticsDataApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new GoogleAnalyticsDataApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v1beta
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The ActiveMetricRestriction model constructor.
     * @property {module:model/ActiveMetricRestriction}
     */
    ActiveMetricRestriction,

    /**
     * The AudienceExport model constructor.
     * @property {module:model/AudienceExport}
     */
    AudienceExport,

    /**
     * The BatchRunPivotReportsRequest model constructor.
     * @property {module:model/BatchRunPivotReportsRequest}
     */
    BatchRunPivotReportsRequest,

    /**
     * The BatchRunPivotReportsResponse model constructor.
     * @property {module:model/BatchRunPivotReportsResponse}
     */
    BatchRunPivotReportsResponse,

    /**
     * The BatchRunReportsRequest model constructor.
     * @property {module:model/BatchRunReportsRequest}
     */
    BatchRunReportsRequest,

    /**
     * The BatchRunReportsResponse model constructor.
     * @property {module:model/BatchRunReportsResponse}
     */
    BatchRunReportsResponse,

    /**
     * The BetweenFilter model constructor.
     * @property {module:model/BetweenFilter}
     */
    BetweenFilter,

    /**
     * The CaseExpression model constructor.
     * @property {module:model/CaseExpression}
     */
    CaseExpression,

    /**
     * The CheckCompatibilityRequest model constructor.
     * @property {module:model/CheckCompatibilityRequest}
     */
    CheckCompatibilityRequest,

    /**
     * The CheckCompatibilityResponse model constructor.
     * @property {module:model/CheckCompatibilityResponse}
     */
    CheckCompatibilityResponse,

    /**
     * The Cohort model constructor.
     * @property {module:model/Cohort}
     */
    Cohort,

    /**
     * The CohortReportSettings model constructor.
     * @property {module:model/CohortReportSettings}
     */
    CohortReportSettings,

    /**
     * The CohortSpec model constructor.
     * @property {module:model/CohortSpec}
     */
    CohortSpec,

    /**
     * The CohortsRange model constructor.
     * @property {module:model/CohortsRange}
     */
    CohortsRange,

    /**
     * The ConcatenateExpression model constructor.
     * @property {module:model/ConcatenateExpression}
     */
    ConcatenateExpression,

    /**
     * The DateRange model constructor.
     * @property {module:model/DateRange}
     */
    DateRange,

    /**
     * The Dimension model constructor.
     * @property {module:model/Dimension}
     */
    Dimension,

    /**
     * The DimensionCompatibility model constructor.
     * @property {module:model/DimensionCompatibility}
     */
    DimensionCompatibility,

    /**
     * The DimensionExpression model constructor.
     * @property {module:model/DimensionExpression}
     */
    DimensionExpression,

    /**
     * The DimensionHeader model constructor.
     * @property {module:model/DimensionHeader}
     */
    DimensionHeader,

    /**
     * The DimensionMetadata model constructor.
     * @property {module:model/DimensionMetadata}
     */
    DimensionMetadata,

    /**
     * The DimensionOrderBy model constructor.
     * @property {module:model/DimensionOrderBy}
     */
    DimensionOrderBy,

    /**
     * The DimensionValue model constructor.
     * @property {module:model/DimensionValue}
     */
    DimensionValue,

    /**
     * The Filter model constructor.
     * @property {module:model/Filter}
     */
    Filter,

    /**
     * The FilterExpression model constructor.
     * @property {module:model/FilterExpression}
     */
    FilterExpression,

    /**
     * The FilterExpressionList model constructor.
     * @property {module:model/FilterExpressionList}
     */
    FilterExpressionList,

    /**
     * The InListFilter model constructor.
     * @property {module:model/InListFilter}
     */
    InListFilter,

    /**
     * The ListAudienceExportsResponse model constructor.
     * @property {module:model/ListAudienceExportsResponse}
     */
    ListAudienceExportsResponse,

    /**
     * The Metadata model constructor.
     * @property {module:model/Metadata}
     */
    Metadata,

    /**
     * The Metric model constructor.
     * @property {module:model/Metric}
     */
    Metric,

    /**
     * The MetricCompatibility model constructor.
     * @property {module:model/MetricCompatibility}
     */
    MetricCompatibility,

    /**
     * The MetricHeader model constructor.
     * @property {module:model/MetricHeader}
     */
    MetricHeader,

    /**
     * The MetricMetadata model constructor.
     * @property {module:model/MetricMetadata}
     */
    MetricMetadata,

    /**
     * The MetricOrderBy model constructor.
     * @property {module:model/MetricOrderBy}
     */
    MetricOrderBy,

    /**
     * The MetricValue model constructor.
     * @property {module:model/MetricValue}
     */
    MetricValue,

    /**
     * The MinuteRange model constructor.
     * @property {module:model/MinuteRange}
     */
    MinuteRange,

    /**
     * The NumericFilter model constructor.
     * @property {module:model/NumericFilter}
     */
    NumericFilter,

    /**
     * The NumericValue model constructor.
     * @property {module:model/NumericValue}
     */
    NumericValue,

    /**
     * The Operation model constructor.
     * @property {module:model/Operation}
     */
    Operation,

    /**
     * The OrderBy model constructor.
     * @property {module:model/OrderBy}
     */
    OrderBy,

    /**
     * The Pivot model constructor.
     * @property {module:model/Pivot}
     */
    Pivot,

    /**
     * The PivotDimensionHeader model constructor.
     * @property {module:model/PivotDimensionHeader}
     */
    PivotDimensionHeader,

    /**
     * The PivotHeader model constructor.
     * @property {module:model/PivotHeader}
     */
    PivotHeader,

    /**
     * The PivotOrderBy model constructor.
     * @property {module:model/PivotOrderBy}
     */
    PivotOrderBy,

    /**
     * The PivotSelection model constructor.
     * @property {module:model/PivotSelection}
     */
    PivotSelection,

    /**
     * The PropertyQuota model constructor.
     * @property {module:model/PropertyQuota}
     */
    PropertyQuota,

    /**
     * The QueryAudienceExportRequest model constructor.
     * @property {module:model/QueryAudienceExportRequest}
     */
    QueryAudienceExportRequest,

    /**
     * The QueryAudienceExportResponse model constructor.
     * @property {module:model/QueryAudienceExportResponse}
     */
    QueryAudienceExportResponse,

    /**
     * The QuotaStatus model constructor.
     * @property {module:model/QuotaStatus}
     */
    QuotaStatus,

    /**
     * The ResponseMetaData model constructor.
     * @property {module:model/ResponseMetaData}
     */
    ResponseMetaData,

    /**
     * The Row model constructor.
     * @property {module:model/Row}
     */
    Row,

    /**
     * The RunPivotReportRequest model constructor.
     * @property {module:model/RunPivotReportRequest}
     */
    RunPivotReportRequest,

    /**
     * The RunPivotReportResponse model constructor.
     * @property {module:model/RunPivotReportResponse}
     */
    RunPivotReportResponse,

    /**
     * The RunRealtimeReportRequest model constructor.
     * @property {module:model/RunRealtimeReportRequest}
     */
    RunRealtimeReportRequest,

    /**
     * The RunRealtimeReportResponse model constructor.
     * @property {module:model/RunRealtimeReportResponse}
     */
    RunRealtimeReportResponse,

    /**
     * The RunReportRequest model constructor.
     * @property {module:model/RunReportRequest}
     */
    RunReportRequest,

    /**
     * The RunReportResponse model constructor.
     * @property {module:model/RunReportResponse}
     */
    RunReportResponse,

    /**
     * The SamplingMetadata model constructor.
     * @property {module:model/SamplingMetadata}
     */
    SamplingMetadata,

    /**
     * The SchemaRestrictionResponse model constructor.
     * @property {module:model/SchemaRestrictionResponse}
     */
    SchemaRestrictionResponse,

    /**
     * The Status model constructor.
     * @property {module:model/Status}
     */
    Status,

    /**
     * The StringFilter model constructor.
     * @property {module:model/StringFilter}
     */
    StringFilter,

    /**
     * The V1betaAudienceDimension model constructor.
     * @property {module:model/V1betaAudienceDimension}
     */
    V1betaAudienceDimension,

    /**
     * The V1betaAudienceDimensionValue model constructor.
     * @property {module:model/V1betaAudienceDimensionValue}
     */
    V1betaAudienceDimensionValue,

    /**
     * The V1betaAudienceRow model constructor.
     * @property {module:model/V1betaAudienceRow}
     */
    V1betaAudienceRow,

    /**
    * The PropertiesApi service constructor.
    * @property {module:api/PropertiesApi}
    */
    PropertiesApi
};
