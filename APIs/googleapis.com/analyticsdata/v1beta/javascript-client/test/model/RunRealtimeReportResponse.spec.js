/**
 * Google Analytics Data API
 * Accesses report data in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning. 
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GoogleAnalyticsDataApi);
  }
}(this, function(expect, GoogleAnalyticsDataApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GoogleAnalyticsDataApi.RunRealtimeReportResponse();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('RunRealtimeReportResponse', function() {
    it('should create an instance of RunRealtimeReportResponse', function() {
      // uncomment below and update the code to test RunRealtimeReportResponse
      //var instance = new GoogleAnalyticsDataApi.RunRealtimeReportResponse();
      //expect(instance).to.be.a(GoogleAnalyticsDataApi.RunRealtimeReportResponse);
    });

    it('should have the property dimensionHeaders (base name: "dimensionHeaders")', function() {
      // uncomment below and update the code to test the property dimensionHeaders
      //var instance = new GoogleAnalyticsDataApi.RunRealtimeReportResponse();
      //expect(instance).to.be();
    });

    it('should have the property kind (base name: "kind")', function() {
      // uncomment below and update the code to test the property kind
      //var instance = new GoogleAnalyticsDataApi.RunRealtimeReportResponse();
      //expect(instance).to.be();
    });

    it('should have the property maximums (base name: "maximums")', function() {
      // uncomment below and update the code to test the property maximums
      //var instance = new GoogleAnalyticsDataApi.RunRealtimeReportResponse();
      //expect(instance).to.be();
    });

    it('should have the property metricHeaders (base name: "metricHeaders")', function() {
      // uncomment below and update the code to test the property metricHeaders
      //var instance = new GoogleAnalyticsDataApi.RunRealtimeReportResponse();
      //expect(instance).to.be();
    });

    it('should have the property minimums (base name: "minimums")', function() {
      // uncomment below and update the code to test the property minimums
      //var instance = new GoogleAnalyticsDataApi.RunRealtimeReportResponse();
      //expect(instance).to.be();
    });

    it('should have the property propertyQuota (base name: "propertyQuota")', function() {
      // uncomment below and update the code to test the property propertyQuota
      //var instance = new GoogleAnalyticsDataApi.RunRealtimeReportResponse();
      //expect(instance).to.be();
    });

    it('should have the property rowCount (base name: "rowCount")', function() {
      // uncomment below and update the code to test the property rowCount
      //var instance = new GoogleAnalyticsDataApi.RunRealtimeReportResponse();
      //expect(instance).to.be();
    });

    it('should have the property rows (base name: "rows")', function() {
      // uncomment below and update the code to test the property rows
      //var instance = new GoogleAnalyticsDataApi.RunRealtimeReportResponse();
      //expect(instance).to.be();
    });

    it('should have the property totals (base name: "totals")', function() {
      // uncomment below and update the code to test the property totals
      //var instance = new GoogleAnalyticsDataApi.RunRealtimeReportResponse();
      //expect(instance).to.be();
    });

  });

}));
