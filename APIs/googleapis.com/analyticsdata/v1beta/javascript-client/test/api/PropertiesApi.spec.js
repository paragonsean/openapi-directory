/**
 * Google Analytics Data API
 * Accesses report data in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning. 
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GoogleAnalyticsDataApi);
  }
}(this, function(expect, GoogleAnalyticsDataApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GoogleAnalyticsDataApi.PropertiesApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PropertiesApi', function() {
    describe('analyticsdataPropertiesAudienceExportsCreate', function() {
      it('should call analyticsdataPropertiesAudienceExportsCreate successfully', function(done) {
        //uncomment below and update the code to test analyticsdataPropertiesAudienceExportsCreate
        //instance.analyticsdataPropertiesAudienceExportsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('analyticsdataPropertiesAudienceExportsGet', function() {
      it('should call analyticsdataPropertiesAudienceExportsGet successfully', function(done) {
        //uncomment below and update the code to test analyticsdataPropertiesAudienceExportsGet
        //instance.analyticsdataPropertiesAudienceExportsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('analyticsdataPropertiesAudienceExportsList', function() {
      it('should call analyticsdataPropertiesAudienceExportsList successfully', function(done) {
        //uncomment below and update the code to test analyticsdataPropertiesAudienceExportsList
        //instance.analyticsdataPropertiesAudienceExportsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('analyticsdataPropertiesAudienceExportsQuery', function() {
      it('should call analyticsdataPropertiesAudienceExportsQuery successfully', function(done) {
        //uncomment below and update the code to test analyticsdataPropertiesAudienceExportsQuery
        //instance.analyticsdataPropertiesAudienceExportsQuery(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('analyticsdataPropertiesBatchRunPivotReports', function() {
      it('should call analyticsdataPropertiesBatchRunPivotReports successfully', function(done) {
        //uncomment below and update the code to test analyticsdataPropertiesBatchRunPivotReports
        //instance.analyticsdataPropertiesBatchRunPivotReports(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('analyticsdataPropertiesBatchRunReports', function() {
      it('should call analyticsdataPropertiesBatchRunReports successfully', function(done) {
        //uncomment below and update the code to test analyticsdataPropertiesBatchRunReports
        //instance.analyticsdataPropertiesBatchRunReports(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('analyticsdataPropertiesCheckCompatibility', function() {
      it('should call analyticsdataPropertiesCheckCompatibility successfully', function(done) {
        //uncomment below and update the code to test analyticsdataPropertiesCheckCompatibility
        //instance.analyticsdataPropertiesCheckCompatibility(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('analyticsdataPropertiesRunPivotReport', function() {
      it('should call analyticsdataPropertiesRunPivotReport successfully', function(done) {
        //uncomment below and update the code to test analyticsdataPropertiesRunPivotReport
        //instance.analyticsdataPropertiesRunPivotReport(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('analyticsdataPropertiesRunRealtimeReport', function() {
      it('should call analyticsdataPropertiesRunRealtimeReport successfully', function(done) {
        //uncomment below and update the code to test analyticsdataPropertiesRunRealtimeReport
        //instance.analyticsdataPropertiesRunRealtimeReport(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('analyticsdataPropertiesRunReport', function() {
      it('should call analyticsdataPropertiesRunReport successfully', function(done) {
        //uncomment below and update the code to test analyticsdataPropertiesRunReport
        //instance.analyticsdataPropertiesRunReport(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
