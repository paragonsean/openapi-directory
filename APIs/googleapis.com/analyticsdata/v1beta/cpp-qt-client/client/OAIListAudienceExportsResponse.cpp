/**
 * Google Analytics Data API
 * Accesses report data in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning. 
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListAudienceExportsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListAudienceExportsResponse::OAIListAudienceExportsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListAudienceExportsResponse::OAIListAudienceExportsResponse() {
    this->initializeModel();
}

OAIListAudienceExportsResponse::~OAIListAudienceExportsResponse() {}

void OAIListAudienceExportsResponse::initializeModel() {

    m_audience_exports_isSet = false;
    m_audience_exports_isValid = false;

    m_next_page_token_isSet = false;
    m_next_page_token_isValid = false;
}

void OAIListAudienceExportsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListAudienceExportsResponse::fromJsonObject(QJsonObject json) {

    m_audience_exports_isValid = ::OpenAPI::fromJsonValue(m_audience_exports, json[QString("audienceExports")]);
    m_audience_exports_isSet = !json[QString("audienceExports")].isNull() && m_audience_exports_isValid;

    m_next_page_token_isValid = ::OpenAPI::fromJsonValue(m_next_page_token, json[QString("nextPageToken")]);
    m_next_page_token_isSet = !json[QString("nextPageToken")].isNull() && m_next_page_token_isValid;
}

QString OAIListAudienceExportsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListAudienceExportsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_audience_exports.size() > 0) {
        obj.insert(QString("audienceExports"), ::OpenAPI::toJsonValue(m_audience_exports));
    }
    if (m_next_page_token_isSet) {
        obj.insert(QString("nextPageToken"), ::OpenAPI::toJsonValue(m_next_page_token));
    }
    return obj;
}

QList<OAIAudienceExport> OAIListAudienceExportsResponse::getAudienceExports() const {
    return m_audience_exports;
}
void OAIListAudienceExportsResponse::setAudienceExports(const QList<OAIAudienceExport> &audience_exports) {
    m_audience_exports = audience_exports;
    m_audience_exports_isSet = true;
}

bool OAIListAudienceExportsResponse::is_audience_exports_Set() const{
    return m_audience_exports_isSet;
}

bool OAIListAudienceExportsResponse::is_audience_exports_Valid() const{
    return m_audience_exports_isValid;
}

QString OAIListAudienceExportsResponse::getNextPageToken() const {
    return m_next_page_token;
}
void OAIListAudienceExportsResponse::setNextPageToken(const QString &next_page_token) {
    m_next_page_token = next_page_token;
    m_next_page_token_isSet = true;
}

bool OAIListAudienceExportsResponse::is_next_page_token_Set() const{
    return m_next_page_token_isSet;
}

bool OAIListAudienceExportsResponse::is_next_page_token_Valid() const{
    return m_next_page_token_isValid;
}

bool OAIListAudienceExportsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_audience_exports.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_page_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListAudienceExportsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
