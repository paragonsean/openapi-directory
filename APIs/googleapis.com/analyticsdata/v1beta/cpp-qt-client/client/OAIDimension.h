/**
 * Google Analytics Data API
 * Accesses report data in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning. 
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDimension.h
 *
 * Dimensions are attributes of your data. For example, the dimension city indicates the city from which an event originates. Dimension values in report responses are strings; for example, the city could be \&quot;Paris\&quot; or \&quot;New York\&quot;. Requests are allowed up to 9 dimensions.
 */

#ifndef OAIDimension_H
#define OAIDimension_H

#include <QJsonObject>

#include "OAIDimensionExpression.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDimensionExpression;

class OAIDimension : public OAIObject {
public:
    OAIDimension();
    OAIDimension(QString json);
    ~OAIDimension() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIDimensionExpression getDimensionExpression() const;
    void setDimensionExpression(const OAIDimensionExpression &dimension_expression);
    bool is_dimension_expression_Set() const;
    bool is_dimension_expression_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIDimensionExpression m_dimension_expression;
    bool m_dimension_expression_isSet;
    bool m_dimension_expression_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDimension)

#endif // OAIDimension_H
