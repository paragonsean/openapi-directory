/**
 * Google Analytics Data API
 * Accesses report data in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning. 
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOrderBy.h
 *
 * Order bys define how rows will be sorted in the response. For example, ordering rows by descending event count is one ordering, and ordering rows by the event name string is a different ordering.
 */

#ifndef OAIOrderBy_H
#define OAIOrderBy_H

#include <QJsonObject>

#include "OAIDimensionOrderBy.h"
#include "OAIMetricOrderBy.h"
#include "OAIPivotOrderBy.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDimensionOrderBy;
class OAIMetricOrderBy;
class OAIPivotOrderBy;

class OAIOrderBy : public OAIObject {
public:
    OAIOrderBy();
    OAIOrderBy(QString json);
    ~OAIOrderBy() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isDesc() const;
    void setDesc(const bool &desc);
    bool is_desc_Set() const;
    bool is_desc_Valid() const;

    OAIDimensionOrderBy getDimension() const;
    void setDimension(const OAIDimensionOrderBy &dimension);
    bool is_dimension_Set() const;
    bool is_dimension_Valid() const;

    OAIMetricOrderBy getMetric() const;
    void setMetric(const OAIMetricOrderBy &metric);
    bool is_metric_Set() const;
    bool is_metric_Valid() const;

    OAIPivotOrderBy getPivot() const;
    void setPivot(const OAIPivotOrderBy &pivot);
    bool is_pivot_Set() const;
    bool is_pivot_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_desc;
    bool m_desc_isSet;
    bool m_desc_isValid;

    OAIDimensionOrderBy m_dimension;
    bool m_dimension_isSet;
    bool m_dimension_isValid;

    OAIMetricOrderBy m_metric;
    bool m_metric_isSet;
    bool m_metric_isValid;

    OAIPivotOrderBy m_pivot;
    bool m_pivot_isSet;
    bool m_pivot_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOrderBy)

#endif // OAIOrderBy_H
