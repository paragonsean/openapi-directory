/**
 * Google Analytics Data API
 * Accesses report data in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning. 
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIResponseMetaData.h
 *
 * Response&#39;s metadata carrying additional information about the report content.
 */

#ifndef OAIResponseMetaData_H
#define OAIResponseMetaData_H

#include <QJsonObject>

#include "OAISamplingMetadata.h"
#include "OAISchemaRestrictionResponse.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISamplingMetadata;
class OAISchemaRestrictionResponse;

class OAIResponseMetaData : public OAIObject {
public:
    OAIResponseMetaData();
    OAIResponseMetaData(QString json);
    ~OAIResponseMetaData() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCurrencyCode() const;
    void setCurrencyCode(const QString &currency_code);
    bool is_currency_code_Set() const;
    bool is_currency_code_Valid() const;

    bool isDataLossFromOtherRow() const;
    void setDataLossFromOtherRow(const bool &data_loss_from_other_row);
    bool is_data_loss_from_other_row_Set() const;
    bool is_data_loss_from_other_row_Valid() const;

    QString getEmptyReason() const;
    void setEmptyReason(const QString &empty_reason);
    bool is_empty_reason_Set() const;
    bool is_empty_reason_Valid() const;

    QList<OAISamplingMetadata> getSamplingMetadatas() const;
    void setSamplingMetadatas(const QList<OAISamplingMetadata> &sampling_metadatas);
    bool is_sampling_metadatas_Set() const;
    bool is_sampling_metadatas_Valid() const;

    OAISchemaRestrictionResponse getSchemaRestrictionResponse() const;
    void setSchemaRestrictionResponse(const OAISchemaRestrictionResponse &schema_restriction_response);
    bool is_schema_restriction_response_Set() const;
    bool is_schema_restriction_response_Valid() const;

    bool isSubjectToThresholding() const;
    void setSubjectToThresholding(const bool &subject_to_thresholding);
    bool is_subject_to_thresholding_Set() const;
    bool is_subject_to_thresholding_Valid() const;

    QString getTimeZone() const;
    void setTimeZone(const QString &time_zone);
    bool is_time_zone_Set() const;
    bool is_time_zone_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_currency_code;
    bool m_currency_code_isSet;
    bool m_currency_code_isValid;

    bool m_data_loss_from_other_row;
    bool m_data_loss_from_other_row_isSet;
    bool m_data_loss_from_other_row_isValid;

    QString m_empty_reason;
    bool m_empty_reason_isSet;
    bool m_empty_reason_isValid;

    QList<OAISamplingMetadata> m_sampling_metadatas;
    bool m_sampling_metadatas_isSet;
    bool m_sampling_metadatas_isValid;

    OAISchemaRestrictionResponse m_schema_restriction_response;
    bool m_schema_restriction_response_isSet;
    bool m_schema_restriction_response_isValid;

    bool m_subject_to_thresholding;
    bool m_subject_to_thresholding_isSet;
    bool m_subject_to_thresholding_isValid;

    QString m_time_zone;
    bool m_time_zone_isSet;
    bool m_time_zone_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIResponseMetaData)

#endif // OAIResponseMetaData_H
