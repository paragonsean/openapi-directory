/**
 * Google Analytics Data API
 * Accesses report data in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning. 
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMinuteRange.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMinuteRange::OAIMinuteRange(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMinuteRange::OAIMinuteRange() {
    this->initializeModel();
}

OAIMinuteRange::~OAIMinuteRange() {}

void OAIMinuteRange::initializeModel() {

    m_end_minutes_ago_isSet = false;
    m_end_minutes_ago_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_start_minutes_ago_isSet = false;
    m_start_minutes_ago_isValid = false;
}

void OAIMinuteRange::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMinuteRange::fromJsonObject(QJsonObject json) {

    m_end_minutes_ago_isValid = ::OpenAPI::fromJsonValue(m_end_minutes_ago, json[QString("endMinutesAgo")]);
    m_end_minutes_ago_isSet = !json[QString("endMinutesAgo")].isNull() && m_end_minutes_ago_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_start_minutes_ago_isValid = ::OpenAPI::fromJsonValue(m_start_minutes_ago, json[QString("startMinutesAgo")]);
    m_start_minutes_ago_isSet = !json[QString("startMinutesAgo")].isNull() && m_start_minutes_ago_isValid;
}

QString OAIMinuteRange::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMinuteRange::asJsonObject() const {
    QJsonObject obj;
    if (m_end_minutes_ago_isSet) {
        obj.insert(QString("endMinutesAgo"), ::OpenAPI::toJsonValue(m_end_minutes_ago));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_start_minutes_ago_isSet) {
        obj.insert(QString("startMinutesAgo"), ::OpenAPI::toJsonValue(m_start_minutes_ago));
    }
    return obj;
}

qint32 OAIMinuteRange::getEndMinutesAgo() const {
    return m_end_minutes_ago;
}
void OAIMinuteRange::setEndMinutesAgo(const qint32 &end_minutes_ago) {
    m_end_minutes_ago = end_minutes_ago;
    m_end_minutes_ago_isSet = true;
}

bool OAIMinuteRange::is_end_minutes_ago_Set() const{
    return m_end_minutes_ago_isSet;
}

bool OAIMinuteRange::is_end_minutes_ago_Valid() const{
    return m_end_minutes_ago_isValid;
}

QString OAIMinuteRange::getName() const {
    return m_name;
}
void OAIMinuteRange::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIMinuteRange::is_name_Set() const{
    return m_name_isSet;
}

bool OAIMinuteRange::is_name_Valid() const{
    return m_name_isValid;
}

qint32 OAIMinuteRange::getStartMinutesAgo() const {
    return m_start_minutes_ago;
}
void OAIMinuteRange::setStartMinutesAgo(const qint32 &start_minutes_ago) {
    m_start_minutes_ago = start_minutes_ago;
    m_start_minutes_ago_isSet = true;
}

bool OAIMinuteRange::is_start_minutes_ago_Set() const{
    return m_start_minutes_ago_isSet;
}

bool OAIMinuteRange::is_start_minutes_ago_Valid() const{
    return m_start_minutes_ago_isValid;
}

bool OAIMinuteRange::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_end_minutes_ago_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_minutes_ago_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMinuteRange::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
