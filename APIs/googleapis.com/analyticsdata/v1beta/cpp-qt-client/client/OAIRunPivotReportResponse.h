/**
 * Google Analytics Data API
 * Accesses report data in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning. 
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRunPivotReportResponse.h
 *
 * The response pivot report table corresponding to a pivot request.
 */

#ifndef OAIRunPivotReportResponse_H
#define OAIRunPivotReportResponse_H

#include <QJsonObject>

#include "OAIDimensionHeader.h"
#include "OAIMetricHeader.h"
#include "OAIPivotHeader.h"
#include "OAIPropertyQuota.h"
#include "OAIResponseMetaData.h"
#include "OAIRow.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRow;
class OAIDimensionHeader;
class OAIResponseMetaData;
class OAIMetricHeader;
class OAIPivotHeader;
class OAIPropertyQuota;

class OAIRunPivotReportResponse : public OAIObject {
public:
    OAIRunPivotReportResponse();
    OAIRunPivotReportResponse(QString json);
    ~OAIRunPivotReportResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIRow> getAggregates() const;
    void setAggregates(const QList<OAIRow> &aggregates);
    bool is_aggregates_Set() const;
    bool is_aggregates_Valid() const;

    QList<OAIDimensionHeader> getDimensionHeaders() const;
    void setDimensionHeaders(const QList<OAIDimensionHeader> &dimension_headers);
    bool is_dimension_headers_Set() const;
    bool is_dimension_headers_Valid() const;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    OAIResponseMetaData getMetadata() const;
    void setMetadata(const OAIResponseMetaData &metadata);
    bool is_metadata_Set() const;
    bool is_metadata_Valid() const;

    QList<OAIMetricHeader> getMetricHeaders() const;
    void setMetricHeaders(const QList<OAIMetricHeader> &metric_headers);
    bool is_metric_headers_Set() const;
    bool is_metric_headers_Valid() const;

    QList<OAIPivotHeader> getPivotHeaders() const;
    void setPivotHeaders(const QList<OAIPivotHeader> &pivot_headers);
    bool is_pivot_headers_Set() const;
    bool is_pivot_headers_Valid() const;

    OAIPropertyQuota getPropertyQuota() const;
    void setPropertyQuota(const OAIPropertyQuota &property_quota);
    bool is_property_quota_Set() const;
    bool is_property_quota_Valid() const;

    QList<OAIRow> getRows() const;
    void setRows(const QList<OAIRow> &rows);
    bool is_rows_Set() const;
    bool is_rows_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIRow> m_aggregates;
    bool m_aggregates_isSet;
    bool m_aggregates_isValid;

    QList<OAIDimensionHeader> m_dimension_headers;
    bool m_dimension_headers_isSet;
    bool m_dimension_headers_isValid;

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    OAIResponseMetaData m_metadata;
    bool m_metadata_isSet;
    bool m_metadata_isValid;

    QList<OAIMetricHeader> m_metric_headers;
    bool m_metric_headers_isSet;
    bool m_metric_headers_isValid;

    QList<OAIPivotHeader> m_pivot_headers;
    bool m_pivot_headers_isSet;
    bool m_pivot_headers_isValid;

    OAIPropertyQuota m_property_quota;
    bool m_property_quota_isSet;
    bool m_property_quota_isValid;

    QList<OAIRow> m_rows;
    bool m_rows_isSet;
    bool m_rows_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRunPivotReportResponse)

#endif // OAIRunPivotReportResponse_H
