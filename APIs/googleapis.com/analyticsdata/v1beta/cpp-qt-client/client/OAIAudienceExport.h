/**
 * Google Analytics Data API
 * Accesses report data in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning. 
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAudienceExport.h
 *
 * An audience export is a list of users in an audience at the time of the list&#39;s creation. One audience may have multiple audience exports created for different days.
 */

#ifndef OAIAudienceExport_H
#define OAIAudienceExport_H

#include <QJsonObject>

#include "OAIV1betaAudienceDimension.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIV1betaAudienceDimension;

class OAIAudienceExport : public OAIObject {
public:
    OAIAudienceExport();
    OAIAudienceExport(QString json);
    ~OAIAudienceExport() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAudience() const;
    void setAudience(const QString &audience);
    bool is_audience_Set() const;
    bool is_audience_Valid() const;

    QString getAudienceDisplayName() const;
    void setAudienceDisplayName(const QString &audience_display_name);
    bool is_audience_display_name_Set() const;
    bool is_audience_display_name_Valid() const;

    QString getBeginCreatingTime() const;
    void setBeginCreatingTime(const QString &begin_creating_time);
    bool is_begin_creating_time_Set() const;
    bool is_begin_creating_time_Valid() const;

    qint32 getCreationQuotaTokensCharged() const;
    void setCreationQuotaTokensCharged(const qint32 &creation_quota_tokens_charged);
    bool is_creation_quota_tokens_charged_Set() const;
    bool is_creation_quota_tokens_charged_Valid() const;

    QList<OAIV1betaAudienceDimension> getDimensions() const;
    void setDimensions(const QList<OAIV1betaAudienceDimension> &dimensions);
    bool is_dimensions_Set() const;
    bool is_dimensions_Valid() const;

    QString getErrorMessage() const;
    void setErrorMessage(const QString &error_message);
    bool is_error_message_Set() const;
    bool is_error_message_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    double getPercentageCompleted() const;
    void setPercentageCompleted(const double &percentage_completed);
    bool is_percentage_completed_Set() const;
    bool is_percentage_completed_Valid() const;

    qint32 getRowCount() const;
    void setRowCount(const qint32 &row_count);
    bool is_row_count_Set() const;
    bool is_row_count_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_audience;
    bool m_audience_isSet;
    bool m_audience_isValid;

    QString m_audience_display_name;
    bool m_audience_display_name_isSet;
    bool m_audience_display_name_isValid;

    QString m_begin_creating_time;
    bool m_begin_creating_time_isSet;
    bool m_begin_creating_time_isValid;

    qint32 m_creation_quota_tokens_charged;
    bool m_creation_quota_tokens_charged_isSet;
    bool m_creation_quota_tokens_charged_isValid;

    QList<OAIV1betaAudienceDimension> m_dimensions;
    bool m_dimensions_isSet;
    bool m_dimensions_isValid;

    QString m_error_message;
    bool m_error_message_isSet;
    bool m_error_message_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    double m_percentage_completed;
    bool m_percentage_completed_isSet;
    bool m_percentage_completed_isValid;

    qint32 m_row_count;
    bool m_row_count_isSet;
    bool m_row_count_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAudienceExport)

#endif // OAIAudienceExport_H
