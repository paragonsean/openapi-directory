/**
 * Google Analytics Data API
 * Accesses report data in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning. 
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPivotHeader.h
 *
 * Dimensions&#39; values in a single pivot.
 */

#ifndef OAIPivotHeader_H
#define OAIPivotHeader_H

#include <QJsonObject>

#include "OAIPivotDimensionHeader.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPivotDimensionHeader;

class OAIPivotHeader : public OAIObject {
public:
    OAIPivotHeader();
    OAIPivotHeader(QString json);
    ~OAIPivotHeader() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIPivotDimensionHeader> getPivotDimensionHeaders() const;
    void setPivotDimensionHeaders(const QList<OAIPivotDimensionHeader> &pivot_dimension_headers);
    bool is_pivot_dimension_headers_Set() const;
    bool is_pivot_dimension_headers_Valid() const;

    qint32 getRowCount() const;
    void setRowCount(const qint32 &row_count);
    bool is_row_count_Set() const;
    bool is_row_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIPivotDimensionHeader> m_pivot_dimension_headers;
    bool m_pivot_dimension_headers_isSet;
    bool m_pivot_dimension_headers_isValid;

    qint32 m_row_count;
    bool m_row_count_isSet;
    bool m_row_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPivotHeader)

#endif // OAIPivotHeader_H
