/**
 * Google Analytics Data API
 * Accesses report data in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning. 
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIV1betaAudienceRow.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIV1betaAudienceRow::OAIV1betaAudienceRow(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIV1betaAudienceRow::OAIV1betaAudienceRow() {
    this->initializeModel();
}

OAIV1betaAudienceRow::~OAIV1betaAudienceRow() {}

void OAIV1betaAudienceRow::initializeModel() {

    m_dimension_values_isSet = false;
    m_dimension_values_isValid = false;
}

void OAIV1betaAudienceRow::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIV1betaAudienceRow::fromJsonObject(QJsonObject json) {

    m_dimension_values_isValid = ::OpenAPI::fromJsonValue(m_dimension_values, json[QString("dimensionValues")]);
    m_dimension_values_isSet = !json[QString("dimensionValues")].isNull() && m_dimension_values_isValid;
}

QString OAIV1betaAudienceRow::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIV1betaAudienceRow::asJsonObject() const {
    QJsonObject obj;
    if (m_dimension_values.size() > 0) {
        obj.insert(QString("dimensionValues"), ::OpenAPI::toJsonValue(m_dimension_values));
    }
    return obj;
}

QList<OAIV1betaAudienceDimensionValue> OAIV1betaAudienceRow::getDimensionValues() const {
    return m_dimension_values;
}
void OAIV1betaAudienceRow::setDimensionValues(const QList<OAIV1betaAudienceDimensionValue> &dimension_values) {
    m_dimension_values = dimension_values;
    m_dimension_values_isSet = true;
}

bool OAIV1betaAudienceRow::is_dimension_values_Set() const{
    return m_dimension_values_isSet;
}

bool OAIV1betaAudienceRow::is_dimension_values_Valid() const{
    return m_dimension_values_isValid;
}

bool OAIV1betaAudienceRow::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_dimension_values.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIV1betaAudienceRow::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
