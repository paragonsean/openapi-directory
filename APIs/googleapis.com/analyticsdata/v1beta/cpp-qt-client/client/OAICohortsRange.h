/**
 * Google Analytics Data API
 * Accesses report data in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning. 
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICohortsRange.h
 *
 * Configures the extended reporting date range for a cohort report. Specifies an offset duration to follow the cohorts over.
 */

#ifndef OAICohortsRange_H
#define OAICohortsRange_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICohortsRange : public OAIObject {
public:
    OAICohortsRange();
    OAICohortsRange(QString json);
    ~OAICohortsRange() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getEndOffset() const;
    void setEndOffset(const qint32 &end_offset);
    bool is_end_offset_Set() const;
    bool is_end_offset_Valid() const;

    QString getGranularity() const;
    void setGranularity(const QString &granularity);
    bool is_granularity_Set() const;
    bool is_granularity_Valid() const;

    qint32 getStartOffset() const;
    void setStartOffset(const qint32 &start_offset);
    bool is_start_offset_Set() const;
    bool is_start_offset_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_end_offset;
    bool m_end_offset_isSet;
    bool m_end_offset_isValid;

    QString m_granularity;
    bool m_granularity_isSet;
    bool m_granularity_isValid;

    qint32 m_start_offset;
    bool m_start_offset_isSet;
    bool m_start_offset_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICohortsRange)

#endif // OAICohortsRange_H
