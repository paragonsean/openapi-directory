/**
 * Google Analytics Data API
 * Accesses report data in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning. 
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDimensionCompatibility.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDimensionCompatibility::OAIDimensionCompatibility(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDimensionCompatibility::OAIDimensionCompatibility() {
    this->initializeModel();
}

OAIDimensionCompatibility::~OAIDimensionCompatibility() {}

void OAIDimensionCompatibility::initializeModel() {

    m_compatibility_isSet = false;
    m_compatibility_isValid = false;

    m_dimension_metadata_isSet = false;
    m_dimension_metadata_isValid = false;
}

void OAIDimensionCompatibility::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDimensionCompatibility::fromJsonObject(QJsonObject json) {

    m_compatibility_isValid = ::OpenAPI::fromJsonValue(m_compatibility, json[QString("compatibility")]);
    m_compatibility_isSet = !json[QString("compatibility")].isNull() && m_compatibility_isValid;

    m_dimension_metadata_isValid = ::OpenAPI::fromJsonValue(m_dimension_metadata, json[QString("dimensionMetadata")]);
    m_dimension_metadata_isSet = !json[QString("dimensionMetadata")].isNull() && m_dimension_metadata_isValid;
}

QString OAIDimensionCompatibility::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDimensionCompatibility::asJsonObject() const {
    QJsonObject obj;
    if (m_compatibility_isSet) {
        obj.insert(QString("compatibility"), ::OpenAPI::toJsonValue(m_compatibility));
    }
    if (m_dimension_metadata.isSet()) {
        obj.insert(QString("dimensionMetadata"), ::OpenAPI::toJsonValue(m_dimension_metadata));
    }
    return obj;
}

QString OAIDimensionCompatibility::getCompatibility() const {
    return m_compatibility;
}
void OAIDimensionCompatibility::setCompatibility(const QString &compatibility) {
    m_compatibility = compatibility;
    m_compatibility_isSet = true;
}

bool OAIDimensionCompatibility::is_compatibility_Set() const{
    return m_compatibility_isSet;
}

bool OAIDimensionCompatibility::is_compatibility_Valid() const{
    return m_compatibility_isValid;
}

OAIDimensionMetadata OAIDimensionCompatibility::getDimensionMetadata() const {
    return m_dimension_metadata;
}
void OAIDimensionCompatibility::setDimensionMetadata(const OAIDimensionMetadata &dimension_metadata) {
    m_dimension_metadata = dimension_metadata;
    m_dimension_metadata_isSet = true;
}

bool OAIDimensionCompatibility::is_dimension_metadata_Set() const{
    return m_dimension_metadata_isSet;
}

bool OAIDimensionCompatibility::is_dimension_metadata_Valid() const{
    return m_dimension_metadata_isValid;
}

bool OAIDimensionCompatibility::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_compatibility_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dimension_metadata.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDimensionCompatibility::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
