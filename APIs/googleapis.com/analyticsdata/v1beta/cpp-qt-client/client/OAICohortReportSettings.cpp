/**
 * Google Analytics Data API
 * Accesses report data in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning. 
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICohortReportSettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICohortReportSettings::OAICohortReportSettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICohortReportSettings::OAICohortReportSettings() {
    this->initializeModel();
}

OAICohortReportSettings::~OAICohortReportSettings() {}

void OAICohortReportSettings::initializeModel() {

    m_accumulate_isSet = false;
    m_accumulate_isValid = false;
}

void OAICohortReportSettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICohortReportSettings::fromJsonObject(QJsonObject json) {

    m_accumulate_isValid = ::OpenAPI::fromJsonValue(m_accumulate, json[QString("accumulate")]);
    m_accumulate_isSet = !json[QString("accumulate")].isNull() && m_accumulate_isValid;
}

QString OAICohortReportSettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICohortReportSettings::asJsonObject() const {
    QJsonObject obj;
    if (m_accumulate_isSet) {
        obj.insert(QString("accumulate"), ::OpenAPI::toJsonValue(m_accumulate));
    }
    return obj;
}

bool OAICohortReportSettings::isAccumulate() const {
    return m_accumulate;
}
void OAICohortReportSettings::setAccumulate(const bool &accumulate) {
    m_accumulate = accumulate;
    m_accumulate_isSet = true;
}

bool OAICohortReportSettings::is_accumulate_Set() const{
    return m_accumulate_isSet;
}

bool OAICohortReportSettings::is_accumulate_Valid() const{
    return m_accumulate_isValid;
}

bool OAICohortReportSettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_accumulate_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICohortReportSettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
