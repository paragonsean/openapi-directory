/**
 * Google Analytics Data API
 * Accesses report data in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning. 
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISamplingMetadata.h
 *
 * If this report results is [sampled](https://support.google.com/analytics/answer/13331292), this describes the percentage of events used in this report. Sampling is the practice of analyzing a subset of all data in order to uncover the meaningful information in the larger data set.
 */

#ifndef OAISamplingMetadata_H
#define OAISamplingMetadata_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISamplingMetadata : public OAIObject {
public:
    OAISamplingMetadata();
    OAISamplingMetadata(QString json);
    ~OAISamplingMetadata() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getSamplesReadCount() const;
    void setSamplesReadCount(const QString &samples_read_count);
    bool is_samples_read_count_Set() const;
    bool is_samples_read_count_Valid() const;

    QString getSamplingSpaceSize() const;
    void setSamplingSpaceSize(const QString &sampling_space_size);
    bool is_sampling_space_size_Set() const;
    bool is_sampling_space_size_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_samples_read_count;
    bool m_samples_read_count_isSet;
    bool m_samples_read_count_isValid;

    QString m_sampling_space_size;
    bool m_sampling_space_size_isSet;
    bool m_sampling_space_size_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISamplingMetadata)

#endif // OAISamplingMetadata_H
