/**
 * Google Analytics Data API
 * Accesses report data in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning. 
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFilterExpression.h
 *
 * To express dimension or metric filters. The fields in the same FilterExpression need to be either all dimensions or all metrics.
 */

#ifndef OAIFilterExpression_H
#define OAIFilterExpression_H

#include <QJsonObject>

#include "OAIFilter.h"
#include "OAIFilterExpressionList.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIFilterExpressionList;
class OAIFilter;

class OAIFilterExpression : public OAIObject {
public:
    OAIFilterExpression();
    OAIFilterExpression(QString json);
    ~OAIFilterExpression() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIFilterExpressionList getAndGroup() const;
    void setAndGroup(const OAIFilterExpressionList &and_group);
    bool is_and_group_Set() const;
    bool is_and_group_Valid() const;

    OAIFilter getFilter() const;
    void setFilter(const OAIFilter &filter);
    bool is_filter_Set() const;
    bool is_filter_Valid() const;

    OAIFilterExpression getNotExpression() const;
    void setNotExpression(const OAIFilterExpression &not_expression);
    bool is_not_expression_Set() const;
    bool is_not_expression_Valid() const;

    OAIFilterExpressionList getOrGroup() const;
    void setOrGroup(const OAIFilterExpressionList &or_group);
    bool is_or_group_Set() const;
    bool is_or_group_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIFilterExpressionList m_and_group;
    bool m_and_group_isSet;
    bool m_and_group_isValid;

    OAIFilter m_filter;
    bool m_filter_isSet;
    bool m_filter_isValid;

    OAIFilterExpression m_not_expression;
    bool m_not_expression_isSet;
    bool m_not_expression_isValid;

    OAIFilterExpressionList m_or_group;
    bool m_or_group_isSet;
    bool m_or_group_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFilterExpression)

#endif // OAIFilterExpression_H
