/**
 * Google Analytics Data API
 * Accesses report data in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning. 
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIConcatenateExpression.h
 *
 * Used to combine dimension values to a single dimension.
 */

#ifndef OAIConcatenateExpression_H
#define OAIConcatenateExpression_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIConcatenateExpression : public OAIObject {
public:
    OAIConcatenateExpression();
    OAIConcatenateExpression(QString json);
    ~OAIConcatenateExpression() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDelimiter() const;
    void setDelimiter(const QString &delimiter);
    bool is_delimiter_Set() const;
    bool is_delimiter_Valid() const;

    QList<QString> getDimensionNames() const;
    void setDimensionNames(const QList<QString> &dimension_names);
    bool is_dimension_names_Set() const;
    bool is_dimension_names_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_delimiter;
    bool m_delimiter_isSet;
    bool m_delimiter_isValid;

    QList<QString> m_dimension_names;
    bool m_dimension_names_isSet;
    bool m_dimension_names_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIConcatenateExpression)

#endif // OAIConcatenateExpression_H
