/**
 * Google Analytics Data API
 * Accesses report data in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning. 
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMetadata.h
 *
 * The dimensions, metrics and comparisons currently accepted in reporting methods.
 */

#ifndef OAIMetadata_H
#define OAIMetadata_H

#include <QJsonObject>

#include "OAIDimensionMetadata.h"
#include "OAIMetricMetadata.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDimensionMetadata;
class OAIMetricMetadata;

class OAIMetadata : public OAIObject {
public:
    OAIMetadata();
    OAIMetadata(QString json);
    ~OAIMetadata() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIDimensionMetadata> getDimensions() const;
    void setDimensions(const QList<OAIDimensionMetadata> &dimensions);
    bool is_dimensions_Set() const;
    bool is_dimensions_Valid() const;

    QList<OAIMetricMetadata> getMetrics() const;
    void setMetrics(const QList<OAIMetricMetadata> &metrics);
    bool is_metrics_Set() const;
    bool is_metrics_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIDimensionMetadata> m_dimensions;
    bool m_dimensions_isSet;
    bool m_dimensions_isValid;

    QList<OAIMetricMetadata> m_metrics;
    bool m_metrics_isSet;
    bool m_metrics_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMetadata)

#endif // OAIMetadata_H
