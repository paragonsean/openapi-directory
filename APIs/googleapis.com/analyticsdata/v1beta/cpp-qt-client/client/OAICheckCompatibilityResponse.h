/**
 * Google Analytics Data API
 * Accesses report data in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning. 
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICheckCompatibilityResponse.h
 *
 * The compatibility response with the compatibility of each dimension &amp; metric.
 */

#ifndef OAICheckCompatibilityResponse_H
#define OAICheckCompatibilityResponse_H

#include <QJsonObject>

#include "OAIDimensionCompatibility.h"
#include "OAIMetricCompatibility.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDimensionCompatibility;
class OAIMetricCompatibility;

class OAICheckCompatibilityResponse : public OAIObject {
public:
    OAICheckCompatibilityResponse();
    OAICheckCompatibilityResponse(QString json);
    ~OAICheckCompatibilityResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIDimensionCompatibility> getDimensionCompatibilities() const;
    void setDimensionCompatibilities(const QList<OAIDimensionCompatibility> &dimension_compatibilities);
    bool is_dimension_compatibilities_Set() const;
    bool is_dimension_compatibilities_Valid() const;

    QList<OAIMetricCompatibility> getMetricCompatibilities() const;
    void setMetricCompatibilities(const QList<OAIMetricCompatibility> &metric_compatibilities);
    bool is_metric_compatibilities_Set() const;
    bool is_metric_compatibilities_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIDimensionCompatibility> m_dimension_compatibilities;
    bool m_dimension_compatibilities_isSet;
    bool m_dimension_compatibilities_isValid;

    QList<OAIMetricCompatibility> m_metric_compatibilities;
    bool m_metric_compatibilities_isSet;
    bool m_metric_compatibilities_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICheckCompatibilityResponse)

#endif // OAICheckCompatibilityResponse_H
