/**
 * Google Analytics Data API
 * Accesses report data in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning. 
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRunReportResponse.h
 *
 * The response report table corresponding to a request.
 */

#ifndef OAIRunReportResponse_H
#define OAIRunReportResponse_H

#include <QJsonObject>

#include "OAIDimensionHeader.h"
#include "OAIMetricHeader.h"
#include "OAIPropertyQuota.h"
#include "OAIResponseMetaData.h"
#include "OAIRow.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDimensionHeader;
class OAIRow;
class OAIResponseMetaData;
class OAIMetricHeader;
class OAIPropertyQuota;

class OAIRunReportResponse : public OAIObject {
public:
    OAIRunReportResponse();
    OAIRunReportResponse(QString json);
    ~OAIRunReportResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIDimensionHeader> getDimensionHeaders() const;
    void setDimensionHeaders(const QList<OAIDimensionHeader> &dimension_headers);
    bool is_dimension_headers_Set() const;
    bool is_dimension_headers_Valid() const;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    QList<OAIRow> getMaximums() const;
    void setMaximums(const QList<OAIRow> &maximums);
    bool is_maximums_Set() const;
    bool is_maximums_Valid() const;

    OAIResponseMetaData getMetadata() const;
    void setMetadata(const OAIResponseMetaData &metadata);
    bool is_metadata_Set() const;
    bool is_metadata_Valid() const;

    QList<OAIMetricHeader> getMetricHeaders() const;
    void setMetricHeaders(const QList<OAIMetricHeader> &metric_headers);
    bool is_metric_headers_Set() const;
    bool is_metric_headers_Valid() const;

    QList<OAIRow> getMinimums() const;
    void setMinimums(const QList<OAIRow> &minimums);
    bool is_minimums_Set() const;
    bool is_minimums_Valid() const;

    OAIPropertyQuota getPropertyQuota() const;
    void setPropertyQuota(const OAIPropertyQuota &property_quota);
    bool is_property_quota_Set() const;
    bool is_property_quota_Valid() const;

    qint32 getRowCount() const;
    void setRowCount(const qint32 &row_count);
    bool is_row_count_Set() const;
    bool is_row_count_Valid() const;

    QList<OAIRow> getRows() const;
    void setRows(const QList<OAIRow> &rows);
    bool is_rows_Set() const;
    bool is_rows_Valid() const;

    QList<OAIRow> getTotals() const;
    void setTotals(const QList<OAIRow> &totals);
    bool is_totals_Set() const;
    bool is_totals_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIDimensionHeader> m_dimension_headers;
    bool m_dimension_headers_isSet;
    bool m_dimension_headers_isValid;

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    QList<OAIRow> m_maximums;
    bool m_maximums_isSet;
    bool m_maximums_isValid;

    OAIResponseMetaData m_metadata;
    bool m_metadata_isSet;
    bool m_metadata_isValid;

    QList<OAIMetricHeader> m_metric_headers;
    bool m_metric_headers_isSet;
    bool m_metric_headers_isValid;

    QList<OAIRow> m_minimums;
    bool m_minimums_isSet;
    bool m_minimums_isValid;

    OAIPropertyQuota m_property_quota;
    bool m_property_quota_isSet;
    bool m_property_quota_isValid;

    qint32 m_row_count;
    bool m_row_count_isSet;
    bool m_row_count_isValid;

    QList<OAIRow> m_rows;
    bool m_rows_isSet;
    bool m_rows_isValid;

    QList<OAIRow> m_totals;
    bool m_totals_isSet;
    bool m_totals_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRunReportResponse)

#endif // OAIRunReportResponse_H
