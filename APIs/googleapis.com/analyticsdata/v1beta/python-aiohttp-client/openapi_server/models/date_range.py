# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DateRange(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, end_date: str=None, name: str=None, start_date: str=None):
        """DateRange - a model defined in OpenAPI

        :param end_date: The end_date of this DateRange.
        :param name: The name of this DateRange.
        :param start_date: The start_date of this DateRange.
        """
        self.openapi_types = {
            'end_date': str,
            'name': str,
            'start_date': str
        }

        self.attribute_map = {
            'end_date': 'endDate',
            'name': 'name',
            'start_date': 'startDate'
        }

        self._end_date = end_date
        self._name = name
        self._start_date = start_date

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DateRange':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DateRange of this DateRange.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def end_date(self):
        """Gets the end_date of this DateRange.

        The inclusive end date for the query in the format `YYYY-MM-DD`. Cannot be before `start_date`. The format `NdaysAgo`, `yesterday`, or `today` is also accepted, and in that case, the date is inferred based on the property's reporting time zone.

        :return: The end_date of this DateRange.
        :rtype: str
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date):
        """Sets the end_date of this DateRange.

        The inclusive end date for the query in the format `YYYY-MM-DD`. Cannot be before `start_date`. The format `NdaysAgo`, `yesterday`, or `today` is also accepted, and in that case, the date is inferred based on the property's reporting time zone.

        :param end_date: The end_date of this DateRange.
        :type end_date: str
        """

        self._end_date = end_date

    @property
    def name(self):
        """Gets the name of this DateRange.

        Assigns a name to this date range. The dimension `dateRange` is valued to this name in a report response. If set, cannot begin with `date_range_` or `RESERVED_`. If not set, date ranges are named by their zero based index in the request: `date_range_0`, `date_range_1`, etc.

        :return: The name of this DateRange.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this DateRange.

        Assigns a name to this date range. The dimension `dateRange` is valued to this name in a report response. If set, cannot begin with `date_range_` or `RESERVED_`. If not set, date ranges are named by their zero based index in the request: `date_range_0`, `date_range_1`, etc.

        :param name: The name of this DateRange.
        :type name: str
        """

        self._name = name

    @property
    def start_date(self):
        """Gets the start_date of this DateRange.

        The inclusive start date for the query in the format `YYYY-MM-DD`. Cannot be after `end_date`. The format `NdaysAgo`, `yesterday`, or `today` is also accepted, and in that case, the date is inferred based on the property's reporting time zone.

        :return: The start_date of this DateRange.
        :rtype: str
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """Sets the start_date of this DateRange.

        The inclusive start date for the query in the format `YYYY-MM-DD`. Cannot be after `end_date`. The format `NdaysAgo`, `yesterday`, or `today` is also accepted, and in that case, the date is inferred based on the property's reporting time zone.

        :param start_date: The start_date of this DateRange.
        :type start_date: str
        """

        self._start_date = start_date
