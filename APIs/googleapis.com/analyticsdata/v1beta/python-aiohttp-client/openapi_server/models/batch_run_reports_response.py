# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.run_report_response import RunReportResponse
from openapi_server import util


class BatchRunReportsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, kind: str=None, reports: List[RunReportResponse]=None):
        """BatchRunReportsResponse - a model defined in OpenAPI

        :param kind: The kind of this BatchRunReportsResponse.
        :param reports: The reports of this BatchRunReportsResponse.
        """
        self.openapi_types = {
            'kind': str,
            'reports': List[RunReportResponse]
        }

        self.attribute_map = {
            'kind': 'kind',
            'reports': 'reports'
        }

        self._kind = kind
        self._reports = reports

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BatchRunReportsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BatchRunReportsResponse of this BatchRunReportsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def kind(self):
        """Gets the kind of this BatchRunReportsResponse.

        Identifies what kind of resource this message is. This `kind` is always the fixed string \"analyticsData#batchRunReports\". Useful to distinguish between response types in JSON.

        :return: The kind of this BatchRunReportsResponse.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this BatchRunReportsResponse.

        Identifies what kind of resource this message is. This `kind` is always the fixed string \"analyticsData#batchRunReports\". Useful to distinguish between response types in JSON.

        :param kind: The kind of this BatchRunReportsResponse.
        :type kind: str
        """

        self._kind = kind

    @property
    def reports(self):
        """Gets the reports of this BatchRunReportsResponse.

        Individual responses. Each response has a separate report request.

        :return: The reports of this BatchRunReportsResponse.
        :rtype: List[RunReportResponse]
        """
        return self._reports

    @reports.setter
    def reports(self, reports):
        """Sets the reports of this BatchRunReportsResponse.

        Individual responses. Each response has a separate report request.

        :param reports: The reports of this BatchRunReportsResponse.
        :type reports: List[RunReportResponse]
        """

        self._reports = reports
