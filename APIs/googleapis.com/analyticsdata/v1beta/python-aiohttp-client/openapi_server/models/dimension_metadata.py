# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DimensionMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, api_name: str=None, category: str=None, custom_definition: bool=None, deprecated_api_names: List[str]=None, description: str=None, ui_name: str=None):
        """DimensionMetadata - a model defined in OpenAPI

        :param api_name: The api_name of this DimensionMetadata.
        :param category: The category of this DimensionMetadata.
        :param custom_definition: The custom_definition of this DimensionMetadata.
        :param deprecated_api_names: The deprecated_api_names of this DimensionMetadata.
        :param description: The description of this DimensionMetadata.
        :param ui_name: The ui_name of this DimensionMetadata.
        """
        self.openapi_types = {
            'api_name': str,
            'category': str,
            'custom_definition': bool,
            'deprecated_api_names': List[str],
            'description': str,
            'ui_name': str
        }

        self.attribute_map = {
            'api_name': 'apiName',
            'category': 'category',
            'custom_definition': 'customDefinition',
            'deprecated_api_names': 'deprecatedApiNames',
            'description': 'description',
            'ui_name': 'uiName'
        }

        self._api_name = api_name
        self._category = category
        self._custom_definition = custom_definition
        self._deprecated_api_names = deprecated_api_names
        self._description = description
        self._ui_name = ui_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DimensionMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DimensionMetadata of this DimensionMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def api_name(self):
        """Gets the api_name of this DimensionMetadata.

        This dimension's name. Useable in [Dimension](#Dimension)'s `name`. For example, `eventName`.

        :return: The api_name of this DimensionMetadata.
        :rtype: str
        """
        return self._api_name

    @api_name.setter
    def api_name(self, api_name):
        """Sets the api_name of this DimensionMetadata.

        This dimension's name. Useable in [Dimension](#Dimension)'s `name`. For example, `eventName`.

        :param api_name: The api_name of this DimensionMetadata.
        :type api_name: str
        """

        self._api_name = api_name

    @property
    def category(self):
        """Gets the category of this DimensionMetadata.

        The display name of the category that this dimension belongs to. Similar dimensions and metrics are categorized together.

        :return: The category of this DimensionMetadata.
        :rtype: str
        """
        return self._category

    @category.setter
    def category(self, category):
        """Sets the category of this DimensionMetadata.

        The display name of the category that this dimension belongs to. Similar dimensions and metrics are categorized together.

        :param category: The category of this DimensionMetadata.
        :type category: str
        """

        self._category = category

    @property
    def custom_definition(self):
        """Gets the custom_definition of this DimensionMetadata.

        True if the dimension is custom to this property. This includes user, event, & item scoped custom dimensions; to learn more about custom dimensions, see https://support.google.com/analytics/answer/14240153. This also include custom channel groups; to learn more about custom channel groups, see https://support.google.com/analytics/answer/13051316.

        :return: The custom_definition of this DimensionMetadata.
        :rtype: bool
        """
        return self._custom_definition

    @custom_definition.setter
    def custom_definition(self, custom_definition):
        """Sets the custom_definition of this DimensionMetadata.

        True if the dimension is custom to this property. This includes user, event, & item scoped custom dimensions; to learn more about custom dimensions, see https://support.google.com/analytics/answer/14240153. This also include custom channel groups; to learn more about custom channel groups, see https://support.google.com/analytics/answer/13051316.

        :param custom_definition: The custom_definition of this DimensionMetadata.
        :type custom_definition: bool
        """

        self._custom_definition = custom_definition

    @property
    def deprecated_api_names(self):
        """Gets the deprecated_api_names of this DimensionMetadata.

        Still usable but deprecated names for this dimension. If populated, this dimension is available by either `apiName` or one of `deprecatedApiNames` for a period of time. After the deprecation period, the dimension will be available only by `apiName`.

        :return: The deprecated_api_names of this DimensionMetadata.
        :rtype: List[str]
        """
        return self._deprecated_api_names

    @deprecated_api_names.setter
    def deprecated_api_names(self, deprecated_api_names):
        """Sets the deprecated_api_names of this DimensionMetadata.

        Still usable but deprecated names for this dimension. If populated, this dimension is available by either `apiName` or one of `deprecatedApiNames` for a period of time. After the deprecation period, the dimension will be available only by `apiName`.

        :param deprecated_api_names: The deprecated_api_names of this DimensionMetadata.
        :type deprecated_api_names: List[str]
        """

        self._deprecated_api_names = deprecated_api_names

    @property
    def description(self):
        """Gets the description of this DimensionMetadata.

        Description of how this dimension is used and calculated.

        :return: The description of this DimensionMetadata.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this DimensionMetadata.

        Description of how this dimension is used and calculated.

        :param description: The description of this DimensionMetadata.
        :type description: str
        """

        self._description = description

    @property
    def ui_name(self):
        """Gets the ui_name of this DimensionMetadata.

        This dimension's name within the Google Analytics user interface. For example, `Event name`.

        :return: The ui_name of this DimensionMetadata.
        :rtype: str
        """
        return self._ui_name

    @ui_name.setter
    def ui_name(self, ui_name):
        """Sets the ui_name of this DimensionMetadata.

        This dimension's name within the Google Analytics user interface. For example, `Event name`.

        :param ui_name: The ui_name of this DimensionMetadata.
        :type ui_name: str
        """

        self._ui_name = ui_name
