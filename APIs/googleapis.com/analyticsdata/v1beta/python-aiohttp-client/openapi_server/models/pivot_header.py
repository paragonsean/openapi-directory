# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.pivot_dimension_header import PivotDimensionHeader
from openapi_server import util


class PivotHeader(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, pivot_dimension_headers: List[PivotDimensionHeader]=None, row_count: int=None):
        """PivotHeader - a model defined in OpenAPI

        :param pivot_dimension_headers: The pivot_dimension_headers of this PivotHeader.
        :param row_count: The row_count of this PivotHeader.
        """
        self.openapi_types = {
            'pivot_dimension_headers': List[PivotDimensionHeader],
            'row_count': int
        }

        self.attribute_map = {
            'pivot_dimension_headers': 'pivotDimensionHeaders',
            'row_count': 'rowCount'
        }

        self._pivot_dimension_headers = pivot_dimension_headers
        self._row_count = row_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PivotHeader':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PivotHeader of this PivotHeader.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def pivot_dimension_headers(self):
        """Gets the pivot_dimension_headers of this PivotHeader.

        The size is the same as the cardinality of the corresponding dimension combinations.

        :return: The pivot_dimension_headers of this PivotHeader.
        :rtype: List[PivotDimensionHeader]
        """
        return self._pivot_dimension_headers

    @pivot_dimension_headers.setter
    def pivot_dimension_headers(self, pivot_dimension_headers):
        """Sets the pivot_dimension_headers of this PivotHeader.

        The size is the same as the cardinality of the corresponding dimension combinations.

        :param pivot_dimension_headers: The pivot_dimension_headers of this PivotHeader.
        :type pivot_dimension_headers: List[PivotDimensionHeader]
        """

        self._pivot_dimension_headers = pivot_dimension_headers

    @property
    def row_count(self):
        """Gets the row_count of this PivotHeader.

        The cardinality of the pivot. The total number of rows for this pivot's fields regardless of how the parameters `offset` and `limit` are specified in the request.

        :return: The row_count of this PivotHeader.
        :rtype: int
        """
        return self._row_count

    @row_count.setter
    def row_count(self, row_count):
        """Sets the row_count of this PivotHeader.

        The cardinality of the pivot. The total number of rows for this pivot's fields regardless of how the parameters `offset` and `limit` are specified in the request.

        :param row_count: The row_count of this PivotHeader.
        :type row_count: int
        """

        self._row_count = row_count
