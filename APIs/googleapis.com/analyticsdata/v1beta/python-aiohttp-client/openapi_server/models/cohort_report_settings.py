# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CohortReportSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, accumulate: bool=None):
        """CohortReportSettings - a model defined in OpenAPI

        :param accumulate: The accumulate of this CohortReportSettings.
        """
        self.openapi_types = {
            'accumulate': bool
        }

        self.attribute_map = {
            'accumulate': 'accumulate'
        }

        self._accumulate = accumulate

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CohortReportSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CohortReportSettings of this CohortReportSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def accumulate(self):
        """Gets the accumulate of this CohortReportSettings.

        If true, accumulates the result from first touch day to the end day. Not supported in `RunReportRequest`.

        :return: The accumulate of this CohortReportSettings.
        :rtype: bool
        """
        return self._accumulate

    @accumulate.setter
    def accumulate(self, accumulate):
        """Sets the accumulate of this CohortReportSettings.

        If true, accumulates the result from first touch day to the end day. Not supported in `RunReportRequest`.

        :param accumulate: The accumulate of this CohortReportSettings.
        :type accumulate: bool
        """

        self._accumulate = accumulate
