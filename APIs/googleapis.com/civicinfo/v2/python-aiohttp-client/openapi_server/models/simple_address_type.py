# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SimpleAddressType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, city: str=None, line1: str=None, line2: str=None, line3: str=None, location_name: str=None, state: str=None, zip: str=None):
        """SimpleAddressType - a model defined in OpenAPI

        :param city: The city of this SimpleAddressType.
        :param line1: The line1 of this SimpleAddressType.
        :param line2: The line2 of this SimpleAddressType.
        :param line3: The line3 of this SimpleAddressType.
        :param location_name: The location_name of this SimpleAddressType.
        :param state: The state of this SimpleAddressType.
        :param zip: The zip of this SimpleAddressType.
        """
        self.openapi_types = {
            'city': str,
            'line1': str,
            'line2': str,
            'line3': str,
            'location_name': str,
            'state': str,
            'zip': str
        }

        self.attribute_map = {
            'city': 'city',
            'line1': 'line1',
            'line2': 'line2',
            'line3': 'line3',
            'location_name': 'locationName',
            'state': 'state',
            'zip': 'zip'
        }

        self._city = city
        self._line1 = line1
        self._line2 = line2
        self._line3 = line3
        self._location_name = location_name
        self._state = state
        self._zip = zip

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SimpleAddressType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SimpleAddressType of this SimpleAddressType.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def city(self):
        """Gets the city of this SimpleAddressType.

        The city or town for the address.

        :return: The city of this SimpleAddressType.
        :rtype: str
        """
        return self._city

    @city.setter
    def city(self, city):
        """Sets the city of this SimpleAddressType.

        The city or town for the address.

        :param city: The city of this SimpleAddressType.
        :type city: str
        """

        self._city = city

    @property
    def line1(self):
        """Gets the line1 of this SimpleAddressType.

        The street name and number of this address.

        :return: The line1 of this SimpleAddressType.
        :rtype: str
        """
        return self._line1

    @line1.setter
    def line1(self, line1):
        """Sets the line1 of this SimpleAddressType.

        The street name and number of this address.

        :param line1: The line1 of this SimpleAddressType.
        :type line1: str
        """

        self._line1 = line1

    @property
    def line2(self):
        """Gets the line2 of this SimpleAddressType.

        The second line the address, if needed.

        :return: The line2 of this SimpleAddressType.
        :rtype: str
        """
        return self._line2

    @line2.setter
    def line2(self, line2):
        """Sets the line2 of this SimpleAddressType.

        The second line the address, if needed.

        :param line2: The line2 of this SimpleAddressType.
        :type line2: str
        """

        self._line2 = line2

    @property
    def line3(self):
        """Gets the line3 of this SimpleAddressType.

        The third line of the address, if needed.

        :return: The line3 of this SimpleAddressType.
        :rtype: str
        """
        return self._line3

    @line3.setter
    def line3(self, line3):
        """Sets the line3 of this SimpleAddressType.

        The third line of the address, if needed.

        :param line3: The line3 of this SimpleAddressType.
        :type line3: str
        """

        self._line3 = line3

    @property
    def location_name(self):
        """Gets the location_name of this SimpleAddressType.

        The name of the location.

        :return: The location_name of this SimpleAddressType.
        :rtype: str
        """
        return self._location_name

    @location_name.setter
    def location_name(self, location_name):
        """Sets the location_name of this SimpleAddressType.

        The name of the location.

        :param location_name: The location_name of this SimpleAddressType.
        :type location_name: str
        """

        self._location_name = location_name

    @property
    def state(self):
        """Gets the state of this SimpleAddressType.

        The US two letter state abbreviation of the address.

        :return: The state of this SimpleAddressType.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this SimpleAddressType.

        The US two letter state abbreviation of the address.

        :param state: The state of this SimpleAddressType.
        :type state: str
        """

        self._state = state

    @property
    def zip(self):
        """Gets the zip of this SimpleAddressType.

        The US Postal Zip Code of the address.

        :return: The zip of this SimpleAddressType.
        :rtype: str
        """
        return self._zip

    @zip.setter
    def zip(self, zip):
        """Sets the zip of this SimpleAddressType.

        The US Postal Zip Code of the address.

        :param zip: The zip of this SimpleAddressType.
        :type zip: str
        """

        self._zip = zip
