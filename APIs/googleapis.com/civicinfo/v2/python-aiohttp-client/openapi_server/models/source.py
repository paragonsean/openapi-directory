# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Source(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, official: bool=None):
        """Source - a model defined in OpenAPI

        :param name: The name of this Source.
        :param official: The official of this Source.
        """
        self.openapi_types = {
            'name': str,
            'official': bool
        }

        self.attribute_map = {
            'name': 'name',
            'official': 'official'
        }

        self._name = name
        self._official = official

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Source':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Source of this Source.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this Source.

        The name of the data source.

        :return: The name of this Source.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Source.

        The name of the data source.

        :param name: The name of this Source.
        :type name: str
        """

        self._name = name

    @property
    def official(self):
        """Gets the official of this Source.

        Whether this data comes from an official government source.

        :return: The official of this Source.
        :rtype: bool
        """
        return self._official

    @official.setter
    def official(self, official):
        """Sets the official of this Source.

        Whether this data comes from an official government source.

        :param official: The official of this Source.
        :type official: bool
        """

        self._official = official
