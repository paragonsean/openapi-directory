/**
 * Google Civic Information API
 * Provides polling places, early vote locations, contest data, election officials, and government representatives for U.S. residential addresses.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIElectionOfficial.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIElectionOfficial::OAIElectionOfficial(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIElectionOfficial::OAIElectionOfficial() {
    this->initializeModel();
}

OAIElectionOfficial::~OAIElectionOfficial() {}

void OAIElectionOfficial::initializeModel() {

    m_email_address_isSet = false;
    m_email_address_isValid = false;

    m_fax_number_isSet = false;
    m_fax_number_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_office_phone_number_isSet = false;
    m_office_phone_number_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;
}

void OAIElectionOfficial::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIElectionOfficial::fromJsonObject(QJsonObject json) {

    m_email_address_isValid = ::OpenAPI::fromJsonValue(m_email_address, json[QString("emailAddress")]);
    m_email_address_isSet = !json[QString("emailAddress")].isNull() && m_email_address_isValid;

    m_fax_number_isValid = ::OpenAPI::fromJsonValue(m_fax_number, json[QString("faxNumber")]);
    m_fax_number_isSet = !json[QString("faxNumber")].isNull() && m_fax_number_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_office_phone_number_isValid = ::OpenAPI::fromJsonValue(m_office_phone_number, json[QString("officePhoneNumber")]);
    m_office_phone_number_isSet = !json[QString("officePhoneNumber")].isNull() && m_office_phone_number_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("title")]);
    m_title_isSet = !json[QString("title")].isNull() && m_title_isValid;
}

QString OAIElectionOfficial::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIElectionOfficial::asJsonObject() const {
    QJsonObject obj;
    if (m_email_address_isSet) {
        obj.insert(QString("emailAddress"), ::OpenAPI::toJsonValue(m_email_address));
    }
    if (m_fax_number_isSet) {
        obj.insert(QString("faxNumber"), ::OpenAPI::toJsonValue(m_fax_number));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_office_phone_number_isSet) {
        obj.insert(QString("officePhoneNumber"), ::OpenAPI::toJsonValue(m_office_phone_number));
    }
    if (m_title_isSet) {
        obj.insert(QString("title"), ::OpenAPI::toJsonValue(m_title));
    }
    return obj;
}

QString OAIElectionOfficial::getEmailAddress() const {
    return m_email_address;
}
void OAIElectionOfficial::setEmailAddress(const QString &email_address) {
    m_email_address = email_address;
    m_email_address_isSet = true;
}

bool OAIElectionOfficial::is_email_address_Set() const{
    return m_email_address_isSet;
}

bool OAIElectionOfficial::is_email_address_Valid() const{
    return m_email_address_isValid;
}

QString OAIElectionOfficial::getFaxNumber() const {
    return m_fax_number;
}
void OAIElectionOfficial::setFaxNumber(const QString &fax_number) {
    m_fax_number = fax_number;
    m_fax_number_isSet = true;
}

bool OAIElectionOfficial::is_fax_number_Set() const{
    return m_fax_number_isSet;
}

bool OAIElectionOfficial::is_fax_number_Valid() const{
    return m_fax_number_isValid;
}

QString OAIElectionOfficial::getName() const {
    return m_name;
}
void OAIElectionOfficial::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIElectionOfficial::is_name_Set() const{
    return m_name_isSet;
}

bool OAIElectionOfficial::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIElectionOfficial::getOfficePhoneNumber() const {
    return m_office_phone_number;
}
void OAIElectionOfficial::setOfficePhoneNumber(const QString &office_phone_number) {
    m_office_phone_number = office_phone_number;
    m_office_phone_number_isSet = true;
}

bool OAIElectionOfficial::is_office_phone_number_Set() const{
    return m_office_phone_number_isSet;
}

bool OAIElectionOfficial::is_office_phone_number_Valid() const{
    return m_office_phone_number_isValid;
}

QString OAIElectionOfficial::getTitle() const {
    return m_title;
}
void OAIElectionOfficial::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAIElectionOfficial::is_title_Set() const{
    return m_title_isSet;
}

bool OAIElectionOfficial::is_title_Valid() const{
    return m_title_isValid;
}

bool OAIElectionOfficial::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_email_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fax_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_office_phone_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIElectionOfficial::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
