/**
 * Google Civic Information API
 * Provides polling places, early vote locations, contest data, election officials, and government representatives for U.S. residential addresses.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPollingLocation.h
 *
 * A location where a voter can vote. This may be an early vote site, an election day voting location, or a drop off location for a completed ballot.
 */

#ifndef OAIPollingLocation_H
#define OAIPollingLocation_H

#include <QJsonObject>

#include "OAISimpleAddressType.h"
#include "OAISource.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISimpleAddressType;
class OAISource;

class OAIPollingLocation : public OAIObject {
public:
    OAIPollingLocation();
    OAIPollingLocation(QString json);
    ~OAIPollingLocation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAISimpleAddressType getAddress() const;
    void setAddress(const OAISimpleAddressType &address);
    bool is_address_Set() const;
    bool is_address_Valid() const;

    QString getEndDate() const;
    void setEndDate(const QString &end_date);
    bool is_end_date_Set() const;
    bool is_end_date_Valid() const;

    double getLatitude() const;
    void setLatitude(const double &latitude);
    bool is_latitude_Set() const;
    bool is_latitude_Valid() const;

    double getLongitude() const;
    void setLongitude(const double &longitude);
    bool is_longitude_Set() const;
    bool is_longitude_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getNotes() const;
    void setNotes(const QString &notes);
    bool is_notes_Set() const;
    bool is_notes_Valid() const;

    QString getPollingHours() const;
    void setPollingHours(const QString &polling_hours);
    bool is_polling_hours_Set() const;
    bool is_polling_hours_Valid() const;

    QList<OAISource> getSources() const;
    void setSources(const QList<OAISource> &sources);
    bool is_sources_Set() const;
    bool is_sources_Valid() const;

    QString getStartDate() const;
    void setStartDate(const QString &start_date);
    bool is_start_date_Set() const;
    bool is_start_date_Valid() const;

    QString getVoterServices() const;
    void setVoterServices(const QString &voter_services);
    bool is_voter_services_Set() const;
    bool is_voter_services_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAISimpleAddressType m_address;
    bool m_address_isSet;
    bool m_address_isValid;

    QString m_end_date;
    bool m_end_date_isSet;
    bool m_end_date_isValid;

    double m_latitude;
    bool m_latitude_isSet;
    bool m_latitude_isValid;

    double m_longitude;
    bool m_longitude_isSet;
    bool m_longitude_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_notes;
    bool m_notes_isSet;
    bool m_notes_isValid;

    QString m_polling_hours;
    bool m_polling_hours_isSet;
    bool m_polling_hours_isValid;

    QList<OAISource> m_sources;
    bool m_sources_isSet;
    bool m_sources_isValid;

    QString m_start_date;
    bool m_start_date_isSet;
    bool m_start_date_isValid;

    QString m_voter_services;
    bool m_voter_services_isSet;
    bool m_voter_services_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPollingLocation)

#endif // OAIPollingLocation_H
