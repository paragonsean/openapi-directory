/**
 * Google Civic Information API
 * Provides polling places, early vote locations, contest data, election officials, and government representatives for U.S. residential addresses.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAdministrationRegion.h
 *
 * Describes information about a regional election administrative area.
 */

#ifndef OAIAdministrationRegion_H
#define OAIAdministrationRegion_H

#include <QJsonObject>

#include "OAIAdministrativeBody.h"
#include "OAISource.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAdministrativeBody;
class OAISource;

class OAIAdministrationRegion : public OAIObject {
public:
    OAIAdministrationRegion();
    OAIAdministrationRegion(QString json);
    ~OAIAdministrationRegion() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAdministrativeBody getElectionAdministrationBody() const;
    void setElectionAdministrationBody(const OAIAdministrativeBody &election_administration_body);
    bool is_election_administration_body_Set() const;
    bool is_election_administration_body_Valid() const;

    OAIAdministrationRegion getLocalJurisdiction() const;
    void setLocalJurisdiction(const OAIAdministrationRegion &local_jurisdiction);
    bool is_local_jurisdiction_Set() const;
    bool is_local_jurisdiction_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList<OAISource> getSources() const;
    void setSources(const QList<OAISource> &sources);
    bool is_sources_Set() const;
    bool is_sources_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAdministrativeBody m_election_administration_body;
    bool m_election_administration_body_isSet;
    bool m_election_administration_body_isValid;

    OAIAdministrationRegion m_local_jurisdiction;
    bool m_local_jurisdiction_isSet;
    bool m_local_jurisdiction_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList<OAISource> m_sources;
    bool m_sources_isSet;
    bool m_sources_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAdministrationRegion)

#endif // OAIAdministrationRegion_H
