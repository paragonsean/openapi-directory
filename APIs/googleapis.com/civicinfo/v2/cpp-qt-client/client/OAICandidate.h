/**
 * Google Civic Information API
 * Provides polling places, early vote locations, contest data, election officials, and government representatives for U.S. residential addresses.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICandidate.h
 *
 * Information about a candidate running for elected office.
 */

#ifndef OAICandidate_H
#define OAICandidate_H

#include <QJsonObject>

#include "OAIChannel.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIChannel;

class OAICandidate : public OAIObject {
public:
    OAICandidate();
    OAICandidate(QString json);
    ~OAICandidate() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCandidateUrl() const;
    void setCandidateUrl(const QString &candidate_url);
    bool is_candidate_url_Set() const;
    bool is_candidate_url_Valid() const;

    QList<OAIChannel> getChannels() const;
    void setChannels(const QList<OAIChannel> &channels);
    bool is_channels_Set() const;
    bool is_channels_Valid() const;

    QString getEmail() const;
    void setEmail(const QString &email);
    bool is_email_Set() const;
    bool is_email_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getOrderOnBallot() const;
    void setOrderOnBallot(const QString &order_on_ballot);
    bool is_order_on_ballot_Set() const;
    bool is_order_on_ballot_Valid() const;

    QString getParty() const;
    void setParty(const QString &party);
    bool is_party_Set() const;
    bool is_party_Valid() const;

    QString getPhone() const;
    void setPhone(const QString &phone);
    bool is_phone_Set() const;
    bool is_phone_Valid() const;

    QString getPhotoUrl() const;
    void setPhotoUrl(const QString &photo_url);
    bool is_photo_url_Set() const;
    bool is_photo_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_candidate_url;
    bool m_candidate_url_isSet;
    bool m_candidate_url_isValid;

    QList<OAIChannel> m_channels;
    bool m_channels_isSet;
    bool m_channels_isValid;

    QString m_email;
    bool m_email_isSet;
    bool m_email_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_order_on_ballot;
    bool m_order_on_ballot_isSet;
    bool m_order_on_ballot_isValid;

    QString m_party;
    bool m_party_isSet;
    bool m_party_isValid;

    QString m_phone;
    bool m_phone_isSet;
    bool m_phone_isValid;

    QString m_photo_url;
    bool m_photo_url_isSet;
    bool m_photo_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICandidate)

#endif // OAICandidate_H
