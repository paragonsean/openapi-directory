/**
 * Google Civic Information API
 * Provides polling places, early vote locations, contest data, election officials, and government representatives for U.S. residential addresses.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOfficial.h
 *
 * Information about a person holding an elected office.
 */

#ifndef OAIOfficial_H
#define OAIOfficial_H

#include <QJsonObject>

#include "OAIChannel.h"
#include "OAISimpleAddressType.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISimpleAddressType;
class OAIChannel;

class OAIOfficial : public OAIObject {
public:
    OAIOfficial();
    OAIOfficial(QString json);
    ~OAIOfficial() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAISimpleAddressType> getAddress() const;
    void setAddress(const QList<OAISimpleAddressType> &address);
    bool is_address_Set() const;
    bool is_address_Valid() const;

    QList<OAIChannel> getChannels() const;
    void setChannels(const QList<OAIChannel> &channels);
    bool is_channels_Set() const;
    bool is_channels_Valid() const;

    QList<QString> getEmails() const;
    void setEmails(const QList<QString> &emails);
    bool is_emails_Set() const;
    bool is_emails_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getParty() const;
    void setParty(const QString &party);
    bool is_party_Set() const;
    bool is_party_Valid() const;

    QList<QString> getPhones() const;
    void setPhones(const QList<QString> &phones);
    bool is_phones_Set() const;
    bool is_phones_Valid() const;

    QString getPhotoUrl() const;
    void setPhotoUrl(const QString &photo_url);
    bool is_photo_url_Set() const;
    bool is_photo_url_Valid() const;

    QList<QString> getUrls() const;
    void setUrls(const QList<QString> &urls);
    bool is_urls_Set() const;
    bool is_urls_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAISimpleAddressType> m_address;
    bool m_address_isSet;
    bool m_address_isValid;

    QList<OAIChannel> m_channels;
    bool m_channels_isSet;
    bool m_channels_isValid;

    QList<QString> m_emails;
    bool m_emails_isSet;
    bool m_emails_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_party;
    bool m_party_isSet;
    bool m_party_isValid;

    QList<QString> m_phones;
    bool m_phones_isSet;
    bool m_phones_isValid;

    QString m_photo_url;
    bool m_photo_url_isSet;
    bool m_photo_url_isValid;

    QList<QString> m_urls;
    bool m_urls_isSet;
    bool m_urls_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOfficial)

#endif // OAIOfficial_H
