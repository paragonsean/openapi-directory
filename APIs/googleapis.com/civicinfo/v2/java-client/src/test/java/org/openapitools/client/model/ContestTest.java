/*
 * Google Civic Information API
 * Provides polling places, early vote locations, contest data, election officials, and government representatives for U.S. residential addresses.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Candidate;
import org.openapitools.client.model.ElectoralDistrict;
import org.openapitools.client.model.Source;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Contest
 */
public class ContestTest {
    private final Contest model = new Contest();

    /**
     * Model tests for Contest
     */
    @Test
    public void testContest() {
        // TODO: test Contest
    }

    /**
     * Test the property 'ballotPlacement'
     */
    @Test
    public void ballotPlacementTest() {
        // TODO: test ballotPlacement
    }

    /**
     * Test the property 'ballotTitle'
     */
    @Test
    public void ballotTitleTest() {
        // TODO: test ballotTitle
    }

    /**
     * Test the property 'candidates'
     */
    @Test
    public void candidatesTest() {
        // TODO: test candidates
    }

    /**
     * Test the property 'district'
     */
    @Test
    public void districtTest() {
        // TODO: test district
    }

    /**
     * Test the property 'electorateSpecifications'
     */
    @Test
    public void electorateSpecificationsTest() {
        // TODO: test electorateSpecifications
    }

    /**
     * Test the property 'level'
     */
    @Test
    public void levelTest() {
        // TODO: test level
    }

    /**
     * Test the property 'numberElected'
     */
    @Test
    public void numberElectedTest() {
        // TODO: test numberElected
    }

    /**
     * Test the property 'numberVotingFor'
     */
    @Test
    public void numberVotingForTest() {
        // TODO: test numberVotingFor
    }

    /**
     * Test the property 'office'
     */
    @Test
    public void officeTest() {
        // TODO: test office
    }

    /**
     * Test the property 'primaryParties'
     */
    @Test
    public void primaryPartiesTest() {
        // TODO: test primaryParties
    }

    /**
     * Test the property 'referendumBallotResponses'
     */
    @Test
    public void referendumBallotResponsesTest() {
        // TODO: test referendumBallotResponses
    }

    /**
     * Test the property 'referendumBrief'
     */
    @Test
    public void referendumBriefTest() {
        // TODO: test referendumBrief
    }

    /**
     * Test the property 'referendumConStatement'
     */
    @Test
    public void referendumConStatementTest() {
        // TODO: test referendumConStatement
    }

    /**
     * Test the property 'referendumEffectOfAbstain'
     */
    @Test
    public void referendumEffectOfAbstainTest() {
        // TODO: test referendumEffectOfAbstain
    }

    /**
     * Test the property 'referendumPassageThreshold'
     */
    @Test
    public void referendumPassageThresholdTest() {
        // TODO: test referendumPassageThreshold
    }

    /**
     * Test the property 'referendumProStatement'
     */
    @Test
    public void referendumProStatementTest() {
        // TODO: test referendumProStatement
    }

    /**
     * Test the property 'referendumSubtitle'
     */
    @Test
    public void referendumSubtitleTest() {
        // TODO: test referendumSubtitle
    }

    /**
     * Test the property 'referendumText'
     */
    @Test
    public void referendumTextTest() {
        // TODO: test referendumText
    }

    /**
     * Test the property 'referendumTitle'
     */
    @Test
    public void referendumTitleTest() {
        // TODO: test referendumTitle
    }

    /**
     * Test the property 'referendumUrl'
     */
    @Test
    public void referendumUrlTest() {
        // TODO: test referendumUrl
    }

    /**
     * Test the property 'roles'
     */
    @Test
    public void rolesTest() {
        // TODO: test roles
    }

    /**
     * Test the property 'sources'
     */
    @Test
    public void sourcesTest() {
        // TODO: test sources
    }

    /**
     * Test the property 'special'
     */
    @Test
    public void specialTest() {
        // TODO: test special
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

}
