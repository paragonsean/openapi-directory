/*
 * Google Civic Information API
 * Provides polling places, early vote locations, contest data, election officials, and government representatives for U.S. residential addresses.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ElectionOfficial;
import org.openapitools.client.model.SimpleAddressType;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for AdministrativeBody
 */
public class AdministrativeBodyTest {
    private final AdministrativeBody model = new AdministrativeBody();

    /**
     * Model tests for AdministrativeBody
     */
    @Test
    public void testAdministrativeBody() {
        // TODO: test AdministrativeBody
    }

    /**
     * Test the property 'absenteeVotingInfoUrl'
     */
    @Test
    public void absenteeVotingInfoUrlTest() {
        // TODO: test absenteeVotingInfoUrl
    }

    /**
     * Test the property 'ballotInfoUrl'
     */
    @Test
    public void ballotInfoUrlTest() {
        // TODO: test ballotInfoUrl
    }

    /**
     * Test the property 'correspondenceAddress'
     */
    @Test
    public void correspondenceAddressTest() {
        // TODO: test correspondenceAddress
    }

    /**
     * Test the property 'electionInfoUrl'
     */
    @Test
    public void electionInfoUrlTest() {
        // TODO: test electionInfoUrl
    }

    /**
     * Test the property 'electionNoticeText'
     */
    @Test
    public void electionNoticeTextTest() {
        // TODO: test electionNoticeText
    }

    /**
     * Test the property 'electionNoticeUrl'
     */
    @Test
    public void electionNoticeUrlTest() {
        // TODO: test electionNoticeUrl
    }

    /**
     * Test the property 'electionOfficials'
     */
    @Test
    public void electionOfficialsTest() {
        // TODO: test electionOfficials
    }

    /**
     * Test the property 'electionRegistrationConfirmationUrl'
     */
    @Test
    public void electionRegistrationConfirmationUrlTest() {
        // TODO: test electionRegistrationConfirmationUrl
    }

    /**
     * Test the property 'electionRegistrationUrl'
     */
    @Test
    public void electionRegistrationUrlTest() {
        // TODO: test electionRegistrationUrl
    }

    /**
     * Test the property 'electionRulesUrl'
     */
    @Test
    public void electionRulesUrlTest() {
        // TODO: test electionRulesUrl
    }

    /**
     * Test the property 'hoursOfOperation'
     */
    @Test
    public void hoursOfOperationTest() {
        // TODO: test hoursOfOperation
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'physicalAddress'
     */
    @Test
    public void physicalAddressTest() {
        // TODO: test physicalAddress
    }

    /**
     * Test the property 'voterServices'
     */
    @Test
    public void voterServicesTest() {
        // TODO: test voterServices
    }

    /**
     * Test the property 'votingLocationFinderUrl'
     */
    @Test
    public void votingLocationFinderUrlTest() {
        // TODO: test votingLocationFinderUrl
    }

}
