/*
 * Google Civic Information API
 * Provides polling places, early vote locations, contest data, election officials, and government representatives for U.S. residential addresses.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ElectionsQueryResponse;
import org.openapitools.client.model.VoterInfoResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ElectionsApi
 */
@Disabled
public class ElectionsApiTest {

    private final ElectionsApi api = new ElectionsApi();

    /**
     * List of available elections to query.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void civicinfoElectionsElectionQueryTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Boolean productionDataOnly = null;
        ElectionsQueryResponse response = api.civicinfoElectionsElectionQuery($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, productionDataOnly);
        // TODO: test validations
    }

    /**
     * Looks up information relevant to a voter based on the voter&#39;s registered address.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void civicinfoElectionsVoterInfoQueryTest() throws ApiException {
        String address = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String electionId = null;
        Boolean officialOnly = null;
        Boolean productionDataOnly = null;
        Boolean returnAllAvailableData = null;
        VoterInfoResponse response = api.civicinfoElectionsVoterInfoQuery(address, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, electionId, officialOnly, productionDataOnly, returnAllAvailableData);
        // TODO: test validations
    }

}
