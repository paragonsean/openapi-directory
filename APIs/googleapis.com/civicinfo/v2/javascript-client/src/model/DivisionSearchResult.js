/**
 * Google Civic Information API
 * Provides polling places, early vote locations, contest data, election officials, and government representatives for U.S. residential addresses.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DivisionSearchResult model module.
 * @module model/DivisionSearchResult
 * @version v2
 */
class DivisionSearchResult {
    /**
     * Constructs a new <code>DivisionSearchResult</code>.
     * Represents a political geographic division that matches the requested query.
     * @alias module:model/DivisionSearchResult
     */
    constructor() { 
        
        DivisionSearchResult.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DivisionSearchResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DivisionSearchResult} obj Optional instance to populate.
     * @return {module:model/DivisionSearchResult} The populated <code>DivisionSearchResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DivisionSearchResult();

            if (data.hasOwnProperty('aliases')) {
                obj['aliases'] = ApiClient.convertToType(data['aliases'], ['String']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('ocdId')) {
                obj['ocdId'] = ApiClient.convertToType(data['ocdId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DivisionSearchResult</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DivisionSearchResult</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['aliases'])) {
            throw new Error("Expected the field `aliases` to be an array in the JSON data but got " + data['aliases']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['ocdId'] && !(typeof data['ocdId'] === 'string' || data['ocdId'] instanceof String)) {
            throw new Error("Expected the field `ocdId` to be a primitive type in the JSON string but got " + data['ocdId']);
        }

        return true;
    }


}



/**
 * Other Open Civic Data identifiers that refer to the same division -- for example, those that refer to other political divisions whose boundaries are defined to be coterminous with this one. For example, ocd-division/country:us/state:wy will include an alias of ocd-division/country:us/state:wy/cd:1, since Wyoming has only one Congressional district.
 * @member {Array.<String>} aliases
 */
DivisionSearchResult.prototype['aliases'] = undefined;

/**
 * The name of the division.
 * @member {String} name
 */
DivisionSearchResult.prototype['name'] = undefined;

/**
 * The unique Open Civic Data identifier for this division
 * @member {String} ocdId
 */
DivisionSearchResult.prototype['ocdId'] = undefined;






export default DivisionSearchResult;

