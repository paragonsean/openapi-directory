/**
 * Google Civic Information API
 * Provides polling places, early vote locations, contest data, election officials, and government representatives for U.S. residential addresses.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AdministrationRegion from './model/AdministrationRegion';
import AdministrativeBody from './model/AdministrativeBody';
import Candidate from './model/Candidate';
import Channel from './model/Channel';
import Contest from './model/Contest';
import DivisionSearchResponse from './model/DivisionSearchResponse';
import DivisionSearchResult from './model/DivisionSearchResult';
import Election from './model/Election';
import ElectionOfficial from './model/ElectionOfficial';
import ElectionsQueryResponse from './model/ElectionsQueryResponse';
import ElectoralDistrict from './model/ElectoralDistrict';
import GeographicDivision from './model/GeographicDivision';
import Office from './model/Office';
import Official from './model/Official';
import PollingLocation from './model/PollingLocation';
import Precinct from './model/Precinct';
import RepresentativeInfoData from './model/RepresentativeInfoData';
import RepresentativeInfoResponse from './model/RepresentativeInfoResponse';
import SimpleAddressType from './model/SimpleAddressType';
import Source from './model/Source';
import VoterInfoResponse from './model/VoterInfoResponse';
import DivisionsApi from './api/DivisionsApi';
import ElectionsApi from './api/ElectionsApi';
import RepresentativesApi from './api/RepresentativesApi';


/**
* Provides polling places, early vote locations, contest data, election officials, and government representatives for U.S. residential addresses..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var GoogleCivicInformationApi = require('index'); // See note below*.
* var xxxSvc = new GoogleCivicInformationApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new GoogleCivicInformationApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new GoogleCivicInformationApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new GoogleCivicInformationApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v2
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AdministrationRegion model constructor.
     * @property {module:model/AdministrationRegion}
     */
    AdministrationRegion,

    /**
     * The AdministrativeBody model constructor.
     * @property {module:model/AdministrativeBody}
     */
    AdministrativeBody,

    /**
     * The Candidate model constructor.
     * @property {module:model/Candidate}
     */
    Candidate,

    /**
     * The Channel model constructor.
     * @property {module:model/Channel}
     */
    Channel,

    /**
     * The Contest model constructor.
     * @property {module:model/Contest}
     */
    Contest,

    /**
     * The DivisionSearchResponse model constructor.
     * @property {module:model/DivisionSearchResponse}
     */
    DivisionSearchResponse,

    /**
     * The DivisionSearchResult model constructor.
     * @property {module:model/DivisionSearchResult}
     */
    DivisionSearchResult,

    /**
     * The Election model constructor.
     * @property {module:model/Election}
     */
    Election,

    /**
     * The ElectionOfficial model constructor.
     * @property {module:model/ElectionOfficial}
     */
    ElectionOfficial,

    /**
     * The ElectionsQueryResponse model constructor.
     * @property {module:model/ElectionsQueryResponse}
     */
    ElectionsQueryResponse,

    /**
     * The ElectoralDistrict model constructor.
     * @property {module:model/ElectoralDistrict}
     */
    ElectoralDistrict,

    /**
     * The GeographicDivision model constructor.
     * @property {module:model/GeographicDivision}
     */
    GeographicDivision,

    /**
     * The Office model constructor.
     * @property {module:model/Office}
     */
    Office,

    /**
     * The Official model constructor.
     * @property {module:model/Official}
     */
    Official,

    /**
     * The PollingLocation model constructor.
     * @property {module:model/PollingLocation}
     */
    PollingLocation,

    /**
     * The Precinct model constructor.
     * @property {module:model/Precinct}
     */
    Precinct,

    /**
     * The RepresentativeInfoData model constructor.
     * @property {module:model/RepresentativeInfoData}
     */
    RepresentativeInfoData,

    /**
     * The RepresentativeInfoResponse model constructor.
     * @property {module:model/RepresentativeInfoResponse}
     */
    RepresentativeInfoResponse,

    /**
     * The SimpleAddressType model constructor.
     * @property {module:model/SimpleAddressType}
     */
    SimpleAddressType,

    /**
     * The Source model constructor.
     * @property {module:model/Source}
     */
    Source,

    /**
     * The VoterInfoResponse model constructor.
     * @property {module:model/VoterInfoResponse}
     */
    VoterInfoResponse,

    /**
    * The DivisionsApi service constructor.
    * @property {module:api/DivisionsApi}
    */
    DivisionsApi,

    /**
    * The ElectionsApi service constructor.
    * @property {module:api/ElectionsApi}
    */
    ElectionsApi,

    /**
    * The RepresentativesApi service constructor.
    * @property {module:api/RepresentativesApi}
    */
    RepresentativesApi
};
