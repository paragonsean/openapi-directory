/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudDialogflowV2beta1Context from './GoogleCloudDialogflowV2beta1Context';
import GoogleCloudDialogflowV2beta1SentimentAnalysisRequestConfig from './GoogleCloudDialogflowV2beta1SentimentAnalysisRequestConfig';
import GoogleCloudDialogflowV2beta1SessionEntityType from './GoogleCloudDialogflowV2beta1SessionEntityType';
import GoogleCloudDialogflowV2beta1SubAgent from './GoogleCloudDialogflowV2beta1SubAgent';
import GoogleTypeLatLng from './GoogleTypeLatLng';

/**
 * The GoogleCloudDialogflowV2beta1QueryParameters model module.
 * @module model/GoogleCloudDialogflowV2beta1QueryParameters
 * @version v2beta1
 */
class GoogleCloudDialogflowV2beta1QueryParameters {
    /**
     * Constructs a new <code>GoogleCloudDialogflowV2beta1QueryParameters</code>.
     * Represents the parameters of the conversational query.
     * @alias module:model/GoogleCloudDialogflowV2beta1QueryParameters
     */
    constructor() { 
        
        GoogleCloudDialogflowV2beta1QueryParameters.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDialogflowV2beta1QueryParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDialogflowV2beta1QueryParameters} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDialogflowV2beta1QueryParameters} The populated <code>GoogleCloudDialogflowV2beta1QueryParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDialogflowV2beta1QueryParameters();

            if (data.hasOwnProperty('contexts')) {
                obj['contexts'] = ApiClient.convertToType(data['contexts'], [GoogleCloudDialogflowV2beta1Context]);
            }
            if (data.hasOwnProperty('geoLocation')) {
                obj['geoLocation'] = GoogleTypeLatLng.constructFromObject(data['geoLocation']);
            }
            if (data.hasOwnProperty('knowledgeBaseNames')) {
                obj['knowledgeBaseNames'] = ApiClient.convertToType(data['knowledgeBaseNames'], ['String']);
            }
            if (data.hasOwnProperty('payload')) {
                obj['payload'] = ApiClient.convertToType(data['payload'], {'String': Object});
            }
            if (data.hasOwnProperty('platform')) {
                obj['platform'] = ApiClient.convertToType(data['platform'], 'String');
            }
            if (data.hasOwnProperty('resetContexts')) {
                obj['resetContexts'] = ApiClient.convertToType(data['resetContexts'], 'Boolean');
            }
            if (data.hasOwnProperty('sentimentAnalysisRequestConfig')) {
                obj['sentimentAnalysisRequestConfig'] = GoogleCloudDialogflowV2beta1SentimentAnalysisRequestConfig.constructFromObject(data['sentimentAnalysisRequestConfig']);
            }
            if (data.hasOwnProperty('sessionEntityTypes')) {
                obj['sessionEntityTypes'] = ApiClient.convertToType(data['sessionEntityTypes'], [GoogleCloudDialogflowV2beta1SessionEntityType]);
            }
            if (data.hasOwnProperty('subAgents')) {
                obj['subAgents'] = ApiClient.convertToType(data['subAgents'], [GoogleCloudDialogflowV2beta1SubAgent]);
            }
            if (data.hasOwnProperty('timeZone')) {
                obj['timeZone'] = ApiClient.convertToType(data['timeZone'], 'String');
            }
            if (data.hasOwnProperty('webhookHeaders')) {
                obj['webhookHeaders'] = ApiClient.convertToType(data['webhookHeaders'], {'String': 'String'});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDialogflowV2beta1QueryParameters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDialogflowV2beta1QueryParameters</code>.
     */
    static validateJSON(data) {
        if (data['contexts']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['contexts'])) {
                throw new Error("Expected the field `contexts` to be an array in the JSON data but got " + data['contexts']);
            }
            // validate the optional field `contexts` (array)
            for (const item of data['contexts']) {
                GoogleCloudDialogflowV2beta1Context.validateJSON(item);
            };
        }
        // validate the optional field `geoLocation`
        if (data['geoLocation']) { // data not null
          GoogleTypeLatLng.validateJSON(data['geoLocation']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['knowledgeBaseNames'])) {
            throw new Error("Expected the field `knowledgeBaseNames` to be an array in the JSON data but got " + data['knowledgeBaseNames']);
        }
        // ensure the json data is a string
        if (data['platform'] && !(typeof data['platform'] === 'string' || data['platform'] instanceof String)) {
            throw new Error("Expected the field `platform` to be a primitive type in the JSON string but got " + data['platform']);
        }
        // validate the optional field `sentimentAnalysisRequestConfig`
        if (data['sentimentAnalysisRequestConfig']) { // data not null
          GoogleCloudDialogflowV2beta1SentimentAnalysisRequestConfig.validateJSON(data['sentimentAnalysisRequestConfig']);
        }
        if (data['sessionEntityTypes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['sessionEntityTypes'])) {
                throw new Error("Expected the field `sessionEntityTypes` to be an array in the JSON data but got " + data['sessionEntityTypes']);
            }
            // validate the optional field `sessionEntityTypes` (array)
            for (const item of data['sessionEntityTypes']) {
                GoogleCloudDialogflowV2beta1SessionEntityType.validateJSON(item);
            };
        }
        if (data['subAgents']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['subAgents'])) {
                throw new Error("Expected the field `subAgents` to be an array in the JSON data but got " + data['subAgents']);
            }
            // validate the optional field `subAgents` (array)
            for (const item of data['subAgents']) {
                GoogleCloudDialogflowV2beta1SubAgent.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['timeZone'] && !(typeof data['timeZone'] === 'string' || data['timeZone'] instanceof String)) {
            throw new Error("Expected the field `timeZone` to be a primitive type in the JSON string but got " + data['timeZone']);
        }

        return true;
    }


}



/**
 * The collection of contexts to be activated before this query is executed.
 * @member {Array.<module:model/GoogleCloudDialogflowV2beta1Context>} contexts
 */
GoogleCloudDialogflowV2beta1QueryParameters.prototype['contexts'] = undefined;

/**
 * @member {module:model/GoogleTypeLatLng} geoLocation
 */
GoogleCloudDialogflowV2beta1QueryParameters.prototype['geoLocation'] = undefined;

/**
 * KnowledgeBases to get alternative results from. If not set, the KnowledgeBases enabled in the agent (through UI) will be used. Format: `projects//knowledgeBases/`.
 * @member {Array.<String>} knowledgeBaseNames
 */
GoogleCloudDialogflowV2beta1QueryParameters.prototype['knowledgeBaseNames'] = undefined;

/**
 * This field can be used to pass custom data to your webhook. Arbitrary JSON objects are supported. If supplied, the value is used to populate the `WebhookRequest.original_detect_intent_request.payload` field sent to your webhook.
 * @member {Object.<String, Object>} payload
 */
GoogleCloudDialogflowV2beta1QueryParameters.prototype['payload'] = undefined;

/**
 * The platform of the virtual agent response messages. If not empty, only emits messages from this platform in the response. Valid values are the enum names of platform.
 * @member {String} platform
 */
GoogleCloudDialogflowV2beta1QueryParameters.prototype['platform'] = undefined;

/**
 * Specifies whether to delete all contexts in the current session before the new ones are activated.
 * @member {Boolean} resetContexts
 */
GoogleCloudDialogflowV2beta1QueryParameters.prototype['resetContexts'] = undefined;

/**
 * @member {module:model/GoogleCloudDialogflowV2beta1SentimentAnalysisRequestConfig} sentimentAnalysisRequestConfig
 */
GoogleCloudDialogflowV2beta1QueryParameters.prototype['sentimentAnalysisRequestConfig'] = undefined;

/**
 * Additional session entity types to replace or extend developer entity types with. The entity synonyms apply to all languages and persist for the session of this query.
 * @member {Array.<module:model/GoogleCloudDialogflowV2beta1SessionEntityType>} sessionEntityTypes
 */
GoogleCloudDialogflowV2beta1QueryParameters.prototype['sessionEntityTypes'] = undefined;

/**
 * For mega agent query, directly specify which sub agents to query. If any specified sub agent is not linked to the mega agent, an error will be returned. If empty, Dialogflow will decide which sub agents to query. If specified for a non-mega-agent query, will be silently ignored.
 * @member {Array.<module:model/GoogleCloudDialogflowV2beta1SubAgent>} subAgents
 */
GoogleCloudDialogflowV2beta1QueryParameters.prototype['subAgents'] = undefined;

/**
 * The time zone of this conversational query from the [time zone database](https://www.iana.org/time-zones), e.g., America/New_York, Europe/Paris. If not provided, the time zone specified in agent settings is used.
 * @member {String} timeZone
 */
GoogleCloudDialogflowV2beta1QueryParameters.prototype['timeZone'] = undefined;

/**
 * This field can be used to pass HTTP headers for a webhook call. These headers will be sent to webhook along with the headers that have been configured through Dialogflow web console. The headers defined within this field will overwrite the headers configured through Dialogflow console if there is a conflict. Header names are case-insensitive. Google's specified headers are not allowed. Including: \"Host\", \"Content-Length\", \"Connection\", \"From\", \"User-Agent\", \"Accept-Encoding\", \"If-Modified-Since\", \"If-None-Match\", \"X-Forwarded-For\", etc.
 * @member {Object.<String, String>} webhookHeaders
 */
GoogleCloudDialogflowV2beta1QueryParameters.prototype['webhookHeaders'] = undefined;






export default GoogleCloudDialogflowV2beta1QueryParameters;

