/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudDialogflowV2beta1Participant model module.
 * @module model/GoogleCloudDialogflowV2beta1Participant
 * @version v2beta1
 */
class GoogleCloudDialogflowV2beta1Participant {
    /**
     * Constructs a new <code>GoogleCloudDialogflowV2beta1Participant</code>.
     * Represents a conversation participant (human agent, virtual agent, end-user).
     * @alias module:model/GoogleCloudDialogflowV2beta1Participant
     */
    constructor() { 
        
        GoogleCloudDialogflowV2beta1Participant.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDialogflowV2beta1Participant</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDialogflowV2beta1Participant} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDialogflowV2beta1Participant} The populated <code>GoogleCloudDialogflowV2beta1Participant</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDialogflowV2beta1Participant();

            if (data.hasOwnProperty('documentsMetadataFilters')) {
                obj['documentsMetadataFilters'] = ApiClient.convertToType(data['documentsMetadataFilters'], {'String': 'String'});
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('obfuscatedExternalUserId')) {
                obj['obfuscatedExternalUserId'] = ApiClient.convertToType(data['obfuscatedExternalUserId'], 'String');
            }
            if (data.hasOwnProperty('role')) {
                obj['role'] = ApiClient.convertToType(data['role'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDialogflowV2beta1Participant</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDialogflowV2beta1Participant</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['obfuscatedExternalUserId'] && !(typeof data['obfuscatedExternalUserId'] === 'string' || data['obfuscatedExternalUserId'] instanceof String)) {
            throw new Error("Expected the field `obfuscatedExternalUserId` to be a primitive type in the JSON string but got " + data['obfuscatedExternalUserId']);
        }
        // ensure the json data is a string
        if (data['role'] && !(typeof data['role'] === 'string' || data['role'] instanceof String)) {
            throw new Error("Expected the field `role` to be a primitive type in the JSON string but got " + data['role']);
        }

        return true;
    }


}



/**
 * Optional. Key-value filters on the metadata of documents returned by article suggestion. If specified, article suggestion only returns suggested documents that match all filters in their Document.metadata. Multiple values for a metadata key should be concatenated by comma. For example, filters to match all documents that have 'US' or 'CA' in their market metadata values and 'agent' in their user metadata values will be ``` documents_metadata_filters { key: \"market\" value: \"US,CA\" } documents_metadata_filters { key: \"user\" value: \"agent\" } ```
 * @member {Object.<String, String>} documentsMetadataFilters
 */
GoogleCloudDialogflowV2beta1Participant.prototype['documentsMetadataFilters'] = undefined;

/**
 * Optional. The unique identifier of this participant. Format: `projects//locations//conversations//participants/`.
 * @member {String} name
 */
GoogleCloudDialogflowV2beta1Participant.prototype['name'] = undefined;

/**
 * Optional. Obfuscated user id that should be associated with the created participant. You can specify a user id as follows: 1. If you set this field in CreateParticipantRequest or UpdateParticipantRequest, Dialogflow adds the obfuscated user id with the participant. 2. If you set this field in AnalyzeContent or StreamingAnalyzeContent, Dialogflow will update Participant.obfuscated_external_user_id. Dialogflow uses this user id for billing and measurement. If a user with the same obfuscated_external_user_id is created in a later conversation, Dialogflow will know it's the same user. Dialogflow also uses this user id for Agent Assist suggestion personalization. For example, Dialogflow can use it to provide personalized smart reply suggestions for this user. Note: * Please never pass raw user ids to Dialogflow. Always obfuscate your user id first. * Dialogflow only accepts a UTF-8 encoded string, e.g., a hex digest of a hash function like SHA-512. * The length of the user id must be <= 256 characters.
 * @member {String} obfuscatedExternalUserId
 */
GoogleCloudDialogflowV2beta1Participant.prototype['obfuscatedExternalUserId'] = undefined;

/**
 * Immutable. The role this participant plays in the conversation. This field must be set during participant creation and is then immutable.
 * @member {module:model/GoogleCloudDialogflowV2beta1Participant.RoleEnum} role
 */
GoogleCloudDialogflowV2beta1Participant.prototype['role'] = undefined;





/**
 * Allowed values for the <code>role</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudDialogflowV2beta1Participant['RoleEnum'] = {

    /**
     * value: "ROLE_UNSPECIFIED"
     * @const
     */
    "ROLE_UNSPECIFIED": "ROLE_UNSPECIFIED",

    /**
     * value: "HUMAN_AGENT"
     * @const
     */
    "HUMAN_AGENT": "HUMAN_AGENT",

    /**
     * value: "AUTOMATED_AGENT"
     * @const
     */
    "AUTOMATED_AGENT": "AUTOMATED_AGENT",

    /**
     * value: "END_USER"
     * @const
     */
    "END_USER": "END_USER"
};



export default GoogleCloudDialogflowV2beta1Participant;

