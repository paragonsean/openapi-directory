/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudDialogflowCxV3beta1TurnSignals model module.
 * @module model/GoogleCloudDialogflowCxV3beta1TurnSignals
 * @version v2beta1
 */
class GoogleCloudDialogflowCxV3beta1TurnSignals {
    /**
     * Constructs a new <code>GoogleCloudDialogflowCxV3beta1TurnSignals</code>.
     * Collection of all signals that were extracted for a single turn of the conversation.
     * @alias module:model/GoogleCloudDialogflowCxV3beta1TurnSignals
     */
    constructor() { 
        
        GoogleCloudDialogflowCxV3beta1TurnSignals.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDialogflowCxV3beta1TurnSignals</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDialogflowCxV3beta1TurnSignals} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDialogflowCxV3beta1TurnSignals} The populated <code>GoogleCloudDialogflowCxV3beta1TurnSignals</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDialogflowCxV3beta1TurnSignals();

            if (data.hasOwnProperty('agentEscalated')) {
                obj['agentEscalated'] = ApiClient.convertToType(data['agentEscalated'], 'Boolean');
            }
            if (data.hasOwnProperty('dtmfUsed')) {
                obj['dtmfUsed'] = ApiClient.convertToType(data['dtmfUsed'], 'Boolean');
            }
            if (data.hasOwnProperty('failureReasons')) {
                obj['failureReasons'] = ApiClient.convertToType(data['failureReasons'], ['String']);
            }
            if (data.hasOwnProperty('noMatch')) {
                obj['noMatch'] = ApiClient.convertToType(data['noMatch'], 'Boolean');
            }
            if (data.hasOwnProperty('noUserInput')) {
                obj['noUserInput'] = ApiClient.convertToType(data['noUserInput'], 'Boolean');
            }
            if (data.hasOwnProperty('reachedEndPage')) {
                obj['reachedEndPage'] = ApiClient.convertToType(data['reachedEndPage'], 'Boolean');
            }
            if (data.hasOwnProperty('sentimentMagnitude')) {
                obj['sentimentMagnitude'] = ApiClient.convertToType(data['sentimentMagnitude'], 'Number');
            }
            if (data.hasOwnProperty('sentimentScore')) {
                obj['sentimentScore'] = ApiClient.convertToType(data['sentimentScore'], 'Number');
            }
            if (data.hasOwnProperty('userEscalated')) {
                obj['userEscalated'] = ApiClient.convertToType(data['userEscalated'], 'Boolean');
            }
            if (data.hasOwnProperty('webhookStatuses')) {
                obj['webhookStatuses'] = ApiClient.convertToType(data['webhookStatuses'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDialogflowCxV3beta1TurnSignals</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDialogflowCxV3beta1TurnSignals</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['failureReasons'])) {
            throw new Error("Expected the field `failureReasons` to be an array in the JSON data but got " + data['failureReasons']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['webhookStatuses'])) {
            throw new Error("Expected the field `webhookStatuses` to be an array in the JSON data but got " + data['webhookStatuses']);
        }

        return true;
    }


}



/**
 * Whether agent responded with LiveAgentHandoff fulfillment.
 * @member {Boolean} agentEscalated
 */
GoogleCloudDialogflowCxV3beta1TurnSignals.prototype['agentEscalated'] = undefined;

/**
 * Whether user was using DTMF input.
 * @member {Boolean} dtmfUsed
 */
GoogleCloudDialogflowCxV3beta1TurnSignals.prototype['dtmfUsed'] = undefined;

/**
 * Failure reasons of the turn.
 * @member {Array.<module:model/GoogleCloudDialogflowCxV3beta1TurnSignals.FailureReasonsEnum>} failureReasons
 */
GoogleCloudDialogflowCxV3beta1TurnSignals.prototype['failureReasons'] = undefined;

/**
 * Whether NLU predicted NO_MATCH.
 * @member {Boolean} noMatch
 */
GoogleCloudDialogflowCxV3beta1TurnSignals.prototype['noMatch'] = undefined;

/**
 * Whether user provided no input.
 * @member {Boolean} noUserInput
 */
GoogleCloudDialogflowCxV3beta1TurnSignals.prototype['noUserInput'] = undefined;

/**
 * Whether turn resulted in End Session page.
 * @member {Boolean} reachedEndPage
 */
GoogleCloudDialogflowCxV3beta1TurnSignals.prototype['reachedEndPage'] = undefined;

/**
 * Sentiment magnitude of the user utterance if [sentiment](https://cloud.google.com/dialogflow/cx/docs/concept/sentiment) was enabled.
 * @member {Number} sentimentMagnitude
 */
GoogleCloudDialogflowCxV3beta1TurnSignals.prototype['sentimentMagnitude'] = undefined;

/**
 * Sentiment score of the user utterance if [sentiment](https://cloud.google.com/dialogflow/cx/docs/concept/sentiment) was enabled.
 * @member {Number} sentimentScore
 */
GoogleCloudDialogflowCxV3beta1TurnSignals.prototype['sentimentScore'] = undefined;

/**
 * Whether user was specifically asking for a live agent.
 * @member {Boolean} userEscalated
 */
GoogleCloudDialogflowCxV3beta1TurnSignals.prototype['userEscalated'] = undefined;

/**
 * Human-readable statuses of the webhooks triggered during this turn.
 * @member {Array.<String>} webhookStatuses
 */
GoogleCloudDialogflowCxV3beta1TurnSignals.prototype['webhookStatuses'] = undefined;





/**
 * Allowed values for the <code>failureReasons</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudDialogflowCxV3beta1TurnSignals['FailureReasonsEnum'] = {

    /**
     * value: "FAILURE_REASON_UNSPECIFIED"
     * @const
     */
    "FAILURE_REASON_UNSPECIFIED": "FAILURE_REASON_UNSPECIFIED",

    /**
     * value: "FAILED_INTENT"
     * @const
     */
    "FAILED_INTENT": "FAILED_INTENT",

    /**
     * value: "FAILED_WEBHOOK"
     * @const
     */
    "FAILED_WEBHOOK": "FAILED_WEBHOOK"
};



export default GoogleCloudDialogflowCxV3beta1TurnSignals;

