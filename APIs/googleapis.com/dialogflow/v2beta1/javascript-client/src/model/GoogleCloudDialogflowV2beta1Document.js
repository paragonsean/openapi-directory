/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudDialogflowV2beta1DocumentReloadStatus from './GoogleCloudDialogflowV2beta1DocumentReloadStatus';

/**
 * The GoogleCloudDialogflowV2beta1Document model module.
 * @module model/GoogleCloudDialogflowV2beta1Document
 * @version v2beta1
 */
class GoogleCloudDialogflowV2beta1Document {
    /**
     * Constructs a new <code>GoogleCloudDialogflowV2beta1Document</code>.
     * A knowledge document to be used by a KnowledgeBase. For more information, see the [knowledge base guide](https://cloud.google.com/dialogflow/docs/how/knowledge-bases). Note: The &#x60;projects.agent.knowledgeBases.documents&#x60; resource is deprecated; only use &#x60;projects.knowledgeBases.documents&#x60;.
     * @alias module:model/GoogleCloudDialogflowV2beta1Document
     */
    constructor() { 
        
        GoogleCloudDialogflowV2beta1Document.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDialogflowV2beta1Document</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDialogflowV2beta1Document} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDialogflowV2beta1Document} The populated <code>GoogleCloudDialogflowV2beta1Document</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDialogflowV2beta1Document();

            if (data.hasOwnProperty('content')) {
                obj['content'] = ApiClient.convertToType(data['content'], 'String');
            }
            if (data.hasOwnProperty('contentUri')) {
                obj['contentUri'] = ApiClient.convertToType(data['contentUri'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('enableAutoReload')) {
                obj['enableAutoReload'] = ApiClient.convertToType(data['enableAutoReload'], 'Boolean');
            }
            if (data.hasOwnProperty('knowledgeTypes')) {
                obj['knowledgeTypes'] = ApiClient.convertToType(data['knowledgeTypes'], ['String']);
            }
            if (data.hasOwnProperty('latestReloadStatus')) {
                obj['latestReloadStatus'] = GoogleCloudDialogflowV2beta1DocumentReloadStatus.constructFromObject(data['latestReloadStatus']);
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ApiClient.convertToType(data['metadata'], {'String': 'String'});
            }
            if (data.hasOwnProperty('mimeType')) {
                obj['mimeType'] = ApiClient.convertToType(data['mimeType'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('rawContent')) {
                obj['rawContent'] = ApiClient.convertToType(data['rawContent'], 'Blob');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDialogflowV2beta1Document</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDialogflowV2beta1Document</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['content'] && !(typeof data['content'] === 'string' || data['content'] instanceof String)) {
            throw new Error("Expected the field `content` to be a primitive type in the JSON string but got " + data['content']);
        }
        // ensure the json data is a string
        if (data['contentUri'] && !(typeof data['contentUri'] === 'string' || data['contentUri'] instanceof String)) {
            throw new Error("Expected the field `contentUri` to be a primitive type in the JSON string but got " + data['contentUri']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['knowledgeTypes'])) {
            throw new Error("Expected the field `knowledgeTypes` to be an array in the JSON data but got " + data['knowledgeTypes']);
        }
        // validate the optional field `latestReloadStatus`
        if (data['latestReloadStatus']) { // data not null
          GoogleCloudDialogflowV2beta1DocumentReloadStatus.validateJSON(data['latestReloadStatus']);
        }
        // ensure the json data is a string
        if (data['mimeType'] && !(typeof data['mimeType'] === 'string' || data['mimeType'] instanceof String)) {
            throw new Error("Expected the field `mimeType` to be a primitive type in the JSON string but got " + data['mimeType']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }

        return true;
    }


}



/**
 * The raw content of the document. This field is only permitted for EXTRACTIVE_QA and FAQ knowledge types. Note: This field is in the process of being deprecated, please use raw_content instead.
 * @member {String} content
 */
GoogleCloudDialogflowV2beta1Document.prototype['content'] = undefined;

/**
 * The URI where the file content is located. For documents stored in Google Cloud Storage, these URIs must have the form `gs:///`. NOTE: External URLs must correspond to public webpages, i.e., they must be indexed by Google Search. In particular, URLs for showing documents in Google Cloud Storage (i.e. the URL in your browser) are not supported. Instead use the `gs://` format URI described above.
 * @member {String} contentUri
 */
GoogleCloudDialogflowV2beta1Document.prototype['contentUri'] = undefined;

/**
 * Required. The display name of the document. The name must be 1024 bytes or less; otherwise, the creation request fails.
 * @member {String} displayName
 */
GoogleCloudDialogflowV2beta1Document.prototype['displayName'] = undefined;

/**
 * Optional. If true, we try to automatically reload the document every day (at a time picked by the system). If false or unspecified, we don't try to automatically reload the document. Currently you can only enable automatic reload for documents sourced from a public url, see `source` field for the source types. Reload status can be tracked in `latest_reload_status`. If a reload fails, we will keep the document unchanged. If a reload fails with internal errors, the system will try to reload the document on the next day. If a reload fails with non-retriable errors (e.g. PERMISSION_DENIED), the system will not try to reload the document anymore. You need to manually reload the document successfully by calling `ReloadDocument` and clear the errors.
 * @member {Boolean} enableAutoReload
 */
GoogleCloudDialogflowV2beta1Document.prototype['enableAutoReload'] = undefined;

/**
 * Required. The knowledge type of document content.
 * @member {Array.<module:model/GoogleCloudDialogflowV2beta1Document.KnowledgeTypesEnum>} knowledgeTypes
 */
GoogleCloudDialogflowV2beta1Document.prototype['knowledgeTypes'] = undefined;

/**
 * @member {module:model/GoogleCloudDialogflowV2beta1DocumentReloadStatus} latestReloadStatus
 */
GoogleCloudDialogflowV2beta1Document.prototype['latestReloadStatus'] = undefined;

/**
 * Optional. Metadata for the document. The metadata supports arbitrary key-value pairs. Suggested use cases include storing a document's title, an external URL distinct from the document's content_uri, etc. The max size of a `key` or a `value` of the metadata is 1024 bytes.
 * @member {Object.<String, String>} metadata
 */
GoogleCloudDialogflowV2beta1Document.prototype['metadata'] = undefined;

/**
 * Required. The MIME type of this document.
 * @member {String} mimeType
 */
GoogleCloudDialogflowV2beta1Document.prototype['mimeType'] = undefined;

/**
 * Optional. The document resource name. The name must be empty when creating a document. Format: `projects//locations//knowledgeBases//documents/`.
 * @member {String} name
 */
GoogleCloudDialogflowV2beta1Document.prototype['name'] = undefined;

/**
 * The raw content of the document. This field is only permitted for EXTRACTIVE_QA and FAQ knowledge types.
 * @member {Blob} rawContent
 */
GoogleCloudDialogflowV2beta1Document.prototype['rawContent'] = undefined;

/**
 * Output only. The current state of the document.
 * @member {module:model/GoogleCloudDialogflowV2beta1Document.StateEnum} state
 */
GoogleCloudDialogflowV2beta1Document.prototype['state'] = undefined;





/**
 * Allowed values for the <code>knowledgeTypes</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudDialogflowV2beta1Document['KnowledgeTypesEnum'] = {

    /**
     * value: "KNOWLEDGE_TYPE_UNSPECIFIED"
     * @const
     */
    "KNOWLEDGE_TYPE_UNSPECIFIED": "KNOWLEDGE_TYPE_UNSPECIFIED",

    /**
     * value: "FAQ"
     * @const
     */
    "FAQ": "FAQ",

    /**
     * value: "EXTRACTIVE_QA"
     * @const
     */
    "EXTRACTIVE_QA": "EXTRACTIVE_QA",

    /**
     * value: "ARTICLE_SUGGESTION"
     * @const
     */
    "ARTICLE_SUGGESTION": "ARTICLE_SUGGESTION",

    /**
     * value: "AGENT_FACING_SMART_REPLY"
     * @const
     */
    "AGENT_FACING_SMART_REPLY": "AGENT_FACING_SMART_REPLY",

    /**
     * value: "SMART_REPLY"
     * @const
     */
    "SMART_REPLY": "SMART_REPLY"
};


/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudDialogflowV2beta1Document['StateEnum'] = {

    /**
     * value: "STATE_UNSPECIFIED"
     * @const
     */
    "STATE_UNSPECIFIED": "STATE_UNSPECIFIED",

    /**
     * value: "CREATING"
     * @const
     */
    "CREATING": "CREATING",

    /**
     * value: "ACTIVE"
     * @const
     */
    "ACTIVE": "ACTIVE",

    /**
     * value: "UPDATING"
     * @const
     */
    "UPDATING": "UPDATING",

    /**
     * value: "RELOADING"
     * @const
     */
    "RELOADING": "RELOADING",

    /**
     * value: "DELETING"
     * @const
     */
    "DELETING": "DELETING"
};



export default GoogleCloudDialogflowV2beta1Document;

