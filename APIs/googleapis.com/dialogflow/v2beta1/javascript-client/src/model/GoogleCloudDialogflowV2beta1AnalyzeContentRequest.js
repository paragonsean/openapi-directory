/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudDialogflowV2beta1AssistQueryParameters from './GoogleCloudDialogflowV2beta1AssistQueryParameters';
import GoogleCloudDialogflowV2beta1AudioInput from './GoogleCloudDialogflowV2beta1AudioInput';
import GoogleCloudDialogflowV2beta1EventInput from './GoogleCloudDialogflowV2beta1EventInput';
import GoogleCloudDialogflowV2beta1IntentInput from './GoogleCloudDialogflowV2beta1IntentInput';
import GoogleCloudDialogflowV2beta1OutputAudioConfig from './GoogleCloudDialogflowV2beta1OutputAudioConfig';
import GoogleCloudDialogflowV2beta1QueryParameters from './GoogleCloudDialogflowV2beta1QueryParameters';
import GoogleCloudDialogflowV2beta1SuggestionInput from './GoogleCloudDialogflowV2beta1SuggestionInput';
import GoogleCloudDialogflowV2beta1TextInput from './GoogleCloudDialogflowV2beta1TextInput';

/**
 * The GoogleCloudDialogflowV2beta1AnalyzeContentRequest model module.
 * @module model/GoogleCloudDialogflowV2beta1AnalyzeContentRequest
 * @version v2beta1
 */
class GoogleCloudDialogflowV2beta1AnalyzeContentRequest {
    /**
     * Constructs a new <code>GoogleCloudDialogflowV2beta1AnalyzeContentRequest</code>.
     * The request message for Participants.AnalyzeContent.
     * @alias module:model/GoogleCloudDialogflowV2beta1AnalyzeContentRequest
     */
    constructor() { 
        
        GoogleCloudDialogflowV2beta1AnalyzeContentRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDialogflowV2beta1AnalyzeContentRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDialogflowV2beta1AnalyzeContentRequest} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDialogflowV2beta1AnalyzeContentRequest} The populated <code>GoogleCloudDialogflowV2beta1AnalyzeContentRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDialogflowV2beta1AnalyzeContentRequest();

            if (data.hasOwnProperty('assistQueryParams')) {
                obj['assistQueryParams'] = GoogleCloudDialogflowV2beta1AssistQueryParameters.constructFromObject(data['assistQueryParams']);
            }
            if (data.hasOwnProperty('audioInput')) {
                obj['audioInput'] = GoogleCloudDialogflowV2beta1AudioInput.constructFromObject(data['audioInput']);
            }
            if (data.hasOwnProperty('cxCurrentPage')) {
                obj['cxCurrentPage'] = ApiClient.convertToType(data['cxCurrentPage'], 'String');
            }
            if (data.hasOwnProperty('cxParameters')) {
                obj['cxParameters'] = ApiClient.convertToType(data['cxParameters'], {'String': Object});
            }
            if (data.hasOwnProperty('eventInput')) {
                obj['eventInput'] = GoogleCloudDialogflowV2beta1EventInput.constructFromObject(data['eventInput']);
            }
            if (data.hasOwnProperty('intentInput')) {
                obj['intentInput'] = GoogleCloudDialogflowV2beta1IntentInput.constructFromObject(data['intentInput']);
            }
            if (data.hasOwnProperty('messageSendTime')) {
                obj['messageSendTime'] = ApiClient.convertToType(data['messageSendTime'], 'String');
            }
            if (data.hasOwnProperty('queryParams')) {
                obj['queryParams'] = GoogleCloudDialogflowV2beta1QueryParameters.constructFromObject(data['queryParams']);
            }
            if (data.hasOwnProperty('replyAudioConfig')) {
                obj['replyAudioConfig'] = GoogleCloudDialogflowV2beta1OutputAudioConfig.constructFromObject(data['replyAudioConfig']);
            }
            if (data.hasOwnProperty('requestId')) {
                obj['requestId'] = ApiClient.convertToType(data['requestId'], 'String');
            }
            if (data.hasOwnProperty('suggestionInput')) {
                obj['suggestionInput'] = GoogleCloudDialogflowV2beta1SuggestionInput.constructFromObject(data['suggestionInput']);
            }
            if (data.hasOwnProperty('textInput')) {
                obj['textInput'] = GoogleCloudDialogflowV2beta1TextInput.constructFromObject(data['textInput']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDialogflowV2beta1AnalyzeContentRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDialogflowV2beta1AnalyzeContentRequest</code>.
     */
    static validateJSON(data) {
        // validate the optional field `assistQueryParams`
        if (data['assistQueryParams']) { // data not null
          GoogleCloudDialogflowV2beta1AssistQueryParameters.validateJSON(data['assistQueryParams']);
        }
        // validate the optional field `audioInput`
        if (data['audioInput']) { // data not null
          GoogleCloudDialogflowV2beta1AudioInput.validateJSON(data['audioInput']);
        }
        // ensure the json data is a string
        if (data['cxCurrentPage'] && !(typeof data['cxCurrentPage'] === 'string' || data['cxCurrentPage'] instanceof String)) {
            throw new Error("Expected the field `cxCurrentPage` to be a primitive type in the JSON string but got " + data['cxCurrentPage']);
        }
        // validate the optional field `eventInput`
        if (data['eventInput']) { // data not null
          GoogleCloudDialogflowV2beta1EventInput.validateJSON(data['eventInput']);
        }
        // validate the optional field `intentInput`
        if (data['intentInput']) { // data not null
          GoogleCloudDialogflowV2beta1IntentInput.validateJSON(data['intentInput']);
        }
        // ensure the json data is a string
        if (data['messageSendTime'] && !(typeof data['messageSendTime'] === 'string' || data['messageSendTime'] instanceof String)) {
            throw new Error("Expected the field `messageSendTime` to be a primitive type in the JSON string but got " + data['messageSendTime']);
        }
        // validate the optional field `queryParams`
        if (data['queryParams']) { // data not null
          GoogleCloudDialogflowV2beta1QueryParameters.validateJSON(data['queryParams']);
        }
        // validate the optional field `replyAudioConfig`
        if (data['replyAudioConfig']) { // data not null
          GoogleCloudDialogflowV2beta1OutputAudioConfig.validateJSON(data['replyAudioConfig']);
        }
        // ensure the json data is a string
        if (data['requestId'] && !(typeof data['requestId'] === 'string' || data['requestId'] instanceof String)) {
            throw new Error("Expected the field `requestId` to be a primitive type in the JSON string but got " + data['requestId']);
        }
        // validate the optional field `suggestionInput`
        if (data['suggestionInput']) { // data not null
          GoogleCloudDialogflowV2beta1SuggestionInput.validateJSON(data['suggestionInput']);
        }
        // validate the optional field `textInput`
        if (data['textInput']) { // data not null
          GoogleCloudDialogflowV2beta1TextInput.validateJSON(data['textInput']);
        }

        return true;
    }


}



/**
 * @member {module:model/GoogleCloudDialogflowV2beta1AssistQueryParameters} assistQueryParams
 */
GoogleCloudDialogflowV2beta1AnalyzeContentRequest.prototype['assistQueryParams'] = undefined;

/**
 * @member {module:model/GoogleCloudDialogflowV2beta1AudioInput} audioInput
 */
GoogleCloudDialogflowV2beta1AnalyzeContentRequest.prototype['audioInput'] = undefined;

/**
 * The unique identifier of the CX page to override the `current_page` in the session. Format: `projects//locations//agents//flows//pages/`. If `cx_current_page` is specified, the previous state of the session will be ignored by Dialogflow CX, including the previous page and the previous session parameters. In most cases, `cx_current_page` and `cx_parameters` should be configured together to direct a session to a specific state. Note: this field should only be used if you are connecting to a Dialogflow CX agent.
 * @member {String} cxCurrentPage
 */
GoogleCloudDialogflowV2beta1AnalyzeContentRequest.prototype['cxCurrentPage'] = undefined;

/**
 * Additional parameters to be put into Dialogflow CX session parameters. To remove a parameter from the session, clients should explicitly set the parameter value to null. Note: this field should only be used if you are connecting to a Dialogflow CX agent.
 * @member {Object.<String, Object>} cxParameters
 */
GoogleCloudDialogflowV2beta1AnalyzeContentRequest.prototype['cxParameters'] = undefined;

/**
 * @member {module:model/GoogleCloudDialogflowV2beta1EventInput} eventInput
 */
GoogleCloudDialogflowV2beta1AnalyzeContentRequest.prototype['eventInput'] = undefined;

/**
 * @member {module:model/GoogleCloudDialogflowV2beta1IntentInput} intentInput
 */
GoogleCloudDialogflowV2beta1AnalyzeContentRequest.prototype['intentInput'] = undefined;

/**
 * Optional. The send time of the message from end user or human agent's perspective. It is used for identifying the same message under one participant. Given two messages under the same participant: * If send time are different regardless of whether the content of the messages are exactly the same, the conversation will regard them as two distinct messages sent by the participant. * If send time is the same regardless of whether the content of the messages are exactly the same, the conversation will regard them as same message, and ignore the message received later. If the value is not provided, a new request will always be regarded as a new message without any de-duplication.
 * @member {String} messageSendTime
 */
GoogleCloudDialogflowV2beta1AnalyzeContentRequest.prototype['messageSendTime'] = undefined;

/**
 * @member {module:model/GoogleCloudDialogflowV2beta1QueryParameters} queryParams
 */
GoogleCloudDialogflowV2beta1AnalyzeContentRequest.prototype['queryParams'] = undefined;

/**
 * @member {module:model/GoogleCloudDialogflowV2beta1OutputAudioConfig} replyAudioConfig
 */
GoogleCloudDialogflowV2beta1AnalyzeContentRequest.prototype['replyAudioConfig'] = undefined;

/**
 * A unique identifier for this request. Restricted to 36 ASCII characters. A random UUID is recommended. This request is only idempotent if a `request_id` is provided.
 * @member {String} requestId
 */
GoogleCloudDialogflowV2beta1AnalyzeContentRequest.prototype['requestId'] = undefined;

/**
 * @member {module:model/GoogleCloudDialogflowV2beta1SuggestionInput} suggestionInput
 */
GoogleCloudDialogflowV2beta1AnalyzeContentRequest.prototype['suggestionInput'] = undefined;

/**
 * @member {module:model/GoogleCloudDialogflowV2beta1TextInput} textInput
 */
GoogleCloudDialogflowV2beta1AnalyzeContentRequest.prototype['textInput'] = undefined;






export default GoogleCloudDialogflowV2beta1AnalyzeContentRequest;

