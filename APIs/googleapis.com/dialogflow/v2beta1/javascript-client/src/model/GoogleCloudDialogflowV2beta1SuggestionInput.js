/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudDialogflowV2beta1IntentInput from './GoogleCloudDialogflowV2beta1IntentInput';
import GoogleCloudDialogflowV2beta1TextInput from './GoogleCloudDialogflowV2beta1TextInput';

/**
 * The GoogleCloudDialogflowV2beta1SuggestionInput model module.
 * @module model/GoogleCloudDialogflowV2beta1SuggestionInput
 * @version v2beta1
 */
class GoogleCloudDialogflowV2beta1SuggestionInput {
    /**
     * Constructs a new <code>GoogleCloudDialogflowV2beta1SuggestionInput</code>.
     * Represents the selection of a suggestion.
     * @alias module:model/GoogleCloudDialogflowV2beta1SuggestionInput
     */
    constructor() { 
        
        GoogleCloudDialogflowV2beta1SuggestionInput.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDialogflowV2beta1SuggestionInput</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDialogflowV2beta1SuggestionInput} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDialogflowV2beta1SuggestionInput} The populated <code>GoogleCloudDialogflowV2beta1SuggestionInput</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDialogflowV2beta1SuggestionInput();

            if (data.hasOwnProperty('answerRecord')) {
                obj['answerRecord'] = ApiClient.convertToType(data['answerRecord'], 'String');
            }
            if (data.hasOwnProperty('intentInput')) {
                obj['intentInput'] = GoogleCloudDialogflowV2beta1IntentInput.constructFromObject(data['intentInput']);
            }
            if (data.hasOwnProperty('parameters')) {
                obj['parameters'] = ApiClient.convertToType(data['parameters'], {'String': Object});
            }
            if (data.hasOwnProperty('textOverride')) {
                obj['textOverride'] = GoogleCloudDialogflowV2beta1TextInput.constructFromObject(data['textOverride']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDialogflowV2beta1SuggestionInput</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDialogflowV2beta1SuggestionInput</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['answerRecord'] && !(typeof data['answerRecord'] === 'string' || data['answerRecord'] instanceof String)) {
            throw new Error("Expected the field `answerRecord` to be a primitive type in the JSON string but got " + data['answerRecord']);
        }
        // validate the optional field `intentInput`
        if (data['intentInput']) { // data not null
          GoogleCloudDialogflowV2beta1IntentInput.validateJSON(data['intentInput']);
        }
        // validate the optional field `textOverride`
        if (data['textOverride']) { // data not null
          GoogleCloudDialogflowV2beta1TextInput.validateJSON(data['textOverride']);
        }

        return true;
    }


}



/**
 * Required. The ID of a suggestion selected by the human agent. The suggestion(s) were generated in a previous call to request Dialogflow assist. The format is: `projects//locations//answerRecords/` where is an alphanumeric string.
 * @member {String} answerRecord
 */
GoogleCloudDialogflowV2beta1SuggestionInput.prototype['answerRecord'] = undefined;

/**
 * @member {module:model/GoogleCloudDialogflowV2beta1IntentInput} intentInput
 */
GoogleCloudDialogflowV2beta1SuggestionInput.prototype['intentInput'] = undefined;

/**
 * In Dialogflow assist for v3, the user can submit a form by sending a SuggestionInput. The form is uniquely determined by the answer_record field, which identifies a v3 QueryResult containing the current page. The form parameters are specified via the parameters field. Depending on your protocol or client library language, this is a map, associative array, symbol table, dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs: * MapKey type: string * MapKey value: parameter name * MapValue type: If parameter's entity type is a composite entity then use map, otherwise, depending on the parameter value type, it could be one of string, number, boolean, null, list or map. * MapValue value: If parameter's entity type is a composite entity then use map from composite entity property names to property values, otherwise, use parameter value.
 * @member {Object.<String, Object>} parameters
 */
GoogleCloudDialogflowV2beta1SuggestionInput.prototype['parameters'] = undefined;

/**
 * @member {module:model/GoogleCloudDialogflowV2beta1TextInput} textOverride
 */
GoogleCloudDialogflowV2beta1SuggestionInput.prototype['textOverride'] = undefined;






export default GoogleCloudDialogflowV2beta1SuggestionInput;

