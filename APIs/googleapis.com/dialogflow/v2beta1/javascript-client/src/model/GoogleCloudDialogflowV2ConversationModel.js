/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudDialogflowV2ArticleSuggestionModelMetadata from './GoogleCloudDialogflowV2ArticleSuggestionModelMetadata';
import GoogleCloudDialogflowV2InputDataset from './GoogleCloudDialogflowV2InputDataset';
import GoogleCloudDialogflowV2SmartReplyModelMetadata from './GoogleCloudDialogflowV2SmartReplyModelMetadata';

/**
 * The GoogleCloudDialogflowV2ConversationModel model module.
 * @module model/GoogleCloudDialogflowV2ConversationModel
 * @version v2beta1
 */
class GoogleCloudDialogflowV2ConversationModel {
    /**
     * Constructs a new <code>GoogleCloudDialogflowV2ConversationModel</code>.
     * Represents a conversation model.
     * @alias module:model/GoogleCloudDialogflowV2ConversationModel
     */
    constructor() { 
        
        GoogleCloudDialogflowV2ConversationModel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDialogflowV2ConversationModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDialogflowV2ConversationModel} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDialogflowV2ConversationModel} The populated <code>GoogleCloudDialogflowV2ConversationModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDialogflowV2ConversationModel();

            if (data.hasOwnProperty('articleSuggestionModelMetadata')) {
                obj['articleSuggestionModelMetadata'] = GoogleCloudDialogflowV2ArticleSuggestionModelMetadata.constructFromObject(data['articleSuggestionModelMetadata']);
            }
            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('datasets')) {
                obj['datasets'] = ApiClient.convertToType(data['datasets'], [GoogleCloudDialogflowV2InputDataset]);
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('languageCode')) {
                obj['languageCode'] = ApiClient.convertToType(data['languageCode'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('smartReplyModelMetadata')) {
                obj['smartReplyModelMetadata'] = GoogleCloudDialogflowV2SmartReplyModelMetadata.constructFromObject(data['smartReplyModelMetadata']);
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDialogflowV2ConversationModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDialogflowV2ConversationModel</code>.
     */
    static validateJSON(data) {
        // validate the optional field `articleSuggestionModelMetadata`
        if (data['articleSuggestionModelMetadata']) { // data not null
          GoogleCloudDialogflowV2ArticleSuggestionModelMetadata.validateJSON(data['articleSuggestionModelMetadata']);
        }
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        if (data['datasets']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['datasets'])) {
                throw new Error("Expected the field `datasets` to be an array in the JSON data but got " + data['datasets']);
            }
            // validate the optional field `datasets` (array)
            for (const item of data['datasets']) {
                GoogleCloudDialogflowV2InputDataset.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['languageCode'] && !(typeof data['languageCode'] === 'string' || data['languageCode'] instanceof String)) {
            throw new Error("Expected the field `languageCode` to be a primitive type in the JSON string but got " + data['languageCode']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `smartReplyModelMetadata`
        if (data['smartReplyModelMetadata']) { // data not null
          GoogleCloudDialogflowV2SmartReplyModelMetadata.validateJSON(data['smartReplyModelMetadata']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }

        return true;
    }


}



/**
 * @member {module:model/GoogleCloudDialogflowV2ArticleSuggestionModelMetadata} articleSuggestionModelMetadata
 */
GoogleCloudDialogflowV2ConversationModel.prototype['articleSuggestionModelMetadata'] = undefined;

/**
 * Output only. Creation time of this model.
 * @member {String} createTime
 */
GoogleCloudDialogflowV2ConversationModel.prototype['createTime'] = undefined;

/**
 * Required. Datasets used to create model.
 * @member {Array.<module:model/GoogleCloudDialogflowV2InputDataset>} datasets
 */
GoogleCloudDialogflowV2ConversationModel.prototype['datasets'] = undefined;

/**
 * Required. The display name of the model. At most 64 bytes long.
 * @member {String} displayName
 */
GoogleCloudDialogflowV2ConversationModel.prototype['displayName'] = undefined;

/**
 * Language code for the conversation model. If not specified, the language is en-US. Language at ConversationModel should be set for all non en-us languages. This should be a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: \"en-US\".
 * @member {String} languageCode
 */
GoogleCloudDialogflowV2ConversationModel.prototype['languageCode'] = undefined;

/**
 * ConversationModel resource name. Format: `projects//conversationModels/`
 * @member {String} name
 */
GoogleCloudDialogflowV2ConversationModel.prototype['name'] = undefined;

/**
 * @member {module:model/GoogleCloudDialogflowV2SmartReplyModelMetadata} smartReplyModelMetadata
 */
GoogleCloudDialogflowV2ConversationModel.prototype['smartReplyModelMetadata'] = undefined;

/**
 * Output only. State of the model. A model can only serve prediction requests after it gets deployed.
 * @member {module:model/GoogleCloudDialogflowV2ConversationModel.StateEnum} state
 */
GoogleCloudDialogflowV2ConversationModel.prototype['state'] = undefined;





/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudDialogflowV2ConversationModel['StateEnum'] = {

    /**
     * value: "STATE_UNSPECIFIED"
     * @const
     */
    "STATE_UNSPECIFIED": "STATE_UNSPECIFIED",

    /**
     * value: "CREATING"
     * @const
     */
    "CREATING": "CREATING",

    /**
     * value: "UNDEPLOYED"
     * @const
     */
    "UNDEPLOYED": "UNDEPLOYED",

    /**
     * value: "DEPLOYING"
     * @const
     */
    "DEPLOYING": "DEPLOYING",

    /**
     * value: "DEPLOYED"
     * @const
     */
    "DEPLOYED": "DEPLOYED",

    /**
     * value: "UNDEPLOYING"
     * @const
     */
    "UNDEPLOYING": "UNDEPLOYING",

    /**
     * value: "DELETING"
     * @const
     */
    "DELETING": "DELETING",

    /**
     * value: "FAILED"
     * @const
     */
    "FAILED": "FAILED",

    /**
     * value: "PENDING"
     * @const
     */
    "PENDING": "PENDING"
};



export default GoogleCloudDialogflowV2ConversationModel;

