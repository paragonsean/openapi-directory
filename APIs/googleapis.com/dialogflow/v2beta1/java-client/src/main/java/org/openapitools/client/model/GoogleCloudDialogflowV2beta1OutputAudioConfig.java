/*
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1SynthesizeSpeechConfig;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Instructs the speech synthesizer how to generate the output audio content. If this audio config is supplied in a request, it overrides all existing text-to-speech settings applied to the agent.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:47:43.085785-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDialogflowV2beta1OutputAudioConfig {
  /**
   * Required. Audio encoding of the synthesized audio content.
   */
  @JsonAdapter(AudioEncodingEnum.Adapter.class)
  public enum AudioEncodingEnum {
    UNSPECIFIED("OUTPUT_AUDIO_ENCODING_UNSPECIFIED"),
    
    LINEAR_16("OUTPUT_AUDIO_ENCODING_LINEAR_16"),
    
    MP3("OUTPUT_AUDIO_ENCODING_MP3"),
    
    MP3_64_KBPS("OUTPUT_AUDIO_ENCODING_MP3_64_KBPS"),
    
    OGG_OPUS("OUTPUT_AUDIO_ENCODING_OGG_OPUS"),
    
    MULAW("OUTPUT_AUDIO_ENCODING_MULAW");

    private String value;

    AudioEncodingEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AudioEncodingEnum fromValue(String value) {
      for (AudioEncodingEnum b : AudioEncodingEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<AudioEncodingEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AudioEncodingEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AudioEncodingEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return AudioEncodingEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      AudioEncodingEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_AUDIO_ENCODING = "audioEncoding";
  @SerializedName(SERIALIZED_NAME_AUDIO_ENCODING)
  private AudioEncodingEnum audioEncoding;

  public static final String SERIALIZED_NAME_SAMPLE_RATE_HERTZ = "sampleRateHertz";
  @SerializedName(SERIALIZED_NAME_SAMPLE_RATE_HERTZ)
  private Integer sampleRateHertz;

  public static final String SERIALIZED_NAME_SYNTHESIZE_SPEECH_CONFIG = "synthesizeSpeechConfig";
  @SerializedName(SERIALIZED_NAME_SYNTHESIZE_SPEECH_CONFIG)
  private GoogleCloudDialogflowV2beta1SynthesizeSpeechConfig synthesizeSpeechConfig;

  public GoogleCloudDialogflowV2beta1OutputAudioConfig() {
  }

  public GoogleCloudDialogflowV2beta1OutputAudioConfig audioEncoding(AudioEncodingEnum audioEncoding) {
    this.audioEncoding = audioEncoding;
    return this;
  }

  /**
   * Required. Audio encoding of the synthesized audio content.
   * @return audioEncoding
   */
  @javax.annotation.Nullable
  public AudioEncodingEnum getAudioEncoding() {
    return audioEncoding;
  }

  public void setAudioEncoding(AudioEncodingEnum audioEncoding) {
    this.audioEncoding = audioEncoding;
  }


  public GoogleCloudDialogflowV2beta1OutputAudioConfig sampleRateHertz(Integer sampleRateHertz) {
    this.sampleRateHertz = sampleRateHertz;
    return this;
  }

  /**
   * The synthesis sample rate (in hertz) for this audio. If not provided, then the synthesizer will use the default sample rate based on the audio encoding. If this is different from the voice&#39;s natural sample rate, then the synthesizer will honor this request by converting to the desired sample rate (which might result in worse audio quality).
   * @return sampleRateHertz
   */
  @javax.annotation.Nullable
  public Integer getSampleRateHertz() {
    return sampleRateHertz;
  }

  public void setSampleRateHertz(Integer sampleRateHertz) {
    this.sampleRateHertz = sampleRateHertz;
  }


  public GoogleCloudDialogflowV2beta1OutputAudioConfig synthesizeSpeechConfig(GoogleCloudDialogflowV2beta1SynthesizeSpeechConfig synthesizeSpeechConfig) {
    this.synthesizeSpeechConfig = synthesizeSpeechConfig;
    return this;
  }

  /**
   * Get synthesizeSpeechConfig
   * @return synthesizeSpeechConfig
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowV2beta1SynthesizeSpeechConfig getSynthesizeSpeechConfig() {
    return synthesizeSpeechConfig;
  }

  public void setSynthesizeSpeechConfig(GoogleCloudDialogflowV2beta1SynthesizeSpeechConfig synthesizeSpeechConfig) {
    this.synthesizeSpeechConfig = synthesizeSpeechConfig;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDialogflowV2beta1OutputAudioConfig googleCloudDialogflowV2beta1OutputAudioConfig = (GoogleCloudDialogflowV2beta1OutputAudioConfig) o;
    return Objects.equals(this.audioEncoding, googleCloudDialogflowV2beta1OutputAudioConfig.audioEncoding) &&
        Objects.equals(this.sampleRateHertz, googleCloudDialogflowV2beta1OutputAudioConfig.sampleRateHertz) &&
        Objects.equals(this.synthesizeSpeechConfig, googleCloudDialogflowV2beta1OutputAudioConfig.synthesizeSpeechConfig);
  }

  @Override
  public int hashCode() {
    return Objects.hash(audioEncoding, sampleRateHertz, synthesizeSpeechConfig);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDialogflowV2beta1OutputAudioConfig {\n");
    sb.append("    audioEncoding: ").append(toIndentedString(audioEncoding)).append("\n");
    sb.append("    sampleRateHertz: ").append(toIndentedString(sampleRateHertz)).append("\n");
    sb.append("    synthesizeSpeechConfig: ").append(toIndentedString(synthesizeSpeechConfig)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("audioEncoding");
    openapiFields.add("sampleRateHertz");
    openapiFields.add("synthesizeSpeechConfig");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDialogflowV2beta1OutputAudioConfig
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDialogflowV2beta1OutputAudioConfig.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDialogflowV2beta1OutputAudioConfig is not found in the empty JSON string", GoogleCloudDialogflowV2beta1OutputAudioConfig.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDialogflowV2beta1OutputAudioConfig.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDialogflowV2beta1OutputAudioConfig` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("audioEncoding") != null && !jsonObj.get("audioEncoding").isJsonNull()) && !jsonObj.get("audioEncoding").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `audioEncoding` to be a primitive type in the JSON string but got `%s`", jsonObj.get("audioEncoding").toString()));
      }
      // validate the optional field `audioEncoding`
      if (jsonObj.get("audioEncoding") != null && !jsonObj.get("audioEncoding").isJsonNull()) {
        AudioEncodingEnum.validateJsonElement(jsonObj.get("audioEncoding"));
      }
      // validate the optional field `synthesizeSpeechConfig`
      if (jsonObj.get("synthesizeSpeechConfig") != null && !jsonObj.get("synthesizeSpeechConfig").isJsonNull()) {
        GoogleCloudDialogflowV2beta1SynthesizeSpeechConfig.validateJsonElement(jsonObj.get("synthesizeSpeechConfig"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDialogflowV2beta1OutputAudioConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDialogflowV2beta1OutputAudioConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDialogflowV2beta1OutputAudioConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDialogflowV2beta1OutputAudioConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDialogflowV2beta1OutputAudioConfig>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDialogflowV2beta1OutputAudioConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDialogflowV2beta1OutputAudioConfig read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDialogflowV2beta1OutputAudioConfig given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDialogflowV2beta1OutputAudioConfig
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDialogflowV2beta1OutputAudioConfig
   */
  public static GoogleCloudDialogflowV2beta1OutputAudioConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDialogflowV2beta1OutputAudioConfig.class);
  }

  /**
   * Convert an instance of GoogleCloudDialogflowV2beta1OutputAudioConfig to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

