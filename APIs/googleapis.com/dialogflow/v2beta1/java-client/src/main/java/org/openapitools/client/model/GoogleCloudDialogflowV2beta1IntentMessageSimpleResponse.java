/*
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The simple response message containing speech or text.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:47:43.085785-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDialogflowV2beta1IntentMessageSimpleResponse {
  public static final String SERIALIZED_NAME_DISPLAY_TEXT = "displayText";
  @SerializedName(SERIALIZED_NAME_DISPLAY_TEXT)
  private String displayText;

  public static final String SERIALIZED_NAME_SSML = "ssml";
  @SerializedName(SERIALIZED_NAME_SSML)
  private String ssml;

  public static final String SERIALIZED_NAME_TEXT_TO_SPEECH = "textToSpeech";
  @SerializedName(SERIALIZED_NAME_TEXT_TO_SPEECH)
  private String textToSpeech;

  public GoogleCloudDialogflowV2beta1IntentMessageSimpleResponse() {
  }

  public GoogleCloudDialogflowV2beta1IntentMessageSimpleResponse displayText(String displayText) {
    this.displayText = displayText;
    return this;
  }

  /**
   * Optional. The text to display.
   * @return displayText
   */
  @javax.annotation.Nullable
  public String getDisplayText() {
    return displayText;
  }

  public void setDisplayText(String displayText) {
    this.displayText = displayText;
  }


  public GoogleCloudDialogflowV2beta1IntentMessageSimpleResponse ssml(String ssml) {
    this.ssml = ssml;
    return this;
  }

  /**
   * One of text_to_speech or ssml must be provided. Structured spoken response to the user in the SSML format. Mutually exclusive with text_to_speech.
   * @return ssml
   */
  @javax.annotation.Nullable
  public String getSsml() {
    return ssml;
  }

  public void setSsml(String ssml) {
    this.ssml = ssml;
  }


  public GoogleCloudDialogflowV2beta1IntentMessageSimpleResponse textToSpeech(String textToSpeech) {
    this.textToSpeech = textToSpeech;
    return this;
  }

  /**
   * One of text_to_speech or ssml must be provided. The plain text of the speech output. Mutually exclusive with ssml.
   * @return textToSpeech
   */
  @javax.annotation.Nullable
  public String getTextToSpeech() {
    return textToSpeech;
  }

  public void setTextToSpeech(String textToSpeech) {
    this.textToSpeech = textToSpeech;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDialogflowV2beta1IntentMessageSimpleResponse googleCloudDialogflowV2beta1IntentMessageSimpleResponse = (GoogleCloudDialogflowV2beta1IntentMessageSimpleResponse) o;
    return Objects.equals(this.displayText, googleCloudDialogflowV2beta1IntentMessageSimpleResponse.displayText) &&
        Objects.equals(this.ssml, googleCloudDialogflowV2beta1IntentMessageSimpleResponse.ssml) &&
        Objects.equals(this.textToSpeech, googleCloudDialogflowV2beta1IntentMessageSimpleResponse.textToSpeech);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayText, ssml, textToSpeech);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDialogflowV2beta1IntentMessageSimpleResponse {\n");
    sb.append("    displayText: ").append(toIndentedString(displayText)).append("\n");
    sb.append("    ssml: ").append(toIndentedString(ssml)).append("\n");
    sb.append("    textToSpeech: ").append(toIndentedString(textToSpeech)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("displayText");
    openapiFields.add("ssml");
    openapiFields.add("textToSpeech");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDialogflowV2beta1IntentMessageSimpleResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDialogflowV2beta1IntentMessageSimpleResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDialogflowV2beta1IntentMessageSimpleResponse is not found in the empty JSON string", GoogleCloudDialogflowV2beta1IntentMessageSimpleResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDialogflowV2beta1IntentMessageSimpleResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDialogflowV2beta1IntentMessageSimpleResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("displayText") != null && !jsonObj.get("displayText").isJsonNull()) && !jsonObj.get("displayText").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayText` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayText").toString()));
      }
      if ((jsonObj.get("ssml") != null && !jsonObj.get("ssml").isJsonNull()) && !jsonObj.get("ssml").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ssml` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ssml").toString()));
      }
      if ((jsonObj.get("textToSpeech") != null && !jsonObj.get("textToSpeech").isJsonNull()) && !jsonObj.get("textToSpeech").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `textToSpeech` to be a primitive type in the JSON string but got `%s`", jsonObj.get("textToSpeech").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDialogflowV2beta1IntentMessageSimpleResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDialogflowV2beta1IntentMessageSimpleResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDialogflowV2beta1IntentMessageSimpleResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDialogflowV2beta1IntentMessageSimpleResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDialogflowV2beta1IntentMessageSimpleResponse>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDialogflowV2beta1IntentMessageSimpleResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDialogflowV2beta1IntentMessageSimpleResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDialogflowV2beta1IntentMessageSimpleResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDialogflowV2beta1IntentMessageSimpleResponse
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDialogflowV2beta1IntentMessageSimpleResponse
   */
  public static GoogleCloudDialogflowV2beta1IntentMessageSimpleResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDialogflowV2beta1IntentMessageSimpleResponse.class);
  }

  /**
   * Convert an instance of GoogleCloudDialogflowV2beta1IntentMessageSimpleResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

