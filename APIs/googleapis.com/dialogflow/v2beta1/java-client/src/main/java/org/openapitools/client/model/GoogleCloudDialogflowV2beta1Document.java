/*
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1DocumentReloadStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A knowledge document to be used by a KnowledgeBase. For more information, see the [knowledge base guide](https://cloud.google.com/dialogflow/docs/how/knowledge-bases). Note: The &#x60;projects.agent.knowledgeBases.documents&#x60; resource is deprecated; only use &#x60;projects.knowledgeBases.documents&#x60;.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:47:43.085785-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDialogflowV2beta1Document {
  public static final String SERIALIZED_NAME_CONTENT = "content";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_CONTENT)
  private String content;

  public static final String SERIALIZED_NAME_CONTENT_URI = "contentUri";
  @SerializedName(SERIALIZED_NAME_CONTENT_URI)
  private String contentUri;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_ENABLE_AUTO_RELOAD = "enableAutoReload";
  @SerializedName(SERIALIZED_NAME_ENABLE_AUTO_RELOAD)
  private Boolean enableAutoReload;

  /**
   * Gets or Sets knowledgeTypes
   */
  @JsonAdapter(KnowledgeTypesEnum.Adapter.class)
  public enum KnowledgeTypesEnum {
    KNOWLEDGE_TYPE_UNSPECIFIED("KNOWLEDGE_TYPE_UNSPECIFIED"),
    
    FAQ("FAQ"),
    
    EXTRACTIVE_QA("EXTRACTIVE_QA"),
    
    ARTICLE_SUGGESTION("ARTICLE_SUGGESTION"),
    
    AGENT_FACING_SMART_REPLY("AGENT_FACING_SMART_REPLY"),
    
    SMART_REPLY("SMART_REPLY");

    private String value;

    KnowledgeTypesEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static KnowledgeTypesEnum fromValue(String value) {
      for (KnowledgeTypesEnum b : KnowledgeTypesEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<KnowledgeTypesEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final KnowledgeTypesEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public KnowledgeTypesEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return KnowledgeTypesEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      KnowledgeTypesEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_KNOWLEDGE_TYPES = "knowledgeTypes";
  @SerializedName(SERIALIZED_NAME_KNOWLEDGE_TYPES)
  private List<KnowledgeTypesEnum> knowledgeTypes = new ArrayList<>();

  public static final String SERIALIZED_NAME_LATEST_RELOAD_STATUS = "latestReloadStatus";
  @SerializedName(SERIALIZED_NAME_LATEST_RELOAD_STATUS)
  private GoogleCloudDialogflowV2beta1DocumentReloadStatus latestReloadStatus;

  public static final String SERIALIZED_NAME_METADATA = "metadata";
  @SerializedName(SERIALIZED_NAME_METADATA)
  private Map<String, String> metadata = new HashMap<>();

  public static final String SERIALIZED_NAME_MIME_TYPE = "mimeType";
  @SerializedName(SERIALIZED_NAME_MIME_TYPE)
  private String mimeType;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_RAW_CONTENT = "rawContent";
  @SerializedName(SERIALIZED_NAME_RAW_CONTENT)
  private byte[] rawContent;

  /**
   * Output only. The current state of the document.
   */
  @JsonAdapter(StateEnum.Adapter.class)
  public enum StateEnum {
    STATE_UNSPECIFIED("STATE_UNSPECIFIED"),
    
    CREATING("CREATING"),
    
    ACTIVE("ACTIVE"),
    
    UPDATING("UPDATING"),
    
    RELOADING("RELOADING"),
    
    DELETING("DELETING");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StateEnum fromValue(String value) {
      for (StateEnum b : StateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StateEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StateEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      StateEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private StateEnum state;

  public GoogleCloudDialogflowV2beta1Document() {
  }

  public GoogleCloudDialogflowV2beta1Document(
     StateEnum state
  ) {
    this();
    this.state = state;
  }

  @Deprecated
  public GoogleCloudDialogflowV2beta1Document content(String content) {
    this.content = content;
    return this;
  }

  /**
   * The raw content of the document. This field is only permitted for EXTRACTIVE_QA and FAQ knowledge types. Note: This field is in the process of being deprecated, please use raw_content instead.
   * @return content
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public String getContent() {
    return content;
  }

  @Deprecated
  public void setContent(String content) {
    this.content = content;
  }


  public GoogleCloudDialogflowV2beta1Document contentUri(String contentUri) {
    this.contentUri = contentUri;
    return this;
  }

  /**
   * The URI where the file content is located. For documents stored in Google Cloud Storage, these URIs must have the form &#x60;gs:///&#x60;. NOTE: External URLs must correspond to public webpages, i.e., they must be indexed by Google Search. In particular, URLs for showing documents in Google Cloud Storage (i.e. the URL in your browser) are not supported. Instead use the &#x60;gs://&#x60; format URI described above.
   * @return contentUri
   */
  @javax.annotation.Nullable
  public String getContentUri() {
    return contentUri;
  }

  public void setContentUri(String contentUri) {
    this.contentUri = contentUri;
  }


  public GoogleCloudDialogflowV2beta1Document displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Required. The display name of the document. The name must be 1024 bytes or less; otherwise, the creation request fails.
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public GoogleCloudDialogflowV2beta1Document enableAutoReload(Boolean enableAutoReload) {
    this.enableAutoReload = enableAutoReload;
    return this;
  }

  /**
   * Optional. If true, we try to automatically reload the document every day (at a time picked by the system). If false or unspecified, we don&#39;t try to automatically reload the document. Currently you can only enable automatic reload for documents sourced from a public url, see &#x60;source&#x60; field for the source types. Reload status can be tracked in &#x60;latest_reload_status&#x60;. If a reload fails, we will keep the document unchanged. If a reload fails with internal errors, the system will try to reload the document on the next day. If a reload fails with non-retriable errors (e.g. PERMISSION_DENIED), the system will not try to reload the document anymore. You need to manually reload the document successfully by calling &#x60;ReloadDocument&#x60; and clear the errors.
   * @return enableAutoReload
   */
  @javax.annotation.Nullable
  public Boolean getEnableAutoReload() {
    return enableAutoReload;
  }

  public void setEnableAutoReload(Boolean enableAutoReload) {
    this.enableAutoReload = enableAutoReload;
  }


  public GoogleCloudDialogflowV2beta1Document knowledgeTypes(List<KnowledgeTypesEnum> knowledgeTypes) {
    this.knowledgeTypes = knowledgeTypes;
    return this;
  }

  public GoogleCloudDialogflowV2beta1Document addKnowledgeTypesItem(KnowledgeTypesEnum knowledgeTypesItem) {
    if (this.knowledgeTypes == null) {
      this.knowledgeTypes = new ArrayList<>();
    }
    this.knowledgeTypes.add(knowledgeTypesItem);
    return this;
  }

  /**
   * Required. The knowledge type of document content.
   * @return knowledgeTypes
   */
  @javax.annotation.Nullable
  public List<KnowledgeTypesEnum> getKnowledgeTypes() {
    return knowledgeTypes;
  }

  public void setKnowledgeTypes(List<KnowledgeTypesEnum> knowledgeTypes) {
    this.knowledgeTypes = knowledgeTypes;
  }


  public GoogleCloudDialogflowV2beta1Document latestReloadStatus(GoogleCloudDialogflowV2beta1DocumentReloadStatus latestReloadStatus) {
    this.latestReloadStatus = latestReloadStatus;
    return this;
  }

  /**
   * Get latestReloadStatus
   * @return latestReloadStatus
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowV2beta1DocumentReloadStatus getLatestReloadStatus() {
    return latestReloadStatus;
  }

  public void setLatestReloadStatus(GoogleCloudDialogflowV2beta1DocumentReloadStatus latestReloadStatus) {
    this.latestReloadStatus = latestReloadStatus;
  }


  public GoogleCloudDialogflowV2beta1Document metadata(Map<String, String> metadata) {
    this.metadata = metadata;
    return this;
  }

  public GoogleCloudDialogflowV2beta1Document putMetadataItem(String key, String metadataItem) {
    if (this.metadata == null) {
      this.metadata = new HashMap<>();
    }
    this.metadata.put(key, metadataItem);
    return this;
  }

  /**
   * Optional. Metadata for the document. The metadata supports arbitrary key-value pairs. Suggested use cases include storing a document&#39;s title, an external URL distinct from the document&#39;s content_uri, etc. The max size of a &#x60;key&#x60; or a &#x60;value&#x60; of the metadata is 1024 bytes.
   * @return metadata
   */
  @javax.annotation.Nullable
  public Map<String, String> getMetadata() {
    return metadata;
  }

  public void setMetadata(Map<String, String> metadata) {
    this.metadata = metadata;
  }


  public GoogleCloudDialogflowV2beta1Document mimeType(String mimeType) {
    this.mimeType = mimeType;
    return this;
  }

  /**
   * Required. The MIME type of this document.
   * @return mimeType
   */
  @javax.annotation.Nullable
  public String getMimeType() {
    return mimeType;
  }

  public void setMimeType(String mimeType) {
    this.mimeType = mimeType;
  }


  public GoogleCloudDialogflowV2beta1Document name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Optional. The document resource name. The name must be empty when creating a document. Format: &#x60;projects//locations//knowledgeBases//documents/&#x60;.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public GoogleCloudDialogflowV2beta1Document rawContent(byte[] rawContent) {
    this.rawContent = rawContent;
    return this;
  }

  /**
   * The raw content of the document. This field is only permitted for EXTRACTIVE_QA and FAQ knowledge types.
   * @return rawContent
   */
  @javax.annotation.Nullable
  public byte[] getRawContent() {
    return rawContent;
  }

  public void setRawContent(byte[] rawContent) {
    this.rawContent = rawContent;
  }


  /**
   * Output only. The current state of the document.
   * @return state
   */
  @javax.annotation.Nullable
  public StateEnum getState() {
    return state;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDialogflowV2beta1Document googleCloudDialogflowV2beta1Document = (GoogleCloudDialogflowV2beta1Document) o;
    return Objects.equals(this.content, googleCloudDialogflowV2beta1Document.content) &&
        Objects.equals(this.contentUri, googleCloudDialogflowV2beta1Document.contentUri) &&
        Objects.equals(this.displayName, googleCloudDialogflowV2beta1Document.displayName) &&
        Objects.equals(this.enableAutoReload, googleCloudDialogflowV2beta1Document.enableAutoReload) &&
        Objects.equals(this.knowledgeTypes, googleCloudDialogflowV2beta1Document.knowledgeTypes) &&
        Objects.equals(this.latestReloadStatus, googleCloudDialogflowV2beta1Document.latestReloadStatus) &&
        Objects.equals(this.metadata, googleCloudDialogflowV2beta1Document.metadata) &&
        Objects.equals(this.mimeType, googleCloudDialogflowV2beta1Document.mimeType) &&
        Objects.equals(this.name, googleCloudDialogflowV2beta1Document.name) &&
        Arrays.equals(this.rawContent, googleCloudDialogflowV2beta1Document.rawContent) &&
        Objects.equals(this.state, googleCloudDialogflowV2beta1Document.state);
  }

  @Override
  public int hashCode() {
    return Objects.hash(content, contentUri, displayName, enableAutoReload, knowledgeTypes, latestReloadStatus, metadata, mimeType, name, Arrays.hashCode(rawContent), state);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDialogflowV2beta1Document {\n");
    sb.append("    content: ").append(toIndentedString(content)).append("\n");
    sb.append("    contentUri: ").append(toIndentedString(contentUri)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    enableAutoReload: ").append(toIndentedString(enableAutoReload)).append("\n");
    sb.append("    knowledgeTypes: ").append(toIndentedString(knowledgeTypes)).append("\n");
    sb.append("    latestReloadStatus: ").append(toIndentedString(latestReloadStatus)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    mimeType: ").append(toIndentedString(mimeType)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    rawContent: ").append(toIndentedString(rawContent)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("content");
    openapiFields.add("contentUri");
    openapiFields.add("displayName");
    openapiFields.add("enableAutoReload");
    openapiFields.add("knowledgeTypes");
    openapiFields.add("latestReloadStatus");
    openapiFields.add("metadata");
    openapiFields.add("mimeType");
    openapiFields.add("name");
    openapiFields.add("rawContent");
    openapiFields.add("state");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDialogflowV2beta1Document
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDialogflowV2beta1Document.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDialogflowV2beta1Document is not found in the empty JSON string", GoogleCloudDialogflowV2beta1Document.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDialogflowV2beta1Document.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDialogflowV2beta1Document` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("content") != null && !jsonObj.get("content").isJsonNull()) && !jsonObj.get("content").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `content` to be a primitive type in the JSON string but got `%s`", jsonObj.get("content").toString()));
      }
      if ((jsonObj.get("contentUri") != null && !jsonObj.get("contentUri").isJsonNull()) && !jsonObj.get("contentUri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contentUri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contentUri").toString()));
      }
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("knowledgeTypes") != null && !jsonObj.get("knowledgeTypes").isJsonNull() && !jsonObj.get("knowledgeTypes").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `knowledgeTypes` to be an array in the JSON string but got `%s`", jsonObj.get("knowledgeTypes").toString()));
      }
      // validate the optional field `latestReloadStatus`
      if (jsonObj.get("latestReloadStatus") != null && !jsonObj.get("latestReloadStatus").isJsonNull()) {
        GoogleCloudDialogflowV2beta1DocumentReloadStatus.validateJsonElement(jsonObj.get("latestReloadStatus"));
      }
      if ((jsonObj.get("mimeType") != null && !jsonObj.get("mimeType").isJsonNull()) && !jsonObj.get("mimeType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mimeType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mimeType").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) && !jsonObj.get("state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state").toString()));
      }
      // validate the optional field `state`
      if (jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) {
        StateEnum.validateJsonElement(jsonObj.get("state"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDialogflowV2beta1Document.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDialogflowV2beta1Document' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDialogflowV2beta1Document> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDialogflowV2beta1Document.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDialogflowV2beta1Document>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDialogflowV2beta1Document value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDialogflowV2beta1Document read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDialogflowV2beta1Document given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDialogflowV2beta1Document
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDialogflowV2beta1Document
   */
  public static GoogleCloudDialogflowV2beta1Document fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDialogflowV2beta1Document.class);
  }

  /**
   * Convert an instance of GoogleCloudDialogflowV2beta1Document to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

