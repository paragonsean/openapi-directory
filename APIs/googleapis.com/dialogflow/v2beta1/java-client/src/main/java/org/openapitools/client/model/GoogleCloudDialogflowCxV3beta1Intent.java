/*
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.GoogleCloudDialogflowCxV3beta1IntentParameter;
import org.openapitools.client.model.GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * An intent represents a user&#39;s intent to interact with a conversational agent. You can provide information for the Dialogflow API to use to match user input to an intent by adding training phrases (i.e., examples of user input) to your intent.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:47:43.085785-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDialogflowCxV3beta1Intent {
  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_IS_FALLBACK = "isFallback";
  @SerializedName(SERIALIZED_NAME_IS_FALLBACK)
  private Boolean isFallback;

  public static final String SERIALIZED_NAME_LABELS = "labels";
  @SerializedName(SERIALIZED_NAME_LABELS)
  private Map<String, String> labels = new HashMap<>();

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PARAMETERS = "parameters";
  @SerializedName(SERIALIZED_NAME_PARAMETERS)
  private List<GoogleCloudDialogflowCxV3beta1IntentParameter> parameters = new ArrayList<>();

  public static final String SERIALIZED_NAME_PRIORITY = "priority";
  @SerializedName(SERIALIZED_NAME_PRIORITY)
  private Integer priority;

  public static final String SERIALIZED_NAME_TRAINING_PHRASES = "trainingPhrases";
  @SerializedName(SERIALIZED_NAME_TRAINING_PHRASES)
  private List<GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase> trainingPhrases = new ArrayList<>();

  public GoogleCloudDialogflowCxV3beta1Intent() {
  }

  public GoogleCloudDialogflowCxV3beta1Intent description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Human readable description for better understanding an intent like its scope, content, result etc. Maximum character limit: 140 characters.
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public GoogleCloudDialogflowCxV3beta1Intent displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Required. The human-readable name of the intent, unique within the agent.
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public GoogleCloudDialogflowCxV3beta1Intent isFallback(Boolean isFallback) {
    this.isFallback = isFallback;
    return this;
  }

  /**
   * Indicates whether this is a fallback intent. Currently only default fallback intent is allowed in the agent, which is added upon agent creation. Adding training phrases to fallback intent is useful in the case of requests that are mistakenly matched, since training phrases assigned to fallback intents act as negative examples that triggers no-match event.
   * @return isFallback
   */
  @javax.annotation.Nullable
  public Boolean getIsFallback() {
    return isFallback;
  }

  public void setIsFallback(Boolean isFallback) {
    this.isFallback = isFallback;
  }


  public GoogleCloudDialogflowCxV3beta1Intent labels(Map<String, String> labels) {
    this.labels = labels;
    return this;
  }

  public GoogleCloudDialogflowCxV3beta1Intent putLabelsItem(String key, String labelsItem) {
    if (this.labels == null) {
      this.labels = new HashMap<>();
    }
    this.labels.put(key, labelsItem);
    return this;
  }

  /**
   * The key/value metadata to label an intent. Labels can contain lowercase letters, digits and the symbols &#39;-&#39; and &#39;_&#39;. International characters are allowed, including letters from unicase alphabets. Keys must start with a letter. Keys and values can be no longer than 63 characters and no more than 128 bytes. Prefix \&quot;sys-\&quot; is reserved for Dialogflow defined labels. Currently allowed Dialogflow defined labels include: * sys-head * sys-contextual The above labels do not require value. \&quot;sys-head\&quot; means the intent is a head intent. \&quot;sys-contextual\&quot; means the intent is a contextual intent.
   * @return labels
   */
  @javax.annotation.Nullable
  public Map<String, String> getLabels() {
    return labels;
  }

  public void setLabels(Map<String, String> labels) {
    this.labels = labels;
  }


  public GoogleCloudDialogflowCxV3beta1Intent name(String name) {
    this.name = name;
    return this;
  }

  /**
   * The unique identifier of the intent. Required for the Intents.UpdateIntent method. Intents.CreateIntent populates the name automatically. Format: &#x60;projects//locations//agents//intents/&#x60;.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public GoogleCloudDialogflowCxV3beta1Intent parameters(List<GoogleCloudDialogflowCxV3beta1IntentParameter> parameters) {
    this.parameters = parameters;
    return this;
  }

  public GoogleCloudDialogflowCxV3beta1Intent addParametersItem(GoogleCloudDialogflowCxV3beta1IntentParameter parametersItem) {
    if (this.parameters == null) {
      this.parameters = new ArrayList<>();
    }
    this.parameters.add(parametersItem);
    return this;
  }

  /**
   * The collection of parameters associated with the intent.
   * @return parameters
   */
  @javax.annotation.Nullable
  public List<GoogleCloudDialogflowCxV3beta1IntentParameter> getParameters() {
    return parameters;
  }

  public void setParameters(List<GoogleCloudDialogflowCxV3beta1IntentParameter> parameters) {
    this.parameters = parameters;
  }


  public GoogleCloudDialogflowCxV3beta1Intent priority(Integer priority) {
    this.priority = priority;
    return this;
  }

  /**
   * The priority of this intent. Higher numbers represent higher priorities. - If the supplied value is unspecified or 0, the service translates the value to 500,000, which corresponds to the &#x60;Normal&#x60; priority in the console. - If the supplied value is negative, the intent is ignored in runtime detect intent requests.
   * @return priority
   */
  @javax.annotation.Nullable
  public Integer getPriority() {
    return priority;
  }

  public void setPriority(Integer priority) {
    this.priority = priority;
  }


  public GoogleCloudDialogflowCxV3beta1Intent trainingPhrases(List<GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase> trainingPhrases) {
    this.trainingPhrases = trainingPhrases;
    return this;
  }

  public GoogleCloudDialogflowCxV3beta1Intent addTrainingPhrasesItem(GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase trainingPhrasesItem) {
    if (this.trainingPhrases == null) {
      this.trainingPhrases = new ArrayList<>();
    }
    this.trainingPhrases.add(trainingPhrasesItem);
    return this;
  }

  /**
   * The collection of training phrases the agent is trained on to identify the intent.
   * @return trainingPhrases
   */
  @javax.annotation.Nullable
  public List<GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase> getTrainingPhrases() {
    return trainingPhrases;
  }

  public void setTrainingPhrases(List<GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase> trainingPhrases) {
    this.trainingPhrases = trainingPhrases;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDialogflowCxV3beta1Intent googleCloudDialogflowCxV3beta1Intent = (GoogleCloudDialogflowCxV3beta1Intent) o;
    return Objects.equals(this.description, googleCloudDialogflowCxV3beta1Intent.description) &&
        Objects.equals(this.displayName, googleCloudDialogflowCxV3beta1Intent.displayName) &&
        Objects.equals(this.isFallback, googleCloudDialogflowCxV3beta1Intent.isFallback) &&
        Objects.equals(this.labels, googleCloudDialogflowCxV3beta1Intent.labels) &&
        Objects.equals(this.name, googleCloudDialogflowCxV3beta1Intent.name) &&
        Objects.equals(this.parameters, googleCloudDialogflowCxV3beta1Intent.parameters) &&
        Objects.equals(this.priority, googleCloudDialogflowCxV3beta1Intent.priority) &&
        Objects.equals(this.trainingPhrases, googleCloudDialogflowCxV3beta1Intent.trainingPhrases);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, displayName, isFallback, labels, name, parameters, priority, trainingPhrases);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDialogflowCxV3beta1Intent {\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    isFallback: ").append(toIndentedString(isFallback)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    parameters: ").append(toIndentedString(parameters)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    trainingPhrases: ").append(toIndentedString(trainingPhrases)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("description");
    openapiFields.add("displayName");
    openapiFields.add("isFallback");
    openapiFields.add("labels");
    openapiFields.add("name");
    openapiFields.add("parameters");
    openapiFields.add("priority");
    openapiFields.add("trainingPhrases");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDialogflowCxV3beta1Intent
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDialogflowCxV3beta1Intent.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDialogflowCxV3beta1Intent is not found in the empty JSON string", GoogleCloudDialogflowCxV3beta1Intent.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDialogflowCxV3beta1Intent.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDialogflowCxV3beta1Intent` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if (jsonObj.get("parameters") != null && !jsonObj.get("parameters").isJsonNull()) {
        JsonArray jsonArrayparameters = jsonObj.getAsJsonArray("parameters");
        if (jsonArrayparameters != null) {
          // ensure the json data is an array
          if (!jsonObj.get("parameters").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `parameters` to be an array in the JSON string but got `%s`", jsonObj.get("parameters").toString()));
          }

          // validate the optional field `parameters` (array)
          for (int i = 0; i < jsonArrayparameters.size(); i++) {
            GoogleCloudDialogflowCxV3beta1IntentParameter.validateJsonElement(jsonArrayparameters.get(i));
          };
        }
      }
      if (jsonObj.get("trainingPhrases") != null && !jsonObj.get("trainingPhrases").isJsonNull()) {
        JsonArray jsonArraytrainingPhrases = jsonObj.getAsJsonArray("trainingPhrases");
        if (jsonArraytrainingPhrases != null) {
          // ensure the json data is an array
          if (!jsonObj.get("trainingPhrases").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `trainingPhrases` to be an array in the JSON string but got `%s`", jsonObj.get("trainingPhrases").toString()));
          }

          // validate the optional field `trainingPhrases` (array)
          for (int i = 0; i < jsonArraytrainingPhrases.size(); i++) {
            GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase.validateJsonElement(jsonArraytrainingPhrases.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDialogflowCxV3beta1Intent.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDialogflowCxV3beta1Intent' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDialogflowCxV3beta1Intent> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDialogflowCxV3beta1Intent.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDialogflowCxV3beta1Intent>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDialogflowCxV3beta1Intent value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDialogflowCxV3beta1Intent read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDialogflowCxV3beta1Intent given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDialogflowCxV3beta1Intent
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDialogflowCxV3beta1Intent
   */
  public static GoogleCloudDialogflowCxV3beta1Intent fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDialogflowCxV3beta1Intent.class);
  }

  /**
   * Convert an instance of GoogleCloudDialogflowCxV3beta1Intent to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

