/*
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1AgentAssistantRecord;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1AnswerFeedback;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Answer records are records to manage answer history and feedbacks for Dialogflow. Currently, answer record includes: - human agent assistant article suggestion - human agent assistant faq article It doesn&#39;t include: - &#x60;DetectIntent&#x60; intent matching - &#x60;DetectIntent&#x60; knowledge Answer records are not related to the conversation history in the Dialogflow Console. A Record is generated even when the end-user disables conversation history in the console. Records are created when there&#39;s a human agent assistant suggestion generated. A typical workflow for customers provide feedback to an answer is: 1. For human agent assistant, customers get suggestion via ListSuggestions API. Together with the answers, AnswerRecord.name are returned to the customers. 2. The customer uses the AnswerRecord.name to call the UpdateAnswerRecord method to send feedback about a specific answer that they believe is wrong.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:47:43.085785-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDialogflowV2beta1AnswerRecord {
  public static final String SERIALIZED_NAME_AGENT_ASSISTANT_RECORD = "agentAssistantRecord";
  @SerializedName(SERIALIZED_NAME_AGENT_ASSISTANT_RECORD)
  private GoogleCloudDialogflowV2beta1AgentAssistantRecord agentAssistantRecord;

  public static final String SERIALIZED_NAME_ANSWER_FEEDBACK = "answerFeedback";
  @SerializedName(SERIALIZED_NAME_ANSWER_FEEDBACK)
  private GoogleCloudDialogflowV2beta1AnswerFeedback answerFeedback;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public GoogleCloudDialogflowV2beta1AnswerRecord() {
  }

  public GoogleCloudDialogflowV2beta1AnswerRecord agentAssistantRecord(GoogleCloudDialogflowV2beta1AgentAssistantRecord agentAssistantRecord) {
    this.agentAssistantRecord = agentAssistantRecord;
    return this;
  }

  /**
   * Get agentAssistantRecord
   * @return agentAssistantRecord
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowV2beta1AgentAssistantRecord getAgentAssistantRecord() {
    return agentAssistantRecord;
  }

  public void setAgentAssistantRecord(GoogleCloudDialogflowV2beta1AgentAssistantRecord agentAssistantRecord) {
    this.agentAssistantRecord = agentAssistantRecord;
  }


  public GoogleCloudDialogflowV2beta1AnswerRecord answerFeedback(GoogleCloudDialogflowV2beta1AnswerFeedback answerFeedback) {
    this.answerFeedback = answerFeedback;
    return this;
  }

  /**
   * Get answerFeedback
   * @return answerFeedback
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowV2beta1AnswerFeedback getAnswerFeedback() {
    return answerFeedback;
  }

  public void setAnswerFeedback(GoogleCloudDialogflowV2beta1AnswerFeedback answerFeedback) {
    this.answerFeedback = answerFeedback;
  }


  public GoogleCloudDialogflowV2beta1AnswerRecord name(String name) {
    this.name = name;
    return this;
  }

  /**
   * The unique identifier of this answer record. Required for AnswerRecords.UpdateAnswerRecord method. Format: &#x60;projects//locations//answerRecords/&#x60;.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDialogflowV2beta1AnswerRecord googleCloudDialogflowV2beta1AnswerRecord = (GoogleCloudDialogflowV2beta1AnswerRecord) o;
    return Objects.equals(this.agentAssistantRecord, googleCloudDialogflowV2beta1AnswerRecord.agentAssistantRecord) &&
        Objects.equals(this.answerFeedback, googleCloudDialogflowV2beta1AnswerRecord.answerFeedback) &&
        Objects.equals(this.name, googleCloudDialogflowV2beta1AnswerRecord.name);
  }

  @Override
  public int hashCode() {
    return Objects.hash(agentAssistantRecord, answerFeedback, name);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDialogflowV2beta1AnswerRecord {\n");
    sb.append("    agentAssistantRecord: ").append(toIndentedString(agentAssistantRecord)).append("\n");
    sb.append("    answerFeedback: ").append(toIndentedString(answerFeedback)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("agentAssistantRecord");
    openapiFields.add("answerFeedback");
    openapiFields.add("name");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDialogflowV2beta1AnswerRecord
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDialogflowV2beta1AnswerRecord.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDialogflowV2beta1AnswerRecord is not found in the empty JSON string", GoogleCloudDialogflowV2beta1AnswerRecord.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDialogflowV2beta1AnswerRecord.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDialogflowV2beta1AnswerRecord` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `agentAssistantRecord`
      if (jsonObj.get("agentAssistantRecord") != null && !jsonObj.get("agentAssistantRecord").isJsonNull()) {
        GoogleCloudDialogflowV2beta1AgentAssistantRecord.validateJsonElement(jsonObj.get("agentAssistantRecord"));
      }
      // validate the optional field `answerFeedback`
      if (jsonObj.get("answerFeedback") != null && !jsonObj.get("answerFeedback").isJsonNull()) {
        GoogleCloudDialogflowV2beta1AnswerFeedback.validateJsonElement(jsonObj.get("answerFeedback"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDialogflowV2beta1AnswerRecord.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDialogflowV2beta1AnswerRecord' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDialogflowV2beta1AnswerRecord> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDialogflowV2beta1AnswerRecord.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDialogflowV2beta1AnswerRecord>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDialogflowV2beta1AnswerRecord value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDialogflowV2beta1AnswerRecord read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDialogflowV2beta1AnswerRecord given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDialogflowV2beta1AnswerRecord
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDialogflowV2beta1AnswerRecord
   */
  public static GoogleCloudDialogflowV2beta1AnswerRecord fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDialogflowV2beta1AnswerRecord.class);
  }

  /**
   * Convert an instance of GoogleCloudDialogflowV2beta1AnswerRecord to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

