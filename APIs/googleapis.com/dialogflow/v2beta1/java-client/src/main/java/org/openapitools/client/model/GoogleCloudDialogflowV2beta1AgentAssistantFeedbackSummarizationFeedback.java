/*
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Feedback for conversation summarization.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:47:43.085785-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDialogflowV2beta1AgentAssistantFeedbackSummarizationFeedback {
  public static final String SERIALIZED_NAME_START_TIMESTAMP = "startTimestamp";
  @SerializedName(SERIALIZED_NAME_START_TIMESTAMP)
  private String startTimestamp;

  public static final String SERIALIZED_NAME_SUBMIT_TIMESTAMP = "submitTimestamp";
  @SerializedName(SERIALIZED_NAME_SUBMIT_TIMESTAMP)
  private String submitTimestamp;

  public static final String SERIALIZED_NAME_SUMMARY_TEXT = "summaryText";
  @SerializedName(SERIALIZED_NAME_SUMMARY_TEXT)
  private String summaryText;

  public static final String SERIALIZED_NAME_TEXT_SECTIONS = "textSections";
  @SerializedName(SERIALIZED_NAME_TEXT_SECTIONS)
  private Map<String, String> textSections = new HashMap<>();

  public GoogleCloudDialogflowV2beta1AgentAssistantFeedbackSummarizationFeedback() {
  }

  public GoogleCloudDialogflowV2beta1AgentAssistantFeedbackSummarizationFeedback startTimestamp(String startTimestamp) {
    this.startTimestamp = startTimestamp;
    return this;
  }

  /**
   * Timestamp when composing of the summary starts.
   * @return startTimestamp
   */
  @javax.annotation.Nullable
  public String getStartTimestamp() {
    return startTimestamp;
  }

  public void setStartTimestamp(String startTimestamp) {
    this.startTimestamp = startTimestamp;
  }


  public GoogleCloudDialogflowV2beta1AgentAssistantFeedbackSummarizationFeedback submitTimestamp(String submitTimestamp) {
    this.submitTimestamp = submitTimestamp;
    return this;
  }

  /**
   * Timestamp when the summary was submitted.
   * @return submitTimestamp
   */
  @javax.annotation.Nullable
  public String getSubmitTimestamp() {
    return submitTimestamp;
  }

  public void setSubmitTimestamp(String submitTimestamp) {
    this.submitTimestamp = submitTimestamp;
  }


  public GoogleCloudDialogflowV2beta1AgentAssistantFeedbackSummarizationFeedback summaryText(String summaryText) {
    this.summaryText = summaryText;
    return this;
  }

  /**
   * Text of actual submitted summary.
   * @return summaryText
   */
  @javax.annotation.Nullable
  public String getSummaryText() {
    return summaryText;
  }

  public void setSummaryText(String summaryText) {
    this.summaryText = summaryText;
  }


  public GoogleCloudDialogflowV2beta1AgentAssistantFeedbackSummarizationFeedback textSections(Map<String, String> textSections) {
    this.textSections = textSections;
    return this;
  }

  public GoogleCloudDialogflowV2beta1AgentAssistantFeedbackSummarizationFeedback putTextSectionsItem(String key, String textSectionsItem) {
    if (this.textSections == null) {
      this.textSections = new HashMap<>();
    }
    this.textSections.put(key, textSectionsItem);
    return this;
  }

  /**
   * Optional. Actual text sections of submitted summary.
   * @return textSections
   */
  @javax.annotation.Nullable
  public Map<String, String> getTextSections() {
    return textSections;
  }

  public void setTextSections(Map<String, String> textSections) {
    this.textSections = textSections;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDialogflowV2beta1AgentAssistantFeedbackSummarizationFeedback googleCloudDialogflowV2beta1AgentAssistantFeedbackSummarizationFeedback = (GoogleCloudDialogflowV2beta1AgentAssistantFeedbackSummarizationFeedback) o;
    return Objects.equals(this.startTimestamp, googleCloudDialogflowV2beta1AgentAssistantFeedbackSummarizationFeedback.startTimestamp) &&
        Objects.equals(this.submitTimestamp, googleCloudDialogflowV2beta1AgentAssistantFeedbackSummarizationFeedback.submitTimestamp) &&
        Objects.equals(this.summaryText, googleCloudDialogflowV2beta1AgentAssistantFeedbackSummarizationFeedback.summaryText) &&
        Objects.equals(this.textSections, googleCloudDialogflowV2beta1AgentAssistantFeedbackSummarizationFeedback.textSections);
  }

  @Override
  public int hashCode() {
    return Objects.hash(startTimestamp, submitTimestamp, summaryText, textSections);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDialogflowV2beta1AgentAssistantFeedbackSummarizationFeedback {\n");
    sb.append("    startTimestamp: ").append(toIndentedString(startTimestamp)).append("\n");
    sb.append("    submitTimestamp: ").append(toIndentedString(submitTimestamp)).append("\n");
    sb.append("    summaryText: ").append(toIndentedString(summaryText)).append("\n");
    sb.append("    textSections: ").append(toIndentedString(textSections)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("startTimestamp");
    openapiFields.add("submitTimestamp");
    openapiFields.add("summaryText");
    openapiFields.add("textSections");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDialogflowV2beta1AgentAssistantFeedbackSummarizationFeedback
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDialogflowV2beta1AgentAssistantFeedbackSummarizationFeedback.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDialogflowV2beta1AgentAssistantFeedbackSummarizationFeedback is not found in the empty JSON string", GoogleCloudDialogflowV2beta1AgentAssistantFeedbackSummarizationFeedback.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDialogflowV2beta1AgentAssistantFeedbackSummarizationFeedback.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDialogflowV2beta1AgentAssistantFeedbackSummarizationFeedback` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("startTimestamp") != null && !jsonObj.get("startTimestamp").isJsonNull()) && !jsonObj.get("startTimestamp").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `startTimestamp` to be a primitive type in the JSON string but got `%s`", jsonObj.get("startTimestamp").toString()));
      }
      if ((jsonObj.get("submitTimestamp") != null && !jsonObj.get("submitTimestamp").isJsonNull()) && !jsonObj.get("submitTimestamp").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `submitTimestamp` to be a primitive type in the JSON string but got `%s`", jsonObj.get("submitTimestamp").toString()));
      }
      if ((jsonObj.get("summaryText") != null && !jsonObj.get("summaryText").isJsonNull()) && !jsonObj.get("summaryText").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `summaryText` to be a primitive type in the JSON string but got `%s`", jsonObj.get("summaryText").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDialogflowV2beta1AgentAssistantFeedbackSummarizationFeedback.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDialogflowV2beta1AgentAssistantFeedbackSummarizationFeedback' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDialogflowV2beta1AgentAssistantFeedbackSummarizationFeedback> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDialogflowV2beta1AgentAssistantFeedbackSummarizationFeedback.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDialogflowV2beta1AgentAssistantFeedbackSummarizationFeedback>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDialogflowV2beta1AgentAssistantFeedbackSummarizationFeedback value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDialogflowV2beta1AgentAssistantFeedbackSummarizationFeedback read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDialogflowV2beta1AgentAssistantFeedbackSummarizationFeedback given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDialogflowV2beta1AgentAssistantFeedbackSummarizationFeedback
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDialogflowV2beta1AgentAssistantFeedbackSummarizationFeedback
   */
  public static GoogleCloudDialogflowV2beta1AgentAssistantFeedbackSummarizationFeedback fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDialogflowV2beta1AgentAssistantFeedbackSummarizationFeedback.class);
  }

  /**
   * Convert an instance of GoogleCloudDialogflowV2beta1AgentAssistantFeedbackSummarizationFeedback to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

