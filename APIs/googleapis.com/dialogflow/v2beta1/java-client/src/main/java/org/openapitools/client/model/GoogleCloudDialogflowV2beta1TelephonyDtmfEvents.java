/*
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A wrapper of repeated TelephonyDtmf digits.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:47:43.085785-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDialogflowV2beta1TelephonyDtmfEvents {
  /**
   * Gets or Sets dtmfEvents
   */
  @JsonAdapter(DtmfEventsEnum.Adapter.class)
  public enum DtmfEventsEnum {
    TELEPHONY_DTMF_UNSPECIFIED("TELEPHONY_DTMF_UNSPECIFIED"),
    
    DTMF_ONE("DTMF_ONE"),
    
    DTMF_TWO("DTMF_TWO"),
    
    DTMF_THREE("DTMF_THREE"),
    
    DTMF_FOUR("DTMF_FOUR"),
    
    DTMF_FIVE("DTMF_FIVE"),
    
    DTMF_SIX("DTMF_SIX"),
    
    DTMF_SEVEN("DTMF_SEVEN"),
    
    DTMF_EIGHT("DTMF_EIGHT"),
    
    DTMF_NINE("DTMF_NINE"),
    
    DTMF_ZERO("DTMF_ZERO"),
    
    DTMF_A("DTMF_A"),
    
    DTMF_B("DTMF_B"),
    
    DTMF_C("DTMF_C"),
    
    DTMF_D("DTMF_D"),
    
    DTMF_STAR("DTMF_STAR"),
    
    DTMF_POUND("DTMF_POUND");

    private String value;

    DtmfEventsEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static DtmfEventsEnum fromValue(String value) {
      for (DtmfEventsEnum b : DtmfEventsEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<DtmfEventsEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DtmfEventsEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public DtmfEventsEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return DtmfEventsEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      DtmfEventsEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_DTMF_EVENTS = "dtmfEvents";
  @SerializedName(SERIALIZED_NAME_DTMF_EVENTS)
  private List<DtmfEventsEnum> dtmfEvents = new ArrayList<>();

  public GoogleCloudDialogflowV2beta1TelephonyDtmfEvents() {
  }

  public GoogleCloudDialogflowV2beta1TelephonyDtmfEvents dtmfEvents(List<DtmfEventsEnum> dtmfEvents) {
    this.dtmfEvents = dtmfEvents;
    return this;
  }

  public GoogleCloudDialogflowV2beta1TelephonyDtmfEvents addDtmfEventsItem(DtmfEventsEnum dtmfEventsItem) {
    if (this.dtmfEvents == null) {
      this.dtmfEvents = new ArrayList<>();
    }
    this.dtmfEvents.add(dtmfEventsItem);
    return this;
  }

  /**
   * A sequence of TelephonyDtmf digits.
   * @return dtmfEvents
   */
  @javax.annotation.Nullable
  public List<DtmfEventsEnum> getDtmfEvents() {
    return dtmfEvents;
  }

  public void setDtmfEvents(List<DtmfEventsEnum> dtmfEvents) {
    this.dtmfEvents = dtmfEvents;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDialogflowV2beta1TelephonyDtmfEvents googleCloudDialogflowV2beta1TelephonyDtmfEvents = (GoogleCloudDialogflowV2beta1TelephonyDtmfEvents) o;
    return Objects.equals(this.dtmfEvents, googleCloudDialogflowV2beta1TelephonyDtmfEvents.dtmfEvents);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dtmfEvents);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDialogflowV2beta1TelephonyDtmfEvents {\n");
    sb.append("    dtmfEvents: ").append(toIndentedString(dtmfEvents)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("dtmfEvents");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDialogflowV2beta1TelephonyDtmfEvents
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDialogflowV2beta1TelephonyDtmfEvents.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDialogflowV2beta1TelephonyDtmfEvents is not found in the empty JSON string", GoogleCloudDialogflowV2beta1TelephonyDtmfEvents.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDialogflowV2beta1TelephonyDtmfEvents.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDialogflowV2beta1TelephonyDtmfEvents` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("dtmfEvents") != null && !jsonObj.get("dtmfEvents").isJsonNull() && !jsonObj.get("dtmfEvents").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `dtmfEvents` to be an array in the JSON string but got `%s`", jsonObj.get("dtmfEvents").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDialogflowV2beta1TelephonyDtmfEvents.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDialogflowV2beta1TelephonyDtmfEvents' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDialogflowV2beta1TelephonyDtmfEvents> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDialogflowV2beta1TelephonyDtmfEvents.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDialogflowV2beta1TelephonyDtmfEvents>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDialogflowV2beta1TelephonyDtmfEvents value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDialogflowV2beta1TelephonyDtmfEvents read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDialogflowV2beta1TelephonyDtmfEvents given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDialogflowV2beta1TelephonyDtmfEvents
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDialogflowV2beta1TelephonyDtmfEvents
   */
  public static GoogleCloudDialogflowV2beta1TelephonyDtmfEvents fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDialogflowV2beta1TelephonyDtmfEvents.class);
  }

  /**
   * Convert an instance of GoogleCloudDialogflowV2beta1TelephonyDtmfEvents to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

