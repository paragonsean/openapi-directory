/*
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1IntentMessageRbmCardContent;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Standalone Rich Business Messaging (RBM) rich card. Rich cards allow you to respond to users with more vivid content, e.g. with media and suggestions. You can group multiple rich cards into one using RbmCarouselCard but carousel cards will give you less control over the card layout.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:47:43.085785-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard {
  public static final String SERIALIZED_NAME_CARD_CONTENT = "cardContent";
  @SerializedName(SERIALIZED_NAME_CARD_CONTENT)
  private GoogleCloudDialogflowV2beta1IntentMessageRbmCardContent cardContent;

  /**
   * Required. Orientation of the card.
   */
  @JsonAdapter(CardOrientationEnum.Adapter.class)
  public enum CardOrientationEnum {
    CARD_ORIENTATION_UNSPECIFIED("CARD_ORIENTATION_UNSPECIFIED"),
    
    HORIZONTAL("HORIZONTAL"),
    
    VERTICAL("VERTICAL");

    private String value;

    CardOrientationEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static CardOrientationEnum fromValue(String value) {
      for (CardOrientationEnum b : CardOrientationEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<CardOrientationEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CardOrientationEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CardOrientationEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return CardOrientationEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      CardOrientationEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_CARD_ORIENTATION = "cardOrientation";
  @SerializedName(SERIALIZED_NAME_CARD_ORIENTATION)
  private CardOrientationEnum cardOrientation;

  /**
   * Required if orientation is horizontal. Image preview alignment for standalone cards with horizontal layout.
   */
  @JsonAdapter(ThumbnailImageAlignmentEnum.Adapter.class)
  public enum ThumbnailImageAlignmentEnum {
    THUMBNAIL_IMAGE_ALIGNMENT_UNSPECIFIED("THUMBNAIL_IMAGE_ALIGNMENT_UNSPECIFIED"),
    
    LEFT("LEFT"),
    
    RIGHT("RIGHT");

    private String value;

    ThumbnailImageAlignmentEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ThumbnailImageAlignmentEnum fromValue(String value) {
      for (ThumbnailImageAlignmentEnum b : ThumbnailImageAlignmentEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ThumbnailImageAlignmentEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ThumbnailImageAlignmentEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ThumbnailImageAlignmentEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ThumbnailImageAlignmentEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ThumbnailImageAlignmentEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_THUMBNAIL_IMAGE_ALIGNMENT = "thumbnailImageAlignment";
  @SerializedName(SERIALIZED_NAME_THUMBNAIL_IMAGE_ALIGNMENT)
  private ThumbnailImageAlignmentEnum thumbnailImageAlignment;

  public GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard() {
  }

  public GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard cardContent(GoogleCloudDialogflowV2beta1IntentMessageRbmCardContent cardContent) {
    this.cardContent = cardContent;
    return this;
  }

  /**
   * Get cardContent
   * @return cardContent
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowV2beta1IntentMessageRbmCardContent getCardContent() {
    return cardContent;
  }

  public void setCardContent(GoogleCloudDialogflowV2beta1IntentMessageRbmCardContent cardContent) {
    this.cardContent = cardContent;
  }


  public GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard cardOrientation(CardOrientationEnum cardOrientation) {
    this.cardOrientation = cardOrientation;
    return this;
  }

  /**
   * Required. Orientation of the card.
   * @return cardOrientation
   */
  @javax.annotation.Nullable
  public CardOrientationEnum getCardOrientation() {
    return cardOrientation;
  }

  public void setCardOrientation(CardOrientationEnum cardOrientation) {
    this.cardOrientation = cardOrientation;
  }


  public GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard thumbnailImageAlignment(ThumbnailImageAlignmentEnum thumbnailImageAlignment) {
    this.thumbnailImageAlignment = thumbnailImageAlignment;
    return this;
  }

  /**
   * Required if orientation is horizontal. Image preview alignment for standalone cards with horizontal layout.
   * @return thumbnailImageAlignment
   */
  @javax.annotation.Nullable
  public ThumbnailImageAlignmentEnum getThumbnailImageAlignment() {
    return thumbnailImageAlignment;
  }

  public void setThumbnailImageAlignment(ThumbnailImageAlignmentEnum thumbnailImageAlignment) {
    this.thumbnailImageAlignment = thumbnailImageAlignment;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard googleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard = (GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard) o;
    return Objects.equals(this.cardContent, googleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard.cardContent) &&
        Objects.equals(this.cardOrientation, googleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard.cardOrientation) &&
        Objects.equals(this.thumbnailImageAlignment, googleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard.thumbnailImageAlignment);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cardContent, cardOrientation, thumbnailImageAlignment);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard {\n");
    sb.append("    cardContent: ").append(toIndentedString(cardContent)).append("\n");
    sb.append("    cardOrientation: ").append(toIndentedString(cardOrientation)).append("\n");
    sb.append("    thumbnailImageAlignment: ").append(toIndentedString(thumbnailImageAlignment)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("cardContent");
    openapiFields.add("cardOrientation");
    openapiFields.add("thumbnailImageAlignment");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard is not found in the empty JSON string", GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `cardContent`
      if (jsonObj.get("cardContent") != null && !jsonObj.get("cardContent").isJsonNull()) {
        GoogleCloudDialogflowV2beta1IntentMessageRbmCardContent.validateJsonElement(jsonObj.get("cardContent"));
      }
      if ((jsonObj.get("cardOrientation") != null && !jsonObj.get("cardOrientation").isJsonNull()) && !jsonObj.get("cardOrientation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cardOrientation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cardOrientation").toString()));
      }
      // validate the optional field `cardOrientation`
      if (jsonObj.get("cardOrientation") != null && !jsonObj.get("cardOrientation").isJsonNull()) {
        CardOrientationEnum.validateJsonElement(jsonObj.get("cardOrientation"));
      }
      if ((jsonObj.get("thumbnailImageAlignment") != null && !jsonObj.get("thumbnailImageAlignment").isJsonNull()) && !jsonObj.get("thumbnailImageAlignment").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `thumbnailImageAlignment` to be a primitive type in the JSON string but got `%s`", jsonObj.get("thumbnailImageAlignment").toString()));
      }
      // validate the optional field `thumbnailImageAlignment`
      if (jsonObj.get("thumbnailImageAlignment") != null && !jsonObj.get("thumbnailImageAlignment").isJsonNull()) {
        ThumbnailImageAlignmentEnum.validateJsonElement(jsonObj.get("thumbnailImageAlignment"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard
   */
  public static GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard.class);
  }

  /**
   * Convert an instance of GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

