/*
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1AssistQueryParameters;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1AudioInput;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1EventInput;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1IntentInput;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1OutputAudioConfig;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1QueryParameters;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1SuggestionInput;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1TextInput;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The request message for Participants.AnalyzeContent.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:47:43.085785-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDialogflowV2beta1AnalyzeContentRequest {
  public static final String SERIALIZED_NAME_ASSIST_QUERY_PARAMS = "assistQueryParams";
  @SerializedName(SERIALIZED_NAME_ASSIST_QUERY_PARAMS)
  private GoogleCloudDialogflowV2beta1AssistQueryParameters assistQueryParams;

  public static final String SERIALIZED_NAME_AUDIO_INPUT = "audioInput";
  @SerializedName(SERIALIZED_NAME_AUDIO_INPUT)
  private GoogleCloudDialogflowV2beta1AudioInput audioInput;

  public static final String SERIALIZED_NAME_CX_CURRENT_PAGE = "cxCurrentPage";
  @SerializedName(SERIALIZED_NAME_CX_CURRENT_PAGE)
  private String cxCurrentPage;

  public static final String SERIALIZED_NAME_CX_PARAMETERS = "cxParameters";
  @SerializedName(SERIALIZED_NAME_CX_PARAMETERS)
  private Map<String, Object> cxParameters = new HashMap<>();

  public static final String SERIALIZED_NAME_EVENT_INPUT = "eventInput";
  @SerializedName(SERIALIZED_NAME_EVENT_INPUT)
  private GoogleCloudDialogflowV2beta1EventInput eventInput;

  public static final String SERIALIZED_NAME_INTENT_INPUT = "intentInput";
  @SerializedName(SERIALIZED_NAME_INTENT_INPUT)
  private GoogleCloudDialogflowV2beta1IntentInput intentInput;

  public static final String SERIALIZED_NAME_MESSAGE_SEND_TIME = "messageSendTime";
  @SerializedName(SERIALIZED_NAME_MESSAGE_SEND_TIME)
  private String messageSendTime;

  public static final String SERIALIZED_NAME_QUERY_PARAMS = "queryParams";
  @SerializedName(SERIALIZED_NAME_QUERY_PARAMS)
  private GoogleCloudDialogflowV2beta1QueryParameters queryParams;

  public static final String SERIALIZED_NAME_REPLY_AUDIO_CONFIG = "replyAudioConfig";
  @SerializedName(SERIALIZED_NAME_REPLY_AUDIO_CONFIG)
  private GoogleCloudDialogflowV2beta1OutputAudioConfig replyAudioConfig;

  public static final String SERIALIZED_NAME_REQUEST_ID = "requestId";
  @SerializedName(SERIALIZED_NAME_REQUEST_ID)
  private String requestId;

  public static final String SERIALIZED_NAME_SUGGESTION_INPUT = "suggestionInput";
  @SerializedName(SERIALIZED_NAME_SUGGESTION_INPUT)
  private GoogleCloudDialogflowV2beta1SuggestionInput suggestionInput;

  public static final String SERIALIZED_NAME_TEXT_INPUT = "textInput";
  @SerializedName(SERIALIZED_NAME_TEXT_INPUT)
  private GoogleCloudDialogflowV2beta1TextInput textInput;

  public GoogleCloudDialogflowV2beta1AnalyzeContentRequest() {
  }

  public GoogleCloudDialogflowV2beta1AnalyzeContentRequest assistQueryParams(GoogleCloudDialogflowV2beta1AssistQueryParameters assistQueryParams) {
    this.assistQueryParams = assistQueryParams;
    return this;
  }

  /**
   * Get assistQueryParams
   * @return assistQueryParams
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowV2beta1AssistQueryParameters getAssistQueryParams() {
    return assistQueryParams;
  }

  public void setAssistQueryParams(GoogleCloudDialogflowV2beta1AssistQueryParameters assistQueryParams) {
    this.assistQueryParams = assistQueryParams;
  }


  public GoogleCloudDialogflowV2beta1AnalyzeContentRequest audioInput(GoogleCloudDialogflowV2beta1AudioInput audioInput) {
    this.audioInput = audioInput;
    return this;
  }

  /**
   * Get audioInput
   * @return audioInput
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowV2beta1AudioInput getAudioInput() {
    return audioInput;
  }

  public void setAudioInput(GoogleCloudDialogflowV2beta1AudioInput audioInput) {
    this.audioInput = audioInput;
  }


  public GoogleCloudDialogflowV2beta1AnalyzeContentRequest cxCurrentPage(String cxCurrentPage) {
    this.cxCurrentPage = cxCurrentPage;
    return this;
  }

  /**
   * The unique identifier of the CX page to override the &#x60;current_page&#x60; in the session. Format: &#x60;projects//locations//agents//flows//pages/&#x60;. If &#x60;cx_current_page&#x60; is specified, the previous state of the session will be ignored by Dialogflow CX, including the previous page and the previous session parameters. In most cases, &#x60;cx_current_page&#x60; and &#x60;cx_parameters&#x60; should be configured together to direct a session to a specific state. Note: this field should only be used if you are connecting to a Dialogflow CX agent.
   * @return cxCurrentPage
   */
  @javax.annotation.Nullable
  public String getCxCurrentPage() {
    return cxCurrentPage;
  }

  public void setCxCurrentPage(String cxCurrentPage) {
    this.cxCurrentPage = cxCurrentPage;
  }


  public GoogleCloudDialogflowV2beta1AnalyzeContentRequest cxParameters(Map<String, Object> cxParameters) {
    this.cxParameters = cxParameters;
    return this;
  }

  public GoogleCloudDialogflowV2beta1AnalyzeContentRequest putCxParametersItem(String key, Object cxParametersItem) {
    if (this.cxParameters == null) {
      this.cxParameters = new HashMap<>();
    }
    this.cxParameters.put(key, cxParametersItem);
    return this;
  }

  /**
   * Additional parameters to be put into Dialogflow CX session parameters. To remove a parameter from the session, clients should explicitly set the parameter value to null. Note: this field should only be used if you are connecting to a Dialogflow CX agent.
   * @return cxParameters
   */
  @javax.annotation.Nullable
  public Map<String, Object> getCxParameters() {
    return cxParameters;
  }

  public void setCxParameters(Map<String, Object> cxParameters) {
    this.cxParameters = cxParameters;
  }


  public GoogleCloudDialogflowV2beta1AnalyzeContentRequest eventInput(GoogleCloudDialogflowV2beta1EventInput eventInput) {
    this.eventInput = eventInput;
    return this;
  }

  /**
   * Get eventInput
   * @return eventInput
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowV2beta1EventInput getEventInput() {
    return eventInput;
  }

  public void setEventInput(GoogleCloudDialogflowV2beta1EventInput eventInput) {
    this.eventInput = eventInput;
  }


  public GoogleCloudDialogflowV2beta1AnalyzeContentRequest intentInput(GoogleCloudDialogflowV2beta1IntentInput intentInput) {
    this.intentInput = intentInput;
    return this;
  }

  /**
   * Get intentInput
   * @return intentInput
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowV2beta1IntentInput getIntentInput() {
    return intentInput;
  }

  public void setIntentInput(GoogleCloudDialogflowV2beta1IntentInput intentInput) {
    this.intentInput = intentInput;
  }


  public GoogleCloudDialogflowV2beta1AnalyzeContentRequest messageSendTime(String messageSendTime) {
    this.messageSendTime = messageSendTime;
    return this;
  }

  /**
   * Optional. The send time of the message from end user or human agent&#39;s perspective. It is used for identifying the same message under one participant. Given two messages under the same participant: * If send time are different regardless of whether the content of the messages are exactly the same, the conversation will regard them as two distinct messages sent by the participant. * If send time is the same regardless of whether the content of the messages are exactly the same, the conversation will regard them as same message, and ignore the message received later. If the value is not provided, a new request will always be regarded as a new message without any de-duplication.
   * @return messageSendTime
   */
  @javax.annotation.Nullable
  public String getMessageSendTime() {
    return messageSendTime;
  }

  public void setMessageSendTime(String messageSendTime) {
    this.messageSendTime = messageSendTime;
  }


  public GoogleCloudDialogflowV2beta1AnalyzeContentRequest queryParams(GoogleCloudDialogflowV2beta1QueryParameters queryParams) {
    this.queryParams = queryParams;
    return this;
  }

  /**
   * Get queryParams
   * @return queryParams
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowV2beta1QueryParameters getQueryParams() {
    return queryParams;
  }

  public void setQueryParams(GoogleCloudDialogflowV2beta1QueryParameters queryParams) {
    this.queryParams = queryParams;
  }


  public GoogleCloudDialogflowV2beta1AnalyzeContentRequest replyAudioConfig(GoogleCloudDialogflowV2beta1OutputAudioConfig replyAudioConfig) {
    this.replyAudioConfig = replyAudioConfig;
    return this;
  }

  /**
   * Get replyAudioConfig
   * @return replyAudioConfig
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowV2beta1OutputAudioConfig getReplyAudioConfig() {
    return replyAudioConfig;
  }

  public void setReplyAudioConfig(GoogleCloudDialogflowV2beta1OutputAudioConfig replyAudioConfig) {
    this.replyAudioConfig = replyAudioConfig;
  }


  public GoogleCloudDialogflowV2beta1AnalyzeContentRequest requestId(String requestId) {
    this.requestId = requestId;
    return this;
  }

  /**
   * A unique identifier for this request. Restricted to 36 ASCII characters. A random UUID is recommended. This request is only idempotent if a &#x60;request_id&#x60; is provided.
   * @return requestId
   */
  @javax.annotation.Nullable
  public String getRequestId() {
    return requestId;
  }

  public void setRequestId(String requestId) {
    this.requestId = requestId;
  }


  public GoogleCloudDialogflowV2beta1AnalyzeContentRequest suggestionInput(GoogleCloudDialogflowV2beta1SuggestionInput suggestionInput) {
    this.suggestionInput = suggestionInput;
    return this;
  }

  /**
   * Get suggestionInput
   * @return suggestionInput
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowV2beta1SuggestionInput getSuggestionInput() {
    return suggestionInput;
  }

  public void setSuggestionInput(GoogleCloudDialogflowV2beta1SuggestionInput suggestionInput) {
    this.suggestionInput = suggestionInput;
  }


  public GoogleCloudDialogflowV2beta1AnalyzeContentRequest textInput(GoogleCloudDialogflowV2beta1TextInput textInput) {
    this.textInput = textInput;
    return this;
  }

  /**
   * Get textInput
   * @return textInput
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowV2beta1TextInput getTextInput() {
    return textInput;
  }

  public void setTextInput(GoogleCloudDialogflowV2beta1TextInput textInput) {
    this.textInput = textInput;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDialogflowV2beta1AnalyzeContentRequest googleCloudDialogflowV2beta1AnalyzeContentRequest = (GoogleCloudDialogflowV2beta1AnalyzeContentRequest) o;
    return Objects.equals(this.assistQueryParams, googleCloudDialogflowV2beta1AnalyzeContentRequest.assistQueryParams) &&
        Objects.equals(this.audioInput, googleCloudDialogflowV2beta1AnalyzeContentRequest.audioInput) &&
        Objects.equals(this.cxCurrentPage, googleCloudDialogflowV2beta1AnalyzeContentRequest.cxCurrentPage) &&
        Objects.equals(this.cxParameters, googleCloudDialogflowV2beta1AnalyzeContentRequest.cxParameters) &&
        Objects.equals(this.eventInput, googleCloudDialogflowV2beta1AnalyzeContentRequest.eventInput) &&
        Objects.equals(this.intentInput, googleCloudDialogflowV2beta1AnalyzeContentRequest.intentInput) &&
        Objects.equals(this.messageSendTime, googleCloudDialogflowV2beta1AnalyzeContentRequest.messageSendTime) &&
        Objects.equals(this.queryParams, googleCloudDialogflowV2beta1AnalyzeContentRequest.queryParams) &&
        Objects.equals(this.replyAudioConfig, googleCloudDialogflowV2beta1AnalyzeContentRequest.replyAudioConfig) &&
        Objects.equals(this.requestId, googleCloudDialogflowV2beta1AnalyzeContentRequest.requestId) &&
        Objects.equals(this.suggestionInput, googleCloudDialogflowV2beta1AnalyzeContentRequest.suggestionInput) &&
        Objects.equals(this.textInput, googleCloudDialogflowV2beta1AnalyzeContentRequest.textInput);
  }

  @Override
  public int hashCode() {
    return Objects.hash(assistQueryParams, audioInput, cxCurrentPage, cxParameters, eventInput, intentInput, messageSendTime, queryParams, replyAudioConfig, requestId, suggestionInput, textInput);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDialogflowV2beta1AnalyzeContentRequest {\n");
    sb.append("    assistQueryParams: ").append(toIndentedString(assistQueryParams)).append("\n");
    sb.append("    audioInput: ").append(toIndentedString(audioInput)).append("\n");
    sb.append("    cxCurrentPage: ").append(toIndentedString(cxCurrentPage)).append("\n");
    sb.append("    cxParameters: ").append(toIndentedString(cxParameters)).append("\n");
    sb.append("    eventInput: ").append(toIndentedString(eventInput)).append("\n");
    sb.append("    intentInput: ").append(toIndentedString(intentInput)).append("\n");
    sb.append("    messageSendTime: ").append(toIndentedString(messageSendTime)).append("\n");
    sb.append("    queryParams: ").append(toIndentedString(queryParams)).append("\n");
    sb.append("    replyAudioConfig: ").append(toIndentedString(replyAudioConfig)).append("\n");
    sb.append("    requestId: ").append(toIndentedString(requestId)).append("\n");
    sb.append("    suggestionInput: ").append(toIndentedString(suggestionInput)).append("\n");
    sb.append("    textInput: ").append(toIndentedString(textInput)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("assistQueryParams");
    openapiFields.add("audioInput");
    openapiFields.add("cxCurrentPage");
    openapiFields.add("cxParameters");
    openapiFields.add("eventInput");
    openapiFields.add("intentInput");
    openapiFields.add("messageSendTime");
    openapiFields.add("queryParams");
    openapiFields.add("replyAudioConfig");
    openapiFields.add("requestId");
    openapiFields.add("suggestionInput");
    openapiFields.add("textInput");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDialogflowV2beta1AnalyzeContentRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDialogflowV2beta1AnalyzeContentRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDialogflowV2beta1AnalyzeContentRequest is not found in the empty JSON string", GoogleCloudDialogflowV2beta1AnalyzeContentRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDialogflowV2beta1AnalyzeContentRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDialogflowV2beta1AnalyzeContentRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `assistQueryParams`
      if (jsonObj.get("assistQueryParams") != null && !jsonObj.get("assistQueryParams").isJsonNull()) {
        GoogleCloudDialogflowV2beta1AssistQueryParameters.validateJsonElement(jsonObj.get("assistQueryParams"));
      }
      // validate the optional field `audioInput`
      if (jsonObj.get("audioInput") != null && !jsonObj.get("audioInput").isJsonNull()) {
        GoogleCloudDialogflowV2beta1AudioInput.validateJsonElement(jsonObj.get("audioInput"));
      }
      if ((jsonObj.get("cxCurrentPage") != null && !jsonObj.get("cxCurrentPage").isJsonNull()) && !jsonObj.get("cxCurrentPage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cxCurrentPage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cxCurrentPage").toString()));
      }
      // validate the optional field `eventInput`
      if (jsonObj.get("eventInput") != null && !jsonObj.get("eventInput").isJsonNull()) {
        GoogleCloudDialogflowV2beta1EventInput.validateJsonElement(jsonObj.get("eventInput"));
      }
      // validate the optional field `intentInput`
      if (jsonObj.get("intentInput") != null && !jsonObj.get("intentInput").isJsonNull()) {
        GoogleCloudDialogflowV2beta1IntentInput.validateJsonElement(jsonObj.get("intentInput"));
      }
      if ((jsonObj.get("messageSendTime") != null && !jsonObj.get("messageSendTime").isJsonNull()) && !jsonObj.get("messageSendTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `messageSendTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("messageSendTime").toString()));
      }
      // validate the optional field `queryParams`
      if (jsonObj.get("queryParams") != null && !jsonObj.get("queryParams").isJsonNull()) {
        GoogleCloudDialogflowV2beta1QueryParameters.validateJsonElement(jsonObj.get("queryParams"));
      }
      // validate the optional field `replyAudioConfig`
      if (jsonObj.get("replyAudioConfig") != null && !jsonObj.get("replyAudioConfig").isJsonNull()) {
        GoogleCloudDialogflowV2beta1OutputAudioConfig.validateJsonElement(jsonObj.get("replyAudioConfig"));
      }
      if ((jsonObj.get("requestId") != null && !jsonObj.get("requestId").isJsonNull()) && !jsonObj.get("requestId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `requestId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("requestId").toString()));
      }
      // validate the optional field `suggestionInput`
      if (jsonObj.get("suggestionInput") != null && !jsonObj.get("suggestionInput").isJsonNull()) {
        GoogleCloudDialogflowV2beta1SuggestionInput.validateJsonElement(jsonObj.get("suggestionInput"));
      }
      // validate the optional field `textInput`
      if (jsonObj.get("textInput") != null && !jsonObj.get("textInput").isJsonNull()) {
        GoogleCloudDialogflowV2beta1TextInput.validateJsonElement(jsonObj.get("textInput"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDialogflowV2beta1AnalyzeContentRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDialogflowV2beta1AnalyzeContentRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDialogflowV2beta1AnalyzeContentRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDialogflowV2beta1AnalyzeContentRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDialogflowV2beta1AnalyzeContentRequest>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDialogflowV2beta1AnalyzeContentRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDialogflowV2beta1AnalyzeContentRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDialogflowV2beta1AnalyzeContentRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDialogflowV2beta1AnalyzeContentRequest
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDialogflowV2beta1AnalyzeContentRequest
   */
  public static GoogleCloudDialogflowV2beta1AnalyzeContentRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDialogflowV2beta1AnalyzeContentRequest.class);
  }

  /**
   * Convert an instance of GoogleCloudDialogflowV2beta1AnalyzeContentRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

