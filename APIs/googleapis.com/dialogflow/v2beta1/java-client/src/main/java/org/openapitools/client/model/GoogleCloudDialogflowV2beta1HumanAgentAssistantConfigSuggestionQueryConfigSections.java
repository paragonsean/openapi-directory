/*
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Custom sections to return when requesting a summary of a conversation. This is only supported when &#x60;baseline_model_version&#x60; &#x3D;&#x3D; &#39;2.0&#39;. Supported features: CONVERSATION_SUMMARIZATION, CONVERSATION_SUMMARIZATION_VOICE.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:47:43.085785-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfigSections {
  /**
   * Gets or Sets sectionTypes
   */
  @JsonAdapter(SectionTypesEnum.Adapter.class)
  public enum SectionTypesEnum {
    SECTION_TYPE_UNSPECIFIED("SECTION_TYPE_UNSPECIFIED"),
    
    SITUATION("SITUATION"),
    
    ACTION("ACTION"),
    
    RESOLUTION("RESOLUTION"),
    
    REASON_FOR_CANCELLATION("REASON_FOR_CANCELLATION"),
    
    CUSTOMER_SATISFACTION("CUSTOMER_SATISFACTION"),
    
    ENTITIES("ENTITIES");

    private String value;

    SectionTypesEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static SectionTypesEnum fromValue(String value) {
      for (SectionTypesEnum b : SectionTypesEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<SectionTypesEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SectionTypesEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SectionTypesEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return SectionTypesEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      SectionTypesEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_SECTION_TYPES = "sectionTypes";
  @SerializedName(SERIALIZED_NAME_SECTION_TYPES)
  private List<SectionTypesEnum> sectionTypes = new ArrayList<>();

  public GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfigSections() {
  }

  public GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfigSections sectionTypes(List<SectionTypesEnum> sectionTypes) {
    this.sectionTypes = sectionTypes;
    return this;
  }

  public GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfigSections addSectionTypesItem(SectionTypesEnum sectionTypesItem) {
    if (this.sectionTypes == null) {
      this.sectionTypes = new ArrayList<>();
    }
    this.sectionTypes.add(sectionTypesItem);
    return this;
  }

  /**
   * The selected sections chosen to return when requesting a summary of a conversation. A duplicate selected section will be treated as a single selected section. If section types are not provided, the default will be {SITUATION, ACTION, RESULT}.
   * @return sectionTypes
   */
  @javax.annotation.Nullable
  public List<SectionTypesEnum> getSectionTypes() {
    return sectionTypes;
  }

  public void setSectionTypes(List<SectionTypesEnum> sectionTypes) {
    this.sectionTypes = sectionTypes;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfigSections googleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfigSections = (GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfigSections) o;
    return Objects.equals(this.sectionTypes, googleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfigSections.sectionTypes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sectionTypes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfigSections {\n");
    sb.append("    sectionTypes: ").append(toIndentedString(sectionTypes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("sectionTypes");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfigSections
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfigSections.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfigSections is not found in the empty JSON string", GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfigSections.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfigSections.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfigSections` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("sectionTypes") != null && !jsonObj.get("sectionTypes").isJsonNull() && !jsonObj.get("sectionTypes").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `sectionTypes` to be an array in the JSON string but got `%s`", jsonObj.get("sectionTypes").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfigSections.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfigSections' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfigSections> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfigSections.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfigSections>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfigSections value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfigSections read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfigSections given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfigSections
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfigSections
   */
  public static GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfigSections fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfigSections.class);
  }

  /**
   * Convert an instance of GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfigSections to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

