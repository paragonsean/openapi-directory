/*
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigConversationModelConfig;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigConversationProcessConfig;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfig;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionTriggerSettings;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1SuggestionFeature;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Config for suggestion features.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:47:43.085785-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig {
  public static final String SERIALIZED_NAME_CONVERSATION_MODEL_CONFIG = "conversationModelConfig";
  @SerializedName(SERIALIZED_NAME_CONVERSATION_MODEL_CONFIG)
  private GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigConversationModelConfig conversationModelConfig;

  public static final String SERIALIZED_NAME_CONVERSATION_PROCESS_CONFIG = "conversationProcessConfig";
  @SerializedName(SERIALIZED_NAME_CONVERSATION_PROCESS_CONFIG)
  private GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigConversationProcessConfig conversationProcessConfig;

  public static final String SERIALIZED_NAME_DISABLE_AGENT_QUERY_LOGGING = "disableAgentQueryLogging";
  @SerializedName(SERIALIZED_NAME_DISABLE_AGENT_QUERY_LOGGING)
  private Boolean disableAgentQueryLogging;

  public static final String SERIALIZED_NAME_ENABLE_CONVERSATION_AUGMENTED_QUERY = "enableConversationAugmentedQuery";
  @SerializedName(SERIALIZED_NAME_ENABLE_CONVERSATION_AUGMENTED_QUERY)
  private Boolean enableConversationAugmentedQuery;

  public static final String SERIALIZED_NAME_ENABLE_EVENT_BASED_SUGGESTION = "enableEventBasedSuggestion";
  @SerializedName(SERIALIZED_NAME_ENABLE_EVENT_BASED_SUGGESTION)
  private Boolean enableEventBasedSuggestion;

  public static final String SERIALIZED_NAME_QUERY_CONFIG = "queryConfig";
  @SerializedName(SERIALIZED_NAME_QUERY_CONFIG)
  private GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfig queryConfig;

  public static final String SERIALIZED_NAME_SUGGESTION_FEATURE = "suggestionFeature";
  @SerializedName(SERIALIZED_NAME_SUGGESTION_FEATURE)
  private GoogleCloudDialogflowV2beta1SuggestionFeature suggestionFeature;

  public static final String SERIALIZED_NAME_SUGGESTION_TRIGGER_SETTINGS = "suggestionTriggerSettings";
  @SerializedName(SERIALIZED_NAME_SUGGESTION_TRIGGER_SETTINGS)
  private GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionTriggerSettings suggestionTriggerSettings;

  public GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig() {
  }

  public GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig conversationModelConfig(GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigConversationModelConfig conversationModelConfig) {
    this.conversationModelConfig = conversationModelConfig;
    return this;
  }

  /**
   * Get conversationModelConfig
   * @return conversationModelConfig
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigConversationModelConfig getConversationModelConfig() {
    return conversationModelConfig;
  }

  public void setConversationModelConfig(GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigConversationModelConfig conversationModelConfig) {
    this.conversationModelConfig = conversationModelConfig;
  }


  public GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig conversationProcessConfig(GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigConversationProcessConfig conversationProcessConfig) {
    this.conversationProcessConfig = conversationProcessConfig;
    return this;
  }

  /**
   * Get conversationProcessConfig
   * @return conversationProcessConfig
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigConversationProcessConfig getConversationProcessConfig() {
    return conversationProcessConfig;
  }

  public void setConversationProcessConfig(GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigConversationProcessConfig conversationProcessConfig) {
    this.conversationProcessConfig = conversationProcessConfig;
  }


  public GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig disableAgentQueryLogging(Boolean disableAgentQueryLogging) {
    this.disableAgentQueryLogging = disableAgentQueryLogging;
    return this;
  }

  /**
   * Optional. Disable the logging of search queries sent by human agents. It can prevent those queries from being stored at answer records. Supported features: KNOWLEDGE_SEARCH.
   * @return disableAgentQueryLogging
   */
  @javax.annotation.Nullable
  public Boolean getDisableAgentQueryLogging() {
    return disableAgentQueryLogging;
  }

  public void setDisableAgentQueryLogging(Boolean disableAgentQueryLogging) {
    this.disableAgentQueryLogging = disableAgentQueryLogging;
  }


  public GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig enableConversationAugmentedQuery(Boolean enableConversationAugmentedQuery) {
    this.enableConversationAugmentedQuery = enableConversationAugmentedQuery;
    return this;
  }

  /**
   * Optional. Enable including conversation context during query answer generation. Supported features: KNOWLEDGE_SEARCH.
   * @return enableConversationAugmentedQuery
   */
  @javax.annotation.Nullable
  public Boolean getEnableConversationAugmentedQuery() {
    return enableConversationAugmentedQuery;
  }

  public void setEnableConversationAugmentedQuery(Boolean enableConversationAugmentedQuery) {
    this.enableConversationAugmentedQuery = enableConversationAugmentedQuery;
  }


  public GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig enableEventBasedSuggestion(Boolean enableEventBasedSuggestion) {
    this.enableEventBasedSuggestion = enableEventBasedSuggestion;
    return this;
  }

  /**
   * Automatically iterates all participants and tries to compile suggestions. Supported features: ARTICLE_SUGGESTION, FAQ, DIALOGFLOW_ASSIST, ENTITY_EXTRACTION, KNOWLEDGE_ASSIST.
   * @return enableEventBasedSuggestion
   */
  @javax.annotation.Nullable
  public Boolean getEnableEventBasedSuggestion() {
    return enableEventBasedSuggestion;
  }

  public void setEnableEventBasedSuggestion(Boolean enableEventBasedSuggestion) {
    this.enableEventBasedSuggestion = enableEventBasedSuggestion;
  }


  public GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig queryConfig(GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfig queryConfig) {
    this.queryConfig = queryConfig;
    return this;
  }

  /**
   * Get queryConfig
   * @return queryConfig
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfig getQueryConfig() {
    return queryConfig;
  }

  public void setQueryConfig(GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfig queryConfig) {
    this.queryConfig = queryConfig;
  }


  public GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig suggestionFeature(GoogleCloudDialogflowV2beta1SuggestionFeature suggestionFeature) {
    this.suggestionFeature = suggestionFeature;
    return this;
  }

  /**
   * Get suggestionFeature
   * @return suggestionFeature
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowV2beta1SuggestionFeature getSuggestionFeature() {
    return suggestionFeature;
  }

  public void setSuggestionFeature(GoogleCloudDialogflowV2beta1SuggestionFeature suggestionFeature) {
    this.suggestionFeature = suggestionFeature;
  }


  public GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig suggestionTriggerSettings(GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionTriggerSettings suggestionTriggerSettings) {
    this.suggestionTriggerSettings = suggestionTriggerSettings;
    return this;
  }

  /**
   * Get suggestionTriggerSettings
   * @return suggestionTriggerSettings
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionTriggerSettings getSuggestionTriggerSettings() {
    return suggestionTriggerSettings;
  }

  public void setSuggestionTriggerSettings(GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionTriggerSettings suggestionTriggerSettings) {
    this.suggestionTriggerSettings = suggestionTriggerSettings;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig googleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig = (GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig) o;
    return Objects.equals(this.conversationModelConfig, googleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig.conversationModelConfig) &&
        Objects.equals(this.conversationProcessConfig, googleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig.conversationProcessConfig) &&
        Objects.equals(this.disableAgentQueryLogging, googleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig.disableAgentQueryLogging) &&
        Objects.equals(this.enableConversationAugmentedQuery, googleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig.enableConversationAugmentedQuery) &&
        Objects.equals(this.enableEventBasedSuggestion, googleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig.enableEventBasedSuggestion) &&
        Objects.equals(this.queryConfig, googleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig.queryConfig) &&
        Objects.equals(this.suggestionFeature, googleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig.suggestionFeature) &&
        Objects.equals(this.suggestionTriggerSettings, googleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig.suggestionTriggerSettings);
  }

  @Override
  public int hashCode() {
    return Objects.hash(conversationModelConfig, conversationProcessConfig, disableAgentQueryLogging, enableConversationAugmentedQuery, enableEventBasedSuggestion, queryConfig, suggestionFeature, suggestionTriggerSettings);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig {\n");
    sb.append("    conversationModelConfig: ").append(toIndentedString(conversationModelConfig)).append("\n");
    sb.append("    conversationProcessConfig: ").append(toIndentedString(conversationProcessConfig)).append("\n");
    sb.append("    disableAgentQueryLogging: ").append(toIndentedString(disableAgentQueryLogging)).append("\n");
    sb.append("    enableConversationAugmentedQuery: ").append(toIndentedString(enableConversationAugmentedQuery)).append("\n");
    sb.append("    enableEventBasedSuggestion: ").append(toIndentedString(enableEventBasedSuggestion)).append("\n");
    sb.append("    queryConfig: ").append(toIndentedString(queryConfig)).append("\n");
    sb.append("    suggestionFeature: ").append(toIndentedString(suggestionFeature)).append("\n");
    sb.append("    suggestionTriggerSettings: ").append(toIndentedString(suggestionTriggerSettings)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("conversationModelConfig");
    openapiFields.add("conversationProcessConfig");
    openapiFields.add("disableAgentQueryLogging");
    openapiFields.add("enableConversationAugmentedQuery");
    openapiFields.add("enableEventBasedSuggestion");
    openapiFields.add("queryConfig");
    openapiFields.add("suggestionFeature");
    openapiFields.add("suggestionTriggerSettings");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig is not found in the empty JSON string", GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `conversationModelConfig`
      if (jsonObj.get("conversationModelConfig") != null && !jsonObj.get("conversationModelConfig").isJsonNull()) {
        GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigConversationModelConfig.validateJsonElement(jsonObj.get("conversationModelConfig"));
      }
      // validate the optional field `conversationProcessConfig`
      if (jsonObj.get("conversationProcessConfig") != null && !jsonObj.get("conversationProcessConfig").isJsonNull()) {
        GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigConversationProcessConfig.validateJsonElement(jsonObj.get("conversationProcessConfig"));
      }
      // validate the optional field `queryConfig`
      if (jsonObj.get("queryConfig") != null && !jsonObj.get("queryConfig").isJsonNull()) {
        GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfig.validateJsonElement(jsonObj.get("queryConfig"));
      }
      // validate the optional field `suggestionFeature`
      if (jsonObj.get("suggestionFeature") != null && !jsonObj.get("suggestionFeature").isJsonNull()) {
        GoogleCloudDialogflowV2beta1SuggestionFeature.validateJsonElement(jsonObj.get("suggestionFeature"));
      }
      // validate the optional field `suggestionTriggerSettings`
      if (jsonObj.get("suggestionTriggerSettings") != null && !jsonObj.get("suggestionTriggerSettings").isJsonNull()) {
        GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionTriggerSettings.validateJsonElement(jsonObj.get("suggestionTriggerSettings"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig
   */
  public static GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig.class);
  }

  /**
   * Convert an instance of GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

