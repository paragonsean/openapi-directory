/*
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1GcsSources;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1ImportDocumentTemplate;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Request message for Documents.ImportDocuments.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:47:43.085785-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDialogflowV2beta1ImportDocumentsRequest {
  public static final String SERIALIZED_NAME_DOCUMENT_TEMPLATE = "documentTemplate";
  @SerializedName(SERIALIZED_NAME_DOCUMENT_TEMPLATE)
  private GoogleCloudDialogflowV2beta1ImportDocumentTemplate documentTemplate;

  public static final String SERIALIZED_NAME_GCS_SOURCE = "gcsSource";
  @SerializedName(SERIALIZED_NAME_GCS_SOURCE)
  private GoogleCloudDialogflowV2beta1GcsSources gcsSource;

  public static final String SERIALIZED_NAME_IMPORT_GCS_CUSTOM_METADATA = "importGcsCustomMetadata";
  @SerializedName(SERIALIZED_NAME_IMPORT_GCS_CUSTOM_METADATA)
  private Boolean importGcsCustomMetadata;

  public GoogleCloudDialogflowV2beta1ImportDocumentsRequest() {
  }

  public GoogleCloudDialogflowV2beta1ImportDocumentsRequest documentTemplate(GoogleCloudDialogflowV2beta1ImportDocumentTemplate documentTemplate) {
    this.documentTemplate = documentTemplate;
    return this;
  }

  /**
   * Get documentTemplate
   * @return documentTemplate
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowV2beta1ImportDocumentTemplate getDocumentTemplate() {
    return documentTemplate;
  }

  public void setDocumentTemplate(GoogleCloudDialogflowV2beta1ImportDocumentTemplate documentTemplate) {
    this.documentTemplate = documentTemplate;
  }


  public GoogleCloudDialogflowV2beta1ImportDocumentsRequest gcsSource(GoogleCloudDialogflowV2beta1GcsSources gcsSource) {
    this.gcsSource = gcsSource;
    return this;
  }

  /**
   * Get gcsSource
   * @return gcsSource
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowV2beta1GcsSources getGcsSource() {
    return gcsSource;
  }

  public void setGcsSource(GoogleCloudDialogflowV2beta1GcsSources gcsSource) {
    this.gcsSource = gcsSource;
  }


  public GoogleCloudDialogflowV2beta1ImportDocumentsRequest importGcsCustomMetadata(Boolean importGcsCustomMetadata) {
    this.importGcsCustomMetadata = importGcsCustomMetadata;
    return this;
  }

  /**
   * Whether to import custom metadata from Google Cloud Storage. Only valid when the document source is Google Cloud Storage URI.
   * @return importGcsCustomMetadata
   */
  @javax.annotation.Nullable
  public Boolean getImportGcsCustomMetadata() {
    return importGcsCustomMetadata;
  }

  public void setImportGcsCustomMetadata(Boolean importGcsCustomMetadata) {
    this.importGcsCustomMetadata = importGcsCustomMetadata;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDialogflowV2beta1ImportDocumentsRequest googleCloudDialogflowV2beta1ImportDocumentsRequest = (GoogleCloudDialogflowV2beta1ImportDocumentsRequest) o;
    return Objects.equals(this.documentTemplate, googleCloudDialogflowV2beta1ImportDocumentsRequest.documentTemplate) &&
        Objects.equals(this.gcsSource, googleCloudDialogflowV2beta1ImportDocumentsRequest.gcsSource) &&
        Objects.equals(this.importGcsCustomMetadata, googleCloudDialogflowV2beta1ImportDocumentsRequest.importGcsCustomMetadata);
  }

  @Override
  public int hashCode() {
    return Objects.hash(documentTemplate, gcsSource, importGcsCustomMetadata);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDialogflowV2beta1ImportDocumentsRequest {\n");
    sb.append("    documentTemplate: ").append(toIndentedString(documentTemplate)).append("\n");
    sb.append("    gcsSource: ").append(toIndentedString(gcsSource)).append("\n");
    sb.append("    importGcsCustomMetadata: ").append(toIndentedString(importGcsCustomMetadata)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("documentTemplate");
    openapiFields.add("gcsSource");
    openapiFields.add("importGcsCustomMetadata");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDialogflowV2beta1ImportDocumentsRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDialogflowV2beta1ImportDocumentsRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDialogflowV2beta1ImportDocumentsRequest is not found in the empty JSON string", GoogleCloudDialogflowV2beta1ImportDocumentsRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDialogflowV2beta1ImportDocumentsRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDialogflowV2beta1ImportDocumentsRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `documentTemplate`
      if (jsonObj.get("documentTemplate") != null && !jsonObj.get("documentTemplate").isJsonNull()) {
        GoogleCloudDialogflowV2beta1ImportDocumentTemplate.validateJsonElement(jsonObj.get("documentTemplate"));
      }
      // validate the optional field `gcsSource`
      if (jsonObj.get("gcsSource") != null && !jsonObj.get("gcsSource").isJsonNull()) {
        GoogleCloudDialogflowV2beta1GcsSources.validateJsonElement(jsonObj.get("gcsSource"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDialogflowV2beta1ImportDocumentsRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDialogflowV2beta1ImportDocumentsRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDialogflowV2beta1ImportDocumentsRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDialogflowV2beta1ImportDocumentsRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDialogflowV2beta1ImportDocumentsRequest>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDialogflowV2beta1ImportDocumentsRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDialogflowV2beta1ImportDocumentsRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDialogflowV2beta1ImportDocumentsRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDialogflowV2beta1ImportDocumentsRequest
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDialogflowV2beta1ImportDocumentsRequest
   */
  public static GoogleCloudDialogflowV2beta1ImportDocumentsRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDialogflowV2beta1ImportDocumentsRequest.class);
  }

  /**
   * Convert an instance of GoogleCloudDialogflowV2beta1ImportDocumentsRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

