/*
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1Fulfillment;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1TextToSpeechSettings;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * You can create multiple versions of your agent and publish them to separate environments. When you edit an agent, you are editing the draft agent. At any point, you can save the draft agent as an agent version, which is an immutable snapshot of your agent. When you save the draft agent, it is published to the default environment. When you create agent versions, you can publish them to custom environments. You can create a variety of custom environments for: - testing - development - production - etc. For more information, see the [versions and environments guide](https://cloud.google.com/dialogflow/docs/agents-versions).
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:47:43.085785-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDialogflowV2beta1Environment {
  public static final String SERIALIZED_NAME_AGENT_VERSION = "agentVersion";
  @SerializedName(SERIALIZED_NAME_AGENT_VERSION)
  private String agentVersion;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_FULFILLMENT = "fulfillment";
  @SerializedName(SERIALIZED_NAME_FULFILLMENT)
  private GoogleCloudDialogflowV2beta1Fulfillment fulfillment;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  /**
   * Output only. The state of this environment. This field is read-only, i.e., it cannot be set by create and update methods.
   */
  @JsonAdapter(StateEnum.Adapter.class)
  public enum StateEnum {
    STATE_UNSPECIFIED("STATE_UNSPECIFIED"),
    
    STOPPED("STOPPED"),
    
    LOADING("LOADING"),
    
    RUNNING("RUNNING");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StateEnum fromValue(String value) {
      for (StateEnum b : StateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StateEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StateEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      StateEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private StateEnum state;

  public static final String SERIALIZED_NAME_TEXT_TO_SPEECH_SETTINGS = "textToSpeechSettings";
  @SerializedName(SERIALIZED_NAME_TEXT_TO_SPEECH_SETTINGS)
  private GoogleCloudDialogflowV2beta1TextToSpeechSettings textToSpeechSettings;

  public static final String SERIALIZED_NAME_UPDATE_TIME = "updateTime";
  @SerializedName(SERIALIZED_NAME_UPDATE_TIME)
  private String updateTime;

  public GoogleCloudDialogflowV2beta1Environment() {
  }

  public GoogleCloudDialogflowV2beta1Environment(
     String name, 
     StateEnum state, 
     String updateTime
  ) {
    this();
    this.name = name;
    this.state = state;
    this.updateTime = updateTime;
  }

  public GoogleCloudDialogflowV2beta1Environment agentVersion(String agentVersion) {
    this.agentVersion = agentVersion;
    return this;
  }

  /**
   * Optional. The agent version loaded into this environment. Supported formats: - &#x60;projects//agent/versions/&#x60; - &#x60;projects//locations//agent/versions/&#x60;
   * @return agentVersion
   */
  @javax.annotation.Nullable
  public String getAgentVersion() {
    return agentVersion;
  }

  public void setAgentVersion(String agentVersion) {
    this.agentVersion = agentVersion;
  }


  public GoogleCloudDialogflowV2beta1Environment description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Optional. The developer-provided description for this environment. The maximum length is 500 characters. If exceeded, the request is rejected.
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public GoogleCloudDialogflowV2beta1Environment fulfillment(GoogleCloudDialogflowV2beta1Fulfillment fulfillment) {
    this.fulfillment = fulfillment;
    return this;
  }

  /**
   * Get fulfillment
   * @return fulfillment
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowV2beta1Fulfillment getFulfillment() {
    return fulfillment;
  }

  public void setFulfillment(GoogleCloudDialogflowV2beta1Fulfillment fulfillment) {
    this.fulfillment = fulfillment;
  }


  /**
   * Output only. The unique identifier of this agent environment. Supported formats: - &#x60;projects//agent/environments/&#x60; - &#x60;projects//locations//agent/environments/&#x60;
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }



  /**
   * Output only. The state of this environment. This field is read-only, i.e., it cannot be set by create and update methods.
   * @return state
   */
  @javax.annotation.Nullable
  public StateEnum getState() {
    return state;
  }



  public GoogleCloudDialogflowV2beta1Environment textToSpeechSettings(GoogleCloudDialogflowV2beta1TextToSpeechSettings textToSpeechSettings) {
    this.textToSpeechSettings = textToSpeechSettings;
    return this;
  }

  /**
   * Get textToSpeechSettings
   * @return textToSpeechSettings
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowV2beta1TextToSpeechSettings getTextToSpeechSettings() {
    return textToSpeechSettings;
  }

  public void setTextToSpeechSettings(GoogleCloudDialogflowV2beta1TextToSpeechSettings textToSpeechSettings) {
    this.textToSpeechSettings = textToSpeechSettings;
  }


  /**
   * Output only. The last update time of this environment. This field is read-only, i.e., it cannot be set by create and update methods.
   * @return updateTime
   */
  @javax.annotation.Nullable
  public String getUpdateTime() {
    return updateTime;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDialogflowV2beta1Environment googleCloudDialogflowV2beta1Environment = (GoogleCloudDialogflowV2beta1Environment) o;
    return Objects.equals(this.agentVersion, googleCloudDialogflowV2beta1Environment.agentVersion) &&
        Objects.equals(this.description, googleCloudDialogflowV2beta1Environment.description) &&
        Objects.equals(this.fulfillment, googleCloudDialogflowV2beta1Environment.fulfillment) &&
        Objects.equals(this.name, googleCloudDialogflowV2beta1Environment.name) &&
        Objects.equals(this.state, googleCloudDialogflowV2beta1Environment.state) &&
        Objects.equals(this.textToSpeechSettings, googleCloudDialogflowV2beta1Environment.textToSpeechSettings) &&
        Objects.equals(this.updateTime, googleCloudDialogflowV2beta1Environment.updateTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(agentVersion, description, fulfillment, name, state, textToSpeechSettings, updateTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDialogflowV2beta1Environment {\n");
    sb.append("    agentVersion: ").append(toIndentedString(agentVersion)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    fulfillment: ").append(toIndentedString(fulfillment)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    textToSpeechSettings: ").append(toIndentedString(textToSpeechSettings)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("agentVersion");
    openapiFields.add("description");
    openapiFields.add("fulfillment");
    openapiFields.add("name");
    openapiFields.add("state");
    openapiFields.add("textToSpeechSettings");
    openapiFields.add("updateTime");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDialogflowV2beta1Environment
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDialogflowV2beta1Environment.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDialogflowV2beta1Environment is not found in the empty JSON string", GoogleCloudDialogflowV2beta1Environment.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDialogflowV2beta1Environment.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDialogflowV2beta1Environment` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("agentVersion") != null && !jsonObj.get("agentVersion").isJsonNull()) && !jsonObj.get("agentVersion").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `agentVersion` to be a primitive type in the JSON string but got `%s`", jsonObj.get("agentVersion").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      // validate the optional field `fulfillment`
      if (jsonObj.get("fulfillment") != null && !jsonObj.get("fulfillment").isJsonNull()) {
        GoogleCloudDialogflowV2beta1Fulfillment.validateJsonElement(jsonObj.get("fulfillment"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) && !jsonObj.get("state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state").toString()));
      }
      // validate the optional field `state`
      if (jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) {
        StateEnum.validateJsonElement(jsonObj.get("state"));
      }
      // validate the optional field `textToSpeechSettings`
      if (jsonObj.get("textToSpeechSettings") != null && !jsonObj.get("textToSpeechSettings").isJsonNull()) {
        GoogleCloudDialogflowV2beta1TextToSpeechSettings.validateJsonElement(jsonObj.get("textToSpeechSettings"));
      }
      if ((jsonObj.get("updateTime") != null && !jsonObj.get("updateTime").isJsonNull()) && !jsonObj.get("updateTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updateTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updateTime").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDialogflowV2beta1Environment.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDialogflowV2beta1Environment' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDialogflowV2beta1Environment> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDialogflowV2beta1Environment.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDialogflowV2beta1Environment>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDialogflowV2beta1Environment value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDialogflowV2beta1Environment read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDialogflowV2beta1Environment given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDialogflowV2beta1Environment
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDialogflowV2beta1Environment
   */
  public static GoogleCloudDialogflowV2beta1Environment fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDialogflowV2beta1Environment.class);
  }

  /**
   * Convert an instance of GoogleCloudDialogflowV2beta1Environment to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

