/*
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudDialogflowCxV3beta1AdvancedSettings;
import org.openapitools.client.model.GoogleCloudDialogflowCxV3beta1EventHandler;
import org.openapitools.client.model.GoogleCloudDialogflowCxV3beta1Form;
import org.openapitools.client.model.GoogleCloudDialogflowCxV3beta1Fulfillment;
import org.openapitools.client.model.GoogleCloudDialogflowCxV3beta1KnowledgeConnectorSettings;
import org.openapitools.client.model.GoogleCloudDialogflowCxV3beta1TransitionRoute;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A Dialogflow CX conversation (session) can be described and visualized as a state machine. The states of a CX session are represented by pages. For each flow, you define many pages, where your combined pages can handle a complete conversation on the topics the flow is designed for. At any given moment, exactly one page is the current page, the current page is considered active, and the flow associated with that page is considered active. Every flow has a special start page. When a flow initially becomes active, the start page page becomes the current page. For each conversational turn, the current page will either stay the same or transition to another page. You configure each page to collect information from the end-user that is relevant for the conversational state represented by the page. For more information, see the [Page guide](https://cloud.google.com/dialogflow/cx/docs/concept/page).
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:47:43.085785-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDialogflowCxV3beta1Page {
  public static final String SERIALIZED_NAME_ADVANCED_SETTINGS = "advancedSettings";
  @SerializedName(SERIALIZED_NAME_ADVANCED_SETTINGS)
  private GoogleCloudDialogflowCxV3beta1AdvancedSettings advancedSettings;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_ENTRY_FULFILLMENT = "entryFulfillment";
  @SerializedName(SERIALIZED_NAME_ENTRY_FULFILLMENT)
  private GoogleCloudDialogflowCxV3beta1Fulfillment entryFulfillment;

  public static final String SERIALIZED_NAME_EVENT_HANDLERS = "eventHandlers";
  @SerializedName(SERIALIZED_NAME_EVENT_HANDLERS)
  private List<GoogleCloudDialogflowCxV3beta1EventHandler> eventHandlers = new ArrayList<>();

  public static final String SERIALIZED_NAME_FORM = "form";
  @SerializedName(SERIALIZED_NAME_FORM)
  private GoogleCloudDialogflowCxV3beta1Form form;

  public static final String SERIALIZED_NAME_KNOWLEDGE_CONNECTOR_SETTINGS = "knowledgeConnectorSettings";
  @SerializedName(SERIALIZED_NAME_KNOWLEDGE_CONNECTOR_SETTINGS)
  private GoogleCloudDialogflowCxV3beta1KnowledgeConnectorSettings knowledgeConnectorSettings;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_TRANSITION_ROUTE_GROUPS = "transitionRouteGroups";
  @SerializedName(SERIALIZED_NAME_TRANSITION_ROUTE_GROUPS)
  private List<String> transitionRouteGroups = new ArrayList<>();

  public static final String SERIALIZED_NAME_TRANSITION_ROUTES = "transitionRoutes";
  @SerializedName(SERIALIZED_NAME_TRANSITION_ROUTES)
  private List<GoogleCloudDialogflowCxV3beta1TransitionRoute> transitionRoutes = new ArrayList<>();

  public GoogleCloudDialogflowCxV3beta1Page() {
  }

  public GoogleCloudDialogflowCxV3beta1Page advancedSettings(GoogleCloudDialogflowCxV3beta1AdvancedSettings advancedSettings) {
    this.advancedSettings = advancedSettings;
    return this;
  }

  /**
   * Get advancedSettings
   * @return advancedSettings
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowCxV3beta1AdvancedSettings getAdvancedSettings() {
    return advancedSettings;
  }

  public void setAdvancedSettings(GoogleCloudDialogflowCxV3beta1AdvancedSettings advancedSettings) {
    this.advancedSettings = advancedSettings;
  }


  public GoogleCloudDialogflowCxV3beta1Page description(String description) {
    this.description = description;
    return this;
  }

  /**
   * The description of the page. The maximum length is 500 characters.
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public GoogleCloudDialogflowCxV3beta1Page displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Required. The human-readable name of the page, unique within the flow.
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public GoogleCloudDialogflowCxV3beta1Page entryFulfillment(GoogleCloudDialogflowCxV3beta1Fulfillment entryFulfillment) {
    this.entryFulfillment = entryFulfillment;
    return this;
  }

  /**
   * Get entryFulfillment
   * @return entryFulfillment
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowCxV3beta1Fulfillment getEntryFulfillment() {
    return entryFulfillment;
  }

  public void setEntryFulfillment(GoogleCloudDialogflowCxV3beta1Fulfillment entryFulfillment) {
    this.entryFulfillment = entryFulfillment;
  }


  public GoogleCloudDialogflowCxV3beta1Page eventHandlers(List<GoogleCloudDialogflowCxV3beta1EventHandler> eventHandlers) {
    this.eventHandlers = eventHandlers;
    return this;
  }

  public GoogleCloudDialogflowCxV3beta1Page addEventHandlersItem(GoogleCloudDialogflowCxV3beta1EventHandler eventHandlersItem) {
    if (this.eventHandlers == null) {
      this.eventHandlers = new ArrayList<>();
    }
    this.eventHandlers.add(eventHandlersItem);
    return this;
  }

  /**
   * Handlers associated with the page to handle events such as webhook errors, no match or no input.
   * @return eventHandlers
   */
  @javax.annotation.Nullable
  public List<GoogleCloudDialogflowCxV3beta1EventHandler> getEventHandlers() {
    return eventHandlers;
  }

  public void setEventHandlers(List<GoogleCloudDialogflowCxV3beta1EventHandler> eventHandlers) {
    this.eventHandlers = eventHandlers;
  }


  public GoogleCloudDialogflowCxV3beta1Page form(GoogleCloudDialogflowCxV3beta1Form form) {
    this.form = form;
    return this;
  }

  /**
   * Get form
   * @return form
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowCxV3beta1Form getForm() {
    return form;
  }

  public void setForm(GoogleCloudDialogflowCxV3beta1Form form) {
    this.form = form;
  }


  public GoogleCloudDialogflowCxV3beta1Page knowledgeConnectorSettings(GoogleCloudDialogflowCxV3beta1KnowledgeConnectorSettings knowledgeConnectorSettings) {
    this.knowledgeConnectorSettings = knowledgeConnectorSettings;
    return this;
  }

  /**
   * Get knowledgeConnectorSettings
   * @return knowledgeConnectorSettings
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowCxV3beta1KnowledgeConnectorSettings getKnowledgeConnectorSettings() {
    return knowledgeConnectorSettings;
  }

  public void setKnowledgeConnectorSettings(GoogleCloudDialogflowCxV3beta1KnowledgeConnectorSettings knowledgeConnectorSettings) {
    this.knowledgeConnectorSettings = knowledgeConnectorSettings;
  }


  public GoogleCloudDialogflowCxV3beta1Page name(String name) {
    this.name = name;
    return this;
  }

  /**
   * The unique identifier of the page. Required for the Pages.UpdatePage method. Pages.CreatePage populates the name automatically. Format: &#x60;projects//locations//agents//flows//pages/&#x60;.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public GoogleCloudDialogflowCxV3beta1Page transitionRouteGroups(List<String> transitionRouteGroups) {
    this.transitionRouteGroups = transitionRouteGroups;
    return this;
  }

  public GoogleCloudDialogflowCxV3beta1Page addTransitionRouteGroupsItem(String transitionRouteGroupsItem) {
    if (this.transitionRouteGroups == null) {
      this.transitionRouteGroups = new ArrayList<>();
    }
    this.transitionRouteGroups.add(transitionRouteGroupsItem);
    return this;
  }

  /**
   * Ordered list of &#x60;TransitionRouteGroups&#x60; added to the page. Transition route groups must be unique within a page. If the page links both flow-level transition route groups and agent-level transition route groups, the flow-level ones will have higher priority and will be put before the agent-level ones. * If multiple transition routes within a page scope refer to the same intent, then the precedence order is: page&#39;s transition route -&gt; page&#39;s transition route group -&gt; flow&#39;s transition routes. * If multiple transition route groups within a page contain the same intent, then the first group in the ordered list takes precedence. Format:&#x60;projects//locations//agents//flows//transitionRouteGroups/&#x60; or &#x60;projects//locations//agents//transitionRouteGroups/&#x60; for agent-level groups.
   * @return transitionRouteGroups
   */
  @javax.annotation.Nullable
  public List<String> getTransitionRouteGroups() {
    return transitionRouteGroups;
  }

  public void setTransitionRouteGroups(List<String> transitionRouteGroups) {
    this.transitionRouteGroups = transitionRouteGroups;
  }


  public GoogleCloudDialogflowCxV3beta1Page transitionRoutes(List<GoogleCloudDialogflowCxV3beta1TransitionRoute> transitionRoutes) {
    this.transitionRoutes = transitionRoutes;
    return this;
  }

  public GoogleCloudDialogflowCxV3beta1Page addTransitionRoutesItem(GoogleCloudDialogflowCxV3beta1TransitionRoute transitionRoutesItem) {
    if (this.transitionRoutes == null) {
      this.transitionRoutes = new ArrayList<>();
    }
    this.transitionRoutes.add(transitionRoutesItem);
    return this;
  }

  /**
   * A list of transitions for the transition rules of this page. They route the conversation to another page in the same flow, or another flow. When we are in a certain page, the TransitionRoutes are evalauted in the following order: * TransitionRoutes defined in the page with intent specified. * TransitionRoutes defined in the transition route groups with intent specified. * TransitionRoutes defined in flow with intent specified. * TransitionRoutes defined in the transition route groups with intent specified. * TransitionRoutes defined in the page with only condition specified. * TransitionRoutes defined in the transition route groups with only condition specified.
   * @return transitionRoutes
   */
  @javax.annotation.Nullable
  public List<GoogleCloudDialogflowCxV3beta1TransitionRoute> getTransitionRoutes() {
    return transitionRoutes;
  }

  public void setTransitionRoutes(List<GoogleCloudDialogflowCxV3beta1TransitionRoute> transitionRoutes) {
    this.transitionRoutes = transitionRoutes;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDialogflowCxV3beta1Page googleCloudDialogflowCxV3beta1Page = (GoogleCloudDialogflowCxV3beta1Page) o;
    return Objects.equals(this.advancedSettings, googleCloudDialogflowCxV3beta1Page.advancedSettings) &&
        Objects.equals(this.description, googleCloudDialogflowCxV3beta1Page.description) &&
        Objects.equals(this.displayName, googleCloudDialogflowCxV3beta1Page.displayName) &&
        Objects.equals(this.entryFulfillment, googleCloudDialogflowCxV3beta1Page.entryFulfillment) &&
        Objects.equals(this.eventHandlers, googleCloudDialogflowCxV3beta1Page.eventHandlers) &&
        Objects.equals(this.form, googleCloudDialogflowCxV3beta1Page.form) &&
        Objects.equals(this.knowledgeConnectorSettings, googleCloudDialogflowCxV3beta1Page.knowledgeConnectorSettings) &&
        Objects.equals(this.name, googleCloudDialogflowCxV3beta1Page.name) &&
        Objects.equals(this.transitionRouteGroups, googleCloudDialogflowCxV3beta1Page.transitionRouteGroups) &&
        Objects.equals(this.transitionRoutes, googleCloudDialogflowCxV3beta1Page.transitionRoutes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(advancedSettings, description, displayName, entryFulfillment, eventHandlers, form, knowledgeConnectorSettings, name, transitionRouteGroups, transitionRoutes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDialogflowCxV3beta1Page {\n");
    sb.append("    advancedSettings: ").append(toIndentedString(advancedSettings)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    entryFulfillment: ").append(toIndentedString(entryFulfillment)).append("\n");
    sb.append("    eventHandlers: ").append(toIndentedString(eventHandlers)).append("\n");
    sb.append("    form: ").append(toIndentedString(form)).append("\n");
    sb.append("    knowledgeConnectorSettings: ").append(toIndentedString(knowledgeConnectorSettings)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    transitionRouteGroups: ").append(toIndentedString(transitionRouteGroups)).append("\n");
    sb.append("    transitionRoutes: ").append(toIndentedString(transitionRoutes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("advancedSettings");
    openapiFields.add("description");
    openapiFields.add("displayName");
    openapiFields.add("entryFulfillment");
    openapiFields.add("eventHandlers");
    openapiFields.add("form");
    openapiFields.add("knowledgeConnectorSettings");
    openapiFields.add("name");
    openapiFields.add("transitionRouteGroups");
    openapiFields.add("transitionRoutes");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDialogflowCxV3beta1Page
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDialogflowCxV3beta1Page.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDialogflowCxV3beta1Page is not found in the empty JSON string", GoogleCloudDialogflowCxV3beta1Page.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDialogflowCxV3beta1Page.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDialogflowCxV3beta1Page` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `advancedSettings`
      if (jsonObj.get("advancedSettings") != null && !jsonObj.get("advancedSettings").isJsonNull()) {
        GoogleCloudDialogflowCxV3beta1AdvancedSettings.validateJsonElement(jsonObj.get("advancedSettings"));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      // validate the optional field `entryFulfillment`
      if (jsonObj.get("entryFulfillment") != null && !jsonObj.get("entryFulfillment").isJsonNull()) {
        GoogleCloudDialogflowCxV3beta1Fulfillment.validateJsonElement(jsonObj.get("entryFulfillment"));
      }
      if (jsonObj.get("eventHandlers") != null && !jsonObj.get("eventHandlers").isJsonNull()) {
        JsonArray jsonArrayeventHandlers = jsonObj.getAsJsonArray("eventHandlers");
        if (jsonArrayeventHandlers != null) {
          // ensure the json data is an array
          if (!jsonObj.get("eventHandlers").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `eventHandlers` to be an array in the JSON string but got `%s`", jsonObj.get("eventHandlers").toString()));
          }

          // validate the optional field `eventHandlers` (array)
          for (int i = 0; i < jsonArrayeventHandlers.size(); i++) {
            GoogleCloudDialogflowCxV3beta1EventHandler.validateJsonElement(jsonArrayeventHandlers.get(i));
          };
        }
      }
      // validate the optional field `form`
      if (jsonObj.get("form") != null && !jsonObj.get("form").isJsonNull()) {
        GoogleCloudDialogflowCxV3beta1Form.validateJsonElement(jsonObj.get("form"));
      }
      // validate the optional field `knowledgeConnectorSettings`
      if (jsonObj.get("knowledgeConnectorSettings") != null && !jsonObj.get("knowledgeConnectorSettings").isJsonNull()) {
        GoogleCloudDialogflowCxV3beta1KnowledgeConnectorSettings.validateJsonElement(jsonObj.get("knowledgeConnectorSettings"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("transitionRouteGroups") != null && !jsonObj.get("transitionRouteGroups").isJsonNull() && !jsonObj.get("transitionRouteGroups").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `transitionRouteGroups` to be an array in the JSON string but got `%s`", jsonObj.get("transitionRouteGroups").toString()));
      }
      if (jsonObj.get("transitionRoutes") != null && !jsonObj.get("transitionRoutes").isJsonNull()) {
        JsonArray jsonArraytransitionRoutes = jsonObj.getAsJsonArray("transitionRoutes");
        if (jsonArraytransitionRoutes != null) {
          // ensure the json data is an array
          if (!jsonObj.get("transitionRoutes").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `transitionRoutes` to be an array in the JSON string but got `%s`", jsonObj.get("transitionRoutes").toString()));
          }

          // validate the optional field `transitionRoutes` (array)
          for (int i = 0; i < jsonArraytransitionRoutes.size(); i++) {
            GoogleCloudDialogflowCxV3beta1TransitionRoute.validateJsonElement(jsonArraytransitionRoutes.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDialogflowCxV3beta1Page.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDialogflowCxV3beta1Page' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDialogflowCxV3beta1Page> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDialogflowCxV3beta1Page.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDialogflowCxV3beta1Page>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDialogflowCxV3beta1Page value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDialogflowCxV3beta1Page read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDialogflowCxV3beta1Page given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDialogflowCxV3beta1Page
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDialogflowCxV3beta1Page
   */
  public static GoogleCloudDialogflowCxV3beta1Page fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDialogflowCxV3beta1Page.class);
  }

  /**
   * Convert an instance of GoogleCloudDialogflowCxV3beta1Page to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

