/*
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A Dialogflow agent is a virtual agent that handles conversations with your end-users. It is a natural language understanding module that understands the nuances of human language. Dialogflow translates end-user text or audio during a conversation to structured data that your apps and services can understand. You design and build a Dialogflow agent to handle the types of conversations required for your system. For more information about agents, see the [Agent guide](https://cloud.google.com/dialogflow/docs/agents-overview). 
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:47:43.085785-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDialogflowV2beta1Agent {
  /**
   * Optional. API version displayed in Dialogflow console. If not specified, V2 API is assumed. Clients are free to query different service endpoints for different API versions. However, bots connectors and webhook calls will follow the specified API version.
   */
  @JsonAdapter(ApiVersionEnum.Adapter.class)
  public enum ApiVersionEnum {
    UNSPECIFIED("API_VERSION_UNSPECIFIED"),
    
    V1("API_VERSION_V1"),
    
    V2("API_VERSION_V2"),
    
    V2_BETA_1("API_VERSION_V2_BETA_1");

    private String value;

    ApiVersionEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ApiVersionEnum fromValue(String value) {
      for (ApiVersionEnum b : ApiVersionEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ApiVersionEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ApiVersionEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ApiVersionEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ApiVersionEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ApiVersionEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_API_VERSION = "apiVersion";
  @SerializedName(SERIALIZED_NAME_API_VERSION)
  private ApiVersionEnum apiVersion;

  public static final String SERIALIZED_NAME_AVATAR_URI = "avatarUri";
  @SerializedName(SERIALIZED_NAME_AVATAR_URI)
  private String avatarUri;

  public static final String SERIALIZED_NAME_CLASSIFICATION_THRESHOLD = "classificationThreshold";
  @SerializedName(SERIALIZED_NAME_CLASSIFICATION_THRESHOLD)
  private Float classificationThreshold;

  public static final String SERIALIZED_NAME_DEFAULT_LANGUAGE_CODE = "defaultLanguageCode";
  @SerializedName(SERIALIZED_NAME_DEFAULT_LANGUAGE_CODE)
  private String defaultLanguageCode;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_ENABLE_LOGGING = "enableLogging";
  @SerializedName(SERIALIZED_NAME_ENABLE_LOGGING)
  private Boolean enableLogging;

  /**
   * Optional. Determines how intents are detected from user queries.
   */
  @JsonAdapter(MatchModeEnum.Adapter.class)
  public enum MatchModeEnum {
    UNSPECIFIED("MATCH_MODE_UNSPECIFIED"),
    
    HYBRID("MATCH_MODE_HYBRID"),
    
    ML_ONLY("MATCH_MODE_ML_ONLY");

    private String value;

    MatchModeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static MatchModeEnum fromValue(String value) {
      for (MatchModeEnum b : MatchModeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<MatchModeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final MatchModeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public MatchModeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return MatchModeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      MatchModeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_MATCH_MODE = "matchMode";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_MATCH_MODE)
  private MatchModeEnum matchMode;

  public static final String SERIALIZED_NAME_PARENT = "parent";
  @SerializedName(SERIALIZED_NAME_PARENT)
  private String parent;

  public static final String SERIALIZED_NAME_SUPPORTED_LANGUAGE_CODES = "supportedLanguageCodes";
  @SerializedName(SERIALIZED_NAME_SUPPORTED_LANGUAGE_CODES)
  private List<String> supportedLanguageCodes = new ArrayList<>();

  /**
   * Optional. The agent tier. If not specified, TIER_STANDARD is assumed.
   */
  @JsonAdapter(TierEnum.Adapter.class)
  public enum TierEnum {
    UNSPECIFIED("TIER_UNSPECIFIED"),
    
    STANDARD("TIER_STANDARD"),
    
    ENTERPRISE("TIER_ENTERPRISE"),
    
    ENTERPRISE_PLUS("TIER_ENTERPRISE_PLUS");

    private String value;

    TierEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TierEnum fromValue(String value) {
      for (TierEnum b : TierEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TierEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TierEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TierEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TierEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      TierEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_TIER = "tier";
  @SerializedName(SERIALIZED_NAME_TIER)
  private TierEnum tier;

  public static final String SERIALIZED_NAME_TIME_ZONE = "timeZone";
  @SerializedName(SERIALIZED_NAME_TIME_ZONE)
  private String timeZone;

  public GoogleCloudDialogflowV2beta1Agent() {
  }

  public GoogleCloudDialogflowV2beta1Agent apiVersion(ApiVersionEnum apiVersion) {
    this.apiVersion = apiVersion;
    return this;
  }

  /**
   * Optional. API version displayed in Dialogflow console. If not specified, V2 API is assumed. Clients are free to query different service endpoints for different API versions. However, bots connectors and webhook calls will follow the specified API version.
   * @return apiVersion
   */
  @javax.annotation.Nullable
  public ApiVersionEnum getApiVersion() {
    return apiVersion;
  }

  public void setApiVersion(ApiVersionEnum apiVersion) {
    this.apiVersion = apiVersion;
  }


  public GoogleCloudDialogflowV2beta1Agent avatarUri(String avatarUri) {
    this.avatarUri = avatarUri;
    return this;
  }

  /**
   * Optional. The URI of the agent&#39;s avatar. Avatars are used throughout the Dialogflow console and in the self-hosted [Web Demo](https://cloud.google.com/dialogflow/docs/integrations/web-demo) integration.
   * @return avatarUri
   */
  @javax.annotation.Nullable
  public String getAvatarUri() {
    return avatarUri;
  }

  public void setAvatarUri(String avatarUri) {
    this.avatarUri = avatarUri;
  }


  public GoogleCloudDialogflowV2beta1Agent classificationThreshold(Float classificationThreshold) {
    this.classificationThreshold = classificationThreshold;
    return this;
  }

  /**
   * Optional. To filter out false positive results and still get variety in matched natural language inputs for your agent, you can tune the machine learning classification threshold. If the returned score value is less than the threshold value, then a fallback intent will be triggered or, if there are no fallback intents defined, no intent will be triggered. The score values range from 0.0 (completely uncertain) to 1.0 (completely certain). If set to 0.0, the default of 0.3 is used.
   * @return classificationThreshold
   */
  @javax.annotation.Nullable
  public Float getClassificationThreshold() {
    return classificationThreshold;
  }

  public void setClassificationThreshold(Float classificationThreshold) {
    this.classificationThreshold = classificationThreshold;
  }


  public GoogleCloudDialogflowV2beta1Agent defaultLanguageCode(String defaultLanguageCode) {
    this.defaultLanguageCode = defaultLanguageCode;
    return this;
  }

  /**
   * Required. The default language of the agent as a language tag. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported language codes. This field cannot be set by the &#x60;Update&#x60; method.
   * @return defaultLanguageCode
   */
  @javax.annotation.Nullable
  public String getDefaultLanguageCode() {
    return defaultLanguageCode;
  }

  public void setDefaultLanguageCode(String defaultLanguageCode) {
    this.defaultLanguageCode = defaultLanguageCode;
  }


  public GoogleCloudDialogflowV2beta1Agent description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Optional. The description of this agent. The maximum length is 500 characters. If exceeded, the request is rejected.
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public GoogleCloudDialogflowV2beta1Agent displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Required. The name of this agent.
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public GoogleCloudDialogflowV2beta1Agent enableLogging(Boolean enableLogging) {
    this.enableLogging = enableLogging;
    return this;
  }

  /**
   * Optional. Determines whether this agent should log conversation queries.
   * @return enableLogging
   */
  @javax.annotation.Nullable
  public Boolean getEnableLogging() {
    return enableLogging;
  }

  public void setEnableLogging(Boolean enableLogging) {
    this.enableLogging = enableLogging;
  }


  @Deprecated
  public GoogleCloudDialogflowV2beta1Agent matchMode(MatchModeEnum matchMode) {
    this.matchMode = matchMode;
    return this;
  }

  /**
   * Optional. Determines how intents are detected from user queries.
   * @return matchMode
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public MatchModeEnum getMatchMode() {
    return matchMode;
  }

  @Deprecated
  public void setMatchMode(MatchModeEnum matchMode) {
    this.matchMode = matchMode;
  }


  public GoogleCloudDialogflowV2beta1Agent parent(String parent) {
    this.parent = parent;
    return this;
  }

  /**
   * Required. The project of this agent. Format: &#x60;projects/&#x60; or &#x60;projects//locations/&#x60;
   * @return parent
   */
  @javax.annotation.Nullable
  public String getParent() {
    return parent;
  }

  public void setParent(String parent) {
    this.parent = parent;
  }


  public GoogleCloudDialogflowV2beta1Agent supportedLanguageCodes(List<String> supportedLanguageCodes) {
    this.supportedLanguageCodes = supportedLanguageCodes;
    return this;
  }

  public GoogleCloudDialogflowV2beta1Agent addSupportedLanguageCodesItem(String supportedLanguageCodesItem) {
    if (this.supportedLanguageCodes == null) {
      this.supportedLanguageCodes = new ArrayList<>();
    }
    this.supportedLanguageCodes.add(supportedLanguageCodesItem);
    return this;
  }

  /**
   * Optional. The list of all languages supported by this agent (except for the &#x60;default_language_code&#x60;).
   * @return supportedLanguageCodes
   */
  @javax.annotation.Nullable
  public List<String> getSupportedLanguageCodes() {
    return supportedLanguageCodes;
  }

  public void setSupportedLanguageCodes(List<String> supportedLanguageCodes) {
    this.supportedLanguageCodes = supportedLanguageCodes;
  }


  public GoogleCloudDialogflowV2beta1Agent tier(TierEnum tier) {
    this.tier = tier;
    return this;
  }

  /**
   * Optional. The agent tier. If not specified, TIER_STANDARD is assumed.
   * @return tier
   */
  @javax.annotation.Nullable
  public TierEnum getTier() {
    return tier;
  }

  public void setTier(TierEnum tier) {
    this.tier = tier;
  }


  public GoogleCloudDialogflowV2beta1Agent timeZone(String timeZone) {
    this.timeZone = timeZone;
    return this;
  }

  /**
   * Required. The time zone of this agent from the [time zone database](https://www.iana.org/time-zones), e.g., America/New_York, Europe/Paris.
   * @return timeZone
   */
  @javax.annotation.Nullable
  public String getTimeZone() {
    return timeZone;
  }

  public void setTimeZone(String timeZone) {
    this.timeZone = timeZone;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDialogflowV2beta1Agent googleCloudDialogflowV2beta1Agent = (GoogleCloudDialogflowV2beta1Agent) o;
    return Objects.equals(this.apiVersion, googleCloudDialogflowV2beta1Agent.apiVersion) &&
        Objects.equals(this.avatarUri, googleCloudDialogflowV2beta1Agent.avatarUri) &&
        Objects.equals(this.classificationThreshold, googleCloudDialogflowV2beta1Agent.classificationThreshold) &&
        Objects.equals(this.defaultLanguageCode, googleCloudDialogflowV2beta1Agent.defaultLanguageCode) &&
        Objects.equals(this.description, googleCloudDialogflowV2beta1Agent.description) &&
        Objects.equals(this.displayName, googleCloudDialogflowV2beta1Agent.displayName) &&
        Objects.equals(this.enableLogging, googleCloudDialogflowV2beta1Agent.enableLogging) &&
        Objects.equals(this.matchMode, googleCloudDialogflowV2beta1Agent.matchMode) &&
        Objects.equals(this.parent, googleCloudDialogflowV2beta1Agent.parent) &&
        Objects.equals(this.supportedLanguageCodes, googleCloudDialogflowV2beta1Agent.supportedLanguageCodes) &&
        Objects.equals(this.tier, googleCloudDialogflowV2beta1Agent.tier) &&
        Objects.equals(this.timeZone, googleCloudDialogflowV2beta1Agent.timeZone);
  }

  @Override
  public int hashCode() {
    return Objects.hash(apiVersion, avatarUri, classificationThreshold, defaultLanguageCode, description, displayName, enableLogging, matchMode, parent, supportedLanguageCodes, tier, timeZone);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDialogflowV2beta1Agent {\n");
    sb.append("    apiVersion: ").append(toIndentedString(apiVersion)).append("\n");
    sb.append("    avatarUri: ").append(toIndentedString(avatarUri)).append("\n");
    sb.append("    classificationThreshold: ").append(toIndentedString(classificationThreshold)).append("\n");
    sb.append("    defaultLanguageCode: ").append(toIndentedString(defaultLanguageCode)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    enableLogging: ").append(toIndentedString(enableLogging)).append("\n");
    sb.append("    matchMode: ").append(toIndentedString(matchMode)).append("\n");
    sb.append("    parent: ").append(toIndentedString(parent)).append("\n");
    sb.append("    supportedLanguageCodes: ").append(toIndentedString(supportedLanguageCodes)).append("\n");
    sb.append("    tier: ").append(toIndentedString(tier)).append("\n");
    sb.append("    timeZone: ").append(toIndentedString(timeZone)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("apiVersion");
    openapiFields.add("avatarUri");
    openapiFields.add("classificationThreshold");
    openapiFields.add("defaultLanguageCode");
    openapiFields.add("description");
    openapiFields.add("displayName");
    openapiFields.add("enableLogging");
    openapiFields.add("matchMode");
    openapiFields.add("parent");
    openapiFields.add("supportedLanguageCodes");
    openapiFields.add("tier");
    openapiFields.add("timeZone");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDialogflowV2beta1Agent
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDialogflowV2beta1Agent.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDialogflowV2beta1Agent is not found in the empty JSON string", GoogleCloudDialogflowV2beta1Agent.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDialogflowV2beta1Agent.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDialogflowV2beta1Agent` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("apiVersion") != null && !jsonObj.get("apiVersion").isJsonNull()) && !jsonObj.get("apiVersion").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `apiVersion` to be a primitive type in the JSON string but got `%s`", jsonObj.get("apiVersion").toString()));
      }
      // validate the optional field `apiVersion`
      if (jsonObj.get("apiVersion") != null && !jsonObj.get("apiVersion").isJsonNull()) {
        ApiVersionEnum.validateJsonElement(jsonObj.get("apiVersion"));
      }
      if ((jsonObj.get("avatarUri") != null && !jsonObj.get("avatarUri").isJsonNull()) && !jsonObj.get("avatarUri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `avatarUri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("avatarUri").toString()));
      }
      if ((jsonObj.get("defaultLanguageCode") != null && !jsonObj.get("defaultLanguageCode").isJsonNull()) && !jsonObj.get("defaultLanguageCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `defaultLanguageCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("defaultLanguageCode").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      if ((jsonObj.get("matchMode") != null && !jsonObj.get("matchMode").isJsonNull()) && !jsonObj.get("matchMode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `matchMode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("matchMode").toString()));
      }
      // validate the optional field `matchMode`
      if (jsonObj.get("matchMode") != null && !jsonObj.get("matchMode").isJsonNull()) {
        MatchModeEnum.validateJsonElement(jsonObj.get("matchMode"));
      }
      if ((jsonObj.get("parent") != null && !jsonObj.get("parent").isJsonNull()) && !jsonObj.get("parent").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `parent` to be a primitive type in the JSON string but got `%s`", jsonObj.get("parent").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("supportedLanguageCodes") != null && !jsonObj.get("supportedLanguageCodes").isJsonNull() && !jsonObj.get("supportedLanguageCodes").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `supportedLanguageCodes` to be an array in the JSON string but got `%s`", jsonObj.get("supportedLanguageCodes").toString()));
      }
      if ((jsonObj.get("tier") != null && !jsonObj.get("tier").isJsonNull()) && !jsonObj.get("tier").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tier` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tier").toString()));
      }
      // validate the optional field `tier`
      if (jsonObj.get("tier") != null && !jsonObj.get("tier").isJsonNull()) {
        TierEnum.validateJsonElement(jsonObj.get("tier"));
      }
      if ((jsonObj.get("timeZone") != null && !jsonObj.get("timeZone").isJsonNull()) && !jsonObj.get("timeZone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `timeZone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("timeZone").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDialogflowV2beta1Agent.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDialogflowV2beta1Agent' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDialogflowV2beta1Agent> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDialogflowV2beta1Agent.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDialogflowV2beta1Agent>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDialogflowV2beta1Agent value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDialogflowV2beta1Agent read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDialogflowV2beta1Agent given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDialogflowV2beta1Agent
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDialogflowV2beta1Agent
   */
  public static GoogleCloudDialogflowV2beta1Agent fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDialogflowV2beta1Agent.class);
  }

  /**
   * Convert an instance of GoogleCloudDialogflowV2beta1Agent to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

