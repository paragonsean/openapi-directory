/*
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1IntentBatch;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The request message for Intents.BatchUpdateIntents.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:47:43.085785-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDialogflowV2beta1BatchUpdateIntentsRequest {
  public static final String SERIALIZED_NAME_INTENT_BATCH_INLINE = "intentBatchInline";
  @SerializedName(SERIALIZED_NAME_INTENT_BATCH_INLINE)
  private GoogleCloudDialogflowV2beta1IntentBatch intentBatchInline;

  public static final String SERIALIZED_NAME_INTENT_BATCH_URI = "intentBatchUri";
  @SerializedName(SERIALIZED_NAME_INTENT_BATCH_URI)
  private String intentBatchUri;

  /**
   * Optional. The resource view to apply to the returned intent.
   */
  @JsonAdapter(IntentViewEnum.Adapter.class)
  public enum IntentViewEnum {
    UNSPECIFIED("INTENT_VIEW_UNSPECIFIED"),
    
    FULL("INTENT_VIEW_FULL");

    private String value;

    IntentViewEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static IntentViewEnum fromValue(String value) {
      for (IntentViewEnum b : IntentViewEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<IntentViewEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final IntentViewEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public IntentViewEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return IntentViewEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      IntentViewEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_INTENT_VIEW = "intentView";
  @SerializedName(SERIALIZED_NAME_INTENT_VIEW)
  private IntentViewEnum intentView;

  public static final String SERIALIZED_NAME_LANGUAGE_CODE = "languageCode";
  @SerializedName(SERIALIZED_NAME_LANGUAGE_CODE)
  private String languageCode;

  public static final String SERIALIZED_NAME_UPDATE_MASK = "updateMask";
  @SerializedName(SERIALIZED_NAME_UPDATE_MASK)
  private String updateMask;

  public GoogleCloudDialogflowV2beta1BatchUpdateIntentsRequest() {
  }

  public GoogleCloudDialogflowV2beta1BatchUpdateIntentsRequest intentBatchInline(GoogleCloudDialogflowV2beta1IntentBatch intentBatchInline) {
    this.intentBatchInline = intentBatchInline;
    return this;
  }

  /**
   * Get intentBatchInline
   * @return intentBatchInline
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowV2beta1IntentBatch getIntentBatchInline() {
    return intentBatchInline;
  }

  public void setIntentBatchInline(GoogleCloudDialogflowV2beta1IntentBatch intentBatchInline) {
    this.intentBatchInline = intentBatchInline;
  }


  public GoogleCloudDialogflowV2beta1BatchUpdateIntentsRequest intentBatchUri(String intentBatchUri) {
    this.intentBatchUri = intentBatchUri;
    return this;
  }

  /**
   * The URI to a Google Cloud Storage file containing intents to update or create. The file format can either be a serialized proto (of IntentBatch type) or JSON object. Note: The URI must start with \&quot;gs://\&quot;.
   * @return intentBatchUri
   */
  @javax.annotation.Nullable
  public String getIntentBatchUri() {
    return intentBatchUri;
  }

  public void setIntentBatchUri(String intentBatchUri) {
    this.intentBatchUri = intentBatchUri;
  }


  public GoogleCloudDialogflowV2beta1BatchUpdateIntentsRequest intentView(IntentViewEnum intentView) {
    this.intentView = intentView;
    return this;
  }

  /**
   * Optional. The resource view to apply to the returned intent.
   * @return intentView
   */
  @javax.annotation.Nullable
  public IntentViewEnum getIntentView() {
    return intentView;
  }

  public void setIntentView(IntentViewEnum intentView) {
    this.intentView = intentView;
  }


  public GoogleCloudDialogflowV2beta1BatchUpdateIntentsRequest languageCode(String languageCode) {
    this.languageCode = languageCode;
    return this;
  }

  /**
   * Optional. The language used to access language-specific data. If not specified, the agent&#39;s default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
   * @return languageCode
   */
  @javax.annotation.Nullable
  public String getLanguageCode() {
    return languageCode;
  }

  public void setLanguageCode(String languageCode) {
    this.languageCode = languageCode;
  }


  public GoogleCloudDialogflowV2beta1BatchUpdateIntentsRequest updateMask(String updateMask) {
    this.updateMask = updateMask;
    return this;
  }

  /**
   * Optional. The mask to control which fields get updated.
   * @return updateMask
   */
  @javax.annotation.Nullable
  public String getUpdateMask() {
    return updateMask;
  }

  public void setUpdateMask(String updateMask) {
    this.updateMask = updateMask;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDialogflowV2beta1BatchUpdateIntentsRequest googleCloudDialogflowV2beta1BatchUpdateIntentsRequest = (GoogleCloudDialogflowV2beta1BatchUpdateIntentsRequest) o;
    return Objects.equals(this.intentBatchInline, googleCloudDialogflowV2beta1BatchUpdateIntentsRequest.intentBatchInline) &&
        Objects.equals(this.intentBatchUri, googleCloudDialogflowV2beta1BatchUpdateIntentsRequest.intentBatchUri) &&
        Objects.equals(this.intentView, googleCloudDialogflowV2beta1BatchUpdateIntentsRequest.intentView) &&
        Objects.equals(this.languageCode, googleCloudDialogflowV2beta1BatchUpdateIntentsRequest.languageCode) &&
        Objects.equals(this.updateMask, googleCloudDialogflowV2beta1BatchUpdateIntentsRequest.updateMask);
  }

  @Override
  public int hashCode() {
    return Objects.hash(intentBatchInline, intentBatchUri, intentView, languageCode, updateMask);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDialogflowV2beta1BatchUpdateIntentsRequest {\n");
    sb.append("    intentBatchInline: ").append(toIndentedString(intentBatchInline)).append("\n");
    sb.append("    intentBatchUri: ").append(toIndentedString(intentBatchUri)).append("\n");
    sb.append("    intentView: ").append(toIndentedString(intentView)).append("\n");
    sb.append("    languageCode: ").append(toIndentedString(languageCode)).append("\n");
    sb.append("    updateMask: ").append(toIndentedString(updateMask)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("intentBatchInline");
    openapiFields.add("intentBatchUri");
    openapiFields.add("intentView");
    openapiFields.add("languageCode");
    openapiFields.add("updateMask");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDialogflowV2beta1BatchUpdateIntentsRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDialogflowV2beta1BatchUpdateIntentsRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDialogflowV2beta1BatchUpdateIntentsRequest is not found in the empty JSON string", GoogleCloudDialogflowV2beta1BatchUpdateIntentsRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDialogflowV2beta1BatchUpdateIntentsRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDialogflowV2beta1BatchUpdateIntentsRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `intentBatchInline`
      if (jsonObj.get("intentBatchInline") != null && !jsonObj.get("intentBatchInline").isJsonNull()) {
        GoogleCloudDialogflowV2beta1IntentBatch.validateJsonElement(jsonObj.get("intentBatchInline"));
      }
      if ((jsonObj.get("intentBatchUri") != null && !jsonObj.get("intentBatchUri").isJsonNull()) && !jsonObj.get("intentBatchUri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `intentBatchUri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("intentBatchUri").toString()));
      }
      if ((jsonObj.get("intentView") != null && !jsonObj.get("intentView").isJsonNull()) && !jsonObj.get("intentView").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `intentView` to be a primitive type in the JSON string but got `%s`", jsonObj.get("intentView").toString()));
      }
      // validate the optional field `intentView`
      if (jsonObj.get("intentView") != null && !jsonObj.get("intentView").isJsonNull()) {
        IntentViewEnum.validateJsonElement(jsonObj.get("intentView"));
      }
      if ((jsonObj.get("languageCode") != null && !jsonObj.get("languageCode").isJsonNull()) && !jsonObj.get("languageCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `languageCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("languageCode").toString()));
      }
      if ((jsonObj.get("updateMask") != null && !jsonObj.get("updateMask").isJsonNull()) && !jsonObj.get("updateMask").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updateMask` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updateMask").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDialogflowV2beta1BatchUpdateIntentsRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDialogflowV2beta1BatchUpdateIntentsRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDialogflowV2beta1BatchUpdateIntentsRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDialogflowV2beta1BatchUpdateIntentsRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDialogflowV2beta1BatchUpdateIntentsRequest>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDialogflowV2beta1BatchUpdateIntentsRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDialogflowV2beta1BatchUpdateIntentsRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDialogflowV2beta1BatchUpdateIntentsRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDialogflowV2beta1BatchUpdateIntentsRequest
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDialogflowV2beta1BatchUpdateIntentsRequest
   */
  public static GoogleCloudDialogflowV2beta1BatchUpdateIntentsRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDialogflowV2beta1BatchUpdateIntentsRequest.class);
  }

  /**
   * Convert an instance of GoogleCloudDialogflowV2beta1BatchUpdateIntentsRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

