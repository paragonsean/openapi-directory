/*
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1Agent;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1AnalyzeContentRequest;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1AnalyzeContentResponse;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1BatchCreateEntitiesRequest;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1BatchCreateMessagesRequest;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1BatchCreateMessagesResponse;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1BatchDeleteEntitiesRequest;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1BatchDeleteEntityTypesRequest;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1BatchDeleteIntentsRequest;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1BatchUpdateEntitiesRequest;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1BatchUpdateEntityTypesRequest;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1BatchUpdateIntentsRequest;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1ClearSuggestionFeatureConfigRequest;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1CompileSuggestionRequest;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1CompileSuggestionResponse;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1Context;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1Conversation;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1ConversationProfile;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1DetectIntentRequest;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1DetectIntentResponse;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1Document;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1Environment;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1EnvironmentHistory;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1ExportAgentRequest;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1GenerateStatelessSummaryRequest;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1GenerateStatelessSummaryResponse;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1ImportAgentRequest;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1ImportDocumentsRequest;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1Intent;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1KnowledgeBase;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1ListAnswerRecordsResponse;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1ListContextsResponse;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1ListConversationProfilesResponse;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1ListConversationsResponse;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1ListDocumentsResponse;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1ListEnvironmentsResponse;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1ListIntentsResponse;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1ListKnowledgeBasesResponse;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1ListMessagesResponse;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1ListParticipantsResponse;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1ListSessionEntityTypesResponse;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1ListSuggestionsResponse;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1ListVersionsResponse;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1Participant;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1ReloadDocumentRequest;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1RestoreAgentRequest;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1SearchAgentsResponse;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1SearchKnowledgeRequest;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1SearchKnowledgeResponse;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1SessionEntityType;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1SetSuggestionFeatureConfigRequest;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1SuggestArticlesRequest;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1SuggestArticlesResponse;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1SuggestConversationSummaryRequest;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1SuggestConversationSummaryResponse;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1SuggestFaqAnswersRequest;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1SuggestFaqAnswersResponse;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1SuggestSmartRepliesRequest;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1SuggestSmartRepliesResponse;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1ValidationResult;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1Version;
import org.openapitools.client.model.GoogleCloudLocationListLocationsResponse;
import org.openapitools.client.model.GoogleLongrunningListOperationsResponse;
import org.openapitools.client.model.GoogleLongrunningOperation;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProjectsApi
 */
@Disabled
public class ProjectsApiTest {

    private final ProjectsApi api = new ProjectsApi();

    /**
     * Deprecated. use SuggestArticles and SuggestFaqAnswers instead. Gets suggestions for a participant based on specific historical messages. Note that ListSuggestions will only list the auto-generated suggestions, while CompileSuggestion will try to compile suggestion based on the provided conversation context in the real time.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dialogflowProjectsConversationsParticipantsSuggestionsCompileTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudDialogflowV2beta1CompileSuggestionRequest googleCloudDialogflowV2beta1CompileSuggestionRequest = null;
        GoogleCloudDialogflowV2beta1CompileSuggestionResponse response = api.dialogflowProjectsConversationsParticipantsSuggestionsCompile(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudDialogflowV2beta1CompileSuggestionRequest);
        // TODO: test validations
    }

    /**
     * Deprecated: Use inline suggestion, event based suggestion or Suggestion* API instead. See HumanAgentAssistantConfig.name for more details. Removal Date: 2020-09-01. Retrieves suggestions for live agents. This method should be used by human agent client software to fetch auto generated suggestions in real-time, while the conversation with an end user is in progress. The functionality is implemented in terms of the [list pagination](https://cloud.google.com/apis/design/design_patterns#list_pagination) design pattern. The client app should use the &#x60;next_page_token&#x60; field to fetch the next batch of suggestions. &#x60;suggestions&#x60; are sorted by &#x60;create_time&#x60; in descending order. To fetch latest suggestion, just set &#x60;page_size&#x60; to 1. To fetch new suggestions without duplication, send request with filter &#x60;create_time_epoch_microseconds &gt; [first item&#39;s create_time of previous request]&#x60; and empty page_token.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dialogflowProjectsConversationsParticipantsSuggestionsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudDialogflowV2beta1ListSuggestionsResponse response = api.dialogflowProjectsConversationsParticipantsSuggestionsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Deletes entity types in the specified agent. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned &#x60;Operation&#x60; type has the following method-specific fields: - &#x60;metadata&#x60;: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - &#x60;response&#x60;: An [Empty message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) Note: You should always train an agent prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dialogflowProjectsLocationsAgentEntityTypesBatchDeleteTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudDialogflowV2beta1BatchDeleteEntityTypesRequest googleCloudDialogflowV2beta1BatchDeleteEntityTypesRequest = null;
        GoogleLongrunningOperation response = api.dialogflowProjectsLocationsAgentEntityTypesBatchDelete(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudDialogflowV2beta1BatchDeleteEntityTypesRequest);
        // TODO: test validations
    }

    /**
     * Updates/Creates multiple entity types in the specified agent. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned &#x60;Operation&#x60; type has the following method-specific fields: - &#x60;metadata&#x60;: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - &#x60;response&#x60;: BatchUpdateEntityTypesResponse Note: You should always train an agent prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dialogflowProjectsLocationsAgentEntityTypesBatchUpdateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudDialogflowV2beta1BatchUpdateEntityTypesRequest googleCloudDialogflowV2beta1BatchUpdateEntityTypesRequest = null;
        GoogleLongrunningOperation response = api.dialogflowProjectsLocationsAgentEntityTypesBatchUpdate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudDialogflowV2beta1BatchUpdateEntityTypesRequest);
        // TODO: test validations
    }

    /**
     * Creates multiple new entities in the specified entity type. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned &#x60;Operation&#x60; type has the following method-specific fields: - &#x60;metadata&#x60;: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - &#x60;response&#x60;: An [Empty message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) Note: You should always train an agent prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dialogflowProjectsLocationsAgentEntityTypesEntitiesBatchCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudDialogflowV2beta1BatchCreateEntitiesRequest googleCloudDialogflowV2beta1BatchCreateEntitiesRequest = null;
        GoogleLongrunningOperation response = api.dialogflowProjectsLocationsAgentEntityTypesEntitiesBatchCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudDialogflowV2beta1BatchCreateEntitiesRequest);
        // TODO: test validations
    }

    /**
     * Deletes entities in the specified entity type. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned &#x60;Operation&#x60; type has the following method-specific fields: - &#x60;metadata&#x60;: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - &#x60;response&#x60;: An [Empty message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) Note: You should always train an agent prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dialogflowProjectsLocationsAgentEntityTypesEntitiesBatchDeleteTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudDialogflowV2beta1BatchDeleteEntitiesRequest googleCloudDialogflowV2beta1BatchDeleteEntitiesRequest = null;
        GoogleLongrunningOperation response = api.dialogflowProjectsLocationsAgentEntityTypesEntitiesBatchDelete(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudDialogflowV2beta1BatchDeleteEntitiesRequest);
        // TODO: test validations
    }

    /**
     * Updates or creates multiple entities in the specified entity type. This method does not affect entities in the entity type that aren&#39;t explicitly specified in the request. Note: You should always train an agent prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training). This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned &#x60;Operation&#x60; type has the following method-specific fields: - &#x60;metadata&#x60;: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - &#x60;response&#x60;: An [Empty message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dialogflowProjectsLocationsAgentEntityTypesEntitiesBatchUpdateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudDialogflowV2beta1BatchUpdateEntitiesRequest googleCloudDialogflowV2beta1BatchUpdateEntitiesRequest = null;
        GoogleLongrunningOperation response = api.dialogflowProjectsLocationsAgentEntityTypesEntitiesBatchUpdate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudDialogflowV2beta1BatchUpdateEntitiesRequest);
        // TODO: test validations
    }

    /**
     * Creates an agent environment.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dialogflowProjectsLocationsAgentEnvironmentsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String environmentId = null;
        GoogleCloudDialogflowV2beta1Environment googleCloudDialogflowV2beta1Environment = null;
        GoogleCloudDialogflowV2beta1Environment response = api.dialogflowProjectsLocationsAgentEnvironmentsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, environmentId, googleCloudDialogflowV2beta1Environment);
        // TODO: test validations
    }

    /**
     * Gets the history of the specified environment.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dialogflowProjectsLocationsAgentEnvironmentsGetHistoryTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudDialogflowV2beta1EnvironmentHistory response = api.dialogflowProjectsLocationsAgentEnvironmentsGetHistory(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Returns the list of all non-draft environments of the specified agent.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dialogflowProjectsLocationsAgentEnvironmentsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudDialogflowV2beta1ListEnvironmentsResponse response = api.dialogflowProjectsLocationsAgentEnvironmentsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Exports the specified agent to a ZIP file. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned &#x60;Operation&#x60; type has the following method-specific fields: - &#x60;metadata&#x60;: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - &#x60;response&#x60;: ExportAgentResponse
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dialogflowProjectsLocationsAgentExportTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudDialogflowV2beta1ExportAgentRequest googleCloudDialogflowV2beta1ExportAgentRequest = null;
        GoogleLongrunningOperation response = api.dialogflowProjectsLocationsAgentExport(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudDialogflowV2beta1ExportAgentRequest);
        // TODO: test validations
    }

    /**
     * Gets agent validation result. Agent validation is performed during training time and is updated automatically when training is completed.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dialogflowProjectsLocationsAgentGetValidationResultTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String languageCode = null;
        GoogleCloudDialogflowV2beta1ValidationResult response = api.dialogflowProjectsLocationsAgentGetValidationResult(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, languageCode);
        // TODO: test validations
    }

    /**
     * Imports the specified agent from a ZIP file. Uploads new intents and entity types without deleting the existing ones. Intents and entity types with the same name are replaced with the new versions from ImportAgentRequest. After the import, the imported draft agent will be trained automatically (unless disabled in agent settings). However, once the import is done, training may not be completed yet. Please call TrainAgent and wait for the operation it returns in order to train explicitly. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned &#x60;Operation&#x60; type has the following method-specific fields: - &#x60;metadata&#x60;: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - &#x60;response&#x60;: An [Empty message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) The operation only tracks when importing is complete, not when it is done training. Note: You should always train an agent prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dialogflowProjectsLocationsAgentImportTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudDialogflowV2beta1ImportAgentRequest googleCloudDialogflowV2beta1ImportAgentRequest = null;
        GoogleLongrunningOperation response = api.dialogflowProjectsLocationsAgentImport(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudDialogflowV2beta1ImportAgentRequest);
        // TODO: test validations
    }

    /**
     * Deletes intents in the specified agent. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned &#x60;Operation&#x60; type has the following method-specific fields: - &#x60;metadata&#x60;: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - &#x60;response&#x60;: An [Empty message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) Note: You should always train an agent prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dialogflowProjectsLocationsAgentIntentsBatchDeleteTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudDialogflowV2beta1BatchDeleteIntentsRequest googleCloudDialogflowV2beta1BatchDeleteIntentsRequest = null;
        GoogleLongrunningOperation response = api.dialogflowProjectsLocationsAgentIntentsBatchDelete(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudDialogflowV2beta1BatchDeleteIntentsRequest);
        // TODO: test validations
    }

    /**
     * Updates/Creates multiple intents in the specified agent. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned &#x60;Operation&#x60; type has the following method-specific fields: - &#x60;metadata&#x60;: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - &#x60;response&#x60;: BatchUpdateIntentsResponse Note: You should always train an agent prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dialogflowProjectsLocationsAgentIntentsBatchUpdateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudDialogflowV2beta1BatchUpdateIntentsRequest googleCloudDialogflowV2beta1BatchUpdateIntentsRequest = null;
        GoogleLongrunningOperation response = api.dialogflowProjectsLocationsAgentIntentsBatchUpdate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudDialogflowV2beta1BatchUpdateIntentsRequest);
        // TODO: test validations
    }

    /**
     * Creates an intent in the specified agent. Note: You should always train an agent prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dialogflowProjectsLocationsAgentIntentsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String intentView = null;
        String languageCode = null;
        GoogleCloudDialogflowV2beta1Intent googleCloudDialogflowV2beta1Intent = null;
        GoogleCloudDialogflowV2beta1Intent response = api.dialogflowProjectsLocationsAgentIntentsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, intentView, languageCode, googleCloudDialogflowV2beta1Intent);
        // TODO: test validations
    }

    /**
     * Returns the list of all intents in the specified agent.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dialogflowProjectsLocationsAgentIntentsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String intentView = null;
        String languageCode = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudDialogflowV2beta1ListIntentsResponse response = api.dialogflowProjectsLocationsAgentIntentsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, intentView, languageCode, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Restores the specified agent from a ZIP file. Replaces the current agent version with a new one. All the intents and entity types in the older version are deleted. After the restore, the restored draft agent will be trained automatically (unless disabled in agent settings). However, once the restore is done, training may not be completed yet. Please call TrainAgent and wait for the operation it returns in order to train explicitly. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned &#x60;Operation&#x60; type has the following method-specific fields: - &#x60;metadata&#x60;: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - &#x60;response&#x60;: An [Empty message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) The operation only tracks when restoring is complete, not when it is done training. Note: You should always train an agent prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dialogflowProjectsLocationsAgentRestoreTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudDialogflowV2beta1RestoreAgentRequest googleCloudDialogflowV2beta1RestoreAgentRequest = null;
        GoogleLongrunningOperation response = api.dialogflowProjectsLocationsAgentRestore(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudDialogflowV2beta1RestoreAgentRequest);
        // TODO: test validations
    }

    /**
     * Returns the list of agents. Since there is at most one conversational agent per project, this method is useful primarily for listing all agents across projects the caller has access to. One can achieve that with a wildcard project collection id \&quot;-\&quot;. Refer to [List Sub-Collections](https://cloud.google.com/apis/design/design_patterns#list_sub-collections).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dialogflowProjectsLocationsAgentSearchTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudDialogflowV2beta1SearchAgentsResponse response = api.dialogflowProjectsLocationsAgentSearch(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Creates a context. If the specified context already exists, overrides the context.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dialogflowProjectsLocationsAgentSessionsContextsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudDialogflowV2beta1Context googleCloudDialogflowV2beta1Context = null;
        GoogleCloudDialogflowV2beta1Context response = api.dialogflowProjectsLocationsAgentSessionsContextsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudDialogflowV2beta1Context);
        // TODO: test validations
    }

    /**
     * Returns the list of all contexts in the specified session.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dialogflowProjectsLocationsAgentSessionsContextsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudDialogflowV2beta1ListContextsResponse response = api.dialogflowProjectsLocationsAgentSessionsContextsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Deletes all active contexts in the specified session.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dialogflowProjectsLocationsAgentSessionsDeleteContextsTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Object response = api.dialogflowProjectsLocationsAgentSessionsDeleteContexts(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType);
        // TODO: test validations
    }

    /**
     * Processes a natural language query and returns structured, actionable data as a result. This method is not idempotent, because it may cause contexts and session entity types to be updated, which in turn might affect results of future queries. If you might use [Agent Assist](https://cloud.google.com/dialogflow/docs/#aa) or other CCAI products now or in the future, consider using AnalyzeContent instead of &#x60;DetectIntent&#x60;. &#x60;AnalyzeContent&#x60; has additional functionality for Agent Assist and other CCAI products. Note: Always use agent versions for production traffic. See [Versions and environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dialogflowProjectsLocationsAgentSessionsDetectIntentTest() throws ApiException {
        String session = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudDialogflowV2beta1DetectIntentRequest googleCloudDialogflowV2beta1DetectIntentRequest = null;
        GoogleCloudDialogflowV2beta1DetectIntentResponse response = api.dialogflowProjectsLocationsAgentSessionsDetectIntent(session, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudDialogflowV2beta1DetectIntentRequest);
        // TODO: test validations
    }

    /**
     * Creates a session entity type. If the specified session entity type already exists, overrides the session entity type. This method doesn&#39;t work with Google Assistant integration. Contact Dialogflow support if you need to use session entities with Google Assistant integration.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dialogflowProjectsLocationsAgentSessionsEntityTypesCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String languageCode = null;
        GoogleCloudDialogflowV2beta1SessionEntityType googleCloudDialogflowV2beta1SessionEntityType = null;
        GoogleCloudDialogflowV2beta1SessionEntityType response = api.dialogflowProjectsLocationsAgentSessionsEntityTypesCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, languageCode, googleCloudDialogflowV2beta1SessionEntityType);
        // TODO: test validations
    }

    /**
     * Returns the list of all session entity types in the specified session. This method doesn&#39;t work with Google Assistant integration. Contact Dialogflow support if you need to use session entities with Google Assistant integration.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dialogflowProjectsLocationsAgentSessionsEntityTypesListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudDialogflowV2beta1ListSessionEntityTypesResponse response = api.dialogflowProjectsLocationsAgentSessionsEntityTypesList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Trains the specified agent. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned &#x60;Operation&#x60; type has the following method-specific fields: - &#x60;metadata&#x60;: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - &#x60;response&#x60;: An [Empty message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) Note: You should always train an agent prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dialogflowProjectsLocationsAgentTrainTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Object body = null;
        GoogleLongrunningOperation response = api.dialogflowProjectsLocationsAgentTrain(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, body);
        // TODO: test validations
    }

    /**
     * Creates an agent version. The new version points to the agent instance in the \&quot;default\&quot; environment.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dialogflowProjectsLocationsAgentVersionsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudDialogflowV2beta1Version googleCloudDialogflowV2beta1Version = null;
        GoogleCloudDialogflowV2beta1Version response = api.dialogflowProjectsLocationsAgentVersionsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudDialogflowV2beta1Version);
        // TODO: test validations
    }

    /**
     * Returns the list of all versions of the specified agent.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dialogflowProjectsLocationsAgentVersionsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudDialogflowV2beta1ListVersionsResponse response = api.dialogflowProjectsLocationsAgentVersionsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Returns the list of all answer records in the specified project in reverse chronological order.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dialogflowProjectsLocationsAnswerRecordsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudDialogflowV2beta1ListAnswerRecordsResponse response = api.dialogflowProjectsLocationsAnswerRecordsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Clears a suggestion feature from a conversation profile for the given participant role. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned &#x60;Operation&#x60; type has the following method-specific fields: - &#x60;metadata&#x60;: ClearSuggestionFeatureConfigOperationMetadata - &#x60;response&#x60;: ConversationProfile
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dialogflowProjectsLocationsConversationProfilesClearSuggestionFeatureConfigTest() throws ApiException {
        String conversationProfile = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudDialogflowV2beta1ClearSuggestionFeatureConfigRequest googleCloudDialogflowV2beta1ClearSuggestionFeatureConfigRequest = null;
        GoogleLongrunningOperation response = api.dialogflowProjectsLocationsConversationProfilesClearSuggestionFeatureConfig(conversationProfile, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudDialogflowV2beta1ClearSuggestionFeatureConfigRequest);
        // TODO: test validations
    }

    /**
     * Creates a conversation profile in the specified project. ConversationProfile.CreateTime and ConversationProfile.UpdateTime aren&#39;t populated in the response. You can retrieve them via GetConversationProfile API.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dialogflowProjectsLocationsConversationProfilesCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudDialogflowV2beta1ConversationProfile googleCloudDialogflowV2beta1ConversationProfile = null;
        GoogleCloudDialogflowV2beta1ConversationProfile response = api.dialogflowProjectsLocationsConversationProfilesCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudDialogflowV2beta1ConversationProfile);
        // TODO: test validations
    }

    /**
     * Returns the list of all conversation profiles in the specified project.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dialogflowProjectsLocationsConversationProfilesListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudDialogflowV2beta1ListConversationProfilesResponse response = api.dialogflowProjectsLocationsConversationProfilesList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Adds or updates a suggestion feature in a conversation profile. If the conversation profile contains the type of suggestion feature for the participant role, it will update it. Otherwise it will insert the suggestion feature. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned &#x60;Operation&#x60; type has the following method-specific fields: - &#x60;metadata&#x60;: SetSuggestionFeatureConfigOperationMetadata - &#x60;response&#x60;: ConversationProfile If a long running operation to add or update suggestion feature config for the same conversation profile, participant role and suggestion feature type exists, please cancel the existing long running operation before sending such request, otherwise the request will be rejected.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dialogflowProjectsLocationsConversationProfilesSetSuggestionFeatureConfigTest() throws ApiException {
        String conversationProfile = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudDialogflowV2beta1SetSuggestionFeatureConfigRequest googleCloudDialogflowV2beta1SetSuggestionFeatureConfigRequest = null;
        GoogleLongrunningOperation response = api.dialogflowProjectsLocationsConversationProfilesSetSuggestionFeatureConfig(conversationProfile, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudDialogflowV2beta1SetSuggestionFeatureConfigRequest);
        // TODO: test validations
    }

    /**
     * Completes the specified conversation. Finished conversations are purged from the database after 30 days.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dialogflowProjectsLocationsConversationsCompleteTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Object body = null;
        GoogleCloudDialogflowV2beta1Conversation response = api.dialogflowProjectsLocationsConversationsComplete(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, body);
        // TODO: test validations
    }

    /**
     * Creates a new conversation. Conversations are auto-completed after 24 hours. Conversation Lifecycle: There are two stages during a conversation: Automated Agent Stage and Assist Stage. For Automated Agent Stage, there will be a dialogflow agent responding to user queries. For Assist Stage, there&#39;s no dialogflow agent responding to user queries. But we will provide suggestions which are generated from conversation. If Conversation.conversation_profile is configured for a dialogflow agent, conversation will start from &#x60;Automated Agent Stage&#x60;, otherwise, it will start from &#x60;Assist Stage&#x60;. And during &#x60;Automated Agent Stage&#x60;, once an Intent with Intent.live_agent_handoff is triggered, conversation will transfer to Assist Stage.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dialogflowProjectsLocationsConversationsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String conversationId = null;
        GoogleCloudDialogflowV2beta1Conversation googleCloudDialogflowV2beta1Conversation = null;
        GoogleCloudDialogflowV2beta1Conversation response = api.dialogflowProjectsLocationsConversationsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, conversationId, googleCloudDialogflowV2beta1Conversation);
        // TODO: test validations
    }

    /**
     * Returns the list of all conversations in the specified project.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dialogflowProjectsLocationsConversationsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudDialogflowV2beta1ListConversationsResponse response = api.dialogflowProjectsLocationsConversationsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Batch ingests messages to conversation. Customers can use this RPC to ingest historical messages to conversation.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dialogflowProjectsLocationsConversationsMessagesBatchCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudDialogflowV2beta1BatchCreateMessagesRequest googleCloudDialogflowV2beta1BatchCreateMessagesRequest = null;
        GoogleCloudDialogflowV2beta1BatchCreateMessagesResponse response = api.dialogflowProjectsLocationsConversationsMessagesBatchCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudDialogflowV2beta1BatchCreateMessagesRequest);
        // TODO: test validations
    }

    /**
     * Lists messages that belong to a given conversation. &#x60;messages&#x60; are ordered by &#x60;create_time&#x60; in descending order. To fetch updates without duplication, send request with filter &#x60;create_time_epoch_microseconds &gt; [first item&#39;s create_time of previous request]&#x60; and empty page_token.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dialogflowProjectsLocationsConversationsMessagesListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudDialogflowV2beta1ListMessagesResponse response = api.dialogflowProjectsLocationsConversationsMessagesList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Adds a text (chat, for example), or audio (phone recording, for example) message from a participant into the conversation. Note: Always use agent versions for production traffic sent to virtual agents. See [Versions and environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dialogflowProjectsLocationsConversationsParticipantsAnalyzeContentTest() throws ApiException {
        String participant = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudDialogflowV2beta1AnalyzeContentRequest googleCloudDialogflowV2beta1AnalyzeContentRequest = null;
        GoogleCloudDialogflowV2beta1AnalyzeContentResponse response = api.dialogflowProjectsLocationsConversationsParticipantsAnalyzeContent(participant, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudDialogflowV2beta1AnalyzeContentRequest);
        // TODO: test validations
    }

    /**
     * Creates a new participant in a conversation.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dialogflowProjectsLocationsConversationsParticipantsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudDialogflowV2beta1Participant googleCloudDialogflowV2beta1Participant = null;
        GoogleCloudDialogflowV2beta1Participant response = api.dialogflowProjectsLocationsConversationsParticipantsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudDialogflowV2beta1Participant);
        // TODO: test validations
    }

    /**
     * Returns the list of all participants in the specified conversation.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dialogflowProjectsLocationsConversationsParticipantsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudDialogflowV2beta1ListParticipantsResponse response = api.dialogflowProjectsLocationsConversationsParticipantsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Gets suggested articles for a participant based on specific historical messages. Note that ListSuggestions will only list the auto-generated suggestions, while CompileSuggestion will try to compile suggestion based on the provided conversation context in the real time.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dialogflowProjectsLocationsConversationsParticipantsSuggestionsSuggestArticlesTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudDialogflowV2beta1SuggestArticlesRequest googleCloudDialogflowV2beta1SuggestArticlesRequest = null;
        GoogleCloudDialogflowV2beta1SuggestArticlesResponse response = api.dialogflowProjectsLocationsConversationsParticipantsSuggestionsSuggestArticles(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudDialogflowV2beta1SuggestArticlesRequest);
        // TODO: test validations
    }

    /**
     * Gets suggested faq answers for a participant based on specific historical messages.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dialogflowProjectsLocationsConversationsParticipantsSuggestionsSuggestFaqAnswersTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudDialogflowV2beta1SuggestFaqAnswersRequest googleCloudDialogflowV2beta1SuggestFaqAnswersRequest = null;
        GoogleCloudDialogflowV2beta1SuggestFaqAnswersResponse response = api.dialogflowProjectsLocationsConversationsParticipantsSuggestionsSuggestFaqAnswers(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudDialogflowV2beta1SuggestFaqAnswersRequest);
        // TODO: test validations
    }

    /**
     * Gets smart replies for a participant based on specific historical messages.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dialogflowProjectsLocationsConversationsParticipantsSuggestionsSuggestSmartRepliesTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudDialogflowV2beta1SuggestSmartRepliesRequest googleCloudDialogflowV2beta1SuggestSmartRepliesRequest = null;
        GoogleCloudDialogflowV2beta1SuggestSmartRepliesResponse response = api.dialogflowProjectsLocationsConversationsParticipantsSuggestionsSuggestSmartReplies(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudDialogflowV2beta1SuggestSmartRepliesRequest);
        // TODO: test validations
    }

    /**
     * Get answers for the given query based on knowledge documents.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dialogflowProjectsLocationsConversationsSuggestionsSearchKnowledgeTest() throws ApiException {
        String conversation = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudDialogflowV2beta1SearchKnowledgeRequest googleCloudDialogflowV2beta1SearchKnowledgeRequest = null;
        GoogleCloudDialogflowV2beta1SearchKnowledgeResponse response = api.dialogflowProjectsLocationsConversationsSuggestionsSearchKnowledge(conversation, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudDialogflowV2beta1SearchKnowledgeRequest);
        // TODO: test validations
    }

    /**
     * Suggest summary for a conversation based on specific historical messages. The range of the messages to be used for summary can be specified in the request.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dialogflowProjectsLocationsConversationsSuggestionsSuggestConversationSummaryTest() throws ApiException {
        String conversation = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudDialogflowV2beta1SuggestConversationSummaryRequest googleCloudDialogflowV2beta1SuggestConversationSummaryRequest = null;
        GoogleCloudDialogflowV2beta1SuggestConversationSummaryResponse response = api.dialogflowProjectsLocationsConversationsSuggestionsSuggestConversationSummary(conversation, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudDialogflowV2beta1SuggestConversationSummaryRequest);
        // TODO: test validations
    }

    /**
     * Deletes the specified agent.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dialogflowProjectsLocationsDeleteAgentTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Object response = api.dialogflowProjectsLocationsDeleteAgent(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType);
        // TODO: test validations
    }

    /**
     * Retrieves the specified agent.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dialogflowProjectsLocationsGetAgentTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudDialogflowV2beta1Agent response = api.dialogflowProjectsLocationsGetAgent(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType);
        // TODO: test validations
    }

    /**
     * Creates a knowledge base. Note: The &#x60;projects.agent.knowledgeBases&#x60; resource is deprecated; only use &#x60;projects.knowledgeBases&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dialogflowProjectsLocationsKnowledgeBasesCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudDialogflowV2beta1KnowledgeBase googleCloudDialogflowV2beta1KnowledgeBase = null;
        GoogleCloudDialogflowV2beta1KnowledgeBase response = api.dialogflowProjectsLocationsKnowledgeBasesCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudDialogflowV2beta1KnowledgeBase);
        // TODO: test validations
    }

    /**
     * Creates a new document. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned &#x60;Operation&#x60; type has the following method-specific fields: - &#x60;metadata&#x60;: KnowledgeOperationMetadata - &#x60;response&#x60;: Document Note: The &#x60;projects.agent.knowledgeBases.documents&#x60; resource is deprecated; only use &#x60;projects.knowledgeBases.documents&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dialogflowProjectsLocationsKnowledgeBasesDocumentsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Boolean importGcsCustomMetadata = null;
        GoogleCloudDialogflowV2beta1Document googleCloudDialogflowV2beta1Document = null;
        GoogleLongrunningOperation response = api.dialogflowProjectsLocationsKnowledgeBasesDocumentsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, importGcsCustomMetadata, googleCloudDialogflowV2beta1Document);
        // TODO: test validations
    }

    /**
     * Deletes the specified document. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned &#x60;Operation&#x60; type has the following method-specific fields: - &#x60;metadata&#x60;: KnowledgeOperationMetadata - &#x60;response&#x60;: An [Empty message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) Note: The &#x60;projects.agent.knowledgeBases.documents&#x60; resource is deprecated; only use &#x60;projects.knowledgeBases.documents&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dialogflowProjectsLocationsKnowledgeBasesDocumentsDeleteTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Boolean force = null;
        GoogleLongrunningOperation response = api.dialogflowProjectsLocationsKnowledgeBasesDocumentsDelete(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, force);
        // TODO: test validations
    }

    /**
     * Create documents by importing data from external sources. Dialogflow supports up to 350 documents in each request. If you try to import more, Dialogflow will return an error. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned &#x60;Operation&#x60; type has the following method-specific fields: - &#x60;metadata&#x60;: KnowledgeOperationMetadata - &#x60;response&#x60;: ImportDocumentsResponse
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dialogflowProjectsLocationsKnowledgeBasesDocumentsImportTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudDialogflowV2beta1ImportDocumentsRequest googleCloudDialogflowV2beta1ImportDocumentsRequest = null;
        GoogleLongrunningOperation response = api.dialogflowProjectsLocationsKnowledgeBasesDocumentsImport(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudDialogflowV2beta1ImportDocumentsRequest);
        // TODO: test validations
    }

    /**
     * Returns the list of all documents of the knowledge base. Note: The &#x60;projects.agent.knowledgeBases.documents&#x60; resource is deprecated; only use &#x60;projects.knowledgeBases.documents&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dialogflowProjectsLocationsKnowledgeBasesDocumentsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudDialogflowV2beta1ListDocumentsResponse response = api.dialogflowProjectsLocationsKnowledgeBasesDocumentsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Updates the specified document. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned &#x60;Operation&#x60; type has the following method-specific fields: - &#x60;metadata&#x60;: KnowledgeOperationMetadata - &#x60;response&#x60;: Document Note: The &#x60;projects.agent.knowledgeBases.documents&#x60; resource is deprecated; only use &#x60;projects.knowledgeBases.documents&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dialogflowProjectsLocationsKnowledgeBasesDocumentsPatchTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String updateMask = null;
        String languageCode = null;
        GoogleCloudDialogflowV2beta1Document googleCloudDialogflowV2beta1Document = null;
        GoogleLongrunningOperation response = api.dialogflowProjectsLocationsKnowledgeBasesDocumentsPatch(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, updateMask, languageCode, googleCloudDialogflowV2beta1Document);
        // TODO: test validations
    }

    /**
     * Reloads the specified document from its specified source, content_uri or content. The previously loaded content of the document will be deleted. Note: Even when the content of the document has not changed, there still may be side effects because of internal implementation changes. Note: If the document source is Google Cloud Storage URI, its metadata will be replaced with the custom metadata from Google Cloud Storage if the &#x60;import_gcs_custom_metadata&#x60; field is set to true in the request. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned &#x60;Operation&#x60; type has the following method-specific fields: - &#x60;metadata&#x60;: KnowledgeOperationMetadata - &#x60;response&#x60;: Document Note: The &#x60;projects.agent.knowledgeBases.documents&#x60; resource is deprecated; only use &#x60;projects.knowledgeBases.documents&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dialogflowProjectsLocationsKnowledgeBasesDocumentsReloadTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudDialogflowV2beta1ReloadDocumentRequest googleCloudDialogflowV2beta1ReloadDocumentRequest = null;
        GoogleLongrunningOperation response = api.dialogflowProjectsLocationsKnowledgeBasesDocumentsReload(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudDialogflowV2beta1ReloadDocumentRequest);
        // TODO: test validations
    }

    /**
     * Returns the list of all knowledge bases of the specified agent. Note: The &#x60;projects.agent.knowledgeBases&#x60; resource is deprecated; only use &#x60;projects.knowledgeBases&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dialogflowProjectsLocationsKnowledgeBasesListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudDialogflowV2beta1ListKnowledgeBasesResponse response = api.dialogflowProjectsLocationsKnowledgeBasesList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Lists information about the supported locations for this service.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dialogflowProjectsLocationsListTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudLocationListLocationsResponse response = api.dialogflowProjectsLocationsList(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Creates/updates the specified agent. Note: You should always train an agent prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dialogflowProjectsLocationsSetAgentTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String updateMask = null;
        GoogleCloudDialogflowV2beta1Agent googleCloudDialogflowV2beta1Agent = null;
        GoogleCloudDialogflowV2beta1Agent response = api.dialogflowProjectsLocationsSetAgent(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, updateMask, googleCloudDialogflowV2beta1Agent);
        // TODO: test validations
    }

    /**
     * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn&#39;t support this method, it returns &#x60;google.rpc.Code.UNIMPLEMENTED&#x60;. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to &#x60;Code.CANCELLED&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dialogflowProjectsOperationsCancelTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Object response = api.dialogflowProjectsOperationsCancel(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType);
        // TODO: test validations
    }

    /**
     * Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dialogflowProjectsOperationsGetTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String intentView = null;
        String languageCode = null;
        GoogleLongrunningOperation response = api.dialogflowProjectsOperationsGet(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, intentView, languageCode);
        // TODO: test validations
    }

    /**
     * Lists operations that match the specified filter in the request. If the server doesn&#39;t support this method, it returns &#x60;UNIMPLEMENTED&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dialogflowProjectsOperationsListTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleLongrunningListOperationsResponse response = api.dialogflowProjectsOperationsList(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Generates and returns a summary for a conversation that does not have a resource created for it.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dialogflowProjectsSuggestionsGenerateStatelessSummaryTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudDialogflowV2beta1GenerateStatelessSummaryRequest googleCloudDialogflowV2beta1GenerateStatelessSummaryRequest = null;
        GoogleCloudDialogflowV2beta1GenerateStatelessSummaryResponse response = api.dialogflowProjectsSuggestionsGenerateStatelessSummary(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudDialogflowV2beta1GenerateStatelessSummaryRequest);
        // TODO: test validations
    }

    /**
     * Get answers for the given query based on knowledge documents.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dialogflowProjectsSuggestionsSearchKnowledgeTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudDialogflowV2beta1SearchKnowledgeRequest googleCloudDialogflowV2beta1SearchKnowledgeRequest = null;
        GoogleCloudDialogflowV2beta1SearchKnowledgeResponse response = api.dialogflowProjectsSuggestionsSearchKnowledge(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudDialogflowV2beta1SearchKnowledgeRequest);
        // TODO: test validations
    }

}
