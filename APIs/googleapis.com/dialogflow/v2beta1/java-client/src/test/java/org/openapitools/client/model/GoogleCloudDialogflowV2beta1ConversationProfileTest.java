/*
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1AutomatedAgentConfig;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1HumanAgentAssistantConfig;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1HumanAgentHandoffConfig;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1LoggingConfig;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1NotificationConfig;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1SpeechToTextConfig;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1SynthesizeSpeechConfig;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for GoogleCloudDialogflowV2beta1ConversationProfile
 */
public class GoogleCloudDialogflowV2beta1ConversationProfileTest {
    private final GoogleCloudDialogflowV2beta1ConversationProfile model = new GoogleCloudDialogflowV2beta1ConversationProfile();

    /**
     * Model tests for GoogleCloudDialogflowV2beta1ConversationProfile
     */
    @Test
    public void testGoogleCloudDialogflowV2beta1ConversationProfile() {
        // TODO: test GoogleCloudDialogflowV2beta1ConversationProfile
    }

    /**
     * Test the property 'automatedAgentConfig'
     */
    @Test
    public void automatedAgentConfigTest() {
        // TODO: test automatedAgentConfig
    }

    /**
     * Test the property 'createTime'
     */
    @Test
    public void createTimeTest() {
        // TODO: test createTime
    }

    /**
     * Test the property 'displayName'
     */
    @Test
    public void displayNameTest() {
        // TODO: test displayName
    }

    /**
     * Test the property 'humanAgentAssistantConfig'
     */
    @Test
    public void humanAgentAssistantConfigTest() {
        // TODO: test humanAgentAssistantConfig
    }

    /**
     * Test the property 'humanAgentHandoffConfig'
     */
    @Test
    public void humanAgentHandoffConfigTest() {
        // TODO: test humanAgentHandoffConfig
    }

    /**
     * Test the property 'languageCode'
     */
    @Test
    public void languageCodeTest() {
        // TODO: test languageCode
    }

    /**
     * Test the property 'loggingConfig'
     */
    @Test
    public void loggingConfigTest() {
        // TODO: test loggingConfig
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'newMessageEventNotificationConfig'
     */
    @Test
    public void newMessageEventNotificationConfigTest() {
        // TODO: test newMessageEventNotificationConfig
    }

    /**
     * Test the property 'notificationConfig'
     */
    @Test
    public void notificationConfigTest() {
        // TODO: test notificationConfig
    }

    /**
     * Test the property 'securitySettings'
     */
    @Test
    public void securitySettingsTest() {
        // TODO: test securitySettings
    }

    /**
     * Test the property 'sttConfig'
     */
    @Test
    public void sttConfigTest() {
        // TODO: test sttConfig
    }

    /**
     * Test the property 'timeZone'
     */
    @Test
    public void timeZoneTest() {
        // TODO: test timeZone
    }

    /**
     * Test the property 'ttsConfig'
     */
    @Test
    public void ttsConfigTest() {
        // TODO: test ttsConfig
    }

    /**
     * Test the property 'updateTime'
     */
    @Test
    public void updateTimeTest() {
        // TODO: test updateTime
    }

}
