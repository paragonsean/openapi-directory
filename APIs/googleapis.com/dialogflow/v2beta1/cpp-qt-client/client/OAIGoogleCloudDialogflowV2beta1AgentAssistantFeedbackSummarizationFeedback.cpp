/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowV2beta1AgentAssistantFeedbackSummarizationFeedback.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowV2beta1AgentAssistantFeedbackSummarizationFeedback::OAIGoogleCloudDialogflowV2beta1AgentAssistantFeedbackSummarizationFeedback(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowV2beta1AgentAssistantFeedbackSummarizationFeedback::OAIGoogleCloudDialogflowV2beta1AgentAssistantFeedbackSummarizationFeedback() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowV2beta1AgentAssistantFeedbackSummarizationFeedback::~OAIGoogleCloudDialogflowV2beta1AgentAssistantFeedbackSummarizationFeedback() {}

void OAIGoogleCloudDialogflowV2beta1AgentAssistantFeedbackSummarizationFeedback::initializeModel() {

    m_start_timestamp_isSet = false;
    m_start_timestamp_isValid = false;

    m_submit_timestamp_isSet = false;
    m_submit_timestamp_isValid = false;

    m_summary_text_isSet = false;
    m_summary_text_isValid = false;

    m_text_sections_isSet = false;
    m_text_sections_isValid = false;
}

void OAIGoogleCloudDialogflowV2beta1AgentAssistantFeedbackSummarizationFeedback::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowV2beta1AgentAssistantFeedbackSummarizationFeedback::fromJsonObject(QJsonObject json) {

    m_start_timestamp_isValid = ::OpenAPI::fromJsonValue(m_start_timestamp, json[QString("startTimestamp")]);
    m_start_timestamp_isSet = !json[QString("startTimestamp")].isNull() && m_start_timestamp_isValid;

    m_submit_timestamp_isValid = ::OpenAPI::fromJsonValue(m_submit_timestamp, json[QString("submitTimestamp")]);
    m_submit_timestamp_isSet = !json[QString("submitTimestamp")].isNull() && m_submit_timestamp_isValid;

    m_summary_text_isValid = ::OpenAPI::fromJsonValue(m_summary_text, json[QString("summaryText")]);
    m_summary_text_isSet = !json[QString("summaryText")].isNull() && m_summary_text_isValid;

    m_text_sections_isValid = ::OpenAPI::fromJsonValue(m_text_sections, json[QString("textSections")]);
    m_text_sections_isSet = !json[QString("textSections")].isNull() && m_text_sections_isValid;
}

QString OAIGoogleCloudDialogflowV2beta1AgentAssistantFeedbackSummarizationFeedback::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowV2beta1AgentAssistantFeedbackSummarizationFeedback::asJsonObject() const {
    QJsonObject obj;
    if (m_start_timestamp_isSet) {
        obj.insert(QString("startTimestamp"), ::OpenAPI::toJsonValue(m_start_timestamp));
    }
    if (m_submit_timestamp_isSet) {
        obj.insert(QString("submitTimestamp"), ::OpenAPI::toJsonValue(m_submit_timestamp));
    }
    if (m_summary_text_isSet) {
        obj.insert(QString("summaryText"), ::OpenAPI::toJsonValue(m_summary_text));
    }
    if (m_text_sections.size() > 0) {
        obj.insert(QString("textSections"), ::OpenAPI::toJsonValue(m_text_sections));
    }
    return obj;
}

QString OAIGoogleCloudDialogflowV2beta1AgentAssistantFeedbackSummarizationFeedback::getStartTimestamp() const {
    return m_start_timestamp;
}
void OAIGoogleCloudDialogflowV2beta1AgentAssistantFeedbackSummarizationFeedback::setStartTimestamp(const QString &start_timestamp) {
    m_start_timestamp = start_timestamp;
    m_start_timestamp_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1AgentAssistantFeedbackSummarizationFeedback::is_start_timestamp_Set() const{
    return m_start_timestamp_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1AgentAssistantFeedbackSummarizationFeedback::is_start_timestamp_Valid() const{
    return m_start_timestamp_isValid;
}

QString OAIGoogleCloudDialogflowV2beta1AgentAssistantFeedbackSummarizationFeedback::getSubmitTimestamp() const {
    return m_submit_timestamp;
}
void OAIGoogleCloudDialogflowV2beta1AgentAssistantFeedbackSummarizationFeedback::setSubmitTimestamp(const QString &submit_timestamp) {
    m_submit_timestamp = submit_timestamp;
    m_submit_timestamp_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1AgentAssistantFeedbackSummarizationFeedback::is_submit_timestamp_Set() const{
    return m_submit_timestamp_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1AgentAssistantFeedbackSummarizationFeedback::is_submit_timestamp_Valid() const{
    return m_submit_timestamp_isValid;
}

QString OAIGoogleCloudDialogflowV2beta1AgentAssistantFeedbackSummarizationFeedback::getSummaryText() const {
    return m_summary_text;
}
void OAIGoogleCloudDialogflowV2beta1AgentAssistantFeedbackSummarizationFeedback::setSummaryText(const QString &summary_text) {
    m_summary_text = summary_text;
    m_summary_text_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1AgentAssistantFeedbackSummarizationFeedback::is_summary_text_Set() const{
    return m_summary_text_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1AgentAssistantFeedbackSummarizationFeedback::is_summary_text_Valid() const{
    return m_summary_text_isValid;
}

QMap<QString, QString> OAIGoogleCloudDialogflowV2beta1AgentAssistantFeedbackSummarizationFeedback::getTextSections() const {
    return m_text_sections;
}
void OAIGoogleCloudDialogflowV2beta1AgentAssistantFeedbackSummarizationFeedback::setTextSections(const QMap<QString, QString> &text_sections) {
    m_text_sections = text_sections;
    m_text_sections_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1AgentAssistantFeedbackSummarizationFeedback::is_text_sections_Set() const{
    return m_text_sections_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1AgentAssistantFeedbackSummarizationFeedback::is_text_sections_Valid() const{
    return m_text_sections_isValid;
}

bool OAIGoogleCloudDialogflowV2beta1AgentAssistantFeedbackSummarizationFeedback::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_start_timestamp_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_submit_timestamp_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_summary_text_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_text_sections.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowV2beta1AgentAssistantFeedbackSummarizationFeedback::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
