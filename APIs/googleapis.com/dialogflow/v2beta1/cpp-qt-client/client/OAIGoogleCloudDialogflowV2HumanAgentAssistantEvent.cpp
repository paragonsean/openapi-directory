/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowV2HumanAgentAssistantEvent.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowV2HumanAgentAssistantEvent::OAIGoogleCloudDialogflowV2HumanAgentAssistantEvent(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowV2HumanAgentAssistantEvent::OAIGoogleCloudDialogflowV2HumanAgentAssistantEvent() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowV2HumanAgentAssistantEvent::~OAIGoogleCloudDialogflowV2HumanAgentAssistantEvent() {}

void OAIGoogleCloudDialogflowV2HumanAgentAssistantEvent::initializeModel() {

    m_conversation_isSet = false;
    m_conversation_isValid = false;

    m_participant_isSet = false;
    m_participant_isValid = false;

    m_suggestion_results_isSet = false;
    m_suggestion_results_isValid = false;
}

void OAIGoogleCloudDialogflowV2HumanAgentAssistantEvent::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowV2HumanAgentAssistantEvent::fromJsonObject(QJsonObject json) {

    m_conversation_isValid = ::OpenAPI::fromJsonValue(m_conversation, json[QString("conversation")]);
    m_conversation_isSet = !json[QString("conversation")].isNull() && m_conversation_isValid;

    m_participant_isValid = ::OpenAPI::fromJsonValue(m_participant, json[QString("participant")]);
    m_participant_isSet = !json[QString("participant")].isNull() && m_participant_isValid;

    m_suggestion_results_isValid = ::OpenAPI::fromJsonValue(m_suggestion_results, json[QString("suggestionResults")]);
    m_suggestion_results_isSet = !json[QString("suggestionResults")].isNull() && m_suggestion_results_isValid;
}

QString OAIGoogleCloudDialogflowV2HumanAgentAssistantEvent::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowV2HumanAgentAssistantEvent::asJsonObject() const {
    QJsonObject obj;
    if (m_conversation_isSet) {
        obj.insert(QString("conversation"), ::OpenAPI::toJsonValue(m_conversation));
    }
    if (m_participant_isSet) {
        obj.insert(QString("participant"), ::OpenAPI::toJsonValue(m_participant));
    }
    if (m_suggestion_results.size() > 0) {
        obj.insert(QString("suggestionResults"), ::OpenAPI::toJsonValue(m_suggestion_results));
    }
    return obj;
}

QString OAIGoogleCloudDialogflowV2HumanAgentAssistantEvent::getConversation() const {
    return m_conversation;
}
void OAIGoogleCloudDialogflowV2HumanAgentAssistantEvent::setConversation(const QString &conversation) {
    m_conversation = conversation;
    m_conversation_isSet = true;
}

bool OAIGoogleCloudDialogflowV2HumanAgentAssistantEvent::is_conversation_Set() const{
    return m_conversation_isSet;
}

bool OAIGoogleCloudDialogflowV2HumanAgentAssistantEvent::is_conversation_Valid() const{
    return m_conversation_isValid;
}

QString OAIGoogleCloudDialogflowV2HumanAgentAssistantEvent::getParticipant() const {
    return m_participant;
}
void OAIGoogleCloudDialogflowV2HumanAgentAssistantEvent::setParticipant(const QString &participant) {
    m_participant = participant;
    m_participant_isSet = true;
}

bool OAIGoogleCloudDialogflowV2HumanAgentAssistantEvent::is_participant_Set() const{
    return m_participant_isSet;
}

bool OAIGoogleCloudDialogflowV2HumanAgentAssistantEvent::is_participant_Valid() const{
    return m_participant_isValid;
}

QList<OAIGoogleCloudDialogflowV2SuggestionResult> OAIGoogleCloudDialogflowV2HumanAgentAssistantEvent::getSuggestionResults() const {
    return m_suggestion_results;
}
void OAIGoogleCloudDialogflowV2HumanAgentAssistantEvent::setSuggestionResults(const QList<OAIGoogleCloudDialogflowV2SuggestionResult> &suggestion_results) {
    m_suggestion_results = suggestion_results;
    m_suggestion_results_isSet = true;
}

bool OAIGoogleCloudDialogflowV2HumanAgentAssistantEvent::is_suggestion_results_Set() const{
    return m_suggestion_results_isSet;
}

bool OAIGoogleCloudDialogflowV2HumanAgentAssistantEvent::is_suggestion_results_Valid() const{
    return m_suggestion_results_isValid;
}

bool OAIGoogleCloudDialogflowV2HumanAgentAssistantEvent::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_conversation_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_participant_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_suggestion_results.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowV2HumanAgentAssistantEvent::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
