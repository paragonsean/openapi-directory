/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowV2beta1Environment.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowV2beta1Environment::OAIGoogleCloudDialogflowV2beta1Environment(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowV2beta1Environment::OAIGoogleCloudDialogflowV2beta1Environment() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowV2beta1Environment::~OAIGoogleCloudDialogflowV2beta1Environment() {}

void OAIGoogleCloudDialogflowV2beta1Environment::initializeModel() {

    m_agent_version_isSet = false;
    m_agent_version_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_fulfillment_isSet = false;
    m_fulfillment_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;

    m_text_to_speech_settings_isSet = false;
    m_text_to_speech_settings_isValid = false;

    m_update_time_isSet = false;
    m_update_time_isValid = false;
}

void OAIGoogleCloudDialogflowV2beta1Environment::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowV2beta1Environment::fromJsonObject(QJsonObject json) {

    m_agent_version_isValid = ::OpenAPI::fromJsonValue(m_agent_version, json[QString("agentVersion")]);
    m_agent_version_isSet = !json[QString("agentVersion")].isNull() && m_agent_version_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_fulfillment_isValid = ::OpenAPI::fromJsonValue(m_fulfillment, json[QString("fulfillment")]);
    m_fulfillment_isSet = !json[QString("fulfillment")].isNull() && m_fulfillment_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;

    m_text_to_speech_settings_isValid = ::OpenAPI::fromJsonValue(m_text_to_speech_settings, json[QString("textToSpeechSettings")]);
    m_text_to_speech_settings_isSet = !json[QString("textToSpeechSettings")].isNull() && m_text_to_speech_settings_isValid;

    m_update_time_isValid = ::OpenAPI::fromJsonValue(m_update_time, json[QString("updateTime")]);
    m_update_time_isSet = !json[QString("updateTime")].isNull() && m_update_time_isValid;
}

QString OAIGoogleCloudDialogflowV2beta1Environment::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowV2beta1Environment::asJsonObject() const {
    QJsonObject obj;
    if (m_agent_version_isSet) {
        obj.insert(QString("agentVersion"), ::OpenAPI::toJsonValue(m_agent_version));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_fulfillment.isSet()) {
        obj.insert(QString("fulfillment"), ::OpenAPI::toJsonValue(m_fulfillment));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    if (m_text_to_speech_settings.isSet()) {
        obj.insert(QString("textToSpeechSettings"), ::OpenAPI::toJsonValue(m_text_to_speech_settings));
    }
    if (m_update_time_isSet) {
        obj.insert(QString("updateTime"), ::OpenAPI::toJsonValue(m_update_time));
    }
    return obj;
}

QString OAIGoogleCloudDialogflowV2beta1Environment::getAgentVersion() const {
    return m_agent_version;
}
void OAIGoogleCloudDialogflowV2beta1Environment::setAgentVersion(const QString &agent_version) {
    m_agent_version = agent_version;
    m_agent_version_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1Environment::is_agent_version_Set() const{
    return m_agent_version_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1Environment::is_agent_version_Valid() const{
    return m_agent_version_isValid;
}

QString OAIGoogleCloudDialogflowV2beta1Environment::getDescription() const {
    return m_description;
}
void OAIGoogleCloudDialogflowV2beta1Environment::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1Environment::is_description_Set() const{
    return m_description_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1Environment::is_description_Valid() const{
    return m_description_isValid;
}

OAIGoogleCloudDialogflowV2beta1Fulfillment OAIGoogleCloudDialogflowV2beta1Environment::getFulfillment() const {
    return m_fulfillment;
}
void OAIGoogleCloudDialogflowV2beta1Environment::setFulfillment(const OAIGoogleCloudDialogflowV2beta1Fulfillment &fulfillment) {
    m_fulfillment = fulfillment;
    m_fulfillment_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1Environment::is_fulfillment_Set() const{
    return m_fulfillment_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1Environment::is_fulfillment_Valid() const{
    return m_fulfillment_isValid;
}

QString OAIGoogleCloudDialogflowV2beta1Environment::getName() const {
    return m_name;
}
void OAIGoogleCloudDialogflowV2beta1Environment::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1Environment::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1Environment::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGoogleCloudDialogflowV2beta1Environment::getState() const {
    return m_state;
}
void OAIGoogleCloudDialogflowV2beta1Environment::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1Environment::is_state_Set() const{
    return m_state_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1Environment::is_state_Valid() const{
    return m_state_isValid;
}

OAIGoogleCloudDialogflowV2beta1TextToSpeechSettings OAIGoogleCloudDialogflowV2beta1Environment::getTextToSpeechSettings() const {
    return m_text_to_speech_settings;
}
void OAIGoogleCloudDialogflowV2beta1Environment::setTextToSpeechSettings(const OAIGoogleCloudDialogflowV2beta1TextToSpeechSettings &text_to_speech_settings) {
    m_text_to_speech_settings = text_to_speech_settings;
    m_text_to_speech_settings_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1Environment::is_text_to_speech_settings_Set() const{
    return m_text_to_speech_settings_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1Environment::is_text_to_speech_settings_Valid() const{
    return m_text_to_speech_settings_isValid;
}

QString OAIGoogleCloudDialogflowV2beta1Environment::getUpdateTime() const {
    return m_update_time;
}
void OAIGoogleCloudDialogflowV2beta1Environment::setUpdateTime(const QString &update_time) {
    m_update_time = update_time;
    m_update_time_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1Environment::is_update_time_Set() const{
    return m_update_time_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1Environment::is_update_time_Valid() const{
    return m_update_time_isValid;
}

bool OAIGoogleCloudDialogflowV2beta1Environment::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_agent_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fulfillment.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_text_to_speech_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowV2beta1Environment::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
