/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowV2beta1FulfillmentGenericWebService.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowV2beta1FulfillmentGenericWebService::OAIGoogleCloudDialogflowV2beta1FulfillmentGenericWebService(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowV2beta1FulfillmentGenericWebService::OAIGoogleCloudDialogflowV2beta1FulfillmentGenericWebService() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowV2beta1FulfillmentGenericWebService::~OAIGoogleCloudDialogflowV2beta1FulfillmentGenericWebService() {}

void OAIGoogleCloudDialogflowV2beta1FulfillmentGenericWebService::initializeModel() {

    m_is_cloud_function_isSet = false;
    m_is_cloud_function_isValid = false;

    m_password_isSet = false;
    m_password_isValid = false;

    m_request_headers_isSet = false;
    m_request_headers_isValid = false;

    m_uri_isSet = false;
    m_uri_isValid = false;

    m_username_isSet = false;
    m_username_isValid = false;
}

void OAIGoogleCloudDialogflowV2beta1FulfillmentGenericWebService::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowV2beta1FulfillmentGenericWebService::fromJsonObject(QJsonObject json) {

    m_is_cloud_function_isValid = ::OpenAPI::fromJsonValue(m_is_cloud_function, json[QString("isCloudFunction")]);
    m_is_cloud_function_isSet = !json[QString("isCloudFunction")].isNull() && m_is_cloud_function_isValid;

    m_password_isValid = ::OpenAPI::fromJsonValue(m_password, json[QString("password")]);
    m_password_isSet = !json[QString("password")].isNull() && m_password_isValid;

    m_request_headers_isValid = ::OpenAPI::fromJsonValue(m_request_headers, json[QString("requestHeaders")]);
    m_request_headers_isSet = !json[QString("requestHeaders")].isNull() && m_request_headers_isValid;

    m_uri_isValid = ::OpenAPI::fromJsonValue(m_uri, json[QString("uri")]);
    m_uri_isSet = !json[QString("uri")].isNull() && m_uri_isValid;

    m_username_isValid = ::OpenAPI::fromJsonValue(m_username, json[QString("username")]);
    m_username_isSet = !json[QString("username")].isNull() && m_username_isValid;
}

QString OAIGoogleCloudDialogflowV2beta1FulfillmentGenericWebService::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowV2beta1FulfillmentGenericWebService::asJsonObject() const {
    QJsonObject obj;
    if (m_is_cloud_function_isSet) {
        obj.insert(QString("isCloudFunction"), ::OpenAPI::toJsonValue(m_is_cloud_function));
    }
    if (m_password_isSet) {
        obj.insert(QString("password"), ::OpenAPI::toJsonValue(m_password));
    }
    if (m_request_headers.size() > 0) {
        obj.insert(QString("requestHeaders"), ::OpenAPI::toJsonValue(m_request_headers));
    }
    if (m_uri_isSet) {
        obj.insert(QString("uri"), ::OpenAPI::toJsonValue(m_uri));
    }
    if (m_username_isSet) {
        obj.insert(QString("username"), ::OpenAPI::toJsonValue(m_username));
    }
    return obj;
}

bool OAIGoogleCloudDialogflowV2beta1FulfillmentGenericWebService::isIsCloudFunction() const {
    return m_is_cloud_function;
}
void OAIGoogleCloudDialogflowV2beta1FulfillmentGenericWebService::setIsCloudFunction(const bool &is_cloud_function) {
    m_is_cloud_function = is_cloud_function;
    m_is_cloud_function_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1FulfillmentGenericWebService::is_is_cloud_function_Set() const{
    return m_is_cloud_function_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1FulfillmentGenericWebService::is_is_cloud_function_Valid() const{
    return m_is_cloud_function_isValid;
}

QString OAIGoogleCloudDialogflowV2beta1FulfillmentGenericWebService::getPassword() const {
    return m_password;
}
void OAIGoogleCloudDialogflowV2beta1FulfillmentGenericWebService::setPassword(const QString &password) {
    m_password = password;
    m_password_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1FulfillmentGenericWebService::is_password_Set() const{
    return m_password_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1FulfillmentGenericWebService::is_password_Valid() const{
    return m_password_isValid;
}

QMap<QString, QString> OAIGoogleCloudDialogflowV2beta1FulfillmentGenericWebService::getRequestHeaders() const {
    return m_request_headers;
}
void OAIGoogleCloudDialogflowV2beta1FulfillmentGenericWebService::setRequestHeaders(const QMap<QString, QString> &request_headers) {
    m_request_headers = request_headers;
    m_request_headers_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1FulfillmentGenericWebService::is_request_headers_Set() const{
    return m_request_headers_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1FulfillmentGenericWebService::is_request_headers_Valid() const{
    return m_request_headers_isValid;
}

QString OAIGoogleCloudDialogflowV2beta1FulfillmentGenericWebService::getUri() const {
    return m_uri;
}
void OAIGoogleCloudDialogflowV2beta1FulfillmentGenericWebService::setUri(const QString &uri) {
    m_uri = uri;
    m_uri_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1FulfillmentGenericWebService::is_uri_Set() const{
    return m_uri_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1FulfillmentGenericWebService::is_uri_Valid() const{
    return m_uri_isValid;
}

QString OAIGoogleCloudDialogflowV2beta1FulfillmentGenericWebService::getUsername() const {
    return m_username;
}
void OAIGoogleCloudDialogflowV2beta1FulfillmentGenericWebService::setUsername(const QString &username) {
    m_username = username;
    m_username_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1FulfillmentGenericWebService::is_username_Set() const{
    return m_username_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1FulfillmentGenericWebService::is_username_Valid() const{
    return m_username_isValid;
}

bool OAIGoogleCloudDialogflowV2beta1FulfillmentGenericWebService::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_is_cloud_function_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_password_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_request_headers.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_username_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowV2beta1FulfillmentGenericWebService::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
