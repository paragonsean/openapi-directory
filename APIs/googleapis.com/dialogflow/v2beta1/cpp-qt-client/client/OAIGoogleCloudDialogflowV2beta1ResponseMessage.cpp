/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowV2beta1ResponseMessage.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowV2beta1ResponseMessage::OAIGoogleCloudDialogflowV2beta1ResponseMessage(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowV2beta1ResponseMessage::OAIGoogleCloudDialogflowV2beta1ResponseMessage() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowV2beta1ResponseMessage::~OAIGoogleCloudDialogflowV2beta1ResponseMessage() {}

void OAIGoogleCloudDialogflowV2beta1ResponseMessage::initializeModel() {

    m_end_interaction_isSet = false;
    m_end_interaction_isValid = false;

    m_live_agent_handoff_isSet = false;
    m_live_agent_handoff_isValid = false;

    m_mixed_audio_isSet = false;
    m_mixed_audio_isValid = false;

    m_payload_isSet = false;
    m_payload_isValid = false;

    m_telephony_transfer_call_isSet = false;
    m_telephony_transfer_call_isValid = false;

    m_text_isSet = false;
    m_text_isValid = false;
}

void OAIGoogleCloudDialogflowV2beta1ResponseMessage::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowV2beta1ResponseMessage::fromJsonObject(QJsonObject json) {

    m_end_interaction_isValid = ::OpenAPI::fromJsonValue(m_end_interaction, json[QString("endInteraction")]);
    m_end_interaction_isSet = !json[QString("endInteraction")].isNull() && m_end_interaction_isValid;

    m_live_agent_handoff_isValid = ::OpenAPI::fromJsonValue(m_live_agent_handoff, json[QString("liveAgentHandoff")]);
    m_live_agent_handoff_isSet = !json[QString("liveAgentHandoff")].isNull() && m_live_agent_handoff_isValid;

    m_mixed_audio_isValid = ::OpenAPI::fromJsonValue(m_mixed_audio, json[QString("mixedAudio")]);
    m_mixed_audio_isSet = !json[QString("mixedAudio")].isNull() && m_mixed_audio_isValid;

    m_payload_isValid = ::OpenAPI::fromJsonValue(m_payload, json[QString("payload")]);
    m_payload_isSet = !json[QString("payload")].isNull() && m_payload_isValid;

    m_telephony_transfer_call_isValid = ::OpenAPI::fromJsonValue(m_telephony_transfer_call, json[QString("telephonyTransferCall")]);
    m_telephony_transfer_call_isSet = !json[QString("telephonyTransferCall")].isNull() && m_telephony_transfer_call_isValid;

    m_text_isValid = ::OpenAPI::fromJsonValue(m_text, json[QString("text")]);
    m_text_isSet = !json[QString("text")].isNull() && m_text_isValid;
}

QString OAIGoogleCloudDialogflowV2beta1ResponseMessage::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowV2beta1ResponseMessage::asJsonObject() const {
    QJsonObject obj;
    if (m_end_interaction_isSet) {
        obj.insert(QString("endInteraction"), ::OpenAPI::toJsonValue(m_end_interaction));
    }
    if (m_live_agent_handoff.isSet()) {
        obj.insert(QString("liveAgentHandoff"), ::OpenAPI::toJsonValue(m_live_agent_handoff));
    }
    if (m_mixed_audio.isSet()) {
        obj.insert(QString("mixedAudio"), ::OpenAPI::toJsonValue(m_mixed_audio));
    }
    if (m_payload.size() > 0) {
        obj.insert(QString("payload"), ::OpenAPI::toJsonValue(m_payload));
    }
    if (m_telephony_transfer_call.isSet()) {
        obj.insert(QString("telephonyTransferCall"), ::OpenAPI::toJsonValue(m_telephony_transfer_call));
    }
    if (m_text.isSet()) {
        obj.insert(QString("text"), ::OpenAPI::toJsonValue(m_text));
    }
    return obj;
}

OAIObject OAIGoogleCloudDialogflowV2beta1ResponseMessage::getEndInteraction() const {
    return m_end_interaction;
}
void OAIGoogleCloudDialogflowV2beta1ResponseMessage::setEndInteraction(const OAIObject &end_interaction) {
    m_end_interaction = end_interaction;
    m_end_interaction_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1ResponseMessage::is_end_interaction_Set() const{
    return m_end_interaction_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1ResponseMessage::is_end_interaction_Valid() const{
    return m_end_interaction_isValid;
}

OAIGoogleCloudDialogflowV2beta1ResponseMessageLiveAgentHandoff OAIGoogleCloudDialogflowV2beta1ResponseMessage::getLiveAgentHandoff() const {
    return m_live_agent_handoff;
}
void OAIGoogleCloudDialogflowV2beta1ResponseMessage::setLiveAgentHandoff(const OAIGoogleCloudDialogflowV2beta1ResponseMessageLiveAgentHandoff &live_agent_handoff) {
    m_live_agent_handoff = live_agent_handoff;
    m_live_agent_handoff_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1ResponseMessage::is_live_agent_handoff_Set() const{
    return m_live_agent_handoff_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1ResponseMessage::is_live_agent_handoff_Valid() const{
    return m_live_agent_handoff_isValid;
}

OAIGoogleCloudDialogflowV2beta1ResponseMessageMixedAudio OAIGoogleCloudDialogflowV2beta1ResponseMessage::getMixedAudio() const {
    return m_mixed_audio;
}
void OAIGoogleCloudDialogflowV2beta1ResponseMessage::setMixedAudio(const OAIGoogleCloudDialogflowV2beta1ResponseMessageMixedAudio &mixed_audio) {
    m_mixed_audio = mixed_audio;
    m_mixed_audio_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1ResponseMessage::is_mixed_audio_Set() const{
    return m_mixed_audio_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1ResponseMessage::is_mixed_audio_Valid() const{
    return m_mixed_audio_isValid;
}

QMap<QString, QJsonValue> OAIGoogleCloudDialogflowV2beta1ResponseMessage::getPayload() const {
    return m_payload;
}
void OAIGoogleCloudDialogflowV2beta1ResponseMessage::setPayload(const QMap<QString, QJsonValue> &payload) {
    m_payload = payload;
    m_payload_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1ResponseMessage::is_payload_Set() const{
    return m_payload_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1ResponseMessage::is_payload_Valid() const{
    return m_payload_isValid;
}

OAIGoogleCloudDialogflowV2beta1ResponseMessageTelephonyTransferCall OAIGoogleCloudDialogflowV2beta1ResponseMessage::getTelephonyTransferCall() const {
    return m_telephony_transfer_call;
}
void OAIGoogleCloudDialogflowV2beta1ResponseMessage::setTelephonyTransferCall(const OAIGoogleCloudDialogflowV2beta1ResponseMessageTelephonyTransferCall &telephony_transfer_call) {
    m_telephony_transfer_call = telephony_transfer_call;
    m_telephony_transfer_call_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1ResponseMessage::is_telephony_transfer_call_Set() const{
    return m_telephony_transfer_call_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1ResponseMessage::is_telephony_transfer_call_Valid() const{
    return m_telephony_transfer_call_isValid;
}

OAIGoogleCloudDialogflowV2beta1ResponseMessageText OAIGoogleCloudDialogflowV2beta1ResponseMessage::getText() const {
    return m_text;
}
void OAIGoogleCloudDialogflowV2beta1ResponseMessage::setText(const OAIGoogleCloudDialogflowV2beta1ResponseMessageText &text) {
    m_text = text;
    m_text_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1ResponseMessage::is_text_Set() const{
    return m_text_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1ResponseMessage::is_text_Valid() const{
    return m_text_isValid;
}

bool OAIGoogleCloudDialogflowV2beta1ResponseMessage::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_end_interaction_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_live_agent_handoff.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_mixed_audio.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_payload.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_telephony_transfer_call.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_text.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowV2beta1ResponseMessage::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
