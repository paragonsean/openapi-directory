/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig::OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig::OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig::~OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig() {}

void OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig::initializeModel() {

    m_conversation_model_config_isSet = false;
    m_conversation_model_config_isValid = false;

    m_conversation_process_config_isSet = false;
    m_conversation_process_config_isValid = false;

    m_disable_agent_query_logging_isSet = false;
    m_disable_agent_query_logging_isValid = false;

    m_enable_conversation_augmented_query_isSet = false;
    m_enable_conversation_augmented_query_isValid = false;

    m_enable_event_based_suggestion_isSet = false;
    m_enable_event_based_suggestion_isValid = false;

    m_query_config_isSet = false;
    m_query_config_isValid = false;

    m_suggestion_feature_isSet = false;
    m_suggestion_feature_isValid = false;

    m_suggestion_trigger_settings_isSet = false;
    m_suggestion_trigger_settings_isValid = false;
}

void OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig::fromJsonObject(QJsonObject json) {

    m_conversation_model_config_isValid = ::OpenAPI::fromJsonValue(m_conversation_model_config, json[QString("conversationModelConfig")]);
    m_conversation_model_config_isSet = !json[QString("conversationModelConfig")].isNull() && m_conversation_model_config_isValid;

    m_conversation_process_config_isValid = ::OpenAPI::fromJsonValue(m_conversation_process_config, json[QString("conversationProcessConfig")]);
    m_conversation_process_config_isSet = !json[QString("conversationProcessConfig")].isNull() && m_conversation_process_config_isValid;

    m_disable_agent_query_logging_isValid = ::OpenAPI::fromJsonValue(m_disable_agent_query_logging, json[QString("disableAgentQueryLogging")]);
    m_disable_agent_query_logging_isSet = !json[QString("disableAgentQueryLogging")].isNull() && m_disable_agent_query_logging_isValid;

    m_enable_conversation_augmented_query_isValid = ::OpenAPI::fromJsonValue(m_enable_conversation_augmented_query, json[QString("enableConversationAugmentedQuery")]);
    m_enable_conversation_augmented_query_isSet = !json[QString("enableConversationAugmentedQuery")].isNull() && m_enable_conversation_augmented_query_isValid;

    m_enable_event_based_suggestion_isValid = ::OpenAPI::fromJsonValue(m_enable_event_based_suggestion, json[QString("enableEventBasedSuggestion")]);
    m_enable_event_based_suggestion_isSet = !json[QString("enableEventBasedSuggestion")].isNull() && m_enable_event_based_suggestion_isValid;

    m_query_config_isValid = ::OpenAPI::fromJsonValue(m_query_config, json[QString("queryConfig")]);
    m_query_config_isSet = !json[QString("queryConfig")].isNull() && m_query_config_isValid;

    m_suggestion_feature_isValid = ::OpenAPI::fromJsonValue(m_suggestion_feature, json[QString("suggestionFeature")]);
    m_suggestion_feature_isSet = !json[QString("suggestionFeature")].isNull() && m_suggestion_feature_isValid;

    m_suggestion_trigger_settings_isValid = ::OpenAPI::fromJsonValue(m_suggestion_trigger_settings, json[QString("suggestionTriggerSettings")]);
    m_suggestion_trigger_settings_isSet = !json[QString("suggestionTriggerSettings")].isNull() && m_suggestion_trigger_settings_isValid;
}

QString OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_conversation_model_config.isSet()) {
        obj.insert(QString("conversationModelConfig"), ::OpenAPI::toJsonValue(m_conversation_model_config));
    }
    if (m_conversation_process_config.isSet()) {
        obj.insert(QString("conversationProcessConfig"), ::OpenAPI::toJsonValue(m_conversation_process_config));
    }
    if (m_disable_agent_query_logging_isSet) {
        obj.insert(QString("disableAgentQueryLogging"), ::OpenAPI::toJsonValue(m_disable_agent_query_logging));
    }
    if (m_enable_conversation_augmented_query_isSet) {
        obj.insert(QString("enableConversationAugmentedQuery"), ::OpenAPI::toJsonValue(m_enable_conversation_augmented_query));
    }
    if (m_enable_event_based_suggestion_isSet) {
        obj.insert(QString("enableEventBasedSuggestion"), ::OpenAPI::toJsonValue(m_enable_event_based_suggestion));
    }
    if (m_query_config.isSet()) {
        obj.insert(QString("queryConfig"), ::OpenAPI::toJsonValue(m_query_config));
    }
    if (m_suggestion_feature.isSet()) {
        obj.insert(QString("suggestionFeature"), ::OpenAPI::toJsonValue(m_suggestion_feature));
    }
    if (m_suggestion_trigger_settings.isSet()) {
        obj.insert(QString("suggestionTriggerSettings"), ::OpenAPI::toJsonValue(m_suggestion_trigger_settings));
    }
    return obj;
}

OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigConversationModelConfig OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig::getConversationModelConfig() const {
    return m_conversation_model_config;
}
void OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig::setConversationModelConfig(const OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigConversationModelConfig &conversation_model_config) {
    m_conversation_model_config = conversation_model_config;
    m_conversation_model_config_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig::is_conversation_model_config_Set() const{
    return m_conversation_model_config_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig::is_conversation_model_config_Valid() const{
    return m_conversation_model_config_isValid;
}

OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigConversationProcessConfig OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig::getConversationProcessConfig() const {
    return m_conversation_process_config;
}
void OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig::setConversationProcessConfig(const OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigConversationProcessConfig &conversation_process_config) {
    m_conversation_process_config = conversation_process_config;
    m_conversation_process_config_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig::is_conversation_process_config_Set() const{
    return m_conversation_process_config_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig::is_conversation_process_config_Valid() const{
    return m_conversation_process_config_isValid;
}

bool OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig::isDisableAgentQueryLogging() const {
    return m_disable_agent_query_logging;
}
void OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig::setDisableAgentQueryLogging(const bool &disable_agent_query_logging) {
    m_disable_agent_query_logging = disable_agent_query_logging;
    m_disable_agent_query_logging_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig::is_disable_agent_query_logging_Set() const{
    return m_disable_agent_query_logging_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig::is_disable_agent_query_logging_Valid() const{
    return m_disable_agent_query_logging_isValid;
}

bool OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig::isEnableConversationAugmentedQuery() const {
    return m_enable_conversation_augmented_query;
}
void OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig::setEnableConversationAugmentedQuery(const bool &enable_conversation_augmented_query) {
    m_enable_conversation_augmented_query = enable_conversation_augmented_query;
    m_enable_conversation_augmented_query_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig::is_enable_conversation_augmented_query_Set() const{
    return m_enable_conversation_augmented_query_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig::is_enable_conversation_augmented_query_Valid() const{
    return m_enable_conversation_augmented_query_isValid;
}

bool OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig::isEnableEventBasedSuggestion() const {
    return m_enable_event_based_suggestion;
}
void OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig::setEnableEventBasedSuggestion(const bool &enable_event_based_suggestion) {
    m_enable_event_based_suggestion = enable_event_based_suggestion;
    m_enable_event_based_suggestion_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig::is_enable_event_based_suggestion_Set() const{
    return m_enable_event_based_suggestion_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig::is_enable_event_based_suggestion_Valid() const{
    return m_enable_event_based_suggestion_isValid;
}

OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfig OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig::getQueryConfig() const {
    return m_query_config;
}
void OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig::setQueryConfig(const OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfig &query_config) {
    m_query_config = query_config;
    m_query_config_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig::is_query_config_Set() const{
    return m_query_config_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig::is_query_config_Valid() const{
    return m_query_config_isValid;
}

OAIGoogleCloudDialogflowV2beta1SuggestionFeature OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig::getSuggestionFeature() const {
    return m_suggestion_feature;
}
void OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig::setSuggestionFeature(const OAIGoogleCloudDialogflowV2beta1SuggestionFeature &suggestion_feature) {
    m_suggestion_feature = suggestion_feature;
    m_suggestion_feature_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig::is_suggestion_feature_Set() const{
    return m_suggestion_feature_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig::is_suggestion_feature_Valid() const{
    return m_suggestion_feature_isValid;
}

OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionTriggerSettings OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig::getSuggestionTriggerSettings() const {
    return m_suggestion_trigger_settings;
}
void OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig::setSuggestionTriggerSettings(const OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionTriggerSettings &suggestion_trigger_settings) {
    m_suggestion_trigger_settings = suggestion_trigger_settings;
    m_suggestion_trigger_settings_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig::is_suggestion_trigger_settings_Set() const{
    return m_suggestion_trigger_settings_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig::is_suggestion_trigger_settings_Valid() const{
    return m_suggestion_trigger_settings_isValid;
}

bool OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_conversation_model_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_conversation_process_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_disable_agent_query_logging_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enable_conversation_augmented_query_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enable_event_based_suggestion_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_query_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_suggestion_feature.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_suggestion_trigger_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
