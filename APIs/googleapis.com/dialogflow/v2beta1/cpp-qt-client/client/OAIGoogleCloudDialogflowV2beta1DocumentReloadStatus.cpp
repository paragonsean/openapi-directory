/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowV2beta1DocumentReloadStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowV2beta1DocumentReloadStatus::OAIGoogleCloudDialogflowV2beta1DocumentReloadStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowV2beta1DocumentReloadStatus::OAIGoogleCloudDialogflowV2beta1DocumentReloadStatus() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowV2beta1DocumentReloadStatus::~OAIGoogleCloudDialogflowV2beta1DocumentReloadStatus() {}

void OAIGoogleCloudDialogflowV2beta1DocumentReloadStatus::initializeModel() {

    m_status_isSet = false;
    m_status_isValid = false;

    m_time_isSet = false;
    m_time_isValid = false;
}

void OAIGoogleCloudDialogflowV2beta1DocumentReloadStatus::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowV2beta1DocumentReloadStatus::fromJsonObject(QJsonObject json) {

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_time_isValid = ::OpenAPI::fromJsonValue(m_time, json[QString("time")]);
    m_time_isSet = !json[QString("time")].isNull() && m_time_isValid;
}

QString OAIGoogleCloudDialogflowV2beta1DocumentReloadStatus::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowV2beta1DocumentReloadStatus::asJsonObject() const {
    QJsonObject obj;
    if (m_status.isSet()) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_time_isSet) {
        obj.insert(QString("time"), ::OpenAPI::toJsonValue(m_time));
    }
    return obj;
}

OAIGoogleRpcStatus OAIGoogleCloudDialogflowV2beta1DocumentReloadStatus::getStatus() const {
    return m_status;
}
void OAIGoogleCloudDialogflowV2beta1DocumentReloadStatus::setStatus(const OAIGoogleRpcStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1DocumentReloadStatus::is_status_Set() const{
    return m_status_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1DocumentReloadStatus::is_status_Valid() const{
    return m_status_isValid;
}

QString OAIGoogleCloudDialogflowV2beta1DocumentReloadStatus::getTime() const {
    return m_time;
}
void OAIGoogleCloudDialogflowV2beta1DocumentReloadStatus::setTime(const QString &time) {
    m_time = time;
    m_time_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1DocumentReloadStatus::is_time_Set() const{
    return m_time_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1DocumentReloadStatus::is_time_Valid() const{
    return m_time_isValid;
}

bool OAIGoogleCloudDialogflowV2beta1DocumentReloadStatus::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowV2beta1DocumentReloadStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
