/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudDialogflowV2beta1DetectIntentResponse.h
 *
 * The message returned from the DetectIntent method.
 */

#ifndef OAIGoogleCloudDialogflowV2beta1DetectIntentResponse_H
#define OAIGoogleCloudDialogflowV2beta1DetectIntentResponse_H

#include <QJsonObject>

#include "OAIGoogleCloudDialogflowV2beta1OutputAudioConfig.h"
#include "OAIGoogleCloudDialogflowV2beta1QueryResult.h"
#include "OAIGoogleRpcStatus.h"
#include <QByteArray>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleCloudDialogflowV2beta1QueryResult;
class OAIGoogleCloudDialogflowV2beta1OutputAudioConfig;
class OAIGoogleRpcStatus;

class OAIGoogleCloudDialogflowV2beta1DetectIntentResponse : public OAIObject {
public:
    OAIGoogleCloudDialogflowV2beta1DetectIntentResponse();
    OAIGoogleCloudDialogflowV2beta1DetectIntentResponse(QString json);
    ~OAIGoogleCloudDialogflowV2beta1DetectIntentResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIGoogleCloudDialogflowV2beta1QueryResult> getAlternativeQueryResults() const;
    void setAlternativeQueryResults(const QList<OAIGoogleCloudDialogflowV2beta1QueryResult> &alternative_query_results);
    bool is_alternative_query_results_Set() const;
    bool is_alternative_query_results_Valid() const;

    QByteArray getOutputAudio() const;
    void setOutputAudio(const QByteArray &output_audio);
    bool is_output_audio_Set() const;
    bool is_output_audio_Valid() const;

    OAIGoogleCloudDialogflowV2beta1OutputAudioConfig getOutputAudioConfig() const;
    void setOutputAudioConfig(const OAIGoogleCloudDialogflowV2beta1OutputAudioConfig &output_audio_config);
    bool is_output_audio_config_Set() const;
    bool is_output_audio_config_Valid() const;

    OAIGoogleCloudDialogflowV2beta1QueryResult getQueryResult() const;
    void setQueryResult(const OAIGoogleCloudDialogflowV2beta1QueryResult &query_result);
    bool is_query_result_Set() const;
    bool is_query_result_Valid() const;

    QString getResponseId() const;
    void setResponseId(const QString &response_id);
    bool is_response_id_Set() const;
    bool is_response_id_Valid() const;

    OAIGoogleRpcStatus getWebhookStatus() const;
    void setWebhookStatus(const OAIGoogleRpcStatus &webhook_status);
    bool is_webhook_status_Set() const;
    bool is_webhook_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIGoogleCloudDialogflowV2beta1QueryResult> m_alternative_query_results;
    bool m_alternative_query_results_isSet;
    bool m_alternative_query_results_isValid;

    QByteArray m_output_audio;
    bool m_output_audio_isSet;
    bool m_output_audio_isValid;

    OAIGoogleCloudDialogflowV2beta1OutputAudioConfig m_output_audio_config;
    bool m_output_audio_config_isSet;
    bool m_output_audio_config_isValid;

    OAIGoogleCloudDialogflowV2beta1QueryResult m_query_result;
    bool m_query_result_isSet;
    bool m_query_result_isValid;

    QString m_response_id;
    bool m_response_id_isSet;
    bool m_response_id_isValid;

    OAIGoogleRpcStatus m_webhook_status;
    bool m_webhook_status_isSet;
    bool m_webhook_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudDialogflowV2beta1DetectIntentResponse)

#endif // OAIGoogleCloudDialogflowV2beta1DetectIntentResponse_H
