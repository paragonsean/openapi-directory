/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowV2beta1SuggestionInput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowV2beta1SuggestionInput::OAIGoogleCloudDialogflowV2beta1SuggestionInput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowV2beta1SuggestionInput::OAIGoogleCloudDialogflowV2beta1SuggestionInput() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowV2beta1SuggestionInput::~OAIGoogleCloudDialogflowV2beta1SuggestionInput() {}

void OAIGoogleCloudDialogflowV2beta1SuggestionInput::initializeModel() {

    m_answer_record_isSet = false;
    m_answer_record_isValid = false;

    m_intent_input_isSet = false;
    m_intent_input_isValid = false;

    m_parameters_isSet = false;
    m_parameters_isValid = false;

    m_text_override_isSet = false;
    m_text_override_isValid = false;
}

void OAIGoogleCloudDialogflowV2beta1SuggestionInput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowV2beta1SuggestionInput::fromJsonObject(QJsonObject json) {

    m_answer_record_isValid = ::OpenAPI::fromJsonValue(m_answer_record, json[QString("answerRecord")]);
    m_answer_record_isSet = !json[QString("answerRecord")].isNull() && m_answer_record_isValid;

    m_intent_input_isValid = ::OpenAPI::fromJsonValue(m_intent_input, json[QString("intentInput")]);
    m_intent_input_isSet = !json[QString("intentInput")].isNull() && m_intent_input_isValid;

    m_parameters_isValid = ::OpenAPI::fromJsonValue(m_parameters, json[QString("parameters")]);
    m_parameters_isSet = !json[QString("parameters")].isNull() && m_parameters_isValid;

    m_text_override_isValid = ::OpenAPI::fromJsonValue(m_text_override, json[QString("textOverride")]);
    m_text_override_isSet = !json[QString("textOverride")].isNull() && m_text_override_isValid;
}

QString OAIGoogleCloudDialogflowV2beta1SuggestionInput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowV2beta1SuggestionInput::asJsonObject() const {
    QJsonObject obj;
    if (m_answer_record_isSet) {
        obj.insert(QString("answerRecord"), ::OpenAPI::toJsonValue(m_answer_record));
    }
    if (m_intent_input.isSet()) {
        obj.insert(QString("intentInput"), ::OpenAPI::toJsonValue(m_intent_input));
    }
    if (m_parameters.size() > 0) {
        obj.insert(QString("parameters"), ::OpenAPI::toJsonValue(m_parameters));
    }
    if (m_text_override.isSet()) {
        obj.insert(QString("textOverride"), ::OpenAPI::toJsonValue(m_text_override));
    }
    return obj;
}

QString OAIGoogleCloudDialogflowV2beta1SuggestionInput::getAnswerRecord() const {
    return m_answer_record;
}
void OAIGoogleCloudDialogflowV2beta1SuggestionInput::setAnswerRecord(const QString &answer_record) {
    m_answer_record = answer_record;
    m_answer_record_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1SuggestionInput::is_answer_record_Set() const{
    return m_answer_record_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1SuggestionInput::is_answer_record_Valid() const{
    return m_answer_record_isValid;
}

OAIGoogleCloudDialogflowV2beta1IntentInput OAIGoogleCloudDialogflowV2beta1SuggestionInput::getIntentInput() const {
    return m_intent_input;
}
void OAIGoogleCloudDialogflowV2beta1SuggestionInput::setIntentInput(const OAIGoogleCloudDialogflowV2beta1IntentInput &intent_input) {
    m_intent_input = intent_input;
    m_intent_input_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1SuggestionInput::is_intent_input_Set() const{
    return m_intent_input_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1SuggestionInput::is_intent_input_Valid() const{
    return m_intent_input_isValid;
}

QMap<QString, QJsonValue> OAIGoogleCloudDialogflowV2beta1SuggestionInput::getParameters() const {
    return m_parameters;
}
void OAIGoogleCloudDialogflowV2beta1SuggestionInput::setParameters(const QMap<QString, QJsonValue> &parameters) {
    m_parameters = parameters;
    m_parameters_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1SuggestionInput::is_parameters_Set() const{
    return m_parameters_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1SuggestionInput::is_parameters_Valid() const{
    return m_parameters_isValid;
}

OAIGoogleCloudDialogflowV2beta1TextInput OAIGoogleCloudDialogflowV2beta1SuggestionInput::getTextOverride() const {
    return m_text_override;
}
void OAIGoogleCloudDialogflowV2beta1SuggestionInput::setTextOverride(const OAIGoogleCloudDialogflowV2beta1TextInput &text_override) {
    m_text_override = text_override;
    m_text_override_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1SuggestionInput::is_text_override_Set() const{
    return m_text_override_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1SuggestionInput::is_text_override_Valid() const{
    return m_text_override_isValid;
}

bool OAIGoogleCloudDialogflowV2beta1SuggestionInput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_answer_record_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_intent_input.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_parameters.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_text_override.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowV2beta1SuggestionInput::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
