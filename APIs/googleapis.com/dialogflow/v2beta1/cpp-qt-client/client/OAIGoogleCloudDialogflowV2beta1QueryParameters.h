/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudDialogflowV2beta1QueryParameters.h
 *
 * Represents the parameters of the conversational query.
 */

#ifndef OAIGoogleCloudDialogflowV2beta1QueryParameters_H
#define OAIGoogleCloudDialogflowV2beta1QueryParameters_H

#include <QJsonObject>

#include "OAIGoogleCloudDialogflowV2beta1Context.h"
#include "OAIGoogleCloudDialogflowV2beta1SentimentAnalysisRequestConfig.h"
#include "OAIGoogleCloudDialogflowV2beta1SessionEntityType.h"
#include "OAIGoogleCloudDialogflowV2beta1SubAgent.h"
#include "OAIGoogleTypeLatLng.h"
#include <QJsonValue>
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleCloudDialogflowV2beta1Context;
class OAIGoogleTypeLatLng;
class OAIGoogleCloudDialogflowV2beta1SentimentAnalysisRequestConfig;
class OAIGoogleCloudDialogflowV2beta1SessionEntityType;
class OAIGoogleCloudDialogflowV2beta1SubAgent;

class OAIGoogleCloudDialogflowV2beta1QueryParameters : public OAIObject {
public:
    OAIGoogleCloudDialogflowV2beta1QueryParameters();
    OAIGoogleCloudDialogflowV2beta1QueryParameters(QString json);
    ~OAIGoogleCloudDialogflowV2beta1QueryParameters() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIGoogleCloudDialogflowV2beta1Context> getContexts() const;
    void setContexts(const QList<OAIGoogleCloudDialogflowV2beta1Context> &contexts);
    bool is_contexts_Set() const;
    bool is_contexts_Valid() const;

    OAIGoogleTypeLatLng getGeoLocation() const;
    void setGeoLocation(const OAIGoogleTypeLatLng &geo_location);
    bool is_geo_location_Set() const;
    bool is_geo_location_Valid() const;

    QList<QString> getKnowledgeBaseNames() const;
    void setKnowledgeBaseNames(const QList<QString> &knowledge_base_names);
    bool is_knowledge_base_names_Set() const;
    bool is_knowledge_base_names_Valid() const;

    QMap<QString, QJsonValue> getPayload() const;
    void setPayload(const QMap<QString, QJsonValue> &payload);
    bool is_payload_Set() const;
    bool is_payload_Valid() const;

    QString getPlatform() const;
    void setPlatform(const QString &platform);
    bool is_platform_Set() const;
    bool is_platform_Valid() const;

    bool isResetContexts() const;
    void setResetContexts(const bool &reset_contexts);
    bool is_reset_contexts_Set() const;
    bool is_reset_contexts_Valid() const;

    OAIGoogleCloudDialogflowV2beta1SentimentAnalysisRequestConfig getSentimentAnalysisRequestConfig() const;
    void setSentimentAnalysisRequestConfig(const OAIGoogleCloudDialogflowV2beta1SentimentAnalysisRequestConfig &sentiment_analysis_request_config);
    bool is_sentiment_analysis_request_config_Set() const;
    bool is_sentiment_analysis_request_config_Valid() const;

    QList<OAIGoogleCloudDialogflowV2beta1SessionEntityType> getSessionEntityTypes() const;
    void setSessionEntityTypes(const QList<OAIGoogleCloudDialogflowV2beta1SessionEntityType> &session_entity_types);
    bool is_session_entity_types_Set() const;
    bool is_session_entity_types_Valid() const;

    QList<OAIGoogleCloudDialogflowV2beta1SubAgent> getSubAgents() const;
    void setSubAgents(const QList<OAIGoogleCloudDialogflowV2beta1SubAgent> &sub_agents);
    bool is_sub_agents_Set() const;
    bool is_sub_agents_Valid() const;

    QString getTimeZone() const;
    void setTimeZone(const QString &time_zone);
    bool is_time_zone_Set() const;
    bool is_time_zone_Valid() const;

    QMap<QString, QString> getWebhookHeaders() const;
    void setWebhookHeaders(const QMap<QString, QString> &webhook_headers);
    bool is_webhook_headers_Set() const;
    bool is_webhook_headers_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIGoogleCloudDialogflowV2beta1Context> m_contexts;
    bool m_contexts_isSet;
    bool m_contexts_isValid;

    OAIGoogleTypeLatLng m_geo_location;
    bool m_geo_location_isSet;
    bool m_geo_location_isValid;

    QList<QString> m_knowledge_base_names;
    bool m_knowledge_base_names_isSet;
    bool m_knowledge_base_names_isValid;

    QMap<QString, QJsonValue> m_payload;
    bool m_payload_isSet;
    bool m_payload_isValid;

    QString m_platform;
    bool m_platform_isSet;
    bool m_platform_isValid;

    bool m_reset_contexts;
    bool m_reset_contexts_isSet;
    bool m_reset_contexts_isValid;

    OAIGoogleCloudDialogflowV2beta1SentimentAnalysisRequestConfig m_sentiment_analysis_request_config;
    bool m_sentiment_analysis_request_config_isSet;
    bool m_sentiment_analysis_request_config_isValid;

    QList<OAIGoogleCloudDialogflowV2beta1SessionEntityType> m_session_entity_types;
    bool m_session_entity_types_isSet;
    bool m_session_entity_types_isValid;

    QList<OAIGoogleCloudDialogflowV2beta1SubAgent> m_sub_agents;
    bool m_sub_agents_isSet;
    bool m_sub_agents_isValid;

    QString m_time_zone;
    bool m_time_zone_isSet;
    bool m_time_zone_isValid;

    QMap<QString, QString> m_webhook_headers;
    bool m_webhook_headers_isSet;
    bool m_webhook_headers_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudDialogflowV2beta1QueryParameters)

#endif // OAIGoogleCloudDialogflowV2beta1QueryParameters_H
