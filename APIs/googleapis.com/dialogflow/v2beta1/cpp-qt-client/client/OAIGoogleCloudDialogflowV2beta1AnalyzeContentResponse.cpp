/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowV2beta1AnalyzeContentResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowV2beta1AnalyzeContentResponse::OAIGoogleCloudDialogflowV2beta1AnalyzeContentResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowV2beta1AnalyzeContentResponse::OAIGoogleCloudDialogflowV2beta1AnalyzeContentResponse() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowV2beta1AnalyzeContentResponse::~OAIGoogleCloudDialogflowV2beta1AnalyzeContentResponse() {}

void OAIGoogleCloudDialogflowV2beta1AnalyzeContentResponse::initializeModel() {

    m_automated_agent_reply_isSet = false;
    m_automated_agent_reply_isValid = false;

    m_dtmf_parameters_isSet = false;
    m_dtmf_parameters_isValid = false;

    m_end_user_suggestion_results_isSet = false;
    m_end_user_suggestion_results_isValid = false;

    m_human_agent_suggestion_results_isSet = false;
    m_human_agent_suggestion_results_isValid = false;

    m_message_isSet = false;
    m_message_isValid = false;

    m_reply_audio_isSet = false;
    m_reply_audio_isValid = false;

    m_reply_text_isSet = false;
    m_reply_text_isValid = false;
}

void OAIGoogleCloudDialogflowV2beta1AnalyzeContentResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowV2beta1AnalyzeContentResponse::fromJsonObject(QJsonObject json) {

    m_automated_agent_reply_isValid = ::OpenAPI::fromJsonValue(m_automated_agent_reply, json[QString("automatedAgentReply")]);
    m_automated_agent_reply_isSet = !json[QString("automatedAgentReply")].isNull() && m_automated_agent_reply_isValid;

    m_dtmf_parameters_isValid = ::OpenAPI::fromJsonValue(m_dtmf_parameters, json[QString("dtmfParameters")]);
    m_dtmf_parameters_isSet = !json[QString("dtmfParameters")].isNull() && m_dtmf_parameters_isValid;

    m_end_user_suggestion_results_isValid = ::OpenAPI::fromJsonValue(m_end_user_suggestion_results, json[QString("endUserSuggestionResults")]);
    m_end_user_suggestion_results_isSet = !json[QString("endUserSuggestionResults")].isNull() && m_end_user_suggestion_results_isValid;

    m_human_agent_suggestion_results_isValid = ::OpenAPI::fromJsonValue(m_human_agent_suggestion_results, json[QString("humanAgentSuggestionResults")]);
    m_human_agent_suggestion_results_isSet = !json[QString("humanAgentSuggestionResults")].isNull() && m_human_agent_suggestion_results_isValid;

    m_message_isValid = ::OpenAPI::fromJsonValue(m_message, json[QString("message")]);
    m_message_isSet = !json[QString("message")].isNull() && m_message_isValid;

    m_reply_audio_isValid = ::OpenAPI::fromJsonValue(m_reply_audio, json[QString("replyAudio")]);
    m_reply_audio_isSet = !json[QString("replyAudio")].isNull() && m_reply_audio_isValid;

    m_reply_text_isValid = ::OpenAPI::fromJsonValue(m_reply_text, json[QString("replyText")]);
    m_reply_text_isSet = !json[QString("replyText")].isNull() && m_reply_text_isValid;
}

QString OAIGoogleCloudDialogflowV2beta1AnalyzeContentResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowV2beta1AnalyzeContentResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_automated_agent_reply.isSet()) {
        obj.insert(QString("automatedAgentReply"), ::OpenAPI::toJsonValue(m_automated_agent_reply));
    }
    if (m_dtmf_parameters.isSet()) {
        obj.insert(QString("dtmfParameters"), ::OpenAPI::toJsonValue(m_dtmf_parameters));
    }
    if (m_end_user_suggestion_results.size() > 0) {
        obj.insert(QString("endUserSuggestionResults"), ::OpenAPI::toJsonValue(m_end_user_suggestion_results));
    }
    if (m_human_agent_suggestion_results.size() > 0) {
        obj.insert(QString("humanAgentSuggestionResults"), ::OpenAPI::toJsonValue(m_human_agent_suggestion_results));
    }
    if (m_message.isSet()) {
        obj.insert(QString("message"), ::OpenAPI::toJsonValue(m_message));
    }
    if (m_reply_audio.isSet()) {
        obj.insert(QString("replyAudio"), ::OpenAPI::toJsonValue(m_reply_audio));
    }
    if (m_reply_text_isSet) {
        obj.insert(QString("replyText"), ::OpenAPI::toJsonValue(m_reply_text));
    }
    return obj;
}

OAIGoogleCloudDialogflowV2beta1AutomatedAgentReply OAIGoogleCloudDialogflowV2beta1AnalyzeContentResponse::getAutomatedAgentReply() const {
    return m_automated_agent_reply;
}
void OAIGoogleCloudDialogflowV2beta1AnalyzeContentResponse::setAutomatedAgentReply(const OAIGoogleCloudDialogflowV2beta1AutomatedAgentReply &automated_agent_reply) {
    m_automated_agent_reply = automated_agent_reply;
    m_automated_agent_reply_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1AnalyzeContentResponse::is_automated_agent_reply_Set() const{
    return m_automated_agent_reply_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1AnalyzeContentResponse::is_automated_agent_reply_Valid() const{
    return m_automated_agent_reply_isValid;
}

OAIGoogleCloudDialogflowV2beta1DtmfParameters OAIGoogleCloudDialogflowV2beta1AnalyzeContentResponse::getDtmfParameters() const {
    return m_dtmf_parameters;
}
void OAIGoogleCloudDialogflowV2beta1AnalyzeContentResponse::setDtmfParameters(const OAIGoogleCloudDialogflowV2beta1DtmfParameters &dtmf_parameters) {
    m_dtmf_parameters = dtmf_parameters;
    m_dtmf_parameters_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1AnalyzeContentResponse::is_dtmf_parameters_Set() const{
    return m_dtmf_parameters_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1AnalyzeContentResponse::is_dtmf_parameters_Valid() const{
    return m_dtmf_parameters_isValid;
}

QList<OAIGoogleCloudDialogflowV2beta1SuggestionResult> OAIGoogleCloudDialogflowV2beta1AnalyzeContentResponse::getEndUserSuggestionResults() const {
    return m_end_user_suggestion_results;
}
void OAIGoogleCloudDialogflowV2beta1AnalyzeContentResponse::setEndUserSuggestionResults(const QList<OAIGoogleCloudDialogflowV2beta1SuggestionResult> &end_user_suggestion_results) {
    m_end_user_suggestion_results = end_user_suggestion_results;
    m_end_user_suggestion_results_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1AnalyzeContentResponse::is_end_user_suggestion_results_Set() const{
    return m_end_user_suggestion_results_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1AnalyzeContentResponse::is_end_user_suggestion_results_Valid() const{
    return m_end_user_suggestion_results_isValid;
}

QList<OAIGoogleCloudDialogflowV2beta1SuggestionResult> OAIGoogleCloudDialogflowV2beta1AnalyzeContentResponse::getHumanAgentSuggestionResults() const {
    return m_human_agent_suggestion_results;
}
void OAIGoogleCloudDialogflowV2beta1AnalyzeContentResponse::setHumanAgentSuggestionResults(const QList<OAIGoogleCloudDialogflowV2beta1SuggestionResult> &human_agent_suggestion_results) {
    m_human_agent_suggestion_results = human_agent_suggestion_results;
    m_human_agent_suggestion_results_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1AnalyzeContentResponse::is_human_agent_suggestion_results_Set() const{
    return m_human_agent_suggestion_results_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1AnalyzeContentResponse::is_human_agent_suggestion_results_Valid() const{
    return m_human_agent_suggestion_results_isValid;
}

OAIGoogleCloudDialogflowV2beta1Message OAIGoogleCloudDialogflowV2beta1AnalyzeContentResponse::getMessage() const {
    return m_message;
}
void OAIGoogleCloudDialogflowV2beta1AnalyzeContentResponse::setMessage(const OAIGoogleCloudDialogflowV2beta1Message &message) {
    m_message = message;
    m_message_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1AnalyzeContentResponse::is_message_Set() const{
    return m_message_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1AnalyzeContentResponse::is_message_Valid() const{
    return m_message_isValid;
}

OAIGoogleCloudDialogflowV2beta1OutputAudio OAIGoogleCloudDialogflowV2beta1AnalyzeContentResponse::getReplyAudio() const {
    return m_reply_audio;
}
void OAIGoogleCloudDialogflowV2beta1AnalyzeContentResponse::setReplyAudio(const OAIGoogleCloudDialogflowV2beta1OutputAudio &reply_audio) {
    m_reply_audio = reply_audio;
    m_reply_audio_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1AnalyzeContentResponse::is_reply_audio_Set() const{
    return m_reply_audio_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1AnalyzeContentResponse::is_reply_audio_Valid() const{
    return m_reply_audio_isValid;
}

QString OAIGoogleCloudDialogflowV2beta1AnalyzeContentResponse::getReplyText() const {
    return m_reply_text;
}
void OAIGoogleCloudDialogflowV2beta1AnalyzeContentResponse::setReplyText(const QString &reply_text) {
    m_reply_text = reply_text;
    m_reply_text_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1AnalyzeContentResponse::is_reply_text_Set() const{
    return m_reply_text_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1AnalyzeContentResponse::is_reply_text_Valid() const{
    return m_reply_text_isValid;
}

bool OAIGoogleCloudDialogflowV2beta1AnalyzeContentResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_automated_agent_reply.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_dtmf_parameters.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_user_suggestion_results.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_human_agent_suggestion_results.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_message.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_reply_audio.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_reply_text_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowV2beta1AnalyzeContentResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
