/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowV2beta1ConversationProfile.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowV2beta1ConversationProfile::OAIGoogleCloudDialogflowV2beta1ConversationProfile(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowV2beta1ConversationProfile::OAIGoogleCloudDialogflowV2beta1ConversationProfile() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowV2beta1ConversationProfile::~OAIGoogleCloudDialogflowV2beta1ConversationProfile() {}

void OAIGoogleCloudDialogflowV2beta1ConversationProfile::initializeModel() {

    m_automated_agent_config_isSet = false;
    m_automated_agent_config_isValid = false;

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_human_agent_assistant_config_isSet = false;
    m_human_agent_assistant_config_isValid = false;

    m_human_agent_handoff_config_isSet = false;
    m_human_agent_handoff_config_isValid = false;

    m_language_code_isSet = false;
    m_language_code_isValid = false;

    m_logging_config_isSet = false;
    m_logging_config_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_new_message_event_notification_config_isSet = false;
    m_new_message_event_notification_config_isValid = false;

    m_notification_config_isSet = false;
    m_notification_config_isValid = false;

    m_security_settings_isSet = false;
    m_security_settings_isValid = false;

    m_stt_config_isSet = false;
    m_stt_config_isValid = false;

    m_time_zone_isSet = false;
    m_time_zone_isValid = false;

    m_tts_config_isSet = false;
    m_tts_config_isValid = false;

    m_update_time_isSet = false;
    m_update_time_isValid = false;
}

void OAIGoogleCloudDialogflowV2beta1ConversationProfile::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowV2beta1ConversationProfile::fromJsonObject(QJsonObject json) {

    m_automated_agent_config_isValid = ::OpenAPI::fromJsonValue(m_automated_agent_config, json[QString("automatedAgentConfig")]);
    m_automated_agent_config_isSet = !json[QString("automatedAgentConfig")].isNull() && m_automated_agent_config_isValid;

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_human_agent_assistant_config_isValid = ::OpenAPI::fromJsonValue(m_human_agent_assistant_config, json[QString("humanAgentAssistantConfig")]);
    m_human_agent_assistant_config_isSet = !json[QString("humanAgentAssistantConfig")].isNull() && m_human_agent_assistant_config_isValid;

    m_human_agent_handoff_config_isValid = ::OpenAPI::fromJsonValue(m_human_agent_handoff_config, json[QString("humanAgentHandoffConfig")]);
    m_human_agent_handoff_config_isSet = !json[QString("humanAgentHandoffConfig")].isNull() && m_human_agent_handoff_config_isValid;

    m_language_code_isValid = ::OpenAPI::fromJsonValue(m_language_code, json[QString("languageCode")]);
    m_language_code_isSet = !json[QString("languageCode")].isNull() && m_language_code_isValid;

    m_logging_config_isValid = ::OpenAPI::fromJsonValue(m_logging_config, json[QString("loggingConfig")]);
    m_logging_config_isSet = !json[QString("loggingConfig")].isNull() && m_logging_config_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_new_message_event_notification_config_isValid = ::OpenAPI::fromJsonValue(m_new_message_event_notification_config, json[QString("newMessageEventNotificationConfig")]);
    m_new_message_event_notification_config_isSet = !json[QString("newMessageEventNotificationConfig")].isNull() && m_new_message_event_notification_config_isValid;

    m_notification_config_isValid = ::OpenAPI::fromJsonValue(m_notification_config, json[QString("notificationConfig")]);
    m_notification_config_isSet = !json[QString("notificationConfig")].isNull() && m_notification_config_isValid;

    m_security_settings_isValid = ::OpenAPI::fromJsonValue(m_security_settings, json[QString("securitySettings")]);
    m_security_settings_isSet = !json[QString("securitySettings")].isNull() && m_security_settings_isValid;

    m_stt_config_isValid = ::OpenAPI::fromJsonValue(m_stt_config, json[QString("sttConfig")]);
    m_stt_config_isSet = !json[QString("sttConfig")].isNull() && m_stt_config_isValid;

    m_time_zone_isValid = ::OpenAPI::fromJsonValue(m_time_zone, json[QString("timeZone")]);
    m_time_zone_isSet = !json[QString("timeZone")].isNull() && m_time_zone_isValid;

    m_tts_config_isValid = ::OpenAPI::fromJsonValue(m_tts_config, json[QString("ttsConfig")]);
    m_tts_config_isSet = !json[QString("ttsConfig")].isNull() && m_tts_config_isValid;

    m_update_time_isValid = ::OpenAPI::fromJsonValue(m_update_time, json[QString("updateTime")]);
    m_update_time_isSet = !json[QString("updateTime")].isNull() && m_update_time_isValid;
}

QString OAIGoogleCloudDialogflowV2beta1ConversationProfile::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowV2beta1ConversationProfile::asJsonObject() const {
    QJsonObject obj;
    if (m_automated_agent_config.isSet()) {
        obj.insert(QString("automatedAgentConfig"), ::OpenAPI::toJsonValue(m_automated_agent_config));
    }
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_human_agent_assistant_config.isSet()) {
        obj.insert(QString("humanAgentAssistantConfig"), ::OpenAPI::toJsonValue(m_human_agent_assistant_config));
    }
    if (m_human_agent_handoff_config.isSet()) {
        obj.insert(QString("humanAgentHandoffConfig"), ::OpenAPI::toJsonValue(m_human_agent_handoff_config));
    }
    if (m_language_code_isSet) {
        obj.insert(QString("languageCode"), ::OpenAPI::toJsonValue(m_language_code));
    }
    if (m_logging_config.isSet()) {
        obj.insert(QString("loggingConfig"), ::OpenAPI::toJsonValue(m_logging_config));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_new_message_event_notification_config.isSet()) {
        obj.insert(QString("newMessageEventNotificationConfig"), ::OpenAPI::toJsonValue(m_new_message_event_notification_config));
    }
    if (m_notification_config.isSet()) {
        obj.insert(QString("notificationConfig"), ::OpenAPI::toJsonValue(m_notification_config));
    }
    if (m_security_settings_isSet) {
        obj.insert(QString("securitySettings"), ::OpenAPI::toJsonValue(m_security_settings));
    }
    if (m_stt_config.isSet()) {
        obj.insert(QString("sttConfig"), ::OpenAPI::toJsonValue(m_stt_config));
    }
    if (m_time_zone_isSet) {
        obj.insert(QString("timeZone"), ::OpenAPI::toJsonValue(m_time_zone));
    }
    if (m_tts_config.isSet()) {
        obj.insert(QString("ttsConfig"), ::OpenAPI::toJsonValue(m_tts_config));
    }
    if (m_update_time_isSet) {
        obj.insert(QString("updateTime"), ::OpenAPI::toJsonValue(m_update_time));
    }
    return obj;
}

OAIGoogleCloudDialogflowV2beta1AutomatedAgentConfig OAIGoogleCloudDialogflowV2beta1ConversationProfile::getAutomatedAgentConfig() const {
    return m_automated_agent_config;
}
void OAIGoogleCloudDialogflowV2beta1ConversationProfile::setAutomatedAgentConfig(const OAIGoogleCloudDialogflowV2beta1AutomatedAgentConfig &automated_agent_config) {
    m_automated_agent_config = automated_agent_config;
    m_automated_agent_config_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1ConversationProfile::is_automated_agent_config_Set() const{
    return m_automated_agent_config_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1ConversationProfile::is_automated_agent_config_Valid() const{
    return m_automated_agent_config_isValid;
}

QString OAIGoogleCloudDialogflowV2beta1ConversationProfile::getCreateTime() const {
    return m_create_time;
}
void OAIGoogleCloudDialogflowV2beta1ConversationProfile::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1ConversationProfile::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1ConversationProfile::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QString OAIGoogleCloudDialogflowV2beta1ConversationProfile::getDisplayName() const {
    return m_display_name;
}
void OAIGoogleCloudDialogflowV2beta1ConversationProfile::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1ConversationProfile::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1ConversationProfile::is_display_name_Valid() const{
    return m_display_name_isValid;
}

OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfig OAIGoogleCloudDialogflowV2beta1ConversationProfile::getHumanAgentAssistantConfig() const {
    return m_human_agent_assistant_config;
}
void OAIGoogleCloudDialogflowV2beta1ConversationProfile::setHumanAgentAssistantConfig(const OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfig &human_agent_assistant_config) {
    m_human_agent_assistant_config = human_agent_assistant_config;
    m_human_agent_assistant_config_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1ConversationProfile::is_human_agent_assistant_config_Set() const{
    return m_human_agent_assistant_config_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1ConversationProfile::is_human_agent_assistant_config_Valid() const{
    return m_human_agent_assistant_config_isValid;
}

OAIGoogleCloudDialogflowV2beta1HumanAgentHandoffConfig OAIGoogleCloudDialogflowV2beta1ConversationProfile::getHumanAgentHandoffConfig() const {
    return m_human_agent_handoff_config;
}
void OAIGoogleCloudDialogflowV2beta1ConversationProfile::setHumanAgentHandoffConfig(const OAIGoogleCloudDialogflowV2beta1HumanAgentHandoffConfig &human_agent_handoff_config) {
    m_human_agent_handoff_config = human_agent_handoff_config;
    m_human_agent_handoff_config_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1ConversationProfile::is_human_agent_handoff_config_Set() const{
    return m_human_agent_handoff_config_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1ConversationProfile::is_human_agent_handoff_config_Valid() const{
    return m_human_agent_handoff_config_isValid;
}

QString OAIGoogleCloudDialogflowV2beta1ConversationProfile::getLanguageCode() const {
    return m_language_code;
}
void OAIGoogleCloudDialogflowV2beta1ConversationProfile::setLanguageCode(const QString &language_code) {
    m_language_code = language_code;
    m_language_code_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1ConversationProfile::is_language_code_Set() const{
    return m_language_code_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1ConversationProfile::is_language_code_Valid() const{
    return m_language_code_isValid;
}

OAIGoogleCloudDialogflowV2beta1LoggingConfig OAIGoogleCloudDialogflowV2beta1ConversationProfile::getLoggingConfig() const {
    return m_logging_config;
}
void OAIGoogleCloudDialogflowV2beta1ConversationProfile::setLoggingConfig(const OAIGoogleCloudDialogflowV2beta1LoggingConfig &logging_config) {
    m_logging_config = logging_config;
    m_logging_config_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1ConversationProfile::is_logging_config_Set() const{
    return m_logging_config_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1ConversationProfile::is_logging_config_Valid() const{
    return m_logging_config_isValid;
}

QString OAIGoogleCloudDialogflowV2beta1ConversationProfile::getName() const {
    return m_name;
}
void OAIGoogleCloudDialogflowV2beta1ConversationProfile::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1ConversationProfile::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1ConversationProfile::is_name_Valid() const{
    return m_name_isValid;
}

OAIGoogleCloudDialogflowV2beta1NotificationConfig OAIGoogleCloudDialogflowV2beta1ConversationProfile::getNewMessageEventNotificationConfig() const {
    return m_new_message_event_notification_config;
}
void OAIGoogleCloudDialogflowV2beta1ConversationProfile::setNewMessageEventNotificationConfig(const OAIGoogleCloudDialogflowV2beta1NotificationConfig &new_message_event_notification_config) {
    m_new_message_event_notification_config = new_message_event_notification_config;
    m_new_message_event_notification_config_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1ConversationProfile::is_new_message_event_notification_config_Set() const{
    return m_new_message_event_notification_config_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1ConversationProfile::is_new_message_event_notification_config_Valid() const{
    return m_new_message_event_notification_config_isValid;
}

OAIGoogleCloudDialogflowV2beta1NotificationConfig OAIGoogleCloudDialogflowV2beta1ConversationProfile::getNotificationConfig() const {
    return m_notification_config;
}
void OAIGoogleCloudDialogflowV2beta1ConversationProfile::setNotificationConfig(const OAIGoogleCloudDialogflowV2beta1NotificationConfig &notification_config) {
    m_notification_config = notification_config;
    m_notification_config_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1ConversationProfile::is_notification_config_Set() const{
    return m_notification_config_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1ConversationProfile::is_notification_config_Valid() const{
    return m_notification_config_isValid;
}

QString OAIGoogleCloudDialogflowV2beta1ConversationProfile::getSecuritySettings() const {
    return m_security_settings;
}
void OAIGoogleCloudDialogflowV2beta1ConversationProfile::setSecuritySettings(const QString &security_settings) {
    m_security_settings = security_settings;
    m_security_settings_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1ConversationProfile::is_security_settings_Set() const{
    return m_security_settings_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1ConversationProfile::is_security_settings_Valid() const{
    return m_security_settings_isValid;
}

OAIGoogleCloudDialogflowV2beta1SpeechToTextConfig OAIGoogleCloudDialogflowV2beta1ConversationProfile::getSttConfig() const {
    return m_stt_config;
}
void OAIGoogleCloudDialogflowV2beta1ConversationProfile::setSttConfig(const OAIGoogleCloudDialogflowV2beta1SpeechToTextConfig &stt_config) {
    m_stt_config = stt_config;
    m_stt_config_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1ConversationProfile::is_stt_config_Set() const{
    return m_stt_config_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1ConversationProfile::is_stt_config_Valid() const{
    return m_stt_config_isValid;
}

QString OAIGoogleCloudDialogflowV2beta1ConversationProfile::getTimeZone() const {
    return m_time_zone;
}
void OAIGoogleCloudDialogflowV2beta1ConversationProfile::setTimeZone(const QString &time_zone) {
    m_time_zone = time_zone;
    m_time_zone_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1ConversationProfile::is_time_zone_Set() const{
    return m_time_zone_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1ConversationProfile::is_time_zone_Valid() const{
    return m_time_zone_isValid;
}

OAIGoogleCloudDialogflowV2beta1SynthesizeSpeechConfig OAIGoogleCloudDialogflowV2beta1ConversationProfile::getTtsConfig() const {
    return m_tts_config;
}
void OAIGoogleCloudDialogflowV2beta1ConversationProfile::setTtsConfig(const OAIGoogleCloudDialogflowV2beta1SynthesizeSpeechConfig &tts_config) {
    m_tts_config = tts_config;
    m_tts_config_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1ConversationProfile::is_tts_config_Set() const{
    return m_tts_config_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1ConversationProfile::is_tts_config_Valid() const{
    return m_tts_config_isValid;
}

QString OAIGoogleCloudDialogflowV2beta1ConversationProfile::getUpdateTime() const {
    return m_update_time;
}
void OAIGoogleCloudDialogflowV2beta1ConversationProfile::setUpdateTime(const QString &update_time) {
    m_update_time = update_time;
    m_update_time_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1ConversationProfile::is_update_time_Set() const{
    return m_update_time_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1ConversationProfile::is_update_time_Valid() const{
    return m_update_time_isValid;
}

bool OAIGoogleCloudDialogflowV2beta1ConversationProfile::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_automated_agent_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_human_agent_assistant_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_human_agent_handoff_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_language_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_logging_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_new_message_event_notification_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_notification_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_security_settings_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_stt_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_time_zone_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tts_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowV2beta1ConversationProfile::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
