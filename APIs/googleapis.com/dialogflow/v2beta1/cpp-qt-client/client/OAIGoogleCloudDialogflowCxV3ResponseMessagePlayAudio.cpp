/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowCxV3ResponseMessagePlayAudio.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowCxV3ResponseMessagePlayAudio::OAIGoogleCloudDialogflowCxV3ResponseMessagePlayAudio(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowCxV3ResponseMessagePlayAudio::OAIGoogleCloudDialogflowCxV3ResponseMessagePlayAudio() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowCxV3ResponseMessagePlayAudio::~OAIGoogleCloudDialogflowCxV3ResponseMessagePlayAudio() {}

void OAIGoogleCloudDialogflowCxV3ResponseMessagePlayAudio::initializeModel() {

    m_allow_playback_interruption_isSet = false;
    m_allow_playback_interruption_isValid = false;

    m_audio_uri_isSet = false;
    m_audio_uri_isValid = false;
}

void OAIGoogleCloudDialogflowCxV3ResponseMessagePlayAudio::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowCxV3ResponseMessagePlayAudio::fromJsonObject(QJsonObject json) {

    m_allow_playback_interruption_isValid = ::OpenAPI::fromJsonValue(m_allow_playback_interruption, json[QString("allowPlaybackInterruption")]);
    m_allow_playback_interruption_isSet = !json[QString("allowPlaybackInterruption")].isNull() && m_allow_playback_interruption_isValid;

    m_audio_uri_isValid = ::OpenAPI::fromJsonValue(m_audio_uri, json[QString("audioUri")]);
    m_audio_uri_isSet = !json[QString("audioUri")].isNull() && m_audio_uri_isValid;
}

QString OAIGoogleCloudDialogflowCxV3ResponseMessagePlayAudio::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowCxV3ResponseMessagePlayAudio::asJsonObject() const {
    QJsonObject obj;
    if (m_allow_playback_interruption_isSet) {
        obj.insert(QString("allowPlaybackInterruption"), ::OpenAPI::toJsonValue(m_allow_playback_interruption));
    }
    if (m_audio_uri_isSet) {
        obj.insert(QString("audioUri"), ::OpenAPI::toJsonValue(m_audio_uri));
    }
    return obj;
}

bool OAIGoogleCloudDialogflowCxV3ResponseMessagePlayAudio::isAllowPlaybackInterruption() const {
    return m_allow_playback_interruption;
}
void OAIGoogleCloudDialogflowCxV3ResponseMessagePlayAudio::setAllowPlaybackInterruption(const bool &allow_playback_interruption) {
    m_allow_playback_interruption = allow_playback_interruption;
    m_allow_playback_interruption_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3ResponseMessagePlayAudio::is_allow_playback_interruption_Set() const{
    return m_allow_playback_interruption_isSet;
}

bool OAIGoogleCloudDialogflowCxV3ResponseMessagePlayAudio::is_allow_playback_interruption_Valid() const{
    return m_allow_playback_interruption_isValid;
}

QString OAIGoogleCloudDialogflowCxV3ResponseMessagePlayAudio::getAudioUri() const {
    return m_audio_uri;
}
void OAIGoogleCloudDialogflowCxV3ResponseMessagePlayAudio::setAudioUri(const QString &audio_uri) {
    m_audio_uri = audio_uri;
    m_audio_uri_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3ResponseMessagePlayAudio::is_audio_uri_Set() const{
    return m_audio_uri_isSet;
}

bool OAIGoogleCloudDialogflowCxV3ResponseMessagePlayAudio::is_audio_uri_Valid() const{
    return m_audio_uri_isValid;
}

bool OAIGoogleCloudDialogflowCxV3ResponseMessagePlayAudio::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_allow_playback_interruption_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_audio_uri_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowCxV3ResponseMessagePlayAudio::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
