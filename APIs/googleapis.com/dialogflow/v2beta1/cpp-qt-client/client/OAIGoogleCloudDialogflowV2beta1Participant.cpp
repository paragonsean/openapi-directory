/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowV2beta1Participant.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowV2beta1Participant::OAIGoogleCloudDialogflowV2beta1Participant(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowV2beta1Participant::OAIGoogleCloudDialogflowV2beta1Participant() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowV2beta1Participant::~OAIGoogleCloudDialogflowV2beta1Participant() {}

void OAIGoogleCloudDialogflowV2beta1Participant::initializeModel() {

    m_documents_metadata_filters_isSet = false;
    m_documents_metadata_filters_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_obfuscated_external_user_id_isSet = false;
    m_obfuscated_external_user_id_isValid = false;

    m_role_isSet = false;
    m_role_isValid = false;
}

void OAIGoogleCloudDialogflowV2beta1Participant::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowV2beta1Participant::fromJsonObject(QJsonObject json) {

    m_documents_metadata_filters_isValid = ::OpenAPI::fromJsonValue(m_documents_metadata_filters, json[QString("documentsMetadataFilters")]);
    m_documents_metadata_filters_isSet = !json[QString("documentsMetadataFilters")].isNull() && m_documents_metadata_filters_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_obfuscated_external_user_id_isValid = ::OpenAPI::fromJsonValue(m_obfuscated_external_user_id, json[QString("obfuscatedExternalUserId")]);
    m_obfuscated_external_user_id_isSet = !json[QString("obfuscatedExternalUserId")].isNull() && m_obfuscated_external_user_id_isValid;

    m_role_isValid = ::OpenAPI::fromJsonValue(m_role, json[QString("role")]);
    m_role_isSet = !json[QString("role")].isNull() && m_role_isValid;
}

QString OAIGoogleCloudDialogflowV2beta1Participant::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowV2beta1Participant::asJsonObject() const {
    QJsonObject obj;
    if (m_documents_metadata_filters.size() > 0) {
        obj.insert(QString("documentsMetadataFilters"), ::OpenAPI::toJsonValue(m_documents_metadata_filters));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_obfuscated_external_user_id_isSet) {
        obj.insert(QString("obfuscatedExternalUserId"), ::OpenAPI::toJsonValue(m_obfuscated_external_user_id));
    }
    if (m_role_isSet) {
        obj.insert(QString("role"), ::OpenAPI::toJsonValue(m_role));
    }
    return obj;
}

QMap<QString, QString> OAIGoogleCloudDialogflowV2beta1Participant::getDocumentsMetadataFilters() const {
    return m_documents_metadata_filters;
}
void OAIGoogleCloudDialogflowV2beta1Participant::setDocumentsMetadataFilters(const QMap<QString, QString> &documents_metadata_filters) {
    m_documents_metadata_filters = documents_metadata_filters;
    m_documents_metadata_filters_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1Participant::is_documents_metadata_filters_Set() const{
    return m_documents_metadata_filters_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1Participant::is_documents_metadata_filters_Valid() const{
    return m_documents_metadata_filters_isValid;
}

QString OAIGoogleCloudDialogflowV2beta1Participant::getName() const {
    return m_name;
}
void OAIGoogleCloudDialogflowV2beta1Participant::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1Participant::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1Participant::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGoogleCloudDialogflowV2beta1Participant::getObfuscatedExternalUserId() const {
    return m_obfuscated_external_user_id;
}
void OAIGoogleCloudDialogflowV2beta1Participant::setObfuscatedExternalUserId(const QString &obfuscated_external_user_id) {
    m_obfuscated_external_user_id = obfuscated_external_user_id;
    m_obfuscated_external_user_id_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1Participant::is_obfuscated_external_user_id_Set() const{
    return m_obfuscated_external_user_id_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1Participant::is_obfuscated_external_user_id_Valid() const{
    return m_obfuscated_external_user_id_isValid;
}

QString OAIGoogleCloudDialogflowV2beta1Participant::getRole() const {
    return m_role;
}
void OAIGoogleCloudDialogflowV2beta1Participant::setRole(const QString &role) {
    m_role = role;
    m_role_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1Participant::is_role_Set() const{
    return m_role_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1Participant::is_role_Valid() const{
    return m_role_isValid;
}

bool OAIGoogleCloudDialogflowV2beta1Participant::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_documents_metadata_filters.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_obfuscated_external_user_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_role_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowV2beta1Participant::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
