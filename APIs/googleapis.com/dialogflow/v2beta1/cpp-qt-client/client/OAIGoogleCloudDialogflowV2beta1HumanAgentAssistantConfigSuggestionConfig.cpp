/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionConfig::OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionConfig::OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionConfig() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionConfig::~OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionConfig() {}

void OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionConfig::initializeModel() {

    m_feature_configs_isSet = false;
    m_feature_configs_isValid = false;

    m_group_suggestion_responses_isSet = false;
    m_group_suggestion_responses_isValid = false;
}

void OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionConfig::fromJsonObject(QJsonObject json) {

    m_feature_configs_isValid = ::OpenAPI::fromJsonValue(m_feature_configs, json[QString("featureConfigs")]);
    m_feature_configs_isSet = !json[QString("featureConfigs")].isNull() && m_feature_configs_isValid;

    m_group_suggestion_responses_isValid = ::OpenAPI::fromJsonValue(m_group_suggestion_responses, json[QString("groupSuggestionResponses")]);
    m_group_suggestion_responses_isSet = !json[QString("groupSuggestionResponses")].isNull() && m_group_suggestion_responses_isValid;
}

QString OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_feature_configs.size() > 0) {
        obj.insert(QString("featureConfigs"), ::OpenAPI::toJsonValue(m_feature_configs));
    }
    if (m_group_suggestion_responses_isSet) {
        obj.insert(QString("groupSuggestionResponses"), ::OpenAPI::toJsonValue(m_group_suggestion_responses));
    }
    return obj;
}

QList<OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig> OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionConfig::getFeatureConfigs() const {
    return m_feature_configs;
}
void OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionConfig::setFeatureConfigs(const QList<OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig> &feature_configs) {
    m_feature_configs = feature_configs;
    m_feature_configs_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionConfig::is_feature_configs_Set() const{
    return m_feature_configs_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionConfig::is_feature_configs_Valid() const{
    return m_feature_configs_isValid;
}

bool OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionConfig::isGroupSuggestionResponses() const {
    return m_group_suggestion_responses;
}
void OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionConfig::setGroupSuggestionResponses(const bool &group_suggestion_responses) {
    m_group_suggestion_responses = group_suggestion_responses;
    m_group_suggestion_responses_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionConfig::is_group_suggestion_responses_Set() const{
    return m_group_suggestion_responses_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionConfig::is_group_suggestion_responses_Valid() const{
    return m_group_suggestion_responses_isValid;
}

bool OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_feature_configs.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_group_suggestion_responses_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
