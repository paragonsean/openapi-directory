/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudDialogflowV2beta1SuggestSmartRepliesRequest.h
 *
 * The request message for Participants.SuggestSmartReplies.
 */

#ifndef OAIGoogleCloudDialogflowV2beta1SuggestSmartRepliesRequest_H
#define OAIGoogleCloudDialogflowV2beta1SuggestSmartRepliesRequest_H

#include <QJsonObject>

#include "OAIGoogleCloudDialogflowV2beta1TextInput.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleCloudDialogflowV2beta1TextInput;

class OAIGoogleCloudDialogflowV2beta1SuggestSmartRepliesRequest : public OAIObject {
public:
    OAIGoogleCloudDialogflowV2beta1SuggestSmartRepliesRequest();
    OAIGoogleCloudDialogflowV2beta1SuggestSmartRepliesRequest(QString json);
    ~OAIGoogleCloudDialogflowV2beta1SuggestSmartRepliesRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getContextSize() const;
    void setContextSize(const qint32 &context_size);
    bool is_context_size_Set() const;
    bool is_context_size_Valid() const;

    OAIGoogleCloudDialogflowV2beta1TextInput getCurrentTextInput() const;
    void setCurrentTextInput(const OAIGoogleCloudDialogflowV2beta1TextInput &current_text_input);
    bool is_current_text_input_Set() const;
    bool is_current_text_input_Valid() const;

    QString getLatestMessage() const;
    void setLatestMessage(const QString &latest_message);
    bool is_latest_message_Set() const;
    bool is_latest_message_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_context_size;
    bool m_context_size_isSet;
    bool m_context_size_isValid;

    OAIGoogleCloudDialogflowV2beta1TextInput m_current_text_input;
    bool m_current_text_input_isSet;
    bool m_current_text_input_isValid;

    QString m_latest_message;
    bool m_latest_message_isSet;
    bool m_latest_message_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudDialogflowV2beta1SuggestSmartRepliesRequest)

#endif // OAIGoogleCloudDialogflowV2beta1SuggestSmartRepliesRequest_H
