/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowV2beta1ImportDocumentTemplate.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowV2beta1ImportDocumentTemplate::OAIGoogleCloudDialogflowV2beta1ImportDocumentTemplate(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowV2beta1ImportDocumentTemplate::OAIGoogleCloudDialogflowV2beta1ImportDocumentTemplate() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowV2beta1ImportDocumentTemplate::~OAIGoogleCloudDialogflowV2beta1ImportDocumentTemplate() {}

void OAIGoogleCloudDialogflowV2beta1ImportDocumentTemplate::initializeModel() {

    m_knowledge_types_isSet = false;
    m_knowledge_types_isValid = false;

    m_metadata_isSet = false;
    m_metadata_isValid = false;

    m_mime_type_isSet = false;
    m_mime_type_isValid = false;
}

void OAIGoogleCloudDialogflowV2beta1ImportDocumentTemplate::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowV2beta1ImportDocumentTemplate::fromJsonObject(QJsonObject json) {

    m_knowledge_types_isValid = ::OpenAPI::fromJsonValue(m_knowledge_types, json[QString("knowledgeTypes")]);
    m_knowledge_types_isSet = !json[QString("knowledgeTypes")].isNull() && m_knowledge_types_isValid;

    m_metadata_isValid = ::OpenAPI::fromJsonValue(m_metadata, json[QString("metadata")]);
    m_metadata_isSet = !json[QString("metadata")].isNull() && m_metadata_isValid;

    m_mime_type_isValid = ::OpenAPI::fromJsonValue(m_mime_type, json[QString("mimeType")]);
    m_mime_type_isSet = !json[QString("mimeType")].isNull() && m_mime_type_isValid;
}

QString OAIGoogleCloudDialogflowV2beta1ImportDocumentTemplate::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowV2beta1ImportDocumentTemplate::asJsonObject() const {
    QJsonObject obj;
    if (m_knowledge_types.size() > 0) {
        obj.insert(QString("knowledgeTypes"), ::OpenAPI::toJsonValue(m_knowledge_types));
    }
    if (m_metadata.size() > 0) {
        obj.insert(QString("metadata"), ::OpenAPI::toJsonValue(m_metadata));
    }
    if (m_mime_type_isSet) {
        obj.insert(QString("mimeType"), ::OpenAPI::toJsonValue(m_mime_type));
    }
    return obj;
}

QList<QString> OAIGoogleCloudDialogflowV2beta1ImportDocumentTemplate::getKnowledgeTypes() const {
    return m_knowledge_types;
}
void OAIGoogleCloudDialogflowV2beta1ImportDocumentTemplate::setKnowledgeTypes(const QList<QString> &knowledge_types) {
    m_knowledge_types = knowledge_types;
    m_knowledge_types_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1ImportDocumentTemplate::is_knowledge_types_Set() const{
    return m_knowledge_types_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1ImportDocumentTemplate::is_knowledge_types_Valid() const{
    return m_knowledge_types_isValid;
}

QMap<QString, QString> OAIGoogleCloudDialogflowV2beta1ImportDocumentTemplate::getMetadata() const {
    return m_metadata;
}
void OAIGoogleCloudDialogflowV2beta1ImportDocumentTemplate::setMetadata(const QMap<QString, QString> &metadata) {
    m_metadata = metadata;
    m_metadata_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1ImportDocumentTemplate::is_metadata_Set() const{
    return m_metadata_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1ImportDocumentTemplate::is_metadata_Valid() const{
    return m_metadata_isValid;
}

QString OAIGoogleCloudDialogflowV2beta1ImportDocumentTemplate::getMimeType() const {
    return m_mime_type;
}
void OAIGoogleCloudDialogflowV2beta1ImportDocumentTemplate::setMimeType(const QString &mime_type) {
    m_mime_type = mime_type;
    m_mime_type_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1ImportDocumentTemplate::is_mime_type_Set() const{
    return m_mime_type_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1ImportDocumentTemplate::is_mime_type_Valid() const{
    return m_mime_type_isValid;
}

bool OAIGoogleCloudDialogflowV2beta1ImportDocumentTemplate::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_knowledge_types.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_metadata.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_mime_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowV2beta1ImportDocumentTemplate::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
