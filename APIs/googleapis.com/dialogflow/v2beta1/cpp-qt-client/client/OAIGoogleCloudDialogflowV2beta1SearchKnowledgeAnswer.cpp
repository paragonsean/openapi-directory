/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowV2beta1SearchKnowledgeAnswer.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowV2beta1SearchKnowledgeAnswer::OAIGoogleCloudDialogflowV2beta1SearchKnowledgeAnswer(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowV2beta1SearchKnowledgeAnswer::OAIGoogleCloudDialogflowV2beta1SearchKnowledgeAnswer() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowV2beta1SearchKnowledgeAnswer::~OAIGoogleCloudDialogflowV2beta1SearchKnowledgeAnswer() {}

void OAIGoogleCloudDialogflowV2beta1SearchKnowledgeAnswer::initializeModel() {

    m_answer_isSet = false;
    m_answer_isValid = false;

    m_answer_record_isSet = false;
    m_answer_record_isValid = false;

    m_answer_sources_isSet = false;
    m_answer_sources_isValid = false;

    m_answer_type_isSet = false;
    m_answer_type_isValid = false;
}

void OAIGoogleCloudDialogflowV2beta1SearchKnowledgeAnswer::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowV2beta1SearchKnowledgeAnswer::fromJsonObject(QJsonObject json) {

    m_answer_isValid = ::OpenAPI::fromJsonValue(m_answer, json[QString("answer")]);
    m_answer_isSet = !json[QString("answer")].isNull() && m_answer_isValid;

    m_answer_record_isValid = ::OpenAPI::fromJsonValue(m_answer_record, json[QString("answerRecord")]);
    m_answer_record_isSet = !json[QString("answerRecord")].isNull() && m_answer_record_isValid;

    m_answer_sources_isValid = ::OpenAPI::fromJsonValue(m_answer_sources, json[QString("answerSources")]);
    m_answer_sources_isSet = !json[QString("answerSources")].isNull() && m_answer_sources_isValid;

    m_answer_type_isValid = ::OpenAPI::fromJsonValue(m_answer_type, json[QString("answerType")]);
    m_answer_type_isSet = !json[QString("answerType")].isNull() && m_answer_type_isValid;
}

QString OAIGoogleCloudDialogflowV2beta1SearchKnowledgeAnswer::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowV2beta1SearchKnowledgeAnswer::asJsonObject() const {
    QJsonObject obj;
    if (m_answer_isSet) {
        obj.insert(QString("answer"), ::OpenAPI::toJsonValue(m_answer));
    }
    if (m_answer_record_isSet) {
        obj.insert(QString("answerRecord"), ::OpenAPI::toJsonValue(m_answer_record));
    }
    if (m_answer_sources.size() > 0) {
        obj.insert(QString("answerSources"), ::OpenAPI::toJsonValue(m_answer_sources));
    }
    if (m_answer_type_isSet) {
        obj.insert(QString("answerType"), ::OpenAPI::toJsonValue(m_answer_type));
    }
    return obj;
}

QString OAIGoogleCloudDialogflowV2beta1SearchKnowledgeAnswer::getAnswer() const {
    return m_answer;
}
void OAIGoogleCloudDialogflowV2beta1SearchKnowledgeAnswer::setAnswer(const QString &answer) {
    m_answer = answer;
    m_answer_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1SearchKnowledgeAnswer::is_answer_Set() const{
    return m_answer_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1SearchKnowledgeAnswer::is_answer_Valid() const{
    return m_answer_isValid;
}

QString OAIGoogleCloudDialogflowV2beta1SearchKnowledgeAnswer::getAnswerRecord() const {
    return m_answer_record;
}
void OAIGoogleCloudDialogflowV2beta1SearchKnowledgeAnswer::setAnswerRecord(const QString &answer_record) {
    m_answer_record = answer_record;
    m_answer_record_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1SearchKnowledgeAnswer::is_answer_record_Set() const{
    return m_answer_record_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1SearchKnowledgeAnswer::is_answer_record_Valid() const{
    return m_answer_record_isValid;
}

QList<OAIGoogleCloudDialogflowV2beta1SearchKnowledgeAnswerAnswerSource> OAIGoogleCloudDialogflowV2beta1SearchKnowledgeAnswer::getAnswerSources() const {
    return m_answer_sources;
}
void OAIGoogleCloudDialogflowV2beta1SearchKnowledgeAnswer::setAnswerSources(const QList<OAIGoogleCloudDialogflowV2beta1SearchKnowledgeAnswerAnswerSource> &answer_sources) {
    m_answer_sources = answer_sources;
    m_answer_sources_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1SearchKnowledgeAnswer::is_answer_sources_Set() const{
    return m_answer_sources_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1SearchKnowledgeAnswer::is_answer_sources_Valid() const{
    return m_answer_sources_isValid;
}

QString OAIGoogleCloudDialogflowV2beta1SearchKnowledgeAnswer::getAnswerType() const {
    return m_answer_type;
}
void OAIGoogleCloudDialogflowV2beta1SearchKnowledgeAnswer::setAnswerType(const QString &answer_type) {
    m_answer_type = answer_type;
    m_answer_type_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1SearchKnowledgeAnswer::is_answer_type_Set() const{
    return m_answer_type_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1SearchKnowledgeAnswer::is_answer_type_Valid() const{
    return m_answer_type_isValid;
}

bool OAIGoogleCloudDialogflowV2beta1SearchKnowledgeAnswer::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_answer_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_answer_record_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_answer_sources.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_answer_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowV2beta1SearchKnowledgeAnswer::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
