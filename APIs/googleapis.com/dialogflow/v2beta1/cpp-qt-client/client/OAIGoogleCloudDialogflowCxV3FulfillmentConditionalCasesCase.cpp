/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase::OAIGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase::OAIGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase::~OAIGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase() {}

void OAIGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase::initializeModel() {

    m_case_content_isSet = false;
    m_case_content_isValid = false;

    m_condition_isSet = false;
    m_condition_isValid = false;
}

void OAIGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase::fromJsonObject(QJsonObject json) {

    m_case_content_isValid = ::OpenAPI::fromJsonValue(m_case_content, json[QString("caseContent")]);
    m_case_content_isSet = !json[QString("caseContent")].isNull() && m_case_content_isValid;

    m_condition_isValid = ::OpenAPI::fromJsonValue(m_condition, json[QString("condition")]);
    m_condition_isSet = !json[QString("condition")].isNull() && m_condition_isValid;
}

QString OAIGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase::asJsonObject() const {
    QJsonObject obj;
    if (m_case_content.size() > 0) {
        obj.insert(QString("caseContent"), ::OpenAPI::toJsonValue(m_case_content));
    }
    if (m_condition_isSet) {
        obj.insert(QString("condition"), ::OpenAPI::toJsonValue(m_condition));
    }
    return obj;
}

QList<OAIGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContent> OAIGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase::getCaseContent() const {
    return m_case_content;
}
void OAIGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase::setCaseContent(const QList<OAIGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContent> &case_content) {
    m_case_content = case_content;
    m_case_content_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase::is_case_content_Set() const{
    return m_case_content_isSet;
}

bool OAIGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase::is_case_content_Valid() const{
    return m_case_content_isValid;
}

QString OAIGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase::getCondition() const {
    return m_condition;
}
void OAIGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase::setCondition(const QString &condition) {
    m_condition = condition;
    m_condition_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase::is_condition_Set() const{
    return m_condition_isSet;
}

bool OAIGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase::is_condition_Valid() const{
    return m_condition_isValid;
}

bool OAIGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_case_content.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_condition_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
