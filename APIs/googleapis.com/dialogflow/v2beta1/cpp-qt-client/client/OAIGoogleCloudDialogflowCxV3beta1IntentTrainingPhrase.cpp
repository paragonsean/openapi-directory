/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowCxV3beta1IntentTrainingPhrase.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowCxV3beta1IntentTrainingPhrase::OAIGoogleCloudDialogflowCxV3beta1IntentTrainingPhrase(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowCxV3beta1IntentTrainingPhrase::OAIGoogleCloudDialogflowCxV3beta1IntentTrainingPhrase() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowCxV3beta1IntentTrainingPhrase::~OAIGoogleCloudDialogflowCxV3beta1IntentTrainingPhrase() {}

void OAIGoogleCloudDialogflowCxV3beta1IntentTrainingPhrase::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;

    m_parts_isSet = false;
    m_parts_isValid = false;

    m_repeat_count_isSet = false;
    m_repeat_count_isValid = false;
}

void OAIGoogleCloudDialogflowCxV3beta1IntentTrainingPhrase::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowCxV3beta1IntentTrainingPhrase::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_parts_isValid = ::OpenAPI::fromJsonValue(m_parts, json[QString("parts")]);
    m_parts_isSet = !json[QString("parts")].isNull() && m_parts_isValid;

    m_repeat_count_isValid = ::OpenAPI::fromJsonValue(m_repeat_count, json[QString("repeatCount")]);
    m_repeat_count_isSet = !json[QString("repeatCount")].isNull() && m_repeat_count_isValid;
}

QString OAIGoogleCloudDialogflowCxV3beta1IntentTrainingPhrase::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowCxV3beta1IntentTrainingPhrase::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_parts.size() > 0) {
        obj.insert(QString("parts"), ::OpenAPI::toJsonValue(m_parts));
    }
    if (m_repeat_count_isSet) {
        obj.insert(QString("repeatCount"), ::OpenAPI::toJsonValue(m_repeat_count));
    }
    return obj;
}

QString OAIGoogleCloudDialogflowCxV3beta1IntentTrainingPhrase::getId() const {
    return m_id;
}
void OAIGoogleCloudDialogflowCxV3beta1IntentTrainingPhrase::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1IntentTrainingPhrase::is_id_Set() const{
    return m_id_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1IntentTrainingPhrase::is_id_Valid() const{
    return m_id_isValid;
}

QList<OAIGoogleCloudDialogflowCxV3beta1IntentTrainingPhrasePart> OAIGoogleCloudDialogflowCxV3beta1IntentTrainingPhrase::getParts() const {
    return m_parts;
}
void OAIGoogleCloudDialogflowCxV3beta1IntentTrainingPhrase::setParts(const QList<OAIGoogleCloudDialogflowCxV3beta1IntentTrainingPhrasePart> &parts) {
    m_parts = parts;
    m_parts_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1IntentTrainingPhrase::is_parts_Set() const{
    return m_parts_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1IntentTrainingPhrase::is_parts_Valid() const{
    return m_parts_isValid;
}

qint32 OAIGoogleCloudDialogflowCxV3beta1IntentTrainingPhrase::getRepeatCount() const {
    return m_repeat_count;
}
void OAIGoogleCloudDialogflowCxV3beta1IntentTrainingPhrase::setRepeatCount(const qint32 &repeat_count) {
    m_repeat_count = repeat_count;
    m_repeat_count_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1IntentTrainingPhrase::is_repeat_count_Set() const{
    return m_repeat_count_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1IntentTrainingPhrase::is_repeat_count_Valid() const{
    return m_repeat_count_isValid;
}

bool OAIGoogleCloudDialogflowCxV3beta1IntentTrainingPhrase::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_parts.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_repeat_count_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowCxV3beta1IntentTrainingPhrase::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
