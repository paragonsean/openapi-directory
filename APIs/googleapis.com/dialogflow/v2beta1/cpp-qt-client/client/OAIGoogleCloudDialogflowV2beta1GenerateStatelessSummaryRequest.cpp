/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowV2beta1GenerateStatelessSummaryRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowV2beta1GenerateStatelessSummaryRequest::OAIGoogleCloudDialogflowV2beta1GenerateStatelessSummaryRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowV2beta1GenerateStatelessSummaryRequest::OAIGoogleCloudDialogflowV2beta1GenerateStatelessSummaryRequest() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowV2beta1GenerateStatelessSummaryRequest::~OAIGoogleCloudDialogflowV2beta1GenerateStatelessSummaryRequest() {}

void OAIGoogleCloudDialogflowV2beta1GenerateStatelessSummaryRequest::initializeModel() {

    m_conversation_profile_isSet = false;
    m_conversation_profile_isValid = false;

    m_latest_message_isSet = false;
    m_latest_message_isValid = false;

    m_max_context_size_isSet = false;
    m_max_context_size_isValid = false;

    m_stateless_conversation_isSet = false;
    m_stateless_conversation_isValid = false;
}

void OAIGoogleCloudDialogflowV2beta1GenerateStatelessSummaryRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowV2beta1GenerateStatelessSummaryRequest::fromJsonObject(QJsonObject json) {

    m_conversation_profile_isValid = ::OpenAPI::fromJsonValue(m_conversation_profile, json[QString("conversationProfile")]);
    m_conversation_profile_isSet = !json[QString("conversationProfile")].isNull() && m_conversation_profile_isValid;

    m_latest_message_isValid = ::OpenAPI::fromJsonValue(m_latest_message, json[QString("latestMessage")]);
    m_latest_message_isSet = !json[QString("latestMessage")].isNull() && m_latest_message_isValid;

    m_max_context_size_isValid = ::OpenAPI::fromJsonValue(m_max_context_size, json[QString("maxContextSize")]);
    m_max_context_size_isSet = !json[QString("maxContextSize")].isNull() && m_max_context_size_isValid;

    m_stateless_conversation_isValid = ::OpenAPI::fromJsonValue(m_stateless_conversation, json[QString("statelessConversation")]);
    m_stateless_conversation_isSet = !json[QString("statelessConversation")].isNull() && m_stateless_conversation_isValid;
}

QString OAIGoogleCloudDialogflowV2beta1GenerateStatelessSummaryRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowV2beta1GenerateStatelessSummaryRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_conversation_profile.isSet()) {
        obj.insert(QString("conversationProfile"), ::OpenAPI::toJsonValue(m_conversation_profile));
    }
    if (m_latest_message_isSet) {
        obj.insert(QString("latestMessage"), ::OpenAPI::toJsonValue(m_latest_message));
    }
    if (m_max_context_size_isSet) {
        obj.insert(QString("maxContextSize"), ::OpenAPI::toJsonValue(m_max_context_size));
    }
    if (m_stateless_conversation.isSet()) {
        obj.insert(QString("statelessConversation"), ::OpenAPI::toJsonValue(m_stateless_conversation));
    }
    return obj;
}

OAIGoogleCloudDialogflowV2beta1ConversationProfile OAIGoogleCloudDialogflowV2beta1GenerateStatelessSummaryRequest::getConversationProfile() const {
    return m_conversation_profile;
}
void OAIGoogleCloudDialogflowV2beta1GenerateStatelessSummaryRequest::setConversationProfile(const OAIGoogleCloudDialogflowV2beta1ConversationProfile &conversation_profile) {
    m_conversation_profile = conversation_profile;
    m_conversation_profile_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1GenerateStatelessSummaryRequest::is_conversation_profile_Set() const{
    return m_conversation_profile_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1GenerateStatelessSummaryRequest::is_conversation_profile_Valid() const{
    return m_conversation_profile_isValid;
}

QString OAIGoogleCloudDialogflowV2beta1GenerateStatelessSummaryRequest::getLatestMessage() const {
    return m_latest_message;
}
void OAIGoogleCloudDialogflowV2beta1GenerateStatelessSummaryRequest::setLatestMessage(const QString &latest_message) {
    m_latest_message = latest_message;
    m_latest_message_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1GenerateStatelessSummaryRequest::is_latest_message_Set() const{
    return m_latest_message_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1GenerateStatelessSummaryRequest::is_latest_message_Valid() const{
    return m_latest_message_isValid;
}

qint32 OAIGoogleCloudDialogflowV2beta1GenerateStatelessSummaryRequest::getMaxContextSize() const {
    return m_max_context_size;
}
void OAIGoogleCloudDialogflowV2beta1GenerateStatelessSummaryRequest::setMaxContextSize(const qint32 &max_context_size) {
    m_max_context_size = max_context_size;
    m_max_context_size_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1GenerateStatelessSummaryRequest::is_max_context_size_Set() const{
    return m_max_context_size_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1GenerateStatelessSummaryRequest::is_max_context_size_Valid() const{
    return m_max_context_size_isValid;
}

OAIGoogleCloudDialogflowV2beta1GenerateStatelessSummaryRequestMinimalConversation OAIGoogleCloudDialogflowV2beta1GenerateStatelessSummaryRequest::getStatelessConversation() const {
    return m_stateless_conversation;
}
void OAIGoogleCloudDialogflowV2beta1GenerateStatelessSummaryRequest::setStatelessConversation(const OAIGoogleCloudDialogflowV2beta1GenerateStatelessSummaryRequestMinimalConversation &stateless_conversation) {
    m_stateless_conversation = stateless_conversation;
    m_stateless_conversation_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1GenerateStatelessSummaryRequest::is_stateless_conversation_Set() const{
    return m_stateless_conversation_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1GenerateStatelessSummaryRequest::is_stateless_conversation_Valid() const{
    return m_stateless_conversation_isValid;
}

bool OAIGoogleCloudDialogflowV2beta1GenerateStatelessSummaryRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_conversation_profile.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_latest_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_context_size_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_stateless_conversation.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowV2beta1GenerateStatelessSummaryRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
