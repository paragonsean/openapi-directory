/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowV2beta1Suggestion.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowV2beta1Suggestion::OAIGoogleCloudDialogflowV2beta1Suggestion(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowV2beta1Suggestion::OAIGoogleCloudDialogflowV2beta1Suggestion() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowV2beta1Suggestion::~OAIGoogleCloudDialogflowV2beta1Suggestion() {}

void OAIGoogleCloudDialogflowV2beta1Suggestion::initializeModel() {

    m_articles_isSet = false;
    m_articles_isValid = false;

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_faq_answers_isSet = false;
    m_faq_answers_isValid = false;

    m_latest_message_isSet = false;
    m_latest_message_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAIGoogleCloudDialogflowV2beta1Suggestion::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowV2beta1Suggestion::fromJsonObject(QJsonObject json) {

    m_articles_isValid = ::OpenAPI::fromJsonValue(m_articles, json[QString("articles")]);
    m_articles_isSet = !json[QString("articles")].isNull() && m_articles_isValid;

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_faq_answers_isValid = ::OpenAPI::fromJsonValue(m_faq_answers, json[QString("faqAnswers")]);
    m_faq_answers_isSet = !json[QString("faqAnswers")].isNull() && m_faq_answers_isValid;

    m_latest_message_isValid = ::OpenAPI::fromJsonValue(m_latest_message, json[QString("latestMessage")]);
    m_latest_message_isSet = !json[QString("latestMessage")].isNull() && m_latest_message_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;
}

QString OAIGoogleCloudDialogflowV2beta1Suggestion::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowV2beta1Suggestion::asJsonObject() const {
    QJsonObject obj;
    if (m_articles.size() > 0) {
        obj.insert(QString("articles"), ::OpenAPI::toJsonValue(m_articles));
    }
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_faq_answers.size() > 0) {
        obj.insert(QString("faqAnswers"), ::OpenAPI::toJsonValue(m_faq_answers));
    }
    if (m_latest_message_isSet) {
        obj.insert(QString("latestMessage"), ::OpenAPI::toJsonValue(m_latest_message));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

QList<OAIGoogleCloudDialogflowV2beta1SuggestionArticle> OAIGoogleCloudDialogflowV2beta1Suggestion::getArticles() const {
    return m_articles;
}
void OAIGoogleCloudDialogflowV2beta1Suggestion::setArticles(const QList<OAIGoogleCloudDialogflowV2beta1SuggestionArticle> &articles) {
    m_articles = articles;
    m_articles_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1Suggestion::is_articles_Set() const{
    return m_articles_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1Suggestion::is_articles_Valid() const{
    return m_articles_isValid;
}

QString OAIGoogleCloudDialogflowV2beta1Suggestion::getCreateTime() const {
    return m_create_time;
}
void OAIGoogleCloudDialogflowV2beta1Suggestion::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1Suggestion::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1Suggestion::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QList<OAIGoogleCloudDialogflowV2beta1SuggestionFaqAnswer> OAIGoogleCloudDialogflowV2beta1Suggestion::getFaqAnswers() const {
    return m_faq_answers;
}
void OAIGoogleCloudDialogflowV2beta1Suggestion::setFaqAnswers(const QList<OAIGoogleCloudDialogflowV2beta1SuggestionFaqAnswer> &faq_answers) {
    m_faq_answers = faq_answers;
    m_faq_answers_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1Suggestion::is_faq_answers_Set() const{
    return m_faq_answers_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1Suggestion::is_faq_answers_Valid() const{
    return m_faq_answers_isValid;
}

QString OAIGoogleCloudDialogflowV2beta1Suggestion::getLatestMessage() const {
    return m_latest_message;
}
void OAIGoogleCloudDialogflowV2beta1Suggestion::setLatestMessage(const QString &latest_message) {
    m_latest_message = latest_message;
    m_latest_message_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1Suggestion::is_latest_message_Set() const{
    return m_latest_message_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1Suggestion::is_latest_message_Valid() const{
    return m_latest_message_isValid;
}

QString OAIGoogleCloudDialogflowV2beta1Suggestion::getName() const {
    return m_name;
}
void OAIGoogleCloudDialogflowV2beta1Suggestion::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1Suggestion::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1Suggestion::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIGoogleCloudDialogflowV2beta1Suggestion::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_articles.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_faq_answers.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_latest_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowV2beta1Suggestion::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
