# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDialogflowCxV3ImportFlowResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, flow: str=None):
        """GoogleCloudDialogflowCxV3ImportFlowResponse - a model defined in OpenAPI

        :param flow: The flow of this GoogleCloudDialogflowCxV3ImportFlowResponse.
        """
        self.openapi_types = {
            'flow': str
        }

        self.attribute_map = {
            'flow': 'flow'
        }

        self._flow = flow

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDialogflowCxV3ImportFlowResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDialogflowCxV3ImportFlowResponse of this GoogleCloudDialogflowCxV3ImportFlowResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def flow(self):
        """Gets the flow of this GoogleCloudDialogflowCxV3ImportFlowResponse.

        The unique identifier of the new flow. Format: `projects//locations//agents//flows/`.

        :return: The flow of this GoogleCloudDialogflowCxV3ImportFlowResponse.
        :rtype: str
        """
        return self._flow

    @flow.setter
    def flow(self, flow):
        """Sets the flow of this GoogleCloudDialogflowCxV3ImportFlowResponse.

        The unique identifier of the new flow. Format: `projects//locations//agents//flows/`.

        :param flow: The flow of this GoogleCloudDialogflowCxV3ImportFlowResponse.
        :type flow: str
        """

        self._flow = flow
