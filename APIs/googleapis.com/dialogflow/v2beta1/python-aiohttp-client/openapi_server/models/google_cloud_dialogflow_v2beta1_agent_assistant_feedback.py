# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_dialogflow_v2beta1_agent_assistant_feedback_knowledge_search_feedback import GoogleCloudDialogflowV2beta1AgentAssistantFeedbackKnowledgeSearchFeedback
from openapi_server.models.google_cloud_dialogflow_v2beta1_agent_assistant_feedback_summarization_feedback import GoogleCloudDialogflowV2beta1AgentAssistantFeedbackSummarizationFeedback
from openapi_server import util


class GoogleCloudDialogflowV2beta1AgentAssistantFeedback(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, answer_relevance: str=None, document_correctness: str=None, document_efficiency: str=None, knowledge_search_feedback: GoogleCloudDialogflowV2beta1AgentAssistantFeedbackKnowledgeSearchFeedback=None, summarization_feedback: GoogleCloudDialogflowV2beta1AgentAssistantFeedbackSummarizationFeedback=None):
        """GoogleCloudDialogflowV2beta1AgentAssistantFeedback - a model defined in OpenAPI

        :param answer_relevance: The answer_relevance of this GoogleCloudDialogflowV2beta1AgentAssistantFeedback.
        :param document_correctness: The document_correctness of this GoogleCloudDialogflowV2beta1AgentAssistantFeedback.
        :param document_efficiency: The document_efficiency of this GoogleCloudDialogflowV2beta1AgentAssistantFeedback.
        :param knowledge_search_feedback: The knowledge_search_feedback of this GoogleCloudDialogflowV2beta1AgentAssistantFeedback.
        :param summarization_feedback: The summarization_feedback of this GoogleCloudDialogflowV2beta1AgentAssistantFeedback.
        """
        self.openapi_types = {
            'answer_relevance': str,
            'document_correctness': str,
            'document_efficiency': str,
            'knowledge_search_feedback': GoogleCloudDialogflowV2beta1AgentAssistantFeedbackKnowledgeSearchFeedback,
            'summarization_feedback': GoogleCloudDialogflowV2beta1AgentAssistantFeedbackSummarizationFeedback
        }

        self.attribute_map = {
            'answer_relevance': 'answerRelevance',
            'document_correctness': 'documentCorrectness',
            'document_efficiency': 'documentEfficiency',
            'knowledge_search_feedback': 'knowledgeSearchFeedback',
            'summarization_feedback': 'summarizationFeedback'
        }

        self._answer_relevance = answer_relevance
        self._document_correctness = document_correctness
        self._document_efficiency = document_efficiency
        self._knowledge_search_feedback = knowledge_search_feedback
        self._summarization_feedback = summarization_feedback

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDialogflowV2beta1AgentAssistantFeedback':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDialogflowV2beta1AgentAssistantFeedback of this GoogleCloudDialogflowV2beta1AgentAssistantFeedback.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def answer_relevance(self):
        """Gets the answer_relevance of this GoogleCloudDialogflowV2beta1AgentAssistantFeedback.

        Optional. Whether or not the suggested answer is relevant. For example: * Query: \"Can I change my mailing address?\" * Suggested document says: \"Items must be returned/exchanged within 60 days of the purchase date.\" * answer_relevance: AnswerRelevance.IRRELEVANT

        :return: The answer_relevance of this GoogleCloudDialogflowV2beta1AgentAssistantFeedback.
        :rtype: str
        """
        return self._answer_relevance

    @answer_relevance.setter
    def answer_relevance(self, answer_relevance):
        """Sets the answer_relevance of this GoogleCloudDialogflowV2beta1AgentAssistantFeedback.

        Optional. Whether or not the suggested answer is relevant. For example: * Query: \"Can I change my mailing address?\" * Suggested document says: \"Items must be returned/exchanged within 60 days of the purchase date.\" * answer_relevance: AnswerRelevance.IRRELEVANT

        :param answer_relevance: The answer_relevance of this GoogleCloudDialogflowV2beta1AgentAssistantFeedback.
        :type answer_relevance: str
        """
        allowed_values = ["ANSWER_RELEVANCE_UNSPECIFIED", "IRRELEVANT", "RELEVANT"]  # noqa: E501
        if answer_relevance not in allowed_values:
            raise ValueError(
                "Invalid value for `answer_relevance` ({0}), must be one of {1}"
                .format(answer_relevance, allowed_values)
            )

        self._answer_relevance = answer_relevance

    @property
    def document_correctness(self):
        """Gets the document_correctness of this GoogleCloudDialogflowV2beta1AgentAssistantFeedback.

        Optional. Whether or not the information in the document is correct. For example: * Query: \"Can I return the package in 2 days once received?\" * Suggested document says: \"Items must be returned/exchanged within 60 days of the purchase date.\" * Ground truth: \"No return or exchange is allowed.\" * [document_correctness]: INCORRECT

        :return: The document_correctness of this GoogleCloudDialogflowV2beta1AgentAssistantFeedback.
        :rtype: str
        """
        return self._document_correctness

    @document_correctness.setter
    def document_correctness(self, document_correctness):
        """Sets the document_correctness of this GoogleCloudDialogflowV2beta1AgentAssistantFeedback.

        Optional. Whether or not the information in the document is correct. For example: * Query: \"Can I return the package in 2 days once received?\" * Suggested document says: \"Items must be returned/exchanged within 60 days of the purchase date.\" * Ground truth: \"No return or exchange is allowed.\" * [document_correctness]: INCORRECT

        :param document_correctness: The document_correctness of this GoogleCloudDialogflowV2beta1AgentAssistantFeedback.
        :type document_correctness: str
        """
        allowed_values = ["DOCUMENT_CORRECTNESS_UNSPECIFIED", "INCORRECT", "CORRECT"]  # noqa: E501
        if document_correctness not in allowed_values:
            raise ValueError(
                "Invalid value for `document_correctness` ({0}), must be one of {1}"
                .format(document_correctness, allowed_values)
            )

        self._document_correctness = document_correctness

    @property
    def document_efficiency(self):
        """Gets the document_efficiency of this GoogleCloudDialogflowV2beta1AgentAssistantFeedback.

        Optional. Whether or not the suggested document is efficient. For example, if the document is poorly written, hard to understand, hard to use or too long to find useful information, document_efficiency is DocumentEfficiency.INEFFICIENT.

        :return: The document_efficiency of this GoogleCloudDialogflowV2beta1AgentAssistantFeedback.
        :rtype: str
        """
        return self._document_efficiency

    @document_efficiency.setter
    def document_efficiency(self, document_efficiency):
        """Sets the document_efficiency of this GoogleCloudDialogflowV2beta1AgentAssistantFeedback.

        Optional. Whether or not the suggested document is efficient. For example, if the document is poorly written, hard to understand, hard to use or too long to find useful information, document_efficiency is DocumentEfficiency.INEFFICIENT.

        :param document_efficiency: The document_efficiency of this GoogleCloudDialogflowV2beta1AgentAssistantFeedback.
        :type document_efficiency: str
        """
        allowed_values = ["DOCUMENT_EFFICIENCY_UNSPECIFIED", "INEFFICIENT", "EFFICIENT"]  # noqa: E501
        if document_efficiency not in allowed_values:
            raise ValueError(
                "Invalid value for `document_efficiency` ({0}), must be one of {1}"
                .format(document_efficiency, allowed_values)
            )

        self._document_efficiency = document_efficiency

    @property
    def knowledge_search_feedback(self):
        """Gets the knowledge_search_feedback of this GoogleCloudDialogflowV2beta1AgentAssistantFeedback.


        :return: The knowledge_search_feedback of this GoogleCloudDialogflowV2beta1AgentAssistantFeedback.
        :rtype: GoogleCloudDialogflowV2beta1AgentAssistantFeedbackKnowledgeSearchFeedback
        """
        return self._knowledge_search_feedback

    @knowledge_search_feedback.setter
    def knowledge_search_feedback(self, knowledge_search_feedback):
        """Sets the knowledge_search_feedback of this GoogleCloudDialogflowV2beta1AgentAssistantFeedback.


        :param knowledge_search_feedback: The knowledge_search_feedback of this GoogleCloudDialogflowV2beta1AgentAssistantFeedback.
        :type knowledge_search_feedback: GoogleCloudDialogflowV2beta1AgentAssistantFeedbackKnowledgeSearchFeedback
        """

        self._knowledge_search_feedback = knowledge_search_feedback

    @property
    def summarization_feedback(self):
        """Gets the summarization_feedback of this GoogleCloudDialogflowV2beta1AgentAssistantFeedback.


        :return: The summarization_feedback of this GoogleCloudDialogflowV2beta1AgentAssistantFeedback.
        :rtype: GoogleCloudDialogflowV2beta1AgentAssistantFeedbackSummarizationFeedback
        """
        return self._summarization_feedback

    @summarization_feedback.setter
    def summarization_feedback(self, summarization_feedback):
        """Sets the summarization_feedback of this GoogleCloudDialogflowV2beta1AgentAssistantFeedback.


        :param summarization_feedback: The summarization_feedback of this GoogleCloudDialogflowV2beta1AgentAssistantFeedback.
        :type summarization_feedback: GoogleCloudDialogflowV2beta1AgentAssistantFeedbackSummarizationFeedback
        """

        self._summarization_feedback = summarization_feedback
