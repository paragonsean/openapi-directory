# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDialogflowV2beta1Agent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, api_version: str=None, avatar_uri: str=None, classification_threshold: float=None, default_language_code: str=None, description: str=None, display_name: str=None, enable_logging: bool=None, match_mode: str=None, parent: str=None, supported_language_codes: List[str]=None, tier: str=None, time_zone: str=None):
        """GoogleCloudDialogflowV2beta1Agent - a model defined in OpenAPI

        :param api_version: The api_version of this GoogleCloudDialogflowV2beta1Agent.
        :param avatar_uri: The avatar_uri of this GoogleCloudDialogflowV2beta1Agent.
        :param classification_threshold: The classification_threshold of this GoogleCloudDialogflowV2beta1Agent.
        :param default_language_code: The default_language_code of this GoogleCloudDialogflowV2beta1Agent.
        :param description: The description of this GoogleCloudDialogflowV2beta1Agent.
        :param display_name: The display_name of this GoogleCloudDialogflowV2beta1Agent.
        :param enable_logging: The enable_logging of this GoogleCloudDialogflowV2beta1Agent.
        :param match_mode: The match_mode of this GoogleCloudDialogflowV2beta1Agent.
        :param parent: The parent of this GoogleCloudDialogflowV2beta1Agent.
        :param supported_language_codes: The supported_language_codes of this GoogleCloudDialogflowV2beta1Agent.
        :param tier: The tier of this GoogleCloudDialogflowV2beta1Agent.
        :param time_zone: The time_zone of this GoogleCloudDialogflowV2beta1Agent.
        """
        self.openapi_types = {
            'api_version': str,
            'avatar_uri': str,
            'classification_threshold': float,
            'default_language_code': str,
            'description': str,
            'display_name': str,
            'enable_logging': bool,
            'match_mode': str,
            'parent': str,
            'supported_language_codes': List[str],
            'tier': str,
            'time_zone': str
        }

        self.attribute_map = {
            'api_version': 'apiVersion',
            'avatar_uri': 'avatarUri',
            'classification_threshold': 'classificationThreshold',
            'default_language_code': 'defaultLanguageCode',
            'description': 'description',
            'display_name': 'displayName',
            'enable_logging': 'enableLogging',
            'match_mode': 'matchMode',
            'parent': 'parent',
            'supported_language_codes': 'supportedLanguageCodes',
            'tier': 'tier',
            'time_zone': 'timeZone'
        }

        self._api_version = api_version
        self._avatar_uri = avatar_uri
        self._classification_threshold = classification_threshold
        self._default_language_code = default_language_code
        self._description = description
        self._display_name = display_name
        self._enable_logging = enable_logging
        self._match_mode = match_mode
        self._parent = parent
        self._supported_language_codes = supported_language_codes
        self._tier = tier
        self._time_zone = time_zone

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDialogflowV2beta1Agent':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDialogflowV2beta1Agent of this GoogleCloudDialogflowV2beta1Agent.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def api_version(self):
        """Gets the api_version of this GoogleCloudDialogflowV2beta1Agent.

        Optional. API version displayed in Dialogflow console. If not specified, V2 API is assumed. Clients are free to query different service endpoints for different API versions. However, bots connectors and webhook calls will follow the specified API version.

        :return: The api_version of this GoogleCloudDialogflowV2beta1Agent.
        :rtype: str
        """
        return self._api_version

    @api_version.setter
    def api_version(self, api_version):
        """Sets the api_version of this GoogleCloudDialogflowV2beta1Agent.

        Optional. API version displayed in Dialogflow console. If not specified, V2 API is assumed. Clients are free to query different service endpoints for different API versions. However, bots connectors and webhook calls will follow the specified API version.

        :param api_version: The api_version of this GoogleCloudDialogflowV2beta1Agent.
        :type api_version: str
        """
        allowed_values = ["API_VERSION_UNSPECIFIED", "API_VERSION_V1", "API_VERSION_V2", "API_VERSION_V2_BETA_1"]  # noqa: E501
        if api_version not in allowed_values:
            raise ValueError(
                "Invalid value for `api_version` ({0}), must be one of {1}"
                .format(api_version, allowed_values)
            )

        self._api_version = api_version

    @property
    def avatar_uri(self):
        """Gets the avatar_uri of this GoogleCloudDialogflowV2beta1Agent.

        Optional. The URI of the agent's avatar. Avatars are used throughout the Dialogflow console and in the self-hosted [Web Demo](https://cloud.google.com/dialogflow/docs/integrations/web-demo) integration.

        :return: The avatar_uri of this GoogleCloudDialogflowV2beta1Agent.
        :rtype: str
        """
        return self._avatar_uri

    @avatar_uri.setter
    def avatar_uri(self, avatar_uri):
        """Sets the avatar_uri of this GoogleCloudDialogflowV2beta1Agent.

        Optional. The URI of the agent's avatar. Avatars are used throughout the Dialogflow console and in the self-hosted [Web Demo](https://cloud.google.com/dialogflow/docs/integrations/web-demo) integration.

        :param avatar_uri: The avatar_uri of this GoogleCloudDialogflowV2beta1Agent.
        :type avatar_uri: str
        """

        self._avatar_uri = avatar_uri

    @property
    def classification_threshold(self):
        """Gets the classification_threshold of this GoogleCloudDialogflowV2beta1Agent.

        Optional. To filter out false positive results and still get variety in matched natural language inputs for your agent, you can tune the machine learning classification threshold. If the returned score value is less than the threshold value, then a fallback intent will be triggered or, if there are no fallback intents defined, no intent will be triggered. The score values range from 0.0 (completely uncertain) to 1.0 (completely certain). If set to 0.0, the default of 0.3 is used.

        :return: The classification_threshold of this GoogleCloudDialogflowV2beta1Agent.
        :rtype: float
        """
        return self._classification_threshold

    @classification_threshold.setter
    def classification_threshold(self, classification_threshold):
        """Sets the classification_threshold of this GoogleCloudDialogflowV2beta1Agent.

        Optional. To filter out false positive results and still get variety in matched natural language inputs for your agent, you can tune the machine learning classification threshold. If the returned score value is less than the threshold value, then a fallback intent will be triggered or, if there are no fallback intents defined, no intent will be triggered. The score values range from 0.0 (completely uncertain) to 1.0 (completely certain). If set to 0.0, the default of 0.3 is used.

        :param classification_threshold: The classification_threshold of this GoogleCloudDialogflowV2beta1Agent.
        :type classification_threshold: float
        """

        self._classification_threshold = classification_threshold

    @property
    def default_language_code(self):
        """Gets the default_language_code of this GoogleCloudDialogflowV2beta1Agent.

        Required. The default language of the agent as a language tag. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported language codes. This field cannot be set by the `Update` method.

        :return: The default_language_code of this GoogleCloudDialogflowV2beta1Agent.
        :rtype: str
        """
        return self._default_language_code

    @default_language_code.setter
    def default_language_code(self, default_language_code):
        """Sets the default_language_code of this GoogleCloudDialogflowV2beta1Agent.

        Required. The default language of the agent as a language tag. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported language codes. This field cannot be set by the `Update` method.

        :param default_language_code: The default_language_code of this GoogleCloudDialogflowV2beta1Agent.
        :type default_language_code: str
        """

        self._default_language_code = default_language_code

    @property
    def description(self):
        """Gets the description of this GoogleCloudDialogflowV2beta1Agent.

        Optional. The description of this agent. The maximum length is 500 characters. If exceeded, the request is rejected.

        :return: The description of this GoogleCloudDialogflowV2beta1Agent.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GoogleCloudDialogflowV2beta1Agent.

        Optional. The description of this agent. The maximum length is 500 characters. If exceeded, the request is rejected.

        :param description: The description of this GoogleCloudDialogflowV2beta1Agent.
        :type description: str
        """

        self._description = description

    @property
    def display_name(self):
        """Gets the display_name of this GoogleCloudDialogflowV2beta1Agent.

        Required. The name of this agent.

        :return: The display_name of this GoogleCloudDialogflowV2beta1Agent.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this GoogleCloudDialogflowV2beta1Agent.

        Required. The name of this agent.

        :param display_name: The display_name of this GoogleCloudDialogflowV2beta1Agent.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def enable_logging(self):
        """Gets the enable_logging of this GoogleCloudDialogflowV2beta1Agent.

        Optional. Determines whether this agent should log conversation queries.

        :return: The enable_logging of this GoogleCloudDialogflowV2beta1Agent.
        :rtype: bool
        """
        return self._enable_logging

    @enable_logging.setter
    def enable_logging(self, enable_logging):
        """Sets the enable_logging of this GoogleCloudDialogflowV2beta1Agent.

        Optional. Determines whether this agent should log conversation queries.

        :param enable_logging: The enable_logging of this GoogleCloudDialogflowV2beta1Agent.
        :type enable_logging: bool
        """

        self._enable_logging = enable_logging

    @property
    def match_mode(self):
        """Gets the match_mode of this GoogleCloudDialogflowV2beta1Agent.

        Optional. Determines how intents are detected from user queries.

        :return: The match_mode of this GoogleCloudDialogflowV2beta1Agent.
        :rtype: str
        """
        return self._match_mode

    @match_mode.setter
    def match_mode(self, match_mode):
        """Sets the match_mode of this GoogleCloudDialogflowV2beta1Agent.

        Optional. Determines how intents are detected from user queries.

        :param match_mode: The match_mode of this GoogleCloudDialogflowV2beta1Agent.
        :type match_mode: str
        """
        allowed_values = ["MATCH_MODE_UNSPECIFIED", "MATCH_MODE_HYBRID", "MATCH_MODE_ML_ONLY"]  # noqa: E501
        if match_mode not in allowed_values:
            raise ValueError(
                "Invalid value for `match_mode` ({0}), must be one of {1}"
                .format(match_mode, allowed_values)
            )

        self._match_mode = match_mode

    @property
    def parent(self):
        """Gets the parent of this GoogleCloudDialogflowV2beta1Agent.

        Required. The project of this agent. Format: `projects/` or `projects//locations/`

        :return: The parent of this GoogleCloudDialogflowV2beta1Agent.
        :rtype: str
        """
        return self._parent

    @parent.setter
    def parent(self, parent):
        """Sets the parent of this GoogleCloudDialogflowV2beta1Agent.

        Required. The project of this agent. Format: `projects/` or `projects//locations/`

        :param parent: The parent of this GoogleCloudDialogflowV2beta1Agent.
        :type parent: str
        """

        self._parent = parent

    @property
    def supported_language_codes(self):
        """Gets the supported_language_codes of this GoogleCloudDialogflowV2beta1Agent.

        Optional. The list of all languages supported by this agent (except for the `default_language_code`).

        :return: The supported_language_codes of this GoogleCloudDialogflowV2beta1Agent.
        :rtype: List[str]
        """
        return self._supported_language_codes

    @supported_language_codes.setter
    def supported_language_codes(self, supported_language_codes):
        """Sets the supported_language_codes of this GoogleCloudDialogflowV2beta1Agent.

        Optional. The list of all languages supported by this agent (except for the `default_language_code`).

        :param supported_language_codes: The supported_language_codes of this GoogleCloudDialogflowV2beta1Agent.
        :type supported_language_codes: List[str]
        """

        self._supported_language_codes = supported_language_codes

    @property
    def tier(self):
        """Gets the tier of this GoogleCloudDialogflowV2beta1Agent.

        Optional. The agent tier. If not specified, TIER_STANDARD is assumed.

        :return: The tier of this GoogleCloudDialogflowV2beta1Agent.
        :rtype: str
        """
        return self._tier

    @tier.setter
    def tier(self, tier):
        """Sets the tier of this GoogleCloudDialogflowV2beta1Agent.

        Optional. The agent tier. If not specified, TIER_STANDARD is assumed.

        :param tier: The tier of this GoogleCloudDialogflowV2beta1Agent.
        :type tier: str
        """
        allowed_values = ["TIER_UNSPECIFIED", "TIER_STANDARD", "TIER_ENTERPRISE", "TIER_ENTERPRISE_PLUS"]  # noqa: E501
        if tier not in allowed_values:
            raise ValueError(
                "Invalid value for `tier` ({0}), must be one of {1}"
                .format(tier, allowed_values)
            )

        self._tier = tier

    @property
    def time_zone(self):
        """Gets the time_zone of this GoogleCloudDialogflowV2beta1Agent.

        Required. The time zone of this agent from the [time zone database](https://www.iana.org/time-zones), e.g., America/New_York, Europe/Paris.

        :return: The time_zone of this GoogleCloudDialogflowV2beta1Agent.
        :rtype: str
        """
        return self._time_zone

    @time_zone.setter
    def time_zone(self, time_zone):
        """Sets the time_zone of this GoogleCloudDialogflowV2beta1Agent.

        Required. The time zone of this agent from the [time zone database](https://www.iana.org/time-zones), e.g., America/New_York, Europe/Paris.

        :param time_zone: The time_zone of this GoogleCloudDialogflowV2beta1Agent.
        :type time_zone: str
        """

        self._time_zone = time_zone
