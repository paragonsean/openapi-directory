# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDialogflowV2beta1SuggestionFaqAnswer(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, answer: str=None, answer_record: str=None, confidence: float=None, metadata: Dict[str, str]=None, question: str=None, source: str=None):
        """GoogleCloudDialogflowV2beta1SuggestionFaqAnswer - a model defined in OpenAPI

        :param answer: The answer of this GoogleCloudDialogflowV2beta1SuggestionFaqAnswer.
        :param answer_record: The answer_record of this GoogleCloudDialogflowV2beta1SuggestionFaqAnswer.
        :param confidence: The confidence of this GoogleCloudDialogflowV2beta1SuggestionFaqAnswer.
        :param metadata: The metadata of this GoogleCloudDialogflowV2beta1SuggestionFaqAnswer.
        :param question: The question of this GoogleCloudDialogflowV2beta1SuggestionFaqAnswer.
        :param source: The source of this GoogleCloudDialogflowV2beta1SuggestionFaqAnswer.
        """
        self.openapi_types = {
            'answer': str,
            'answer_record': str,
            'confidence': float,
            'metadata': Dict[str, str],
            'question': str,
            'source': str
        }

        self.attribute_map = {
            'answer': 'answer',
            'answer_record': 'answerRecord',
            'confidence': 'confidence',
            'metadata': 'metadata',
            'question': 'question',
            'source': 'source'
        }

        self._answer = answer
        self._answer_record = answer_record
        self._confidence = confidence
        self._metadata = metadata
        self._question = question
        self._source = source

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDialogflowV2beta1SuggestionFaqAnswer':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDialogflowV2beta1SuggestionFaqAnswer of this GoogleCloudDialogflowV2beta1SuggestionFaqAnswer.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def answer(self):
        """Gets the answer of this GoogleCloudDialogflowV2beta1SuggestionFaqAnswer.

        Output only. The piece of text from the `source` knowledge base document.

        :return: The answer of this GoogleCloudDialogflowV2beta1SuggestionFaqAnswer.
        :rtype: str
        """
        return self._answer

    @answer.setter
    def answer(self, answer):
        """Sets the answer of this GoogleCloudDialogflowV2beta1SuggestionFaqAnswer.

        Output only. The piece of text from the `source` knowledge base document.

        :param answer: The answer of this GoogleCloudDialogflowV2beta1SuggestionFaqAnswer.
        :type answer: str
        """

        self._answer = answer

    @property
    def answer_record(self):
        """Gets the answer_record of this GoogleCloudDialogflowV2beta1SuggestionFaqAnswer.

        Output only. The name of answer record, in the format of \"projects//locations//answerRecords/\"

        :return: The answer_record of this GoogleCloudDialogflowV2beta1SuggestionFaqAnswer.
        :rtype: str
        """
        return self._answer_record

    @answer_record.setter
    def answer_record(self, answer_record):
        """Sets the answer_record of this GoogleCloudDialogflowV2beta1SuggestionFaqAnswer.

        Output only. The name of answer record, in the format of \"projects//locations//answerRecords/\"

        :param answer_record: The answer_record of this GoogleCloudDialogflowV2beta1SuggestionFaqAnswer.
        :type answer_record: str
        """

        self._answer_record = answer_record

    @property
    def confidence(self):
        """Gets the confidence of this GoogleCloudDialogflowV2beta1SuggestionFaqAnswer.

        The system's confidence score that this Knowledge answer is a good match for this conversational query, range from 0.0 (completely uncertain) to 1.0 (completely certain).

        :return: The confidence of this GoogleCloudDialogflowV2beta1SuggestionFaqAnswer.
        :rtype: float
        """
        return self._confidence

    @confidence.setter
    def confidence(self, confidence):
        """Sets the confidence of this GoogleCloudDialogflowV2beta1SuggestionFaqAnswer.

        The system's confidence score that this Knowledge answer is a good match for this conversational query, range from 0.0 (completely uncertain) to 1.0 (completely certain).

        :param confidence: The confidence of this GoogleCloudDialogflowV2beta1SuggestionFaqAnswer.
        :type confidence: float
        """

        self._confidence = confidence

    @property
    def metadata(self):
        """Gets the metadata of this GoogleCloudDialogflowV2beta1SuggestionFaqAnswer.

        Output only. A map that contains metadata about the answer and the document from which it originates.

        :return: The metadata of this GoogleCloudDialogflowV2beta1SuggestionFaqAnswer.
        :rtype: Dict[str, str]
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this GoogleCloudDialogflowV2beta1SuggestionFaqAnswer.

        Output only. A map that contains metadata about the answer and the document from which it originates.

        :param metadata: The metadata of this GoogleCloudDialogflowV2beta1SuggestionFaqAnswer.
        :type metadata: Dict[str, str]
        """

        self._metadata = metadata

    @property
    def question(self):
        """Gets the question of this GoogleCloudDialogflowV2beta1SuggestionFaqAnswer.

        Output only. The corresponding FAQ question.

        :return: The question of this GoogleCloudDialogflowV2beta1SuggestionFaqAnswer.
        :rtype: str
        """
        return self._question

    @question.setter
    def question(self, question):
        """Sets the question of this GoogleCloudDialogflowV2beta1SuggestionFaqAnswer.

        Output only. The corresponding FAQ question.

        :param question: The question of this GoogleCloudDialogflowV2beta1SuggestionFaqAnswer.
        :type question: str
        """

        self._question = question

    @property
    def source(self):
        """Gets the source of this GoogleCloudDialogflowV2beta1SuggestionFaqAnswer.

        Output only. Indicates which Knowledge Document this answer was extracted from. Format: `projects//locations//agent/knowledgeBases//documents/`.

        :return: The source of this GoogleCloudDialogflowV2beta1SuggestionFaqAnswer.
        :rtype: str
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this GoogleCloudDialogflowV2beta1SuggestionFaqAnswer.

        Output only. Indicates which Knowledge Document this answer was extracted from. Format: `projects//locations//agent/knowledgeBases//documents/`.

        :param source: The source of this GoogleCloudDialogflowV2beta1SuggestionFaqAnswer.
        :type source: str
        """

        self._source = source
