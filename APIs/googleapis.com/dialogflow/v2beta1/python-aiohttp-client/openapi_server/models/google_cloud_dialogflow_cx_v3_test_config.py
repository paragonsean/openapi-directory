# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDialogflowCxV3TestConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, flow: str=None, page: str=None, tracking_parameters: List[str]=None):
        """GoogleCloudDialogflowCxV3TestConfig - a model defined in OpenAPI

        :param flow: The flow of this GoogleCloudDialogflowCxV3TestConfig.
        :param page: The page of this GoogleCloudDialogflowCxV3TestConfig.
        :param tracking_parameters: The tracking_parameters of this GoogleCloudDialogflowCxV3TestConfig.
        """
        self.openapi_types = {
            'flow': str,
            'page': str,
            'tracking_parameters': List[str]
        }

        self.attribute_map = {
            'flow': 'flow',
            'page': 'page',
            'tracking_parameters': 'trackingParameters'
        }

        self._flow = flow
        self._page = page
        self._tracking_parameters = tracking_parameters

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDialogflowCxV3TestConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDialogflowCxV3TestConfig of this GoogleCloudDialogflowCxV3TestConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def flow(self):
        """Gets the flow of this GoogleCloudDialogflowCxV3TestConfig.

        Flow name to start the test case with. Format: `projects//locations//agents//flows/`. Only one of `flow` and `page` should be set to indicate the starting point of the test case. If both are set, `page` takes precedence over `flow`. If neither is set, the test case will start with start page on the default start flow.

        :return: The flow of this GoogleCloudDialogflowCxV3TestConfig.
        :rtype: str
        """
        return self._flow

    @flow.setter
    def flow(self, flow):
        """Sets the flow of this GoogleCloudDialogflowCxV3TestConfig.

        Flow name to start the test case with. Format: `projects//locations//agents//flows/`. Only one of `flow` and `page` should be set to indicate the starting point of the test case. If both are set, `page` takes precedence over `flow`. If neither is set, the test case will start with start page on the default start flow.

        :param flow: The flow of this GoogleCloudDialogflowCxV3TestConfig.
        :type flow: str
        """

        self._flow = flow

    @property
    def page(self):
        """Gets the page of this GoogleCloudDialogflowCxV3TestConfig.

        The page to start the test case with. Format: `projects//locations//agents//flows//pages/`. Only one of `flow` and `page` should be set to indicate the starting point of the test case. If both are set, `page` takes precedence over `flow`. If neither is set, the test case will start with start page on the default start flow.

        :return: The page of this GoogleCloudDialogflowCxV3TestConfig.
        :rtype: str
        """
        return self._page

    @page.setter
    def page(self, page):
        """Sets the page of this GoogleCloudDialogflowCxV3TestConfig.

        The page to start the test case with. Format: `projects//locations//agents//flows//pages/`. Only one of `flow` and `page` should be set to indicate the starting point of the test case. If both are set, `page` takes precedence over `flow`. If neither is set, the test case will start with start page on the default start flow.

        :param page: The page of this GoogleCloudDialogflowCxV3TestConfig.
        :type page: str
        """

        self._page = page

    @property
    def tracking_parameters(self):
        """Gets the tracking_parameters of this GoogleCloudDialogflowCxV3TestConfig.

        Session parameters to be compared when calculating differences.

        :return: The tracking_parameters of this GoogleCloudDialogflowCxV3TestConfig.
        :rtype: List[str]
        """
        return self._tracking_parameters

    @tracking_parameters.setter
    def tracking_parameters(self, tracking_parameters):
        """Sets the tracking_parameters of this GoogleCloudDialogflowCxV3TestConfig.

        Session parameters to be compared when calculating differences.

        :param tracking_parameters: The tracking_parameters of this GoogleCloudDialogflowCxV3TestConfig.
        :type tracking_parameters: List[str]
        """

        self._tracking_parameters = tracking_parameters
