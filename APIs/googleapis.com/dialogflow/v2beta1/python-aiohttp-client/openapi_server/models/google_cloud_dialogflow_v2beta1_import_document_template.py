# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDialogflowV2beta1ImportDocumentTemplate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, knowledge_types: List[str]=None, metadata: Dict[str, str]=None, mime_type: str=None):
        """GoogleCloudDialogflowV2beta1ImportDocumentTemplate - a model defined in OpenAPI

        :param knowledge_types: The knowledge_types of this GoogleCloudDialogflowV2beta1ImportDocumentTemplate.
        :param metadata: The metadata of this GoogleCloudDialogflowV2beta1ImportDocumentTemplate.
        :param mime_type: The mime_type of this GoogleCloudDialogflowV2beta1ImportDocumentTemplate.
        """
        self.openapi_types = {
            'knowledge_types': List[str],
            'metadata': Dict[str, str],
            'mime_type': str
        }

        self.attribute_map = {
            'knowledge_types': 'knowledgeTypes',
            'metadata': 'metadata',
            'mime_type': 'mimeType'
        }

        self._knowledge_types = knowledge_types
        self._metadata = metadata
        self._mime_type = mime_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDialogflowV2beta1ImportDocumentTemplate':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDialogflowV2beta1ImportDocumentTemplate of this GoogleCloudDialogflowV2beta1ImportDocumentTemplate.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def knowledge_types(self):
        """Gets the knowledge_types of this GoogleCloudDialogflowV2beta1ImportDocumentTemplate.

        Required. The knowledge type of document content.

        :return: The knowledge_types of this GoogleCloudDialogflowV2beta1ImportDocumentTemplate.
        :rtype: List[str]
        """
        return self._knowledge_types

    @knowledge_types.setter
    def knowledge_types(self, knowledge_types):
        """Sets the knowledge_types of this GoogleCloudDialogflowV2beta1ImportDocumentTemplate.

        Required. The knowledge type of document content.

        :param knowledge_types: The knowledge_types of this GoogleCloudDialogflowV2beta1ImportDocumentTemplate.
        :type knowledge_types: List[str]
        """
        allowed_values = ["KNOWLEDGE_TYPE_UNSPECIFIED", "FAQ", "EXTRACTIVE_QA", "ARTICLE_SUGGESTION", "AGENT_FACING_SMART_REPLY", "SMART_REPLY"]  # noqa: E501
        if not set(knowledge_types).issubset(set(allowed_values)):
            raise ValueError(
                "Invalid values for `knowledge_types` [{0}], must be a subset of [{1}]"
                .format(", ".join(map(str, set(knowledge_types) - set(allowed_values))),
                        ", ".join(map(str, allowed_values)))
            )

        self._knowledge_types = knowledge_types

    @property
    def metadata(self):
        """Gets the metadata of this GoogleCloudDialogflowV2beta1ImportDocumentTemplate.

        Metadata for the document. The metadata supports arbitrary key-value pairs. Suggested use cases include storing a document's title, an external URL distinct from the document's content_uri, etc. The max size of a `key` or a `value` of the metadata is 1024 bytes.

        :return: The metadata of this GoogleCloudDialogflowV2beta1ImportDocumentTemplate.
        :rtype: Dict[str, str]
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this GoogleCloudDialogflowV2beta1ImportDocumentTemplate.

        Metadata for the document. The metadata supports arbitrary key-value pairs. Suggested use cases include storing a document's title, an external URL distinct from the document's content_uri, etc. The max size of a `key` or a `value` of the metadata is 1024 bytes.

        :param metadata: The metadata of this GoogleCloudDialogflowV2beta1ImportDocumentTemplate.
        :type metadata: Dict[str, str]
        """

        self._metadata = metadata

    @property
    def mime_type(self):
        """Gets the mime_type of this GoogleCloudDialogflowV2beta1ImportDocumentTemplate.

        Required. The MIME type of the document.

        :return: The mime_type of this GoogleCloudDialogflowV2beta1ImportDocumentTemplate.
        :rtype: str
        """
        return self._mime_type

    @mime_type.setter
    def mime_type(self, mime_type):
        """Sets the mime_type of this GoogleCloudDialogflowV2beta1ImportDocumentTemplate.

        Required. The MIME type of the document.

        :param mime_type: The mime_type of this GoogleCloudDialogflowV2beta1ImportDocumentTemplate.
        :type mime_type: str
        """

        self._mime_type = mime_type
