# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDialogflowV2beta1HumanAgentHandoffConfigSalesforceLiveAgentConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, button_id: str=None, deployment_id: str=None, endpoint_domain: str=None, organization_id: str=None):
        """GoogleCloudDialogflowV2beta1HumanAgentHandoffConfigSalesforceLiveAgentConfig - a model defined in OpenAPI

        :param button_id: The button_id of this GoogleCloudDialogflowV2beta1HumanAgentHandoffConfigSalesforceLiveAgentConfig.
        :param deployment_id: The deployment_id of this GoogleCloudDialogflowV2beta1HumanAgentHandoffConfigSalesforceLiveAgentConfig.
        :param endpoint_domain: The endpoint_domain of this GoogleCloudDialogflowV2beta1HumanAgentHandoffConfigSalesforceLiveAgentConfig.
        :param organization_id: The organization_id of this GoogleCloudDialogflowV2beta1HumanAgentHandoffConfigSalesforceLiveAgentConfig.
        """
        self.openapi_types = {
            'button_id': str,
            'deployment_id': str,
            'endpoint_domain': str,
            'organization_id': str
        }

        self.attribute_map = {
            'button_id': 'buttonId',
            'deployment_id': 'deploymentId',
            'endpoint_domain': 'endpointDomain',
            'organization_id': 'organizationId'
        }

        self._button_id = button_id
        self._deployment_id = deployment_id
        self._endpoint_domain = endpoint_domain
        self._organization_id = organization_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDialogflowV2beta1HumanAgentHandoffConfigSalesforceLiveAgentConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDialogflowV2beta1HumanAgentHandoffConfigSalesforceLiveAgentConfig of this GoogleCloudDialogflowV2beta1HumanAgentHandoffConfigSalesforceLiveAgentConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def button_id(self):
        """Gets the button_id of this GoogleCloudDialogflowV2beta1HumanAgentHandoffConfigSalesforceLiveAgentConfig.

        Required. Live Agent chat button ID.

        :return: The button_id of this GoogleCloudDialogflowV2beta1HumanAgentHandoffConfigSalesforceLiveAgentConfig.
        :rtype: str
        """
        return self._button_id

    @button_id.setter
    def button_id(self, button_id):
        """Sets the button_id of this GoogleCloudDialogflowV2beta1HumanAgentHandoffConfigSalesforceLiveAgentConfig.

        Required. Live Agent chat button ID.

        :param button_id: The button_id of this GoogleCloudDialogflowV2beta1HumanAgentHandoffConfigSalesforceLiveAgentConfig.
        :type button_id: str
        """

        self._button_id = button_id

    @property
    def deployment_id(self):
        """Gets the deployment_id of this GoogleCloudDialogflowV2beta1HumanAgentHandoffConfigSalesforceLiveAgentConfig.

        Required. Live Agent deployment ID.

        :return: The deployment_id of this GoogleCloudDialogflowV2beta1HumanAgentHandoffConfigSalesforceLiveAgentConfig.
        :rtype: str
        """
        return self._deployment_id

    @deployment_id.setter
    def deployment_id(self, deployment_id):
        """Sets the deployment_id of this GoogleCloudDialogflowV2beta1HumanAgentHandoffConfigSalesforceLiveAgentConfig.

        Required. Live Agent deployment ID.

        :param deployment_id: The deployment_id of this GoogleCloudDialogflowV2beta1HumanAgentHandoffConfigSalesforceLiveAgentConfig.
        :type deployment_id: str
        """

        self._deployment_id = deployment_id

    @property
    def endpoint_domain(self):
        """Gets the endpoint_domain of this GoogleCloudDialogflowV2beta1HumanAgentHandoffConfigSalesforceLiveAgentConfig.

        Required. Domain of the Live Agent endpoint for this agent. You can find the endpoint URL in the `Live Agent settings` page. For example if URL has the form https://d.la4-c2-phx.salesforceliveagent.com/..., you should fill in d.la4-c2-phx.salesforceliveagent.com.

        :return: The endpoint_domain of this GoogleCloudDialogflowV2beta1HumanAgentHandoffConfigSalesforceLiveAgentConfig.
        :rtype: str
        """
        return self._endpoint_domain

    @endpoint_domain.setter
    def endpoint_domain(self, endpoint_domain):
        """Sets the endpoint_domain of this GoogleCloudDialogflowV2beta1HumanAgentHandoffConfigSalesforceLiveAgentConfig.

        Required. Domain of the Live Agent endpoint for this agent. You can find the endpoint URL in the `Live Agent settings` page. For example if URL has the form https://d.la4-c2-phx.salesforceliveagent.com/..., you should fill in d.la4-c2-phx.salesforceliveagent.com.

        :param endpoint_domain: The endpoint_domain of this GoogleCloudDialogflowV2beta1HumanAgentHandoffConfigSalesforceLiveAgentConfig.
        :type endpoint_domain: str
        """

        self._endpoint_domain = endpoint_domain

    @property
    def organization_id(self):
        """Gets the organization_id of this GoogleCloudDialogflowV2beta1HumanAgentHandoffConfigSalesforceLiveAgentConfig.

        Required. The organization ID of the Salesforce account.

        :return: The organization_id of this GoogleCloudDialogflowV2beta1HumanAgentHandoffConfigSalesforceLiveAgentConfig.
        :rtype: str
        """
        return self._organization_id

    @organization_id.setter
    def organization_id(self, organization_id):
        """Sets the organization_id of this GoogleCloudDialogflowV2beta1HumanAgentHandoffConfigSalesforceLiveAgentConfig.

        Required. The organization ID of the Salesforce account.

        :param organization_id: The organization_id of this GoogleCloudDialogflowV2beta1HumanAgentHandoffConfigSalesforceLiveAgentConfig.
        :type organization_id: str
        """

        self._organization_id = organization_id
