# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDialogflowV2beta1AssistQueryParameters(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, documents_metadata_filters: Dict[str, str]=None):
        """GoogleCloudDialogflowV2beta1AssistQueryParameters - a model defined in OpenAPI

        :param documents_metadata_filters: The documents_metadata_filters of this GoogleCloudDialogflowV2beta1AssistQueryParameters.
        """
        self.openapi_types = {
            'documents_metadata_filters': Dict[str, str]
        }

        self.attribute_map = {
            'documents_metadata_filters': 'documentsMetadataFilters'
        }

        self._documents_metadata_filters = documents_metadata_filters

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDialogflowV2beta1AssistQueryParameters':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDialogflowV2beta1AssistQueryParameters of this GoogleCloudDialogflowV2beta1AssistQueryParameters.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def documents_metadata_filters(self):
        """Gets the documents_metadata_filters of this GoogleCloudDialogflowV2beta1AssistQueryParameters.

        Key-value filters on the metadata of documents returned by article suggestion. If specified, article suggestion only returns suggested documents that match all filters in their Document.metadata. Multiple values for a metadata key should be concatenated by comma. For example, filters to match all documents that have 'US' or 'CA' in their market metadata values and 'agent' in their user metadata values will be ``` documents_metadata_filters { key: \"market\" value: \"US,CA\" } documents_metadata_filters { key: \"user\" value: \"agent\" } ```

        :return: The documents_metadata_filters of this GoogleCloudDialogflowV2beta1AssistQueryParameters.
        :rtype: Dict[str, str]
        """
        return self._documents_metadata_filters

    @documents_metadata_filters.setter
    def documents_metadata_filters(self, documents_metadata_filters):
        """Sets the documents_metadata_filters of this GoogleCloudDialogflowV2beta1AssistQueryParameters.

        Key-value filters on the metadata of documents returned by article suggestion. If specified, article suggestion only returns suggested documents that match all filters in their Document.metadata. Multiple values for a metadata key should be concatenated by comma. For example, filters to match all documents that have 'US' or 'CA' in their market metadata values and 'agent' in their user metadata values will be ``` documents_metadata_filters { key: \"market\" value: \"US,CA\" } documents_metadata_filters { key: \"user\" value: \"agent\" } ```

        :param documents_metadata_filters: The documents_metadata_filters of this GoogleCloudDialogflowV2beta1AssistQueryParameters.
        :type documents_metadata_filters: Dict[str, str]
        """

        self._documents_metadata_filters = documents_metadata_filters
