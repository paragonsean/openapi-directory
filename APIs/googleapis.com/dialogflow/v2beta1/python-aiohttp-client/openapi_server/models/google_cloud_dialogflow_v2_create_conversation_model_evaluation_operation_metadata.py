# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDialogflowV2CreateConversationModelEvaluationOperationMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, conversation_model: str=None, conversation_model_evaluation: str=None, create_time: str=None, state: str=None):
        """GoogleCloudDialogflowV2CreateConversationModelEvaluationOperationMetadata - a model defined in OpenAPI

        :param conversation_model: The conversation_model of this GoogleCloudDialogflowV2CreateConversationModelEvaluationOperationMetadata.
        :param conversation_model_evaluation: The conversation_model_evaluation of this GoogleCloudDialogflowV2CreateConversationModelEvaluationOperationMetadata.
        :param create_time: The create_time of this GoogleCloudDialogflowV2CreateConversationModelEvaluationOperationMetadata.
        :param state: The state of this GoogleCloudDialogflowV2CreateConversationModelEvaluationOperationMetadata.
        """
        self.openapi_types = {
            'conversation_model': str,
            'conversation_model_evaluation': str,
            'create_time': str,
            'state': str
        }

        self.attribute_map = {
            'conversation_model': 'conversationModel',
            'conversation_model_evaluation': 'conversationModelEvaluation',
            'create_time': 'createTime',
            'state': 'state'
        }

        self._conversation_model = conversation_model
        self._conversation_model_evaluation = conversation_model_evaluation
        self._create_time = create_time
        self._state = state

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDialogflowV2CreateConversationModelEvaluationOperationMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDialogflowV2CreateConversationModelEvaluationOperationMetadata of this GoogleCloudDialogflowV2CreateConversationModelEvaluationOperationMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def conversation_model(self):
        """Gets the conversation_model of this GoogleCloudDialogflowV2CreateConversationModelEvaluationOperationMetadata.

        The resource name of the conversation model. Format: `projects//locations//conversationModels/`

        :return: The conversation_model of this GoogleCloudDialogflowV2CreateConversationModelEvaluationOperationMetadata.
        :rtype: str
        """
        return self._conversation_model

    @conversation_model.setter
    def conversation_model(self, conversation_model):
        """Sets the conversation_model of this GoogleCloudDialogflowV2CreateConversationModelEvaluationOperationMetadata.

        The resource name of the conversation model. Format: `projects//locations//conversationModels/`

        :param conversation_model: The conversation_model of this GoogleCloudDialogflowV2CreateConversationModelEvaluationOperationMetadata.
        :type conversation_model: str
        """

        self._conversation_model = conversation_model

    @property
    def conversation_model_evaluation(self):
        """Gets the conversation_model_evaluation of this GoogleCloudDialogflowV2CreateConversationModelEvaluationOperationMetadata.

        The resource name of the conversation model. Format: `projects//locations//conversationModels//evaluations/`

        :return: The conversation_model_evaluation of this GoogleCloudDialogflowV2CreateConversationModelEvaluationOperationMetadata.
        :rtype: str
        """
        return self._conversation_model_evaluation

    @conversation_model_evaluation.setter
    def conversation_model_evaluation(self, conversation_model_evaluation):
        """Sets the conversation_model_evaluation of this GoogleCloudDialogflowV2CreateConversationModelEvaluationOperationMetadata.

        The resource name of the conversation model. Format: `projects//locations//conversationModels//evaluations/`

        :param conversation_model_evaluation: The conversation_model_evaluation of this GoogleCloudDialogflowV2CreateConversationModelEvaluationOperationMetadata.
        :type conversation_model_evaluation: str
        """

        self._conversation_model_evaluation = conversation_model_evaluation

    @property
    def create_time(self):
        """Gets the create_time of this GoogleCloudDialogflowV2CreateConversationModelEvaluationOperationMetadata.

        Timestamp when the request to create conversation model was submitted. The time is measured on server side.

        :return: The create_time of this GoogleCloudDialogflowV2CreateConversationModelEvaluationOperationMetadata.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this GoogleCloudDialogflowV2CreateConversationModelEvaluationOperationMetadata.

        Timestamp when the request to create conversation model was submitted. The time is measured on server side.

        :param create_time: The create_time of this GoogleCloudDialogflowV2CreateConversationModelEvaluationOperationMetadata.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def state(self):
        """Gets the state of this GoogleCloudDialogflowV2CreateConversationModelEvaluationOperationMetadata.

        State of CreateConversationModel operation.

        :return: The state of this GoogleCloudDialogflowV2CreateConversationModelEvaluationOperationMetadata.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this GoogleCloudDialogflowV2CreateConversationModelEvaluationOperationMetadata.

        State of CreateConversationModel operation.

        :param state: The state of this GoogleCloudDialogflowV2CreateConversationModelEvaluationOperationMetadata.
        :type state: str
        """
        allowed_values = ["STATE_UNSPECIFIED", "INITIALIZING", "RUNNING", "CANCELLED", "SUCCEEDED", "FAILED"]  # noqa: E501
        if state not in allowed_values:
            raise ValueError(
                "Invalid value for `state` ({0}), must be one of {1}"
                .format(state, allowed_values)
            )

        self._state = state
