# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_dialogflow_v2beta1_assist_query_parameters import GoogleCloudDialogflowV2beta1AssistQueryParameters
from openapi_server.models.google_cloud_dialogflow_v2beta1_audio_input import GoogleCloudDialogflowV2beta1AudioInput
from openapi_server.models.google_cloud_dialogflow_v2beta1_event_input import GoogleCloudDialogflowV2beta1EventInput
from openapi_server.models.google_cloud_dialogflow_v2beta1_intent_input import GoogleCloudDialogflowV2beta1IntentInput
from openapi_server.models.google_cloud_dialogflow_v2beta1_output_audio_config import GoogleCloudDialogflowV2beta1OutputAudioConfig
from openapi_server.models.google_cloud_dialogflow_v2beta1_query_parameters import GoogleCloudDialogflowV2beta1QueryParameters
from openapi_server.models.google_cloud_dialogflow_v2beta1_suggestion_input import GoogleCloudDialogflowV2beta1SuggestionInput
from openapi_server.models.google_cloud_dialogflow_v2beta1_text_input import GoogleCloudDialogflowV2beta1TextInput
from openapi_server import util


class GoogleCloudDialogflowV2beta1AnalyzeContentRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, assist_query_params: GoogleCloudDialogflowV2beta1AssistQueryParameters=None, audio_input: GoogleCloudDialogflowV2beta1AudioInput=None, cx_current_page: str=None, cx_parameters: Dict[str, object]=None, event_input: GoogleCloudDialogflowV2beta1EventInput=None, intent_input: GoogleCloudDialogflowV2beta1IntentInput=None, message_send_time: str=None, _query_params: GoogleCloudDialogflowV2beta1QueryParameters=None, reply_audio_config: GoogleCloudDialogflowV2beta1OutputAudioConfig=None, request_id: str=None, suggestion_input: GoogleCloudDialogflowV2beta1SuggestionInput=None, text_input: GoogleCloudDialogflowV2beta1TextInput=None):
        """GoogleCloudDialogflowV2beta1AnalyzeContentRequest - a model defined in OpenAPI

        :param assist_query_params: The assist_query_params of this GoogleCloudDialogflowV2beta1AnalyzeContentRequest.
        :param audio_input: The audio_input of this GoogleCloudDialogflowV2beta1AnalyzeContentRequest.
        :param cx_current_page: The cx_current_page of this GoogleCloudDialogflowV2beta1AnalyzeContentRequest.
        :param cx_parameters: The cx_parameters of this GoogleCloudDialogflowV2beta1AnalyzeContentRequest.
        :param event_input: The event_input of this GoogleCloudDialogflowV2beta1AnalyzeContentRequest.
        :param intent_input: The intent_input of this GoogleCloudDialogflowV2beta1AnalyzeContentRequest.
        :param message_send_time: The message_send_time of this GoogleCloudDialogflowV2beta1AnalyzeContentRequest.
        :param _query_params: The _query_params of this GoogleCloudDialogflowV2beta1AnalyzeContentRequest.
        :param reply_audio_config: The reply_audio_config of this GoogleCloudDialogflowV2beta1AnalyzeContentRequest.
        :param request_id: The request_id of this GoogleCloudDialogflowV2beta1AnalyzeContentRequest.
        :param suggestion_input: The suggestion_input of this GoogleCloudDialogflowV2beta1AnalyzeContentRequest.
        :param text_input: The text_input of this GoogleCloudDialogflowV2beta1AnalyzeContentRequest.
        """
        self.openapi_types = {
            'assist_query_params': GoogleCloudDialogflowV2beta1AssistQueryParameters,
            'audio_input': GoogleCloudDialogflowV2beta1AudioInput,
            'cx_current_page': str,
            'cx_parameters': Dict[str, object],
            'event_input': GoogleCloudDialogflowV2beta1EventInput,
            'intent_input': GoogleCloudDialogflowV2beta1IntentInput,
            'message_send_time': str,
            '_query_params': GoogleCloudDialogflowV2beta1QueryParameters,
            'reply_audio_config': GoogleCloudDialogflowV2beta1OutputAudioConfig,
            'request_id': str,
            'suggestion_input': GoogleCloudDialogflowV2beta1SuggestionInput,
            'text_input': GoogleCloudDialogflowV2beta1TextInput
        }

        self.attribute_map = {
            'assist_query_params': 'assistQueryParams',
            'audio_input': 'audioInput',
            'cx_current_page': 'cxCurrentPage',
            'cx_parameters': 'cxParameters',
            'event_input': 'eventInput',
            'intent_input': 'intentInput',
            'message_send_time': 'messageSendTime',
            '_query_params': 'queryParams',
            'reply_audio_config': 'replyAudioConfig',
            'request_id': 'requestId',
            'suggestion_input': 'suggestionInput',
            'text_input': 'textInput'
        }

        self._assist_query_params = assist_query_params
        self._audio_input = audio_input
        self._cx_current_page = cx_current_page
        self._cx_parameters = cx_parameters
        self._event_input = event_input
        self._intent_input = intent_input
        self._message_send_time = message_send_time
        self.__query_params = _query_params
        self._reply_audio_config = reply_audio_config
        self._request_id = request_id
        self._suggestion_input = suggestion_input
        self._text_input = text_input

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDialogflowV2beta1AnalyzeContentRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDialogflowV2beta1AnalyzeContentRequest of this GoogleCloudDialogflowV2beta1AnalyzeContentRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def assist_query_params(self):
        """Gets the assist_query_params of this GoogleCloudDialogflowV2beta1AnalyzeContentRequest.


        :return: The assist_query_params of this GoogleCloudDialogflowV2beta1AnalyzeContentRequest.
        :rtype: GoogleCloudDialogflowV2beta1AssistQueryParameters
        """
        return self._assist_query_params

    @assist_query_params.setter
    def assist_query_params(self, assist_query_params):
        """Sets the assist_query_params of this GoogleCloudDialogflowV2beta1AnalyzeContentRequest.


        :param assist_query_params: The assist_query_params of this GoogleCloudDialogflowV2beta1AnalyzeContentRequest.
        :type assist_query_params: GoogleCloudDialogflowV2beta1AssistQueryParameters
        """

        self._assist_query_params = assist_query_params

    @property
    def audio_input(self):
        """Gets the audio_input of this GoogleCloudDialogflowV2beta1AnalyzeContentRequest.


        :return: The audio_input of this GoogleCloudDialogflowV2beta1AnalyzeContentRequest.
        :rtype: GoogleCloudDialogflowV2beta1AudioInput
        """
        return self._audio_input

    @audio_input.setter
    def audio_input(self, audio_input):
        """Sets the audio_input of this GoogleCloudDialogflowV2beta1AnalyzeContentRequest.


        :param audio_input: The audio_input of this GoogleCloudDialogflowV2beta1AnalyzeContentRequest.
        :type audio_input: GoogleCloudDialogflowV2beta1AudioInput
        """

        self._audio_input = audio_input

    @property
    def cx_current_page(self):
        """Gets the cx_current_page of this GoogleCloudDialogflowV2beta1AnalyzeContentRequest.

        The unique identifier of the CX page to override the `current_page` in the session. Format: `projects//locations//agents//flows//pages/`. If `cx_current_page` is specified, the previous state of the session will be ignored by Dialogflow CX, including the previous page and the previous session parameters. In most cases, `cx_current_page` and `cx_parameters` should be configured together to direct a session to a specific state. Note: this field should only be used if you are connecting to a Dialogflow CX agent.

        :return: The cx_current_page of this GoogleCloudDialogflowV2beta1AnalyzeContentRequest.
        :rtype: str
        """
        return self._cx_current_page

    @cx_current_page.setter
    def cx_current_page(self, cx_current_page):
        """Sets the cx_current_page of this GoogleCloudDialogflowV2beta1AnalyzeContentRequest.

        The unique identifier of the CX page to override the `current_page` in the session. Format: `projects//locations//agents//flows//pages/`. If `cx_current_page` is specified, the previous state of the session will be ignored by Dialogflow CX, including the previous page and the previous session parameters. In most cases, `cx_current_page` and `cx_parameters` should be configured together to direct a session to a specific state. Note: this field should only be used if you are connecting to a Dialogflow CX agent.

        :param cx_current_page: The cx_current_page of this GoogleCloudDialogflowV2beta1AnalyzeContentRequest.
        :type cx_current_page: str
        """

        self._cx_current_page = cx_current_page

    @property
    def cx_parameters(self):
        """Gets the cx_parameters of this GoogleCloudDialogflowV2beta1AnalyzeContentRequest.

        Additional parameters to be put into Dialogflow CX session parameters. To remove a parameter from the session, clients should explicitly set the parameter value to null. Note: this field should only be used if you are connecting to a Dialogflow CX agent.

        :return: The cx_parameters of this GoogleCloudDialogflowV2beta1AnalyzeContentRequest.
        :rtype: Dict[str, object]
        """
        return self._cx_parameters

    @cx_parameters.setter
    def cx_parameters(self, cx_parameters):
        """Sets the cx_parameters of this GoogleCloudDialogflowV2beta1AnalyzeContentRequest.

        Additional parameters to be put into Dialogflow CX session parameters. To remove a parameter from the session, clients should explicitly set the parameter value to null. Note: this field should only be used if you are connecting to a Dialogflow CX agent.

        :param cx_parameters: The cx_parameters of this GoogleCloudDialogflowV2beta1AnalyzeContentRequest.
        :type cx_parameters: Dict[str, object]
        """

        self._cx_parameters = cx_parameters

    @property
    def event_input(self):
        """Gets the event_input of this GoogleCloudDialogflowV2beta1AnalyzeContentRequest.


        :return: The event_input of this GoogleCloudDialogflowV2beta1AnalyzeContentRequest.
        :rtype: GoogleCloudDialogflowV2beta1EventInput
        """
        return self._event_input

    @event_input.setter
    def event_input(self, event_input):
        """Sets the event_input of this GoogleCloudDialogflowV2beta1AnalyzeContentRequest.


        :param event_input: The event_input of this GoogleCloudDialogflowV2beta1AnalyzeContentRequest.
        :type event_input: GoogleCloudDialogflowV2beta1EventInput
        """

        self._event_input = event_input

    @property
    def intent_input(self):
        """Gets the intent_input of this GoogleCloudDialogflowV2beta1AnalyzeContentRequest.


        :return: The intent_input of this GoogleCloudDialogflowV2beta1AnalyzeContentRequest.
        :rtype: GoogleCloudDialogflowV2beta1IntentInput
        """
        return self._intent_input

    @intent_input.setter
    def intent_input(self, intent_input):
        """Sets the intent_input of this GoogleCloudDialogflowV2beta1AnalyzeContentRequest.


        :param intent_input: The intent_input of this GoogleCloudDialogflowV2beta1AnalyzeContentRequest.
        :type intent_input: GoogleCloudDialogflowV2beta1IntentInput
        """

        self._intent_input = intent_input

    @property
    def message_send_time(self):
        """Gets the message_send_time of this GoogleCloudDialogflowV2beta1AnalyzeContentRequest.

        Optional. The send time of the message from end user or human agent's perspective. It is used for identifying the same message under one participant. Given two messages under the same participant: * If send time are different regardless of whether the content of the messages are exactly the same, the conversation will regard them as two distinct messages sent by the participant. * If send time is the same regardless of whether the content of the messages are exactly the same, the conversation will regard them as same message, and ignore the message received later. If the value is not provided, a new request will always be regarded as a new message without any de-duplication.

        :return: The message_send_time of this GoogleCloudDialogflowV2beta1AnalyzeContentRequest.
        :rtype: str
        """
        return self._message_send_time

    @message_send_time.setter
    def message_send_time(self, message_send_time):
        """Sets the message_send_time of this GoogleCloudDialogflowV2beta1AnalyzeContentRequest.

        Optional. The send time of the message from end user or human agent's perspective. It is used for identifying the same message under one participant. Given two messages under the same participant: * If send time are different regardless of whether the content of the messages are exactly the same, the conversation will regard them as two distinct messages sent by the participant. * If send time is the same regardless of whether the content of the messages are exactly the same, the conversation will regard them as same message, and ignore the message received later. If the value is not provided, a new request will always be regarded as a new message without any de-duplication.

        :param message_send_time: The message_send_time of this GoogleCloudDialogflowV2beta1AnalyzeContentRequest.
        :type message_send_time: str
        """

        self._message_send_time = message_send_time

    @property
    def _query_params(self):
        """Gets the _query_params of this GoogleCloudDialogflowV2beta1AnalyzeContentRequest.


        :return: The _query_params of this GoogleCloudDialogflowV2beta1AnalyzeContentRequest.
        :rtype: GoogleCloudDialogflowV2beta1QueryParameters
        """
        return self.__query_params

    @_query_params.setter
    def _query_params(self, _query_params):
        """Sets the _query_params of this GoogleCloudDialogflowV2beta1AnalyzeContentRequest.


        :param _query_params: The _query_params of this GoogleCloudDialogflowV2beta1AnalyzeContentRequest.
        :type _query_params: GoogleCloudDialogflowV2beta1QueryParameters
        """

        self.__query_params = _query_params

    @property
    def reply_audio_config(self):
        """Gets the reply_audio_config of this GoogleCloudDialogflowV2beta1AnalyzeContentRequest.


        :return: The reply_audio_config of this GoogleCloudDialogflowV2beta1AnalyzeContentRequest.
        :rtype: GoogleCloudDialogflowV2beta1OutputAudioConfig
        """
        return self._reply_audio_config

    @reply_audio_config.setter
    def reply_audio_config(self, reply_audio_config):
        """Sets the reply_audio_config of this GoogleCloudDialogflowV2beta1AnalyzeContentRequest.


        :param reply_audio_config: The reply_audio_config of this GoogleCloudDialogflowV2beta1AnalyzeContentRequest.
        :type reply_audio_config: GoogleCloudDialogflowV2beta1OutputAudioConfig
        """

        self._reply_audio_config = reply_audio_config

    @property
    def request_id(self):
        """Gets the request_id of this GoogleCloudDialogflowV2beta1AnalyzeContentRequest.

        A unique identifier for this request. Restricted to 36 ASCII characters. A random UUID is recommended. This request is only idempotent if a `request_id` is provided.

        :return: The request_id of this GoogleCloudDialogflowV2beta1AnalyzeContentRequest.
        :rtype: str
        """
        return self._request_id

    @request_id.setter
    def request_id(self, request_id):
        """Sets the request_id of this GoogleCloudDialogflowV2beta1AnalyzeContentRequest.

        A unique identifier for this request. Restricted to 36 ASCII characters. A random UUID is recommended. This request is only idempotent if a `request_id` is provided.

        :param request_id: The request_id of this GoogleCloudDialogflowV2beta1AnalyzeContentRequest.
        :type request_id: str
        """

        self._request_id = request_id

    @property
    def suggestion_input(self):
        """Gets the suggestion_input of this GoogleCloudDialogflowV2beta1AnalyzeContentRequest.


        :return: The suggestion_input of this GoogleCloudDialogflowV2beta1AnalyzeContentRequest.
        :rtype: GoogleCloudDialogflowV2beta1SuggestionInput
        """
        return self._suggestion_input

    @suggestion_input.setter
    def suggestion_input(self, suggestion_input):
        """Sets the suggestion_input of this GoogleCloudDialogflowV2beta1AnalyzeContentRequest.


        :param suggestion_input: The suggestion_input of this GoogleCloudDialogflowV2beta1AnalyzeContentRequest.
        :type suggestion_input: GoogleCloudDialogflowV2beta1SuggestionInput
        """

        self._suggestion_input = suggestion_input

    @property
    def text_input(self):
        """Gets the text_input of this GoogleCloudDialogflowV2beta1AnalyzeContentRequest.


        :return: The text_input of this GoogleCloudDialogflowV2beta1AnalyzeContentRequest.
        :rtype: GoogleCloudDialogflowV2beta1TextInput
        """
        return self._text_input

    @text_input.setter
    def text_input(self, text_input):
        """Sets the text_input of this GoogleCloudDialogflowV2beta1AnalyzeContentRequest.


        :param text_input: The text_input of this GoogleCloudDialogflowV2beta1AnalyzeContentRequest.
        :type text_input: GoogleCloudDialogflowV2beta1TextInput
        """

        self._text_input = text_input
