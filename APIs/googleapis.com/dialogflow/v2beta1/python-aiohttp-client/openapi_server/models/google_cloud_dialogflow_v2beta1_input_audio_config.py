# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_dialogflow_v2beta1_barge_in_config import GoogleCloudDialogflowV2beta1BargeInConfig
from openapi_server.models.google_cloud_dialogflow_v2beta1_speech_context import GoogleCloudDialogflowV2beta1SpeechContext
from openapi_server import util


class GoogleCloudDialogflowV2beta1InputAudioConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, audio_encoding: str=None, barge_in_config: GoogleCloudDialogflowV2beta1BargeInConfig=None, disable_no_speech_recognized_event: bool=None, enable_automatic_punctuation: bool=None, enable_word_info: bool=None, language_code: str=None, model: str=None, model_variant: str=None, opt_out_conformer_model_migration: bool=None, phrase_hints: List[str]=None, sample_rate_hertz: int=None, single_utterance: bool=None, speech_contexts: List[GoogleCloudDialogflowV2beta1SpeechContext]=None):
        """GoogleCloudDialogflowV2beta1InputAudioConfig - a model defined in OpenAPI

        :param audio_encoding: The audio_encoding of this GoogleCloudDialogflowV2beta1InputAudioConfig.
        :param barge_in_config: The barge_in_config of this GoogleCloudDialogflowV2beta1InputAudioConfig.
        :param disable_no_speech_recognized_event: The disable_no_speech_recognized_event of this GoogleCloudDialogflowV2beta1InputAudioConfig.
        :param enable_automatic_punctuation: The enable_automatic_punctuation of this GoogleCloudDialogflowV2beta1InputAudioConfig.
        :param enable_word_info: The enable_word_info of this GoogleCloudDialogflowV2beta1InputAudioConfig.
        :param language_code: The language_code of this GoogleCloudDialogflowV2beta1InputAudioConfig.
        :param model: The model of this GoogleCloudDialogflowV2beta1InputAudioConfig.
        :param model_variant: The model_variant of this GoogleCloudDialogflowV2beta1InputAudioConfig.
        :param opt_out_conformer_model_migration: The opt_out_conformer_model_migration of this GoogleCloudDialogflowV2beta1InputAudioConfig.
        :param phrase_hints: The phrase_hints of this GoogleCloudDialogflowV2beta1InputAudioConfig.
        :param sample_rate_hertz: The sample_rate_hertz of this GoogleCloudDialogflowV2beta1InputAudioConfig.
        :param single_utterance: The single_utterance of this GoogleCloudDialogflowV2beta1InputAudioConfig.
        :param speech_contexts: The speech_contexts of this GoogleCloudDialogflowV2beta1InputAudioConfig.
        """
        self.openapi_types = {
            'audio_encoding': str,
            'barge_in_config': GoogleCloudDialogflowV2beta1BargeInConfig,
            'disable_no_speech_recognized_event': bool,
            'enable_automatic_punctuation': bool,
            'enable_word_info': bool,
            'language_code': str,
            'model': str,
            'model_variant': str,
            'opt_out_conformer_model_migration': bool,
            'phrase_hints': List[str],
            'sample_rate_hertz': int,
            'single_utterance': bool,
            'speech_contexts': List[GoogleCloudDialogflowV2beta1SpeechContext]
        }

        self.attribute_map = {
            'audio_encoding': 'audioEncoding',
            'barge_in_config': 'bargeInConfig',
            'disable_no_speech_recognized_event': 'disableNoSpeechRecognizedEvent',
            'enable_automatic_punctuation': 'enableAutomaticPunctuation',
            'enable_word_info': 'enableWordInfo',
            'language_code': 'languageCode',
            'model': 'model',
            'model_variant': 'modelVariant',
            'opt_out_conformer_model_migration': 'optOutConformerModelMigration',
            'phrase_hints': 'phraseHints',
            'sample_rate_hertz': 'sampleRateHertz',
            'single_utterance': 'singleUtterance',
            'speech_contexts': 'speechContexts'
        }

        self._audio_encoding = audio_encoding
        self._barge_in_config = barge_in_config
        self._disable_no_speech_recognized_event = disable_no_speech_recognized_event
        self._enable_automatic_punctuation = enable_automatic_punctuation
        self._enable_word_info = enable_word_info
        self._language_code = language_code
        self._model = model
        self._model_variant = model_variant
        self._opt_out_conformer_model_migration = opt_out_conformer_model_migration
        self._phrase_hints = phrase_hints
        self._sample_rate_hertz = sample_rate_hertz
        self._single_utterance = single_utterance
        self._speech_contexts = speech_contexts

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDialogflowV2beta1InputAudioConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDialogflowV2beta1InputAudioConfig of this GoogleCloudDialogflowV2beta1InputAudioConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def audio_encoding(self):
        """Gets the audio_encoding of this GoogleCloudDialogflowV2beta1InputAudioConfig.

        Required. Audio encoding of the audio content to process.

        :return: The audio_encoding of this GoogleCloudDialogflowV2beta1InputAudioConfig.
        :rtype: str
        """
        return self._audio_encoding

    @audio_encoding.setter
    def audio_encoding(self, audio_encoding):
        """Sets the audio_encoding of this GoogleCloudDialogflowV2beta1InputAudioConfig.

        Required. Audio encoding of the audio content to process.

        :param audio_encoding: The audio_encoding of this GoogleCloudDialogflowV2beta1InputAudioConfig.
        :type audio_encoding: str
        """
        allowed_values = ["AUDIO_ENCODING_UNSPECIFIED", "AUDIO_ENCODING_LINEAR_16", "AUDIO_ENCODING_FLAC", "AUDIO_ENCODING_MULAW", "AUDIO_ENCODING_AMR", "AUDIO_ENCODING_AMR_WB", "AUDIO_ENCODING_OGG_OPUS", "AUDIO_ENCODING_SPEEX_WITH_HEADER_BYTE"]  # noqa: E501
        if audio_encoding not in allowed_values:
            raise ValueError(
                "Invalid value for `audio_encoding` ({0}), must be one of {1}"
                .format(audio_encoding, allowed_values)
            )

        self._audio_encoding = audio_encoding

    @property
    def barge_in_config(self):
        """Gets the barge_in_config of this GoogleCloudDialogflowV2beta1InputAudioConfig.


        :return: The barge_in_config of this GoogleCloudDialogflowV2beta1InputAudioConfig.
        :rtype: GoogleCloudDialogflowV2beta1BargeInConfig
        """
        return self._barge_in_config

    @barge_in_config.setter
    def barge_in_config(self, barge_in_config):
        """Sets the barge_in_config of this GoogleCloudDialogflowV2beta1InputAudioConfig.


        :param barge_in_config: The barge_in_config of this GoogleCloudDialogflowV2beta1InputAudioConfig.
        :type barge_in_config: GoogleCloudDialogflowV2beta1BargeInConfig
        """

        self._barge_in_config = barge_in_config

    @property
    def disable_no_speech_recognized_event(self):
        """Gets the disable_no_speech_recognized_event of this GoogleCloudDialogflowV2beta1InputAudioConfig.

        Only used in Participants.AnalyzeContent and Participants.StreamingAnalyzeContent. If `false` and recognition doesn't return any result, trigger `NO_SPEECH_RECOGNIZED` event to Dialogflow agent.

        :return: The disable_no_speech_recognized_event of this GoogleCloudDialogflowV2beta1InputAudioConfig.
        :rtype: bool
        """
        return self._disable_no_speech_recognized_event

    @disable_no_speech_recognized_event.setter
    def disable_no_speech_recognized_event(self, disable_no_speech_recognized_event):
        """Sets the disable_no_speech_recognized_event of this GoogleCloudDialogflowV2beta1InputAudioConfig.

        Only used in Participants.AnalyzeContent and Participants.StreamingAnalyzeContent. If `false` and recognition doesn't return any result, trigger `NO_SPEECH_RECOGNIZED` event to Dialogflow agent.

        :param disable_no_speech_recognized_event: The disable_no_speech_recognized_event of this GoogleCloudDialogflowV2beta1InputAudioConfig.
        :type disable_no_speech_recognized_event: bool
        """

        self._disable_no_speech_recognized_event = disable_no_speech_recognized_event

    @property
    def enable_automatic_punctuation(self):
        """Gets the enable_automatic_punctuation of this GoogleCloudDialogflowV2beta1InputAudioConfig.

        Enable automatic punctuation option at the speech backend.

        :return: The enable_automatic_punctuation of this GoogleCloudDialogflowV2beta1InputAudioConfig.
        :rtype: bool
        """
        return self._enable_automatic_punctuation

    @enable_automatic_punctuation.setter
    def enable_automatic_punctuation(self, enable_automatic_punctuation):
        """Sets the enable_automatic_punctuation of this GoogleCloudDialogflowV2beta1InputAudioConfig.

        Enable automatic punctuation option at the speech backend.

        :param enable_automatic_punctuation: The enable_automatic_punctuation of this GoogleCloudDialogflowV2beta1InputAudioConfig.
        :type enable_automatic_punctuation: bool
        """

        self._enable_automatic_punctuation = enable_automatic_punctuation

    @property
    def enable_word_info(self):
        """Gets the enable_word_info of this GoogleCloudDialogflowV2beta1InputAudioConfig.

        If `true`, Dialogflow returns SpeechWordInfo in StreamingRecognitionResult with information about the recognized speech words, e.g. start and end time offsets. If false or unspecified, Speech doesn't return any word-level information.

        :return: The enable_word_info of this GoogleCloudDialogflowV2beta1InputAudioConfig.
        :rtype: bool
        """
        return self._enable_word_info

    @enable_word_info.setter
    def enable_word_info(self, enable_word_info):
        """Sets the enable_word_info of this GoogleCloudDialogflowV2beta1InputAudioConfig.

        If `true`, Dialogflow returns SpeechWordInfo in StreamingRecognitionResult with information about the recognized speech words, e.g. start and end time offsets. If false or unspecified, Speech doesn't return any word-level information.

        :param enable_word_info: The enable_word_info of this GoogleCloudDialogflowV2beta1InputAudioConfig.
        :type enable_word_info: bool
        """

        self._enable_word_info = enable_word_info

    @property
    def language_code(self):
        """Gets the language_code of this GoogleCloudDialogflowV2beta1InputAudioConfig.

        Required. The language of the supplied audio. Dialogflow does not do translations. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported language codes. Note that queries in the same session do not necessarily need to specify the same language.

        :return: The language_code of this GoogleCloudDialogflowV2beta1InputAudioConfig.
        :rtype: str
        """
        return self._language_code

    @language_code.setter
    def language_code(self, language_code):
        """Sets the language_code of this GoogleCloudDialogflowV2beta1InputAudioConfig.

        Required. The language of the supplied audio. Dialogflow does not do translations. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported language codes. Note that queries in the same session do not necessarily need to specify the same language.

        :param language_code: The language_code of this GoogleCloudDialogflowV2beta1InputAudioConfig.
        :type language_code: str
        """

        self._language_code = language_code

    @property
    def model(self):
        """Gets the model of this GoogleCloudDialogflowV2beta1InputAudioConfig.

        Optional. Which Speech model to select for the given request. For more information, see [Speech models](https://cloud.google.com/dialogflow/es/docs/speech-models).

        :return: The model of this GoogleCloudDialogflowV2beta1InputAudioConfig.
        :rtype: str
        """
        return self._model

    @model.setter
    def model(self, model):
        """Sets the model of this GoogleCloudDialogflowV2beta1InputAudioConfig.

        Optional. Which Speech model to select for the given request. For more information, see [Speech models](https://cloud.google.com/dialogflow/es/docs/speech-models).

        :param model: The model of this GoogleCloudDialogflowV2beta1InputAudioConfig.
        :type model: str
        """

        self._model = model

    @property
    def model_variant(self):
        """Gets the model_variant of this GoogleCloudDialogflowV2beta1InputAudioConfig.

        Which variant of the Speech model to use.

        :return: The model_variant of this GoogleCloudDialogflowV2beta1InputAudioConfig.
        :rtype: str
        """
        return self._model_variant

    @model_variant.setter
    def model_variant(self, model_variant):
        """Sets the model_variant of this GoogleCloudDialogflowV2beta1InputAudioConfig.

        Which variant of the Speech model to use.

        :param model_variant: The model_variant of this GoogleCloudDialogflowV2beta1InputAudioConfig.
        :type model_variant: str
        """
        allowed_values = ["SPEECH_MODEL_VARIANT_UNSPECIFIED", "USE_BEST_AVAILABLE", "USE_STANDARD", "USE_ENHANCED"]  # noqa: E501
        if model_variant not in allowed_values:
            raise ValueError(
                "Invalid value for `model_variant` ({0}), must be one of {1}"
                .format(model_variant, allowed_values)
            )

        self._model_variant = model_variant

    @property
    def opt_out_conformer_model_migration(self):
        """Gets the opt_out_conformer_model_migration of this GoogleCloudDialogflowV2beta1InputAudioConfig.

        If `true`, the request will opt out for STT conformer model migration. This field will be deprecated once force migration takes place in June 2024. Please refer to [Dialogflow ES Speech model migration](https://cloud.google.com/dialogflow/es/docs/speech-model-migration).

        :return: The opt_out_conformer_model_migration of this GoogleCloudDialogflowV2beta1InputAudioConfig.
        :rtype: bool
        """
        return self._opt_out_conformer_model_migration

    @opt_out_conformer_model_migration.setter
    def opt_out_conformer_model_migration(self, opt_out_conformer_model_migration):
        """Sets the opt_out_conformer_model_migration of this GoogleCloudDialogflowV2beta1InputAudioConfig.

        If `true`, the request will opt out for STT conformer model migration. This field will be deprecated once force migration takes place in June 2024. Please refer to [Dialogflow ES Speech model migration](https://cloud.google.com/dialogflow/es/docs/speech-model-migration).

        :param opt_out_conformer_model_migration: The opt_out_conformer_model_migration of this GoogleCloudDialogflowV2beta1InputAudioConfig.
        :type opt_out_conformer_model_migration: bool
        """

        self._opt_out_conformer_model_migration = opt_out_conformer_model_migration

    @property
    def phrase_hints(self):
        """Gets the phrase_hints of this GoogleCloudDialogflowV2beta1InputAudioConfig.

        A list of strings containing words and phrases that the speech recognizer should recognize with higher likelihood. See [the Cloud Speech documentation](https://cloud.google.com/speech-to-text/docs/basics#phrase-hints) for more details. This field is deprecated. Please use [`speech_contexts`]() instead. If you specify both [`phrase_hints`]() and [`speech_contexts`](), Dialogflow will treat the [`phrase_hints`]() as a single additional [`SpeechContext`]().

        :return: The phrase_hints of this GoogleCloudDialogflowV2beta1InputAudioConfig.
        :rtype: List[str]
        """
        return self._phrase_hints

    @phrase_hints.setter
    def phrase_hints(self, phrase_hints):
        """Sets the phrase_hints of this GoogleCloudDialogflowV2beta1InputAudioConfig.

        A list of strings containing words and phrases that the speech recognizer should recognize with higher likelihood. See [the Cloud Speech documentation](https://cloud.google.com/speech-to-text/docs/basics#phrase-hints) for more details. This field is deprecated. Please use [`speech_contexts`]() instead. If you specify both [`phrase_hints`]() and [`speech_contexts`](), Dialogflow will treat the [`phrase_hints`]() as a single additional [`SpeechContext`]().

        :param phrase_hints: The phrase_hints of this GoogleCloudDialogflowV2beta1InputAudioConfig.
        :type phrase_hints: List[str]
        """

        self._phrase_hints = phrase_hints

    @property
    def sample_rate_hertz(self):
        """Gets the sample_rate_hertz of this GoogleCloudDialogflowV2beta1InputAudioConfig.

        Required. Sample rate (in Hertz) of the audio content sent in the query. Refer to [Cloud Speech API documentation](https://cloud.google.com/speech-to-text/docs/basics) for more details.

        :return: The sample_rate_hertz of this GoogleCloudDialogflowV2beta1InputAudioConfig.
        :rtype: int
        """
        return self._sample_rate_hertz

    @sample_rate_hertz.setter
    def sample_rate_hertz(self, sample_rate_hertz):
        """Sets the sample_rate_hertz of this GoogleCloudDialogflowV2beta1InputAudioConfig.

        Required. Sample rate (in Hertz) of the audio content sent in the query. Refer to [Cloud Speech API documentation](https://cloud.google.com/speech-to-text/docs/basics) for more details.

        :param sample_rate_hertz: The sample_rate_hertz of this GoogleCloudDialogflowV2beta1InputAudioConfig.
        :type sample_rate_hertz: int
        """

        self._sample_rate_hertz = sample_rate_hertz

    @property
    def single_utterance(self):
        """Gets the single_utterance of this GoogleCloudDialogflowV2beta1InputAudioConfig.

        If `false` (default), recognition does not cease until the client closes the stream. If `true`, the recognizer will detect a single spoken utterance in input audio. Recognition ceases when it detects the audio's voice has stopped or paused. In this case, once a detected intent is received, the client should close the stream and start a new request with a new stream as needed. Note: This setting is relevant only for streaming methods. Note: When specified, InputAudioConfig.single_utterance takes precedence over StreamingDetectIntentRequest.single_utterance.

        :return: The single_utterance of this GoogleCloudDialogflowV2beta1InputAudioConfig.
        :rtype: bool
        """
        return self._single_utterance

    @single_utterance.setter
    def single_utterance(self, single_utterance):
        """Sets the single_utterance of this GoogleCloudDialogflowV2beta1InputAudioConfig.

        If `false` (default), recognition does not cease until the client closes the stream. If `true`, the recognizer will detect a single spoken utterance in input audio. Recognition ceases when it detects the audio's voice has stopped or paused. In this case, once a detected intent is received, the client should close the stream and start a new request with a new stream as needed. Note: This setting is relevant only for streaming methods. Note: When specified, InputAudioConfig.single_utterance takes precedence over StreamingDetectIntentRequest.single_utterance.

        :param single_utterance: The single_utterance of this GoogleCloudDialogflowV2beta1InputAudioConfig.
        :type single_utterance: bool
        """

        self._single_utterance = single_utterance

    @property
    def speech_contexts(self):
        """Gets the speech_contexts of this GoogleCloudDialogflowV2beta1InputAudioConfig.

        Context information to assist speech recognition. See [the Cloud Speech documentation](https://cloud.google.com/speech-to-text/docs/basics#phrase-hints) for more details.

        :return: The speech_contexts of this GoogleCloudDialogflowV2beta1InputAudioConfig.
        :rtype: List[GoogleCloudDialogflowV2beta1SpeechContext]
        """
        return self._speech_contexts

    @speech_contexts.setter
    def speech_contexts(self, speech_contexts):
        """Sets the speech_contexts of this GoogleCloudDialogflowV2beta1InputAudioConfig.

        Context information to assist speech recognition. See [the Cloud Speech documentation](https://cloud.google.com/speech-to-text/docs/basics#phrase-hints) for more details.

        :param speech_contexts: The speech_contexts of this GoogleCloudDialogflowV2beta1InputAudioConfig.
        :type speech_contexts: List[GoogleCloudDialogflowV2beta1SpeechContext]
        """

        self._speech_contexts = speech_contexts
