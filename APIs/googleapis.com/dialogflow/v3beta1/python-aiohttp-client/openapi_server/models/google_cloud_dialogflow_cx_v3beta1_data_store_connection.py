# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDialogflowCxV3beta1DataStoreConnection(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data_store: str=None, data_store_type: str=None):
        """GoogleCloudDialogflowCxV3beta1DataStoreConnection - a model defined in OpenAPI

        :param data_store: The data_store of this GoogleCloudDialogflowCxV3beta1DataStoreConnection.
        :param data_store_type: The data_store_type of this GoogleCloudDialogflowCxV3beta1DataStoreConnection.
        """
        self.openapi_types = {
            'data_store': str,
            'data_store_type': str
        }

        self.attribute_map = {
            'data_store': 'dataStore',
            'data_store_type': 'dataStoreType'
        }

        self._data_store = data_store
        self._data_store_type = data_store_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDialogflowCxV3beta1DataStoreConnection':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDialogflowCxV3beta1DataStoreConnection of this GoogleCloudDialogflowCxV3beta1DataStoreConnection.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data_store(self):
        """Gets the data_store of this GoogleCloudDialogflowCxV3beta1DataStoreConnection.

        The full name of the referenced data store. Formats: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}` `projects/{project}/locations/{location}/dataStores/{data_store}`

        :return: The data_store of this GoogleCloudDialogflowCxV3beta1DataStoreConnection.
        :rtype: str
        """
        return self._data_store

    @data_store.setter
    def data_store(self, data_store):
        """Sets the data_store of this GoogleCloudDialogflowCxV3beta1DataStoreConnection.

        The full name of the referenced data store. Formats: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}` `projects/{project}/locations/{location}/dataStores/{data_store}`

        :param data_store: The data_store of this GoogleCloudDialogflowCxV3beta1DataStoreConnection.
        :type data_store: str
        """

        self._data_store = data_store

    @property
    def data_store_type(self):
        """Gets the data_store_type of this GoogleCloudDialogflowCxV3beta1DataStoreConnection.

        The type of the connected data store.

        :return: The data_store_type of this GoogleCloudDialogflowCxV3beta1DataStoreConnection.
        :rtype: str
        """
        return self._data_store_type

    @data_store_type.setter
    def data_store_type(self, data_store_type):
        """Sets the data_store_type of this GoogleCloudDialogflowCxV3beta1DataStoreConnection.

        The type of the connected data store.

        :param data_store_type: The data_store_type of this GoogleCloudDialogflowCxV3beta1DataStoreConnection.
        :type data_store_type: str
        """
        allowed_values = ["DATA_STORE_TYPE_UNSPECIFIED", "PUBLIC_WEB", "UNSTRUCTURED", "STRUCTURED"]  # noqa: E501
        if data_store_type not in allowed_values:
            raise ValueError(
                "Invalid value for `data_store_type` ({0}), must be one of {1}"
                .format(data_store_type, allowed_values)
            )

        self._data_store_type = data_store_type
