# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_dialogflow_cx_v3beta1_fulfillment_conditional_cases import GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCases
from openapi_server.models.google_cloud_dialogflow_cx_v3beta1_response_message import GoogleCloudDialogflowCxV3beta1ResponseMessage
from openapi_server import util


class GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCaseCaseContent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, additional_cases: GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCases=None, message: GoogleCloudDialogflowCxV3beta1ResponseMessage=None):
        """GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCaseCaseContent - a model defined in OpenAPI

        :param additional_cases: The additional_cases of this GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCaseCaseContent.
        :param message: The message of this GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCaseCaseContent.
        """
        self.openapi_types = {
            'additional_cases': GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCases,
            'message': GoogleCloudDialogflowCxV3beta1ResponseMessage
        }

        self.attribute_map = {
            'additional_cases': 'additionalCases',
            'message': 'message'
        }

        self._additional_cases = additional_cases
        self._message = message

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCaseCaseContent':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCaseCaseContent of this GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCaseCaseContent.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def additional_cases(self):
        """Gets the additional_cases of this GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCaseCaseContent.


        :return: The additional_cases of this GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCaseCaseContent.
        :rtype: GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCases
        """
        return self._additional_cases

    @additional_cases.setter
    def additional_cases(self, additional_cases):
        """Sets the additional_cases of this GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCaseCaseContent.


        :param additional_cases: The additional_cases of this GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCaseCaseContent.
        :type additional_cases: GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCases
        """

        self._additional_cases = additional_cases

    @property
    def message(self):
        """Gets the message of this GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCaseCaseContent.


        :return: The message of this GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCaseCaseContent.
        :rtype: GoogleCloudDialogflowCxV3beta1ResponseMessage
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCaseCaseContent.


        :param message: The message of this GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCaseCaseContent.
        :type message: GoogleCloudDialogflowCxV3beta1ResponseMessage
        """

        self._message = message
