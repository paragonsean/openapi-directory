# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDialogflowCxV3beta1AgentGitIntegrationSettingsGithubSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, access_token: str=None, branches: List[str]=None, display_name: str=None, repository_uri: str=None, tracking_branch: str=None):
        """GoogleCloudDialogflowCxV3beta1AgentGitIntegrationSettingsGithubSettings - a model defined in OpenAPI

        :param access_token: The access_token of this GoogleCloudDialogflowCxV3beta1AgentGitIntegrationSettingsGithubSettings.
        :param branches: The branches of this GoogleCloudDialogflowCxV3beta1AgentGitIntegrationSettingsGithubSettings.
        :param display_name: The display_name of this GoogleCloudDialogflowCxV3beta1AgentGitIntegrationSettingsGithubSettings.
        :param repository_uri: The repository_uri of this GoogleCloudDialogflowCxV3beta1AgentGitIntegrationSettingsGithubSettings.
        :param tracking_branch: The tracking_branch of this GoogleCloudDialogflowCxV3beta1AgentGitIntegrationSettingsGithubSettings.
        """
        self.openapi_types = {
            'access_token': str,
            'branches': List[str],
            'display_name': str,
            'repository_uri': str,
            'tracking_branch': str
        }

        self.attribute_map = {
            'access_token': 'accessToken',
            'branches': 'branches',
            'display_name': 'displayName',
            'repository_uri': 'repositoryUri',
            'tracking_branch': 'trackingBranch'
        }

        self._access_token = access_token
        self._branches = branches
        self._display_name = display_name
        self._repository_uri = repository_uri
        self._tracking_branch = tracking_branch

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDialogflowCxV3beta1AgentGitIntegrationSettingsGithubSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDialogflowCxV3beta1AgentGitIntegrationSettingsGithubSettings of this GoogleCloudDialogflowCxV3beta1AgentGitIntegrationSettingsGithubSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def access_token(self):
        """Gets the access_token of this GoogleCloudDialogflowCxV3beta1AgentGitIntegrationSettingsGithubSettings.

        The access token used to authenticate the access to the GitHub repository.

        :return: The access_token of this GoogleCloudDialogflowCxV3beta1AgentGitIntegrationSettingsGithubSettings.
        :rtype: str
        """
        return self._access_token

    @access_token.setter
    def access_token(self, access_token):
        """Sets the access_token of this GoogleCloudDialogflowCxV3beta1AgentGitIntegrationSettingsGithubSettings.

        The access token used to authenticate the access to the GitHub repository.

        :param access_token: The access_token of this GoogleCloudDialogflowCxV3beta1AgentGitIntegrationSettingsGithubSettings.
        :type access_token: str
        """

        self._access_token = access_token

    @property
    def branches(self):
        """Gets the branches of this GoogleCloudDialogflowCxV3beta1AgentGitIntegrationSettingsGithubSettings.

        A list of branches configured to be used from Dialogflow.

        :return: The branches of this GoogleCloudDialogflowCxV3beta1AgentGitIntegrationSettingsGithubSettings.
        :rtype: List[str]
        """
        return self._branches

    @branches.setter
    def branches(self, branches):
        """Sets the branches of this GoogleCloudDialogflowCxV3beta1AgentGitIntegrationSettingsGithubSettings.

        A list of branches configured to be used from Dialogflow.

        :param branches: The branches of this GoogleCloudDialogflowCxV3beta1AgentGitIntegrationSettingsGithubSettings.
        :type branches: List[str]
        """

        self._branches = branches

    @property
    def display_name(self):
        """Gets the display_name of this GoogleCloudDialogflowCxV3beta1AgentGitIntegrationSettingsGithubSettings.

        The unique repository display name for the GitHub repository.

        :return: The display_name of this GoogleCloudDialogflowCxV3beta1AgentGitIntegrationSettingsGithubSettings.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this GoogleCloudDialogflowCxV3beta1AgentGitIntegrationSettingsGithubSettings.

        The unique repository display name for the GitHub repository.

        :param display_name: The display_name of this GoogleCloudDialogflowCxV3beta1AgentGitIntegrationSettingsGithubSettings.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def repository_uri(self):
        """Gets the repository_uri of this GoogleCloudDialogflowCxV3beta1AgentGitIntegrationSettingsGithubSettings.

        The GitHub repository URI related to the agent.

        :return: The repository_uri of this GoogleCloudDialogflowCxV3beta1AgentGitIntegrationSettingsGithubSettings.
        :rtype: str
        """
        return self._repository_uri

    @repository_uri.setter
    def repository_uri(self, repository_uri):
        """Sets the repository_uri of this GoogleCloudDialogflowCxV3beta1AgentGitIntegrationSettingsGithubSettings.

        The GitHub repository URI related to the agent.

        :param repository_uri: The repository_uri of this GoogleCloudDialogflowCxV3beta1AgentGitIntegrationSettingsGithubSettings.
        :type repository_uri: str
        """

        self._repository_uri = repository_uri

    @property
    def tracking_branch(self):
        """Gets the tracking_branch of this GoogleCloudDialogflowCxV3beta1AgentGitIntegrationSettingsGithubSettings.

        The branch of the GitHub repository tracked for this agent.

        :return: The tracking_branch of this GoogleCloudDialogflowCxV3beta1AgentGitIntegrationSettingsGithubSettings.
        :rtype: str
        """
        return self._tracking_branch

    @tracking_branch.setter
    def tracking_branch(self, tracking_branch):
        """Sets the tracking_branch of this GoogleCloudDialogflowCxV3beta1AgentGitIntegrationSettingsGithubSettings.

        The branch of the GitHub repository tracked for this agent.

        :param tracking_branch: The tracking_branch of this GoogleCloudDialogflowCxV3beta1AgentGitIntegrationSettingsGithubSettings.
        :type tracking_branch: str
        """

        self._tracking_branch = tracking_branch
