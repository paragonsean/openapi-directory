# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDialogflowCxV3beta1GenerativeSettingsKnowledgeConnectorSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, agent: str=None, agent_identity: str=None, agent_scope: str=None, business: str=None, business_description: str=None, disable_data_store_fallback: bool=None):
        """GoogleCloudDialogflowCxV3beta1GenerativeSettingsKnowledgeConnectorSettings - a model defined in OpenAPI

        :param agent: The agent of this GoogleCloudDialogflowCxV3beta1GenerativeSettingsKnowledgeConnectorSettings.
        :param agent_identity: The agent_identity of this GoogleCloudDialogflowCxV3beta1GenerativeSettingsKnowledgeConnectorSettings.
        :param agent_scope: The agent_scope of this GoogleCloudDialogflowCxV3beta1GenerativeSettingsKnowledgeConnectorSettings.
        :param business: The business of this GoogleCloudDialogflowCxV3beta1GenerativeSettingsKnowledgeConnectorSettings.
        :param business_description: The business_description of this GoogleCloudDialogflowCxV3beta1GenerativeSettingsKnowledgeConnectorSettings.
        :param disable_data_store_fallback: The disable_data_store_fallback of this GoogleCloudDialogflowCxV3beta1GenerativeSettingsKnowledgeConnectorSettings.
        """
        self.openapi_types = {
            'agent': str,
            'agent_identity': str,
            'agent_scope': str,
            'business': str,
            'business_description': str,
            'disable_data_store_fallback': bool
        }

        self.attribute_map = {
            'agent': 'agent',
            'agent_identity': 'agentIdentity',
            'agent_scope': 'agentScope',
            'business': 'business',
            'business_description': 'businessDescription',
            'disable_data_store_fallback': 'disableDataStoreFallback'
        }

        self._agent = agent
        self._agent_identity = agent_identity
        self._agent_scope = agent_scope
        self._business = business
        self._business_description = business_description
        self._disable_data_store_fallback = disable_data_store_fallback

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDialogflowCxV3beta1GenerativeSettingsKnowledgeConnectorSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDialogflowCxV3beta1GenerativeSettingsKnowledgeConnectorSettings of this GoogleCloudDialogflowCxV3beta1GenerativeSettingsKnowledgeConnectorSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def agent(self):
        """Gets the agent of this GoogleCloudDialogflowCxV3beta1GenerativeSettingsKnowledgeConnectorSettings.

        Name of the virtual agent. Used for LLM prompt. Can be left empty.

        :return: The agent of this GoogleCloudDialogflowCxV3beta1GenerativeSettingsKnowledgeConnectorSettings.
        :rtype: str
        """
        return self._agent

    @agent.setter
    def agent(self, agent):
        """Sets the agent of this GoogleCloudDialogflowCxV3beta1GenerativeSettingsKnowledgeConnectorSettings.

        Name of the virtual agent. Used for LLM prompt. Can be left empty.

        :param agent: The agent of this GoogleCloudDialogflowCxV3beta1GenerativeSettingsKnowledgeConnectorSettings.
        :type agent: str
        """

        self._agent = agent

    @property
    def agent_identity(self):
        """Gets the agent_identity of this GoogleCloudDialogflowCxV3beta1GenerativeSettingsKnowledgeConnectorSettings.

        Identity of the agent, e.g. \"virtual agent\", \"AI assistant\".

        :return: The agent_identity of this GoogleCloudDialogflowCxV3beta1GenerativeSettingsKnowledgeConnectorSettings.
        :rtype: str
        """
        return self._agent_identity

    @agent_identity.setter
    def agent_identity(self, agent_identity):
        """Sets the agent_identity of this GoogleCloudDialogflowCxV3beta1GenerativeSettingsKnowledgeConnectorSettings.

        Identity of the agent, e.g. \"virtual agent\", \"AI assistant\".

        :param agent_identity: The agent_identity of this GoogleCloudDialogflowCxV3beta1GenerativeSettingsKnowledgeConnectorSettings.
        :type agent_identity: str
        """

        self._agent_identity = agent_identity

    @property
    def agent_scope(self):
        """Gets the agent_scope of this GoogleCloudDialogflowCxV3beta1GenerativeSettingsKnowledgeConnectorSettings.

        Agent scope, e.g. \"Example company website\", \"internal Example company website for employees\", \"manual of car owner\".

        :return: The agent_scope of this GoogleCloudDialogflowCxV3beta1GenerativeSettingsKnowledgeConnectorSettings.
        :rtype: str
        """
        return self._agent_scope

    @agent_scope.setter
    def agent_scope(self, agent_scope):
        """Sets the agent_scope of this GoogleCloudDialogflowCxV3beta1GenerativeSettingsKnowledgeConnectorSettings.

        Agent scope, e.g. \"Example company website\", \"internal Example company website for employees\", \"manual of car owner\".

        :param agent_scope: The agent_scope of this GoogleCloudDialogflowCxV3beta1GenerativeSettingsKnowledgeConnectorSettings.
        :type agent_scope: str
        """

        self._agent_scope = agent_scope

    @property
    def business(self):
        """Gets the business of this GoogleCloudDialogflowCxV3beta1GenerativeSettingsKnowledgeConnectorSettings.

        Name of the company, organization or other entity that the agent represents. Used for knowledge connector LLM prompt and for knowledge search.

        :return: The business of this GoogleCloudDialogflowCxV3beta1GenerativeSettingsKnowledgeConnectorSettings.
        :rtype: str
        """
        return self._business

    @business.setter
    def business(self, business):
        """Sets the business of this GoogleCloudDialogflowCxV3beta1GenerativeSettingsKnowledgeConnectorSettings.

        Name of the company, organization or other entity that the agent represents. Used for knowledge connector LLM prompt and for knowledge search.

        :param business: The business of this GoogleCloudDialogflowCxV3beta1GenerativeSettingsKnowledgeConnectorSettings.
        :type business: str
        """

        self._business = business

    @property
    def business_description(self):
        """Gets the business_description of this GoogleCloudDialogflowCxV3beta1GenerativeSettingsKnowledgeConnectorSettings.

        Company description, used for LLM prompt, e.g. \"a family company selling freshly roasted coffee beans\".

        :return: The business_description of this GoogleCloudDialogflowCxV3beta1GenerativeSettingsKnowledgeConnectorSettings.
        :rtype: str
        """
        return self._business_description

    @business_description.setter
    def business_description(self, business_description):
        """Sets the business_description of this GoogleCloudDialogflowCxV3beta1GenerativeSettingsKnowledgeConnectorSettings.

        Company description, used for LLM prompt, e.g. \"a family company selling freshly roasted coffee beans\".

        :param business_description: The business_description of this GoogleCloudDialogflowCxV3beta1GenerativeSettingsKnowledgeConnectorSettings.
        :type business_description: str
        """

        self._business_description = business_description

    @property
    def disable_data_store_fallback(self):
        """Gets the disable_data_store_fallback of this GoogleCloudDialogflowCxV3beta1GenerativeSettingsKnowledgeConnectorSettings.

        Whether to disable fallback to Data Store search results (in case the LLM couldn't pick a proper answer). Per default the feature is enabled.

        :return: The disable_data_store_fallback of this GoogleCloudDialogflowCxV3beta1GenerativeSettingsKnowledgeConnectorSettings.
        :rtype: bool
        """
        return self._disable_data_store_fallback

    @disable_data_store_fallback.setter
    def disable_data_store_fallback(self, disable_data_store_fallback):
        """Sets the disable_data_store_fallback of this GoogleCloudDialogflowCxV3beta1GenerativeSettingsKnowledgeConnectorSettings.

        Whether to disable fallback to Data Store search results (in case the LLM couldn't pick a proper answer). Per default the feature is enabled.

        :param disable_data_store_fallback: The disable_data_store_fallback of this GoogleCloudDialogflowCxV3beta1GenerativeSettingsKnowledgeConnectorSettings.
        :type disable_data_store_fallback: bool
        """

        self._disable_data_store_fallback = disable_data_store_fallback
