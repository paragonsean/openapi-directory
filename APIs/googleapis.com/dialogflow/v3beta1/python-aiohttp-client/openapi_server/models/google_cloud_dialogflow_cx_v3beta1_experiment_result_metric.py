# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_dialogflow_cx_v3beta1_experiment_result_confidence_interval import GoogleCloudDialogflowCxV3beta1ExperimentResultConfidenceInterval
from openapi_server import util


class GoogleCloudDialogflowCxV3beta1ExperimentResultMetric(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, confidence_interval: GoogleCloudDialogflowCxV3beta1ExperimentResultConfidenceInterval=None, count: float=None, count_type: str=None, ratio: float=None, type: str=None):
        """GoogleCloudDialogflowCxV3beta1ExperimentResultMetric - a model defined in OpenAPI

        :param confidence_interval: The confidence_interval of this GoogleCloudDialogflowCxV3beta1ExperimentResultMetric.
        :param count: The count of this GoogleCloudDialogflowCxV3beta1ExperimentResultMetric.
        :param count_type: The count_type of this GoogleCloudDialogflowCxV3beta1ExperimentResultMetric.
        :param ratio: The ratio of this GoogleCloudDialogflowCxV3beta1ExperimentResultMetric.
        :param type: The type of this GoogleCloudDialogflowCxV3beta1ExperimentResultMetric.
        """
        self.openapi_types = {
            'confidence_interval': GoogleCloudDialogflowCxV3beta1ExperimentResultConfidenceInterval,
            'count': float,
            'count_type': str,
            'ratio': float,
            'type': str
        }

        self.attribute_map = {
            'confidence_interval': 'confidenceInterval',
            'count': 'count',
            'count_type': 'countType',
            'ratio': 'ratio',
            'type': 'type'
        }

        self._confidence_interval = confidence_interval
        self._count = count
        self._count_type = count_type
        self._ratio = ratio
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDialogflowCxV3beta1ExperimentResultMetric':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDialogflowCxV3beta1ExperimentResultMetric of this GoogleCloudDialogflowCxV3beta1ExperimentResultMetric.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def confidence_interval(self):
        """Gets the confidence_interval of this GoogleCloudDialogflowCxV3beta1ExperimentResultMetric.


        :return: The confidence_interval of this GoogleCloudDialogflowCxV3beta1ExperimentResultMetric.
        :rtype: GoogleCloudDialogflowCxV3beta1ExperimentResultConfidenceInterval
        """
        return self._confidence_interval

    @confidence_interval.setter
    def confidence_interval(self, confidence_interval):
        """Sets the confidence_interval of this GoogleCloudDialogflowCxV3beta1ExperimentResultMetric.


        :param confidence_interval: The confidence_interval of this GoogleCloudDialogflowCxV3beta1ExperimentResultMetric.
        :type confidence_interval: GoogleCloudDialogflowCxV3beta1ExperimentResultConfidenceInterval
        """

        self._confidence_interval = confidence_interval

    @property
    def count(self):
        """Gets the count of this GoogleCloudDialogflowCxV3beta1ExperimentResultMetric.

        Count value of a metric.

        :return: The count of this GoogleCloudDialogflowCxV3beta1ExperimentResultMetric.
        :rtype: float
        """
        return self._count

    @count.setter
    def count(self, count):
        """Sets the count of this GoogleCloudDialogflowCxV3beta1ExperimentResultMetric.

        Count value of a metric.

        :param count: The count of this GoogleCloudDialogflowCxV3beta1ExperimentResultMetric.
        :type count: float
        """

        self._count = count

    @property
    def count_type(self):
        """Gets the count_type of this GoogleCloudDialogflowCxV3beta1ExperimentResultMetric.

        Count-based metric type. Only one of type or count_type is specified in each Metric.

        :return: The count_type of this GoogleCloudDialogflowCxV3beta1ExperimentResultMetric.
        :rtype: str
        """
        return self._count_type

    @count_type.setter
    def count_type(self, count_type):
        """Sets the count_type of this GoogleCloudDialogflowCxV3beta1ExperimentResultMetric.

        Count-based metric type. Only one of type or count_type is specified in each Metric.

        :param count_type: The count_type of this GoogleCloudDialogflowCxV3beta1ExperimentResultMetric.
        :type count_type: str
        """
        allowed_values = ["COUNT_TYPE_UNSPECIFIED", "TOTAL_NO_MATCH_COUNT", "TOTAL_TURN_COUNT", "AVERAGE_TURN_COUNT"]  # noqa: E501
        if count_type not in allowed_values:
            raise ValueError(
                "Invalid value for `count_type` ({0}), must be one of {1}"
                .format(count_type, allowed_values)
            )

        self._count_type = count_type

    @property
    def ratio(self):
        """Gets the ratio of this GoogleCloudDialogflowCxV3beta1ExperimentResultMetric.

        Ratio value of a metric.

        :return: The ratio of this GoogleCloudDialogflowCxV3beta1ExperimentResultMetric.
        :rtype: float
        """
        return self._ratio

    @ratio.setter
    def ratio(self, ratio):
        """Sets the ratio of this GoogleCloudDialogflowCxV3beta1ExperimentResultMetric.

        Ratio value of a metric.

        :param ratio: The ratio of this GoogleCloudDialogflowCxV3beta1ExperimentResultMetric.
        :type ratio: float
        """

        self._ratio = ratio

    @property
    def type(self):
        """Gets the type of this GoogleCloudDialogflowCxV3beta1ExperimentResultMetric.

        Ratio-based metric type. Only one of type or count_type is specified in each Metric.

        :return: The type of this GoogleCloudDialogflowCxV3beta1ExperimentResultMetric.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this GoogleCloudDialogflowCxV3beta1ExperimentResultMetric.

        Ratio-based metric type. Only one of type or count_type is specified in each Metric.

        :param type: The type of this GoogleCloudDialogflowCxV3beta1ExperimentResultMetric.
        :type type: str
        """
        allowed_values = ["METRIC_UNSPECIFIED", "CONTAINED_SESSION_NO_CALLBACK_RATE", "LIVE_AGENT_HANDOFF_RATE", "CALLBACK_SESSION_RATE", "ABANDONED_SESSION_RATE", "SESSION_END_RATE"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type
