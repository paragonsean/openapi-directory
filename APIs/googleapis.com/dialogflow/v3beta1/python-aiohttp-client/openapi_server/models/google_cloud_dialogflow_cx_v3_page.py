# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_dialogflow_cx_v3_advanced_settings import GoogleCloudDialogflowCxV3AdvancedSettings
from openapi_server.models.google_cloud_dialogflow_cx_v3_event_handler import GoogleCloudDialogflowCxV3EventHandler
from openapi_server.models.google_cloud_dialogflow_cx_v3_form import GoogleCloudDialogflowCxV3Form
from openapi_server.models.google_cloud_dialogflow_cx_v3_fulfillment import GoogleCloudDialogflowCxV3Fulfillment
from openapi_server.models.google_cloud_dialogflow_cx_v3_knowledge_connector_settings import GoogleCloudDialogflowCxV3KnowledgeConnectorSettings
from openapi_server.models.google_cloud_dialogflow_cx_v3_transition_route import GoogleCloudDialogflowCxV3TransitionRoute
from openapi_server import util


class GoogleCloudDialogflowCxV3Page(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, advanced_settings: GoogleCloudDialogflowCxV3AdvancedSettings=None, description: str=None, display_name: str=None, entry_fulfillment: GoogleCloudDialogflowCxV3Fulfillment=None, event_handlers: List[GoogleCloudDialogflowCxV3EventHandler]=None, form: GoogleCloudDialogflowCxV3Form=None, knowledge_connector_settings: GoogleCloudDialogflowCxV3KnowledgeConnectorSettings=None, name: str=None, transition_route_groups: List[str]=None, transition_routes: List[GoogleCloudDialogflowCxV3TransitionRoute]=None):
        """GoogleCloudDialogflowCxV3Page - a model defined in OpenAPI

        :param advanced_settings: The advanced_settings of this GoogleCloudDialogflowCxV3Page.
        :param description: The description of this GoogleCloudDialogflowCxV3Page.
        :param display_name: The display_name of this GoogleCloudDialogflowCxV3Page.
        :param entry_fulfillment: The entry_fulfillment of this GoogleCloudDialogflowCxV3Page.
        :param event_handlers: The event_handlers of this GoogleCloudDialogflowCxV3Page.
        :param form: The form of this GoogleCloudDialogflowCxV3Page.
        :param knowledge_connector_settings: The knowledge_connector_settings of this GoogleCloudDialogflowCxV3Page.
        :param name: The name of this GoogleCloudDialogflowCxV3Page.
        :param transition_route_groups: The transition_route_groups of this GoogleCloudDialogflowCxV3Page.
        :param transition_routes: The transition_routes of this GoogleCloudDialogflowCxV3Page.
        """
        self.openapi_types = {
            'advanced_settings': GoogleCloudDialogflowCxV3AdvancedSettings,
            'description': str,
            'display_name': str,
            'entry_fulfillment': GoogleCloudDialogflowCxV3Fulfillment,
            'event_handlers': List[GoogleCloudDialogflowCxV3EventHandler],
            'form': GoogleCloudDialogflowCxV3Form,
            'knowledge_connector_settings': GoogleCloudDialogflowCxV3KnowledgeConnectorSettings,
            'name': str,
            'transition_route_groups': List[str],
            'transition_routes': List[GoogleCloudDialogflowCxV3TransitionRoute]
        }

        self.attribute_map = {
            'advanced_settings': 'advancedSettings',
            'description': 'description',
            'display_name': 'displayName',
            'entry_fulfillment': 'entryFulfillment',
            'event_handlers': 'eventHandlers',
            'form': 'form',
            'knowledge_connector_settings': 'knowledgeConnectorSettings',
            'name': 'name',
            'transition_route_groups': 'transitionRouteGroups',
            'transition_routes': 'transitionRoutes'
        }

        self._advanced_settings = advanced_settings
        self._description = description
        self._display_name = display_name
        self._entry_fulfillment = entry_fulfillment
        self._event_handlers = event_handlers
        self._form = form
        self._knowledge_connector_settings = knowledge_connector_settings
        self._name = name
        self._transition_route_groups = transition_route_groups
        self._transition_routes = transition_routes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDialogflowCxV3Page':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDialogflowCxV3Page of this GoogleCloudDialogflowCxV3Page.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def advanced_settings(self):
        """Gets the advanced_settings of this GoogleCloudDialogflowCxV3Page.


        :return: The advanced_settings of this GoogleCloudDialogflowCxV3Page.
        :rtype: GoogleCloudDialogflowCxV3AdvancedSettings
        """
        return self._advanced_settings

    @advanced_settings.setter
    def advanced_settings(self, advanced_settings):
        """Sets the advanced_settings of this GoogleCloudDialogflowCxV3Page.


        :param advanced_settings: The advanced_settings of this GoogleCloudDialogflowCxV3Page.
        :type advanced_settings: GoogleCloudDialogflowCxV3AdvancedSettings
        """

        self._advanced_settings = advanced_settings

    @property
    def description(self):
        """Gets the description of this GoogleCloudDialogflowCxV3Page.

        The description of the page. The maximum length is 500 characters.

        :return: The description of this GoogleCloudDialogflowCxV3Page.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GoogleCloudDialogflowCxV3Page.

        The description of the page. The maximum length is 500 characters.

        :param description: The description of this GoogleCloudDialogflowCxV3Page.
        :type description: str
        """

        self._description = description

    @property
    def display_name(self):
        """Gets the display_name of this GoogleCloudDialogflowCxV3Page.

        Required. The human-readable name of the page, unique within the flow.

        :return: The display_name of this GoogleCloudDialogflowCxV3Page.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this GoogleCloudDialogflowCxV3Page.

        Required. The human-readable name of the page, unique within the flow.

        :param display_name: The display_name of this GoogleCloudDialogflowCxV3Page.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def entry_fulfillment(self):
        """Gets the entry_fulfillment of this GoogleCloudDialogflowCxV3Page.


        :return: The entry_fulfillment of this GoogleCloudDialogflowCxV3Page.
        :rtype: GoogleCloudDialogflowCxV3Fulfillment
        """
        return self._entry_fulfillment

    @entry_fulfillment.setter
    def entry_fulfillment(self, entry_fulfillment):
        """Sets the entry_fulfillment of this GoogleCloudDialogflowCxV3Page.


        :param entry_fulfillment: The entry_fulfillment of this GoogleCloudDialogflowCxV3Page.
        :type entry_fulfillment: GoogleCloudDialogflowCxV3Fulfillment
        """

        self._entry_fulfillment = entry_fulfillment

    @property
    def event_handlers(self):
        """Gets the event_handlers of this GoogleCloudDialogflowCxV3Page.

        Handlers associated with the page to handle events such as webhook errors, no match or no input.

        :return: The event_handlers of this GoogleCloudDialogflowCxV3Page.
        :rtype: List[GoogleCloudDialogflowCxV3EventHandler]
        """
        return self._event_handlers

    @event_handlers.setter
    def event_handlers(self, event_handlers):
        """Sets the event_handlers of this GoogleCloudDialogflowCxV3Page.

        Handlers associated with the page to handle events such as webhook errors, no match or no input.

        :param event_handlers: The event_handlers of this GoogleCloudDialogflowCxV3Page.
        :type event_handlers: List[GoogleCloudDialogflowCxV3EventHandler]
        """

        self._event_handlers = event_handlers

    @property
    def form(self):
        """Gets the form of this GoogleCloudDialogflowCxV3Page.


        :return: The form of this GoogleCloudDialogflowCxV3Page.
        :rtype: GoogleCloudDialogflowCxV3Form
        """
        return self._form

    @form.setter
    def form(self, form):
        """Sets the form of this GoogleCloudDialogflowCxV3Page.


        :param form: The form of this GoogleCloudDialogflowCxV3Page.
        :type form: GoogleCloudDialogflowCxV3Form
        """

        self._form = form

    @property
    def knowledge_connector_settings(self):
        """Gets the knowledge_connector_settings of this GoogleCloudDialogflowCxV3Page.


        :return: The knowledge_connector_settings of this GoogleCloudDialogflowCxV3Page.
        :rtype: GoogleCloudDialogflowCxV3KnowledgeConnectorSettings
        """
        return self._knowledge_connector_settings

    @knowledge_connector_settings.setter
    def knowledge_connector_settings(self, knowledge_connector_settings):
        """Sets the knowledge_connector_settings of this GoogleCloudDialogflowCxV3Page.


        :param knowledge_connector_settings: The knowledge_connector_settings of this GoogleCloudDialogflowCxV3Page.
        :type knowledge_connector_settings: GoogleCloudDialogflowCxV3KnowledgeConnectorSettings
        """

        self._knowledge_connector_settings = knowledge_connector_settings

    @property
    def name(self):
        """Gets the name of this GoogleCloudDialogflowCxV3Page.

        The unique identifier of the page. Required for the Pages.UpdatePage method. Pages.CreatePage populates the name automatically. Format: `projects//locations//agents//flows//pages/`.

        :return: The name of this GoogleCloudDialogflowCxV3Page.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudDialogflowCxV3Page.

        The unique identifier of the page. Required for the Pages.UpdatePage method. Pages.CreatePage populates the name automatically. Format: `projects//locations//agents//flows//pages/`.

        :param name: The name of this GoogleCloudDialogflowCxV3Page.
        :type name: str
        """

        self._name = name

    @property
    def transition_route_groups(self):
        """Gets the transition_route_groups of this GoogleCloudDialogflowCxV3Page.

        Ordered list of `TransitionRouteGroups` added to the page. Transition route groups must be unique within a page. If the page links both flow-level transition route groups and agent-level transition route groups, the flow-level ones will have higher priority and will be put before the agent-level ones. * If multiple transition routes within a page scope refer to the same intent, then the precedence order is: page's transition route -> page's transition route group -> flow's transition routes. * If multiple transition route groups within a page contain the same intent, then the first group in the ordered list takes precedence. Format:`projects//locations//agents//flows//transitionRouteGroups/` or `projects//locations//agents//transitionRouteGroups/` for agent-level groups.

        :return: The transition_route_groups of this GoogleCloudDialogflowCxV3Page.
        :rtype: List[str]
        """
        return self._transition_route_groups

    @transition_route_groups.setter
    def transition_route_groups(self, transition_route_groups):
        """Sets the transition_route_groups of this GoogleCloudDialogflowCxV3Page.

        Ordered list of `TransitionRouteGroups` added to the page. Transition route groups must be unique within a page. If the page links both flow-level transition route groups and agent-level transition route groups, the flow-level ones will have higher priority and will be put before the agent-level ones. * If multiple transition routes within a page scope refer to the same intent, then the precedence order is: page's transition route -> page's transition route group -> flow's transition routes. * If multiple transition route groups within a page contain the same intent, then the first group in the ordered list takes precedence. Format:`projects//locations//agents//flows//transitionRouteGroups/` or `projects//locations//agents//transitionRouteGroups/` for agent-level groups.

        :param transition_route_groups: The transition_route_groups of this GoogleCloudDialogflowCxV3Page.
        :type transition_route_groups: List[str]
        """

        self._transition_route_groups = transition_route_groups

    @property
    def transition_routes(self):
        """Gets the transition_routes of this GoogleCloudDialogflowCxV3Page.

        A list of transitions for the transition rules of this page. They route the conversation to another page in the same flow, or another flow. When we are in a certain page, the TransitionRoutes are evalauted in the following order: * TransitionRoutes defined in the page with intent specified. * TransitionRoutes defined in the transition route groups with intent specified. * TransitionRoutes defined in flow with intent specified. * TransitionRoutes defined in the transition route groups with intent specified. * TransitionRoutes defined in the page with only condition specified. * TransitionRoutes defined in the transition route groups with only condition specified.

        :return: The transition_routes of this GoogleCloudDialogflowCxV3Page.
        :rtype: List[GoogleCloudDialogflowCxV3TransitionRoute]
        """
        return self._transition_routes

    @transition_routes.setter
    def transition_routes(self, transition_routes):
        """Sets the transition_routes of this GoogleCloudDialogflowCxV3Page.

        A list of transitions for the transition rules of this page. They route the conversation to another page in the same flow, or another flow. When we are in a certain page, the TransitionRoutes are evalauted in the following order: * TransitionRoutes defined in the page with intent specified. * TransitionRoutes defined in the transition route groups with intent specified. * TransitionRoutes defined in flow with intent specified. * TransitionRoutes defined in the transition route groups with intent specified. * TransitionRoutes defined in the page with only condition specified. * TransitionRoutes defined in the transition route groups with only condition specified.

        :param transition_routes: The transition_routes of this GoogleCloudDialogflowCxV3Page.
        :type transition_routes: List[GoogleCloudDialogflowCxV3TransitionRoute]
        """

        self._transition_routes = transition_routes
