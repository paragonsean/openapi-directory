# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_dialogflow_cx_v3beta1_advanced_settings import GoogleCloudDialogflowCxV3beta1AdvancedSettings
from openapi_server.models.google_cloud_dialogflow_cx_v3beta1_agent_answer_feedback_settings import GoogleCloudDialogflowCxV3beta1AgentAnswerFeedbackSettings
from openapi_server.models.google_cloud_dialogflow_cx_v3beta1_agent_gen_app_builder_settings import GoogleCloudDialogflowCxV3beta1AgentGenAppBuilderSettings
from openapi_server.models.google_cloud_dialogflow_cx_v3beta1_agent_git_integration_settings import GoogleCloudDialogflowCxV3beta1AgentGitIntegrationSettings
from openapi_server.models.google_cloud_dialogflow_cx_v3beta1_speech_to_text_settings import GoogleCloudDialogflowCxV3beta1SpeechToTextSettings
from openapi_server.models.google_cloud_dialogflow_cx_v3beta1_text_to_speech_settings import GoogleCloudDialogflowCxV3beta1TextToSpeechSettings
from openapi_server import util


class GoogleCloudDialogflowCxV3beta1Agent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, advanced_settings: GoogleCloudDialogflowCxV3beta1AdvancedSettings=None, answer_feedback_settings: GoogleCloudDialogflowCxV3beta1AgentAnswerFeedbackSettings=None, avatar_uri: str=None, default_language_code: str=None, description: str=None, display_name: str=None, enable_spell_correction: bool=None, enable_stackdriver_logging: bool=None, gen_app_builder_settings: GoogleCloudDialogflowCxV3beta1AgentGenAppBuilderSettings=None, git_integration_settings: GoogleCloudDialogflowCxV3beta1AgentGitIntegrationSettings=None, locked: bool=None, name: str=None, security_settings: str=None, speech_to_text_settings: GoogleCloudDialogflowCxV3beta1SpeechToTextSettings=None, start_flow: str=None, supported_language_codes: List[str]=None, text_to_speech_settings: GoogleCloudDialogflowCxV3beta1TextToSpeechSettings=None, time_zone: str=None):
        """GoogleCloudDialogflowCxV3beta1Agent - a model defined in OpenAPI

        :param advanced_settings: The advanced_settings of this GoogleCloudDialogflowCxV3beta1Agent.
        :param answer_feedback_settings: The answer_feedback_settings of this GoogleCloudDialogflowCxV3beta1Agent.
        :param avatar_uri: The avatar_uri of this GoogleCloudDialogflowCxV3beta1Agent.
        :param default_language_code: The default_language_code of this GoogleCloudDialogflowCxV3beta1Agent.
        :param description: The description of this GoogleCloudDialogflowCxV3beta1Agent.
        :param display_name: The display_name of this GoogleCloudDialogflowCxV3beta1Agent.
        :param enable_spell_correction: The enable_spell_correction of this GoogleCloudDialogflowCxV3beta1Agent.
        :param enable_stackdriver_logging: The enable_stackdriver_logging of this GoogleCloudDialogflowCxV3beta1Agent.
        :param gen_app_builder_settings: The gen_app_builder_settings of this GoogleCloudDialogflowCxV3beta1Agent.
        :param git_integration_settings: The git_integration_settings of this GoogleCloudDialogflowCxV3beta1Agent.
        :param locked: The locked of this GoogleCloudDialogflowCxV3beta1Agent.
        :param name: The name of this GoogleCloudDialogflowCxV3beta1Agent.
        :param security_settings: The security_settings of this GoogleCloudDialogflowCxV3beta1Agent.
        :param speech_to_text_settings: The speech_to_text_settings of this GoogleCloudDialogflowCxV3beta1Agent.
        :param start_flow: The start_flow of this GoogleCloudDialogflowCxV3beta1Agent.
        :param supported_language_codes: The supported_language_codes of this GoogleCloudDialogflowCxV3beta1Agent.
        :param text_to_speech_settings: The text_to_speech_settings of this GoogleCloudDialogflowCxV3beta1Agent.
        :param time_zone: The time_zone of this GoogleCloudDialogflowCxV3beta1Agent.
        """
        self.openapi_types = {
            'advanced_settings': GoogleCloudDialogflowCxV3beta1AdvancedSettings,
            'answer_feedback_settings': GoogleCloudDialogflowCxV3beta1AgentAnswerFeedbackSettings,
            'avatar_uri': str,
            'default_language_code': str,
            'description': str,
            'display_name': str,
            'enable_spell_correction': bool,
            'enable_stackdriver_logging': bool,
            'gen_app_builder_settings': GoogleCloudDialogflowCxV3beta1AgentGenAppBuilderSettings,
            'git_integration_settings': GoogleCloudDialogflowCxV3beta1AgentGitIntegrationSettings,
            'locked': bool,
            'name': str,
            'security_settings': str,
            'speech_to_text_settings': GoogleCloudDialogflowCxV3beta1SpeechToTextSettings,
            'start_flow': str,
            'supported_language_codes': List[str],
            'text_to_speech_settings': GoogleCloudDialogflowCxV3beta1TextToSpeechSettings,
            'time_zone': str
        }

        self.attribute_map = {
            'advanced_settings': 'advancedSettings',
            'answer_feedback_settings': 'answerFeedbackSettings',
            'avatar_uri': 'avatarUri',
            'default_language_code': 'defaultLanguageCode',
            'description': 'description',
            'display_name': 'displayName',
            'enable_spell_correction': 'enableSpellCorrection',
            'enable_stackdriver_logging': 'enableStackdriverLogging',
            'gen_app_builder_settings': 'genAppBuilderSettings',
            'git_integration_settings': 'gitIntegrationSettings',
            'locked': 'locked',
            'name': 'name',
            'security_settings': 'securitySettings',
            'speech_to_text_settings': 'speechToTextSettings',
            'start_flow': 'startFlow',
            'supported_language_codes': 'supportedLanguageCodes',
            'text_to_speech_settings': 'textToSpeechSettings',
            'time_zone': 'timeZone'
        }

        self._advanced_settings = advanced_settings
        self._answer_feedback_settings = answer_feedback_settings
        self._avatar_uri = avatar_uri
        self._default_language_code = default_language_code
        self._description = description
        self._display_name = display_name
        self._enable_spell_correction = enable_spell_correction
        self._enable_stackdriver_logging = enable_stackdriver_logging
        self._gen_app_builder_settings = gen_app_builder_settings
        self._git_integration_settings = git_integration_settings
        self._locked = locked
        self._name = name
        self._security_settings = security_settings
        self._speech_to_text_settings = speech_to_text_settings
        self._start_flow = start_flow
        self._supported_language_codes = supported_language_codes
        self._text_to_speech_settings = text_to_speech_settings
        self._time_zone = time_zone

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDialogflowCxV3beta1Agent':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDialogflowCxV3beta1Agent of this GoogleCloudDialogflowCxV3beta1Agent.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def advanced_settings(self):
        """Gets the advanced_settings of this GoogleCloudDialogflowCxV3beta1Agent.


        :return: The advanced_settings of this GoogleCloudDialogflowCxV3beta1Agent.
        :rtype: GoogleCloudDialogflowCxV3beta1AdvancedSettings
        """
        return self._advanced_settings

    @advanced_settings.setter
    def advanced_settings(self, advanced_settings):
        """Sets the advanced_settings of this GoogleCloudDialogflowCxV3beta1Agent.


        :param advanced_settings: The advanced_settings of this GoogleCloudDialogflowCxV3beta1Agent.
        :type advanced_settings: GoogleCloudDialogflowCxV3beta1AdvancedSettings
        """

        self._advanced_settings = advanced_settings

    @property
    def answer_feedback_settings(self):
        """Gets the answer_feedback_settings of this GoogleCloudDialogflowCxV3beta1Agent.


        :return: The answer_feedback_settings of this GoogleCloudDialogflowCxV3beta1Agent.
        :rtype: GoogleCloudDialogflowCxV3beta1AgentAnswerFeedbackSettings
        """
        return self._answer_feedback_settings

    @answer_feedback_settings.setter
    def answer_feedback_settings(self, answer_feedback_settings):
        """Sets the answer_feedback_settings of this GoogleCloudDialogflowCxV3beta1Agent.


        :param answer_feedback_settings: The answer_feedback_settings of this GoogleCloudDialogflowCxV3beta1Agent.
        :type answer_feedback_settings: GoogleCloudDialogflowCxV3beta1AgentAnswerFeedbackSettings
        """

        self._answer_feedback_settings = answer_feedback_settings

    @property
    def avatar_uri(self):
        """Gets the avatar_uri of this GoogleCloudDialogflowCxV3beta1Agent.

        The URI of the agent's avatar. Avatars are used throughout the Dialogflow console and in the self-hosted [Web Demo](https://cloud.google.com/dialogflow/docs/integrations/web-demo) integration.

        :return: The avatar_uri of this GoogleCloudDialogflowCxV3beta1Agent.
        :rtype: str
        """
        return self._avatar_uri

    @avatar_uri.setter
    def avatar_uri(self, avatar_uri):
        """Sets the avatar_uri of this GoogleCloudDialogflowCxV3beta1Agent.

        The URI of the agent's avatar. Avatars are used throughout the Dialogflow console and in the self-hosted [Web Demo](https://cloud.google.com/dialogflow/docs/integrations/web-demo) integration.

        :param avatar_uri: The avatar_uri of this GoogleCloudDialogflowCxV3beta1Agent.
        :type avatar_uri: str
        """

        self._avatar_uri = avatar_uri

    @property
    def default_language_code(self):
        """Gets the default_language_code of this GoogleCloudDialogflowCxV3beta1Agent.

        Required. Immutable. The default language of the agent as a language tag. See [Language Support](https://cloud.google.com/dialogflow/cx/docs/reference/language) for a list of the currently supported language codes. This field cannot be set by the Agents.UpdateAgent method.

        :return: The default_language_code of this GoogleCloudDialogflowCxV3beta1Agent.
        :rtype: str
        """
        return self._default_language_code

    @default_language_code.setter
    def default_language_code(self, default_language_code):
        """Sets the default_language_code of this GoogleCloudDialogflowCxV3beta1Agent.

        Required. Immutable. The default language of the agent as a language tag. See [Language Support](https://cloud.google.com/dialogflow/cx/docs/reference/language) for a list of the currently supported language codes. This field cannot be set by the Agents.UpdateAgent method.

        :param default_language_code: The default_language_code of this GoogleCloudDialogflowCxV3beta1Agent.
        :type default_language_code: str
        """

        self._default_language_code = default_language_code

    @property
    def description(self):
        """Gets the description of this GoogleCloudDialogflowCxV3beta1Agent.

        The description of the agent. The maximum length is 500 characters. If exceeded, the request is rejected.

        :return: The description of this GoogleCloudDialogflowCxV3beta1Agent.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GoogleCloudDialogflowCxV3beta1Agent.

        The description of the agent. The maximum length is 500 characters. If exceeded, the request is rejected.

        :param description: The description of this GoogleCloudDialogflowCxV3beta1Agent.
        :type description: str
        """

        self._description = description

    @property
    def display_name(self):
        """Gets the display_name of this GoogleCloudDialogflowCxV3beta1Agent.

        Required. The human-readable name of the agent, unique within the location.

        :return: The display_name of this GoogleCloudDialogflowCxV3beta1Agent.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this GoogleCloudDialogflowCxV3beta1Agent.

        Required. The human-readable name of the agent, unique within the location.

        :param display_name: The display_name of this GoogleCloudDialogflowCxV3beta1Agent.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def enable_spell_correction(self):
        """Gets the enable_spell_correction of this GoogleCloudDialogflowCxV3beta1Agent.

        Indicates if automatic spell correction is enabled in detect intent requests.

        :return: The enable_spell_correction of this GoogleCloudDialogflowCxV3beta1Agent.
        :rtype: bool
        """
        return self._enable_spell_correction

    @enable_spell_correction.setter
    def enable_spell_correction(self, enable_spell_correction):
        """Sets the enable_spell_correction of this GoogleCloudDialogflowCxV3beta1Agent.

        Indicates if automatic spell correction is enabled in detect intent requests.

        :param enable_spell_correction: The enable_spell_correction of this GoogleCloudDialogflowCxV3beta1Agent.
        :type enable_spell_correction: bool
        """

        self._enable_spell_correction = enable_spell_correction

    @property
    def enable_stackdriver_logging(self):
        """Gets the enable_stackdriver_logging of this GoogleCloudDialogflowCxV3beta1Agent.

        Indicates if stackdriver logging is enabled for the agent. Please use agent.advanced_settings instead.

        :return: The enable_stackdriver_logging of this GoogleCloudDialogflowCxV3beta1Agent.
        :rtype: bool
        """
        return self._enable_stackdriver_logging

    @enable_stackdriver_logging.setter
    def enable_stackdriver_logging(self, enable_stackdriver_logging):
        """Sets the enable_stackdriver_logging of this GoogleCloudDialogflowCxV3beta1Agent.

        Indicates if stackdriver logging is enabled for the agent. Please use agent.advanced_settings instead.

        :param enable_stackdriver_logging: The enable_stackdriver_logging of this GoogleCloudDialogflowCxV3beta1Agent.
        :type enable_stackdriver_logging: bool
        """

        self._enable_stackdriver_logging = enable_stackdriver_logging

    @property
    def gen_app_builder_settings(self):
        """Gets the gen_app_builder_settings of this GoogleCloudDialogflowCxV3beta1Agent.


        :return: The gen_app_builder_settings of this GoogleCloudDialogflowCxV3beta1Agent.
        :rtype: GoogleCloudDialogflowCxV3beta1AgentGenAppBuilderSettings
        """
        return self._gen_app_builder_settings

    @gen_app_builder_settings.setter
    def gen_app_builder_settings(self, gen_app_builder_settings):
        """Sets the gen_app_builder_settings of this GoogleCloudDialogflowCxV3beta1Agent.


        :param gen_app_builder_settings: The gen_app_builder_settings of this GoogleCloudDialogflowCxV3beta1Agent.
        :type gen_app_builder_settings: GoogleCloudDialogflowCxV3beta1AgentGenAppBuilderSettings
        """

        self._gen_app_builder_settings = gen_app_builder_settings

    @property
    def git_integration_settings(self):
        """Gets the git_integration_settings of this GoogleCloudDialogflowCxV3beta1Agent.


        :return: The git_integration_settings of this GoogleCloudDialogflowCxV3beta1Agent.
        :rtype: GoogleCloudDialogflowCxV3beta1AgentGitIntegrationSettings
        """
        return self._git_integration_settings

    @git_integration_settings.setter
    def git_integration_settings(self, git_integration_settings):
        """Sets the git_integration_settings of this GoogleCloudDialogflowCxV3beta1Agent.


        :param git_integration_settings: The git_integration_settings of this GoogleCloudDialogflowCxV3beta1Agent.
        :type git_integration_settings: GoogleCloudDialogflowCxV3beta1AgentGitIntegrationSettings
        """

        self._git_integration_settings = git_integration_settings

    @property
    def locked(self):
        """Gets the locked of this GoogleCloudDialogflowCxV3beta1Agent.

        Indicates whether the agent is locked for changes. If the agent is locked, modifications to the agent will be rejected except for RestoreAgent.

        :return: The locked of this GoogleCloudDialogflowCxV3beta1Agent.
        :rtype: bool
        """
        return self._locked

    @locked.setter
    def locked(self, locked):
        """Sets the locked of this GoogleCloudDialogflowCxV3beta1Agent.

        Indicates whether the agent is locked for changes. If the agent is locked, modifications to the agent will be rejected except for RestoreAgent.

        :param locked: The locked of this GoogleCloudDialogflowCxV3beta1Agent.
        :type locked: bool
        """

        self._locked = locked

    @property
    def name(self):
        """Gets the name of this GoogleCloudDialogflowCxV3beta1Agent.

        The unique identifier of the agent. Required for the Agents.UpdateAgent method. Agents.CreateAgent populates the name automatically. Format: `projects//locations//agents/`.

        :return: The name of this GoogleCloudDialogflowCxV3beta1Agent.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudDialogflowCxV3beta1Agent.

        The unique identifier of the agent. Required for the Agents.UpdateAgent method. Agents.CreateAgent populates the name automatically. Format: `projects//locations//agents/`.

        :param name: The name of this GoogleCloudDialogflowCxV3beta1Agent.
        :type name: str
        """

        self._name = name

    @property
    def security_settings(self):
        """Gets the security_settings of this GoogleCloudDialogflowCxV3beta1Agent.

        Name of the SecuritySettings reference for the agent. Format: `projects//locations//securitySettings/`.

        :return: The security_settings of this GoogleCloudDialogflowCxV3beta1Agent.
        :rtype: str
        """
        return self._security_settings

    @security_settings.setter
    def security_settings(self, security_settings):
        """Sets the security_settings of this GoogleCloudDialogflowCxV3beta1Agent.

        Name of the SecuritySettings reference for the agent. Format: `projects//locations//securitySettings/`.

        :param security_settings: The security_settings of this GoogleCloudDialogflowCxV3beta1Agent.
        :type security_settings: str
        """

        self._security_settings = security_settings

    @property
    def speech_to_text_settings(self):
        """Gets the speech_to_text_settings of this GoogleCloudDialogflowCxV3beta1Agent.


        :return: The speech_to_text_settings of this GoogleCloudDialogflowCxV3beta1Agent.
        :rtype: GoogleCloudDialogflowCxV3beta1SpeechToTextSettings
        """
        return self._speech_to_text_settings

    @speech_to_text_settings.setter
    def speech_to_text_settings(self, speech_to_text_settings):
        """Sets the speech_to_text_settings of this GoogleCloudDialogflowCxV3beta1Agent.


        :param speech_to_text_settings: The speech_to_text_settings of this GoogleCloudDialogflowCxV3beta1Agent.
        :type speech_to_text_settings: GoogleCloudDialogflowCxV3beta1SpeechToTextSettings
        """

        self._speech_to_text_settings = speech_to_text_settings

    @property
    def start_flow(self):
        """Gets the start_flow of this GoogleCloudDialogflowCxV3beta1Agent.

        Immutable. Name of the start flow in this agent. A start flow will be automatically created when the agent is created, and can only be deleted by deleting the agent. Format: `projects//locations//agents//flows/`.

        :return: The start_flow of this GoogleCloudDialogflowCxV3beta1Agent.
        :rtype: str
        """
        return self._start_flow

    @start_flow.setter
    def start_flow(self, start_flow):
        """Sets the start_flow of this GoogleCloudDialogflowCxV3beta1Agent.

        Immutable. Name of the start flow in this agent. A start flow will be automatically created when the agent is created, and can only be deleted by deleting the agent. Format: `projects//locations//agents//flows/`.

        :param start_flow: The start_flow of this GoogleCloudDialogflowCxV3beta1Agent.
        :type start_flow: str
        """

        self._start_flow = start_flow

    @property
    def supported_language_codes(self):
        """Gets the supported_language_codes of this GoogleCloudDialogflowCxV3beta1Agent.

        The list of all languages supported by the agent (except for the `default_language_code`).

        :return: The supported_language_codes of this GoogleCloudDialogflowCxV3beta1Agent.
        :rtype: List[str]
        """
        return self._supported_language_codes

    @supported_language_codes.setter
    def supported_language_codes(self, supported_language_codes):
        """Sets the supported_language_codes of this GoogleCloudDialogflowCxV3beta1Agent.

        The list of all languages supported by the agent (except for the `default_language_code`).

        :param supported_language_codes: The supported_language_codes of this GoogleCloudDialogflowCxV3beta1Agent.
        :type supported_language_codes: List[str]
        """

        self._supported_language_codes = supported_language_codes

    @property
    def text_to_speech_settings(self):
        """Gets the text_to_speech_settings of this GoogleCloudDialogflowCxV3beta1Agent.


        :return: The text_to_speech_settings of this GoogleCloudDialogflowCxV3beta1Agent.
        :rtype: GoogleCloudDialogflowCxV3beta1TextToSpeechSettings
        """
        return self._text_to_speech_settings

    @text_to_speech_settings.setter
    def text_to_speech_settings(self, text_to_speech_settings):
        """Sets the text_to_speech_settings of this GoogleCloudDialogflowCxV3beta1Agent.


        :param text_to_speech_settings: The text_to_speech_settings of this GoogleCloudDialogflowCxV3beta1Agent.
        :type text_to_speech_settings: GoogleCloudDialogflowCxV3beta1TextToSpeechSettings
        """

        self._text_to_speech_settings = text_to_speech_settings

    @property
    def time_zone(self):
        """Gets the time_zone of this GoogleCloudDialogflowCxV3beta1Agent.

        Required. The time zone of the agent from the [time zone database](https://www.iana.org/time-zones), e.g., America/New_York, Europe/Paris.

        :return: The time_zone of this GoogleCloudDialogflowCxV3beta1Agent.
        :rtype: str
        """
        return self._time_zone

    @time_zone.setter
    def time_zone(self, time_zone):
        """Sets the time_zone of this GoogleCloudDialogflowCxV3beta1Agent.

        Required. The time zone of the agent from the [time zone database](https://www.iana.org/time-zones), e.g., America/New_York, Europe/Paris.

        :param time_zone: The time_zone of this GoogleCloudDialogflowCxV3beta1Agent.
        :type time_zone: str
        """

        self._time_zone = time_zone
