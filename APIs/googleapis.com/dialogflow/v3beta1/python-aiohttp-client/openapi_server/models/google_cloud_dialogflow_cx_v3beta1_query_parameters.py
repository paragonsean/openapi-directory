# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_dialogflow_cx_v3beta1_search_config import GoogleCloudDialogflowCxV3beta1SearchConfig
from openapi_server.models.google_cloud_dialogflow_cx_v3beta1_session_entity_type import GoogleCloudDialogflowCxV3beta1SessionEntityType
from openapi_server.models.google_type_lat_lng import GoogleTypeLatLng
from openapi_server import util


class GoogleCloudDialogflowCxV3beta1QueryParameters(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, analyze_query_text_sentiment: bool=None, channel: str=None, current_page: str=None, disable_webhook: bool=None, end_user_metadata: Dict[str, object]=None, flow_versions: List[str]=None, geo_location: GoogleTypeLatLng=None, parameters: Dict[str, object]=None, payload: Dict[str, object]=None, search_config: GoogleCloudDialogflowCxV3beta1SearchConfig=None, session_entity_types: List[GoogleCloudDialogflowCxV3beta1SessionEntityType]=None, session_ttl: str=None, time_zone: str=None, webhook_headers: Dict[str, str]=None):
        """GoogleCloudDialogflowCxV3beta1QueryParameters - a model defined in OpenAPI

        :param analyze_query_text_sentiment: The analyze_query_text_sentiment of this GoogleCloudDialogflowCxV3beta1QueryParameters.
        :param channel: The channel of this GoogleCloudDialogflowCxV3beta1QueryParameters.
        :param current_page: The current_page of this GoogleCloudDialogflowCxV3beta1QueryParameters.
        :param disable_webhook: The disable_webhook of this GoogleCloudDialogflowCxV3beta1QueryParameters.
        :param end_user_metadata: The end_user_metadata of this GoogleCloudDialogflowCxV3beta1QueryParameters.
        :param flow_versions: The flow_versions of this GoogleCloudDialogflowCxV3beta1QueryParameters.
        :param geo_location: The geo_location of this GoogleCloudDialogflowCxV3beta1QueryParameters.
        :param parameters: The parameters of this GoogleCloudDialogflowCxV3beta1QueryParameters.
        :param payload: The payload of this GoogleCloudDialogflowCxV3beta1QueryParameters.
        :param search_config: The search_config of this GoogleCloudDialogflowCxV3beta1QueryParameters.
        :param session_entity_types: The session_entity_types of this GoogleCloudDialogflowCxV3beta1QueryParameters.
        :param session_ttl: The session_ttl of this GoogleCloudDialogflowCxV3beta1QueryParameters.
        :param time_zone: The time_zone of this GoogleCloudDialogflowCxV3beta1QueryParameters.
        :param webhook_headers: The webhook_headers of this GoogleCloudDialogflowCxV3beta1QueryParameters.
        """
        self.openapi_types = {
            'analyze_query_text_sentiment': bool,
            'channel': str,
            'current_page': str,
            'disable_webhook': bool,
            'end_user_metadata': Dict[str, object],
            'flow_versions': List[str],
            'geo_location': GoogleTypeLatLng,
            'parameters': Dict[str, object],
            'payload': Dict[str, object],
            'search_config': GoogleCloudDialogflowCxV3beta1SearchConfig,
            'session_entity_types': List[GoogleCloudDialogflowCxV3beta1SessionEntityType],
            'session_ttl': str,
            'time_zone': str,
            'webhook_headers': Dict[str, str]
        }

        self.attribute_map = {
            'analyze_query_text_sentiment': 'analyzeQueryTextSentiment',
            'channel': 'channel',
            'current_page': 'currentPage',
            'disable_webhook': 'disableWebhook',
            'end_user_metadata': 'endUserMetadata',
            'flow_versions': 'flowVersions',
            'geo_location': 'geoLocation',
            'parameters': 'parameters',
            'payload': 'payload',
            'search_config': 'searchConfig',
            'session_entity_types': 'sessionEntityTypes',
            'session_ttl': 'sessionTtl',
            'time_zone': 'timeZone',
            'webhook_headers': 'webhookHeaders'
        }

        self._analyze_query_text_sentiment = analyze_query_text_sentiment
        self._channel = channel
        self._current_page = current_page
        self._disable_webhook = disable_webhook
        self._end_user_metadata = end_user_metadata
        self._flow_versions = flow_versions
        self._geo_location = geo_location
        self._parameters = parameters
        self._payload = payload
        self._search_config = search_config
        self._session_entity_types = session_entity_types
        self._session_ttl = session_ttl
        self._time_zone = time_zone
        self._webhook_headers = webhook_headers

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDialogflowCxV3beta1QueryParameters':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDialogflowCxV3beta1QueryParameters of this GoogleCloudDialogflowCxV3beta1QueryParameters.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def analyze_query_text_sentiment(self):
        """Gets the analyze_query_text_sentiment of this GoogleCloudDialogflowCxV3beta1QueryParameters.

        Configures whether sentiment analysis should be performed. If not provided, sentiment analysis is not performed.

        :return: The analyze_query_text_sentiment of this GoogleCloudDialogflowCxV3beta1QueryParameters.
        :rtype: bool
        """
        return self._analyze_query_text_sentiment

    @analyze_query_text_sentiment.setter
    def analyze_query_text_sentiment(self, analyze_query_text_sentiment):
        """Sets the analyze_query_text_sentiment of this GoogleCloudDialogflowCxV3beta1QueryParameters.

        Configures whether sentiment analysis should be performed. If not provided, sentiment analysis is not performed.

        :param analyze_query_text_sentiment: The analyze_query_text_sentiment of this GoogleCloudDialogflowCxV3beta1QueryParameters.
        :type analyze_query_text_sentiment: bool
        """

        self._analyze_query_text_sentiment = analyze_query_text_sentiment

    @property
    def channel(self):
        """Gets the channel of this GoogleCloudDialogflowCxV3beta1QueryParameters.

        The channel which this query is for. If specified, only the ResponseMessage associated with the channel will be returned. If no ResponseMessage is associated with the channel, it falls back to the ResponseMessage with unspecified channel. If unspecified, the ResponseMessage with unspecified channel will be returned.

        :return: The channel of this GoogleCloudDialogflowCxV3beta1QueryParameters.
        :rtype: str
        """
        return self._channel

    @channel.setter
    def channel(self, channel):
        """Sets the channel of this GoogleCloudDialogflowCxV3beta1QueryParameters.

        The channel which this query is for. If specified, only the ResponseMessage associated with the channel will be returned. If no ResponseMessage is associated with the channel, it falls back to the ResponseMessage with unspecified channel. If unspecified, the ResponseMessage with unspecified channel will be returned.

        :param channel: The channel of this GoogleCloudDialogflowCxV3beta1QueryParameters.
        :type channel: str
        """

        self._channel = channel

    @property
    def current_page(self):
        """Gets the current_page of this GoogleCloudDialogflowCxV3beta1QueryParameters.

        The unique identifier of the page to override the current page in the session. Format: `projects//locations//agents//flows//pages/`. If `current_page` is specified, the previous state of the session will be ignored by Dialogflow, including the previous page and the previous session parameters. In most cases, current_page and parameters should be configured together to direct a session to a specific state.

        :return: The current_page of this GoogleCloudDialogflowCxV3beta1QueryParameters.
        :rtype: str
        """
        return self._current_page

    @current_page.setter
    def current_page(self, current_page):
        """Sets the current_page of this GoogleCloudDialogflowCxV3beta1QueryParameters.

        The unique identifier of the page to override the current page in the session. Format: `projects//locations//agents//flows//pages/`. If `current_page` is specified, the previous state of the session will be ignored by Dialogflow, including the previous page and the previous session parameters. In most cases, current_page and parameters should be configured together to direct a session to a specific state.

        :param current_page: The current_page of this GoogleCloudDialogflowCxV3beta1QueryParameters.
        :type current_page: str
        """

        self._current_page = current_page

    @property
    def disable_webhook(self):
        """Gets the disable_webhook of this GoogleCloudDialogflowCxV3beta1QueryParameters.

        Whether to disable webhook calls for this request.

        :return: The disable_webhook of this GoogleCloudDialogflowCxV3beta1QueryParameters.
        :rtype: bool
        """
        return self._disable_webhook

    @disable_webhook.setter
    def disable_webhook(self, disable_webhook):
        """Sets the disable_webhook of this GoogleCloudDialogflowCxV3beta1QueryParameters.

        Whether to disable webhook calls for this request.

        :param disable_webhook: The disable_webhook of this GoogleCloudDialogflowCxV3beta1QueryParameters.
        :type disable_webhook: bool
        """

        self._disable_webhook = disable_webhook

    @property
    def end_user_metadata(self):
        """Gets the end_user_metadata of this GoogleCloudDialogflowCxV3beta1QueryParameters.

        Optional. Information about the end-user to improve the relevance and accuracy of generative answers. This will be interpreted and used by a language model, so, for good results, the data should be self-descriptive, and in a simple structure. Example: ```json { \"subscription plan\": \"Business Premium Plus\", \"devices owned\": [ {\"model\": \"Google Pixel 7\"}, {\"model\": \"Google Pixel Tablet\"} ] } ```

        :return: The end_user_metadata of this GoogleCloudDialogflowCxV3beta1QueryParameters.
        :rtype: Dict[str, object]
        """
        return self._end_user_metadata

    @end_user_metadata.setter
    def end_user_metadata(self, end_user_metadata):
        """Sets the end_user_metadata of this GoogleCloudDialogflowCxV3beta1QueryParameters.

        Optional. Information about the end-user to improve the relevance and accuracy of generative answers. This will be interpreted and used by a language model, so, for good results, the data should be self-descriptive, and in a simple structure. Example: ```json { \"subscription plan\": \"Business Premium Plus\", \"devices owned\": [ {\"model\": \"Google Pixel 7\"}, {\"model\": \"Google Pixel Tablet\"} ] } ```

        :param end_user_metadata: The end_user_metadata of this GoogleCloudDialogflowCxV3beta1QueryParameters.
        :type end_user_metadata: Dict[str, object]
        """

        self._end_user_metadata = end_user_metadata

    @property
    def flow_versions(self):
        """Gets the flow_versions of this GoogleCloudDialogflowCxV3beta1QueryParameters.

        A list of flow versions to override for the request. Format: `projects//locations//agents//flows//versions/`. If version 1 of flow X is included in this list, the traffic of flow X will go through version 1 regardless of the version configuration in the environment. Each flow can have at most one version specified in this list.

        :return: The flow_versions of this GoogleCloudDialogflowCxV3beta1QueryParameters.
        :rtype: List[str]
        """
        return self._flow_versions

    @flow_versions.setter
    def flow_versions(self, flow_versions):
        """Sets the flow_versions of this GoogleCloudDialogflowCxV3beta1QueryParameters.

        A list of flow versions to override for the request. Format: `projects//locations//agents//flows//versions/`. If version 1 of flow X is included in this list, the traffic of flow X will go through version 1 regardless of the version configuration in the environment. Each flow can have at most one version specified in this list.

        :param flow_versions: The flow_versions of this GoogleCloudDialogflowCxV3beta1QueryParameters.
        :type flow_versions: List[str]
        """

        self._flow_versions = flow_versions

    @property
    def geo_location(self):
        """Gets the geo_location of this GoogleCloudDialogflowCxV3beta1QueryParameters.


        :return: The geo_location of this GoogleCloudDialogflowCxV3beta1QueryParameters.
        :rtype: GoogleTypeLatLng
        """
        return self._geo_location

    @geo_location.setter
    def geo_location(self, geo_location):
        """Sets the geo_location of this GoogleCloudDialogflowCxV3beta1QueryParameters.


        :param geo_location: The geo_location of this GoogleCloudDialogflowCxV3beta1QueryParameters.
        :type geo_location: GoogleTypeLatLng
        """

        self._geo_location = geo_location

    @property
    def parameters(self):
        """Gets the parameters of this GoogleCloudDialogflowCxV3beta1QueryParameters.

        Additional parameters to be put into session parameters. To remove a parameter from the session, clients should explicitly set the parameter value to null. You can reference the session parameters in the agent with the following format: $session.params.parameter-id. Depending on your protocol or client library language, this is a map, associative array, symbol table, dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs: * MapKey type: string * MapKey value: parameter name * MapValue type: If parameter's entity type is a composite entity then use map, otherwise, depending on the parameter value type, it could be one of string, number, boolean, null, list or map. * MapValue value: If parameter's entity type is a composite entity then use map from composite entity property names to property values, otherwise, use parameter value.

        :return: The parameters of this GoogleCloudDialogflowCxV3beta1QueryParameters.
        :rtype: Dict[str, object]
        """
        return self._parameters

    @parameters.setter
    def parameters(self, parameters):
        """Sets the parameters of this GoogleCloudDialogflowCxV3beta1QueryParameters.

        Additional parameters to be put into session parameters. To remove a parameter from the session, clients should explicitly set the parameter value to null. You can reference the session parameters in the agent with the following format: $session.params.parameter-id. Depending on your protocol or client library language, this is a map, associative array, symbol table, dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs: * MapKey type: string * MapKey value: parameter name * MapValue type: If parameter's entity type is a composite entity then use map, otherwise, depending on the parameter value type, it could be one of string, number, boolean, null, list or map. * MapValue value: If parameter's entity type is a composite entity then use map from composite entity property names to property values, otherwise, use parameter value.

        :param parameters: The parameters of this GoogleCloudDialogflowCxV3beta1QueryParameters.
        :type parameters: Dict[str, object]
        """

        self._parameters = parameters

    @property
    def payload(self):
        """Gets the payload of this GoogleCloudDialogflowCxV3beta1QueryParameters.

        This field can be used to pass custom data into the webhook associated with the agent. Arbitrary JSON objects are supported. Some integrations that query a Dialogflow agent may provide additional information in the payload. In particular, for the Dialogflow Phone Gateway integration, this field has the form: ``` { \"telephony\": { \"caller_id\": \"+18558363987\" } } ```

        :return: The payload of this GoogleCloudDialogflowCxV3beta1QueryParameters.
        :rtype: Dict[str, object]
        """
        return self._payload

    @payload.setter
    def payload(self, payload):
        """Sets the payload of this GoogleCloudDialogflowCxV3beta1QueryParameters.

        This field can be used to pass custom data into the webhook associated with the agent. Arbitrary JSON objects are supported. Some integrations that query a Dialogflow agent may provide additional information in the payload. In particular, for the Dialogflow Phone Gateway integration, this field has the form: ``` { \"telephony\": { \"caller_id\": \"+18558363987\" } } ```

        :param payload: The payload of this GoogleCloudDialogflowCxV3beta1QueryParameters.
        :type payload: Dict[str, object]
        """

        self._payload = payload

    @property
    def search_config(self):
        """Gets the search_config of this GoogleCloudDialogflowCxV3beta1QueryParameters.


        :return: The search_config of this GoogleCloudDialogflowCxV3beta1QueryParameters.
        :rtype: GoogleCloudDialogflowCxV3beta1SearchConfig
        """
        return self._search_config

    @search_config.setter
    def search_config(self, search_config):
        """Sets the search_config of this GoogleCloudDialogflowCxV3beta1QueryParameters.


        :param search_config: The search_config of this GoogleCloudDialogflowCxV3beta1QueryParameters.
        :type search_config: GoogleCloudDialogflowCxV3beta1SearchConfig
        """

        self._search_config = search_config

    @property
    def session_entity_types(self):
        """Gets the session_entity_types of this GoogleCloudDialogflowCxV3beta1QueryParameters.

        Additional session entity types to replace or extend developer entity types with. The entity synonyms apply to all languages and persist for the session of this query.

        :return: The session_entity_types of this GoogleCloudDialogflowCxV3beta1QueryParameters.
        :rtype: List[GoogleCloudDialogflowCxV3beta1SessionEntityType]
        """
        return self._session_entity_types

    @session_entity_types.setter
    def session_entity_types(self, session_entity_types):
        """Sets the session_entity_types of this GoogleCloudDialogflowCxV3beta1QueryParameters.

        Additional session entity types to replace or extend developer entity types with. The entity synonyms apply to all languages and persist for the session of this query.

        :param session_entity_types: The session_entity_types of this GoogleCloudDialogflowCxV3beta1QueryParameters.
        :type session_entity_types: List[GoogleCloudDialogflowCxV3beta1SessionEntityType]
        """

        self._session_entity_types = session_entity_types

    @property
    def session_ttl(self):
        """Gets the session_ttl of this GoogleCloudDialogflowCxV3beta1QueryParameters.

        Optional. Configure lifetime of the Dialogflow session. By default, a Dialogflow session remains active and its data is stored for 30 minutes after the last request is sent for the session. This value should be no longer than 1 day.

        :return: The session_ttl of this GoogleCloudDialogflowCxV3beta1QueryParameters.
        :rtype: str
        """
        return self._session_ttl

    @session_ttl.setter
    def session_ttl(self, session_ttl):
        """Sets the session_ttl of this GoogleCloudDialogflowCxV3beta1QueryParameters.

        Optional. Configure lifetime of the Dialogflow session. By default, a Dialogflow session remains active and its data is stored for 30 minutes after the last request is sent for the session. This value should be no longer than 1 day.

        :param session_ttl: The session_ttl of this GoogleCloudDialogflowCxV3beta1QueryParameters.
        :type session_ttl: str
        """

        self._session_ttl = session_ttl

    @property
    def time_zone(self):
        """Gets the time_zone of this GoogleCloudDialogflowCxV3beta1QueryParameters.

        The time zone of this conversational query from the [time zone database](https://www.iana.org/time-zones), e.g., America/New_York, Europe/Paris. If not provided, the time zone specified in the agent is used.

        :return: The time_zone of this GoogleCloudDialogflowCxV3beta1QueryParameters.
        :rtype: str
        """
        return self._time_zone

    @time_zone.setter
    def time_zone(self, time_zone):
        """Sets the time_zone of this GoogleCloudDialogflowCxV3beta1QueryParameters.

        The time zone of this conversational query from the [time zone database](https://www.iana.org/time-zones), e.g., America/New_York, Europe/Paris. If not provided, the time zone specified in the agent is used.

        :param time_zone: The time_zone of this GoogleCloudDialogflowCxV3beta1QueryParameters.
        :type time_zone: str
        """

        self._time_zone = time_zone

    @property
    def webhook_headers(self):
        """Gets the webhook_headers of this GoogleCloudDialogflowCxV3beta1QueryParameters.

        This field can be used to pass HTTP headers for a webhook call. These headers will be sent to webhook along with the headers that have been configured through Dialogflow web console. The headers defined within this field will overwrite the headers configured through Dialogflow console if there is a conflict. Header names are case-insensitive. Google's specified headers are not allowed. Including: \"Host\", \"Content-Length\", \"Connection\", \"From\", \"User-Agent\", \"Accept-Encoding\", \"If-Modified-Since\", \"If-None-Match\", \"X-Forwarded-For\", etc.

        :return: The webhook_headers of this GoogleCloudDialogflowCxV3beta1QueryParameters.
        :rtype: Dict[str, str]
        """
        return self._webhook_headers

    @webhook_headers.setter
    def webhook_headers(self, webhook_headers):
        """Sets the webhook_headers of this GoogleCloudDialogflowCxV3beta1QueryParameters.

        This field can be used to pass HTTP headers for a webhook call. These headers will be sent to webhook along with the headers that have been configured through Dialogflow web console. The headers defined within this field will overwrite the headers configured through Dialogflow console if there is a conflict. Header names are case-insensitive. Google's specified headers are not allowed. Including: \"Host\", \"Content-Length\", \"Connection\", \"From\", \"User-Agent\", \"Accept-Encoding\", \"If-Modified-Since\", \"If-None-Match\", \"X-Forwarded-For\", etc.

        :param webhook_headers: The webhook_headers of this GoogleCloudDialogflowCxV3beta1QueryParameters.
        :type webhook_headers: Dict[str, str]
        """

        self._webhook_headers = webhook_headers
