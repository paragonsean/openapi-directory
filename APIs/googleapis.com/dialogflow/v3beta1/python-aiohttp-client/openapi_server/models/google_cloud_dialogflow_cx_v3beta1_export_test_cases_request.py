# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDialogflowCxV3beta1ExportTestCasesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data_format: str=None, filter: str=None, gcs_uri: str=None):
        """GoogleCloudDialogflowCxV3beta1ExportTestCasesRequest - a model defined in OpenAPI

        :param data_format: The data_format of this GoogleCloudDialogflowCxV3beta1ExportTestCasesRequest.
        :param filter: The filter of this GoogleCloudDialogflowCxV3beta1ExportTestCasesRequest.
        :param gcs_uri: The gcs_uri of this GoogleCloudDialogflowCxV3beta1ExportTestCasesRequest.
        """
        self.openapi_types = {
            'data_format': str,
            'filter': str,
            'gcs_uri': str
        }

        self.attribute_map = {
            'data_format': 'dataFormat',
            'filter': 'filter',
            'gcs_uri': 'gcsUri'
        }

        self._data_format = data_format
        self._filter = filter
        self._gcs_uri = gcs_uri

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDialogflowCxV3beta1ExportTestCasesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDialogflowCxV3beta1ExportTestCasesRequest of this GoogleCloudDialogflowCxV3beta1ExportTestCasesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data_format(self):
        """Gets the data_format of this GoogleCloudDialogflowCxV3beta1ExportTestCasesRequest.

        The data format of the exported test cases. If not specified, `BLOB` is assumed.

        :return: The data_format of this GoogleCloudDialogflowCxV3beta1ExportTestCasesRequest.
        :rtype: str
        """
        return self._data_format

    @data_format.setter
    def data_format(self, data_format):
        """Sets the data_format of this GoogleCloudDialogflowCxV3beta1ExportTestCasesRequest.

        The data format of the exported test cases. If not specified, `BLOB` is assumed.

        :param data_format: The data_format of this GoogleCloudDialogflowCxV3beta1ExportTestCasesRequest.
        :type data_format: str
        """
        allowed_values = ["DATA_FORMAT_UNSPECIFIED", "BLOB", "JSON"]  # noqa: E501
        if data_format not in allowed_values:
            raise ValueError(
                "Invalid value for `data_format` ({0}), must be one of {1}"
                .format(data_format, allowed_values)
            )

        self._data_format = data_format

    @property
    def filter(self):
        """Gets the filter of this GoogleCloudDialogflowCxV3beta1ExportTestCasesRequest.

        The filter expression used to filter exported test cases, see [API Filtering](https://aip.dev/160). The expression is case insensitive and supports the following syntax: name = [OR name = ] ... For example: * \"name = t1 OR name = t2\" matches the test case with the exact resource name \"t1\" or \"t2\".

        :return: The filter of this GoogleCloudDialogflowCxV3beta1ExportTestCasesRequest.
        :rtype: str
        """
        return self._filter

    @filter.setter
    def filter(self, filter):
        """Sets the filter of this GoogleCloudDialogflowCxV3beta1ExportTestCasesRequest.

        The filter expression used to filter exported test cases, see [API Filtering](https://aip.dev/160). The expression is case insensitive and supports the following syntax: name = [OR name = ] ... For example: * \"name = t1 OR name = t2\" matches the test case with the exact resource name \"t1\" or \"t2\".

        :param filter: The filter of this GoogleCloudDialogflowCxV3beta1ExportTestCasesRequest.
        :type filter: str
        """

        self._filter = filter

    @property
    def gcs_uri(self):
        """Gets the gcs_uri of this GoogleCloudDialogflowCxV3beta1ExportTestCasesRequest.

        The [Google Cloud Storage](https://cloud.google.com/storage/docs/) URI to export the test cases to. The format of this URI must be `gs:///`. If unspecified, the serialized test cases is returned inline. Dialogflow performs a write operation for the Cloud Storage object on the caller's behalf, so your request authentication must have write permissions for the object. For more information, see [Dialogflow access control](https://cloud.google.com/dialogflow/cx/docs/concept/access-control#storage).

        :return: The gcs_uri of this GoogleCloudDialogflowCxV3beta1ExportTestCasesRequest.
        :rtype: str
        """
        return self._gcs_uri

    @gcs_uri.setter
    def gcs_uri(self, gcs_uri):
        """Sets the gcs_uri of this GoogleCloudDialogflowCxV3beta1ExportTestCasesRequest.

        The [Google Cloud Storage](https://cloud.google.com/storage/docs/) URI to export the test cases to. The format of this URI must be `gs:///`. If unspecified, the serialized test cases is returned inline. Dialogflow performs a write operation for the Cloud Storage object on the caller's behalf, so your request authentication must have write permissions for the object. For more information, see [Dialogflow access control](https://cloud.google.com/dialogflow/cx/docs/concept/access-control#storage).

        :param gcs_uri: The gcs_uri of this GoogleCloudDialogflowCxV3beta1ExportTestCasesRequest.
        :type gcs_uri: str
        """

        self._gcs_uri = gcs_uri
