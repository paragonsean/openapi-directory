# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_dialogflow_cx_v3beta1_entity_type_entity import GoogleCloudDialogflowCxV3beta1EntityTypeEntity
from openapi_server.models.google_cloud_dialogflow_cx_v3beta1_entity_type_excluded_phrase import GoogleCloudDialogflowCxV3beta1EntityTypeExcludedPhrase
from openapi_server import util


class GoogleCloudDialogflowCxV3beta1EntityType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, auto_expansion_mode: str=None, display_name: str=None, enable_fuzzy_extraction: bool=None, entities: List[GoogleCloudDialogflowCxV3beta1EntityTypeEntity]=None, excluded_phrases: List[GoogleCloudDialogflowCxV3beta1EntityTypeExcludedPhrase]=None, kind: str=None, name: str=None, redact: bool=None):
        """GoogleCloudDialogflowCxV3beta1EntityType - a model defined in OpenAPI

        :param auto_expansion_mode: The auto_expansion_mode of this GoogleCloudDialogflowCxV3beta1EntityType.
        :param display_name: The display_name of this GoogleCloudDialogflowCxV3beta1EntityType.
        :param enable_fuzzy_extraction: The enable_fuzzy_extraction of this GoogleCloudDialogflowCxV3beta1EntityType.
        :param entities: The entities of this GoogleCloudDialogflowCxV3beta1EntityType.
        :param excluded_phrases: The excluded_phrases of this GoogleCloudDialogflowCxV3beta1EntityType.
        :param kind: The kind of this GoogleCloudDialogflowCxV3beta1EntityType.
        :param name: The name of this GoogleCloudDialogflowCxV3beta1EntityType.
        :param redact: The redact of this GoogleCloudDialogflowCxV3beta1EntityType.
        """
        self.openapi_types = {
            'auto_expansion_mode': str,
            'display_name': str,
            'enable_fuzzy_extraction': bool,
            'entities': List[GoogleCloudDialogflowCxV3beta1EntityTypeEntity],
            'excluded_phrases': List[GoogleCloudDialogflowCxV3beta1EntityTypeExcludedPhrase],
            'kind': str,
            'name': str,
            'redact': bool
        }

        self.attribute_map = {
            'auto_expansion_mode': 'autoExpansionMode',
            'display_name': 'displayName',
            'enable_fuzzy_extraction': 'enableFuzzyExtraction',
            'entities': 'entities',
            'excluded_phrases': 'excludedPhrases',
            'kind': 'kind',
            'name': 'name',
            'redact': 'redact'
        }

        self._auto_expansion_mode = auto_expansion_mode
        self._display_name = display_name
        self._enable_fuzzy_extraction = enable_fuzzy_extraction
        self._entities = entities
        self._excluded_phrases = excluded_phrases
        self._kind = kind
        self._name = name
        self._redact = redact

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDialogflowCxV3beta1EntityType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDialogflowCxV3beta1EntityType of this GoogleCloudDialogflowCxV3beta1EntityType.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def auto_expansion_mode(self):
        """Gets the auto_expansion_mode of this GoogleCloudDialogflowCxV3beta1EntityType.

        Indicates whether the entity type can be automatically expanded.

        :return: The auto_expansion_mode of this GoogleCloudDialogflowCxV3beta1EntityType.
        :rtype: str
        """
        return self._auto_expansion_mode

    @auto_expansion_mode.setter
    def auto_expansion_mode(self, auto_expansion_mode):
        """Sets the auto_expansion_mode of this GoogleCloudDialogflowCxV3beta1EntityType.

        Indicates whether the entity type can be automatically expanded.

        :param auto_expansion_mode: The auto_expansion_mode of this GoogleCloudDialogflowCxV3beta1EntityType.
        :type auto_expansion_mode: str
        """
        allowed_values = ["AUTO_EXPANSION_MODE_UNSPECIFIED", "AUTO_EXPANSION_MODE_DEFAULT"]  # noqa: E501
        if auto_expansion_mode not in allowed_values:
            raise ValueError(
                "Invalid value for `auto_expansion_mode` ({0}), must be one of {1}"
                .format(auto_expansion_mode, allowed_values)
            )

        self._auto_expansion_mode = auto_expansion_mode

    @property
    def display_name(self):
        """Gets the display_name of this GoogleCloudDialogflowCxV3beta1EntityType.

        Required. The human-readable name of the entity type, unique within the agent.

        :return: The display_name of this GoogleCloudDialogflowCxV3beta1EntityType.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this GoogleCloudDialogflowCxV3beta1EntityType.

        Required. The human-readable name of the entity type, unique within the agent.

        :param display_name: The display_name of this GoogleCloudDialogflowCxV3beta1EntityType.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def enable_fuzzy_extraction(self):
        """Gets the enable_fuzzy_extraction of this GoogleCloudDialogflowCxV3beta1EntityType.

        Enables fuzzy entity extraction during classification.

        :return: The enable_fuzzy_extraction of this GoogleCloudDialogflowCxV3beta1EntityType.
        :rtype: bool
        """
        return self._enable_fuzzy_extraction

    @enable_fuzzy_extraction.setter
    def enable_fuzzy_extraction(self, enable_fuzzy_extraction):
        """Sets the enable_fuzzy_extraction of this GoogleCloudDialogflowCxV3beta1EntityType.

        Enables fuzzy entity extraction during classification.

        :param enable_fuzzy_extraction: The enable_fuzzy_extraction of this GoogleCloudDialogflowCxV3beta1EntityType.
        :type enable_fuzzy_extraction: bool
        """

        self._enable_fuzzy_extraction = enable_fuzzy_extraction

    @property
    def entities(self):
        """Gets the entities of this GoogleCloudDialogflowCxV3beta1EntityType.

        The collection of entity entries associated with the entity type.

        :return: The entities of this GoogleCloudDialogflowCxV3beta1EntityType.
        :rtype: List[GoogleCloudDialogflowCxV3beta1EntityTypeEntity]
        """
        return self._entities

    @entities.setter
    def entities(self, entities):
        """Sets the entities of this GoogleCloudDialogflowCxV3beta1EntityType.

        The collection of entity entries associated with the entity type.

        :param entities: The entities of this GoogleCloudDialogflowCxV3beta1EntityType.
        :type entities: List[GoogleCloudDialogflowCxV3beta1EntityTypeEntity]
        """

        self._entities = entities

    @property
    def excluded_phrases(self):
        """Gets the excluded_phrases of this GoogleCloudDialogflowCxV3beta1EntityType.

        Collection of exceptional words and phrases that shouldn't be matched. For example, if you have a size entity type with entry `giant`(an adjective), you might consider adding `giants`(a noun) as an exclusion. If the kind of entity type is `KIND_MAP`, then the phrases specified by entities and excluded phrases should be mutually exclusive.

        :return: The excluded_phrases of this GoogleCloudDialogflowCxV3beta1EntityType.
        :rtype: List[GoogleCloudDialogflowCxV3beta1EntityTypeExcludedPhrase]
        """
        return self._excluded_phrases

    @excluded_phrases.setter
    def excluded_phrases(self, excluded_phrases):
        """Sets the excluded_phrases of this GoogleCloudDialogflowCxV3beta1EntityType.

        Collection of exceptional words and phrases that shouldn't be matched. For example, if you have a size entity type with entry `giant`(an adjective), you might consider adding `giants`(a noun) as an exclusion. If the kind of entity type is `KIND_MAP`, then the phrases specified by entities and excluded phrases should be mutually exclusive.

        :param excluded_phrases: The excluded_phrases of this GoogleCloudDialogflowCxV3beta1EntityType.
        :type excluded_phrases: List[GoogleCloudDialogflowCxV3beta1EntityTypeExcludedPhrase]
        """

        self._excluded_phrases = excluded_phrases

    @property
    def kind(self):
        """Gets the kind of this GoogleCloudDialogflowCxV3beta1EntityType.

        Required. Indicates the kind of entity type.

        :return: The kind of this GoogleCloudDialogflowCxV3beta1EntityType.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this GoogleCloudDialogflowCxV3beta1EntityType.

        Required. Indicates the kind of entity type.

        :param kind: The kind of this GoogleCloudDialogflowCxV3beta1EntityType.
        :type kind: str
        """
        allowed_values = ["KIND_UNSPECIFIED", "KIND_MAP", "KIND_LIST", "KIND_REGEXP"]  # noqa: E501
        if kind not in allowed_values:
            raise ValueError(
                "Invalid value for `kind` ({0}), must be one of {1}"
                .format(kind, allowed_values)
            )

        self._kind = kind

    @property
    def name(self):
        """Gets the name of this GoogleCloudDialogflowCxV3beta1EntityType.

        The unique identifier of the entity type. Required for EntityTypes.UpdateEntityType. Format: `projects//locations//agents//entityTypes/`.

        :return: The name of this GoogleCloudDialogflowCxV3beta1EntityType.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudDialogflowCxV3beta1EntityType.

        The unique identifier of the entity type. Required for EntityTypes.UpdateEntityType. Format: `projects//locations//agents//entityTypes/`.

        :param name: The name of this GoogleCloudDialogflowCxV3beta1EntityType.
        :type name: str
        """

        self._name = name

    @property
    def redact(self):
        """Gets the redact of this GoogleCloudDialogflowCxV3beta1EntityType.

        Indicates whether parameters of the entity type should be redacted in log. If redaction is enabled, page parameters and intent parameters referring to the entity type will be replaced by parameter name during logging.

        :return: The redact of this GoogleCloudDialogflowCxV3beta1EntityType.
        :rtype: bool
        """
        return self._redact

    @redact.setter
    def redact(self, redact):
        """Sets the redact of this GoogleCloudDialogflowCxV3beta1EntityType.

        Indicates whether parameters of the entity type should be redacted in log. If redaction is enabled, page parameters and intent parameters referring to the entity type will be replaced by parameter name during logging.

        :param redact: The redact of this GoogleCloudDialogflowCxV3beta1EntityType.
        :type redact: bool
        """

        self._redact = redact
