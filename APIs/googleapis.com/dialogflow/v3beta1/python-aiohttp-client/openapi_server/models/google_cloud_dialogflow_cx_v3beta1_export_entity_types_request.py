# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDialogflowCxV3beta1ExportEntityTypesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data_format: str=None, entity_types: List[str]=None, entity_types_content_inline: bool=None, entity_types_uri: str=None, language_code: str=None):
        """GoogleCloudDialogflowCxV3beta1ExportEntityTypesRequest - a model defined in OpenAPI

        :param data_format: The data_format of this GoogleCloudDialogflowCxV3beta1ExportEntityTypesRequest.
        :param entity_types: The entity_types of this GoogleCloudDialogflowCxV3beta1ExportEntityTypesRequest.
        :param entity_types_content_inline: The entity_types_content_inline of this GoogleCloudDialogflowCxV3beta1ExportEntityTypesRequest.
        :param entity_types_uri: The entity_types_uri of this GoogleCloudDialogflowCxV3beta1ExportEntityTypesRequest.
        :param language_code: The language_code of this GoogleCloudDialogflowCxV3beta1ExportEntityTypesRequest.
        """
        self.openapi_types = {
            'data_format': str,
            'entity_types': List[str],
            'entity_types_content_inline': bool,
            'entity_types_uri': str,
            'language_code': str
        }

        self.attribute_map = {
            'data_format': 'dataFormat',
            'entity_types': 'entityTypes',
            'entity_types_content_inline': 'entityTypesContentInline',
            'entity_types_uri': 'entityTypesUri',
            'language_code': 'languageCode'
        }

        self._data_format = data_format
        self._entity_types = entity_types
        self._entity_types_content_inline = entity_types_content_inline
        self._entity_types_uri = entity_types_uri
        self._language_code = language_code

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDialogflowCxV3beta1ExportEntityTypesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDialogflowCxV3beta1ExportEntityTypesRequest of this GoogleCloudDialogflowCxV3beta1ExportEntityTypesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data_format(self):
        """Gets the data_format of this GoogleCloudDialogflowCxV3beta1ExportEntityTypesRequest.

        Optional. The data format of the exported entity types. If not specified, `BLOB` is assumed.

        :return: The data_format of this GoogleCloudDialogflowCxV3beta1ExportEntityTypesRequest.
        :rtype: str
        """
        return self._data_format

    @data_format.setter
    def data_format(self, data_format):
        """Sets the data_format of this GoogleCloudDialogflowCxV3beta1ExportEntityTypesRequest.

        Optional. The data format of the exported entity types. If not specified, `BLOB` is assumed.

        :param data_format: The data_format of this GoogleCloudDialogflowCxV3beta1ExportEntityTypesRequest.
        :type data_format: str
        """
        allowed_values = ["DATA_FORMAT_UNSPECIFIED", "BLOB", "JSON_PACKAGE"]  # noqa: E501
        if data_format not in allowed_values:
            raise ValueError(
                "Invalid value for `data_format` ({0}), must be one of {1}"
                .format(data_format, allowed_values)
            )

        self._data_format = data_format

    @property
    def entity_types(self):
        """Gets the entity_types of this GoogleCloudDialogflowCxV3beta1ExportEntityTypesRequest.

        Required. The name of the entity types to export. Format: `projects//locations//agents//entityTypes/`.

        :return: The entity_types of this GoogleCloudDialogflowCxV3beta1ExportEntityTypesRequest.
        :rtype: List[str]
        """
        return self._entity_types

    @entity_types.setter
    def entity_types(self, entity_types):
        """Sets the entity_types of this GoogleCloudDialogflowCxV3beta1ExportEntityTypesRequest.

        Required. The name of the entity types to export. Format: `projects//locations//agents//entityTypes/`.

        :param entity_types: The entity_types of this GoogleCloudDialogflowCxV3beta1ExportEntityTypesRequest.
        :type entity_types: List[str]
        """

        self._entity_types = entity_types

    @property
    def entity_types_content_inline(self):
        """Gets the entity_types_content_inline of this GoogleCloudDialogflowCxV3beta1ExportEntityTypesRequest.

        Optional. The option to return the serialized entity types inline.

        :return: The entity_types_content_inline of this GoogleCloudDialogflowCxV3beta1ExportEntityTypesRequest.
        :rtype: bool
        """
        return self._entity_types_content_inline

    @entity_types_content_inline.setter
    def entity_types_content_inline(self, entity_types_content_inline):
        """Sets the entity_types_content_inline of this GoogleCloudDialogflowCxV3beta1ExportEntityTypesRequest.

        Optional. The option to return the serialized entity types inline.

        :param entity_types_content_inline: The entity_types_content_inline of this GoogleCloudDialogflowCxV3beta1ExportEntityTypesRequest.
        :type entity_types_content_inline: bool
        """

        self._entity_types_content_inline = entity_types_content_inline

    @property
    def entity_types_uri(self):
        """Gets the entity_types_uri of this GoogleCloudDialogflowCxV3beta1ExportEntityTypesRequest.

        Optional. The [Google Cloud Storage](https://cloud.google.com/storage/docs/) URI to export the entity types to. The format of this URI must be `gs:///`. Dialogflow performs a write operation for the Cloud Storage object on the caller's behalf, so your request authentication must have write permissions for the object. For more information, see [Dialogflow access control](https://cloud.google.com/dialogflow/cx/docs/concept/access-control#storage).

        :return: The entity_types_uri of this GoogleCloudDialogflowCxV3beta1ExportEntityTypesRequest.
        :rtype: str
        """
        return self._entity_types_uri

    @entity_types_uri.setter
    def entity_types_uri(self, entity_types_uri):
        """Sets the entity_types_uri of this GoogleCloudDialogflowCxV3beta1ExportEntityTypesRequest.

        Optional. The [Google Cloud Storage](https://cloud.google.com/storage/docs/) URI to export the entity types to. The format of this URI must be `gs:///`. Dialogflow performs a write operation for the Cloud Storage object on the caller's behalf, so your request authentication must have write permissions for the object. For more information, see [Dialogflow access control](https://cloud.google.com/dialogflow/cx/docs/concept/access-control#storage).

        :param entity_types_uri: The entity_types_uri of this GoogleCloudDialogflowCxV3beta1ExportEntityTypesRequest.
        :type entity_types_uri: str
        """

        self._entity_types_uri = entity_types_uri

    @property
    def language_code(self):
        """Gets the language_code of this GoogleCloudDialogflowCxV3beta1ExportEntityTypesRequest.

        Optional. The language to retrieve the entity type for. The following fields are language dependent: * `EntityType.entities.value` * `EntityType.entities.synonyms` * `EntityType.excluded_phrases.value` If not specified, all language dependent fields will be retrieved. [Many languages](https://cloud.google.com/dialogflow/docs/reference/language) are supported. Note: languages must be enabled in the agent before they can be used.

        :return: The language_code of this GoogleCloudDialogflowCxV3beta1ExportEntityTypesRequest.
        :rtype: str
        """
        return self._language_code

    @language_code.setter
    def language_code(self, language_code):
        """Sets the language_code of this GoogleCloudDialogflowCxV3beta1ExportEntityTypesRequest.

        Optional. The language to retrieve the entity type for. The following fields are language dependent: * `EntityType.entities.value` * `EntityType.entities.synonyms` * `EntityType.excluded_phrases.value` If not specified, all language dependent fields will be retrieved. [Many languages](https://cloud.google.com/dialogflow/docs/reference/language) are supported. Note: languages must be enabled in the agent before they can be used.

        :param language_code: The language_code of this GoogleCloudDialogflowCxV3beta1ExportEntityTypesRequest.
        :type language_code: str
        """

        self._language_code = language_code
