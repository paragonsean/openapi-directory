# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_dialogflow_cx_v3beta1_experiment_definition import GoogleCloudDialogflowCxV3beta1ExperimentDefinition
from openapi_server.models.google_cloud_dialogflow_cx_v3beta1_experiment_result import GoogleCloudDialogflowCxV3beta1ExperimentResult
from openapi_server.models.google_cloud_dialogflow_cx_v3beta1_rollout_config import GoogleCloudDialogflowCxV3beta1RolloutConfig
from openapi_server.models.google_cloud_dialogflow_cx_v3beta1_rollout_state import GoogleCloudDialogflowCxV3beta1RolloutState
from openapi_server.models.google_cloud_dialogflow_cx_v3beta1_variants_history import GoogleCloudDialogflowCxV3beta1VariantsHistory
from openapi_server import util


class GoogleCloudDialogflowCxV3beta1Experiment(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, create_time: str=None, definition: GoogleCloudDialogflowCxV3beta1ExperimentDefinition=None, description: str=None, display_name: str=None, end_time: str=None, experiment_length: str=None, last_update_time: str=None, name: str=None, result: GoogleCloudDialogflowCxV3beta1ExperimentResult=None, rollout_config: GoogleCloudDialogflowCxV3beta1RolloutConfig=None, rollout_failure_reason: str=None, rollout_state: GoogleCloudDialogflowCxV3beta1RolloutState=None, start_time: str=None, state: str=None, variants_history: List[GoogleCloudDialogflowCxV3beta1VariantsHistory]=None):
        """GoogleCloudDialogflowCxV3beta1Experiment - a model defined in OpenAPI

        :param create_time: The create_time of this GoogleCloudDialogflowCxV3beta1Experiment.
        :param definition: The definition of this GoogleCloudDialogflowCxV3beta1Experiment.
        :param description: The description of this GoogleCloudDialogflowCxV3beta1Experiment.
        :param display_name: The display_name of this GoogleCloudDialogflowCxV3beta1Experiment.
        :param end_time: The end_time of this GoogleCloudDialogflowCxV3beta1Experiment.
        :param experiment_length: The experiment_length of this GoogleCloudDialogflowCxV3beta1Experiment.
        :param last_update_time: The last_update_time of this GoogleCloudDialogflowCxV3beta1Experiment.
        :param name: The name of this GoogleCloudDialogflowCxV3beta1Experiment.
        :param result: The result of this GoogleCloudDialogflowCxV3beta1Experiment.
        :param rollout_config: The rollout_config of this GoogleCloudDialogflowCxV3beta1Experiment.
        :param rollout_failure_reason: The rollout_failure_reason of this GoogleCloudDialogflowCxV3beta1Experiment.
        :param rollout_state: The rollout_state of this GoogleCloudDialogflowCxV3beta1Experiment.
        :param start_time: The start_time of this GoogleCloudDialogflowCxV3beta1Experiment.
        :param state: The state of this GoogleCloudDialogflowCxV3beta1Experiment.
        :param variants_history: The variants_history of this GoogleCloudDialogflowCxV3beta1Experiment.
        """
        self.openapi_types = {
            'create_time': str,
            'definition': GoogleCloudDialogflowCxV3beta1ExperimentDefinition,
            'description': str,
            'display_name': str,
            'end_time': str,
            'experiment_length': str,
            'last_update_time': str,
            'name': str,
            'result': GoogleCloudDialogflowCxV3beta1ExperimentResult,
            'rollout_config': GoogleCloudDialogflowCxV3beta1RolloutConfig,
            'rollout_failure_reason': str,
            'rollout_state': GoogleCloudDialogflowCxV3beta1RolloutState,
            'start_time': str,
            'state': str,
            'variants_history': List[GoogleCloudDialogflowCxV3beta1VariantsHistory]
        }

        self.attribute_map = {
            'create_time': 'createTime',
            'definition': 'definition',
            'description': 'description',
            'display_name': 'displayName',
            'end_time': 'endTime',
            'experiment_length': 'experimentLength',
            'last_update_time': 'lastUpdateTime',
            'name': 'name',
            'result': 'result',
            'rollout_config': 'rolloutConfig',
            'rollout_failure_reason': 'rolloutFailureReason',
            'rollout_state': 'rolloutState',
            'start_time': 'startTime',
            'state': 'state',
            'variants_history': 'variantsHistory'
        }

        self._create_time = create_time
        self._definition = definition
        self._description = description
        self._display_name = display_name
        self._end_time = end_time
        self._experiment_length = experiment_length
        self._last_update_time = last_update_time
        self._name = name
        self._result = result
        self._rollout_config = rollout_config
        self._rollout_failure_reason = rollout_failure_reason
        self._rollout_state = rollout_state
        self._start_time = start_time
        self._state = state
        self._variants_history = variants_history

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDialogflowCxV3beta1Experiment':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDialogflowCxV3beta1Experiment of this GoogleCloudDialogflowCxV3beta1Experiment.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def create_time(self):
        """Gets the create_time of this GoogleCloudDialogflowCxV3beta1Experiment.

        Creation time of this experiment.

        :return: The create_time of this GoogleCloudDialogflowCxV3beta1Experiment.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this GoogleCloudDialogflowCxV3beta1Experiment.

        Creation time of this experiment.

        :param create_time: The create_time of this GoogleCloudDialogflowCxV3beta1Experiment.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def definition(self):
        """Gets the definition of this GoogleCloudDialogflowCxV3beta1Experiment.


        :return: The definition of this GoogleCloudDialogflowCxV3beta1Experiment.
        :rtype: GoogleCloudDialogflowCxV3beta1ExperimentDefinition
        """
        return self._definition

    @definition.setter
    def definition(self, definition):
        """Sets the definition of this GoogleCloudDialogflowCxV3beta1Experiment.


        :param definition: The definition of this GoogleCloudDialogflowCxV3beta1Experiment.
        :type definition: GoogleCloudDialogflowCxV3beta1ExperimentDefinition
        """

        self._definition = definition

    @property
    def description(self):
        """Gets the description of this GoogleCloudDialogflowCxV3beta1Experiment.

        The human-readable description of the experiment.

        :return: The description of this GoogleCloudDialogflowCxV3beta1Experiment.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GoogleCloudDialogflowCxV3beta1Experiment.

        The human-readable description of the experiment.

        :param description: The description of this GoogleCloudDialogflowCxV3beta1Experiment.
        :type description: str
        """

        self._description = description

    @property
    def display_name(self):
        """Gets the display_name of this GoogleCloudDialogflowCxV3beta1Experiment.

        Required. The human-readable name of the experiment (unique in an environment). Limit of 64 characters.

        :return: The display_name of this GoogleCloudDialogflowCxV3beta1Experiment.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this GoogleCloudDialogflowCxV3beta1Experiment.

        Required. The human-readable name of the experiment (unique in an environment). Limit of 64 characters.

        :param display_name: The display_name of this GoogleCloudDialogflowCxV3beta1Experiment.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def end_time(self):
        """Gets the end_time of this GoogleCloudDialogflowCxV3beta1Experiment.

        End time of this experiment.

        :return: The end_time of this GoogleCloudDialogflowCxV3beta1Experiment.
        :rtype: str
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this GoogleCloudDialogflowCxV3beta1Experiment.

        End time of this experiment.

        :param end_time: The end_time of this GoogleCloudDialogflowCxV3beta1Experiment.
        :type end_time: str
        """

        self._end_time = end_time

    @property
    def experiment_length(self):
        """Gets the experiment_length of this GoogleCloudDialogflowCxV3beta1Experiment.

        Maximum number of days to run the experiment. If auto-rollout is not enabled, default value and maximum will be 30 days. If auto-rollout is enabled, default value and maximum will be 6 days.

        :return: The experiment_length of this GoogleCloudDialogflowCxV3beta1Experiment.
        :rtype: str
        """
        return self._experiment_length

    @experiment_length.setter
    def experiment_length(self, experiment_length):
        """Sets the experiment_length of this GoogleCloudDialogflowCxV3beta1Experiment.

        Maximum number of days to run the experiment. If auto-rollout is not enabled, default value and maximum will be 30 days. If auto-rollout is enabled, default value and maximum will be 6 days.

        :param experiment_length: The experiment_length of this GoogleCloudDialogflowCxV3beta1Experiment.
        :type experiment_length: str
        """

        self._experiment_length = experiment_length

    @property
    def last_update_time(self):
        """Gets the last_update_time of this GoogleCloudDialogflowCxV3beta1Experiment.

        Last update time of this experiment.

        :return: The last_update_time of this GoogleCloudDialogflowCxV3beta1Experiment.
        :rtype: str
        """
        return self._last_update_time

    @last_update_time.setter
    def last_update_time(self, last_update_time):
        """Sets the last_update_time of this GoogleCloudDialogflowCxV3beta1Experiment.

        Last update time of this experiment.

        :param last_update_time: The last_update_time of this GoogleCloudDialogflowCxV3beta1Experiment.
        :type last_update_time: str
        """

        self._last_update_time = last_update_time

    @property
    def name(self):
        """Gets the name of this GoogleCloudDialogflowCxV3beta1Experiment.

        The name of the experiment. Format: projects//locations//agents//environments//experiments/..

        :return: The name of this GoogleCloudDialogflowCxV3beta1Experiment.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudDialogflowCxV3beta1Experiment.

        The name of the experiment. Format: projects//locations//agents//environments//experiments/..

        :param name: The name of this GoogleCloudDialogflowCxV3beta1Experiment.
        :type name: str
        """

        self._name = name

    @property
    def result(self):
        """Gets the result of this GoogleCloudDialogflowCxV3beta1Experiment.


        :return: The result of this GoogleCloudDialogflowCxV3beta1Experiment.
        :rtype: GoogleCloudDialogflowCxV3beta1ExperimentResult
        """
        return self._result

    @result.setter
    def result(self, result):
        """Sets the result of this GoogleCloudDialogflowCxV3beta1Experiment.


        :param result: The result of this GoogleCloudDialogflowCxV3beta1Experiment.
        :type result: GoogleCloudDialogflowCxV3beta1ExperimentResult
        """

        self._result = result

    @property
    def rollout_config(self):
        """Gets the rollout_config of this GoogleCloudDialogflowCxV3beta1Experiment.


        :return: The rollout_config of this GoogleCloudDialogflowCxV3beta1Experiment.
        :rtype: GoogleCloudDialogflowCxV3beta1RolloutConfig
        """
        return self._rollout_config

    @rollout_config.setter
    def rollout_config(self, rollout_config):
        """Sets the rollout_config of this GoogleCloudDialogflowCxV3beta1Experiment.


        :param rollout_config: The rollout_config of this GoogleCloudDialogflowCxV3beta1Experiment.
        :type rollout_config: GoogleCloudDialogflowCxV3beta1RolloutConfig
        """

        self._rollout_config = rollout_config

    @property
    def rollout_failure_reason(self):
        """Gets the rollout_failure_reason of this GoogleCloudDialogflowCxV3beta1Experiment.

        The reason why rollout has failed. Should only be set when state is ROLLOUT_FAILED.

        :return: The rollout_failure_reason of this GoogleCloudDialogflowCxV3beta1Experiment.
        :rtype: str
        """
        return self._rollout_failure_reason

    @rollout_failure_reason.setter
    def rollout_failure_reason(self, rollout_failure_reason):
        """Sets the rollout_failure_reason of this GoogleCloudDialogflowCxV3beta1Experiment.

        The reason why rollout has failed. Should only be set when state is ROLLOUT_FAILED.

        :param rollout_failure_reason: The rollout_failure_reason of this GoogleCloudDialogflowCxV3beta1Experiment.
        :type rollout_failure_reason: str
        """

        self._rollout_failure_reason = rollout_failure_reason

    @property
    def rollout_state(self):
        """Gets the rollout_state of this GoogleCloudDialogflowCxV3beta1Experiment.


        :return: The rollout_state of this GoogleCloudDialogflowCxV3beta1Experiment.
        :rtype: GoogleCloudDialogflowCxV3beta1RolloutState
        """
        return self._rollout_state

    @rollout_state.setter
    def rollout_state(self, rollout_state):
        """Sets the rollout_state of this GoogleCloudDialogflowCxV3beta1Experiment.


        :param rollout_state: The rollout_state of this GoogleCloudDialogflowCxV3beta1Experiment.
        :type rollout_state: GoogleCloudDialogflowCxV3beta1RolloutState
        """

        self._rollout_state = rollout_state

    @property
    def start_time(self):
        """Gets the start_time of this GoogleCloudDialogflowCxV3beta1Experiment.

        Start time of this experiment.

        :return: The start_time of this GoogleCloudDialogflowCxV3beta1Experiment.
        :rtype: str
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this GoogleCloudDialogflowCxV3beta1Experiment.

        Start time of this experiment.

        :param start_time: The start_time of this GoogleCloudDialogflowCxV3beta1Experiment.
        :type start_time: str
        """

        self._start_time = start_time

    @property
    def state(self):
        """Gets the state of this GoogleCloudDialogflowCxV3beta1Experiment.

        The current state of the experiment. Transition triggered by Experiments.StartExperiment: DRAFT->RUNNING. Transition triggered by Experiments.CancelExperiment: DRAFT->DONE or RUNNING->DONE.

        :return: The state of this GoogleCloudDialogflowCxV3beta1Experiment.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this GoogleCloudDialogflowCxV3beta1Experiment.

        The current state of the experiment. Transition triggered by Experiments.StartExperiment: DRAFT->RUNNING. Transition triggered by Experiments.CancelExperiment: DRAFT->DONE or RUNNING->DONE.

        :param state: The state of this GoogleCloudDialogflowCxV3beta1Experiment.
        :type state: str
        """
        allowed_values = ["STATE_UNSPECIFIED", "DRAFT", "RUNNING", "DONE", "ROLLOUT_FAILED"]  # noqa: E501
        if state not in allowed_values:
            raise ValueError(
                "Invalid value for `state` ({0}), must be one of {1}"
                .format(state, allowed_values)
            )

        self._state = state

    @property
    def variants_history(self):
        """Gets the variants_history of this GoogleCloudDialogflowCxV3beta1Experiment.

        The history of updates to the experiment variants.

        :return: The variants_history of this GoogleCloudDialogflowCxV3beta1Experiment.
        :rtype: List[GoogleCloudDialogflowCxV3beta1VariantsHistory]
        """
        return self._variants_history

    @variants_history.setter
    def variants_history(self, variants_history):
        """Sets the variants_history of this GoogleCloudDialogflowCxV3beta1Experiment.

        The history of updates to the experiment variants.

        :param variants_history: The variants_history of this GoogleCloudDialogflowCxV3beta1Experiment.
        :type variants_history: List[GoogleCloudDialogflowCxV3beta1VariantsHistory]
        """

        self._variants_history = variants_history
