# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_dialogflow_cx_v3beta1_inline_source import GoogleCloudDialogflowCxV3beta1InlineSource
from openapi_server import util


class GoogleCloudDialogflowCxV3beta1ImportEntityTypesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, entity_types_content: GoogleCloudDialogflowCxV3beta1InlineSource=None, entity_types_uri: str=None, merge_option: str=None, target_entity_type: str=None):
        """GoogleCloudDialogflowCxV3beta1ImportEntityTypesRequest - a model defined in OpenAPI

        :param entity_types_content: The entity_types_content of this GoogleCloudDialogflowCxV3beta1ImportEntityTypesRequest.
        :param entity_types_uri: The entity_types_uri of this GoogleCloudDialogflowCxV3beta1ImportEntityTypesRequest.
        :param merge_option: The merge_option of this GoogleCloudDialogflowCxV3beta1ImportEntityTypesRequest.
        :param target_entity_type: The target_entity_type of this GoogleCloudDialogflowCxV3beta1ImportEntityTypesRequest.
        """
        self.openapi_types = {
            'entity_types_content': GoogleCloudDialogflowCxV3beta1InlineSource,
            'entity_types_uri': str,
            'merge_option': str,
            'target_entity_type': str
        }

        self.attribute_map = {
            'entity_types_content': 'entityTypesContent',
            'entity_types_uri': 'entityTypesUri',
            'merge_option': 'mergeOption',
            'target_entity_type': 'targetEntityType'
        }

        self._entity_types_content = entity_types_content
        self._entity_types_uri = entity_types_uri
        self._merge_option = merge_option
        self._target_entity_type = target_entity_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDialogflowCxV3beta1ImportEntityTypesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDialogflowCxV3beta1ImportEntityTypesRequest of this GoogleCloudDialogflowCxV3beta1ImportEntityTypesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def entity_types_content(self):
        """Gets the entity_types_content of this GoogleCloudDialogflowCxV3beta1ImportEntityTypesRequest.


        :return: The entity_types_content of this GoogleCloudDialogflowCxV3beta1ImportEntityTypesRequest.
        :rtype: GoogleCloudDialogflowCxV3beta1InlineSource
        """
        return self._entity_types_content

    @entity_types_content.setter
    def entity_types_content(self, entity_types_content):
        """Sets the entity_types_content of this GoogleCloudDialogflowCxV3beta1ImportEntityTypesRequest.


        :param entity_types_content: The entity_types_content of this GoogleCloudDialogflowCxV3beta1ImportEntityTypesRequest.
        :type entity_types_content: GoogleCloudDialogflowCxV3beta1InlineSource
        """

        self._entity_types_content = entity_types_content

    @property
    def entity_types_uri(self):
        """Gets the entity_types_uri of this GoogleCloudDialogflowCxV3beta1ImportEntityTypesRequest.

        The [Google Cloud Storage](https://cloud.google.com/storage/docs/) URI to import entity types from. The format of this URI must be `gs:///`. Dialogflow performs a read operation for the Cloud Storage object on the caller's behalf, so your request authentication must have read permissions for the object. For more information, see [Dialogflow access control](https://cloud.google.com/dialogflow/cx/docs/concept/access-control#storage).

        :return: The entity_types_uri of this GoogleCloudDialogflowCxV3beta1ImportEntityTypesRequest.
        :rtype: str
        """
        return self._entity_types_uri

    @entity_types_uri.setter
    def entity_types_uri(self, entity_types_uri):
        """Sets the entity_types_uri of this GoogleCloudDialogflowCxV3beta1ImportEntityTypesRequest.

        The [Google Cloud Storage](https://cloud.google.com/storage/docs/) URI to import entity types from. The format of this URI must be `gs:///`. Dialogflow performs a read operation for the Cloud Storage object on the caller's behalf, so your request authentication must have read permissions for the object. For more information, see [Dialogflow access control](https://cloud.google.com/dialogflow/cx/docs/concept/access-control#storage).

        :param entity_types_uri: The entity_types_uri of this GoogleCloudDialogflowCxV3beta1ImportEntityTypesRequest.
        :type entity_types_uri: str
        """

        self._entity_types_uri = entity_types_uri

    @property
    def merge_option(self):
        """Gets the merge_option of this GoogleCloudDialogflowCxV3beta1ImportEntityTypesRequest.

        Required. Merge option for importing entity types.

        :return: The merge_option of this GoogleCloudDialogflowCxV3beta1ImportEntityTypesRequest.
        :rtype: str
        """
        return self._merge_option

    @merge_option.setter
    def merge_option(self, merge_option):
        """Sets the merge_option of this GoogleCloudDialogflowCxV3beta1ImportEntityTypesRequest.

        Required. Merge option for importing entity types.

        :param merge_option: The merge_option of this GoogleCloudDialogflowCxV3beta1ImportEntityTypesRequest.
        :type merge_option: str
        """
        allowed_values = ["MERGE_OPTION_UNSPECIFIED", "REPLACE", "MERGE", "RENAME", "REPORT_CONFLICT", "KEEP"]  # noqa: E501
        if merge_option not in allowed_values:
            raise ValueError(
                "Invalid value for `merge_option` ({0}), must be one of {1}"
                .format(merge_option, allowed_values)
            )

        self._merge_option = merge_option

    @property
    def target_entity_type(self):
        """Gets the target_entity_type of this GoogleCloudDialogflowCxV3beta1ImportEntityTypesRequest.

        Optional. The target entity type to import into. Format: `projects//locations//agents//entity_types/`. If set, there should be only one entity type included in entity_types, of which the type should match the type of the target entity type. All entities in the imported entity type will be added to the target entity type.

        :return: The target_entity_type of this GoogleCloudDialogflowCxV3beta1ImportEntityTypesRequest.
        :rtype: str
        """
        return self._target_entity_type

    @target_entity_type.setter
    def target_entity_type(self, target_entity_type):
        """Sets the target_entity_type of this GoogleCloudDialogflowCxV3beta1ImportEntityTypesRequest.

        Optional. The target entity type to import into. Format: `projects//locations//agents//entity_types/`. If set, there should be only one entity type included in entity_types, of which the type should match the type of the target entity type. All entities in the imported entity type will be added to the target entity type.

        :param target_entity_type: The target_entity_type of this GoogleCloudDialogflowCxV3beta1ImportEntityTypesRequest.
        :type target_entity_type: str
        """

        self._target_entity_type = target_entity_type
