# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_dialogflow_cx_v3beta1_fulfillment_conditional_cases_case import GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCase
from openapi_server import util


class GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCases(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cases: List[GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCase]=None):
        """GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCases - a model defined in OpenAPI

        :param cases: The cases of this GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCases.
        """
        self.openapi_types = {
            'cases': List[GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCase]
        }

        self.attribute_map = {
            'cases': 'cases'
        }

        self._cases = cases

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCases':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCases of this GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCases.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cases(self):
        """Gets the cases of this GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCases.

        A list of cascading if-else conditions.

        :return: The cases of this GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCases.
        :rtype: List[GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCase]
        """
        return self._cases

    @cases.setter
    def cases(self, cases):
        """Sets the cases of this GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCases.

        A list of cascading if-else conditions.

        :param cases: The cases of this GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCases.
        :type cases: List[GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCase]
        """

        self._cases = cases
