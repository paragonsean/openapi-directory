# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_dialogflow_cx_v3beta1_input_audio_config import GoogleCloudDialogflowCxV3beta1InputAudioConfig
from openapi_server import util


class GoogleCloudDialogflowCxV3beta1AudioInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, audio: str=None, config: GoogleCloudDialogflowCxV3beta1InputAudioConfig=None):
        """GoogleCloudDialogflowCxV3beta1AudioInput - a model defined in OpenAPI

        :param audio: The audio of this GoogleCloudDialogflowCxV3beta1AudioInput.
        :param config: The config of this GoogleCloudDialogflowCxV3beta1AudioInput.
        """
        self.openapi_types = {
            'audio': str,
            'config': GoogleCloudDialogflowCxV3beta1InputAudioConfig
        }

        self.attribute_map = {
            'audio': 'audio',
            'config': 'config'
        }

        self._audio = audio
        self._config = config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDialogflowCxV3beta1AudioInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDialogflowCxV3beta1AudioInput of this GoogleCloudDialogflowCxV3beta1AudioInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def audio(self):
        """Gets the audio of this GoogleCloudDialogflowCxV3beta1AudioInput.

        The natural language speech audio to be processed. A single request can contain up to 2 minutes of speech audio data. The transcribed text cannot contain more than 256 bytes. For non-streaming audio detect intent, both `config` and `audio` must be provided. For streaming audio detect intent, `config` must be provided in the first request and `audio` must be provided in all following requests.

        :return: The audio of this GoogleCloudDialogflowCxV3beta1AudioInput.
        :rtype: str
        """
        return self._audio

    @audio.setter
    def audio(self, audio):
        """Sets the audio of this GoogleCloudDialogflowCxV3beta1AudioInput.

        The natural language speech audio to be processed. A single request can contain up to 2 minutes of speech audio data. The transcribed text cannot contain more than 256 bytes. For non-streaming audio detect intent, both `config` and `audio` must be provided. For streaming audio detect intent, `config` must be provided in the first request and `audio` must be provided in all following requests.

        :param audio: The audio of this GoogleCloudDialogflowCxV3beta1AudioInput.
        :type audio: str
        """

        self._audio = audio

    @property
    def config(self):
        """Gets the config of this GoogleCloudDialogflowCxV3beta1AudioInput.


        :return: The config of this GoogleCloudDialogflowCxV3beta1AudioInput.
        :rtype: GoogleCloudDialogflowCxV3beta1InputAudioConfig
        """
        return self._config

    @config.setter
    def config(self, config):
        """Sets the config of this GoogleCloudDialogflowCxV3beta1AudioInput.


        :param config: The config of this GoogleCloudDialogflowCxV3beta1AudioInput.
        :type config: GoogleCloudDialogflowCxV3beta1InputAudioConfig
        """

        self._config = config
