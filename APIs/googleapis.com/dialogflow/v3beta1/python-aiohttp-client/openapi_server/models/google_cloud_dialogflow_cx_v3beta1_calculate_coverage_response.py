# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_dialogflow_cx_v3beta1_intent_coverage import GoogleCloudDialogflowCxV3beta1IntentCoverage
from openapi_server.models.google_cloud_dialogflow_cx_v3beta1_transition_coverage import GoogleCloudDialogflowCxV3beta1TransitionCoverage
from openapi_server.models.google_cloud_dialogflow_cx_v3beta1_transition_route_group_coverage import GoogleCloudDialogflowCxV3beta1TransitionRouteGroupCoverage
from openapi_server import util


class GoogleCloudDialogflowCxV3beta1CalculateCoverageResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, agent: str=None, intent_coverage: GoogleCloudDialogflowCxV3beta1IntentCoverage=None, route_group_coverage: GoogleCloudDialogflowCxV3beta1TransitionRouteGroupCoverage=None, transition_coverage: GoogleCloudDialogflowCxV3beta1TransitionCoverage=None):
        """GoogleCloudDialogflowCxV3beta1CalculateCoverageResponse - a model defined in OpenAPI

        :param agent: The agent of this GoogleCloudDialogflowCxV3beta1CalculateCoverageResponse.
        :param intent_coverage: The intent_coverage of this GoogleCloudDialogflowCxV3beta1CalculateCoverageResponse.
        :param route_group_coverage: The route_group_coverage of this GoogleCloudDialogflowCxV3beta1CalculateCoverageResponse.
        :param transition_coverage: The transition_coverage of this GoogleCloudDialogflowCxV3beta1CalculateCoverageResponse.
        """
        self.openapi_types = {
            'agent': str,
            'intent_coverage': GoogleCloudDialogflowCxV3beta1IntentCoverage,
            'route_group_coverage': GoogleCloudDialogflowCxV3beta1TransitionRouteGroupCoverage,
            'transition_coverage': GoogleCloudDialogflowCxV3beta1TransitionCoverage
        }

        self.attribute_map = {
            'agent': 'agent',
            'intent_coverage': 'intentCoverage',
            'route_group_coverage': 'routeGroupCoverage',
            'transition_coverage': 'transitionCoverage'
        }

        self._agent = agent
        self._intent_coverage = intent_coverage
        self._route_group_coverage = route_group_coverage
        self._transition_coverage = transition_coverage

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDialogflowCxV3beta1CalculateCoverageResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDialogflowCxV3beta1CalculateCoverageResponse of this GoogleCloudDialogflowCxV3beta1CalculateCoverageResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def agent(self):
        """Gets the agent of this GoogleCloudDialogflowCxV3beta1CalculateCoverageResponse.

        The agent to calculate coverage for. Format: `projects//locations//agents/`.

        :return: The agent of this GoogleCloudDialogflowCxV3beta1CalculateCoverageResponse.
        :rtype: str
        """
        return self._agent

    @agent.setter
    def agent(self, agent):
        """Sets the agent of this GoogleCloudDialogflowCxV3beta1CalculateCoverageResponse.

        The agent to calculate coverage for. Format: `projects//locations//agents/`.

        :param agent: The agent of this GoogleCloudDialogflowCxV3beta1CalculateCoverageResponse.
        :type agent: str
        """

        self._agent = agent

    @property
    def intent_coverage(self):
        """Gets the intent_coverage of this GoogleCloudDialogflowCxV3beta1CalculateCoverageResponse.


        :return: The intent_coverage of this GoogleCloudDialogflowCxV3beta1CalculateCoverageResponse.
        :rtype: GoogleCloudDialogflowCxV3beta1IntentCoverage
        """
        return self._intent_coverage

    @intent_coverage.setter
    def intent_coverage(self, intent_coverage):
        """Sets the intent_coverage of this GoogleCloudDialogflowCxV3beta1CalculateCoverageResponse.


        :param intent_coverage: The intent_coverage of this GoogleCloudDialogflowCxV3beta1CalculateCoverageResponse.
        :type intent_coverage: GoogleCloudDialogflowCxV3beta1IntentCoverage
        """

        self._intent_coverage = intent_coverage

    @property
    def route_group_coverage(self):
        """Gets the route_group_coverage of this GoogleCloudDialogflowCxV3beta1CalculateCoverageResponse.


        :return: The route_group_coverage of this GoogleCloudDialogflowCxV3beta1CalculateCoverageResponse.
        :rtype: GoogleCloudDialogflowCxV3beta1TransitionRouteGroupCoverage
        """
        return self._route_group_coverage

    @route_group_coverage.setter
    def route_group_coverage(self, route_group_coverage):
        """Sets the route_group_coverage of this GoogleCloudDialogflowCxV3beta1CalculateCoverageResponse.


        :param route_group_coverage: The route_group_coverage of this GoogleCloudDialogflowCxV3beta1CalculateCoverageResponse.
        :type route_group_coverage: GoogleCloudDialogflowCxV3beta1TransitionRouteGroupCoverage
        """

        self._route_group_coverage = route_group_coverage

    @property
    def transition_coverage(self):
        """Gets the transition_coverage of this GoogleCloudDialogflowCxV3beta1CalculateCoverageResponse.


        :return: The transition_coverage of this GoogleCloudDialogflowCxV3beta1CalculateCoverageResponse.
        :rtype: GoogleCloudDialogflowCxV3beta1TransitionCoverage
        """
        return self._transition_coverage

    @transition_coverage.setter
    def transition_coverage(self, transition_coverage):
        """Sets the transition_coverage of this GoogleCloudDialogflowCxV3beta1CalculateCoverageResponse.


        :param transition_coverage: The transition_coverage of this GoogleCloudDialogflowCxV3beta1CalculateCoverageResponse.
        :type transition_coverage: GoogleCloudDialogflowCxV3beta1TransitionCoverage
        """

        self._transition_coverage = transition_coverage
