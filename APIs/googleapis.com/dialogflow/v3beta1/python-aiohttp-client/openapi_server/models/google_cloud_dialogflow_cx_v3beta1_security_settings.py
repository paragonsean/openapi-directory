# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_dialogflow_cx_v3beta1_security_settings_audio_export_settings import GoogleCloudDialogflowCxV3beta1SecuritySettingsAudioExportSettings
from openapi_server.models.google_cloud_dialogflow_cx_v3beta1_security_settings_insights_export_settings import GoogleCloudDialogflowCxV3beta1SecuritySettingsInsightsExportSettings
from openapi_server import util


class GoogleCloudDialogflowCxV3beta1SecuritySettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, audio_export_settings: GoogleCloudDialogflowCxV3beta1SecuritySettingsAudioExportSettings=None, deidentify_template: str=None, display_name: str=None, insights_export_settings: GoogleCloudDialogflowCxV3beta1SecuritySettingsInsightsExportSettings=None, inspect_template: str=None, name: str=None, purge_data_types: List[str]=None, redaction_scope: str=None, redaction_strategy: str=None, retention_strategy: str=None, retention_window_days: int=None):
        """GoogleCloudDialogflowCxV3beta1SecuritySettings - a model defined in OpenAPI

        :param audio_export_settings: The audio_export_settings of this GoogleCloudDialogflowCxV3beta1SecuritySettings.
        :param deidentify_template: The deidentify_template of this GoogleCloudDialogflowCxV3beta1SecuritySettings.
        :param display_name: The display_name of this GoogleCloudDialogflowCxV3beta1SecuritySettings.
        :param insights_export_settings: The insights_export_settings of this GoogleCloudDialogflowCxV3beta1SecuritySettings.
        :param inspect_template: The inspect_template of this GoogleCloudDialogflowCxV3beta1SecuritySettings.
        :param name: The name of this GoogleCloudDialogflowCxV3beta1SecuritySettings.
        :param purge_data_types: The purge_data_types of this GoogleCloudDialogflowCxV3beta1SecuritySettings.
        :param redaction_scope: The redaction_scope of this GoogleCloudDialogflowCxV3beta1SecuritySettings.
        :param redaction_strategy: The redaction_strategy of this GoogleCloudDialogflowCxV3beta1SecuritySettings.
        :param retention_strategy: The retention_strategy of this GoogleCloudDialogflowCxV3beta1SecuritySettings.
        :param retention_window_days: The retention_window_days of this GoogleCloudDialogflowCxV3beta1SecuritySettings.
        """
        self.openapi_types = {
            'audio_export_settings': GoogleCloudDialogflowCxV3beta1SecuritySettingsAudioExportSettings,
            'deidentify_template': str,
            'display_name': str,
            'insights_export_settings': GoogleCloudDialogflowCxV3beta1SecuritySettingsInsightsExportSettings,
            'inspect_template': str,
            'name': str,
            'purge_data_types': List[str],
            'redaction_scope': str,
            'redaction_strategy': str,
            'retention_strategy': str,
            'retention_window_days': int
        }

        self.attribute_map = {
            'audio_export_settings': 'audioExportSettings',
            'deidentify_template': 'deidentifyTemplate',
            'display_name': 'displayName',
            'insights_export_settings': 'insightsExportSettings',
            'inspect_template': 'inspectTemplate',
            'name': 'name',
            'purge_data_types': 'purgeDataTypes',
            'redaction_scope': 'redactionScope',
            'redaction_strategy': 'redactionStrategy',
            'retention_strategy': 'retentionStrategy',
            'retention_window_days': 'retentionWindowDays'
        }

        self._audio_export_settings = audio_export_settings
        self._deidentify_template = deidentify_template
        self._display_name = display_name
        self._insights_export_settings = insights_export_settings
        self._inspect_template = inspect_template
        self._name = name
        self._purge_data_types = purge_data_types
        self._redaction_scope = redaction_scope
        self._redaction_strategy = redaction_strategy
        self._retention_strategy = retention_strategy
        self._retention_window_days = retention_window_days

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDialogflowCxV3beta1SecuritySettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDialogflowCxV3beta1SecuritySettings of this GoogleCloudDialogflowCxV3beta1SecuritySettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def audio_export_settings(self):
        """Gets the audio_export_settings of this GoogleCloudDialogflowCxV3beta1SecuritySettings.


        :return: The audio_export_settings of this GoogleCloudDialogflowCxV3beta1SecuritySettings.
        :rtype: GoogleCloudDialogflowCxV3beta1SecuritySettingsAudioExportSettings
        """
        return self._audio_export_settings

    @audio_export_settings.setter
    def audio_export_settings(self, audio_export_settings):
        """Sets the audio_export_settings of this GoogleCloudDialogflowCxV3beta1SecuritySettings.


        :param audio_export_settings: The audio_export_settings of this GoogleCloudDialogflowCxV3beta1SecuritySettings.
        :type audio_export_settings: GoogleCloudDialogflowCxV3beta1SecuritySettingsAudioExportSettings
        """

        self._audio_export_settings = audio_export_settings

    @property
    def deidentify_template(self):
        """Gets the deidentify_template of this GoogleCloudDialogflowCxV3beta1SecuritySettings.

        [DLP](https://cloud.google.com/dlp/docs) deidentify template name. Use this template to define de-identification configuration for the content. The `DLP De-identify Templates Reader` role is needed on the Dialogflow service identity service account (has the form `service-PROJECT_NUMBER@gcp-sa-dialogflow.iam.gserviceaccount.com`) for your agent's project. If empty, Dialogflow replaces sensitive info with `[redacted]` text. The template name will have one of the following formats: `projects//locations//deidentifyTemplates/` OR `organizations//locations//deidentifyTemplates/` Note: `deidentify_template` must be located in the same region as the `SecuritySettings`.

        :return: The deidentify_template of this GoogleCloudDialogflowCxV3beta1SecuritySettings.
        :rtype: str
        """
        return self._deidentify_template

    @deidentify_template.setter
    def deidentify_template(self, deidentify_template):
        """Sets the deidentify_template of this GoogleCloudDialogflowCxV3beta1SecuritySettings.

        [DLP](https://cloud.google.com/dlp/docs) deidentify template name. Use this template to define de-identification configuration for the content. The `DLP De-identify Templates Reader` role is needed on the Dialogflow service identity service account (has the form `service-PROJECT_NUMBER@gcp-sa-dialogflow.iam.gserviceaccount.com`) for your agent's project. If empty, Dialogflow replaces sensitive info with `[redacted]` text. The template name will have one of the following formats: `projects//locations//deidentifyTemplates/` OR `organizations//locations//deidentifyTemplates/` Note: `deidentify_template` must be located in the same region as the `SecuritySettings`.

        :param deidentify_template: The deidentify_template of this GoogleCloudDialogflowCxV3beta1SecuritySettings.
        :type deidentify_template: str
        """

        self._deidentify_template = deidentify_template

    @property
    def display_name(self):
        """Gets the display_name of this GoogleCloudDialogflowCxV3beta1SecuritySettings.

        Required. The human-readable name of the security settings, unique within the location.

        :return: The display_name of this GoogleCloudDialogflowCxV3beta1SecuritySettings.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this GoogleCloudDialogflowCxV3beta1SecuritySettings.

        Required. The human-readable name of the security settings, unique within the location.

        :param display_name: The display_name of this GoogleCloudDialogflowCxV3beta1SecuritySettings.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def insights_export_settings(self):
        """Gets the insights_export_settings of this GoogleCloudDialogflowCxV3beta1SecuritySettings.


        :return: The insights_export_settings of this GoogleCloudDialogflowCxV3beta1SecuritySettings.
        :rtype: GoogleCloudDialogflowCxV3beta1SecuritySettingsInsightsExportSettings
        """
        return self._insights_export_settings

    @insights_export_settings.setter
    def insights_export_settings(self, insights_export_settings):
        """Sets the insights_export_settings of this GoogleCloudDialogflowCxV3beta1SecuritySettings.


        :param insights_export_settings: The insights_export_settings of this GoogleCloudDialogflowCxV3beta1SecuritySettings.
        :type insights_export_settings: GoogleCloudDialogflowCxV3beta1SecuritySettingsInsightsExportSettings
        """

        self._insights_export_settings = insights_export_settings

    @property
    def inspect_template(self):
        """Gets the inspect_template of this GoogleCloudDialogflowCxV3beta1SecuritySettings.

        [DLP](https://cloud.google.com/dlp/docs) inspect template name. Use this template to define inspect base settings. The `DLP Inspect Templates Reader` role is needed on the Dialogflow service identity service account (has the form `service-PROJECT_NUMBER@gcp-sa-dialogflow.iam.gserviceaccount.com`) for your agent's project. If empty, we use the default DLP inspect config. The template name will have one of the following formats: `projects//locations//inspectTemplates/` OR `organizations//locations//inspectTemplates/` Note: `inspect_template` must be located in the same region as the `SecuritySettings`.

        :return: The inspect_template of this GoogleCloudDialogflowCxV3beta1SecuritySettings.
        :rtype: str
        """
        return self._inspect_template

    @inspect_template.setter
    def inspect_template(self, inspect_template):
        """Sets the inspect_template of this GoogleCloudDialogflowCxV3beta1SecuritySettings.

        [DLP](https://cloud.google.com/dlp/docs) inspect template name. Use this template to define inspect base settings. The `DLP Inspect Templates Reader` role is needed on the Dialogflow service identity service account (has the form `service-PROJECT_NUMBER@gcp-sa-dialogflow.iam.gserviceaccount.com`) for your agent's project. If empty, we use the default DLP inspect config. The template name will have one of the following formats: `projects//locations//inspectTemplates/` OR `organizations//locations//inspectTemplates/` Note: `inspect_template` must be located in the same region as the `SecuritySettings`.

        :param inspect_template: The inspect_template of this GoogleCloudDialogflowCxV3beta1SecuritySettings.
        :type inspect_template: str
        """

        self._inspect_template = inspect_template

    @property
    def name(self):
        """Gets the name of this GoogleCloudDialogflowCxV3beta1SecuritySettings.

        Resource name of the settings. Required for the SecuritySettingsService.UpdateSecuritySettings method. SecuritySettingsService.CreateSecuritySettings populates the name automatically. Format: `projects//locations//securitySettings/`.

        :return: The name of this GoogleCloudDialogflowCxV3beta1SecuritySettings.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudDialogflowCxV3beta1SecuritySettings.

        Resource name of the settings. Required for the SecuritySettingsService.UpdateSecuritySettings method. SecuritySettingsService.CreateSecuritySettings populates the name automatically. Format: `projects//locations//securitySettings/`.

        :param name: The name of this GoogleCloudDialogflowCxV3beta1SecuritySettings.
        :type name: str
        """

        self._name = name

    @property
    def purge_data_types(self):
        """Gets the purge_data_types of this GoogleCloudDialogflowCxV3beta1SecuritySettings.

        List of types of data to remove when retention settings triggers purge.

        :return: The purge_data_types of this GoogleCloudDialogflowCxV3beta1SecuritySettings.
        :rtype: List[str]
        """
        return self._purge_data_types

    @purge_data_types.setter
    def purge_data_types(self, purge_data_types):
        """Sets the purge_data_types of this GoogleCloudDialogflowCxV3beta1SecuritySettings.

        List of types of data to remove when retention settings triggers purge.

        :param purge_data_types: The purge_data_types of this GoogleCloudDialogflowCxV3beta1SecuritySettings.
        :type purge_data_types: List[str]
        """
        allowed_values = ["PURGE_DATA_TYPE_UNSPECIFIED", "DIALOGFLOW_HISTORY"]  # noqa: E501
        if not set(purge_data_types).issubset(set(allowed_values)):
            raise ValueError(
                "Invalid values for `purge_data_types` [{0}], must be a subset of [{1}]"
                .format(", ".join(map(str, set(purge_data_types) - set(allowed_values))),
                        ", ".join(map(str, allowed_values)))
            )

        self._purge_data_types = purge_data_types

    @property
    def redaction_scope(self):
        """Gets the redaction_scope of this GoogleCloudDialogflowCxV3beta1SecuritySettings.

        Defines the data for which Dialogflow applies redaction. Dialogflow does not redact data that it does not have access to – for example, Cloud logging.

        :return: The redaction_scope of this GoogleCloudDialogflowCxV3beta1SecuritySettings.
        :rtype: str
        """
        return self._redaction_scope

    @redaction_scope.setter
    def redaction_scope(self, redaction_scope):
        """Sets the redaction_scope of this GoogleCloudDialogflowCxV3beta1SecuritySettings.

        Defines the data for which Dialogflow applies redaction. Dialogflow does not redact data that it does not have access to – for example, Cloud logging.

        :param redaction_scope: The redaction_scope of this GoogleCloudDialogflowCxV3beta1SecuritySettings.
        :type redaction_scope: str
        """
        allowed_values = ["REDACTION_SCOPE_UNSPECIFIED", "REDACT_DISK_STORAGE"]  # noqa: E501
        if redaction_scope not in allowed_values:
            raise ValueError(
                "Invalid value for `redaction_scope` ({0}), must be one of {1}"
                .format(redaction_scope, allowed_values)
            )

        self._redaction_scope = redaction_scope

    @property
    def redaction_strategy(self):
        """Gets the redaction_strategy of this GoogleCloudDialogflowCxV3beta1SecuritySettings.

        Strategy that defines how we do redaction.

        :return: The redaction_strategy of this GoogleCloudDialogflowCxV3beta1SecuritySettings.
        :rtype: str
        """
        return self._redaction_strategy

    @redaction_strategy.setter
    def redaction_strategy(self, redaction_strategy):
        """Sets the redaction_strategy of this GoogleCloudDialogflowCxV3beta1SecuritySettings.

        Strategy that defines how we do redaction.

        :param redaction_strategy: The redaction_strategy of this GoogleCloudDialogflowCxV3beta1SecuritySettings.
        :type redaction_strategy: str
        """
        allowed_values = ["REDACTION_STRATEGY_UNSPECIFIED", "REDACT_WITH_SERVICE"]  # noqa: E501
        if redaction_strategy not in allowed_values:
            raise ValueError(
                "Invalid value for `redaction_strategy` ({0}), must be one of {1}"
                .format(redaction_strategy, allowed_values)
            )

        self._redaction_strategy = redaction_strategy

    @property
    def retention_strategy(self):
        """Gets the retention_strategy of this GoogleCloudDialogflowCxV3beta1SecuritySettings.

        Specifies the retention behavior defined by SecuritySettings.RetentionStrategy.

        :return: The retention_strategy of this GoogleCloudDialogflowCxV3beta1SecuritySettings.
        :rtype: str
        """
        return self._retention_strategy

    @retention_strategy.setter
    def retention_strategy(self, retention_strategy):
        """Sets the retention_strategy of this GoogleCloudDialogflowCxV3beta1SecuritySettings.

        Specifies the retention behavior defined by SecuritySettings.RetentionStrategy.

        :param retention_strategy: The retention_strategy of this GoogleCloudDialogflowCxV3beta1SecuritySettings.
        :type retention_strategy: str
        """
        allowed_values = ["RETENTION_STRATEGY_UNSPECIFIED", "REMOVE_AFTER_CONVERSATION"]  # noqa: E501
        if retention_strategy not in allowed_values:
            raise ValueError(
                "Invalid value for `retention_strategy` ({0}), must be one of {1}"
                .format(retention_strategy, allowed_values)
            )

        self._retention_strategy = retention_strategy

    @property
    def retention_window_days(self):
        """Gets the retention_window_days of this GoogleCloudDialogflowCxV3beta1SecuritySettings.

        Retains data in interaction logging for the specified number of days. This does not apply to Cloud logging, which is owned by the user - not Dialogflow. User must set a value lower than Dialogflow's default 365d TTL (30 days for Agent Assist traffic), higher value will be ignored and use default. Setting a value higher than that has no effect. A missing value or setting to 0 also means we use default TTL.

        :return: The retention_window_days of this GoogleCloudDialogflowCxV3beta1SecuritySettings.
        :rtype: int
        """
        return self._retention_window_days

    @retention_window_days.setter
    def retention_window_days(self, retention_window_days):
        """Sets the retention_window_days of this GoogleCloudDialogflowCxV3beta1SecuritySettings.

        Retains data in interaction logging for the specified number of days. This does not apply to Cloud logging, which is owned by the user - not Dialogflow. User must set a value lower than Dialogflow's default 365d TTL (30 days for Agent Assist traffic), higher value will be ignored and use default. Setting a value higher than that has no effect. A missing value or setting to 0 also means we use default TTL.

        :param retention_window_days: The retention_window_days of this GoogleCloudDialogflowCxV3beta1SecuritySettings.
        :type retention_window_days: int
        """

        self._retention_window_days = retention_window_days
