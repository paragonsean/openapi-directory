# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDialogflowCxV3beta1FilterSpecs(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data_stores: List[str]=None, filter: str=None):
        """GoogleCloudDialogflowCxV3beta1FilterSpecs - a model defined in OpenAPI

        :param data_stores: The data_stores of this GoogleCloudDialogflowCxV3beta1FilterSpecs.
        :param filter: The filter of this GoogleCloudDialogflowCxV3beta1FilterSpecs.
        """
        self.openapi_types = {
            'data_stores': List[str],
            'filter': str
        }

        self.attribute_map = {
            'data_stores': 'dataStores',
            'filter': 'filter'
        }

        self._data_stores = data_stores
        self._filter = filter

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDialogflowCxV3beta1FilterSpecs':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDialogflowCxV3beta1FilterSpecs of this GoogleCloudDialogflowCxV3beta1FilterSpecs.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data_stores(self):
        """Gets the data_stores of this GoogleCloudDialogflowCxV3beta1FilterSpecs.

        Optional. Data Stores where the boosting configuration is applied. The full names of the referenced data stores. Formats: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}` `projects/{project}/locations/{location}/dataStores/{data_store}

        :return: The data_stores of this GoogleCloudDialogflowCxV3beta1FilterSpecs.
        :rtype: List[str]
        """
        return self._data_stores

    @data_stores.setter
    def data_stores(self, data_stores):
        """Sets the data_stores of this GoogleCloudDialogflowCxV3beta1FilterSpecs.

        Optional. Data Stores where the boosting configuration is applied. The full names of the referenced data stores. Formats: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}` `projects/{project}/locations/{location}/dataStores/{data_store}

        :param data_stores: The data_stores of this GoogleCloudDialogflowCxV3beta1FilterSpecs.
        :type data_stores: List[str]
        """

        self._data_stores = data_stores

    @property
    def filter(self):
        """Gets the filter of this GoogleCloudDialogflowCxV3beta1FilterSpecs.

        Optional. The filter expression to be applied. Expression syntax is documented at https://cloud.google.com/generative-ai-app-builder/docs/filter-search-metadata#filter-expression-syntax

        :return: The filter of this GoogleCloudDialogflowCxV3beta1FilterSpecs.
        :rtype: str
        """
        return self._filter

    @filter.setter
    def filter(self, filter):
        """Sets the filter of this GoogleCloudDialogflowCxV3beta1FilterSpecs.

        Optional. The filter expression to be applied. Expression syntax is documented at https://cloud.google.com/generative-ai-app-builder/docs/filter-search-metadata#filter-expression-syntax

        :param filter: The filter of this GoogleCloudDialogflowCxV3beta1FilterSpecs.
        :type filter: str
        """

        self._filter = filter
