# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_dialogflow_v2beta1_context import GoogleCloudDialogflowV2beta1Context
from openapi_server.models.google_cloud_dialogflow_v2beta1_intent_followup_intent_info import GoogleCloudDialogflowV2beta1IntentFollowupIntentInfo
from openapi_server.models.google_cloud_dialogflow_v2beta1_intent_message import GoogleCloudDialogflowV2beta1IntentMessage
from openapi_server.models.google_cloud_dialogflow_v2beta1_intent_parameter import GoogleCloudDialogflowV2beta1IntentParameter
from openapi_server.models.google_cloud_dialogflow_v2beta1_intent_training_phrase import GoogleCloudDialogflowV2beta1IntentTrainingPhrase
from openapi_server import util


class GoogleCloudDialogflowV2beta1Intent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, action: str=None, default_response_platforms: List[str]=None, display_name: str=None, end_interaction: bool=None, events: List[str]=None, followup_intent_info: List[GoogleCloudDialogflowV2beta1IntentFollowupIntentInfo]=None, input_context_names: List[str]=None, is_fallback: bool=None, live_agent_handoff: bool=None, messages: List[GoogleCloudDialogflowV2beta1IntentMessage]=None, ml_disabled: bool=None, ml_enabled: bool=None, name: str=None, output_contexts: List[GoogleCloudDialogflowV2beta1Context]=None, parameters: List[GoogleCloudDialogflowV2beta1IntentParameter]=None, parent_followup_intent_name: str=None, priority: int=None, reset_contexts: bool=None, root_followup_intent_name: str=None, training_phrases: List[GoogleCloudDialogflowV2beta1IntentTrainingPhrase]=None, webhook_state: str=None):
        """GoogleCloudDialogflowV2beta1Intent - a model defined in OpenAPI

        :param action: The action of this GoogleCloudDialogflowV2beta1Intent.
        :param default_response_platforms: The default_response_platforms of this GoogleCloudDialogflowV2beta1Intent.
        :param display_name: The display_name of this GoogleCloudDialogflowV2beta1Intent.
        :param end_interaction: The end_interaction of this GoogleCloudDialogflowV2beta1Intent.
        :param events: The events of this GoogleCloudDialogflowV2beta1Intent.
        :param followup_intent_info: The followup_intent_info of this GoogleCloudDialogflowV2beta1Intent.
        :param input_context_names: The input_context_names of this GoogleCloudDialogflowV2beta1Intent.
        :param is_fallback: The is_fallback of this GoogleCloudDialogflowV2beta1Intent.
        :param live_agent_handoff: The live_agent_handoff of this GoogleCloudDialogflowV2beta1Intent.
        :param messages: The messages of this GoogleCloudDialogflowV2beta1Intent.
        :param ml_disabled: The ml_disabled of this GoogleCloudDialogflowV2beta1Intent.
        :param ml_enabled: The ml_enabled of this GoogleCloudDialogflowV2beta1Intent.
        :param name: The name of this GoogleCloudDialogflowV2beta1Intent.
        :param output_contexts: The output_contexts of this GoogleCloudDialogflowV2beta1Intent.
        :param parameters: The parameters of this GoogleCloudDialogflowV2beta1Intent.
        :param parent_followup_intent_name: The parent_followup_intent_name of this GoogleCloudDialogflowV2beta1Intent.
        :param priority: The priority of this GoogleCloudDialogflowV2beta1Intent.
        :param reset_contexts: The reset_contexts of this GoogleCloudDialogflowV2beta1Intent.
        :param root_followup_intent_name: The root_followup_intent_name of this GoogleCloudDialogflowV2beta1Intent.
        :param training_phrases: The training_phrases of this GoogleCloudDialogflowV2beta1Intent.
        :param webhook_state: The webhook_state of this GoogleCloudDialogflowV2beta1Intent.
        """
        self.openapi_types = {
            'action': str,
            'default_response_platforms': List[str],
            'display_name': str,
            'end_interaction': bool,
            'events': List[str],
            'followup_intent_info': List[GoogleCloudDialogflowV2beta1IntentFollowupIntentInfo],
            'input_context_names': List[str],
            'is_fallback': bool,
            'live_agent_handoff': bool,
            'messages': List[GoogleCloudDialogflowV2beta1IntentMessage],
            'ml_disabled': bool,
            'ml_enabled': bool,
            'name': str,
            'output_contexts': List[GoogleCloudDialogflowV2beta1Context],
            'parameters': List[GoogleCloudDialogflowV2beta1IntentParameter],
            'parent_followup_intent_name': str,
            'priority': int,
            'reset_contexts': bool,
            'root_followup_intent_name': str,
            'training_phrases': List[GoogleCloudDialogflowV2beta1IntentTrainingPhrase],
            'webhook_state': str
        }

        self.attribute_map = {
            'action': 'action',
            'default_response_platforms': 'defaultResponsePlatforms',
            'display_name': 'displayName',
            'end_interaction': 'endInteraction',
            'events': 'events',
            'followup_intent_info': 'followupIntentInfo',
            'input_context_names': 'inputContextNames',
            'is_fallback': 'isFallback',
            'live_agent_handoff': 'liveAgentHandoff',
            'messages': 'messages',
            'ml_disabled': 'mlDisabled',
            'ml_enabled': 'mlEnabled',
            'name': 'name',
            'output_contexts': 'outputContexts',
            'parameters': 'parameters',
            'parent_followup_intent_name': 'parentFollowupIntentName',
            'priority': 'priority',
            'reset_contexts': 'resetContexts',
            'root_followup_intent_name': 'rootFollowupIntentName',
            'training_phrases': 'trainingPhrases',
            'webhook_state': 'webhookState'
        }

        self._action = action
        self._default_response_platforms = default_response_platforms
        self._display_name = display_name
        self._end_interaction = end_interaction
        self._events = events
        self._followup_intent_info = followup_intent_info
        self._input_context_names = input_context_names
        self._is_fallback = is_fallback
        self._live_agent_handoff = live_agent_handoff
        self._messages = messages
        self._ml_disabled = ml_disabled
        self._ml_enabled = ml_enabled
        self._name = name
        self._output_contexts = output_contexts
        self._parameters = parameters
        self._parent_followup_intent_name = parent_followup_intent_name
        self._priority = priority
        self._reset_contexts = reset_contexts
        self._root_followup_intent_name = root_followup_intent_name
        self._training_phrases = training_phrases
        self._webhook_state = webhook_state

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDialogflowV2beta1Intent':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDialogflowV2beta1Intent of this GoogleCloudDialogflowV2beta1Intent.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def action(self):
        """Gets the action of this GoogleCloudDialogflowV2beta1Intent.

        Optional. The name of the action associated with the intent. Note: The action name must not contain whitespaces.

        :return: The action of this GoogleCloudDialogflowV2beta1Intent.
        :rtype: str
        """
        return self._action

    @action.setter
    def action(self, action):
        """Sets the action of this GoogleCloudDialogflowV2beta1Intent.

        Optional. The name of the action associated with the intent. Note: The action name must not contain whitespaces.

        :param action: The action of this GoogleCloudDialogflowV2beta1Intent.
        :type action: str
        """

        self._action = action

    @property
    def default_response_platforms(self):
        """Gets the default_response_platforms of this GoogleCloudDialogflowV2beta1Intent.

        Optional. The list of platforms for which the first responses will be copied from the messages in PLATFORM_UNSPECIFIED (i.e. default platform).

        :return: The default_response_platforms of this GoogleCloudDialogflowV2beta1Intent.
        :rtype: List[str]
        """
        return self._default_response_platforms

    @default_response_platforms.setter
    def default_response_platforms(self, default_response_platforms):
        """Sets the default_response_platforms of this GoogleCloudDialogflowV2beta1Intent.

        Optional. The list of platforms for which the first responses will be copied from the messages in PLATFORM_UNSPECIFIED (i.e. default platform).

        :param default_response_platforms: The default_response_platforms of this GoogleCloudDialogflowV2beta1Intent.
        :type default_response_platforms: List[str]
        """
        allowed_values = ["PLATFORM_UNSPECIFIED", "FACEBOOK", "SLACK", "TELEGRAM", "KIK", "SKYPE", "LINE", "VIBER", "ACTIONS_ON_GOOGLE", "TELEPHONY", "GOOGLE_HANGOUTS"]  # noqa: E501
        if not set(default_response_platforms).issubset(set(allowed_values)):
            raise ValueError(
                "Invalid values for `default_response_platforms` [{0}], must be a subset of [{1}]"
                .format(", ".join(map(str, set(default_response_platforms) - set(allowed_values))),
                        ", ".join(map(str, allowed_values)))
            )

        self._default_response_platforms = default_response_platforms

    @property
    def display_name(self):
        """Gets the display_name of this GoogleCloudDialogflowV2beta1Intent.

        Required. The name of this intent.

        :return: The display_name of this GoogleCloudDialogflowV2beta1Intent.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this GoogleCloudDialogflowV2beta1Intent.

        Required. The name of this intent.

        :param display_name: The display_name of this GoogleCloudDialogflowV2beta1Intent.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def end_interaction(self):
        """Gets the end_interaction of this GoogleCloudDialogflowV2beta1Intent.

        Optional. Indicates that this intent ends an interaction. Some integrations (e.g., Actions on Google or Dialogflow phone gateway) use this information to close interaction with an end user. Default is false.

        :return: The end_interaction of this GoogleCloudDialogflowV2beta1Intent.
        :rtype: bool
        """
        return self._end_interaction

    @end_interaction.setter
    def end_interaction(self, end_interaction):
        """Sets the end_interaction of this GoogleCloudDialogflowV2beta1Intent.

        Optional. Indicates that this intent ends an interaction. Some integrations (e.g., Actions on Google or Dialogflow phone gateway) use this information to close interaction with an end user. Default is false.

        :param end_interaction: The end_interaction of this GoogleCloudDialogflowV2beta1Intent.
        :type end_interaction: bool
        """

        self._end_interaction = end_interaction

    @property
    def events(self):
        """Gets the events of this GoogleCloudDialogflowV2beta1Intent.

        Optional. The collection of event names that trigger the intent. If the collection of input contexts is not empty, all of the contexts must be present in the active user session for an event to trigger this intent. Event names are limited to 150 characters.

        :return: The events of this GoogleCloudDialogflowV2beta1Intent.
        :rtype: List[str]
        """
        return self._events

    @events.setter
    def events(self, events):
        """Sets the events of this GoogleCloudDialogflowV2beta1Intent.

        Optional. The collection of event names that trigger the intent. If the collection of input contexts is not empty, all of the contexts must be present in the active user session for an event to trigger this intent. Event names are limited to 150 characters.

        :param events: The events of this GoogleCloudDialogflowV2beta1Intent.
        :type events: List[str]
        """

        self._events = events

    @property
    def followup_intent_info(self):
        """Gets the followup_intent_info of this GoogleCloudDialogflowV2beta1Intent.

        Output only. Information about all followup intents that have this intent as a direct or indirect parent. We populate this field only in the output.

        :return: The followup_intent_info of this GoogleCloudDialogflowV2beta1Intent.
        :rtype: List[GoogleCloudDialogflowV2beta1IntentFollowupIntentInfo]
        """
        return self._followup_intent_info

    @followup_intent_info.setter
    def followup_intent_info(self, followup_intent_info):
        """Sets the followup_intent_info of this GoogleCloudDialogflowV2beta1Intent.

        Output only. Information about all followup intents that have this intent as a direct or indirect parent. We populate this field only in the output.

        :param followup_intent_info: The followup_intent_info of this GoogleCloudDialogflowV2beta1Intent.
        :type followup_intent_info: List[GoogleCloudDialogflowV2beta1IntentFollowupIntentInfo]
        """

        self._followup_intent_info = followup_intent_info

    @property
    def input_context_names(self):
        """Gets the input_context_names of this GoogleCloudDialogflowV2beta1Intent.

        Optional. The list of context names required for this intent to be triggered. Formats: - `projects//agent/sessions/-/contexts/` - `projects//locations//agent/sessions/-/contexts/`

        :return: The input_context_names of this GoogleCloudDialogflowV2beta1Intent.
        :rtype: List[str]
        """
        return self._input_context_names

    @input_context_names.setter
    def input_context_names(self, input_context_names):
        """Sets the input_context_names of this GoogleCloudDialogflowV2beta1Intent.

        Optional. The list of context names required for this intent to be triggered. Formats: - `projects//agent/sessions/-/contexts/` - `projects//locations//agent/sessions/-/contexts/`

        :param input_context_names: The input_context_names of this GoogleCloudDialogflowV2beta1Intent.
        :type input_context_names: List[str]
        """

        self._input_context_names = input_context_names

    @property
    def is_fallback(self):
        """Gets the is_fallback of this GoogleCloudDialogflowV2beta1Intent.

        Optional. Indicates whether this is a fallback intent.

        :return: The is_fallback of this GoogleCloudDialogflowV2beta1Intent.
        :rtype: bool
        """
        return self._is_fallback

    @is_fallback.setter
    def is_fallback(self, is_fallback):
        """Sets the is_fallback of this GoogleCloudDialogflowV2beta1Intent.

        Optional. Indicates whether this is a fallback intent.

        :param is_fallback: The is_fallback of this GoogleCloudDialogflowV2beta1Intent.
        :type is_fallback: bool
        """

        self._is_fallback = is_fallback

    @property
    def live_agent_handoff(self):
        """Gets the live_agent_handoff of this GoogleCloudDialogflowV2beta1Intent.

        Optional. Indicates that a live agent should be brought in to handle the interaction with the user. In most cases, when you set this flag to true, you would also want to set end_interaction to true as well. Default is false.

        :return: The live_agent_handoff of this GoogleCloudDialogflowV2beta1Intent.
        :rtype: bool
        """
        return self._live_agent_handoff

    @live_agent_handoff.setter
    def live_agent_handoff(self, live_agent_handoff):
        """Sets the live_agent_handoff of this GoogleCloudDialogflowV2beta1Intent.

        Optional. Indicates that a live agent should be brought in to handle the interaction with the user. In most cases, when you set this flag to true, you would also want to set end_interaction to true as well. Default is false.

        :param live_agent_handoff: The live_agent_handoff of this GoogleCloudDialogflowV2beta1Intent.
        :type live_agent_handoff: bool
        """

        self._live_agent_handoff = live_agent_handoff

    @property
    def messages(self):
        """Gets the messages of this GoogleCloudDialogflowV2beta1Intent.

        Optional. The collection of rich messages corresponding to the `Response` field in the Dialogflow console.

        :return: The messages of this GoogleCloudDialogflowV2beta1Intent.
        :rtype: List[GoogleCloudDialogflowV2beta1IntentMessage]
        """
        return self._messages

    @messages.setter
    def messages(self, messages):
        """Sets the messages of this GoogleCloudDialogflowV2beta1Intent.

        Optional. The collection of rich messages corresponding to the `Response` field in the Dialogflow console.

        :param messages: The messages of this GoogleCloudDialogflowV2beta1Intent.
        :type messages: List[GoogleCloudDialogflowV2beta1IntentMessage]
        """

        self._messages = messages

    @property
    def ml_disabled(self):
        """Gets the ml_disabled of this GoogleCloudDialogflowV2beta1Intent.

        Optional. Indicates whether Machine Learning is disabled for the intent. Note: If `ml_disabled` setting is set to true, then this intent is not taken into account during inference in `ML ONLY` match mode. Also, auto-markup in the UI is turned off.

        :return: The ml_disabled of this GoogleCloudDialogflowV2beta1Intent.
        :rtype: bool
        """
        return self._ml_disabled

    @ml_disabled.setter
    def ml_disabled(self, ml_disabled):
        """Sets the ml_disabled of this GoogleCloudDialogflowV2beta1Intent.

        Optional. Indicates whether Machine Learning is disabled for the intent. Note: If `ml_disabled` setting is set to true, then this intent is not taken into account during inference in `ML ONLY` match mode. Also, auto-markup in the UI is turned off.

        :param ml_disabled: The ml_disabled of this GoogleCloudDialogflowV2beta1Intent.
        :type ml_disabled: bool
        """

        self._ml_disabled = ml_disabled

    @property
    def ml_enabled(self):
        """Gets the ml_enabled of this GoogleCloudDialogflowV2beta1Intent.

        Optional. Indicates whether Machine Learning is enabled for the intent. Note: If `ml_enabled` setting is set to false, then this intent is not taken into account during inference in `ML ONLY` match mode. Also, auto-markup in the UI is turned off. DEPRECATED! Please use `ml_disabled` field instead. NOTE: If both `ml_enabled` and `ml_disabled` are either not set or false, then the default value is determined as follows: - Before April 15th, 2018 the default is: ml_enabled = false / ml_disabled = true. - After April 15th, 2018 the default is: ml_enabled = true / ml_disabled = false.

        :return: The ml_enabled of this GoogleCloudDialogflowV2beta1Intent.
        :rtype: bool
        """
        return self._ml_enabled

    @ml_enabled.setter
    def ml_enabled(self, ml_enabled):
        """Sets the ml_enabled of this GoogleCloudDialogflowV2beta1Intent.

        Optional. Indicates whether Machine Learning is enabled for the intent. Note: If `ml_enabled` setting is set to false, then this intent is not taken into account during inference in `ML ONLY` match mode. Also, auto-markup in the UI is turned off. DEPRECATED! Please use `ml_disabled` field instead. NOTE: If both `ml_enabled` and `ml_disabled` are either not set or false, then the default value is determined as follows: - Before April 15th, 2018 the default is: ml_enabled = false / ml_disabled = true. - After April 15th, 2018 the default is: ml_enabled = true / ml_disabled = false.

        :param ml_enabled: The ml_enabled of this GoogleCloudDialogflowV2beta1Intent.
        :type ml_enabled: bool
        """

        self._ml_enabled = ml_enabled

    @property
    def name(self):
        """Gets the name of this GoogleCloudDialogflowV2beta1Intent.

        Optional. The unique identifier of this intent. Required for Intents.UpdateIntent and Intents.BatchUpdateIntents methods. Supported formats: - `projects//agent/intents/` - `projects//locations//agent/intents/`

        :return: The name of this GoogleCloudDialogflowV2beta1Intent.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudDialogflowV2beta1Intent.

        Optional. The unique identifier of this intent. Required for Intents.UpdateIntent and Intents.BatchUpdateIntents methods. Supported formats: - `projects//agent/intents/` - `projects//locations//agent/intents/`

        :param name: The name of this GoogleCloudDialogflowV2beta1Intent.
        :type name: str
        """

        self._name = name

    @property
    def output_contexts(self):
        """Gets the output_contexts of this GoogleCloudDialogflowV2beta1Intent.

        Optional. The collection of contexts that are activated when the intent is matched. Context messages in this collection should not set the parameters field. Setting the `lifespan_count` to 0 will reset the context when the intent is matched. Format: `projects//agent/sessions/-/contexts/`.

        :return: The output_contexts of this GoogleCloudDialogflowV2beta1Intent.
        :rtype: List[GoogleCloudDialogflowV2beta1Context]
        """
        return self._output_contexts

    @output_contexts.setter
    def output_contexts(self, output_contexts):
        """Sets the output_contexts of this GoogleCloudDialogflowV2beta1Intent.

        Optional. The collection of contexts that are activated when the intent is matched. Context messages in this collection should not set the parameters field. Setting the `lifespan_count` to 0 will reset the context when the intent is matched. Format: `projects//agent/sessions/-/contexts/`.

        :param output_contexts: The output_contexts of this GoogleCloudDialogflowV2beta1Intent.
        :type output_contexts: List[GoogleCloudDialogflowV2beta1Context]
        """

        self._output_contexts = output_contexts

    @property
    def parameters(self):
        """Gets the parameters of this GoogleCloudDialogflowV2beta1Intent.

        Optional. The collection of parameters associated with the intent.

        :return: The parameters of this GoogleCloudDialogflowV2beta1Intent.
        :rtype: List[GoogleCloudDialogflowV2beta1IntentParameter]
        """
        return self._parameters

    @parameters.setter
    def parameters(self, parameters):
        """Sets the parameters of this GoogleCloudDialogflowV2beta1Intent.

        Optional. The collection of parameters associated with the intent.

        :param parameters: The parameters of this GoogleCloudDialogflowV2beta1Intent.
        :type parameters: List[GoogleCloudDialogflowV2beta1IntentParameter]
        """

        self._parameters = parameters

    @property
    def parent_followup_intent_name(self):
        """Gets the parent_followup_intent_name of this GoogleCloudDialogflowV2beta1Intent.

        Optional. The unique identifier of the parent intent in the chain of followup intents. You can set this field when creating an intent, for example with CreateIntent or BatchUpdateIntents, in order to make this intent a followup intent. It identifies the parent followup intent. Format: `projects//agent/intents/`.

        :return: The parent_followup_intent_name of this GoogleCloudDialogflowV2beta1Intent.
        :rtype: str
        """
        return self._parent_followup_intent_name

    @parent_followup_intent_name.setter
    def parent_followup_intent_name(self, parent_followup_intent_name):
        """Sets the parent_followup_intent_name of this GoogleCloudDialogflowV2beta1Intent.

        Optional. The unique identifier of the parent intent in the chain of followup intents. You can set this field when creating an intent, for example with CreateIntent or BatchUpdateIntents, in order to make this intent a followup intent. It identifies the parent followup intent. Format: `projects//agent/intents/`.

        :param parent_followup_intent_name: The parent_followup_intent_name of this GoogleCloudDialogflowV2beta1Intent.
        :type parent_followup_intent_name: str
        """

        self._parent_followup_intent_name = parent_followup_intent_name

    @property
    def priority(self):
        """Gets the priority of this GoogleCloudDialogflowV2beta1Intent.

        Optional. The priority of this intent. Higher numbers represent higher priorities. - If the supplied value is unspecified or 0, the service translates the value to 500,000, which corresponds to the `Normal` priority in the console. - If the supplied value is negative, the intent is ignored in runtime detect intent requests.

        :return: The priority of this GoogleCloudDialogflowV2beta1Intent.
        :rtype: int
        """
        return self._priority

    @priority.setter
    def priority(self, priority):
        """Sets the priority of this GoogleCloudDialogflowV2beta1Intent.

        Optional. The priority of this intent. Higher numbers represent higher priorities. - If the supplied value is unspecified or 0, the service translates the value to 500,000, which corresponds to the `Normal` priority in the console. - If the supplied value is negative, the intent is ignored in runtime detect intent requests.

        :param priority: The priority of this GoogleCloudDialogflowV2beta1Intent.
        :type priority: int
        """

        self._priority = priority

    @property
    def reset_contexts(self):
        """Gets the reset_contexts of this GoogleCloudDialogflowV2beta1Intent.

        Optional. Indicates whether to delete all contexts in the current session when this intent is matched.

        :return: The reset_contexts of this GoogleCloudDialogflowV2beta1Intent.
        :rtype: bool
        """
        return self._reset_contexts

    @reset_contexts.setter
    def reset_contexts(self, reset_contexts):
        """Sets the reset_contexts of this GoogleCloudDialogflowV2beta1Intent.

        Optional. Indicates whether to delete all contexts in the current session when this intent is matched.

        :param reset_contexts: The reset_contexts of this GoogleCloudDialogflowV2beta1Intent.
        :type reset_contexts: bool
        """

        self._reset_contexts = reset_contexts

    @property
    def root_followup_intent_name(self):
        """Gets the root_followup_intent_name of this GoogleCloudDialogflowV2beta1Intent.

        Output only. The unique identifier of the root intent in the chain of followup intents. It identifies the correct followup intents chain for this intent. Format: `projects//agent/intents/`.

        :return: The root_followup_intent_name of this GoogleCloudDialogflowV2beta1Intent.
        :rtype: str
        """
        return self._root_followup_intent_name

    @root_followup_intent_name.setter
    def root_followup_intent_name(self, root_followup_intent_name):
        """Sets the root_followup_intent_name of this GoogleCloudDialogflowV2beta1Intent.

        Output only. The unique identifier of the root intent in the chain of followup intents. It identifies the correct followup intents chain for this intent. Format: `projects//agent/intents/`.

        :param root_followup_intent_name: The root_followup_intent_name of this GoogleCloudDialogflowV2beta1Intent.
        :type root_followup_intent_name: str
        """

        self._root_followup_intent_name = root_followup_intent_name

    @property
    def training_phrases(self):
        """Gets the training_phrases of this GoogleCloudDialogflowV2beta1Intent.

        Optional. The collection of examples that the agent is trained on.

        :return: The training_phrases of this GoogleCloudDialogflowV2beta1Intent.
        :rtype: List[GoogleCloudDialogflowV2beta1IntentTrainingPhrase]
        """
        return self._training_phrases

    @training_phrases.setter
    def training_phrases(self, training_phrases):
        """Sets the training_phrases of this GoogleCloudDialogflowV2beta1Intent.

        Optional. The collection of examples that the agent is trained on.

        :param training_phrases: The training_phrases of this GoogleCloudDialogflowV2beta1Intent.
        :type training_phrases: List[GoogleCloudDialogflowV2beta1IntentTrainingPhrase]
        """

        self._training_phrases = training_phrases

    @property
    def webhook_state(self):
        """Gets the webhook_state of this GoogleCloudDialogflowV2beta1Intent.

        Optional. Indicates whether webhooks are enabled for the intent.

        :return: The webhook_state of this GoogleCloudDialogflowV2beta1Intent.
        :rtype: str
        """
        return self._webhook_state

    @webhook_state.setter
    def webhook_state(self, webhook_state):
        """Sets the webhook_state of this GoogleCloudDialogflowV2beta1Intent.

        Optional. Indicates whether webhooks are enabled for the intent.

        :param webhook_state: The webhook_state of this GoogleCloudDialogflowV2beta1Intent.
        :type webhook_state: str
        """
        allowed_values = ["WEBHOOK_STATE_UNSPECIFIED", "WEBHOOK_STATE_ENABLED", "WEBHOOK_STATE_ENABLED_FOR_SLOT_FILLING"]  # noqa: E501
        if webhook_state not in allowed_values:
            raise ValueError(
                "Invalid value for `webhook_state` ({0}), must be one of {1}"
                .format(webhook_state, allowed_values)
            )

        self._webhook_state = webhook_state
