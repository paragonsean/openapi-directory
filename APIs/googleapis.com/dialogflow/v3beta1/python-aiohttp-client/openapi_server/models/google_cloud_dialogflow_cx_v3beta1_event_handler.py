# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_dialogflow_cx_v3beta1_fulfillment import GoogleCloudDialogflowCxV3beta1Fulfillment
from openapi_server import util


class GoogleCloudDialogflowCxV3beta1EventHandler(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, event: str=None, name: str=None, target_flow: str=None, target_page: str=None, trigger_fulfillment: GoogleCloudDialogflowCxV3beta1Fulfillment=None):
        """GoogleCloudDialogflowCxV3beta1EventHandler - a model defined in OpenAPI

        :param event: The event of this GoogleCloudDialogflowCxV3beta1EventHandler.
        :param name: The name of this GoogleCloudDialogflowCxV3beta1EventHandler.
        :param target_flow: The target_flow of this GoogleCloudDialogflowCxV3beta1EventHandler.
        :param target_page: The target_page of this GoogleCloudDialogflowCxV3beta1EventHandler.
        :param trigger_fulfillment: The trigger_fulfillment of this GoogleCloudDialogflowCxV3beta1EventHandler.
        """
        self.openapi_types = {
            'event': str,
            'name': str,
            'target_flow': str,
            'target_page': str,
            'trigger_fulfillment': GoogleCloudDialogflowCxV3beta1Fulfillment
        }

        self.attribute_map = {
            'event': 'event',
            'name': 'name',
            'target_flow': 'targetFlow',
            'target_page': 'targetPage',
            'trigger_fulfillment': 'triggerFulfillment'
        }

        self._event = event
        self._name = name
        self._target_flow = target_flow
        self._target_page = target_page
        self._trigger_fulfillment = trigger_fulfillment

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDialogflowCxV3beta1EventHandler':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDialogflowCxV3beta1EventHandler of this GoogleCloudDialogflowCxV3beta1EventHandler.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def event(self):
        """Gets the event of this GoogleCloudDialogflowCxV3beta1EventHandler.

        Required. The name of the event to handle.

        :return: The event of this GoogleCloudDialogflowCxV3beta1EventHandler.
        :rtype: str
        """
        return self._event

    @event.setter
    def event(self, event):
        """Sets the event of this GoogleCloudDialogflowCxV3beta1EventHandler.

        Required. The name of the event to handle.

        :param event: The event of this GoogleCloudDialogflowCxV3beta1EventHandler.
        :type event: str
        """

        self._event = event

    @property
    def name(self):
        """Gets the name of this GoogleCloudDialogflowCxV3beta1EventHandler.

        Output only. The unique identifier of this event handler.

        :return: The name of this GoogleCloudDialogflowCxV3beta1EventHandler.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudDialogflowCxV3beta1EventHandler.

        Output only. The unique identifier of this event handler.

        :param name: The name of this GoogleCloudDialogflowCxV3beta1EventHandler.
        :type name: str
        """

        self._name = name

    @property
    def target_flow(self):
        """Gets the target_flow of this GoogleCloudDialogflowCxV3beta1EventHandler.

        The target flow to transition to. Format: `projects//locations//agents//flows/`.

        :return: The target_flow of this GoogleCloudDialogflowCxV3beta1EventHandler.
        :rtype: str
        """
        return self._target_flow

    @target_flow.setter
    def target_flow(self, target_flow):
        """Sets the target_flow of this GoogleCloudDialogflowCxV3beta1EventHandler.

        The target flow to transition to. Format: `projects//locations//agents//flows/`.

        :param target_flow: The target_flow of this GoogleCloudDialogflowCxV3beta1EventHandler.
        :type target_flow: str
        """

        self._target_flow = target_flow

    @property
    def target_page(self):
        """Gets the target_page of this GoogleCloudDialogflowCxV3beta1EventHandler.

        The target page to transition to. Format: `projects//locations//agents//flows//pages/`.

        :return: The target_page of this GoogleCloudDialogflowCxV3beta1EventHandler.
        :rtype: str
        """
        return self._target_page

    @target_page.setter
    def target_page(self, target_page):
        """Sets the target_page of this GoogleCloudDialogflowCxV3beta1EventHandler.

        The target page to transition to. Format: `projects//locations//agents//flows//pages/`.

        :param target_page: The target_page of this GoogleCloudDialogflowCxV3beta1EventHandler.
        :type target_page: str
        """

        self._target_page = target_page

    @property
    def trigger_fulfillment(self):
        """Gets the trigger_fulfillment of this GoogleCloudDialogflowCxV3beta1EventHandler.


        :return: The trigger_fulfillment of this GoogleCloudDialogflowCxV3beta1EventHandler.
        :rtype: GoogleCloudDialogflowCxV3beta1Fulfillment
        """
        return self._trigger_fulfillment

    @trigger_fulfillment.setter
    def trigger_fulfillment(self, trigger_fulfillment):
        """Sets the trigger_fulfillment of this GoogleCloudDialogflowCxV3beta1EventHandler.


        :param trigger_fulfillment: The trigger_fulfillment of this GoogleCloudDialogflowCxV3beta1EventHandler.
        :type trigger_fulfillment: GoogleCloudDialogflowCxV3beta1Fulfillment
        """

        self._trigger_fulfillment = trigger_fulfillment
