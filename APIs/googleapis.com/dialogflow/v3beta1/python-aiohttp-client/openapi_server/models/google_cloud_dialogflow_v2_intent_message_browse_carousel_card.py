# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_dialogflow_v2_intent_message_browse_carousel_card_browse_carousel_card_item import GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItem
from openapi_server import util


class GoogleCloudDialogflowV2IntentMessageBrowseCarouselCard(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, image_display_options: str=None, items: List[GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItem]=None):
        """GoogleCloudDialogflowV2IntentMessageBrowseCarouselCard - a model defined in OpenAPI

        :param image_display_options: The image_display_options of this GoogleCloudDialogflowV2IntentMessageBrowseCarouselCard.
        :param items: The items of this GoogleCloudDialogflowV2IntentMessageBrowseCarouselCard.
        """
        self.openapi_types = {
            'image_display_options': str,
            'items': List[GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItem]
        }

        self.attribute_map = {
            'image_display_options': 'imageDisplayOptions',
            'items': 'items'
        }

        self._image_display_options = image_display_options
        self._items = items

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDialogflowV2IntentMessageBrowseCarouselCard':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDialogflowV2IntentMessageBrowseCarouselCard of this GoogleCloudDialogflowV2IntentMessageBrowseCarouselCard.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def image_display_options(self):
        """Gets the image_display_options of this GoogleCloudDialogflowV2IntentMessageBrowseCarouselCard.

        Optional. Settings for displaying the image. Applies to every image in items.

        :return: The image_display_options of this GoogleCloudDialogflowV2IntentMessageBrowseCarouselCard.
        :rtype: str
        """
        return self._image_display_options

    @image_display_options.setter
    def image_display_options(self, image_display_options):
        """Sets the image_display_options of this GoogleCloudDialogflowV2IntentMessageBrowseCarouselCard.

        Optional. Settings for displaying the image. Applies to every image in items.

        :param image_display_options: The image_display_options of this GoogleCloudDialogflowV2IntentMessageBrowseCarouselCard.
        :type image_display_options: str
        """
        allowed_values = ["IMAGE_DISPLAY_OPTIONS_UNSPECIFIED", "GRAY", "WHITE", "CROPPED", "BLURRED_BACKGROUND"]  # noqa: E501
        if image_display_options not in allowed_values:
            raise ValueError(
                "Invalid value for `image_display_options` ({0}), must be one of {1}"
                .format(image_display_options, allowed_values)
            )

        self._image_display_options = image_display_options

    @property
    def items(self):
        """Gets the items of this GoogleCloudDialogflowV2IntentMessageBrowseCarouselCard.

        Required. List of items in the Browse Carousel Card. Minimum of two items, maximum of ten.

        :return: The items of this GoogleCloudDialogflowV2IntentMessageBrowseCarouselCard.
        :rtype: List[GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItem]
        """
        return self._items

    @items.setter
    def items(self, items):
        """Sets the items of this GoogleCloudDialogflowV2IntentMessageBrowseCarouselCard.

        Required. List of items in the Browse Carousel Card. Minimum of two items, maximum of ten.

        :param items: The items of this GoogleCloudDialogflowV2IntentMessageBrowseCarouselCard.
        :type items: List[GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItem]
        """

        self._items = items
