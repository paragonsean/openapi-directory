# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_dialogflow_v2beta1_context import GoogleCloudDialogflowV2beta1Context
from openapi_server.models.google_cloud_dialogflow_v2beta1_intent import GoogleCloudDialogflowV2beta1Intent
from openapi_server.models.google_cloud_dialogflow_v2beta1_intent_message import GoogleCloudDialogflowV2beta1IntentMessage
from openapi_server.models.google_cloud_dialogflow_v2beta1_knowledge_answers import GoogleCloudDialogflowV2beta1KnowledgeAnswers
from openapi_server.models.google_cloud_dialogflow_v2beta1_sentiment_analysis_result import GoogleCloudDialogflowV2beta1SentimentAnalysisResult
from openapi_server import util


class GoogleCloudDialogflowV2beta1QueryResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, action: str=None, all_required_params_present: bool=None, cancels_slot_filling: bool=None, diagnostic_info: Dict[str, object]=None, fulfillment_messages: List[GoogleCloudDialogflowV2beta1IntentMessage]=None, fulfillment_text: str=None, intent: GoogleCloudDialogflowV2beta1Intent=None, intent_detection_confidence: float=None, knowledge_answers: GoogleCloudDialogflowV2beta1KnowledgeAnswers=None, language_code: str=None, output_contexts: List[GoogleCloudDialogflowV2beta1Context]=None, parameters: Dict[str, object]=None, query_text: str=None, sentiment_analysis_result: GoogleCloudDialogflowV2beta1SentimentAnalysisResult=None, speech_recognition_confidence: float=None, webhook_payload: Dict[str, object]=None, webhook_source: str=None):
        """GoogleCloudDialogflowV2beta1QueryResult - a model defined in OpenAPI

        :param action: The action of this GoogleCloudDialogflowV2beta1QueryResult.
        :param all_required_params_present: The all_required_params_present of this GoogleCloudDialogflowV2beta1QueryResult.
        :param cancels_slot_filling: The cancels_slot_filling of this GoogleCloudDialogflowV2beta1QueryResult.
        :param diagnostic_info: The diagnostic_info of this GoogleCloudDialogflowV2beta1QueryResult.
        :param fulfillment_messages: The fulfillment_messages of this GoogleCloudDialogflowV2beta1QueryResult.
        :param fulfillment_text: The fulfillment_text of this GoogleCloudDialogflowV2beta1QueryResult.
        :param intent: The intent of this GoogleCloudDialogflowV2beta1QueryResult.
        :param intent_detection_confidence: The intent_detection_confidence of this GoogleCloudDialogflowV2beta1QueryResult.
        :param knowledge_answers: The knowledge_answers of this GoogleCloudDialogflowV2beta1QueryResult.
        :param language_code: The language_code of this GoogleCloudDialogflowV2beta1QueryResult.
        :param output_contexts: The output_contexts of this GoogleCloudDialogflowV2beta1QueryResult.
        :param parameters: The parameters of this GoogleCloudDialogflowV2beta1QueryResult.
        :param query_text: The query_text of this GoogleCloudDialogflowV2beta1QueryResult.
        :param sentiment_analysis_result: The sentiment_analysis_result of this GoogleCloudDialogflowV2beta1QueryResult.
        :param speech_recognition_confidence: The speech_recognition_confidence of this GoogleCloudDialogflowV2beta1QueryResult.
        :param webhook_payload: The webhook_payload of this GoogleCloudDialogflowV2beta1QueryResult.
        :param webhook_source: The webhook_source of this GoogleCloudDialogflowV2beta1QueryResult.
        """
        self.openapi_types = {
            'action': str,
            'all_required_params_present': bool,
            'cancels_slot_filling': bool,
            'diagnostic_info': Dict[str, object],
            'fulfillment_messages': List[GoogleCloudDialogflowV2beta1IntentMessage],
            'fulfillment_text': str,
            'intent': GoogleCloudDialogflowV2beta1Intent,
            'intent_detection_confidence': float,
            'knowledge_answers': GoogleCloudDialogflowV2beta1KnowledgeAnswers,
            'language_code': str,
            'output_contexts': List[GoogleCloudDialogflowV2beta1Context],
            'parameters': Dict[str, object],
            'query_text': str,
            'sentiment_analysis_result': GoogleCloudDialogflowV2beta1SentimentAnalysisResult,
            'speech_recognition_confidence': float,
            'webhook_payload': Dict[str, object],
            'webhook_source': str
        }

        self.attribute_map = {
            'action': 'action',
            'all_required_params_present': 'allRequiredParamsPresent',
            'cancels_slot_filling': 'cancelsSlotFilling',
            'diagnostic_info': 'diagnosticInfo',
            'fulfillment_messages': 'fulfillmentMessages',
            'fulfillment_text': 'fulfillmentText',
            'intent': 'intent',
            'intent_detection_confidence': 'intentDetectionConfidence',
            'knowledge_answers': 'knowledgeAnswers',
            'language_code': 'languageCode',
            'output_contexts': 'outputContexts',
            'parameters': 'parameters',
            'query_text': 'queryText',
            'sentiment_analysis_result': 'sentimentAnalysisResult',
            'speech_recognition_confidence': 'speechRecognitionConfidence',
            'webhook_payload': 'webhookPayload',
            'webhook_source': 'webhookSource'
        }

        self._action = action
        self._all_required_params_present = all_required_params_present
        self._cancels_slot_filling = cancels_slot_filling
        self._diagnostic_info = diagnostic_info
        self._fulfillment_messages = fulfillment_messages
        self._fulfillment_text = fulfillment_text
        self._intent = intent
        self._intent_detection_confidence = intent_detection_confidence
        self._knowledge_answers = knowledge_answers
        self._language_code = language_code
        self._output_contexts = output_contexts
        self._parameters = parameters
        self._query_text = query_text
        self._sentiment_analysis_result = sentiment_analysis_result
        self._speech_recognition_confidence = speech_recognition_confidence
        self._webhook_payload = webhook_payload
        self._webhook_source = webhook_source

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDialogflowV2beta1QueryResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDialogflowV2beta1QueryResult of this GoogleCloudDialogflowV2beta1QueryResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def action(self):
        """Gets the action of this GoogleCloudDialogflowV2beta1QueryResult.

        The action name from the matched intent.

        :return: The action of this GoogleCloudDialogflowV2beta1QueryResult.
        :rtype: str
        """
        return self._action

    @action.setter
    def action(self, action):
        """Sets the action of this GoogleCloudDialogflowV2beta1QueryResult.

        The action name from the matched intent.

        :param action: The action of this GoogleCloudDialogflowV2beta1QueryResult.
        :type action: str
        """

        self._action = action

    @property
    def all_required_params_present(self):
        """Gets the all_required_params_present of this GoogleCloudDialogflowV2beta1QueryResult.

        This field is set to: - `false` if the matched intent has required parameters and not all of the required parameter values have been collected. - `true` if all required parameter values have been collected, or if the matched intent doesn't contain any required parameters.

        :return: The all_required_params_present of this GoogleCloudDialogflowV2beta1QueryResult.
        :rtype: bool
        """
        return self._all_required_params_present

    @all_required_params_present.setter
    def all_required_params_present(self, all_required_params_present):
        """Sets the all_required_params_present of this GoogleCloudDialogflowV2beta1QueryResult.

        This field is set to: - `false` if the matched intent has required parameters and not all of the required parameter values have been collected. - `true` if all required parameter values have been collected, or if the matched intent doesn't contain any required parameters.

        :param all_required_params_present: The all_required_params_present of this GoogleCloudDialogflowV2beta1QueryResult.
        :type all_required_params_present: bool
        """

        self._all_required_params_present = all_required_params_present

    @property
    def cancels_slot_filling(self):
        """Gets the cancels_slot_filling of this GoogleCloudDialogflowV2beta1QueryResult.

        Indicates whether the conversational query triggers a cancellation for slot filling. For more information, see the [cancel slot filling documentation](https://cloud.google.com/dialogflow/es/docs/intents-actions-parameters#cancel).

        :return: The cancels_slot_filling of this GoogleCloudDialogflowV2beta1QueryResult.
        :rtype: bool
        """
        return self._cancels_slot_filling

    @cancels_slot_filling.setter
    def cancels_slot_filling(self, cancels_slot_filling):
        """Sets the cancels_slot_filling of this GoogleCloudDialogflowV2beta1QueryResult.

        Indicates whether the conversational query triggers a cancellation for slot filling. For more information, see the [cancel slot filling documentation](https://cloud.google.com/dialogflow/es/docs/intents-actions-parameters#cancel).

        :param cancels_slot_filling: The cancels_slot_filling of this GoogleCloudDialogflowV2beta1QueryResult.
        :type cancels_slot_filling: bool
        """

        self._cancels_slot_filling = cancels_slot_filling

    @property
    def diagnostic_info(self):
        """Gets the diagnostic_info of this GoogleCloudDialogflowV2beta1QueryResult.

        Free-form diagnostic information for the associated detect intent request. The fields of this data can change without notice, so you should not write code that depends on its structure. The data may contain: - webhook call latency - webhook errors

        :return: The diagnostic_info of this GoogleCloudDialogflowV2beta1QueryResult.
        :rtype: Dict[str, object]
        """
        return self._diagnostic_info

    @diagnostic_info.setter
    def diagnostic_info(self, diagnostic_info):
        """Sets the diagnostic_info of this GoogleCloudDialogflowV2beta1QueryResult.

        Free-form diagnostic information for the associated detect intent request. The fields of this data can change without notice, so you should not write code that depends on its structure. The data may contain: - webhook call latency - webhook errors

        :param diagnostic_info: The diagnostic_info of this GoogleCloudDialogflowV2beta1QueryResult.
        :type diagnostic_info: Dict[str, object]
        """

        self._diagnostic_info = diagnostic_info

    @property
    def fulfillment_messages(self):
        """Gets the fulfillment_messages of this GoogleCloudDialogflowV2beta1QueryResult.

        The collection of rich messages to present to the user.

        :return: The fulfillment_messages of this GoogleCloudDialogflowV2beta1QueryResult.
        :rtype: List[GoogleCloudDialogflowV2beta1IntentMessage]
        """
        return self._fulfillment_messages

    @fulfillment_messages.setter
    def fulfillment_messages(self, fulfillment_messages):
        """Sets the fulfillment_messages of this GoogleCloudDialogflowV2beta1QueryResult.

        The collection of rich messages to present to the user.

        :param fulfillment_messages: The fulfillment_messages of this GoogleCloudDialogflowV2beta1QueryResult.
        :type fulfillment_messages: List[GoogleCloudDialogflowV2beta1IntentMessage]
        """

        self._fulfillment_messages = fulfillment_messages

    @property
    def fulfillment_text(self):
        """Gets the fulfillment_text of this GoogleCloudDialogflowV2beta1QueryResult.

        The text to be pronounced to the user or shown on the screen. Note: This is a legacy field, `fulfillment_messages` should be preferred.

        :return: The fulfillment_text of this GoogleCloudDialogflowV2beta1QueryResult.
        :rtype: str
        """
        return self._fulfillment_text

    @fulfillment_text.setter
    def fulfillment_text(self, fulfillment_text):
        """Sets the fulfillment_text of this GoogleCloudDialogflowV2beta1QueryResult.

        The text to be pronounced to the user or shown on the screen. Note: This is a legacy field, `fulfillment_messages` should be preferred.

        :param fulfillment_text: The fulfillment_text of this GoogleCloudDialogflowV2beta1QueryResult.
        :type fulfillment_text: str
        """

        self._fulfillment_text = fulfillment_text

    @property
    def intent(self):
        """Gets the intent of this GoogleCloudDialogflowV2beta1QueryResult.


        :return: The intent of this GoogleCloudDialogflowV2beta1QueryResult.
        :rtype: GoogleCloudDialogflowV2beta1Intent
        """
        return self._intent

    @intent.setter
    def intent(self, intent):
        """Sets the intent of this GoogleCloudDialogflowV2beta1QueryResult.


        :param intent: The intent of this GoogleCloudDialogflowV2beta1QueryResult.
        :type intent: GoogleCloudDialogflowV2beta1Intent
        """

        self._intent = intent

    @property
    def intent_detection_confidence(self):
        """Gets the intent_detection_confidence of this GoogleCloudDialogflowV2beta1QueryResult.

        The intent detection confidence. Values range from 0.0 (completely uncertain) to 1.0 (completely certain). This value is for informational purpose only and is only used to help match the best intent within the classification threshold. This value may change for the same end-user expression at any time due to a model retraining or change in implementation. If there are `multiple knowledge_answers` messages, this value is set to the greatest `knowledgeAnswers.match_confidence` value in the list.

        :return: The intent_detection_confidence of this GoogleCloudDialogflowV2beta1QueryResult.
        :rtype: float
        """
        return self._intent_detection_confidence

    @intent_detection_confidence.setter
    def intent_detection_confidence(self, intent_detection_confidence):
        """Sets the intent_detection_confidence of this GoogleCloudDialogflowV2beta1QueryResult.

        The intent detection confidence. Values range from 0.0 (completely uncertain) to 1.0 (completely certain). This value is for informational purpose only and is only used to help match the best intent within the classification threshold. This value may change for the same end-user expression at any time due to a model retraining or change in implementation. If there are `multiple knowledge_answers` messages, this value is set to the greatest `knowledgeAnswers.match_confidence` value in the list.

        :param intent_detection_confidence: The intent_detection_confidence of this GoogleCloudDialogflowV2beta1QueryResult.
        :type intent_detection_confidence: float
        """

        self._intent_detection_confidence = intent_detection_confidence

    @property
    def knowledge_answers(self):
        """Gets the knowledge_answers of this GoogleCloudDialogflowV2beta1QueryResult.


        :return: The knowledge_answers of this GoogleCloudDialogflowV2beta1QueryResult.
        :rtype: GoogleCloudDialogflowV2beta1KnowledgeAnswers
        """
        return self._knowledge_answers

    @knowledge_answers.setter
    def knowledge_answers(self, knowledge_answers):
        """Sets the knowledge_answers of this GoogleCloudDialogflowV2beta1QueryResult.


        :param knowledge_answers: The knowledge_answers of this GoogleCloudDialogflowV2beta1QueryResult.
        :type knowledge_answers: GoogleCloudDialogflowV2beta1KnowledgeAnswers
        """

        self._knowledge_answers = knowledge_answers

    @property
    def language_code(self):
        """Gets the language_code of this GoogleCloudDialogflowV2beta1QueryResult.

        The language that was triggered during intent detection. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported language codes.

        :return: The language_code of this GoogleCloudDialogflowV2beta1QueryResult.
        :rtype: str
        """
        return self._language_code

    @language_code.setter
    def language_code(self, language_code):
        """Sets the language_code of this GoogleCloudDialogflowV2beta1QueryResult.

        The language that was triggered during intent detection. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported language codes.

        :param language_code: The language_code of this GoogleCloudDialogflowV2beta1QueryResult.
        :type language_code: str
        """

        self._language_code = language_code

    @property
    def output_contexts(self):
        """Gets the output_contexts of this GoogleCloudDialogflowV2beta1QueryResult.

        The collection of output contexts. If applicable, `output_contexts.parameters` contains entries with name `.original` containing the original parameter values before the query.

        :return: The output_contexts of this GoogleCloudDialogflowV2beta1QueryResult.
        :rtype: List[GoogleCloudDialogflowV2beta1Context]
        """
        return self._output_contexts

    @output_contexts.setter
    def output_contexts(self, output_contexts):
        """Sets the output_contexts of this GoogleCloudDialogflowV2beta1QueryResult.

        The collection of output contexts. If applicable, `output_contexts.parameters` contains entries with name `.original` containing the original parameter values before the query.

        :param output_contexts: The output_contexts of this GoogleCloudDialogflowV2beta1QueryResult.
        :type output_contexts: List[GoogleCloudDialogflowV2beta1Context]
        """

        self._output_contexts = output_contexts

    @property
    def parameters(self):
        """Gets the parameters of this GoogleCloudDialogflowV2beta1QueryResult.

        The collection of extracted parameters. Depending on your protocol or client library language, this is a map, associative array, symbol table, dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs: * MapKey type: string * MapKey value: parameter name * MapValue type: If parameter's entity type is a composite entity then use map, otherwise, depending on the parameter value type, it could be one of string, number, boolean, null, list or map. * MapValue value: If parameter's entity type is a composite entity then use map from composite entity property names to property values, otherwise, use parameter value.

        :return: The parameters of this GoogleCloudDialogflowV2beta1QueryResult.
        :rtype: Dict[str, object]
        """
        return self._parameters

    @parameters.setter
    def parameters(self, parameters):
        """Sets the parameters of this GoogleCloudDialogflowV2beta1QueryResult.

        The collection of extracted parameters. Depending on your protocol or client library language, this is a map, associative array, symbol table, dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs: * MapKey type: string * MapKey value: parameter name * MapValue type: If parameter's entity type is a composite entity then use map, otherwise, depending on the parameter value type, it could be one of string, number, boolean, null, list or map. * MapValue value: If parameter's entity type is a composite entity then use map from composite entity property names to property values, otherwise, use parameter value.

        :param parameters: The parameters of this GoogleCloudDialogflowV2beta1QueryResult.
        :type parameters: Dict[str, object]
        """

        self._parameters = parameters

    @property
    def query_text(self):
        """Gets the query_text of this GoogleCloudDialogflowV2beta1QueryResult.

        The original conversational query text: - If natural language text was provided as input, `query_text` contains a copy of the input. - If natural language speech audio was provided as input, `query_text` contains the speech recognition result. If speech recognizer produced multiple alternatives, a particular one is picked. - If automatic spell correction is enabled, `query_text` will contain the corrected user input.

        :return: The query_text of this GoogleCloudDialogflowV2beta1QueryResult.
        :rtype: str
        """
        return self._query_text

    @query_text.setter
    def query_text(self, query_text):
        """Sets the query_text of this GoogleCloudDialogflowV2beta1QueryResult.

        The original conversational query text: - If natural language text was provided as input, `query_text` contains a copy of the input. - If natural language speech audio was provided as input, `query_text` contains the speech recognition result. If speech recognizer produced multiple alternatives, a particular one is picked. - If automatic spell correction is enabled, `query_text` will contain the corrected user input.

        :param query_text: The query_text of this GoogleCloudDialogflowV2beta1QueryResult.
        :type query_text: str
        """

        self._query_text = query_text

    @property
    def sentiment_analysis_result(self):
        """Gets the sentiment_analysis_result of this GoogleCloudDialogflowV2beta1QueryResult.


        :return: The sentiment_analysis_result of this GoogleCloudDialogflowV2beta1QueryResult.
        :rtype: GoogleCloudDialogflowV2beta1SentimentAnalysisResult
        """
        return self._sentiment_analysis_result

    @sentiment_analysis_result.setter
    def sentiment_analysis_result(self, sentiment_analysis_result):
        """Sets the sentiment_analysis_result of this GoogleCloudDialogflowV2beta1QueryResult.


        :param sentiment_analysis_result: The sentiment_analysis_result of this GoogleCloudDialogflowV2beta1QueryResult.
        :type sentiment_analysis_result: GoogleCloudDialogflowV2beta1SentimentAnalysisResult
        """

        self._sentiment_analysis_result = sentiment_analysis_result

    @property
    def speech_recognition_confidence(self):
        """Gets the speech_recognition_confidence of this GoogleCloudDialogflowV2beta1QueryResult.

        The Speech recognition confidence between 0.0 and 1.0. A higher number indicates an estimated greater likelihood that the recognized words are correct. The default of 0.0 is a sentinel value indicating that confidence was not set. This field is not guaranteed to be accurate or set. In particular this field isn't set for StreamingDetectIntent since the streaming endpoint has separate confidence estimates per portion of the audio in StreamingRecognitionResult.

        :return: The speech_recognition_confidence of this GoogleCloudDialogflowV2beta1QueryResult.
        :rtype: float
        """
        return self._speech_recognition_confidence

    @speech_recognition_confidence.setter
    def speech_recognition_confidence(self, speech_recognition_confidence):
        """Sets the speech_recognition_confidence of this GoogleCloudDialogflowV2beta1QueryResult.

        The Speech recognition confidence between 0.0 and 1.0. A higher number indicates an estimated greater likelihood that the recognized words are correct. The default of 0.0 is a sentinel value indicating that confidence was not set. This field is not guaranteed to be accurate or set. In particular this field isn't set for StreamingDetectIntent since the streaming endpoint has separate confidence estimates per portion of the audio in StreamingRecognitionResult.

        :param speech_recognition_confidence: The speech_recognition_confidence of this GoogleCloudDialogflowV2beta1QueryResult.
        :type speech_recognition_confidence: float
        """

        self._speech_recognition_confidence = speech_recognition_confidence

    @property
    def webhook_payload(self):
        """Gets the webhook_payload of this GoogleCloudDialogflowV2beta1QueryResult.

        If the query was fulfilled by a webhook call, this field is set to the value of the `payload` field returned in the webhook response.

        :return: The webhook_payload of this GoogleCloudDialogflowV2beta1QueryResult.
        :rtype: Dict[str, object]
        """
        return self._webhook_payload

    @webhook_payload.setter
    def webhook_payload(self, webhook_payload):
        """Sets the webhook_payload of this GoogleCloudDialogflowV2beta1QueryResult.

        If the query was fulfilled by a webhook call, this field is set to the value of the `payload` field returned in the webhook response.

        :param webhook_payload: The webhook_payload of this GoogleCloudDialogflowV2beta1QueryResult.
        :type webhook_payload: Dict[str, object]
        """

        self._webhook_payload = webhook_payload

    @property
    def webhook_source(self):
        """Gets the webhook_source of this GoogleCloudDialogflowV2beta1QueryResult.

        If the query was fulfilled by a webhook call, this field is set to the value of the `source` field returned in the webhook response.

        :return: The webhook_source of this GoogleCloudDialogflowV2beta1QueryResult.
        :rtype: str
        """
        return self._webhook_source

    @webhook_source.setter
    def webhook_source(self, webhook_source):
        """Sets the webhook_source of this GoogleCloudDialogflowV2beta1QueryResult.

        If the query was fulfilled by a webhook call, this field is set to the value of the `source` field returned in the webhook response.

        :param webhook_source: The webhook_source of this GoogleCloudDialogflowV2beta1QueryResult.
        :type webhook_source: str
        """

        self._webhook_source = webhook_source
