/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudDialogflowCxV3beta1AdvancedSettings from './GoogleCloudDialogflowCxV3beta1AdvancedSettings';
import GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCases from './GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCases';
import GoogleCloudDialogflowCxV3beta1FulfillmentSetParameterAction from './GoogleCloudDialogflowCxV3beta1FulfillmentSetParameterAction';
import GoogleCloudDialogflowCxV3beta1ResponseMessage from './GoogleCloudDialogflowCxV3beta1ResponseMessage';

/**
 * The GoogleCloudDialogflowCxV3beta1Fulfillment model module.
 * @module model/GoogleCloudDialogflowCxV3beta1Fulfillment
 * @version v3beta1
 */
class GoogleCloudDialogflowCxV3beta1Fulfillment {
    /**
     * Constructs a new <code>GoogleCloudDialogflowCxV3beta1Fulfillment</code>.
     * A fulfillment can do one or more of the following actions at the same time: * Generate rich message responses. * Set parameter values. * Call the webhook. Fulfillments can be called at various stages in the Page or Form lifecycle. For example, when a DetectIntentRequest drives a session to enter a new page, the page&#39;s entry fulfillment can add a static response to the QueryResult in the returning DetectIntentResponse, call the webhook (for example, to load user data from a database), or both.
     * @alias module:model/GoogleCloudDialogflowCxV3beta1Fulfillment
     */
    constructor() { 
        
        GoogleCloudDialogflowCxV3beta1Fulfillment.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDialogflowCxV3beta1Fulfillment</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDialogflowCxV3beta1Fulfillment} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDialogflowCxV3beta1Fulfillment} The populated <code>GoogleCloudDialogflowCxV3beta1Fulfillment</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDialogflowCxV3beta1Fulfillment();

            if (data.hasOwnProperty('advancedSettings')) {
                obj['advancedSettings'] = GoogleCloudDialogflowCxV3beta1AdvancedSettings.constructFromObject(data['advancedSettings']);
            }
            if (data.hasOwnProperty('conditionalCases')) {
                obj['conditionalCases'] = ApiClient.convertToType(data['conditionalCases'], [GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCases]);
            }
            if (data.hasOwnProperty('enableGenerativeFallback')) {
                obj['enableGenerativeFallback'] = ApiClient.convertToType(data['enableGenerativeFallback'], 'Boolean');
            }
            if (data.hasOwnProperty('messages')) {
                obj['messages'] = ApiClient.convertToType(data['messages'], [GoogleCloudDialogflowCxV3beta1ResponseMessage]);
            }
            if (data.hasOwnProperty('returnPartialResponses')) {
                obj['returnPartialResponses'] = ApiClient.convertToType(data['returnPartialResponses'], 'Boolean');
            }
            if (data.hasOwnProperty('setParameterActions')) {
                obj['setParameterActions'] = ApiClient.convertToType(data['setParameterActions'], [GoogleCloudDialogflowCxV3beta1FulfillmentSetParameterAction]);
            }
            if (data.hasOwnProperty('tag')) {
                obj['tag'] = ApiClient.convertToType(data['tag'], 'String');
            }
            if (data.hasOwnProperty('webhook')) {
                obj['webhook'] = ApiClient.convertToType(data['webhook'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDialogflowCxV3beta1Fulfillment</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDialogflowCxV3beta1Fulfillment</code>.
     */
    static validateJSON(data) {
        // validate the optional field `advancedSettings`
        if (data['advancedSettings']) { // data not null
          GoogleCloudDialogflowCxV3beta1AdvancedSettings.validateJSON(data['advancedSettings']);
        }
        if (data['conditionalCases']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['conditionalCases'])) {
                throw new Error("Expected the field `conditionalCases` to be an array in the JSON data but got " + data['conditionalCases']);
            }
            // validate the optional field `conditionalCases` (array)
            for (const item of data['conditionalCases']) {
                GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCases.validateJSON(item);
            };
        }
        if (data['messages']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['messages'])) {
                throw new Error("Expected the field `messages` to be an array in the JSON data but got " + data['messages']);
            }
            // validate the optional field `messages` (array)
            for (const item of data['messages']) {
                GoogleCloudDialogflowCxV3beta1ResponseMessage.validateJSON(item);
            };
        }
        if (data['setParameterActions']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['setParameterActions'])) {
                throw new Error("Expected the field `setParameterActions` to be an array in the JSON data but got " + data['setParameterActions']);
            }
            // validate the optional field `setParameterActions` (array)
            for (const item of data['setParameterActions']) {
                GoogleCloudDialogflowCxV3beta1FulfillmentSetParameterAction.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['tag'] && !(typeof data['tag'] === 'string' || data['tag'] instanceof String)) {
            throw new Error("Expected the field `tag` to be a primitive type in the JSON string but got " + data['tag']);
        }
        // ensure the json data is a string
        if (data['webhook'] && !(typeof data['webhook'] === 'string' || data['webhook'] instanceof String)) {
            throw new Error("Expected the field `webhook` to be a primitive type in the JSON string but got " + data['webhook']);
        }

        return true;
    }


}



/**
 * @member {module:model/GoogleCloudDialogflowCxV3beta1AdvancedSettings} advancedSettings
 */
GoogleCloudDialogflowCxV3beta1Fulfillment.prototype['advancedSettings'] = undefined;

/**
 * Conditional cases for this fulfillment.
 * @member {Array.<module:model/GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCases>} conditionalCases
 */
GoogleCloudDialogflowCxV3beta1Fulfillment.prototype['conditionalCases'] = undefined;

/**
 * If the flag is true, the agent will utilize LLM to generate a text response. If LLM generation fails, the defined responses in the fulfillment will be respected. This flag is only useful for fulfillments associated with no-match event handlers.
 * @member {Boolean} enableGenerativeFallback
 */
GoogleCloudDialogflowCxV3beta1Fulfillment.prototype['enableGenerativeFallback'] = undefined;

/**
 * The list of rich message responses to present to the user.
 * @member {Array.<module:model/GoogleCloudDialogflowCxV3beta1ResponseMessage>} messages
 */
GoogleCloudDialogflowCxV3beta1Fulfillment.prototype['messages'] = undefined;

/**
 * Whether Dialogflow should return currently queued fulfillment response messages in streaming APIs. If a webhook is specified, it happens before Dialogflow invokes webhook. Warning: 1) This flag only affects streaming API. Responses are still queued and returned once in non-streaming API. 2) The flag can be enabled in any fulfillment but only the first 3 partial responses will be returned. You may only want to apply it to fulfillments that have slow webhooks.
 * @member {Boolean} returnPartialResponses
 */
GoogleCloudDialogflowCxV3beta1Fulfillment.prototype['returnPartialResponses'] = undefined;

/**
 * Set parameter values before executing the webhook.
 * @member {Array.<module:model/GoogleCloudDialogflowCxV3beta1FulfillmentSetParameterAction>} setParameterActions
 */
GoogleCloudDialogflowCxV3beta1Fulfillment.prototype['setParameterActions'] = undefined;

/**
 * The value of this field will be populated in the WebhookRequest `fulfillmentInfo.tag` field by Dialogflow when the associated webhook is called. The tag is typically used by the webhook service to identify which fulfillment is being called, but it could be used for other purposes. This field is required if `webhook` is specified.
 * @member {String} tag
 */
GoogleCloudDialogflowCxV3beta1Fulfillment.prototype['tag'] = undefined;

/**
 * The webhook to call. Format: `projects//locations//agents//webhooks/`.
 * @member {String} webhook
 */
GoogleCloudDialogflowCxV3beta1Fulfillment.prototype['webhook'] = undefined;






export default GoogleCloudDialogflowCxV3beta1Fulfillment;

