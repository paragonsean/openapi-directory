/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudDialogflowV2EntityTypeEntity model module.
 * @module model/GoogleCloudDialogflowV2EntityTypeEntity
 * @version v3beta1
 */
class GoogleCloudDialogflowV2EntityTypeEntity {
    /**
     * Constructs a new <code>GoogleCloudDialogflowV2EntityTypeEntity</code>.
     * An **entity entry** for an associated entity type.
     * @alias module:model/GoogleCloudDialogflowV2EntityTypeEntity
     */
    constructor() { 
        
        GoogleCloudDialogflowV2EntityTypeEntity.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDialogflowV2EntityTypeEntity</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDialogflowV2EntityTypeEntity} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDialogflowV2EntityTypeEntity} The populated <code>GoogleCloudDialogflowV2EntityTypeEntity</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDialogflowV2EntityTypeEntity();

            if (data.hasOwnProperty('synonyms')) {
                obj['synonyms'] = ApiClient.convertToType(data['synonyms'], ['String']);
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDialogflowV2EntityTypeEntity</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDialogflowV2EntityTypeEntity</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['synonyms'])) {
            throw new Error("Expected the field `synonyms` to be an array in the JSON data but got " + data['synonyms']);
        }
        // ensure the json data is a string
        if (data['value'] && !(typeof data['value'] === 'string' || data['value'] instanceof String)) {
            throw new Error("Expected the field `value` to be a primitive type in the JSON string but got " + data['value']);
        }

        return true;
    }


}



/**
 * Required. A collection of value synonyms. For example, if the entity type is *vegetable*, and `value` is *scallions*, a synonym could be *green onions*. For `KIND_LIST` entity types: * This collection must contain exactly one synonym equal to `value`.
 * @member {Array.<String>} synonyms
 */
GoogleCloudDialogflowV2EntityTypeEntity.prototype['synonyms'] = undefined;

/**
 * Required. The primary value associated with this entity entry. For example, if the entity type is *vegetable*, the value could be *scallions*. For `KIND_MAP` entity types: * A reference value to be used in place of synonyms. For `KIND_LIST` entity types: * A string that can contain references to other entity types (with or without aliases).
 * @member {String} value
 */
GoogleCloudDialogflowV2EntityTypeEntity.prototype['value'] = undefined;






export default GoogleCloudDialogflowV2EntityTypeEntity;

