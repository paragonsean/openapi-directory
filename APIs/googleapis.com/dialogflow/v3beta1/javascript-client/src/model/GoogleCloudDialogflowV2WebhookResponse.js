/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudDialogflowV2Context from './GoogleCloudDialogflowV2Context';
import GoogleCloudDialogflowV2EventInput from './GoogleCloudDialogflowV2EventInput';
import GoogleCloudDialogflowV2IntentMessage from './GoogleCloudDialogflowV2IntentMessage';
import GoogleCloudDialogflowV2SessionEntityType from './GoogleCloudDialogflowV2SessionEntityType';

/**
 * The GoogleCloudDialogflowV2WebhookResponse model module.
 * @module model/GoogleCloudDialogflowV2WebhookResponse
 * @version v3beta1
 */
class GoogleCloudDialogflowV2WebhookResponse {
    /**
     * Constructs a new <code>GoogleCloudDialogflowV2WebhookResponse</code>.
     * The response message for a webhook call. This response is validated by the Dialogflow server. If validation fails, an error will be returned in the QueryResult.diagnostic_info field. Setting JSON fields to an empty value with the wrong type is a common error. To avoid this error: - Use &#x60;\&quot;\&quot;&#x60; for empty strings - Use &#x60;{}&#x60; or &#x60;null&#x60; for empty objects - Use &#x60;[]&#x60; or &#x60;null&#x60; for empty arrays For more information, see the [Protocol Buffers Language Guide](https://developers.google.com/protocol-buffers/docs/proto3#json).
     * @alias module:model/GoogleCloudDialogflowV2WebhookResponse
     */
    constructor() { 
        
        GoogleCloudDialogflowV2WebhookResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDialogflowV2WebhookResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDialogflowV2WebhookResponse} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDialogflowV2WebhookResponse} The populated <code>GoogleCloudDialogflowV2WebhookResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDialogflowV2WebhookResponse();

            if (data.hasOwnProperty('followupEventInput')) {
                obj['followupEventInput'] = GoogleCloudDialogflowV2EventInput.constructFromObject(data['followupEventInput']);
            }
            if (data.hasOwnProperty('fulfillmentMessages')) {
                obj['fulfillmentMessages'] = ApiClient.convertToType(data['fulfillmentMessages'], [GoogleCloudDialogflowV2IntentMessage]);
            }
            if (data.hasOwnProperty('fulfillmentText')) {
                obj['fulfillmentText'] = ApiClient.convertToType(data['fulfillmentText'], 'String');
            }
            if (data.hasOwnProperty('outputContexts')) {
                obj['outputContexts'] = ApiClient.convertToType(data['outputContexts'], [GoogleCloudDialogflowV2Context]);
            }
            if (data.hasOwnProperty('payload')) {
                obj['payload'] = ApiClient.convertToType(data['payload'], {'String': Object});
            }
            if (data.hasOwnProperty('sessionEntityTypes')) {
                obj['sessionEntityTypes'] = ApiClient.convertToType(data['sessionEntityTypes'], [GoogleCloudDialogflowV2SessionEntityType]);
            }
            if (data.hasOwnProperty('source')) {
                obj['source'] = ApiClient.convertToType(data['source'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDialogflowV2WebhookResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDialogflowV2WebhookResponse</code>.
     */
    static validateJSON(data) {
        // validate the optional field `followupEventInput`
        if (data['followupEventInput']) { // data not null
          GoogleCloudDialogflowV2EventInput.validateJSON(data['followupEventInput']);
        }
        if (data['fulfillmentMessages']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['fulfillmentMessages'])) {
                throw new Error("Expected the field `fulfillmentMessages` to be an array in the JSON data but got " + data['fulfillmentMessages']);
            }
            // validate the optional field `fulfillmentMessages` (array)
            for (const item of data['fulfillmentMessages']) {
                GoogleCloudDialogflowV2IntentMessage.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['fulfillmentText'] && !(typeof data['fulfillmentText'] === 'string' || data['fulfillmentText'] instanceof String)) {
            throw new Error("Expected the field `fulfillmentText` to be a primitive type in the JSON string but got " + data['fulfillmentText']);
        }
        if (data['outputContexts']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['outputContexts'])) {
                throw new Error("Expected the field `outputContexts` to be an array in the JSON data but got " + data['outputContexts']);
            }
            // validate the optional field `outputContexts` (array)
            for (const item of data['outputContexts']) {
                GoogleCloudDialogflowV2Context.validateJSON(item);
            };
        }
        if (data['sessionEntityTypes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['sessionEntityTypes'])) {
                throw new Error("Expected the field `sessionEntityTypes` to be an array in the JSON data but got " + data['sessionEntityTypes']);
            }
            // validate the optional field `sessionEntityTypes` (array)
            for (const item of data['sessionEntityTypes']) {
                GoogleCloudDialogflowV2SessionEntityType.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['source'] && !(typeof data['source'] === 'string' || data['source'] instanceof String)) {
            throw new Error("Expected the field `source` to be a primitive type in the JSON string but got " + data['source']);
        }

        return true;
    }


}



/**
 * @member {module:model/GoogleCloudDialogflowV2EventInput} followupEventInput
 */
GoogleCloudDialogflowV2WebhookResponse.prototype['followupEventInput'] = undefined;

/**
 * Optional. The rich response messages intended for the end-user. When provided, Dialogflow uses this field to populate QueryResult.fulfillment_messages sent to the integration or API caller.
 * @member {Array.<module:model/GoogleCloudDialogflowV2IntentMessage>} fulfillmentMessages
 */
GoogleCloudDialogflowV2WebhookResponse.prototype['fulfillmentMessages'] = undefined;

/**
 * Optional. The text response message intended for the end-user. It is recommended to use `fulfillment_messages.text.text[0]` instead. When provided, Dialogflow uses this field to populate QueryResult.fulfillment_text sent to the integration or API caller.
 * @member {String} fulfillmentText
 */
GoogleCloudDialogflowV2WebhookResponse.prototype['fulfillmentText'] = undefined;

/**
 * Optional. The collection of output contexts that will overwrite currently active contexts for the session and reset their lifespans. When provided, Dialogflow uses this field to populate QueryResult.output_contexts sent to the integration or API caller.
 * @member {Array.<module:model/GoogleCloudDialogflowV2Context>} outputContexts
 */
GoogleCloudDialogflowV2WebhookResponse.prototype['outputContexts'] = undefined;

/**
 * Optional. This field can be used to pass custom data from your webhook to the integration or API caller. Arbitrary JSON objects are supported. When provided, Dialogflow uses this field to populate QueryResult.webhook_payload sent to the integration or API caller. This field is also used by the [Google Assistant integration](https://cloud.google.com/dialogflow/docs/integrations/aog) for rich response messages. See the format definition at [Google Assistant Dialogflow webhook format](https://developers.google.com/assistant/actions/build/json/dialogflow-webhook-json)
 * @member {Object.<String, Object>} payload
 */
GoogleCloudDialogflowV2WebhookResponse.prototype['payload'] = undefined;

/**
 * Optional. Additional session entity types to replace or extend developer entity types with. The entity synonyms apply to all languages and persist for the session. Setting this data from a webhook overwrites the session entity types that have been set using `detectIntent`, `streamingDetectIntent` or SessionEntityType management methods.
 * @member {Array.<module:model/GoogleCloudDialogflowV2SessionEntityType>} sessionEntityTypes
 */
GoogleCloudDialogflowV2WebhookResponse.prototype['sessionEntityTypes'] = undefined;

/**
 * Optional. A custom field used to identify the webhook source. Arbitrary strings are supported. When provided, Dialogflow uses this field to populate QueryResult.webhook_source sent to the integration or API caller.
 * @member {String} source
 */
GoogleCloudDialogflowV2WebhookResponse.prototype['source'] = undefined;






export default GoogleCloudDialogflowV2WebhookResponse;

