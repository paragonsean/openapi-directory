/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudDialogflowV2beta1Sentiment from './GoogleCloudDialogflowV2beta1Sentiment';

/**
 * The GoogleCloudDialogflowV2beta1SentimentAnalysisResult model module.
 * @module model/GoogleCloudDialogflowV2beta1SentimentAnalysisResult
 * @version v3beta1
 */
class GoogleCloudDialogflowV2beta1SentimentAnalysisResult {
    /**
     * Constructs a new <code>GoogleCloudDialogflowV2beta1SentimentAnalysisResult</code>.
     * The result of sentiment analysis. Sentiment analysis inspects user input and identifies the prevailing subjective opinion, especially to determine a user&#39;s attitude as positive, negative, or neutral. For Participants.DetectIntent, it needs to be configured in DetectIntentRequest.query_params. For Participants.StreamingDetectIntent, it needs to be configured in StreamingDetectIntentRequest.query_params. And for Participants.AnalyzeContent and Participants.StreamingAnalyzeContent, it needs to be configured in ConversationProfile.human_agent_assistant_config
     * @alias module:model/GoogleCloudDialogflowV2beta1SentimentAnalysisResult
     */
    constructor() { 
        
        GoogleCloudDialogflowV2beta1SentimentAnalysisResult.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDialogflowV2beta1SentimentAnalysisResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDialogflowV2beta1SentimentAnalysisResult} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDialogflowV2beta1SentimentAnalysisResult} The populated <code>GoogleCloudDialogflowV2beta1SentimentAnalysisResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDialogflowV2beta1SentimentAnalysisResult();

            if (data.hasOwnProperty('queryTextSentiment')) {
                obj['queryTextSentiment'] = GoogleCloudDialogflowV2beta1Sentiment.constructFromObject(data['queryTextSentiment']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDialogflowV2beta1SentimentAnalysisResult</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDialogflowV2beta1SentimentAnalysisResult</code>.
     */
    static validateJSON(data) {
        // validate the optional field `queryTextSentiment`
        if (data['queryTextSentiment']) { // data not null
          GoogleCloudDialogflowV2beta1Sentiment.validateJSON(data['queryTextSentiment']);
        }

        return true;
    }


}



/**
 * @member {module:model/GoogleCloudDialogflowV2beta1Sentiment} queryTextSentiment
 */
GoogleCloudDialogflowV2beta1SentimentAnalysisResult.prototype['queryTextSentiment'] = undefined;






export default GoogleCloudDialogflowV2beta1SentimentAnalysisResult;

