/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudDialogflowCxV3beta1Match from './GoogleCloudDialogflowCxV3beta1Match';
import GoogleCloudDialogflowCxV3beta1Page from './GoogleCloudDialogflowCxV3beta1Page';

/**
 * The GoogleCloudDialogflowCxV3beta1MatchIntentResponse model module.
 * @module model/GoogleCloudDialogflowCxV3beta1MatchIntentResponse
 * @version v3beta1
 */
class GoogleCloudDialogflowCxV3beta1MatchIntentResponse {
    /**
     * Constructs a new <code>GoogleCloudDialogflowCxV3beta1MatchIntentResponse</code>.
     * Response of MatchIntent.
     * @alias module:model/GoogleCloudDialogflowCxV3beta1MatchIntentResponse
     */
    constructor() { 
        
        GoogleCloudDialogflowCxV3beta1MatchIntentResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDialogflowCxV3beta1MatchIntentResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDialogflowCxV3beta1MatchIntentResponse} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDialogflowCxV3beta1MatchIntentResponse} The populated <code>GoogleCloudDialogflowCxV3beta1MatchIntentResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDialogflowCxV3beta1MatchIntentResponse();

            if (data.hasOwnProperty('currentPage')) {
                obj['currentPage'] = GoogleCloudDialogflowCxV3beta1Page.constructFromObject(data['currentPage']);
            }
            if (data.hasOwnProperty('matches')) {
                obj['matches'] = ApiClient.convertToType(data['matches'], [GoogleCloudDialogflowCxV3beta1Match]);
            }
            if (data.hasOwnProperty('text')) {
                obj['text'] = ApiClient.convertToType(data['text'], 'String');
            }
            if (data.hasOwnProperty('transcript')) {
                obj['transcript'] = ApiClient.convertToType(data['transcript'], 'String');
            }
            if (data.hasOwnProperty('triggerEvent')) {
                obj['triggerEvent'] = ApiClient.convertToType(data['triggerEvent'], 'String');
            }
            if (data.hasOwnProperty('triggerIntent')) {
                obj['triggerIntent'] = ApiClient.convertToType(data['triggerIntent'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDialogflowCxV3beta1MatchIntentResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDialogflowCxV3beta1MatchIntentResponse</code>.
     */
    static validateJSON(data) {
        // validate the optional field `currentPage`
        if (data['currentPage']) { // data not null
          GoogleCloudDialogflowCxV3beta1Page.validateJSON(data['currentPage']);
        }
        if (data['matches']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['matches'])) {
                throw new Error("Expected the field `matches` to be an array in the JSON data but got " + data['matches']);
            }
            // validate the optional field `matches` (array)
            for (const item of data['matches']) {
                GoogleCloudDialogflowCxV3beta1Match.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['text'] && !(typeof data['text'] === 'string' || data['text'] instanceof String)) {
            throw new Error("Expected the field `text` to be a primitive type in the JSON string but got " + data['text']);
        }
        // ensure the json data is a string
        if (data['transcript'] && !(typeof data['transcript'] === 'string' || data['transcript'] instanceof String)) {
            throw new Error("Expected the field `transcript` to be a primitive type in the JSON string but got " + data['transcript']);
        }
        // ensure the json data is a string
        if (data['triggerEvent'] && !(typeof data['triggerEvent'] === 'string' || data['triggerEvent'] instanceof String)) {
            throw new Error("Expected the field `triggerEvent` to be a primitive type in the JSON string but got " + data['triggerEvent']);
        }
        // ensure the json data is a string
        if (data['triggerIntent'] && !(typeof data['triggerIntent'] === 'string' || data['triggerIntent'] instanceof String)) {
            throw new Error("Expected the field `triggerIntent` to be a primitive type in the JSON string but got " + data['triggerIntent']);
        }

        return true;
    }


}



/**
 * @member {module:model/GoogleCloudDialogflowCxV3beta1Page} currentPage
 */
GoogleCloudDialogflowCxV3beta1MatchIntentResponse.prototype['currentPage'] = undefined;

/**
 * Match results, if more than one, ordered descendingly by the confidence we have that the particular intent matches the query.
 * @member {Array.<module:model/GoogleCloudDialogflowCxV3beta1Match>} matches
 */
GoogleCloudDialogflowCxV3beta1MatchIntentResponse.prototype['matches'] = undefined;

/**
 * If natural language text was provided as input, this field will contain a copy of the text.
 * @member {String} text
 */
GoogleCloudDialogflowCxV3beta1MatchIntentResponse.prototype['text'] = undefined;

/**
 * If natural language speech audio was provided as input, this field will contain the transcript for the audio.
 * @member {String} transcript
 */
GoogleCloudDialogflowCxV3beta1MatchIntentResponse.prototype['transcript'] = undefined;

/**
 * If an event was provided as input, this field will contain a copy of the event name.
 * @member {String} triggerEvent
 */
GoogleCloudDialogflowCxV3beta1MatchIntentResponse.prototype['triggerEvent'] = undefined;

/**
 * If an intent was provided as input, this field will contain a copy of the intent identifier. Format: `projects//locations//agents//intents/`.
 * @member {String} triggerIntent
 */
GoogleCloudDialogflowCxV3beta1MatchIntentResponse.prototype['triggerIntent'] = undefined;






export default GoogleCloudDialogflowCxV3beta1MatchIntentResponse;

