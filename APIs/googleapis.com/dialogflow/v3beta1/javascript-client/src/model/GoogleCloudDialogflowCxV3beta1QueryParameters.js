/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudDialogflowCxV3beta1SearchConfig from './GoogleCloudDialogflowCxV3beta1SearchConfig';
import GoogleCloudDialogflowCxV3beta1SessionEntityType from './GoogleCloudDialogflowCxV3beta1SessionEntityType';
import GoogleTypeLatLng from './GoogleTypeLatLng';

/**
 * The GoogleCloudDialogflowCxV3beta1QueryParameters model module.
 * @module model/GoogleCloudDialogflowCxV3beta1QueryParameters
 * @version v3beta1
 */
class GoogleCloudDialogflowCxV3beta1QueryParameters {
    /**
     * Constructs a new <code>GoogleCloudDialogflowCxV3beta1QueryParameters</code>.
     * Represents the parameters of a conversational query.
     * @alias module:model/GoogleCloudDialogflowCxV3beta1QueryParameters
     */
    constructor() { 
        
        GoogleCloudDialogflowCxV3beta1QueryParameters.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDialogflowCxV3beta1QueryParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDialogflowCxV3beta1QueryParameters} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDialogflowCxV3beta1QueryParameters} The populated <code>GoogleCloudDialogflowCxV3beta1QueryParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDialogflowCxV3beta1QueryParameters();

            if (data.hasOwnProperty('analyzeQueryTextSentiment')) {
                obj['analyzeQueryTextSentiment'] = ApiClient.convertToType(data['analyzeQueryTextSentiment'], 'Boolean');
            }
            if (data.hasOwnProperty('channel')) {
                obj['channel'] = ApiClient.convertToType(data['channel'], 'String');
            }
            if (data.hasOwnProperty('currentPage')) {
                obj['currentPage'] = ApiClient.convertToType(data['currentPage'], 'String');
            }
            if (data.hasOwnProperty('disableWebhook')) {
                obj['disableWebhook'] = ApiClient.convertToType(data['disableWebhook'], 'Boolean');
            }
            if (data.hasOwnProperty('endUserMetadata')) {
                obj['endUserMetadata'] = ApiClient.convertToType(data['endUserMetadata'], {'String': Object});
            }
            if (data.hasOwnProperty('flowVersions')) {
                obj['flowVersions'] = ApiClient.convertToType(data['flowVersions'], ['String']);
            }
            if (data.hasOwnProperty('geoLocation')) {
                obj['geoLocation'] = GoogleTypeLatLng.constructFromObject(data['geoLocation']);
            }
            if (data.hasOwnProperty('parameters')) {
                obj['parameters'] = ApiClient.convertToType(data['parameters'], {'String': Object});
            }
            if (data.hasOwnProperty('payload')) {
                obj['payload'] = ApiClient.convertToType(data['payload'], {'String': Object});
            }
            if (data.hasOwnProperty('searchConfig')) {
                obj['searchConfig'] = GoogleCloudDialogflowCxV3beta1SearchConfig.constructFromObject(data['searchConfig']);
            }
            if (data.hasOwnProperty('sessionEntityTypes')) {
                obj['sessionEntityTypes'] = ApiClient.convertToType(data['sessionEntityTypes'], [GoogleCloudDialogflowCxV3beta1SessionEntityType]);
            }
            if (data.hasOwnProperty('sessionTtl')) {
                obj['sessionTtl'] = ApiClient.convertToType(data['sessionTtl'], 'String');
            }
            if (data.hasOwnProperty('timeZone')) {
                obj['timeZone'] = ApiClient.convertToType(data['timeZone'], 'String');
            }
            if (data.hasOwnProperty('webhookHeaders')) {
                obj['webhookHeaders'] = ApiClient.convertToType(data['webhookHeaders'], {'String': 'String'});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDialogflowCxV3beta1QueryParameters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDialogflowCxV3beta1QueryParameters</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['channel'] && !(typeof data['channel'] === 'string' || data['channel'] instanceof String)) {
            throw new Error("Expected the field `channel` to be a primitive type in the JSON string but got " + data['channel']);
        }
        // ensure the json data is a string
        if (data['currentPage'] && !(typeof data['currentPage'] === 'string' || data['currentPage'] instanceof String)) {
            throw new Error("Expected the field `currentPage` to be a primitive type in the JSON string but got " + data['currentPage']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['flowVersions'])) {
            throw new Error("Expected the field `flowVersions` to be an array in the JSON data but got " + data['flowVersions']);
        }
        // validate the optional field `geoLocation`
        if (data['geoLocation']) { // data not null
          GoogleTypeLatLng.validateJSON(data['geoLocation']);
        }
        // validate the optional field `searchConfig`
        if (data['searchConfig']) { // data not null
          GoogleCloudDialogflowCxV3beta1SearchConfig.validateJSON(data['searchConfig']);
        }
        if (data['sessionEntityTypes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['sessionEntityTypes'])) {
                throw new Error("Expected the field `sessionEntityTypes` to be an array in the JSON data but got " + data['sessionEntityTypes']);
            }
            // validate the optional field `sessionEntityTypes` (array)
            for (const item of data['sessionEntityTypes']) {
                GoogleCloudDialogflowCxV3beta1SessionEntityType.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['sessionTtl'] && !(typeof data['sessionTtl'] === 'string' || data['sessionTtl'] instanceof String)) {
            throw new Error("Expected the field `sessionTtl` to be a primitive type in the JSON string but got " + data['sessionTtl']);
        }
        // ensure the json data is a string
        if (data['timeZone'] && !(typeof data['timeZone'] === 'string' || data['timeZone'] instanceof String)) {
            throw new Error("Expected the field `timeZone` to be a primitive type in the JSON string but got " + data['timeZone']);
        }

        return true;
    }


}



/**
 * Configures whether sentiment analysis should be performed. If not provided, sentiment analysis is not performed.
 * @member {Boolean} analyzeQueryTextSentiment
 */
GoogleCloudDialogflowCxV3beta1QueryParameters.prototype['analyzeQueryTextSentiment'] = undefined;

/**
 * The channel which this query is for. If specified, only the ResponseMessage associated with the channel will be returned. If no ResponseMessage is associated with the channel, it falls back to the ResponseMessage with unspecified channel. If unspecified, the ResponseMessage with unspecified channel will be returned.
 * @member {String} channel
 */
GoogleCloudDialogflowCxV3beta1QueryParameters.prototype['channel'] = undefined;

/**
 * The unique identifier of the page to override the current page in the session. Format: `projects//locations//agents//flows//pages/`. If `current_page` is specified, the previous state of the session will be ignored by Dialogflow, including the previous page and the previous session parameters. In most cases, current_page and parameters should be configured together to direct a session to a specific state.
 * @member {String} currentPage
 */
GoogleCloudDialogflowCxV3beta1QueryParameters.prototype['currentPage'] = undefined;

/**
 * Whether to disable webhook calls for this request.
 * @member {Boolean} disableWebhook
 */
GoogleCloudDialogflowCxV3beta1QueryParameters.prototype['disableWebhook'] = undefined;

/**
 * Optional. Information about the end-user to improve the relevance and accuracy of generative answers. This will be interpreted and used by a language model, so, for good results, the data should be self-descriptive, and in a simple structure. Example: ```json { \"subscription plan\": \"Business Premium Plus\", \"devices owned\": [ {\"model\": \"Google Pixel 7\"}, {\"model\": \"Google Pixel Tablet\"} ] } ```
 * @member {Object.<String, Object>} endUserMetadata
 */
GoogleCloudDialogflowCxV3beta1QueryParameters.prototype['endUserMetadata'] = undefined;

/**
 * A list of flow versions to override for the request. Format: `projects//locations//agents//flows//versions/`. If version 1 of flow X is included in this list, the traffic of flow X will go through version 1 regardless of the version configuration in the environment. Each flow can have at most one version specified in this list.
 * @member {Array.<String>} flowVersions
 */
GoogleCloudDialogflowCxV3beta1QueryParameters.prototype['flowVersions'] = undefined;

/**
 * @member {module:model/GoogleTypeLatLng} geoLocation
 */
GoogleCloudDialogflowCxV3beta1QueryParameters.prototype['geoLocation'] = undefined;

/**
 * Additional parameters to be put into session parameters. To remove a parameter from the session, clients should explicitly set the parameter value to null. You can reference the session parameters in the agent with the following format: $session.params.parameter-id. Depending on your protocol or client library language, this is a map, associative array, symbol table, dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs: * MapKey type: string * MapKey value: parameter name * MapValue type: If parameter's entity type is a composite entity then use map, otherwise, depending on the parameter value type, it could be one of string, number, boolean, null, list or map. * MapValue value: If parameter's entity type is a composite entity then use map from composite entity property names to property values, otherwise, use parameter value.
 * @member {Object.<String, Object>} parameters
 */
GoogleCloudDialogflowCxV3beta1QueryParameters.prototype['parameters'] = undefined;

/**
 * This field can be used to pass custom data into the webhook associated with the agent. Arbitrary JSON objects are supported. Some integrations that query a Dialogflow agent may provide additional information in the payload. In particular, for the Dialogflow Phone Gateway integration, this field has the form: ``` { \"telephony\": { \"caller_id\": \"+18558363987\" } } ```
 * @member {Object.<String, Object>} payload
 */
GoogleCloudDialogflowCxV3beta1QueryParameters.prototype['payload'] = undefined;

/**
 * @member {module:model/GoogleCloudDialogflowCxV3beta1SearchConfig} searchConfig
 */
GoogleCloudDialogflowCxV3beta1QueryParameters.prototype['searchConfig'] = undefined;

/**
 * Additional session entity types to replace or extend developer entity types with. The entity synonyms apply to all languages and persist for the session of this query.
 * @member {Array.<module:model/GoogleCloudDialogflowCxV3beta1SessionEntityType>} sessionEntityTypes
 */
GoogleCloudDialogflowCxV3beta1QueryParameters.prototype['sessionEntityTypes'] = undefined;

/**
 * Optional. Configure lifetime of the Dialogflow session. By default, a Dialogflow session remains active and its data is stored for 30 minutes after the last request is sent for the session. This value should be no longer than 1 day.
 * @member {String} sessionTtl
 */
GoogleCloudDialogflowCxV3beta1QueryParameters.prototype['sessionTtl'] = undefined;

/**
 * The time zone of this conversational query from the [time zone database](https://www.iana.org/time-zones), e.g., America/New_York, Europe/Paris. If not provided, the time zone specified in the agent is used.
 * @member {String} timeZone
 */
GoogleCloudDialogflowCxV3beta1QueryParameters.prototype['timeZone'] = undefined;

/**
 * This field can be used to pass HTTP headers for a webhook call. These headers will be sent to webhook along with the headers that have been configured through Dialogflow web console. The headers defined within this field will overwrite the headers configured through Dialogflow console if there is a conflict. Header names are case-insensitive. Google's specified headers are not allowed. Including: \"Host\", \"Content-Length\", \"Connection\", \"From\", \"User-Agent\", \"Accept-Encoding\", \"If-Modified-Since\", \"If-None-Match\", \"X-Forwarded-For\", etc.
 * @member {Object.<String, String>} webhookHeaders
 */
GoogleCloudDialogflowCxV3beta1QueryParameters.prototype['webhookHeaders'] = undefined;






export default GoogleCloudDialogflowCxV3beta1QueryParameters;

