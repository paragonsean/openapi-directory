/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudDialogflowV2Message from './GoogleCloudDialogflowV2Message';
import GoogleRpcStatus from './GoogleRpcStatus';

/**
 * The GoogleCloudDialogflowV2ConversationEvent model module.
 * @module model/GoogleCloudDialogflowV2ConversationEvent
 * @version v3beta1
 */
class GoogleCloudDialogflowV2ConversationEvent {
    /**
     * Constructs a new <code>GoogleCloudDialogflowV2ConversationEvent</code>.
     * Represents a notification sent to Pub/Sub subscribers for conversation lifecycle events.
     * @alias module:model/GoogleCloudDialogflowV2ConversationEvent
     */
    constructor() { 
        
        GoogleCloudDialogflowV2ConversationEvent.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDialogflowV2ConversationEvent</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDialogflowV2ConversationEvent} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDialogflowV2ConversationEvent} The populated <code>GoogleCloudDialogflowV2ConversationEvent</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDialogflowV2ConversationEvent();

            if (data.hasOwnProperty('conversation')) {
                obj['conversation'] = ApiClient.convertToType(data['conversation'], 'String');
            }
            if (data.hasOwnProperty('errorStatus')) {
                obj['errorStatus'] = GoogleRpcStatus.constructFromObject(data['errorStatus']);
            }
            if (data.hasOwnProperty('newMessagePayload')) {
                obj['newMessagePayload'] = GoogleCloudDialogflowV2Message.constructFromObject(data['newMessagePayload']);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDialogflowV2ConversationEvent</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDialogflowV2ConversationEvent</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['conversation'] && !(typeof data['conversation'] === 'string' || data['conversation'] instanceof String)) {
            throw new Error("Expected the field `conversation` to be a primitive type in the JSON string but got " + data['conversation']);
        }
        // validate the optional field `errorStatus`
        if (data['errorStatus']) { // data not null
          GoogleRpcStatus.validateJSON(data['errorStatus']);
        }
        // validate the optional field `newMessagePayload`
        if (data['newMessagePayload']) { // data not null
          GoogleCloudDialogflowV2Message.validateJSON(data['newMessagePayload']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * The unique identifier of the conversation this notification refers to. Format: `projects//conversations/`.
 * @member {String} conversation
 */
GoogleCloudDialogflowV2ConversationEvent.prototype['conversation'] = undefined;

/**
 * @member {module:model/GoogleRpcStatus} errorStatus
 */
GoogleCloudDialogflowV2ConversationEvent.prototype['errorStatus'] = undefined;

/**
 * @member {module:model/GoogleCloudDialogflowV2Message} newMessagePayload
 */
GoogleCloudDialogflowV2ConversationEvent.prototype['newMessagePayload'] = undefined;

/**
 * The type of the event that this notification refers to.
 * @member {module:model/GoogleCloudDialogflowV2ConversationEvent.TypeEnum} type
 */
GoogleCloudDialogflowV2ConversationEvent.prototype['type'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudDialogflowV2ConversationEvent['TypeEnum'] = {

    /**
     * value: "TYPE_UNSPECIFIED"
     * @const
     */
    "TYPE_UNSPECIFIED": "TYPE_UNSPECIFIED",

    /**
     * value: "CONVERSATION_STARTED"
     * @const
     */
    "CONVERSATION_STARTED": "CONVERSATION_STARTED",

    /**
     * value: "CONVERSATION_FINISHED"
     * @const
     */
    "CONVERSATION_FINISHED": "CONVERSATION_FINISHED",

    /**
     * value: "HUMAN_INTERVENTION_NEEDED"
     * @const
     */
    "HUMAN_INTERVENTION_NEEDED": "HUMAN_INTERVENTION_NEEDED",

    /**
     * value: "NEW_MESSAGE"
     * @const
     */
    "NEW_MESSAGE": "NEW_MESSAGE",

    /**
     * value: "UNRECOVERABLE_ERROR"
     * @const
     */
    "UNRECOVERABLE_ERROR": "UNRECOVERABLE_ERROR"
};



export default GoogleCloudDialogflowV2ConversationEvent;

