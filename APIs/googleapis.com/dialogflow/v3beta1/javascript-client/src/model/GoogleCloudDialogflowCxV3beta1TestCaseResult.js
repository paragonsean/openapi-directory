/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudDialogflowCxV3beta1ConversationTurn from './GoogleCloudDialogflowCxV3beta1ConversationTurn';

/**
 * The GoogleCloudDialogflowCxV3beta1TestCaseResult model module.
 * @module model/GoogleCloudDialogflowCxV3beta1TestCaseResult
 * @version v3beta1
 */
class GoogleCloudDialogflowCxV3beta1TestCaseResult {
    /**
     * Constructs a new <code>GoogleCloudDialogflowCxV3beta1TestCaseResult</code>.
     * Represents a result from running a test case in an agent environment.
     * @alias module:model/GoogleCloudDialogflowCxV3beta1TestCaseResult
     */
    constructor() { 
        
        GoogleCloudDialogflowCxV3beta1TestCaseResult.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDialogflowCxV3beta1TestCaseResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDialogflowCxV3beta1TestCaseResult} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDialogflowCxV3beta1TestCaseResult} The populated <code>GoogleCloudDialogflowCxV3beta1TestCaseResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDialogflowCxV3beta1TestCaseResult();

            if (data.hasOwnProperty('conversationTurns')) {
                obj['conversationTurns'] = ApiClient.convertToType(data['conversationTurns'], [GoogleCloudDialogflowCxV3beta1ConversationTurn]);
            }
            if (data.hasOwnProperty('environment')) {
                obj['environment'] = ApiClient.convertToType(data['environment'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('testResult')) {
                obj['testResult'] = ApiClient.convertToType(data['testResult'], 'String');
            }
            if (data.hasOwnProperty('testTime')) {
                obj['testTime'] = ApiClient.convertToType(data['testTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDialogflowCxV3beta1TestCaseResult</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDialogflowCxV3beta1TestCaseResult</code>.
     */
    static validateJSON(data) {
        if (data['conversationTurns']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['conversationTurns'])) {
                throw new Error("Expected the field `conversationTurns` to be an array in the JSON data but got " + data['conversationTurns']);
            }
            // validate the optional field `conversationTurns` (array)
            for (const item of data['conversationTurns']) {
                GoogleCloudDialogflowCxV3beta1ConversationTurn.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['environment'] && !(typeof data['environment'] === 'string' || data['environment'] instanceof String)) {
            throw new Error("Expected the field `environment` to be a primitive type in the JSON string but got " + data['environment']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['testResult'] && !(typeof data['testResult'] === 'string' || data['testResult'] instanceof String)) {
            throw new Error("Expected the field `testResult` to be a primitive type in the JSON string but got " + data['testResult']);
        }
        // ensure the json data is a string
        if (data['testTime'] && !(typeof data['testTime'] === 'string' || data['testTime'] instanceof String)) {
            throw new Error("Expected the field `testTime` to be a primitive type in the JSON string but got " + data['testTime']);
        }

        return true;
    }


}



/**
 * The conversation turns uttered during the test case replay in chronological order.
 * @member {Array.<module:model/GoogleCloudDialogflowCxV3beta1ConversationTurn>} conversationTurns
 */
GoogleCloudDialogflowCxV3beta1TestCaseResult.prototype['conversationTurns'] = undefined;

/**
 * Environment where the test was run. If not set, it indicates the draft environment.
 * @member {String} environment
 */
GoogleCloudDialogflowCxV3beta1TestCaseResult.prototype['environment'] = undefined;

/**
 * The resource name for the test case result. Format: `projects//locations//agents//testCases/ /results/`.
 * @member {String} name
 */
GoogleCloudDialogflowCxV3beta1TestCaseResult.prototype['name'] = undefined;

/**
 * Whether the test case passed in the agent environment.
 * @member {module:model/GoogleCloudDialogflowCxV3beta1TestCaseResult.TestResultEnum} testResult
 */
GoogleCloudDialogflowCxV3beta1TestCaseResult.prototype['testResult'] = undefined;

/**
 * The time that the test was run.
 * @member {String} testTime
 */
GoogleCloudDialogflowCxV3beta1TestCaseResult.prototype['testTime'] = undefined;





/**
 * Allowed values for the <code>testResult</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudDialogflowCxV3beta1TestCaseResult['TestResultEnum'] = {

    /**
     * value: "TEST_RESULT_UNSPECIFIED"
     * @const
     */
    "TEST_RESULT_UNSPECIFIED": "TEST_RESULT_UNSPECIFIED",

    /**
     * value: "PASSED"
     * @const
     */
    "PASSED": "PASSED",

    /**
     * value: "FAILED"
     * @const
     */
    "FAILED": "FAILED"
};



export default GoogleCloudDialogflowCxV3beta1TestCaseResult;

