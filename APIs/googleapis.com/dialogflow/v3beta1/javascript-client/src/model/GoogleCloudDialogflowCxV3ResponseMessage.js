/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudDialogflowCxV3ResponseMessageConversationSuccess from './GoogleCloudDialogflowCxV3ResponseMessageConversationSuccess';
import GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff from './GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff';
import GoogleCloudDialogflowCxV3ResponseMessageMixedAudio from './GoogleCloudDialogflowCxV3ResponseMessageMixedAudio';
import GoogleCloudDialogflowCxV3ResponseMessageOutputAudioText from './GoogleCloudDialogflowCxV3ResponseMessageOutputAudioText';
import GoogleCloudDialogflowCxV3ResponseMessagePlayAudio from './GoogleCloudDialogflowCxV3ResponseMessagePlayAudio';
import GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCall from './GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCall';
import GoogleCloudDialogflowCxV3ResponseMessageText from './GoogleCloudDialogflowCxV3ResponseMessageText';

/**
 * The GoogleCloudDialogflowCxV3ResponseMessage model module.
 * @module model/GoogleCloudDialogflowCxV3ResponseMessage
 * @version v3beta1
 */
class GoogleCloudDialogflowCxV3ResponseMessage {
    /**
     * Constructs a new <code>GoogleCloudDialogflowCxV3ResponseMessage</code>.
     * Represents a response message that can be returned by a conversational agent. Response messages are also used for output audio synthesis. The approach is as follows: * If at least one OutputAudioText response is present, then all OutputAudioText responses are linearly concatenated, and the result is used for output audio synthesis. * If the OutputAudioText responses are a mixture of text and SSML, then the concatenated result is treated as SSML; otherwise, the result is treated as either text or SSML as appropriate. The agent designer should ideally use either text or SSML consistently throughout the bot design. * Otherwise, all Text responses are linearly concatenated, and the result is used for output audio synthesis. This approach allows for more sophisticated user experience scenarios, where the text displayed to the user may differ from what is heard.
     * @alias module:model/GoogleCloudDialogflowCxV3ResponseMessage
     */
    constructor() { 
        
        GoogleCloudDialogflowCxV3ResponseMessage.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDialogflowCxV3ResponseMessage</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDialogflowCxV3ResponseMessage} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDialogflowCxV3ResponseMessage} The populated <code>GoogleCloudDialogflowCxV3ResponseMessage</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDialogflowCxV3ResponseMessage();

            if (data.hasOwnProperty('channel')) {
                obj['channel'] = ApiClient.convertToType(data['channel'], 'String');
            }
            if (data.hasOwnProperty('conversationSuccess')) {
                obj['conversationSuccess'] = GoogleCloudDialogflowCxV3ResponseMessageConversationSuccess.constructFromObject(data['conversationSuccess']);
            }
            if (data.hasOwnProperty('endInteraction')) {
                obj['endInteraction'] = ApiClient.convertToType(data['endInteraction'], Object);
            }
            if (data.hasOwnProperty('knowledgeInfoCard')) {
                obj['knowledgeInfoCard'] = ApiClient.convertToType(data['knowledgeInfoCard'], Object);
            }
            if (data.hasOwnProperty('liveAgentHandoff')) {
                obj['liveAgentHandoff'] = GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff.constructFromObject(data['liveAgentHandoff']);
            }
            if (data.hasOwnProperty('mixedAudio')) {
                obj['mixedAudio'] = GoogleCloudDialogflowCxV3ResponseMessageMixedAudio.constructFromObject(data['mixedAudio']);
            }
            if (data.hasOwnProperty('outputAudioText')) {
                obj['outputAudioText'] = GoogleCloudDialogflowCxV3ResponseMessageOutputAudioText.constructFromObject(data['outputAudioText']);
            }
            if (data.hasOwnProperty('payload')) {
                obj['payload'] = ApiClient.convertToType(data['payload'], {'String': Object});
            }
            if (data.hasOwnProperty('playAudio')) {
                obj['playAudio'] = GoogleCloudDialogflowCxV3ResponseMessagePlayAudio.constructFromObject(data['playAudio']);
            }
            if (data.hasOwnProperty('responseType')) {
                obj['responseType'] = ApiClient.convertToType(data['responseType'], 'String');
            }
            if (data.hasOwnProperty('telephonyTransferCall')) {
                obj['telephonyTransferCall'] = GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCall.constructFromObject(data['telephonyTransferCall']);
            }
            if (data.hasOwnProperty('text')) {
                obj['text'] = GoogleCloudDialogflowCxV3ResponseMessageText.constructFromObject(data['text']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDialogflowCxV3ResponseMessage</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDialogflowCxV3ResponseMessage</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['channel'] && !(typeof data['channel'] === 'string' || data['channel'] instanceof String)) {
            throw new Error("Expected the field `channel` to be a primitive type in the JSON string but got " + data['channel']);
        }
        // validate the optional field `conversationSuccess`
        if (data['conversationSuccess']) { // data not null
          GoogleCloudDialogflowCxV3ResponseMessageConversationSuccess.validateJSON(data['conversationSuccess']);
        }
        // validate the optional field `liveAgentHandoff`
        if (data['liveAgentHandoff']) { // data not null
          GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff.validateJSON(data['liveAgentHandoff']);
        }
        // validate the optional field `mixedAudio`
        if (data['mixedAudio']) { // data not null
          GoogleCloudDialogflowCxV3ResponseMessageMixedAudio.validateJSON(data['mixedAudio']);
        }
        // validate the optional field `outputAudioText`
        if (data['outputAudioText']) { // data not null
          GoogleCloudDialogflowCxV3ResponseMessageOutputAudioText.validateJSON(data['outputAudioText']);
        }
        // validate the optional field `playAudio`
        if (data['playAudio']) { // data not null
          GoogleCloudDialogflowCxV3ResponseMessagePlayAudio.validateJSON(data['playAudio']);
        }
        // ensure the json data is a string
        if (data['responseType'] && !(typeof data['responseType'] === 'string' || data['responseType'] instanceof String)) {
            throw new Error("Expected the field `responseType` to be a primitive type in the JSON string but got " + data['responseType']);
        }
        // validate the optional field `telephonyTransferCall`
        if (data['telephonyTransferCall']) { // data not null
          GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCall.validateJSON(data['telephonyTransferCall']);
        }
        // validate the optional field `text`
        if (data['text']) { // data not null
          GoogleCloudDialogflowCxV3ResponseMessageText.validateJSON(data['text']);
        }

        return true;
    }


}



/**
 * The channel which the response is associated with. Clients can specify the channel via QueryParameters.channel, and only associated channel response will be returned.
 * @member {String} channel
 */
GoogleCloudDialogflowCxV3ResponseMessage.prototype['channel'] = undefined;

/**
 * @member {module:model/GoogleCloudDialogflowCxV3ResponseMessageConversationSuccess} conversationSuccess
 */
GoogleCloudDialogflowCxV3ResponseMessage.prototype['conversationSuccess'] = undefined;

/**
 * Indicates that interaction with the Dialogflow agent has ended. This message is generated by Dialogflow only and not supposed to be defined by the user.
 * @member {Object} endInteraction
 */
GoogleCloudDialogflowCxV3ResponseMessage.prototype['endInteraction'] = undefined;

/**
 * Represents info card response. If the response contains generative knowledge prediction, Dialogflow will return a payload with Infobot Messenger compatible info card. Otherwise, the info card response is skipped.
 * @member {Object} knowledgeInfoCard
 */
GoogleCloudDialogflowCxV3ResponseMessage.prototype['knowledgeInfoCard'] = undefined;

/**
 * @member {module:model/GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff} liveAgentHandoff
 */
GoogleCloudDialogflowCxV3ResponseMessage.prototype['liveAgentHandoff'] = undefined;

/**
 * @member {module:model/GoogleCloudDialogflowCxV3ResponseMessageMixedAudio} mixedAudio
 */
GoogleCloudDialogflowCxV3ResponseMessage.prototype['mixedAudio'] = undefined;

/**
 * @member {module:model/GoogleCloudDialogflowCxV3ResponseMessageOutputAudioText} outputAudioText
 */
GoogleCloudDialogflowCxV3ResponseMessage.prototype['outputAudioText'] = undefined;

/**
 * Returns a response containing a custom, platform-specific payload.
 * @member {Object.<String, Object>} payload
 */
GoogleCloudDialogflowCxV3ResponseMessage.prototype['payload'] = undefined;

/**
 * @member {module:model/GoogleCloudDialogflowCxV3ResponseMessagePlayAudio} playAudio
 */
GoogleCloudDialogflowCxV3ResponseMessage.prototype['playAudio'] = undefined;

/**
 * Response type.
 * @member {module:model/GoogleCloudDialogflowCxV3ResponseMessage.ResponseTypeEnum} responseType
 */
GoogleCloudDialogflowCxV3ResponseMessage.prototype['responseType'] = undefined;

/**
 * @member {module:model/GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCall} telephonyTransferCall
 */
GoogleCloudDialogflowCxV3ResponseMessage.prototype['telephonyTransferCall'] = undefined;

/**
 * @member {module:model/GoogleCloudDialogflowCxV3ResponseMessageText} text
 */
GoogleCloudDialogflowCxV3ResponseMessage.prototype['text'] = undefined;





/**
 * Allowed values for the <code>responseType</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudDialogflowCxV3ResponseMessage['ResponseTypeEnum'] = {

    /**
     * value: "RESPONSE_TYPE_UNSPECIFIED"
     * @const
     */
    "RESPONSE_TYPE_UNSPECIFIED": "RESPONSE_TYPE_UNSPECIFIED",

    /**
     * value: "ENTRY_PROMPT"
     * @const
     */
    "ENTRY_PROMPT": "ENTRY_PROMPT",

    /**
     * value: "PARAMETER_PROMPT"
     * @const
     */
    "PARAMETER_PROMPT": "PARAMETER_PROMPT",

    /**
     * value: "HANDLER_PROMPT"
     * @const
     */
    "HANDLER_PROMPT": "HANDLER_PROMPT"
};



export default GoogleCloudDialogflowCxV3ResponseMessage;

