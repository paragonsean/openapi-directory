/*
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudDialogflowCxV3beta1GeneratorPlaceholder;
import org.openapitools.client.model.GoogleCloudDialogflowCxV3beta1Phrase;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Generators contain prompt to be sent to the LLM model to generate text. The prompt can contain parameters which will be resolved before calling the model. It can optionally contain banned phrases to ensure the model responses are safe.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:47:33.933227-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDialogflowCxV3beta1Generator {
  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PLACEHOLDERS = "placeholders";
  @SerializedName(SERIALIZED_NAME_PLACEHOLDERS)
  private List<GoogleCloudDialogflowCxV3beta1GeneratorPlaceholder> placeholders = new ArrayList<>();

  public static final String SERIALIZED_NAME_PROMPT_TEXT = "promptText";
  @SerializedName(SERIALIZED_NAME_PROMPT_TEXT)
  private GoogleCloudDialogflowCxV3beta1Phrase promptText;

  public GoogleCloudDialogflowCxV3beta1Generator() {
  }

  public GoogleCloudDialogflowCxV3beta1Generator displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Required. The human-readable name of the generator, unique within the agent. The prompt contains pre-defined parameters such as $conversation, $last-user-utterance, etc. populated by Dialogflow. It can also contain custom placeholders which will be resolved during fulfillment.
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public GoogleCloudDialogflowCxV3beta1Generator name(String name) {
    this.name = name;
    return this;
  }

  /**
   * The unique identifier of the generator. Must be set for the Generators.UpdateGenerator method. Generators.CreateGenerate populates the name automatically. Format: &#x60;projects//locations//agents//generators/&#x60;.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public GoogleCloudDialogflowCxV3beta1Generator placeholders(List<GoogleCloudDialogflowCxV3beta1GeneratorPlaceholder> placeholders) {
    this.placeholders = placeholders;
    return this;
  }

  public GoogleCloudDialogflowCxV3beta1Generator addPlaceholdersItem(GoogleCloudDialogflowCxV3beta1GeneratorPlaceholder placeholdersItem) {
    if (this.placeholders == null) {
      this.placeholders = new ArrayList<>();
    }
    this.placeholders.add(placeholdersItem);
    return this;
  }

  /**
   * Optional. List of custom placeholders in the prompt text.
   * @return placeholders
   */
  @javax.annotation.Nullable
  public List<GoogleCloudDialogflowCxV3beta1GeneratorPlaceholder> getPlaceholders() {
    return placeholders;
  }

  public void setPlaceholders(List<GoogleCloudDialogflowCxV3beta1GeneratorPlaceholder> placeholders) {
    this.placeholders = placeholders;
  }


  public GoogleCloudDialogflowCxV3beta1Generator promptText(GoogleCloudDialogflowCxV3beta1Phrase promptText) {
    this.promptText = promptText;
    return this;
  }

  /**
   * Get promptText
   * @return promptText
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowCxV3beta1Phrase getPromptText() {
    return promptText;
  }

  public void setPromptText(GoogleCloudDialogflowCxV3beta1Phrase promptText) {
    this.promptText = promptText;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDialogflowCxV3beta1Generator googleCloudDialogflowCxV3beta1Generator = (GoogleCloudDialogflowCxV3beta1Generator) o;
    return Objects.equals(this.displayName, googleCloudDialogflowCxV3beta1Generator.displayName) &&
        Objects.equals(this.name, googleCloudDialogflowCxV3beta1Generator.name) &&
        Objects.equals(this.placeholders, googleCloudDialogflowCxV3beta1Generator.placeholders) &&
        Objects.equals(this.promptText, googleCloudDialogflowCxV3beta1Generator.promptText);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, name, placeholders, promptText);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDialogflowCxV3beta1Generator {\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    placeholders: ").append(toIndentedString(placeholders)).append("\n");
    sb.append("    promptText: ").append(toIndentedString(promptText)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("displayName");
    openapiFields.add("name");
    openapiFields.add("placeholders");
    openapiFields.add("promptText");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDialogflowCxV3beta1Generator
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDialogflowCxV3beta1Generator.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDialogflowCxV3beta1Generator is not found in the empty JSON string", GoogleCloudDialogflowCxV3beta1Generator.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDialogflowCxV3beta1Generator.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDialogflowCxV3beta1Generator` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if (jsonObj.get("placeholders") != null && !jsonObj.get("placeholders").isJsonNull()) {
        JsonArray jsonArrayplaceholders = jsonObj.getAsJsonArray("placeholders");
        if (jsonArrayplaceholders != null) {
          // ensure the json data is an array
          if (!jsonObj.get("placeholders").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `placeholders` to be an array in the JSON string but got `%s`", jsonObj.get("placeholders").toString()));
          }

          // validate the optional field `placeholders` (array)
          for (int i = 0; i < jsonArrayplaceholders.size(); i++) {
            GoogleCloudDialogflowCxV3beta1GeneratorPlaceholder.validateJsonElement(jsonArrayplaceholders.get(i));
          };
        }
      }
      // validate the optional field `promptText`
      if (jsonObj.get("promptText") != null && !jsonObj.get("promptText").isJsonNull()) {
        GoogleCloudDialogflowCxV3beta1Phrase.validateJsonElement(jsonObj.get("promptText"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDialogflowCxV3beta1Generator.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDialogflowCxV3beta1Generator' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDialogflowCxV3beta1Generator> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDialogflowCxV3beta1Generator.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDialogflowCxV3beta1Generator>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDialogflowCxV3beta1Generator value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDialogflowCxV3beta1Generator read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDialogflowCxV3beta1Generator given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDialogflowCxV3beta1Generator
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDialogflowCxV3beta1Generator
   */
  public static GoogleCloudDialogflowCxV3beta1Generator fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDialogflowCxV3beta1Generator.class);
  }

  /**
   * Convert an instance of GoogleCloudDialogflowCxV3beta1Generator to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

