/*
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudDialogflowV2SmartReplyAnswer;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The response message for Participants.SuggestSmartReplies.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:47:33.933227-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDialogflowV2SuggestSmartRepliesResponse {
  public static final String SERIALIZED_NAME_CONTEXT_SIZE = "contextSize";
  @SerializedName(SERIALIZED_NAME_CONTEXT_SIZE)
  private Integer contextSize;

  public static final String SERIALIZED_NAME_LATEST_MESSAGE = "latestMessage";
  @SerializedName(SERIALIZED_NAME_LATEST_MESSAGE)
  private String latestMessage;

  public static final String SERIALIZED_NAME_SMART_REPLY_ANSWERS = "smartReplyAnswers";
  @SerializedName(SERIALIZED_NAME_SMART_REPLY_ANSWERS)
  private List<GoogleCloudDialogflowV2SmartReplyAnswer> smartReplyAnswers = new ArrayList<>();

  public GoogleCloudDialogflowV2SuggestSmartRepliesResponse() {
  }

  public GoogleCloudDialogflowV2SuggestSmartRepliesResponse(
     List<GoogleCloudDialogflowV2SmartReplyAnswer> smartReplyAnswers
  ) {
    this();
    this.smartReplyAnswers = smartReplyAnswers;
  }

  public GoogleCloudDialogflowV2SuggestSmartRepliesResponse contextSize(Integer contextSize) {
    this.contextSize = contextSize;
    return this;
  }

  /**
   * Number of messages prior to and including latest_message to compile the suggestion. It may be smaller than the SuggestSmartRepliesRequest.context_size field in the request if there aren&#39;t that many messages in the conversation.
   * @return contextSize
   */
  @javax.annotation.Nullable
  public Integer getContextSize() {
    return contextSize;
  }

  public void setContextSize(Integer contextSize) {
    this.contextSize = contextSize;
  }


  public GoogleCloudDialogflowV2SuggestSmartRepliesResponse latestMessage(String latestMessage) {
    this.latestMessage = latestMessage;
    return this;
  }

  /**
   * The name of the latest conversation message used to compile suggestion for. Format: &#x60;projects//locations//conversations//messages/&#x60;.
   * @return latestMessage
   */
  @javax.annotation.Nullable
  public String getLatestMessage() {
    return latestMessage;
  }

  public void setLatestMessage(String latestMessage) {
    this.latestMessage = latestMessage;
  }


  /**
   * Output only. Multiple reply options provided by smart reply service. The order is based on the rank of the model prediction. The maximum number of the returned replies is set in SmartReplyConfig.
   * @return smartReplyAnswers
   */
  @javax.annotation.Nullable
  public List<GoogleCloudDialogflowV2SmartReplyAnswer> getSmartReplyAnswers() {
    return smartReplyAnswers;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDialogflowV2SuggestSmartRepliesResponse googleCloudDialogflowV2SuggestSmartRepliesResponse = (GoogleCloudDialogflowV2SuggestSmartRepliesResponse) o;
    return Objects.equals(this.contextSize, googleCloudDialogflowV2SuggestSmartRepliesResponse.contextSize) &&
        Objects.equals(this.latestMessage, googleCloudDialogflowV2SuggestSmartRepliesResponse.latestMessage) &&
        Objects.equals(this.smartReplyAnswers, googleCloudDialogflowV2SuggestSmartRepliesResponse.smartReplyAnswers);
  }

  @Override
  public int hashCode() {
    return Objects.hash(contextSize, latestMessage, smartReplyAnswers);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDialogflowV2SuggestSmartRepliesResponse {\n");
    sb.append("    contextSize: ").append(toIndentedString(contextSize)).append("\n");
    sb.append("    latestMessage: ").append(toIndentedString(latestMessage)).append("\n");
    sb.append("    smartReplyAnswers: ").append(toIndentedString(smartReplyAnswers)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("contextSize");
    openapiFields.add("latestMessage");
    openapiFields.add("smartReplyAnswers");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDialogflowV2SuggestSmartRepliesResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDialogflowV2SuggestSmartRepliesResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDialogflowV2SuggestSmartRepliesResponse is not found in the empty JSON string", GoogleCloudDialogflowV2SuggestSmartRepliesResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDialogflowV2SuggestSmartRepliesResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDialogflowV2SuggestSmartRepliesResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("latestMessage") != null && !jsonObj.get("latestMessage").isJsonNull()) && !jsonObj.get("latestMessage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `latestMessage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("latestMessage").toString()));
      }
      if (jsonObj.get("smartReplyAnswers") != null && !jsonObj.get("smartReplyAnswers").isJsonNull()) {
        JsonArray jsonArraysmartReplyAnswers = jsonObj.getAsJsonArray("smartReplyAnswers");
        if (jsonArraysmartReplyAnswers != null) {
          // ensure the json data is an array
          if (!jsonObj.get("smartReplyAnswers").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `smartReplyAnswers` to be an array in the JSON string but got `%s`", jsonObj.get("smartReplyAnswers").toString()));
          }

          // validate the optional field `smartReplyAnswers` (array)
          for (int i = 0; i < jsonArraysmartReplyAnswers.size(); i++) {
            GoogleCloudDialogflowV2SmartReplyAnswer.validateJsonElement(jsonArraysmartReplyAnswers.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDialogflowV2SuggestSmartRepliesResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDialogflowV2SuggestSmartRepliesResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDialogflowV2SuggestSmartRepliesResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDialogflowV2SuggestSmartRepliesResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDialogflowV2SuggestSmartRepliesResponse>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDialogflowV2SuggestSmartRepliesResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDialogflowV2SuggestSmartRepliesResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDialogflowV2SuggestSmartRepliesResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDialogflowV2SuggestSmartRepliesResponse
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDialogflowV2SuggestSmartRepliesResponse
   */
  public static GoogleCloudDialogflowV2SuggestSmartRepliesResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDialogflowV2SuggestSmartRepliesResponse.class);
  }

  /**
   * Convert an instance of GoogleCloudDialogflowV2SuggestSmartRepliesResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

