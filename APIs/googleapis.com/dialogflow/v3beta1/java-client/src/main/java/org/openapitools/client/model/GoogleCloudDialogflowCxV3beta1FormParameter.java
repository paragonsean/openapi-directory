/*
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudDialogflowCxV3beta1AdvancedSettings;
import org.openapitools.client.model.GoogleCloudDialogflowCxV3beta1FormParameterFillBehavior;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents a form parameter.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:47:33.933227-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDialogflowCxV3beta1FormParameter {
  public static final String SERIALIZED_NAME_ADVANCED_SETTINGS = "advancedSettings";
  @SerializedName(SERIALIZED_NAME_ADVANCED_SETTINGS)
  private GoogleCloudDialogflowCxV3beta1AdvancedSettings advancedSettings;

  public static final String SERIALIZED_NAME_DEFAULT_VALUE = "defaultValue";
  @SerializedName(SERIALIZED_NAME_DEFAULT_VALUE)
  private Object defaultValue = null;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_ENTITY_TYPE = "entityType";
  @SerializedName(SERIALIZED_NAME_ENTITY_TYPE)
  private String entityType;

  public static final String SERIALIZED_NAME_FILL_BEHAVIOR = "fillBehavior";
  @SerializedName(SERIALIZED_NAME_FILL_BEHAVIOR)
  private GoogleCloudDialogflowCxV3beta1FormParameterFillBehavior fillBehavior;

  public static final String SERIALIZED_NAME_IS_LIST = "isList";
  @SerializedName(SERIALIZED_NAME_IS_LIST)
  private Boolean isList;

  public static final String SERIALIZED_NAME_REDACT = "redact";
  @SerializedName(SERIALIZED_NAME_REDACT)
  private Boolean redact;

  public static final String SERIALIZED_NAME_REQUIRED = "required";
  @SerializedName(SERIALIZED_NAME_REQUIRED)
  private Boolean required;

  public GoogleCloudDialogflowCxV3beta1FormParameter() {
  }

  public GoogleCloudDialogflowCxV3beta1FormParameter advancedSettings(GoogleCloudDialogflowCxV3beta1AdvancedSettings advancedSettings) {
    this.advancedSettings = advancedSettings;
    return this;
  }

  /**
   * Get advancedSettings
   * @return advancedSettings
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowCxV3beta1AdvancedSettings getAdvancedSettings() {
    return advancedSettings;
  }

  public void setAdvancedSettings(GoogleCloudDialogflowCxV3beta1AdvancedSettings advancedSettings) {
    this.advancedSettings = advancedSettings;
  }


  public GoogleCloudDialogflowCxV3beta1FormParameter defaultValue(Object defaultValue) {
    this.defaultValue = defaultValue;
    return this;
  }

  /**
   * The default value of an optional parameter. If the parameter is required, the default value will be ignored.
   * @return defaultValue
   */
  @javax.annotation.Nullable
  public Object getDefaultValue() {
    return defaultValue;
  }

  public void setDefaultValue(Object defaultValue) {
    this.defaultValue = defaultValue;
  }


  public GoogleCloudDialogflowCxV3beta1FormParameter displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Required. The human-readable name of the parameter, unique within the form.
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public GoogleCloudDialogflowCxV3beta1FormParameter entityType(String entityType) {
    this.entityType = entityType;
    return this;
  }

  /**
   * Required. The entity type of the parameter. Format: &#x60;projects/-/locations/-/agents/-/entityTypes/&#x60; for system entity types (for example, &#x60;projects/-/locations/-/agents/-/entityTypes/sys.date&#x60;), or &#x60;projects//locations//agents//entityTypes/&#x60; for developer entity types.
   * @return entityType
   */
  @javax.annotation.Nullable
  public String getEntityType() {
    return entityType;
  }

  public void setEntityType(String entityType) {
    this.entityType = entityType;
  }


  public GoogleCloudDialogflowCxV3beta1FormParameter fillBehavior(GoogleCloudDialogflowCxV3beta1FormParameterFillBehavior fillBehavior) {
    this.fillBehavior = fillBehavior;
    return this;
  }

  /**
   * Get fillBehavior
   * @return fillBehavior
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowCxV3beta1FormParameterFillBehavior getFillBehavior() {
    return fillBehavior;
  }

  public void setFillBehavior(GoogleCloudDialogflowCxV3beta1FormParameterFillBehavior fillBehavior) {
    this.fillBehavior = fillBehavior;
  }


  public GoogleCloudDialogflowCxV3beta1FormParameter isList(Boolean isList) {
    this.isList = isList;
    return this;
  }

  /**
   * Indicates whether the parameter represents a list of values.
   * @return isList
   */
  @javax.annotation.Nullable
  public Boolean getIsList() {
    return isList;
  }

  public void setIsList(Boolean isList) {
    this.isList = isList;
  }


  public GoogleCloudDialogflowCxV3beta1FormParameter redact(Boolean redact) {
    this.redact = redact;
    return this;
  }

  /**
   * Indicates whether the parameter content should be redacted in log. If redaction is enabled, the parameter content will be replaced by parameter name during logging. Note: the parameter content is subject to redaction if either parameter level redaction or entity type level redaction is enabled.
   * @return redact
   */
  @javax.annotation.Nullable
  public Boolean getRedact() {
    return redact;
  }

  public void setRedact(Boolean redact) {
    this.redact = redact;
  }


  public GoogleCloudDialogflowCxV3beta1FormParameter required(Boolean required) {
    this.required = required;
    return this;
  }

  /**
   * Indicates whether the parameter is required. Optional parameters will not trigger prompts; however, they are filled if the user specifies them. Required parameters must be filled before form filling concludes.
   * @return required
   */
  @javax.annotation.Nullable
  public Boolean getRequired() {
    return required;
  }

  public void setRequired(Boolean required) {
    this.required = required;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDialogflowCxV3beta1FormParameter googleCloudDialogflowCxV3beta1FormParameter = (GoogleCloudDialogflowCxV3beta1FormParameter) o;
    return Objects.equals(this.advancedSettings, googleCloudDialogflowCxV3beta1FormParameter.advancedSettings) &&
        Objects.equals(this.defaultValue, googleCloudDialogflowCxV3beta1FormParameter.defaultValue) &&
        Objects.equals(this.displayName, googleCloudDialogflowCxV3beta1FormParameter.displayName) &&
        Objects.equals(this.entityType, googleCloudDialogflowCxV3beta1FormParameter.entityType) &&
        Objects.equals(this.fillBehavior, googleCloudDialogflowCxV3beta1FormParameter.fillBehavior) &&
        Objects.equals(this.isList, googleCloudDialogflowCxV3beta1FormParameter.isList) &&
        Objects.equals(this.redact, googleCloudDialogflowCxV3beta1FormParameter.redact) &&
        Objects.equals(this.required, googleCloudDialogflowCxV3beta1FormParameter.required);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(advancedSettings, defaultValue, displayName, entityType, fillBehavior, isList, redact, required);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDialogflowCxV3beta1FormParameter {\n");
    sb.append("    advancedSettings: ").append(toIndentedString(advancedSettings)).append("\n");
    sb.append("    defaultValue: ").append(toIndentedString(defaultValue)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    entityType: ").append(toIndentedString(entityType)).append("\n");
    sb.append("    fillBehavior: ").append(toIndentedString(fillBehavior)).append("\n");
    sb.append("    isList: ").append(toIndentedString(isList)).append("\n");
    sb.append("    redact: ").append(toIndentedString(redact)).append("\n");
    sb.append("    required: ").append(toIndentedString(required)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("advancedSettings");
    openapiFields.add("defaultValue");
    openapiFields.add("displayName");
    openapiFields.add("entityType");
    openapiFields.add("fillBehavior");
    openapiFields.add("isList");
    openapiFields.add("redact");
    openapiFields.add("required");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDialogflowCxV3beta1FormParameter
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDialogflowCxV3beta1FormParameter.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDialogflowCxV3beta1FormParameter is not found in the empty JSON string", GoogleCloudDialogflowCxV3beta1FormParameter.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDialogflowCxV3beta1FormParameter.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDialogflowCxV3beta1FormParameter` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `advancedSettings`
      if (jsonObj.get("advancedSettings") != null && !jsonObj.get("advancedSettings").isJsonNull()) {
        GoogleCloudDialogflowCxV3beta1AdvancedSettings.validateJsonElement(jsonObj.get("advancedSettings"));
      }
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      if ((jsonObj.get("entityType") != null && !jsonObj.get("entityType").isJsonNull()) && !jsonObj.get("entityType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `entityType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("entityType").toString()));
      }
      // validate the optional field `fillBehavior`
      if (jsonObj.get("fillBehavior") != null && !jsonObj.get("fillBehavior").isJsonNull()) {
        GoogleCloudDialogflowCxV3beta1FormParameterFillBehavior.validateJsonElement(jsonObj.get("fillBehavior"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDialogflowCxV3beta1FormParameter.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDialogflowCxV3beta1FormParameter' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDialogflowCxV3beta1FormParameter> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDialogflowCxV3beta1FormParameter.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDialogflowCxV3beta1FormParameter>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDialogflowCxV3beta1FormParameter value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDialogflowCxV3beta1FormParameter read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDialogflowCxV3beta1FormParameter given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDialogflowCxV3beta1FormParameter
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDialogflowCxV3beta1FormParameter
   */
  public static GoogleCloudDialogflowCxV3beta1FormParameter fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDialogflowCxV3beta1FormParameter.class);
  }

  /**
   * Convert an instance of GoogleCloudDialogflowCxV3beta1FormParameter to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

