/*
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.GoogleCloudDialogflowV2Context;
import org.openapitools.client.model.GoogleCloudDialogflowV2Intent;
import org.openapitools.client.model.GoogleCloudDialogflowV2IntentMessage;
import org.openapitools.client.model.GoogleCloudDialogflowV2SentimentAnalysisResult;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents the result of conversational query or event processing.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:47:33.933227-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDialogflowV2QueryResult {
  public static final String SERIALIZED_NAME_ACTION = "action";
  @SerializedName(SERIALIZED_NAME_ACTION)
  private String action;

  public static final String SERIALIZED_NAME_ALL_REQUIRED_PARAMS_PRESENT = "allRequiredParamsPresent";
  @SerializedName(SERIALIZED_NAME_ALL_REQUIRED_PARAMS_PRESENT)
  private Boolean allRequiredParamsPresent;

  public static final String SERIALIZED_NAME_CANCELS_SLOT_FILLING = "cancelsSlotFilling";
  @SerializedName(SERIALIZED_NAME_CANCELS_SLOT_FILLING)
  private Boolean cancelsSlotFilling;

  public static final String SERIALIZED_NAME_DIAGNOSTIC_INFO = "diagnosticInfo";
  @SerializedName(SERIALIZED_NAME_DIAGNOSTIC_INFO)
  private Map<String, Object> diagnosticInfo = new HashMap<>();

  public static final String SERIALIZED_NAME_FULFILLMENT_MESSAGES = "fulfillmentMessages";
  @SerializedName(SERIALIZED_NAME_FULFILLMENT_MESSAGES)
  private List<GoogleCloudDialogflowV2IntentMessage> fulfillmentMessages = new ArrayList<>();

  public static final String SERIALIZED_NAME_FULFILLMENT_TEXT = "fulfillmentText";
  @SerializedName(SERIALIZED_NAME_FULFILLMENT_TEXT)
  private String fulfillmentText;

  public static final String SERIALIZED_NAME_INTENT = "intent";
  @SerializedName(SERIALIZED_NAME_INTENT)
  private GoogleCloudDialogflowV2Intent intent;

  public static final String SERIALIZED_NAME_INTENT_DETECTION_CONFIDENCE = "intentDetectionConfidence";
  @SerializedName(SERIALIZED_NAME_INTENT_DETECTION_CONFIDENCE)
  private Float intentDetectionConfidence;

  public static final String SERIALIZED_NAME_LANGUAGE_CODE = "languageCode";
  @SerializedName(SERIALIZED_NAME_LANGUAGE_CODE)
  private String languageCode;

  public static final String SERIALIZED_NAME_OUTPUT_CONTEXTS = "outputContexts";
  @SerializedName(SERIALIZED_NAME_OUTPUT_CONTEXTS)
  private List<GoogleCloudDialogflowV2Context> outputContexts = new ArrayList<>();

  public static final String SERIALIZED_NAME_PARAMETERS = "parameters";
  @SerializedName(SERIALIZED_NAME_PARAMETERS)
  private Map<String, Object> parameters = new HashMap<>();

  public static final String SERIALIZED_NAME_QUERY_TEXT = "queryText";
  @SerializedName(SERIALIZED_NAME_QUERY_TEXT)
  private String queryText;

  public static final String SERIALIZED_NAME_SENTIMENT_ANALYSIS_RESULT = "sentimentAnalysisResult";
  @SerializedName(SERIALIZED_NAME_SENTIMENT_ANALYSIS_RESULT)
  private GoogleCloudDialogflowV2SentimentAnalysisResult sentimentAnalysisResult;

  public static final String SERIALIZED_NAME_SPEECH_RECOGNITION_CONFIDENCE = "speechRecognitionConfidence";
  @SerializedName(SERIALIZED_NAME_SPEECH_RECOGNITION_CONFIDENCE)
  private Float speechRecognitionConfidence;

  public static final String SERIALIZED_NAME_WEBHOOK_PAYLOAD = "webhookPayload";
  @SerializedName(SERIALIZED_NAME_WEBHOOK_PAYLOAD)
  private Map<String, Object> webhookPayload = new HashMap<>();

  public static final String SERIALIZED_NAME_WEBHOOK_SOURCE = "webhookSource";
  @SerializedName(SERIALIZED_NAME_WEBHOOK_SOURCE)
  private String webhookSource;

  public GoogleCloudDialogflowV2QueryResult() {
  }

  public GoogleCloudDialogflowV2QueryResult action(String action) {
    this.action = action;
    return this;
  }

  /**
   * The action name from the matched intent.
   * @return action
   */
  @javax.annotation.Nullable
  public String getAction() {
    return action;
  }

  public void setAction(String action) {
    this.action = action;
  }


  public GoogleCloudDialogflowV2QueryResult allRequiredParamsPresent(Boolean allRequiredParamsPresent) {
    this.allRequiredParamsPresent = allRequiredParamsPresent;
    return this;
  }

  /**
   * This field is set to: - &#x60;false&#x60; if the matched intent has required parameters and not all of the required parameter values have been collected. - &#x60;true&#x60; if all required parameter values have been collected, or if the matched intent doesn&#39;t contain any required parameters.
   * @return allRequiredParamsPresent
   */
  @javax.annotation.Nullable
  public Boolean getAllRequiredParamsPresent() {
    return allRequiredParamsPresent;
  }

  public void setAllRequiredParamsPresent(Boolean allRequiredParamsPresent) {
    this.allRequiredParamsPresent = allRequiredParamsPresent;
  }


  public GoogleCloudDialogflowV2QueryResult cancelsSlotFilling(Boolean cancelsSlotFilling) {
    this.cancelsSlotFilling = cancelsSlotFilling;
    return this;
  }

  /**
   * Indicates whether the conversational query triggers a cancellation for slot filling. For more information, see the [cancel slot filling documentation](https://cloud.google.com/dialogflow/es/docs/intents-actions-parameters#cancel).
   * @return cancelsSlotFilling
   */
  @javax.annotation.Nullable
  public Boolean getCancelsSlotFilling() {
    return cancelsSlotFilling;
  }

  public void setCancelsSlotFilling(Boolean cancelsSlotFilling) {
    this.cancelsSlotFilling = cancelsSlotFilling;
  }


  public GoogleCloudDialogflowV2QueryResult diagnosticInfo(Map<String, Object> diagnosticInfo) {
    this.diagnosticInfo = diagnosticInfo;
    return this;
  }

  public GoogleCloudDialogflowV2QueryResult putDiagnosticInfoItem(String key, Object diagnosticInfoItem) {
    if (this.diagnosticInfo == null) {
      this.diagnosticInfo = new HashMap<>();
    }
    this.diagnosticInfo.put(key, diagnosticInfoItem);
    return this;
  }

  /**
   * Free-form diagnostic information for the associated detect intent request. The fields of this data can change without notice, so you should not write code that depends on its structure. The data may contain: - webhook call latency - webhook errors
   * @return diagnosticInfo
   */
  @javax.annotation.Nullable
  public Map<String, Object> getDiagnosticInfo() {
    return diagnosticInfo;
  }

  public void setDiagnosticInfo(Map<String, Object> diagnosticInfo) {
    this.diagnosticInfo = diagnosticInfo;
  }


  public GoogleCloudDialogflowV2QueryResult fulfillmentMessages(List<GoogleCloudDialogflowV2IntentMessage> fulfillmentMessages) {
    this.fulfillmentMessages = fulfillmentMessages;
    return this;
  }

  public GoogleCloudDialogflowV2QueryResult addFulfillmentMessagesItem(GoogleCloudDialogflowV2IntentMessage fulfillmentMessagesItem) {
    if (this.fulfillmentMessages == null) {
      this.fulfillmentMessages = new ArrayList<>();
    }
    this.fulfillmentMessages.add(fulfillmentMessagesItem);
    return this;
  }

  /**
   * The collection of rich messages to present to the user.
   * @return fulfillmentMessages
   */
  @javax.annotation.Nullable
  public List<GoogleCloudDialogflowV2IntentMessage> getFulfillmentMessages() {
    return fulfillmentMessages;
  }

  public void setFulfillmentMessages(List<GoogleCloudDialogflowV2IntentMessage> fulfillmentMessages) {
    this.fulfillmentMessages = fulfillmentMessages;
  }


  public GoogleCloudDialogflowV2QueryResult fulfillmentText(String fulfillmentText) {
    this.fulfillmentText = fulfillmentText;
    return this;
  }

  /**
   * The text to be pronounced to the user or shown on the screen. Note: This is a legacy field, &#x60;fulfillment_messages&#x60; should be preferred.
   * @return fulfillmentText
   */
  @javax.annotation.Nullable
  public String getFulfillmentText() {
    return fulfillmentText;
  }

  public void setFulfillmentText(String fulfillmentText) {
    this.fulfillmentText = fulfillmentText;
  }


  public GoogleCloudDialogflowV2QueryResult intent(GoogleCloudDialogflowV2Intent intent) {
    this.intent = intent;
    return this;
  }

  /**
   * Get intent
   * @return intent
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowV2Intent getIntent() {
    return intent;
  }

  public void setIntent(GoogleCloudDialogflowV2Intent intent) {
    this.intent = intent;
  }


  public GoogleCloudDialogflowV2QueryResult intentDetectionConfidence(Float intentDetectionConfidence) {
    this.intentDetectionConfidence = intentDetectionConfidence;
    return this;
  }

  /**
   * The intent detection confidence. Values range from 0.0 (completely uncertain) to 1.0 (completely certain). This value is for informational purpose only and is only used to help match the best intent within the classification threshold. This value may change for the same end-user expression at any time due to a model retraining or change in implementation. If there are &#x60;multiple knowledge_answers&#x60; messages, this value is set to the greatest &#x60;knowledgeAnswers.match_confidence&#x60; value in the list.
   * @return intentDetectionConfidence
   */
  @javax.annotation.Nullable
  public Float getIntentDetectionConfidence() {
    return intentDetectionConfidence;
  }

  public void setIntentDetectionConfidence(Float intentDetectionConfidence) {
    this.intentDetectionConfidence = intentDetectionConfidence;
  }


  public GoogleCloudDialogflowV2QueryResult languageCode(String languageCode) {
    this.languageCode = languageCode;
    return this;
  }

  /**
   * The language that was triggered during intent detection. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported language codes.
   * @return languageCode
   */
  @javax.annotation.Nullable
  public String getLanguageCode() {
    return languageCode;
  }

  public void setLanguageCode(String languageCode) {
    this.languageCode = languageCode;
  }


  public GoogleCloudDialogflowV2QueryResult outputContexts(List<GoogleCloudDialogflowV2Context> outputContexts) {
    this.outputContexts = outputContexts;
    return this;
  }

  public GoogleCloudDialogflowV2QueryResult addOutputContextsItem(GoogleCloudDialogflowV2Context outputContextsItem) {
    if (this.outputContexts == null) {
      this.outputContexts = new ArrayList<>();
    }
    this.outputContexts.add(outputContextsItem);
    return this;
  }

  /**
   * The collection of output contexts. If applicable, &#x60;output_contexts.parameters&#x60; contains entries with name &#x60;.original&#x60; containing the original parameter values before the query.
   * @return outputContexts
   */
  @javax.annotation.Nullable
  public List<GoogleCloudDialogflowV2Context> getOutputContexts() {
    return outputContexts;
  }

  public void setOutputContexts(List<GoogleCloudDialogflowV2Context> outputContexts) {
    this.outputContexts = outputContexts;
  }


  public GoogleCloudDialogflowV2QueryResult parameters(Map<String, Object> parameters) {
    this.parameters = parameters;
    return this;
  }

  public GoogleCloudDialogflowV2QueryResult putParametersItem(String key, Object parametersItem) {
    if (this.parameters == null) {
      this.parameters = new HashMap<>();
    }
    this.parameters.put(key, parametersItem);
    return this;
  }

  /**
   * The collection of extracted parameters. Depending on your protocol or client library language, this is a map, associative array, symbol table, dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs: * MapKey type: string * MapKey value: parameter name * MapValue type: If parameter&#39;s entity type is a composite entity then use map, otherwise, depending on the parameter value type, it could be one of string, number, boolean, null, list or map. * MapValue value: If parameter&#39;s entity type is a composite entity then use map from composite entity property names to property values, otherwise, use parameter value.
   * @return parameters
   */
  @javax.annotation.Nullable
  public Map<String, Object> getParameters() {
    return parameters;
  }

  public void setParameters(Map<String, Object> parameters) {
    this.parameters = parameters;
  }


  public GoogleCloudDialogflowV2QueryResult queryText(String queryText) {
    this.queryText = queryText;
    return this;
  }

  /**
   * The original conversational query text: - If natural language text was provided as input, &#x60;query_text&#x60; contains a copy of the input. - If natural language speech audio was provided as input, &#x60;query_text&#x60; contains the speech recognition result. If speech recognizer produced multiple alternatives, a particular one is picked. - If automatic spell correction is enabled, &#x60;query_text&#x60; will contain the corrected user input.
   * @return queryText
   */
  @javax.annotation.Nullable
  public String getQueryText() {
    return queryText;
  }

  public void setQueryText(String queryText) {
    this.queryText = queryText;
  }


  public GoogleCloudDialogflowV2QueryResult sentimentAnalysisResult(GoogleCloudDialogflowV2SentimentAnalysisResult sentimentAnalysisResult) {
    this.sentimentAnalysisResult = sentimentAnalysisResult;
    return this;
  }

  /**
   * Get sentimentAnalysisResult
   * @return sentimentAnalysisResult
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowV2SentimentAnalysisResult getSentimentAnalysisResult() {
    return sentimentAnalysisResult;
  }

  public void setSentimentAnalysisResult(GoogleCloudDialogflowV2SentimentAnalysisResult sentimentAnalysisResult) {
    this.sentimentAnalysisResult = sentimentAnalysisResult;
  }


  public GoogleCloudDialogflowV2QueryResult speechRecognitionConfidence(Float speechRecognitionConfidence) {
    this.speechRecognitionConfidence = speechRecognitionConfidence;
    return this;
  }

  /**
   * The Speech recognition confidence between 0.0 and 1.0. A higher number indicates an estimated greater likelihood that the recognized words are correct. The default of 0.0 is a sentinel value indicating that confidence was not set. This field is not guaranteed to be accurate or set. In particular this field isn&#39;t set for StreamingDetectIntent since the streaming endpoint has separate confidence estimates per portion of the audio in StreamingRecognitionResult.
   * @return speechRecognitionConfidence
   */
  @javax.annotation.Nullable
  public Float getSpeechRecognitionConfidence() {
    return speechRecognitionConfidence;
  }

  public void setSpeechRecognitionConfidence(Float speechRecognitionConfidence) {
    this.speechRecognitionConfidence = speechRecognitionConfidence;
  }


  public GoogleCloudDialogflowV2QueryResult webhookPayload(Map<String, Object> webhookPayload) {
    this.webhookPayload = webhookPayload;
    return this;
  }

  public GoogleCloudDialogflowV2QueryResult putWebhookPayloadItem(String key, Object webhookPayloadItem) {
    if (this.webhookPayload == null) {
      this.webhookPayload = new HashMap<>();
    }
    this.webhookPayload.put(key, webhookPayloadItem);
    return this;
  }

  /**
   * If the query was fulfilled by a webhook call, this field is set to the value of the &#x60;payload&#x60; field returned in the webhook response.
   * @return webhookPayload
   */
  @javax.annotation.Nullable
  public Map<String, Object> getWebhookPayload() {
    return webhookPayload;
  }

  public void setWebhookPayload(Map<String, Object> webhookPayload) {
    this.webhookPayload = webhookPayload;
  }


  public GoogleCloudDialogflowV2QueryResult webhookSource(String webhookSource) {
    this.webhookSource = webhookSource;
    return this;
  }

  /**
   * If the query was fulfilled by a webhook call, this field is set to the value of the &#x60;source&#x60; field returned in the webhook response.
   * @return webhookSource
   */
  @javax.annotation.Nullable
  public String getWebhookSource() {
    return webhookSource;
  }

  public void setWebhookSource(String webhookSource) {
    this.webhookSource = webhookSource;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDialogflowV2QueryResult googleCloudDialogflowV2QueryResult = (GoogleCloudDialogflowV2QueryResult) o;
    return Objects.equals(this.action, googleCloudDialogflowV2QueryResult.action) &&
        Objects.equals(this.allRequiredParamsPresent, googleCloudDialogflowV2QueryResult.allRequiredParamsPresent) &&
        Objects.equals(this.cancelsSlotFilling, googleCloudDialogflowV2QueryResult.cancelsSlotFilling) &&
        Objects.equals(this.diagnosticInfo, googleCloudDialogflowV2QueryResult.diagnosticInfo) &&
        Objects.equals(this.fulfillmentMessages, googleCloudDialogflowV2QueryResult.fulfillmentMessages) &&
        Objects.equals(this.fulfillmentText, googleCloudDialogflowV2QueryResult.fulfillmentText) &&
        Objects.equals(this.intent, googleCloudDialogflowV2QueryResult.intent) &&
        Objects.equals(this.intentDetectionConfidence, googleCloudDialogflowV2QueryResult.intentDetectionConfidence) &&
        Objects.equals(this.languageCode, googleCloudDialogflowV2QueryResult.languageCode) &&
        Objects.equals(this.outputContexts, googleCloudDialogflowV2QueryResult.outputContexts) &&
        Objects.equals(this.parameters, googleCloudDialogflowV2QueryResult.parameters) &&
        Objects.equals(this.queryText, googleCloudDialogflowV2QueryResult.queryText) &&
        Objects.equals(this.sentimentAnalysisResult, googleCloudDialogflowV2QueryResult.sentimentAnalysisResult) &&
        Objects.equals(this.speechRecognitionConfidence, googleCloudDialogflowV2QueryResult.speechRecognitionConfidence) &&
        Objects.equals(this.webhookPayload, googleCloudDialogflowV2QueryResult.webhookPayload) &&
        Objects.equals(this.webhookSource, googleCloudDialogflowV2QueryResult.webhookSource);
  }

  @Override
  public int hashCode() {
    return Objects.hash(action, allRequiredParamsPresent, cancelsSlotFilling, diagnosticInfo, fulfillmentMessages, fulfillmentText, intent, intentDetectionConfidence, languageCode, outputContexts, parameters, queryText, sentimentAnalysisResult, speechRecognitionConfidence, webhookPayload, webhookSource);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDialogflowV2QueryResult {\n");
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    allRequiredParamsPresent: ").append(toIndentedString(allRequiredParamsPresent)).append("\n");
    sb.append("    cancelsSlotFilling: ").append(toIndentedString(cancelsSlotFilling)).append("\n");
    sb.append("    diagnosticInfo: ").append(toIndentedString(diagnosticInfo)).append("\n");
    sb.append("    fulfillmentMessages: ").append(toIndentedString(fulfillmentMessages)).append("\n");
    sb.append("    fulfillmentText: ").append(toIndentedString(fulfillmentText)).append("\n");
    sb.append("    intent: ").append(toIndentedString(intent)).append("\n");
    sb.append("    intentDetectionConfidence: ").append(toIndentedString(intentDetectionConfidence)).append("\n");
    sb.append("    languageCode: ").append(toIndentedString(languageCode)).append("\n");
    sb.append("    outputContexts: ").append(toIndentedString(outputContexts)).append("\n");
    sb.append("    parameters: ").append(toIndentedString(parameters)).append("\n");
    sb.append("    queryText: ").append(toIndentedString(queryText)).append("\n");
    sb.append("    sentimentAnalysisResult: ").append(toIndentedString(sentimentAnalysisResult)).append("\n");
    sb.append("    speechRecognitionConfidence: ").append(toIndentedString(speechRecognitionConfidence)).append("\n");
    sb.append("    webhookPayload: ").append(toIndentedString(webhookPayload)).append("\n");
    sb.append("    webhookSource: ").append(toIndentedString(webhookSource)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("action");
    openapiFields.add("allRequiredParamsPresent");
    openapiFields.add("cancelsSlotFilling");
    openapiFields.add("diagnosticInfo");
    openapiFields.add("fulfillmentMessages");
    openapiFields.add("fulfillmentText");
    openapiFields.add("intent");
    openapiFields.add("intentDetectionConfidence");
    openapiFields.add("languageCode");
    openapiFields.add("outputContexts");
    openapiFields.add("parameters");
    openapiFields.add("queryText");
    openapiFields.add("sentimentAnalysisResult");
    openapiFields.add("speechRecognitionConfidence");
    openapiFields.add("webhookPayload");
    openapiFields.add("webhookSource");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDialogflowV2QueryResult
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDialogflowV2QueryResult.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDialogflowV2QueryResult is not found in the empty JSON string", GoogleCloudDialogflowV2QueryResult.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDialogflowV2QueryResult.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDialogflowV2QueryResult` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("action") != null && !jsonObj.get("action").isJsonNull()) && !jsonObj.get("action").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `action` to be a primitive type in the JSON string but got `%s`", jsonObj.get("action").toString()));
      }
      if (jsonObj.get("fulfillmentMessages") != null && !jsonObj.get("fulfillmentMessages").isJsonNull()) {
        JsonArray jsonArrayfulfillmentMessages = jsonObj.getAsJsonArray("fulfillmentMessages");
        if (jsonArrayfulfillmentMessages != null) {
          // ensure the json data is an array
          if (!jsonObj.get("fulfillmentMessages").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `fulfillmentMessages` to be an array in the JSON string but got `%s`", jsonObj.get("fulfillmentMessages").toString()));
          }

          // validate the optional field `fulfillmentMessages` (array)
          for (int i = 0; i < jsonArrayfulfillmentMessages.size(); i++) {
            GoogleCloudDialogflowV2IntentMessage.validateJsonElement(jsonArrayfulfillmentMessages.get(i));
          };
        }
      }
      if ((jsonObj.get("fulfillmentText") != null && !jsonObj.get("fulfillmentText").isJsonNull()) && !jsonObj.get("fulfillmentText").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fulfillmentText` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fulfillmentText").toString()));
      }
      // validate the optional field `intent`
      if (jsonObj.get("intent") != null && !jsonObj.get("intent").isJsonNull()) {
        GoogleCloudDialogflowV2Intent.validateJsonElement(jsonObj.get("intent"));
      }
      if ((jsonObj.get("languageCode") != null && !jsonObj.get("languageCode").isJsonNull()) && !jsonObj.get("languageCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `languageCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("languageCode").toString()));
      }
      if (jsonObj.get("outputContexts") != null && !jsonObj.get("outputContexts").isJsonNull()) {
        JsonArray jsonArrayoutputContexts = jsonObj.getAsJsonArray("outputContexts");
        if (jsonArrayoutputContexts != null) {
          // ensure the json data is an array
          if (!jsonObj.get("outputContexts").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `outputContexts` to be an array in the JSON string but got `%s`", jsonObj.get("outputContexts").toString()));
          }

          // validate the optional field `outputContexts` (array)
          for (int i = 0; i < jsonArrayoutputContexts.size(); i++) {
            GoogleCloudDialogflowV2Context.validateJsonElement(jsonArrayoutputContexts.get(i));
          };
        }
      }
      if ((jsonObj.get("queryText") != null && !jsonObj.get("queryText").isJsonNull()) && !jsonObj.get("queryText").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `queryText` to be a primitive type in the JSON string but got `%s`", jsonObj.get("queryText").toString()));
      }
      // validate the optional field `sentimentAnalysisResult`
      if (jsonObj.get("sentimentAnalysisResult") != null && !jsonObj.get("sentimentAnalysisResult").isJsonNull()) {
        GoogleCloudDialogflowV2SentimentAnalysisResult.validateJsonElement(jsonObj.get("sentimentAnalysisResult"));
      }
      if ((jsonObj.get("webhookSource") != null && !jsonObj.get("webhookSource").isJsonNull()) && !jsonObj.get("webhookSource").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `webhookSource` to be a primitive type in the JSON string but got `%s`", jsonObj.get("webhookSource").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDialogflowV2QueryResult.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDialogflowV2QueryResult' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDialogflowV2QueryResult> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDialogflowV2QueryResult.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDialogflowV2QueryResult>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDialogflowV2QueryResult value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDialogflowV2QueryResult read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDialogflowV2QueryResult given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDialogflowV2QueryResult
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDialogflowV2QueryResult
   */
  public static GoogleCloudDialogflowV2QueryResult fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDialogflowV2QueryResult.class);
  }

  /**
   * Convert an instance of GoogleCloudDialogflowV2QueryResult to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

