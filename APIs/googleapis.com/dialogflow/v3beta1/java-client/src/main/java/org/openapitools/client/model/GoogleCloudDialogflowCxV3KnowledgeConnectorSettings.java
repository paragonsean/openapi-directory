/*
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudDialogflowCxV3DataStoreConnection;
import org.openapitools.client.model.GoogleCloudDialogflowCxV3Fulfillment;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The Knowledge Connector settings for this page or flow. This includes information such as the attached Knowledge Bases, and the way to execute fulfillment.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:47:33.933227-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDialogflowCxV3KnowledgeConnectorSettings {
  public static final String SERIALIZED_NAME_DATA_STORE_CONNECTIONS = "dataStoreConnections";
  @SerializedName(SERIALIZED_NAME_DATA_STORE_CONNECTIONS)
  private List<GoogleCloudDialogflowCxV3DataStoreConnection> dataStoreConnections = new ArrayList<>();

  public static final String SERIALIZED_NAME_ENABLED = "enabled";
  @SerializedName(SERIALIZED_NAME_ENABLED)
  private Boolean enabled;

  public static final String SERIALIZED_NAME_TARGET_FLOW = "targetFlow";
  @SerializedName(SERIALIZED_NAME_TARGET_FLOW)
  private String targetFlow;

  public static final String SERIALIZED_NAME_TARGET_PAGE = "targetPage";
  @SerializedName(SERIALIZED_NAME_TARGET_PAGE)
  private String targetPage;

  public static final String SERIALIZED_NAME_TRIGGER_FULFILLMENT = "triggerFulfillment";
  @SerializedName(SERIALIZED_NAME_TRIGGER_FULFILLMENT)
  private GoogleCloudDialogflowCxV3Fulfillment triggerFulfillment;

  public GoogleCloudDialogflowCxV3KnowledgeConnectorSettings() {
  }

  public GoogleCloudDialogflowCxV3KnowledgeConnectorSettings dataStoreConnections(List<GoogleCloudDialogflowCxV3DataStoreConnection> dataStoreConnections) {
    this.dataStoreConnections = dataStoreConnections;
    return this;
  }

  public GoogleCloudDialogflowCxV3KnowledgeConnectorSettings addDataStoreConnectionsItem(GoogleCloudDialogflowCxV3DataStoreConnection dataStoreConnectionsItem) {
    if (this.dataStoreConnections == null) {
      this.dataStoreConnections = new ArrayList<>();
    }
    this.dataStoreConnections.add(dataStoreConnectionsItem);
    return this;
  }

  /**
   * Optional. List of related data store connections.
   * @return dataStoreConnections
   */
  @javax.annotation.Nullable
  public List<GoogleCloudDialogflowCxV3DataStoreConnection> getDataStoreConnections() {
    return dataStoreConnections;
  }

  public void setDataStoreConnections(List<GoogleCloudDialogflowCxV3DataStoreConnection> dataStoreConnections) {
    this.dataStoreConnections = dataStoreConnections;
  }


  public GoogleCloudDialogflowCxV3KnowledgeConnectorSettings enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

  /**
   * Whether Knowledge Connector is enabled or not.
   * @return enabled
   */
  @javax.annotation.Nullable
  public Boolean getEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  public GoogleCloudDialogflowCxV3KnowledgeConnectorSettings targetFlow(String targetFlow) {
    this.targetFlow = targetFlow;
    return this;
  }

  /**
   * The target flow to transition to. Format: &#x60;projects//locations//agents//flows/&#x60;.
   * @return targetFlow
   */
  @javax.annotation.Nullable
  public String getTargetFlow() {
    return targetFlow;
  }

  public void setTargetFlow(String targetFlow) {
    this.targetFlow = targetFlow;
  }


  public GoogleCloudDialogflowCxV3KnowledgeConnectorSettings targetPage(String targetPage) {
    this.targetPage = targetPage;
    return this;
  }

  /**
   * The target page to transition to. Format: &#x60;projects//locations//agents//flows//pages/&#x60;.
   * @return targetPage
   */
  @javax.annotation.Nullable
  public String getTargetPage() {
    return targetPage;
  }

  public void setTargetPage(String targetPage) {
    this.targetPage = targetPage;
  }


  public GoogleCloudDialogflowCxV3KnowledgeConnectorSettings triggerFulfillment(GoogleCloudDialogflowCxV3Fulfillment triggerFulfillment) {
    this.triggerFulfillment = triggerFulfillment;
    return this;
  }

  /**
   * Get triggerFulfillment
   * @return triggerFulfillment
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowCxV3Fulfillment getTriggerFulfillment() {
    return triggerFulfillment;
  }

  public void setTriggerFulfillment(GoogleCloudDialogflowCxV3Fulfillment triggerFulfillment) {
    this.triggerFulfillment = triggerFulfillment;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDialogflowCxV3KnowledgeConnectorSettings googleCloudDialogflowCxV3KnowledgeConnectorSettings = (GoogleCloudDialogflowCxV3KnowledgeConnectorSettings) o;
    return Objects.equals(this.dataStoreConnections, googleCloudDialogflowCxV3KnowledgeConnectorSettings.dataStoreConnections) &&
        Objects.equals(this.enabled, googleCloudDialogflowCxV3KnowledgeConnectorSettings.enabled) &&
        Objects.equals(this.targetFlow, googleCloudDialogflowCxV3KnowledgeConnectorSettings.targetFlow) &&
        Objects.equals(this.targetPage, googleCloudDialogflowCxV3KnowledgeConnectorSettings.targetPage) &&
        Objects.equals(this.triggerFulfillment, googleCloudDialogflowCxV3KnowledgeConnectorSettings.triggerFulfillment);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dataStoreConnections, enabled, targetFlow, targetPage, triggerFulfillment);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDialogflowCxV3KnowledgeConnectorSettings {\n");
    sb.append("    dataStoreConnections: ").append(toIndentedString(dataStoreConnections)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    targetFlow: ").append(toIndentedString(targetFlow)).append("\n");
    sb.append("    targetPage: ").append(toIndentedString(targetPage)).append("\n");
    sb.append("    triggerFulfillment: ").append(toIndentedString(triggerFulfillment)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("dataStoreConnections");
    openapiFields.add("enabled");
    openapiFields.add("targetFlow");
    openapiFields.add("targetPage");
    openapiFields.add("triggerFulfillment");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDialogflowCxV3KnowledgeConnectorSettings
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDialogflowCxV3KnowledgeConnectorSettings.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDialogflowCxV3KnowledgeConnectorSettings is not found in the empty JSON string", GoogleCloudDialogflowCxV3KnowledgeConnectorSettings.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDialogflowCxV3KnowledgeConnectorSettings.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDialogflowCxV3KnowledgeConnectorSettings` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("dataStoreConnections") != null && !jsonObj.get("dataStoreConnections").isJsonNull()) {
        JsonArray jsonArraydataStoreConnections = jsonObj.getAsJsonArray("dataStoreConnections");
        if (jsonArraydataStoreConnections != null) {
          // ensure the json data is an array
          if (!jsonObj.get("dataStoreConnections").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `dataStoreConnections` to be an array in the JSON string but got `%s`", jsonObj.get("dataStoreConnections").toString()));
          }

          // validate the optional field `dataStoreConnections` (array)
          for (int i = 0; i < jsonArraydataStoreConnections.size(); i++) {
            GoogleCloudDialogflowCxV3DataStoreConnection.validateJsonElement(jsonArraydataStoreConnections.get(i));
          };
        }
      }
      if ((jsonObj.get("targetFlow") != null && !jsonObj.get("targetFlow").isJsonNull()) && !jsonObj.get("targetFlow").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `targetFlow` to be a primitive type in the JSON string but got `%s`", jsonObj.get("targetFlow").toString()));
      }
      if ((jsonObj.get("targetPage") != null && !jsonObj.get("targetPage").isJsonNull()) && !jsonObj.get("targetPage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `targetPage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("targetPage").toString()));
      }
      // validate the optional field `triggerFulfillment`
      if (jsonObj.get("triggerFulfillment") != null && !jsonObj.get("triggerFulfillment").isJsonNull()) {
        GoogleCloudDialogflowCxV3Fulfillment.validateJsonElement(jsonObj.get("triggerFulfillment"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDialogflowCxV3KnowledgeConnectorSettings.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDialogflowCxV3KnowledgeConnectorSettings' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDialogflowCxV3KnowledgeConnectorSettings> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDialogflowCxV3KnowledgeConnectorSettings.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDialogflowCxV3KnowledgeConnectorSettings>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDialogflowCxV3KnowledgeConnectorSettings value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDialogflowCxV3KnowledgeConnectorSettings read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDialogflowCxV3KnowledgeConnectorSettings given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDialogflowCxV3KnowledgeConnectorSettings
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDialogflowCxV3KnowledgeConnectorSettings
   */
  public static GoogleCloudDialogflowCxV3KnowledgeConnectorSettings fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDialogflowCxV3KnowledgeConnectorSettings.class);
  }

  /**
   * Convert an instance of GoogleCloudDialogflowCxV3KnowledgeConnectorSettings to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

