/*
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.GoogleCloudDialogflowV2IntentMessageBasicCard;
import org.openapitools.client.model.GoogleCloudDialogflowV2IntentMessageBrowseCarouselCard;
import org.openapitools.client.model.GoogleCloudDialogflowV2IntentMessageCard;
import org.openapitools.client.model.GoogleCloudDialogflowV2IntentMessageCarouselSelect;
import org.openapitools.client.model.GoogleCloudDialogflowV2IntentMessageImage;
import org.openapitools.client.model.GoogleCloudDialogflowV2IntentMessageLinkOutSuggestion;
import org.openapitools.client.model.GoogleCloudDialogflowV2IntentMessageListSelect;
import org.openapitools.client.model.GoogleCloudDialogflowV2IntentMessageMediaContent;
import org.openapitools.client.model.GoogleCloudDialogflowV2IntentMessageQuickReplies;
import org.openapitools.client.model.GoogleCloudDialogflowV2IntentMessageSimpleResponses;
import org.openapitools.client.model.GoogleCloudDialogflowV2IntentMessageSuggestions;
import org.openapitools.client.model.GoogleCloudDialogflowV2IntentMessageTableCard;
import org.openapitools.client.model.GoogleCloudDialogflowV2IntentMessageText;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A rich response message. Corresponds to the intent &#x60;Response&#x60; field in the Dialogflow console. For more information, see [Rich response messages](https://cloud.google.com/dialogflow/docs/intents-rich-messages).
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:47:33.933227-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDialogflowV2IntentMessage {
  public static final String SERIALIZED_NAME_BASIC_CARD = "basicCard";
  @SerializedName(SERIALIZED_NAME_BASIC_CARD)
  private GoogleCloudDialogflowV2IntentMessageBasicCard basicCard;

  public static final String SERIALIZED_NAME_BROWSE_CAROUSEL_CARD = "browseCarouselCard";
  @SerializedName(SERIALIZED_NAME_BROWSE_CAROUSEL_CARD)
  private GoogleCloudDialogflowV2IntentMessageBrowseCarouselCard browseCarouselCard;

  public static final String SERIALIZED_NAME_CARD = "card";
  @SerializedName(SERIALIZED_NAME_CARD)
  private GoogleCloudDialogflowV2IntentMessageCard card;

  public static final String SERIALIZED_NAME_CAROUSEL_SELECT = "carouselSelect";
  @SerializedName(SERIALIZED_NAME_CAROUSEL_SELECT)
  private GoogleCloudDialogflowV2IntentMessageCarouselSelect carouselSelect;

  public static final String SERIALIZED_NAME_IMAGE = "image";
  @SerializedName(SERIALIZED_NAME_IMAGE)
  private GoogleCloudDialogflowV2IntentMessageImage image;

  public static final String SERIALIZED_NAME_LINK_OUT_SUGGESTION = "linkOutSuggestion";
  @SerializedName(SERIALIZED_NAME_LINK_OUT_SUGGESTION)
  private GoogleCloudDialogflowV2IntentMessageLinkOutSuggestion linkOutSuggestion;

  public static final String SERIALIZED_NAME_LIST_SELECT = "listSelect";
  @SerializedName(SERIALIZED_NAME_LIST_SELECT)
  private GoogleCloudDialogflowV2IntentMessageListSelect listSelect;

  public static final String SERIALIZED_NAME_MEDIA_CONTENT = "mediaContent";
  @SerializedName(SERIALIZED_NAME_MEDIA_CONTENT)
  private GoogleCloudDialogflowV2IntentMessageMediaContent mediaContent;

  public static final String SERIALIZED_NAME_PAYLOAD = "payload";
  @SerializedName(SERIALIZED_NAME_PAYLOAD)
  private Map<String, Object> payload = new HashMap<>();

  /**
   * Optional. The platform that this message is intended for.
   */
  @JsonAdapter(PlatformEnum.Adapter.class)
  public enum PlatformEnum {
    PLATFORM_UNSPECIFIED("PLATFORM_UNSPECIFIED"),
    
    FACEBOOK("FACEBOOK"),
    
    SLACK("SLACK"),
    
    TELEGRAM("TELEGRAM"),
    
    KIK("KIK"),
    
    SKYPE("SKYPE"),
    
    LINE("LINE"),
    
    VIBER("VIBER"),
    
    ACTIONS_ON_GOOGLE("ACTIONS_ON_GOOGLE"),
    
    GOOGLE_HANGOUTS("GOOGLE_HANGOUTS");

    private String value;

    PlatformEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PlatformEnum fromValue(String value) {
      for (PlatformEnum b : PlatformEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<PlatformEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PlatformEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PlatformEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return PlatformEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      PlatformEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_PLATFORM = "platform";
  @SerializedName(SERIALIZED_NAME_PLATFORM)
  private PlatformEnum platform;

  public static final String SERIALIZED_NAME_QUICK_REPLIES = "quickReplies";
  @SerializedName(SERIALIZED_NAME_QUICK_REPLIES)
  private GoogleCloudDialogflowV2IntentMessageQuickReplies quickReplies;

  public static final String SERIALIZED_NAME_SIMPLE_RESPONSES = "simpleResponses";
  @SerializedName(SERIALIZED_NAME_SIMPLE_RESPONSES)
  private GoogleCloudDialogflowV2IntentMessageSimpleResponses simpleResponses;

  public static final String SERIALIZED_NAME_SUGGESTIONS = "suggestions";
  @SerializedName(SERIALIZED_NAME_SUGGESTIONS)
  private GoogleCloudDialogflowV2IntentMessageSuggestions suggestions;

  public static final String SERIALIZED_NAME_TABLE_CARD = "tableCard";
  @SerializedName(SERIALIZED_NAME_TABLE_CARD)
  private GoogleCloudDialogflowV2IntentMessageTableCard tableCard;

  public static final String SERIALIZED_NAME_TEXT = "text";
  @SerializedName(SERIALIZED_NAME_TEXT)
  private GoogleCloudDialogflowV2IntentMessageText text;

  public GoogleCloudDialogflowV2IntentMessage() {
  }

  public GoogleCloudDialogflowV2IntentMessage basicCard(GoogleCloudDialogflowV2IntentMessageBasicCard basicCard) {
    this.basicCard = basicCard;
    return this;
  }

  /**
   * Get basicCard
   * @return basicCard
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowV2IntentMessageBasicCard getBasicCard() {
    return basicCard;
  }

  public void setBasicCard(GoogleCloudDialogflowV2IntentMessageBasicCard basicCard) {
    this.basicCard = basicCard;
  }


  public GoogleCloudDialogflowV2IntentMessage browseCarouselCard(GoogleCloudDialogflowV2IntentMessageBrowseCarouselCard browseCarouselCard) {
    this.browseCarouselCard = browseCarouselCard;
    return this;
  }

  /**
   * Get browseCarouselCard
   * @return browseCarouselCard
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowV2IntentMessageBrowseCarouselCard getBrowseCarouselCard() {
    return browseCarouselCard;
  }

  public void setBrowseCarouselCard(GoogleCloudDialogflowV2IntentMessageBrowseCarouselCard browseCarouselCard) {
    this.browseCarouselCard = browseCarouselCard;
  }


  public GoogleCloudDialogflowV2IntentMessage card(GoogleCloudDialogflowV2IntentMessageCard card) {
    this.card = card;
    return this;
  }

  /**
   * Get card
   * @return card
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowV2IntentMessageCard getCard() {
    return card;
  }

  public void setCard(GoogleCloudDialogflowV2IntentMessageCard card) {
    this.card = card;
  }


  public GoogleCloudDialogflowV2IntentMessage carouselSelect(GoogleCloudDialogflowV2IntentMessageCarouselSelect carouselSelect) {
    this.carouselSelect = carouselSelect;
    return this;
  }

  /**
   * Get carouselSelect
   * @return carouselSelect
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowV2IntentMessageCarouselSelect getCarouselSelect() {
    return carouselSelect;
  }

  public void setCarouselSelect(GoogleCloudDialogflowV2IntentMessageCarouselSelect carouselSelect) {
    this.carouselSelect = carouselSelect;
  }


  public GoogleCloudDialogflowV2IntentMessage image(GoogleCloudDialogflowV2IntentMessageImage image) {
    this.image = image;
    return this;
  }

  /**
   * Get image
   * @return image
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowV2IntentMessageImage getImage() {
    return image;
  }

  public void setImage(GoogleCloudDialogflowV2IntentMessageImage image) {
    this.image = image;
  }


  public GoogleCloudDialogflowV2IntentMessage linkOutSuggestion(GoogleCloudDialogflowV2IntentMessageLinkOutSuggestion linkOutSuggestion) {
    this.linkOutSuggestion = linkOutSuggestion;
    return this;
  }

  /**
   * Get linkOutSuggestion
   * @return linkOutSuggestion
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowV2IntentMessageLinkOutSuggestion getLinkOutSuggestion() {
    return linkOutSuggestion;
  }

  public void setLinkOutSuggestion(GoogleCloudDialogflowV2IntentMessageLinkOutSuggestion linkOutSuggestion) {
    this.linkOutSuggestion = linkOutSuggestion;
  }


  public GoogleCloudDialogflowV2IntentMessage listSelect(GoogleCloudDialogflowV2IntentMessageListSelect listSelect) {
    this.listSelect = listSelect;
    return this;
  }

  /**
   * Get listSelect
   * @return listSelect
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowV2IntentMessageListSelect getListSelect() {
    return listSelect;
  }

  public void setListSelect(GoogleCloudDialogflowV2IntentMessageListSelect listSelect) {
    this.listSelect = listSelect;
  }


  public GoogleCloudDialogflowV2IntentMessage mediaContent(GoogleCloudDialogflowV2IntentMessageMediaContent mediaContent) {
    this.mediaContent = mediaContent;
    return this;
  }

  /**
   * Get mediaContent
   * @return mediaContent
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowV2IntentMessageMediaContent getMediaContent() {
    return mediaContent;
  }

  public void setMediaContent(GoogleCloudDialogflowV2IntentMessageMediaContent mediaContent) {
    this.mediaContent = mediaContent;
  }


  public GoogleCloudDialogflowV2IntentMessage payload(Map<String, Object> payload) {
    this.payload = payload;
    return this;
  }

  public GoogleCloudDialogflowV2IntentMessage putPayloadItem(String key, Object payloadItem) {
    if (this.payload == null) {
      this.payload = new HashMap<>();
    }
    this.payload.put(key, payloadItem);
    return this;
  }

  /**
   * A custom platform-specific response.
   * @return payload
   */
  @javax.annotation.Nullable
  public Map<String, Object> getPayload() {
    return payload;
  }

  public void setPayload(Map<String, Object> payload) {
    this.payload = payload;
  }


  public GoogleCloudDialogflowV2IntentMessage platform(PlatformEnum platform) {
    this.platform = platform;
    return this;
  }

  /**
   * Optional. The platform that this message is intended for.
   * @return platform
   */
  @javax.annotation.Nullable
  public PlatformEnum getPlatform() {
    return platform;
  }

  public void setPlatform(PlatformEnum platform) {
    this.platform = platform;
  }


  public GoogleCloudDialogflowV2IntentMessage quickReplies(GoogleCloudDialogflowV2IntentMessageQuickReplies quickReplies) {
    this.quickReplies = quickReplies;
    return this;
  }

  /**
   * Get quickReplies
   * @return quickReplies
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowV2IntentMessageQuickReplies getQuickReplies() {
    return quickReplies;
  }

  public void setQuickReplies(GoogleCloudDialogflowV2IntentMessageQuickReplies quickReplies) {
    this.quickReplies = quickReplies;
  }


  public GoogleCloudDialogflowV2IntentMessage simpleResponses(GoogleCloudDialogflowV2IntentMessageSimpleResponses simpleResponses) {
    this.simpleResponses = simpleResponses;
    return this;
  }

  /**
   * Get simpleResponses
   * @return simpleResponses
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowV2IntentMessageSimpleResponses getSimpleResponses() {
    return simpleResponses;
  }

  public void setSimpleResponses(GoogleCloudDialogflowV2IntentMessageSimpleResponses simpleResponses) {
    this.simpleResponses = simpleResponses;
  }


  public GoogleCloudDialogflowV2IntentMessage suggestions(GoogleCloudDialogflowV2IntentMessageSuggestions suggestions) {
    this.suggestions = suggestions;
    return this;
  }

  /**
   * Get suggestions
   * @return suggestions
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowV2IntentMessageSuggestions getSuggestions() {
    return suggestions;
  }

  public void setSuggestions(GoogleCloudDialogflowV2IntentMessageSuggestions suggestions) {
    this.suggestions = suggestions;
  }


  public GoogleCloudDialogflowV2IntentMessage tableCard(GoogleCloudDialogflowV2IntentMessageTableCard tableCard) {
    this.tableCard = tableCard;
    return this;
  }

  /**
   * Get tableCard
   * @return tableCard
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowV2IntentMessageTableCard getTableCard() {
    return tableCard;
  }

  public void setTableCard(GoogleCloudDialogflowV2IntentMessageTableCard tableCard) {
    this.tableCard = tableCard;
  }


  public GoogleCloudDialogflowV2IntentMessage text(GoogleCloudDialogflowV2IntentMessageText text) {
    this.text = text;
    return this;
  }

  /**
   * Get text
   * @return text
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowV2IntentMessageText getText() {
    return text;
  }

  public void setText(GoogleCloudDialogflowV2IntentMessageText text) {
    this.text = text;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDialogflowV2IntentMessage googleCloudDialogflowV2IntentMessage = (GoogleCloudDialogflowV2IntentMessage) o;
    return Objects.equals(this.basicCard, googleCloudDialogflowV2IntentMessage.basicCard) &&
        Objects.equals(this.browseCarouselCard, googleCloudDialogflowV2IntentMessage.browseCarouselCard) &&
        Objects.equals(this.card, googleCloudDialogflowV2IntentMessage.card) &&
        Objects.equals(this.carouselSelect, googleCloudDialogflowV2IntentMessage.carouselSelect) &&
        Objects.equals(this.image, googleCloudDialogflowV2IntentMessage.image) &&
        Objects.equals(this.linkOutSuggestion, googleCloudDialogflowV2IntentMessage.linkOutSuggestion) &&
        Objects.equals(this.listSelect, googleCloudDialogflowV2IntentMessage.listSelect) &&
        Objects.equals(this.mediaContent, googleCloudDialogflowV2IntentMessage.mediaContent) &&
        Objects.equals(this.payload, googleCloudDialogflowV2IntentMessage.payload) &&
        Objects.equals(this.platform, googleCloudDialogflowV2IntentMessage.platform) &&
        Objects.equals(this.quickReplies, googleCloudDialogflowV2IntentMessage.quickReplies) &&
        Objects.equals(this.simpleResponses, googleCloudDialogflowV2IntentMessage.simpleResponses) &&
        Objects.equals(this.suggestions, googleCloudDialogflowV2IntentMessage.suggestions) &&
        Objects.equals(this.tableCard, googleCloudDialogflowV2IntentMessage.tableCard) &&
        Objects.equals(this.text, googleCloudDialogflowV2IntentMessage.text);
  }

  @Override
  public int hashCode() {
    return Objects.hash(basicCard, browseCarouselCard, card, carouselSelect, image, linkOutSuggestion, listSelect, mediaContent, payload, platform, quickReplies, simpleResponses, suggestions, tableCard, text);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDialogflowV2IntentMessage {\n");
    sb.append("    basicCard: ").append(toIndentedString(basicCard)).append("\n");
    sb.append("    browseCarouselCard: ").append(toIndentedString(browseCarouselCard)).append("\n");
    sb.append("    card: ").append(toIndentedString(card)).append("\n");
    sb.append("    carouselSelect: ").append(toIndentedString(carouselSelect)).append("\n");
    sb.append("    image: ").append(toIndentedString(image)).append("\n");
    sb.append("    linkOutSuggestion: ").append(toIndentedString(linkOutSuggestion)).append("\n");
    sb.append("    listSelect: ").append(toIndentedString(listSelect)).append("\n");
    sb.append("    mediaContent: ").append(toIndentedString(mediaContent)).append("\n");
    sb.append("    payload: ").append(toIndentedString(payload)).append("\n");
    sb.append("    platform: ").append(toIndentedString(platform)).append("\n");
    sb.append("    quickReplies: ").append(toIndentedString(quickReplies)).append("\n");
    sb.append("    simpleResponses: ").append(toIndentedString(simpleResponses)).append("\n");
    sb.append("    suggestions: ").append(toIndentedString(suggestions)).append("\n");
    sb.append("    tableCard: ").append(toIndentedString(tableCard)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("basicCard");
    openapiFields.add("browseCarouselCard");
    openapiFields.add("card");
    openapiFields.add("carouselSelect");
    openapiFields.add("image");
    openapiFields.add("linkOutSuggestion");
    openapiFields.add("listSelect");
    openapiFields.add("mediaContent");
    openapiFields.add("payload");
    openapiFields.add("platform");
    openapiFields.add("quickReplies");
    openapiFields.add("simpleResponses");
    openapiFields.add("suggestions");
    openapiFields.add("tableCard");
    openapiFields.add("text");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDialogflowV2IntentMessage
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDialogflowV2IntentMessage.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDialogflowV2IntentMessage is not found in the empty JSON string", GoogleCloudDialogflowV2IntentMessage.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDialogflowV2IntentMessage.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDialogflowV2IntentMessage` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `basicCard`
      if (jsonObj.get("basicCard") != null && !jsonObj.get("basicCard").isJsonNull()) {
        GoogleCloudDialogflowV2IntentMessageBasicCard.validateJsonElement(jsonObj.get("basicCard"));
      }
      // validate the optional field `browseCarouselCard`
      if (jsonObj.get("browseCarouselCard") != null && !jsonObj.get("browseCarouselCard").isJsonNull()) {
        GoogleCloudDialogflowV2IntentMessageBrowseCarouselCard.validateJsonElement(jsonObj.get("browseCarouselCard"));
      }
      // validate the optional field `card`
      if (jsonObj.get("card") != null && !jsonObj.get("card").isJsonNull()) {
        GoogleCloudDialogflowV2IntentMessageCard.validateJsonElement(jsonObj.get("card"));
      }
      // validate the optional field `carouselSelect`
      if (jsonObj.get("carouselSelect") != null && !jsonObj.get("carouselSelect").isJsonNull()) {
        GoogleCloudDialogflowV2IntentMessageCarouselSelect.validateJsonElement(jsonObj.get("carouselSelect"));
      }
      // validate the optional field `image`
      if (jsonObj.get("image") != null && !jsonObj.get("image").isJsonNull()) {
        GoogleCloudDialogflowV2IntentMessageImage.validateJsonElement(jsonObj.get("image"));
      }
      // validate the optional field `linkOutSuggestion`
      if (jsonObj.get("linkOutSuggestion") != null && !jsonObj.get("linkOutSuggestion").isJsonNull()) {
        GoogleCloudDialogflowV2IntentMessageLinkOutSuggestion.validateJsonElement(jsonObj.get("linkOutSuggestion"));
      }
      // validate the optional field `listSelect`
      if (jsonObj.get("listSelect") != null && !jsonObj.get("listSelect").isJsonNull()) {
        GoogleCloudDialogflowV2IntentMessageListSelect.validateJsonElement(jsonObj.get("listSelect"));
      }
      // validate the optional field `mediaContent`
      if (jsonObj.get("mediaContent") != null && !jsonObj.get("mediaContent").isJsonNull()) {
        GoogleCloudDialogflowV2IntentMessageMediaContent.validateJsonElement(jsonObj.get("mediaContent"));
      }
      if ((jsonObj.get("platform") != null && !jsonObj.get("platform").isJsonNull()) && !jsonObj.get("platform").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `platform` to be a primitive type in the JSON string but got `%s`", jsonObj.get("platform").toString()));
      }
      // validate the optional field `platform`
      if (jsonObj.get("platform") != null && !jsonObj.get("platform").isJsonNull()) {
        PlatformEnum.validateJsonElement(jsonObj.get("platform"));
      }
      // validate the optional field `quickReplies`
      if (jsonObj.get("quickReplies") != null && !jsonObj.get("quickReplies").isJsonNull()) {
        GoogleCloudDialogflowV2IntentMessageQuickReplies.validateJsonElement(jsonObj.get("quickReplies"));
      }
      // validate the optional field `simpleResponses`
      if (jsonObj.get("simpleResponses") != null && !jsonObj.get("simpleResponses").isJsonNull()) {
        GoogleCloudDialogflowV2IntentMessageSimpleResponses.validateJsonElement(jsonObj.get("simpleResponses"));
      }
      // validate the optional field `suggestions`
      if (jsonObj.get("suggestions") != null && !jsonObj.get("suggestions").isJsonNull()) {
        GoogleCloudDialogflowV2IntentMessageSuggestions.validateJsonElement(jsonObj.get("suggestions"));
      }
      // validate the optional field `tableCard`
      if (jsonObj.get("tableCard") != null && !jsonObj.get("tableCard").isJsonNull()) {
        GoogleCloudDialogflowV2IntentMessageTableCard.validateJsonElement(jsonObj.get("tableCard"));
      }
      // validate the optional field `text`
      if (jsonObj.get("text") != null && !jsonObj.get("text").isJsonNull()) {
        GoogleCloudDialogflowV2IntentMessageText.validateJsonElement(jsonObj.get("text"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDialogflowV2IntentMessage.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDialogflowV2IntentMessage' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDialogflowV2IntentMessage> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDialogflowV2IntentMessage.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDialogflowV2IntentMessage>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDialogflowV2IntentMessage value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDialogflowV2IntentMessage read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDialogflowV2IntentMessage given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDialogflowV2IntentMessage
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDialogflowV2IntentMessage
   */
  public static GoogleCloudDialogflowV2IntentMessage fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDialogflowV2IntentMessage.class);
  }

  /**
   * Convert an instance of GoogleCloudDialogflowV2IntentMessage to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

