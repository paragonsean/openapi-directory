/*
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudDialogflowCxV3beta1BoostSpec;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Boost specifications for data stores.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:47:33.933227-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDialogflowCxV3beta1BoostSpecs {
  public static final String SERIALIZED_NAME_DATA_STORES = "dataStores";
  @SerializedName(SERIALIZED_NAME_DATA_STORES)
  private List<String> dataStores = new ArrayList<>();

  public static final String SERIALIZED_NAME_SPEC = "spec";
  @SerializedName(SERIALIZED_NAME_SPEC)
  private List<GoogleCloudDialogflowCxV3beta1BoostSpec> spec = new ArrayList<>();

  public GoogleCloudDialogflowCxV3beta1BoostSpecs() {
  }

  public GoogleCloudDialogflowCxV3beta1BoostSpecs dataStores(List<String> dataStores) {
    this.dataStores = dataStores;
    return this;
  }

  public GoogleCloudDialogflowCxV3beta1BoostSpecs addDataStoresItem(String dataStoresItem) {
    if (this.dataStores == null) {
      this.dataStores = new ArrayList<>();
    }
    this.dataStores.add(dataStoresItem);
    return this;
  }

  /**
   * Optional. Data Stores where the boosting configuration is applied. The full names of the referenced data stores. Formats: &#x60;projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}&#x60; &#x60;projects/{project}/locations/{location}/dataStores/{data_store}
   * @return dataStores
   */
  @javax.annotation.Nullable
  public List<String> getDataStores() {
    return dataStores;
  }

  public void setDataStores(List<String> dataStores) {
    this.dataStores = dataStores;
  }


  public GoogleCloudDialogflowCxV3beta1BoostSpecs spec(List<GoogleCloudDialogflowCxV3beta1BoostSpec> spec) {
    this.spec = spec;
    return this;
  }

  public GoogleCloudDialogflowCxV3beta1BoostSpecs addSpecItem(GoogleCloudDialogflowCxV3beta1BoostSpec specItem) {
    if (this.spec == null) {
      this.spec = new ArrayList<>();
    }
    this.spec.add(specItem);
    return this;
  }

  /**
   * Optional. A list of boosting specifications.
   * @return spec
   */
  @javax.annotation.Nullable
  public List<GoogleCloudDialogflowCxV3beta1BoostSpec> getSpec() {
    return spec;
  }

  public void setSpec(List<GoogleCloudDialogflowCxV3beta1BoostSpec> spec) {
    this.spec = spec;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDialogflowCxV3beta1BoostSpecs googleCloudDialogflowCxV3beta1BoostSpecs = (GoogleCloudDialogflowCxV3beta1BoostSpecs) o;
    return Objects.equals(this.dataStores, googleCloudDialogflowCxV3beta1BoostSpecs.dataStores) &&
        Objects.equals(this.spec, googleCloudDialogflowCxV3beta1BoostSpecs.spec);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dataStores, spec);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDialogflowCxV3beta1BoostSpecs {\n");
    sb.append("    dataStores: ").append(toIndentedString(dataStores)).append("\n");
    sb.append("    spec: ").append(toIndentedString(spec)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("dataStores");
    openapiFields.add("spec");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDialogflowCxV3beta1BoostSpecs
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDialogflowCxV3beta1BoostSpecs.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDialogflowCxV3beta1BoostSpecs is not found in the empty JSON string", GoogleCloudDialogflowCxV3beta1BoostSpecs.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDialogflowCxV3beta1BoostSpecs.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDialogflowCxV3beta1BoostSpecs` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("dataStores") != null && !jsonObj.get("dataStores").isJsonNull() && !jsonObj.get("dataStores").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `dataStores` to be an array in the JSON string but got `%s`", jsonObj.get("dataStores").toString()));
      }
      if (jsonObj.get("spec") != null && !jsonObj.get("spec").isJsonNull()) {
        JsonArray jsonArrayspec = jsonObj.getAsJsonArray("spec");
        if (jsonArrayspec != null) {
          // ensure the json data is an array
          if (!jsonObj.get("spec").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `spec` to be an array in the JSON string but got `%s`", jsonObj.get("spec").toString()));
          }

          // validate the optional field `spec` (array)
          for (int i = 0; i < jsonArrayspec.size(); i++) {
            GoogleCloudDialogflowCxV3beta1BoostSpec.validateJsonElement(jsonArrayspec.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDialogflowCxV3beta1BoostSpecs.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDialogflowCxV3beta1BoostSpecs' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDialogflowCxV3beta1BoostSpecs> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDialogflowCxV3beta1BoostSpecs.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDialogflowCxV3beta1BoostSpecs>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDialogflowCxV3beta1BoostSpecs value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDialogflowCxV3beta1BoostSpecs read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDialogflowCxV3beta1BoostSpecs given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDialogflowCxV3beta1BoostSpecs
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDialogflowCxV3beta1BoostSpecs
   */
  public static GoogleCloudDialogflowCxV3beta1BoostSpecs fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDialogflowCxV3beta1BoostSpecs.class);
  }

  /**
   * Convert an instance of GoogleCloudDialogflowCxV3beta1BoostSpecs to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

