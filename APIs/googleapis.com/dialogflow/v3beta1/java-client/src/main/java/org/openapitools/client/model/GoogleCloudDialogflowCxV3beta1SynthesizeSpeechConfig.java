/*
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudDialogflowCxV3beta1VoiceSelectionParams;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Configuration of how speech should be synthesized.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:47:33.933227-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDialogflowCxV3beta1SynthesizeSpeechConfig {
  public static final String SERIALIZED_NAME_EFFECTS_PROFILE_ID = "effectsProfileId";
  @SerializedName(SERIALIZED_NAME_EFFECTS_PROFILE_ID)
  private List<String> effectsProfileId = new ArrayList<>();

  public static final String SERIALIZED_NAME_PITCH = "pitch";
  @SerializedName(SERIALIZED_NAME_PITCH)
  private Double pitch;

  public static final String SERIALIZED_NAME_SPEAKING_RATE = "speakingRate";
  @SerializedName(SERIALIZED_NAME_SPEAKING_RATE)
  private Double speakingRate;

  public static final String SERIALIZED_NAME_VOICE = "voice";
  @SerializedName(SERIALIZED_NAME_VOICE)
  private GoogleCloudDialogflowCxV3beta1VoiceSelectionParams voice;

  public static final String SERIALIZED_NAME_VOLUME_GAIN_DB = "volumeGainDb";
  @SerializedName(SERIALIZED_NAME_VOLUME_GAIN_DB)
  private Double volumeGainDb;

  public GoogleCloudDialogflowCxV3beta1SynthesizeSpeechConfig() {
  }

  public GoogleCloudDialogflowCxV3beta1SynthesizeSpeechConfig effectsProfileId(List<String> effectsProfileId) {
    this.effectsProfileId = effectsProfileId;
    return this;
  }

  public GoogleCloudDialogflowCxV3beta1SynthesizeSpeechConfig addEffectsProfileIdItem(String effectsProfileIdItem) {
    if (this.effectsProfileId == null) {
      this.effectsProfileId = new ArrayList<>();
    }
    this.effectsProfileId.add(effectsProfileIdItem);
    return this;
  }

  /**
   * Optional. An identifier which selects &#39;audio effects&#39; profiles that are applied on (post synthesized) text to speech. Effects are applied on top of each other in the order they are given.
   * @return effectsProfileId
   */
  @javax.annotation.Nullable
  public List<String> getEffectsProfileId() {
    return effectsProfileId;
  }

  public void setEffectsProfileId(List<String> effectsProfileId) {
    this.effectsProfileId = effectsProfileId;
  }


  public GoogleCloudDialogflowCxV3beta1SynthesizeSpeechConfig pitch(Double pitch) {
    this.pitch = pitch;
    return this;
  }

  /**
   * Optional. Speaking pitch, in the range [-20.0, 20.0]. 20 means increase 20 semitones from the original pitch. -20 means decrease 20 semitones from the original pitch.
   * @return pitch
   */
  @javax.annotation.Nullable
  public Double getPitch() {
    return pitch;
  }

  public void setPitch(Double pitch) {
    this.pitch = pitch;
  }


  public GoogleCloudDialogflowCxV3beta1SynthesizeSpeechConfig speakingRate(Double speakingRate) {
    this.speakingRate = speakingRate;
    return this;
  }

  /**
   * Optional. Speaking rate/speed, in the range [0.25, 4.0]. 1.0 is the normal native speed supported by the specific voice. 2.0 is twice as fast, and 0.5 is half as fast. If unset(0.0), defaults to the native 1.0 speed. Any other values &lt; 0.25 or &gt; 4.0 will return an error.
   * @return speakingRate
   */
  @javax.annotation.Nullable
  public Double getSpeakingRate() {
    return speakingRate;
  }

  public void setSpeakingRate(Double speakingRate) {
    this.speakingRate = speakingRate;
  }


  public GoogleCloudDialogflowCxV3beta1SynthesizeSpeechConfig voice(GoogleCloudDialogflowCxV3beta1VoiceSelectionParams voice) {
    this.voice = voice;
    return this;
  }

  /**
   * Get voice
   * @return voice
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowCxV3beta1VoiceSelectionParams getVoice() {
    return voice;
  }

  public void setVoice(GoogleCloudDialogflowCxV3beta1VoiceSelectionParams voice) {
    this.voice = voice;
  }


  public GoogleCloudDialogflowCxV3beta1SynthesizeSpeechConfig volumeGainDb(Double volumeGainDb) {
    this.volumeGainDb = volumeGainDb;
    return this;
  }

  /**
   * Optional. Volume gain (in dB) of the normal native volume supported by the specific voice, in the range [-96.0, 16.0]. If unset, or set to a value of 0.0 (dB), will play at normal native signal amplitude. A value of -6.0 (dB) will play at approximately half the amplitude of the normal native signal amplitude. A value of +6.0 (dB) will play at approximately twice the amplitude of the normal native signal amplitude. We strongly recommend not to exceed +10 (dB) as there&#39;s usually no effective increase in loudness for any value greater than that.
   * @return volumeGainDb
   */
  @javax.annotation.Nullable
  public Double getVolumeGainDb() {
    return volumeGainDb;
  }

  public void setVolumeGainDb(Double volumeGainDb) {
    this.volumeGainDb = volumeGainDb;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDialogflowCxV3beta1SynthesizeSpeechConfig googleCloudDialogflowCxV3beta1SynthesizeSpeechConfig = (GoogleCloudDialogflowCxV3beta1SynthesizeSpeechConfig) o;
    return Objects.equals(this.effectsProfileId, googleCloudDialogflowCxV3beta1SynthesizeSpeechConfig.effectsProfileId) &&
        Objects.equals(this.pitch, googleCloudDialogflowCxV3beta1SynthesizeSpeechConfig.pitch) &&
        Objects.equals(this.speakingRate, googleCloudDialogflowCxV3beta1SynthesizeSpeechConfig.speakingRate) &&
        Objects.equals(this.voice, googleCloudDialogflowCxV3beta1SynthesizeSpeechConfig.voice) &&
        Objects.equals(this.volumeGainDb, googleCloudDialogflowCxV3beta1SynthesizeSpeechConfig.volumeGainDb);
  }

  @Override
  public int hashCode() {
    return Objects.hash(effectsProfileId, pitch, speakingRate, voice, volumeGainDb);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDialogflowCxV3beta1SynthesizeSpeechConfig {\n");
    sb.append("    effectsProfileId: ").append(toIndentedString(effectsProfileId)).append("\n");
    sb.append("    pitch: ").append(toIndentedString(pitch)).append("\n");
    sb.append("    speakingRate: ").append(toIndentedString(speakingRate)).append("\n");
    sb.append("    voice: ").append(toIndentedString(voice)).append("\n");
    sb.append("    volumeGainDb: ").append(toIndentedString(volumeGainDb)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("effectsProfileId");
    openapiFields.add("pitch");
    openapiFields.add("speakingRate");
    openapiFields.add("voice");
    openapiFields.add("volumeGainDb");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDialogflowCxV3beta1SynthesizeSpeechConfig
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDialogflowCxV3beta1SynthesizeSpeechConfig.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDialogflowCxV3beta1SynthesizeSpeechConfig is not found in the empty JSON string", GoogleCloudDialogflowCxV3beta1SynthesizeSpeechConfig.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDialogflowCxV3beta1SynthesizeSpeechConfig.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDialogflowCxV3beta1SynthesizeSpeechConfig` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("effectsProfileId") != null && !jsonObj.get("effectsProfileId").isJsonNull() && !jsonObj.get("effectsProfileId").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `effectsProfileId` to be an array in the JSON string but got `%s`", jsonObj.get("effectsProfileId").toString()));
      }
      // validate the optional field `voice`
      if (jsonObj.get("voice") != null && !jsonObj.get("voice").isJsonNull()) {
        GoogleCloudDialogflowCxV3beta1VoiceSelectionParams.validateJsonElement(jsonObj.get("voice"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDialogflowCxV3beta1SynthesizeSpeechConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDialogflowCxV3beta1SynthesizeSpeechConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDialogflowCxV3beta1SynthesizeSpeechConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDialogflowCxV3beta1SynthesizeSpeechConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDialogflowCxV3beta1SynthesizeSpeechConfig>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDialogflowCxV3beta1SynthesizeSpeechConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDialogflowCxV3beta1SynthesizeSpeechConfig read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDialogflowCxV3beta1SynthesizeSpeechConfig given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDialogflowCxV3beta1SynthesizeSpeechConfig
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDialogflowCxV3beta1SynthesizeSpeechConfig
   */
  public static GoogleCloudDialogflowCxV3beta1SynthesizeSpeechConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDialogflowCxV3beta1SynthesizeSpeechConfig.class);
  }

  /**
   * Convert an instance of GoogleCloudDialogflowCxV3beta1SynthesizeSpeechConfig to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

