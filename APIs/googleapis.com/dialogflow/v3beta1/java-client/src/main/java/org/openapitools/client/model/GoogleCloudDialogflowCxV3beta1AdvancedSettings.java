/*
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudDialogflowCxV3beta1AdvancedSettingsDtmfSettings;
import org.openapitools.client.model.GoogleCloudDialogflowCxV3beta1AdvancedSettingsLoggingSettings;
import org.openapitools.client.model.GoogleCloudDialogflowCxV3beta1GcsDestination;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Hierarchical advanced settings for agent/flow/page/fulfillment/parameter. Settings exposed at lower level overrides the settings exposed at higher level. Overriding occurs at the sub-setting level. For example, the playback_interruption_settings at fulfillment level only overrides the playback_interruption_settings at the agent level, leaving other settings at the agent level unchanged. DTMF settings does not override each other. DTMF settings set at different levels define DTMF detections running in parallel. Hierarchy: Agent-&gt;Flow-&gt;Page-&gt;Fulfillment/Parameter.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:47:33.933227-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDialogflowCxV3beta1AdvancedSettings {
  public static final String SERIALIZED_NAME_AUDIO_EXPORT_GCS_DESTINATION = "audioExportGcsDestination";
  @SerializedName(SERIALIZED_NAME_AUDIO_EXPORT_GCS_DESTINATION)
  private GoogleCloudDialogflowCxV3beta1GcsDestination audioExportGcsDestination;

  public static final String SERIALIZED_NAME_DTMF_SETTINGS = "dtmfSettings";
  @SerializedName(SERIALIZED_NAME_DTMF_SETTINGS)
  private GoogleCloudDialogflowCxV3beta1AdvancedSettingsDtmfSettings dtmfSettings;

  public static final String SERIALIZED_NAME_LOGGING_SETTINGS = "loggingSettings";
  @SerializedName(SERIALIZED_NAME_LOGGING_SETTINGS)
  private GoogleCloudDialogflowCxV3beta1AdvancedSettingsLoggingSettings loggingSettings;

  public GoogleCloudDialogflowCxV3beta1AdvancedSettings() {
  }

  public GoogleCloudDialogflowCxV3beta1AdvancedSettings audioExportGcsDestination(GoogleCloudDialogflowCxV3beta1GcsDestination audioExportGcsDestination) {
    this.audioExportGcsDestination = audioExportGcsDestination;
    return this;
  }

  /**
   * Get audioExportGcsDestination
   * @return audioExportGcsDestination
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowCxV3beta1GcsDestination getAudioExportGcsDestination() {
    return audioExportGcsDestination;
  }

  public void setAudioExportGcsDestination(GoogleCloudDialogflowCxV3beta1GcsDestination audioExportGcsDestination) {
    this.audioExportGcsDestination = audioExportGcsDestination;
  }


  public GoogleCloudDialogflowCxV3beta1AdvancedSettings dtmfSettings(GoogleCloudDialogflowCxV3beta1AdvancedSettingsDtmfSettings dtmfSettings) {
    this.dtmfSettings = dtmfSettings;
    return this;
  }

  /**
   * Get dtmfSettings
   * @return dtmfSettings
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowCxV3beta1AdvancedSettingsDtmfSettings getDtmfSettings() {
    return dtmfSettings;
  }

  public void setDtmfSettings(GoogleCloudDialogflowCxV3beta1AdvancedSettingsDtmfSettings dtmfSettings) {
    this.dtmfSettings = dtmfSettings;
  }


  public GoogleCloudDialogflowCxV3beta1AdvancedSettings loggingSettings(GoogleCloudDialogflowCxV3beta1AdvancedSettingsLoggingSettings loggingSettings) {
    this.loggingSettings = loggingSettings;
    return this;
  }

  /**
   * Get loggingSettings
   * @return loggingSettings
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowCxV3beta1AdvancedSettingsLoggingSettings getLoggingSettings() {
    return loggingSettings;
  }

  public void setLoggingSettings(GoogleCloudDialogflowCxV3beta1AdvancedSettingsLoggingSettings loggingSettings) {
    this.loggingSettings = loggingSettings;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDialogflowCxV3beta1AdvancedSettings googleCloudDialogflowCxV3beta1AdvancedSettings = (GoogleCloudDialogflowCxV3beta1AdvancedSettings) o;
    return Objects.equals(this.audioExportGcsDestination, googleCloudDialogflowCxV3beta1AdvancedSettings.audioExportGcsDestination) &&
        Objects.equals(this.dtmfSettings, googleCloudDialogflowCxV3beta1AdvancedSettings.dtmfSettings) &&
        Objects.equals(this.loggingSettings, googleCloudDialogflowCxV3beta1AdvancedSettings.loggingSettings);
  }

  @Override
  public int hashCode() {
    return Objects.hash(audioExportGcsDestination, dtmfSettings, loggingSettings);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDialogflowCxV3beta1AdvancedSettings {\n");
    sb.append("    audioExportGcsDestination: ").append(toIndentedString(audioExportGcsDestination)).append("\n");
    sb.append("    dtmfSettings: ").append(toIndentedString(dtmfSettings)).append("\n");
    sb.append("    loggingSettings: ").append(toIndentedString(loggingSettings)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("audioExportGcsDestination");
    openapiFields.add("dtmfSettings");
    openapiFields.add("loggingSettings");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDialogflowCxV3beta1AdvancedSettings
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDialogflowCxV3beta1AdvancedSettings.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDialogflowCxV3beta1AdvancedSettings is not found in the empty JSON string", GoogleCloudDialogflowCxV3beta1AdvancedSettings.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDialogflowCxV3beta1AdvancedSettings.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDialogflowCxV3beta1AdvancedSettings` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `audioExportGcsDestination`
      if (jsonObj.get("audioExportGcsDestination") != null && !jsonObj.get("audioExportGcsDestination").isJsonNull()) {
        GoogleCloudDialogflowCxV3beta1GcsDestination.validateJsonElement(jsonObj.get("audioExportGcsDestination"));
      }
      // validate the optional field `dtmfSettings`
      if (jsonObj.get("dtmfSettings") != null && !jsonObj.get("dtmfSettings").isJsonNull()) {
        GoogleCloudDialogflowCxV3beta1AdvancedSettingsDtmfSettings.validateJsonElement(jsonObj.get("dtmfSettings"));
      }
      // validate the optional field `loggingSettings`
      if (jsonObj.get("loggingSettings") != null && !jsonObj.get("loggingSettings").isJsonNull()) {
        GoogleCloudDialogflowCxV3beta1AdvancedSettingsLoggingSettings.validateJsonElement(jsonObj.get("loggingSettings"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDialogflowCxV3beta1AdvancedSettings.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDialogflowCxV3beta1AdvancedSettings' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDialogflowCxV3beta1AdvancedSettings> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDialogflowCxV3beta1AdvancedSettings.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDialogflowCxV3beta1AdvancedSettings>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDialogflowCxV3beta1AdvancedSettings value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDialogflowCxV3beta1AdvancedSettings read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDialogflowCxV3beta1AdvancedSettings given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDialogflowCxV3beta1AdvancedSettings
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDialogflowCxV3beta1AdvancedSettings
   */
  public static GoogleCloudDialogflowCxV3beta1AdvancedSettings fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDialogflowCxV3beta1AdvancedSettings.class);
  }

  /**
   * Convert an instance of GoogleCloudDialogflowCxV3beta1AdvancedSettings to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

