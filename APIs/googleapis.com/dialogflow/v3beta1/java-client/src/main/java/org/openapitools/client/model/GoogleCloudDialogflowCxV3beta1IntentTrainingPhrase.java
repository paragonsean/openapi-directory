/*
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudDialogflowCxV3beta1IntentTrainingPhrasePart;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents an example that the agent is trained on to identify the intent.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:47:33.933227-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_PARTS = "parts";
  @SerializedName(SERIALIZED_NAME_PARTS)
  private List<GoogleCloudDialogflowCxV3beta1IntentTrainingPhrasePart> parts = new ArrayList<>();

  public static final String SERIALIZED_NAME_REPEAT_COUNT = "repeatCount";
  @SerializedName(SERIALIZED_NAME_REPEAT_COUNT)
  private Integer repeatCount;

  public GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase() {
  }

  public GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Output only. The unique identifier of the training phrase.
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase parts(List<GoogleCloudDialogflowCxV3beta1IntentTrainingPhrasePart> parts) {
    this.parts = parts;
    return this;
  }

  public GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase addPartsItem(GoogleCloudDialogflowCxV3beta1IntentTrainingPhrasePart partsItem) {
    if (this.parts == null) {
      this.parts = new ArrayList<>();
    }
    this.parts.add(partsItem);
    return this;
  }

  /**
   * Required. The ordered list of training phrase parts. The parts are concatenated in order to form the training phrase. Note: The API does not automatically annotate training phrases like the Dialogflow Console does. Note: Do not forget to include whitespace at part boundaries, so the training phrase is well formatted when the parts are concatenated. If the training phrase does not need to be annotated with parameters, you just need a single part with only the Part.text field set. If you want to annotate the training phrase, you must create multiple parts, where the fields of each part are populated in one of two ways: - &#x60;Part.text&#x60; is set to a part of the phrase that has no parameters. - &#x60;Part.text&#x60; is set to a part of the phrase that you want to annotate, and the &#x60;parameter_id&#x60; field is set.
   * @return parts
   */
  @javax.annotation.Nullable
  public List<GoogleCloudDialogflowCxV3beta1IntentTrainingPhrasePart> getParts() {
    return parts;
  }

  public void setParts(List<GoogleCloudDialogflowCxV3beta1IntentTrainingPhrasePart> parts) {
    this.parts = parts;
  }


  public GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase repeatCount(Integer repeatCount) {
    this.repeatCount = repeatCount;
    return this;
  }

  /**
   * Indicates how many times this example was added to the intent.
   * @return repeatCount
   */
  @javax.annotation.Nullable
  public Integer getRepeatCount() {
    return repeatCount;
  }

  public void setRepeatCount(Integer repeatCount) {
    this.repeatCount = repeatCount;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase googleCloudDialogflowCxV3beta1IntentTrainingPhrase = (GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase) o;
    return Objects.equals(this.id, googleCloudDialogflowCxV3beta1IntentTrainingPhrase.id) &&
        Objects.equals(this.parts, googleCloudDialogflowCxV3beta1IntentTrainingPhrase.parts) &&
        Objects.equals(this.repeatCount, googleCloudDialogflowCxV3beta1IntentTrainingPhrase.repeatCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, parts, repeatCount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    parts: ").append(toIndentedString(parts)).append("\n");
    sb.append("    repeatCount: ").append(toIndentedString(repeatCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("parts");
    openapiFields.add("repeatCount");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase is not found in the empty JSON string", GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if (jsonObj.get("parts") != null && !jsonObj.get("parts").isJsonNull()) {
        JsonArray jsonArrayparts = jsonObj.getAsJsonArray("parts");
        if (jsonArrayparts != null) {
          // ensure the json data is an array
          if (!jsonObj.get("parts").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `parts` to be an array in the JSON string but got `%s`", jsonObj.get("parts").toString()));
          }

          // validate the optional field `parts` (array)
          for (int i = 0; i < jsonArrayparts.size(); i++) {
            GoogleCloudDialogflowCxV3beta1IntentTrainingPhrasePart.validateJsonElement(jsonArrayparts.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase
   */
  public static GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase.class);
  }

  /**
   * Convert an instance of GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

