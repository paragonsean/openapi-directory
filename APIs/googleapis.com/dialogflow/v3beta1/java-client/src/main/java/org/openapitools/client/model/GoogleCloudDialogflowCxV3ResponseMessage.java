/*
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.GoogleCloudDialogflowCxV3ResponseMessageConversationSuccess;
import org.openapitools.client.model.GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff;
import org.openapitools.client.model.GoogleCloudDialogflowCxV3ResponseMessageMixedAudio;
import org.openapitools.client.model.GoogleCloudDialogflowCxV3ResponseMessageOutputAudioText;
import org.openapitools.client.model.GoogleCloudDialogflowCxV3ResponseMessagePlayAudio;
import org.openapitools.client.model.GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCall;
import org.openapitools.client.model.GoogleCloudDialogflowCxV3ResponseMessageText;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents a response message that can be returned by a conversational agent. Response messages are also used for output audio synthesis. The approach is as follows: * If at least one OutputAudioText response is present, then all OutputAudioText responses are linearly concatenated, and the result is used for output audio synthesis. * If the OutputAudioText responses are a mixture of text and SSML, then the concatenated result is treated as SSML; otherwise, the result is treated as either text or SSML as appropriate. The agent designer should ideally use either text or SSML consistently throughout the bot design. * Otherwise, all Text responses are linearly concatenated, and the result is used for output audio synthesis. This approach allows for more sophisticated user experience scenarios, where the text displayed to the user may differ from what is heard.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:47:33.933227-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDialogflowCxV3ResponseMessage {
  public static final String SERIALIZED_NAME_CHANNEL = "channel";
  @SerializedName(SERIALIZED_NAME_CHANNEL)
  private String channel;

  public static final String SERIALIZED_NAME_CONVERSATION_SUCCESS = "conversationSuccess";
  @SerializedName(SERIALIZED_NAME_CONVERSATION_SUCCESS)
  private GoogleCloudDialogflowCxV3ResponseMessageConversationSuccess conversationSuccess;

  public static final String SERIALIZED_NAME_END_INTERACTION = "endInteraction";
  @SerializedName(SERIALIZED_NAME_END_INTERACTION)
  private Object endInteraction;

  public static final String SERIALIZED_NAME_KNOWLEDGE_INFO_CARD = "knowledgeInfoCard";
  @SerializedName(SERIALIZED_NAME_KNOWLEDGE_INFO_CARD)
  private Object knowledgeInfoCard;

  public static final String SERIALIZED_NAME_LIVE_AGENT_HANDOFF = "liveAgentHandoff";
  @SerializedName(SERIALIZED_NAME_LIVE_AGENT_HANDOFF)
  private GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff liveAgentHandoff;

  public static final String SERIALIZED_NAME_MIXED_AUDIO = "mixedAudio";
  @SerializedName(SERIALIZED_NAME_MIXED_AUDIO)
  private GoogleCloudDialogflowCxV3ResponseMessageMixedAudio mixedAudio;

  public static final String SERIALIZED_NAME_OUTPUT_AUDIO_TEXT = "outputAudioText";
  @SerializedName(SERIALIZED_NAME_OUTPUT_AUDIO_TEXT)
  private GoogleCloudDialogflowCxV3ResponseMessageOutputAudioText outputAudioText;

  public static final String SERIALIZED_NAME_PAYLOAD = "payload";
  @SerializedName(SERIALIZED_NAME_PAYLOAD)
  private Map<String, Object> payload = new HashMap<>();

  public static final String SERIALIZED_NAME_PLAY_AUDIO = "playAudio";
  @SerializedName(SERIALIZED_NAME_PLAY_AUDIO)
  private GoogleCloudDialogflowCxV3ResponseMessagePlayAudio playAudio;

  /**
   * Response type.
   */
  @JsonAdapter(ResponseTypeEnum.Adapter.class)
  public enum ResponseTypeEnum {
    RESPONSE_TYPE_UNSPECIFIED("RESPONSE_TYPE_UNSPECIFIED"),
    
    ENTRY_PROMPT("ENTRY_PROMPT"),
    
    PARAMETER_PROMPT("PARAMETER_PROMPT"),
    
    HANDLER_PROMPT("HANDLER_PROMPT");

    private String value;

    ResponseTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ResponseTypeEnum fromValue(String value) {
      for (ResponseTypeEnum b : ResponseTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ResponseTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ResponseTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ResponseTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ResponseTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ResponseTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_RESPONSE_TYPE = "responseType";
  @SerializedName(SERIALIZED_NAME_RESPONSE_TYPE)
  private ResponseTypeEnum responseType;

  public static final String SERIALIZED_NAME_TELEPHONY_TRANSFER_CALL = "telephonyTransferCall";
  @SerializedName(SERIALIZED_NAME_TELEPHONY_TRANSFER_CALL)
  private GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCall telephonyTransferCall;

  public static final String SERIALIZED_NAME_TEXT = "text";
  @SerializedName(SERIALIZED_NAME_TEXT)
  private GoogleCloudDialogflowCxV3ResponseMessageText text;

  public GoogleCloudDialogflowCxV3ResponseMessage() {
  }

  public GoogleCloudDialogflowCxV3ResponseMessage channel(String channel) {
    this.channel = channel;
    return this;
  }

  /**
   * The channel which the response is associated with. Clients can specify the channel via QueryParameters.channel, and only associated channel response will be returned.
   * @return channel
   */
  @javax.annotation.Nullable
  public String getChannel() {
    return channel;
  }

  public void setChannel(String channel) {
    this.channel = channel;
  }


  public GoogleCloudDialogflowCxV3ResponseMessage conversationSuccess(GoogleCloudDialogflowCxV3ResponseMessageConversationSuccess conversationSuccess) {
    this.conversationSuccess = conversationSuccess;
    return this;
  }

  /**
   * Get conversationSuccess
   * @return conversationSuccess
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowCxV3ResponseMessageConversationSuccess getConversationSuccess() {
    return conversationSuccess;
  }

  public void setConversationSuccess(GoogleCloudDialogflowCxV3ResponseMessageConversationSuccess conversationSuccess) {
    this.conversationSuccess = conversationSuccess;
  }


  public GoogleCloudDialogflowCxV3ResponseMessage endInteraction(Object endInteraction) {
    this.endInteraction = endInteraction;
    return this;
  }

  /**
   * Indicates that interaction with the Dialogflow agent has ended. This message is generated by Dialogflow only and not supposed to be defined by the user.
   * @return endInteraction
   */
  @javax.annotation.Nullable
  public Object getEndInteraction() {
    return endInteraction;
  }

  public void setEndInteraction(Object endInteraction) {
    this.endInteraction = endInteraction;
  }


  public GoogleCloudDialogflowCxV3ResponseMessage knowledgeInfoCard(Object knowledgeInfoCard) {
    this.knowledgeInfoCard = knowledgeInfoCard;
    return this;
  }

  /**
   * Represents info card response. If the response contains generative knowledge prediction, Dialogflow will return a payload with Infobot Messenger compatible info card. Otherwise, the info card response is skipped.
   * @return knowledgeInfoCard
   */
  @javax.annotation.Nullable
  public Object getKnowledgeInfoCard() {
    return knowledgeInfoCard;
  }

  public void setKnowledgeInfoCard(Object knowledgeInfoCard) {
    this.knowledgeInfoCard = knowledgeInfoCard;
  }


  public GoogleCloudDialogflowCxV3ResponseMessage liveAgentHandoff(GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff liveAgentHandoff) {
    this.liveAgentHandoff = liveAgentHandoff;
    return this;
  }

  /**
   * Get liveAgentHandoff
   * @return liveAgentHandoff
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff getLiveAgentHandoff() {
    return liveAgentHandoff;
  }

  public void setLiveAgentHandoff(GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff liveAgentHandoff) {
    this.liveAgentHandoff = liveAgentHandoff;
  }


  public GoogleCloudDialogflowCxV3ResponseMessage mixedAudio(GoogleCloudDialogflowCxV3ResponseMessageMixedAudio mixedAudio) {
    this.mixedAudio = mixedAudio;
    return this;
  }

  /**
   * Get mixedAudio
   * @return mixedAudio
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowCxV3ResponseMessageMixedAudio getMixedAudio() {
    return mixedAudio;
  }

  public void setMixedAudio(GoogleCloudDialogflowCxV3ResponseMessageMixedAudio mixedAudio) {
    this.mixedAudio = mixedAudio;
  }


  public GoogleCloudDialogflowCxV3ResponseMessage outputAudioText(GoogleCloudDialogflowCxV3ResponseMessageOutputAudioText outputAudioText) {
    this.outputAudioText = outputAudioText;
    return this;
  }

  /**
   * Get outputAudioText
   * @return outputAudioText
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowCxV3ResponseMessageOutputAudioText getOutputAudioText() {
    return outputAudioText;
  }

  public void setOutputAudioText(GoogleCloudDialogflowCxV3ResponseMessageOutputAudioText outputAudioText) {
    this.outputAudioText = outputAudioText;
  }


  public GoogleCloudDialogflowCxV3ResponseMessage payload(Map<String, Object> payload) {
    this.payload = payload;
    return this;
  }

  public GoogleCloudDialogflowCxV3ResponseMessage putPayloadItem(String key, Object payloadItem) {
    if (this.payload == null) {
      this.payload = new HashMap<>();
    }
    this.payload.put(key, payloadItem);
    return this;
  }

  /**
   * Returns a response containing a custom, platform-specific payload.
   * @return payload
   */
  @javax.annotation.Nullable
  public Map<String, Object> getPayload() {
    return payload;
  }

  public void setPayload(Map<String, Object> payload) {
    this.payload = payload;
  }


  public GoogleCloudDialogflowCxV3ResponseMessage playAudio(GoogleCloudDialogflowCxV3ResponseMessagePlayAudio playAudio) {
    this.playAudio = playAudio;
    return this;
  }

  /**
   * Get playAudio
   * @return playAudio
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowCxV3ResponseMessagePlayAudio getPlayAudio() {
    return playAudio;
  }

  public void setPlayAudio(GoogleCloudDialogflowCxV3ResponseMessagePlayAudio playAudio) {
    this.playAudio = playAudio;
  }


  public GoogleCloudDialogflowCxV3ResponseMessage responseType(ResponseTypeEnum responseType) {
    this.responseType = responseType;
    return this;
  }

  /**
   * Response type.
   * @return responseType
   */
  @javax.annotation.Nullable
  public ResponseTypeEnum getResponseType() {
    return responseType;
  }

  public void setResponseType(ResponseTypeEnum responseType) {
    this.responseType = responseType;
  }


  public GoogleCloudDialogflowCxV3ResponseMessage telephonyTransferCall(GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCall telephonyTransferCall) {
    this.telephonyTransferCall = telephonyTransferCall;
    return this;
  }

  /**
   * Get telephonyTransferCall
   * @return telephonyTransferCall
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCall getTelephonyTransferCall() {
    return telephonyTransferCall;
  }

  public void setTelephonyTransferCall(GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCall telephonyTransferCall) {
    this.telephonyTransferCall = telephonyTransferCall;
  }


  public GoogleCloudDialogflowCxV3ResponseMessage text(GoogleCloudDialogflowCxV3ResponseMessageText text) {
    this.text = text;
    return this;
  }

  /**
   * Get text
   * @return text
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowCxV3ResponseMessageText getText() {
    return text;
  }

  public void setText(GoogleCloudDialogflowCxV3ResponseMessageText text) {
    this.text = text;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDialogflowCxV3ResponseMessage googleCloudDialogflowCxV3ResponseMessage = (GoogleCloudDialogflowCxV3ResponseMessage) o;
    return Objects.equals(this.channel, googleCloudDialogflowCxV3ResponseMessage.channel) &&
        Objects.equals(this.conversationSuccess, googleCloudDialogflowCxV3ResponseMessage.conversationSuccess) &&
        Objects.equals(this.endInteraction, googleCloudDialogflowCxV3ResponseMessage.endInteraction) &&
        Objects.equals(this.knowledgeInfoCard, googleCloudDialogflowCxV3ResponseMessage.knowledgeInfoCard) &&
        Objects.equals(this.liveAgentHandoff, googleCloudDialogflowCxV3ResponseMessage.liveAgentHandoff) &&
        Objects.equals(this.mixedAudio, googleCloudDialogflowCxV3ResponseMessage.mixedAudio) &&
        Objects.equals(this.outputAudioText, googleCloudDialogflowCxV3ResponseMessage.outputAudioText) &&
        Objects.equals(this.payload, googleCloudDialogflowCxV3ResponseMessage.payload) &&
        Objects.equals(this.playAudio, googleCloudDialogflowCxV3ResponseMessage.playAudio) &&
        Objects.equals(this.responseType, googleCloudDialogflowCxV3ResponseMessage.responseType) &&
        Objects.equals(this.telephonyTransferCall, googleCloudDialogflowCxV3ResponseMessage.telephonyTransferCall) &&
        Objects.equals(this.text, googleCloudDialogflowCxV3ResponseMessage.text);
  }

  @Override
  public int hashCode() {
    return Objects.hash(channel, conversationSuccess, endInteraction, knowledgeInfoCard, liveAgentHandoff, mixedAudio, outputAudioText, payload, playAudio, responseType, telephonyTransferCall, text);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDialogflowCxV3ResponseMessage {\n");
    sb.append("    channel: ").append(toIndentedString(channel)).append("\n");
    sb.append("    conversationSuccess: ").append(toIndentedString(conversationSuccess)).append("\n");
    sb.append("    endInteraction: ").append(toIndentedString(endInteraction)).append("\n");
    sb.append("    knowledgeInfoCard: ").append(toIndentedString(knowledgeInfoCard)).append("\n");
    sb.append("    liveAgentHandoff: ").append(toIndentedString(liveAgentHandoff)).append("\n");
    sb.append("    mixedAudio: ").append(toIndentedString(mixedAudio)).append("\n");
    sb.append("    outputAudioText: ").append(toIndentedString(outputAudioText)).append("\n");
    sb.append("    payload: ").append(toIndentedString(payload)).append("\n");
    sb.append("    playAudio: ").append(toIndentedString(playAudio)).append("\n");
    sb.append("    responseType: ").append(toIndentedString(responseType)).append("\n");
    sb.append("    telephonyTransferCall: ").append(toIndentedString(telephonyTransferCall)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("channel");
    openapiFields.add("conversationSuccess");
    openapiFields.add("endInteraction");
    openapiFields.add("knowledgeInfoCard");
    openapiFields.add("liveAgentHandoff");
    openapiFields.add("mixedAudio");
    openapiFields.add("outputAudioText");
    openapiFields.add("payload");
    openapiFields.add("playAudio");
    openapiFields.add("responseType");
    openapiFields.add("telephonyTransferCall");
    openapiFields.add("text");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDialogflowCxV3ResponseMessage
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDialogflowCxV3ResponseMessage.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDialogflowCxV3ResponseMessage is not found in the empty JSON string", GoogleCloudDialogflowCxV3ResponseMessage.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDialogflowCxV3ResponseMessage.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDialogflowCxV3ResponseMessage` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("channel") != null && !jsonObj.get("channel").isJsonNull()) && !jsonObj.get("channel").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `channel` to be a primitive type in the JSON string but got `%s`", jsonObj.get("channel").toString()));
      }
      // validate the optional field `conversationSuccess`
      if (jsonObj.get("conversationSuccess") != null && !jsonObj.get("conversationSuccess").isJsonNull()) {
        GoogleCloudDialogflowCxV3ResponseMessageConversationSuccess.validateJsonElement(jsonObj.get("conversationSuccess"));
      }
      // validate the optional field `liveAgentHandoff`
      if (jsonObj.get("liveAgentHandoff") != null && !jsonObj.get("liveAgentHandoff").isJsonNull()) {
        GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff.validateJsonElement(jsonObj.get("liveAgentHandoff"));
      }
      // validate the optional field `mixedAudio`
      if (jsonObj.get("mixedAudio") != null && !jsonObj.get("mixedAudio").isJsonNull()) {
        GoogleCloudDialogflowCxV3ResponseMessageMixedAudio.validateJsonElement(jsonObj.get("mixedAudio"));
      }
      // validate the optional field `outputAudioText`
      if (jsonObj.get("outputAudioText") != null && !jsonObj.get("outputAudioText").isJsonNull()) {
        GoogleCloudDialogflowCxV3ResponseMessageOutputAudioText.validateJsonElement(jsonObj.get("outputAudioText"));
      }
      // validate the optional field `playAudio`
      if (jsonObj.get("playAudio") != null && !jsonObj.get("playAudio").isJsonNull()) {
        GoogleCloudDialogflowCxV3ResponseMessagePlayAudio.validateJsonElement(jsonObj.get("playAudio"));
      }
      if ((jsonObj.get("responseType") != null && !jsonObj.get("responseType").isJsonNull()) && !jsonObj.get("responseType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `responseType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("responseType").toString()));
      }
      // validate the optional field `responseType`
      if (jsonObj.get("responseType") != null && !jsonObj.get("responseType").isJsonNull()) {
        ResponseTypeEnum.validateJsonElement(jsonObj.get("responseType"));
      }
      // validate the optional field `telephonyTransferCall`
      if (jsonObj.get("telephonyTransferCall") != null && !jsonObj.get("telephonyTransferCall").isJsonNull()) {
        GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCall.validateJsonElement(jsonObj.get("telephonyTransferCall"));
      }
      // validate the optional field `text`
      if (jsonObj.get("text") != null && !jsonObj.get("text").isJsonNull()) {
        GoogleCloudDialogflowCxV3ResponseMessageText.validateJsonElement(jsonObj.get("text"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDialogflowCxV3ResponseMessage.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDialogflowCxV3ResponseMessage' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDialogflowCxV3ResponseMessage> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDialogflowCxV3ResponseMessage.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDialogflowCxV3ResponseMessage>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDialogflowCxV3ResponseMessage value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDialogflowCxV3ResponseMessage read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDialogflowCxV3ResponseMessage given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDialogflowCxV3ResponseMessage
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDialogflowCxV3ResponseMessage
   */
  public static GoogleCloudDialogflowCxV3ResponseMessage fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDialogflowCxV3ResponseMessage.class);
  }

  /**
   * Convert an instance of GoogleCloudDialogflowCxV3ResponseMessage to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

