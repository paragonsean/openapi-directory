/*
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudDialogflowCxV3beta1ResourceName;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Agent/flow validation message.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:47:33.933227-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDialogflowCxV3beta1ValidationMessage {
  public static final String SERIALIZED_NAME_DETAIL = "detail";
  @SerializedName(SERIALIZED_NAME_DETAIL)
  private String detail;

  public static final String SERIALIZED_NAME_RESOURCE_NAMES = "resourceNames";
  @SerializedName(SERIALIZED_NAME_RESOURCE_NAMES)
  private List<GoogleCloudDialogflowCxV3beta1ResourceName> resourceNames = new ArrayList<>();

  /**
   * The type of the resources where the message is found.
   */
  @JsonAdapter(ResourceTypeEnum.Adapter.class)
  public enum ResourceTypeEnum {
    RESOURCE_TYPE_UNSPECIFIED("RESOURCE_TYPE_UNSPECIFIED"),
    
    AGENT("AGENT"),
    
    INTENT("INTENT"),
    
    INTENT_TRAINING_PHRASE("INTENT_TRAINING_PHRASE"),
    
    INTENT_PARAMETER("INTENT_PARAMETER"),
    
    INTENTS("INTENTS"),
    
    INTENT_TRAINING_PHRASES("INTENT_TRAINING_PHRASES"),
    
    ENTITY_TYPE("ENTITY_TYPE"),
    
    ENTITY_TYPES("ENTITY_TYPES"),
    
    WEBHOOK("WEBHOOK"),
    
    FLOW("FLOW"),
    
    PAGE("PAGE"),
    
    PAGES("PAGES"),
    
    TRANSITION_ROUTE_GROUP("TRANSITION_ROUTE_GROUP"),
    
    AGENT_TRANSITION_ROUTE_GROUP("AGENT_TRANSITION_ROUTE_GROUP");

    private String value;

    ResourceTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ResourceTypeEnum fromValue(String value) {
      for (ResourceTypeEnum b : ResourceTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ResourceTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ResourceTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ResourceTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ResourceTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ResourceTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_RESOURCE_TYPE = "resourceType";
  @SerializedName(SERIALIZED_NAME_RESOURCE_TYPE)
  private ResourceTypeEnum resourceType;

  public static final String SERIALIZED_NAME_RESOURCES = "resources";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_RESOURCES)
  private List<String> resources = new ArrayList<>();

  /**
   * Indicates the severity of the message.
   */
  @JsonAdapter(SeverityEnum.Adapter.class)
  public enum SeverityEnum {
    SEVERITY_UNSPECIFIED("SEVERITY_UNSPECIFIED"),
    
    INFO("INFO"),
    
    WARNING("WARNING"),
    
    ERROR("ERROR");

    private String value;

    SeverityEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static SeverityEnum fromValue(String value) {
      for (SeverityEnum b : SeverityEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<SeverityEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SeverityEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SeverityEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return SeverityEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      SeverityEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_SEVERITY = "severity";
  @SerializedName(SERIALIZED_NAME_SEVERITY)
  private SeverityEnum severity;

  public GoogleCloudDialogflowCxV3beta1ValidationMessage() {
  }

  public GoogleCloudDialogflowCxV3beta1ValidationMessage detail(String detail) {
    this.detail = detail;
    return this;
  }

  /**
   * The message detail.
   * @return detail
   */
  @javax.annotation.Nullable
  public String getDetail() {
    return detail;
  }

  public void setDetail(String detail) {
    this.detail = detail;
  }


  public GoogleCloudDialogflowCxV3beta1ValidationMessage resourceNames(List<GoogleCloudDialogflowCxV3beta1ResourceName> resourceNames) {
    this.resourceNames = resourceNames;
    return this;
  }

  public GoogleCloudDialogflowCxV3beta1ValidationMessage addResourceNamesItem(GoogleCloudDialogflowCxV3beta1ResourceName resourceNamesItem) {
    if (this.resourceNames == null) {
      this.resourceNames = new ArrayList<>();
    }
    this.resourceNames.add(resourceNamesItem);
    return this;
  }

  /**
   * The resource names of the resources where the message is found.
   * @return resourceNames
   */
  @javax.annotation.Nullable
  public List<GoogleCloudDialogflowCxV3beta1ResourceName> getResourceNames() {
    return resourceNames;
  }

  public void setResourceNames(List<GoogleCloudDialogflowCxV3beta1ResourceName> resourceNames) {
    this.resourceNames = resourceNames;
  }


  public GoogleCloudDialogflowCxV3beta1ValidationMessage resourceType(ResourceTypeEnum resourceType) {
    this.resourceType = resourceType;
    return this;
  }

  /**
   * The type of the resources where the message is found.
   * @return resourceType
   */
  @javax.annotation.Nullable
  public ResourceTypeEnum getResourceType() {
    return resourceType;
  }

  public void setResourceType(ResourceTypeEnum resourceType) {
    this.resourceType = resourceType;
  }


  @Deprecated
  public GoogleCloudDialogflowCxV3beta1ValidationMessage resources(List<String> resources) {
    this.resources = resources;
    return this;
  }

  public GoogleCloudDialogflowCxV3beta1ValidationMessage addResourcesItem(String resourcesItem) {
    if (this.resources == null) {
      this.resources = new ArrayList<>();
    }
    this.resources.add(resourcesItem);
    return this;
  }

  /**
   * The names of the resources where the message is found.
   * @return resources
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public List<String> getResources() {
    return resources;
  }

  @Deprecated
  public void setResources(List<String> resources) {
    this.resources = resources;
  }


  public GoogleCloudDialogflowCxV3beta1ValidationMessage severity(SeverityEnum severity) {
    this.severity = severity;
    return this;
  }

  /**
   * Indicates the severity of the message.
   * @return severity
   */
  @javax.annotation.Nullable
  public SeverityEnum getSeverity() {
    return severity;
  }

  public void setSeverity(SeverityEnum severity) {
    this.severity = severity;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDialogflowCxV3beta1ValidationMessage googleCloudDialogflowCxV3beta1ValidationMessage = (GoogleCloudDialogflowCxV3beta1ValidationMessage) o;
    return Objects.equals(this.detail, googleCloudDialogflowCxV3beta1ValidationMessage.detail) &&
        Objects.equals(this.resourceNames, googleCloudDialogflowCxV3beta1ValidationMessage.resourceNames) &&
        Objects.equals(this.resourceType, googleCloudDialogflowCxV3beta1ValidationMessage.resourceType) &&
        Objects.equals(this.resources, googleCloudDialogflowCxV3beta1ValidationMessage.resources) &&
        Objects.equals(this.severity, googleCloudDialogflowCxV3beta1ValidationMessage.severity);
  }

  @Override
  public int hashCode() {
    return Objects.hash(detail, resourceNames, resourceType, resources, severity);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDialogflowCxV3beta1ValidationMessage {\n");
    sb.append("    detail: ").append(toIndentedString(detail)).append("\n");
    sb.append("    resourceNames: ").append(toIndentedString(resourceNames)).append("\n");
    sb.append("    resourceType: ").append(toIndentedString(resourceType)).append("\n");
    sb.append("    resources: ").append(toIndentedString(resources)).append("\n");
    sb.append("    severity: ").append(toIndentedString(severity)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("detail");
    openapiFields.add("resourceNames");
    openapiFields.add("resourceType");
    openapiFields.add("resources");
    openapiFields.add("severity");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDialogflowCxV3beta1ValidationMessage
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDialogflowCxV3beta1ValidationMessage.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDialogflowCxV3beta1ValidationMessage is not found in the empty JSON string", GoogleCloudDialogflowCxV3beta1ValidationMessage.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDialogflowCxV3beta1ValidationMessage.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDialogflowCxV3beta1ValidationMessage` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("detail") != null && !jsonObj.get("detail").isJsonNull()) && !jsonObj.get("detail").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `detail` to be a primitive type in the JSON string but got `%s`", jsonObj.get("detail").toString()));
      }
      if (jsonObj.get("resourceNames") != null && !jsonObj.get("resourceNames").isJsonNull()) {
        JsonArray jsonArrayresourceNames = jsonObj.getAsJsonArray("resourceNames");
        if (jsonArrayresourceNames != null) {
          // ensure the json data is an array
          if (!jsonObj.get("resourceNames").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `resourceNames` to be an array in the JSON string but got `%s`", jsonObj.get("resourceNames").toString()));
          }

          // validate the optional field `resourceNames` (array)
          for (int i = 0; i < jsonArrayresourceNames.size(); i++) {
            GoogleCloudDialogflowCxV3beta1ResourceName.validateJsonElement(jsonArrayresourceNames.get(i));
          };
        }
      }
      if ((jsonObj.get("resourceType") != null && !jsonObj.get("resourceType").isJsonNull()) && !jsonObj.get("resourceType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `resourceType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("resourceType").toString()));
      }
      // validate the optional field `resourceType`
      if (jsonObj.get("resourceType") != null && !jsonObj.get("resourceType").isJsonNull()) {
        ResourceTypeEnum.validateJsonElement(jsonObj.get("resourceType"));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("resources") != null && !jsonObj.get("resources").isJsonNull() && !jsonObj.get("resources").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `resources` to be an array in the JSON string but got `%s`", jsonObj.get("resources").toString()));
      }
      if ((jsonObj.get("severity") != null && !jsonObj.get("severity").isJsonNull()) && !jsonObj.get("severity").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `severity` to be a primitive type in the JSON string but got `%s`", jsonObj.get("severity").toString()));
      }
      // validate the optional field `severity`
      if (jsonObj.get("severity") != null && !jsonObj.get("severity").isJsonNull()) {
        SeverityEnum.validateJsonElement(jsonObj.get("severity"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDialogflowCxV3beta1ValidationMessage.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDialogflowCxV3beta1ValidationMessage' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDialogflowCxV3beta1ValidationMessage> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDialogflowCxV3beta1ValidationMessage.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDialogflowCxV3beta1ValidationMessage>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDialogflowCxV3beta1ValidationMessage value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDialogflowCxV3beta1ValidationMessage read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDialogflowCxV3beta1ValidationMessage given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDialogflowCxV3beta1ValidationMessage
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDialogflowCxV3beta1ValidationMessage
   */
  public static GoogleCloudDialogflowCxV3beta1ValidationMessage fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDialogflowCxV3beta1ValidationMessage.class);
  }

  /**
   * Convert an instance of GoogleCloudDialogflowCxV3beta1ValidationMessage to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

