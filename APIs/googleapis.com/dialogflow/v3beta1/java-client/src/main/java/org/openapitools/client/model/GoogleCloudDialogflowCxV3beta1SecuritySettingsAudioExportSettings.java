/*
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Settings for exporting audio.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:47:33.933227-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDialogflowCxV3beta1SecuritySettingsAudioExportSettings {
  public static final String SERIALIZED_NAME_AUDIO_EXPORT_PATTERN = "audioExportPattern";
  @SerializedName(SERIALIZED_NAME_AUDIO_EXPORT_PATTERN)
  private String audioExportPattern;

  /**
   * File format for exported audio file. Currently only in telephony recordings.
   */
  @JsonAdapter(AudioFormatEnum.Adapter.class)
  public enum AudioFormatEnum {
    AUDIO_FORMAT_UNSPECIFIED("AUDIO_FORMAT_UNSPECIFIED"),
    
    MULAW("MULAW"),
    
    MP3("MP3"),
    
    OGG("OGG");

    private String value;

    AudioFormatEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AudioFormatEnum fromValue(String value) {
      for (AudioFormatEnum b : AudioFormatEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<AudioFormatEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AudioFormatEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AudioFormatEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return AudioFormatEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      AudioFormatEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_AUDIO_FORMAT = "audioFormat";
  @SerializedName(SERIALIZED_NAME_AUDIO_FORMAT)
  private AudioFormatEnum audioFormat;

  public static final String SERIALIZED_NAME_ENABLE_AUDIO_REDACTION = "enableAudioRedaction";
  @SerializedName(SERIALIZED_NAME_ENABLE_AUDIO_REDACTION)
  private Boolean enableAudioRedaction;

  public static final String SERIALIZED_NAME_GCS_BUCKET = "gcsBucket";
  @SerializedName(SERIALIZED_NAME_GCS_BUCKET)
  private String gcsBucket;

  public GoogleCloudDialogflowCxV3beta1SecuritySettingsAudioExportSettings() {
  }

  public GoogleCloudDialogflowCxV3beta1SecuritySettingsAudioExportSettings audioExportPattern(String audioExportPattern) {
    this.audioExportPattern = audioExportPattern;
    return this;
  }

  /**
   * Filename pattern for exported audio.
   * @return audioExportPattern
   */
  @javax.annotation.Nullable
  public String getAudioExportPattern() {
    return audioExportPattern;
  }

  public void setAudioExportPattern(String audioExportPattern) {
    this.audioExportPattern = audioExportPattern;
  }


  public GoogleCloudDialogflowCxV3beta1SecuritySettingsAudioExportSettings audioFormat(AudioFormatEnum audioFormat) {
    this.audioFormat = audioFormat;
    return this;
  }

  /**
   * File format for exported audio file. Currently only in telephony recordings.
   * @return audioFormat
   */
  @javax.annotation.Nullable
  public AudioFormatEnum getAudioFormat() {
    return audioFormat;
  }

  public void setAudioFormat(AudioFormatEnum audioFormat) {
    this.audioFormat = audioFormat;
  }


  public GoogleCloudDialogflowCxV3beta1SecuritySettingsAudioExportSettings enableAudioRedaction(Boolean enableAudioRedaction) {
    this.enableAudioRedaction = enableAudioRedaction;
    return this;
  }

  /**
   * Enable audio redaction if it is true.
   * @return enableAudioRedaction
   */
  @javax.annotation.Nullable
  public Boolean getEnableAudioRedaction() {
    return enableAudioRedaction;
  }

  public void setEnableAudioRedaction(Boolean enableAudioRedaction) {
    this.enableAudioRedaction = enableAudioRedaction;
  }


  public GoogleCloudDialogflowCxV3beta1SecuritySettingsAudioExportSettings gcsBucket(String gcsBucket) {
    this.gcsBucket = gcsBucket;
    return this;
  }

  /**
   * Cloud Storage bucket to export audio record to. Setting this field would grant the Storage Object Creator role to the Dialogflow Service Agent. API caller that tries to modify this field should have the permission of storage.buckets.setIamPolicy.
   * @return gcsBucket
   */
  @javax.annotation.Nullable
  public String getGcsBucket() {
    return gcsBucket;
  }

  public void setGcsBucket(String gcsBucket) {
    this.gcsBucket = gcsBucket;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDialogflowCxV3beta1SecuritySettingsAudioExportSettings googleCloudDialogflowCxV3beta1SecuritySettingsAudioExportSettings = (GoogleCloudDialogflowCxV3beta1SecuritySettingsAudioExportSettings) o;
    return Objects.equals(this.audioExportPattern, googleCloudDialogflowCxV3beta1SecuritySettingsAudioExportSettings.audioExportPattern) &&
        Objects.equals(this.audioFormat, googleCloudDialogflowCxV3beta1SecuritySettingsAudioExportSettings.audioFormat) &&
        Objects.equals(this.enableAudioRedaction, googleCloudDialogflowCxV3beta1SecuritySettingsAudioExportSettings.enableAudioRedaction) &&
        Objects.equals(this.gcsBucket, googleCloudDialogflowCxV3beta1SecuritySettingsAudioExportSettings.gcsBucket);
  }

  @Override
  public int hashCode() {
    return Objects.hash(audioExportPattern, audioFormat, enableAudioRedaction, gcsBucket);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDialogflowCxV3beta1SecuritySettingsAudioExportSettings {\n");
    sb.append("    audioExportPattern: ").append(toIndentedString(audioExportPattern)).append("\n");
    sb.append("    audioFormat: ").append(toIndentedString(audioFormat)).append("\n");
    sb.append("    enableAudioRedaction: ").append(toIndentedString(enableAudioRedaction)).append("\n");
    sb.append("    gcsBucket: ").append(toIndentedString(gcsBucket)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("audioExportPattern");
    openapiFields.add("audioFormat");
    openapiFields.add("enableAudioRedaction");
    openapiFields.add("gcsBucket");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDialogflowCxV3beta1SecuritySettingsAudioExportSettings
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDialogflowCxV3beta1SecuritySettingsAudioExportSettings.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDialogflowCxV3beta1SecuritySettingsAudioExportSettings is not found in the empty JSON string", GoogleCloudDialogflowCxV3beta1SecuritySettingsAudioExportSettings.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDialogflowCxV3beta1SecuritySettingsAudioExportSettings.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDialogflowCxV3beta1SecuritySettingsAudioExportSettings` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("audioExportPattern") != null && !jsonObj.get("audioExportPattern").isJsonNull()) && !jsonObj.get("audioExportPattern").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `audioExportPattern` to be a primitive type in the JSON string but got `%s`", jsonObj.get("audioExportPattern").toString()));
      }
      if ((jsonObj.get("audioFormat") != null && !jsonObj.get("audioFormat").isJsonNull()) && !jsonObj.get("audioFormat").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `audioFormat` to be a primitive type in the JSON string but got `%s`", jsonObj.get("audioFormat").toString()));
      }
      // validate the optional field `audioFormat`
      if (jsonObj.get("audioFormat") != null && !jsonObj.get("audioFormat").isJsonNull()) {
        AudioFormatEnum.validateJsonElement(jsonObj.get("audioFormat"));
      }
      if ((jsonObj.get("gcsBucket") != null && !jsonObj.get("gcsBucket").isJsonNull()) && !jsonObj.get("gcsBucket").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gcsBucket` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gcsBucket").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDialogflowCxV3beta1SecuritySettingsAudioExportSettings.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDialogflowCxV3beta1SecuritySettingsAudioExportSettings' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDialogflowCxV3beta1SecuritySettingsAudioExportSettings> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDialogflowCxV3beta1SecuritySettingsAudioExportSettings.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDialogflowCxV3beta1SecuritySettingsAudioExportSettings>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDialogflowCxV3beta1SecuritySettingsAudioExportSettings value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDialogflowCxV3beta1SecuritySettingsAudioExportSettings read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDialogflowCxV3beta1SecuritySettingsAudioExportSettings given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDialogflowCxV3beta1SecuritySettingsAudioExportSettings
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDialogflowCxV3beta1SecuritySettingsAudioExportSettings
   */
  public static GoogleCloudDialogflowCxV3beta1SecuritySettingsAudioExportSettings fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDialogflowCxV3beta1SecuritySettingsAudioExportSettings.class);
  }

  /**
   * Convert an instance of GoogleCloudDialogflowCxV3beta1SecuritySettingsAudioExportSettings to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

