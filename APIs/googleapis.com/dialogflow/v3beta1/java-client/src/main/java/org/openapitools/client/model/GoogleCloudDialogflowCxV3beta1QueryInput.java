/*
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudDialogflowCxV3beta1AudioInput;
import org.openapitools.client.model.GoogleCloudDialogflowCxV3beta1DtmfInput;
import org.openapitools.client.model.GoogleCloudDialogflowCxV3beta1EventInput;
import org.openapitools.client.model.GoogleCloudDialogflowCxV3beta1IntentInput;
import org.openapitools.client.model.GoogleCloudDialogflowCxV3beta1TextInput;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents the query input. It can contain one of: 1. A conversational query in the form of text. 2. An intent query that specifies which intent to trigger. 3. Natural language speech audio to be processed. 4. An event to be triggered. 5. DTMF digits to invoke an intent and fill in parameter value. 6. The results of a tool executed by the client.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:47:33.933227-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDialogflowCxV3beta1QueryInput {
  public static final String SERIALIZED_NAME_AUDIO = "audio";
  @SerializedName(SERIALIZED_NAME_AUDIO)
  private GoogleCloudDialogflowCxV3beta1AudioInput audio;

  public static final String SERIALIZED_NAME_DTMF = "dtmf";
  @SerializedName(SERIALIZED_NAME_DTMF)
  private GoogleCloudDialogflowCxV3beta1DtmfInput dtmf;

  public static final String SERIALIZED_NAME_EVENT = "event";
  @SerializedName(SERIALIZED_NAME_EVENT)
  private GoogleCloudDialogflowCxV3beta1EventInput event;

  public static final String SERIALIZED_NAME_INTENT = "intent";
  @SerializedName(SERIALIZED_NAME_INTENT)
  private GoogleCloudDialogflowCxV3beta1IntentInput intent;

  public static final String SERIALIZED_NAME_LANGUAGE_CODE = "languageCode";
  @SerializedName(SERIALIZED_NAME_LANGUAGE_CODE)
  private String languageCode;

  public static final String SERIALIZED_NAME_TEXT = "text";
  @SerializedName(SERIALIZED_NAME_TEXT)
  private GoogleCloudDialogflowCxV3beta1TextInput text;

  public GoogleCloudDialogflowCxV3beta1QueryInput() {
  }

  public GoogleCloudDialogflowCxV3beta1QueryInput audio(GoogleCloudDialogflowCxV3beta1AudioInput audio) {
    this.audio = audio;
    return this;
  }

  /**
   * Get audio
   * @return audio
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowCxV3beta1AudioInput getAudio() {
    return audio;
  }

  public void setAudio(GoogleCloudDialogflowCxV3beta1AudioInput audio) {
    this.audio = audio;
  }


  public GoogleCloudDialogflowCxV3beta1QueryInput dtmf(GoogleCloudDialogflowCxV3beta1DtmfInput dtmf) {
    this.dtmf = dtmf;
    return this;
  }

  /**
   * Get dtmf
   * @return dtmf
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowCxV3beta1DtmfInput getDtmf() {
    return dtmf;
  }

  public void setDtmf(GoogleCloudDialogflowCxV3beta1DtmfInput dtmf) {
    this.dtmf = dtmf;
  }


  public GoogleCloudDialogflowCxV3beta1QueryInput event(GoogleCloudDialogflowCxV3beta1EventInput event) {
    this.event = event;
    return this;
  }

  /**
   * Get event
   * @return event
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowCxV3beta1EventInput getEvent() {
    return event;
  }

  public void setEvent(GoogleCloudDialogflowCxV3beta1EventInput event) {
    this.event = event;
  }


  public GoogleCloudDialogflowCxV3beta1QueryInput intent(GoogleCloudDialogflowCxV3beta1IntentInput intent) {
    this.intent = intent;
    return this;
  }

  /**
   * Get intent
   * @return intent
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowCxV3beta1IntentInput getIntent() {
    return intent;
  }

  public void setIntent(GoogleCloudDialogflowCxV3beta1IntentInput intent) {
    this.intent = intent;
  }


  public GoogleCloudDialogflowCxV3beta1QueryInput languageCode(String languageCode) {
    this.languageCode = languageCode;
    return this;
  }

  /**
   * Required. The language of the input. See [Language Support](https://cloud.google.com/dialogflow/cx/docs/reference/language) for a list of the currently supported language codes. Note that queries in the same session do not necessarily need to specify the same language.
   * @return languageCode
   */
  @javax.annotation.Nullable
  public String getLanguageCode() {
    return languageCode;
  }

  public void setLanguageCode(String languageCode) {
    this.languageCode = languageCode;
  }


  public GoogleCloudDialogflowCxV3beta1QueryInput text(GoogleCloudDialogflowCxV3beta1TextInput text) {
    this.text = text;
    return this;
  }

  /**
   * Get text
   * @return text
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowCxV3beta1TextInput getText() {
    return text;
  }

  public void setText(GoogleCloudDialogflowCxV3beta1TextInput text) {
    this.text = text;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDialogflowCxV3beta1QueryInput googleCloudDialogflowCxV3beta1QueryInput = (GoogleCloudDialogflowCxV3beta1QueryInput) o;
    return Objects.equals(this.audio, googleCloudDialogflowCxV3beta1QueryInput.audio) &&
        Objects.equals(this.dtmf, googleCloudDialogflowCxV3beta1QueryInput.dtmf) &&
        Objects.equals(this.event, googleCloudDialogflowCxV3beta1QueryInput.event) &&
        Objects.equals(this.intent, googleCloudDialogflowCxV3beta1QueryInput.intent) &&
        Objects.equals(this.languageCode, googleCloudDialogflowCxV3beta1QueryInput.languageCode) &&
        Objects.equals(this.text, googleCloudDialogflowCxV3beta1QueryInput.text);
  }

  @Override
  public int hashCode() {
    return Objects.hash(audio, dtmf, event, intent, languageCode, text);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDialogflowCxV3beta1QueryInput {\n");
    sb.append("    audio: ").append(toIndentedString(audio)).append("\n");
    sb.append("    dtmf: ").append(toIndentedString(dtmf)).append("\n");
    sb.append("    event: ").append(toIndentedString(event)).append("\n");
    sb.append("    intent: ").append(toIndentedString(intent)).append("\n");
    sb.append("    languageCode: ").append(toIndentedString(languageCode)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("audio");
    openapiFields.add("dtmf");
    openapiFields.add("event");
    openapiFields.add("intent");
    openapiFields.add("languageCode");
    openapiFields.add("text");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDialogflowCxV3beta1QueryInput
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDialogflowCxV3beta1QueryInput.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDialogflowCxV3beta1QueryInput is not found in the empty JSON string", GoogleCloudDialogflowCxV3beta1QueryInput.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDialogflowCxV3beta1QueryInput.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDialogflowCxV3beta1QueryInput` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `audio`
      if (jsonObj.get("audio") != null && !jsonObj.get("audio").isJsonNull()) {
        GoogleCloudDialogflowCxV3beta1AudioInput.validateJsonElement(jsonObj.get("audio"));
      }
      // validate the optional field `dtmf`
      if (jsonObj.get("dtmf") != null && !jsonObj.get("dtmf").isJsonNull()) {
        GoogleCloudDialogflowCxV3beta1DtmfInput.validateJsonElement(jsonObj.get("dtmf"));
      }
      // validate the optional field `event`
      if (jsonObj.get("event") != null && !jsonObj.get("event").isJsonNull()) {
        GoogleCloudDialogflowCxV3beta1EventInput.validateJsonElement(jsonObj.get("event"));
      }
      // validate the optional field `intent`
      if (jsonObj.get("intent") != null && !jsonObj.get("intent").isJsonNull()) {
        GoogleCloudDialogflowCxV3beta1IntentInput.validateJsonElement(jsonObj.get("intent"));
      }
      if ((jsonObj.get("languageCode") != null && !jsonObj.get("languageCode").isJsonNull()) && !jsonObj.get("languageCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `languageCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("languageCode").toString()));
      }
      // validate the optional field `text`
      if (jsonObj.get("text") != null && !jsonObj.get("text").isJsonNull()) {
        GoogleCloudDialogflowCxV3beta1TextInput.validateJsonElement(jsonObj.get("text"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDialogflowCxV3beta1QueryInput.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDialogflowCxV3beta1QueryInput' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDialogflowCxV3beta1QueryInput> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDialogflowCxV3beta1QueryInput.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDialogflowCxV3beta1QueryInput>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDialogflowCxV3beta1QueryInput value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDialogflowCxV3beta1QueryInput read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDialogflowCxV3beta1QueryInput given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDialogflowCxV3beta1QueryInput
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDialogflowCxV3beta1QueryInput
   */
  public static GoogleCloudDialogflowCxV3beta1QueryInput fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDialogflowCxV3beta1QueryInput.class);
  }

  /**
   * Convert an instance of GoogleCloudDialogflowCxV3beta1QueryInput to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

