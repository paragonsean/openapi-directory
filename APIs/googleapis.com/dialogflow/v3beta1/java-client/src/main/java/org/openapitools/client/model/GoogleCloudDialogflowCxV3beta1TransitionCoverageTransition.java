/*
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudDialogflowCxV3beta1EventHandler;
import org.openapitools.client.model.GoogleCloudDialogflowCxV3beta1TransitionCoverageTransitionNode;
import org.openapitools.client.model.GoogleCloudDialogflowCxV3beta1TransitionRoute;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A transition in a page.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:47:33.933227-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDialogflowCxV3beta1TransitionCoverageTransition {
  public static final String SERIALIZED_NAME_COVERED = "covered";
  @SerializedName(SERIALIZED_NAME_COVERED)
  private Boolean covered;

  public static final String SERIALIZED_NAME_EVENT_HANDLER = "eventHandler";
  @SerializedName(SERIALIZED_NAME_EVENT_HANDLER)
  private GoogleCloudDialogflowCxV3beta1EventHandler eventHandler;

  public static final String SERIALIZED_NAME_INDEX = "index";
  @SerializedName(SERIALIZED_NAME_INDEX)
  private Integer index;

  public static final String SERIALIZED_NAME_SOURCE = "source";
  @SerializedName(SERIALIZED_NAME_SOURCE)
  private GoogleCloudDialogflowCxV3beta1TransitionCoverageTransitionNode source;

  public static final String SERIALIZED_NAME_TARGET = "target";
  @SerializedName(SERIALIZED_NAME_TARGET)
  private GoogleCloudDialogflowCxV3beta1TransitionCoverageTransitionNode target;

  public static final String SERIALIZED_NAME_TRANSITION_ROUTE = "transitionRoute";
  @SerializedName(SERIALIZED_NAME_TRANSITION_ROUTE)
  private GoogleCloudDialogflowCxV3beta1TransitionRoute transitionRoute;

  public GoogleCloudDialogflowCxV3beta1TransitionCoverageTransition() {
  }

  public GoogleCloudDialogflowCxV3beta1TransitionCoverageTransition covered(Boolean covered) {
    this.covered = covered;
    return this;
  }

  /**
   * Whether the transition is covered by at least one of the agent&#39;s test cases.
   * @return covered
   */
  @javax.annotation.Nullable
  public Boolean getCovered() {
    return covered;
  }

  public void setCovered(Boolean covered) {
    this.covered = covered;
  }


  public GoogleCloudDialogflowCxV3beta1TransitionCoverageTransition eventHandler(GoogleCloudDialogflowCxV3beta1EventHandler eventHandler) {
    this.eventHandler = eventHandler;
    return this;
  }

  /**
   * Get eventHandler
   * @return eventHandler
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowCxV3beta1EventHandler getEventHandler() {
    return eventHandler;
  }

  public void setEventHandler(GoogleCloudDialogflowCxV3beta1EventHandler eventHandler) {
    this.eventHandler = eventHandler;
  }


  public GoogleCloudDialogflowCxV3beta1TransitionCoverageTransition index(Integer index) {
    this.index = index;
    return this;
  }

  /**
   * The index of a transition in the transition list. Starting from 0.
   * @return index
   */
  @javax.annotation.Nullable
  public Integer getIndex() {
    return index;
  }

  public void setIndex(Integer index) {
    this.index = index;
  }


  public GoogleCloudDialogflowCxV3beta1TransitionCoverageTransition source(GoogleCloudDialogflowCxV3beta1TransitionCoverageTransitionNode source) {
    this.source = source;
    return this;
  }

  /**
   * Get source
   * @return source
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowCxV3beta1TransitionCoverageTransitionNode getSource() {
    return source;
  }

  public void setSource(GoogleCloudDialogflowCxV3beta1TransitionCoverageTransitionNode source) {
    this.source = source;
  }


  public GoogleCloudDialogflowCxV3beta1TransitionCoverageTransition target(GoogleCloudDialogflowCxV3beta1TransitionCoverageTransitionNode target) {
    this.target = target;
    return this;
  }

  /**
   * Get target
   * @return target
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowCxV3beta1TransitionCoverageTransitionNode getTarget() {
    return target;
  }

  public void setTarget(GoogleCloudDialogflowCxV3beta1TransitionCoverageTransitionNode target) {
    this.target = target;
  }


  public GoogleCloudDialogflowCxV3beta1TransitionCoverageTransition transitionRoute(GoogleCloudDialogflowCxV3beta1TransitionRoute transitionRoute) {
    this.transitionRoute = transitionRoute;
    return this;
  }

  /**
   * Get transitionRoute
   * @return transitionRoute
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowCxV3beta1TransitionRoute getTransitionRoute() {
    return transitionRoute;
  }

  public void setTransitionRoute(GoogleCloudDialogflowCxV3beta1TransitionRoute transitionRoute) {
    this.transitionRoute = transitionRoute;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDialogflowCxV3beta1TransitionCoverageTransition googleCloudDialogflowCxV3beta1TransitionCoverageTransition = (GoogleCloudDialogflowCxV3beta1TransitionCoverageTransition) o;
    return Objects.equals(this.covered, googleCloudDialogflowCxV3beta1TransitionCoverageTransition.covered) &&
        Objects.equals(this.eventHandler, googleCloudDialogflowCxV3beta1TransitionCoverageTransition.eventHandler) &&
        Objects.equals(this.index, googleCloudDialogflowCxV3beta1TransitionCoverageTransition.index) &&
        Objects.equals(this.source, googleCloudDialogflowCxV3beta1TransitionCoverageTransition.source) &&
        Objects.equals(this.target, googleCloudDialogflowCxV3beta1TransitionCoverageTransition.target) &&
        Objects.equals(this.transitionRoute, googleCloudDialogflowCxV3beta1TransitionCoverageTransition.transitionRoute);
  }

  @Override
  public int hashCode() {
    return Objects.hash(covered, eventHandler, index, source, target, transitionRoute);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDialogflowCxV3beta1TransitionCoverageTransition {\n");
    sb.append("    covered: ").append(toIndentedString(covered)).append("\n");
    sb.append("    eventHandler: ").append(toIndentedString(eventHandler)).append("\n");
    sb.append("    index: ").append(toIndentedString(index)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    target: ").append(toIndentedString(target)).append("\n");
    sb.append("    transitionRoute: ").append(toIndentedString(transitionRoute)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("covered");
    openapiFields.add("eventHandler");
    openapiFields.add("index");
    openapiFields.add("source");
    openapiFields.add("target");
    openapiFields.add("transitionRoute");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDialogflowCxV3beta1TransitionCoverageTransition
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDialogflowCxV3beta1TransitionCoverageTransition.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDialogflowCxV3beta1TransitionCoverageTransition is not found in the empty JSON string", GoogleCloudDialogflowCxV3beta1TransitionCoverageTransition.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDialogflowCxV3beta1TransitionCoverageTransition.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDialogflowCxV3beta1TransitionCoverageTransition` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `eventHandler`
      if (jsonObj.get("eventHandler") != null && !jsonObj.get("eventHandler").isJsonNull()) {
        GoogleCloudDialogflowCxV3beta1EventHandler.validateJsonElement(jsonObj.get("eventHandler"));
      }
      // validate the optional field `source`
      if (jsonObj.get("source") != null && !jsonObj.get("source").isJsonNull()) {
        GoogleCloudDialogflowCxV3beta1TransitionCoverageTransitionNode.validateJsonElement(jsonObj.get("source"));
      }
      // validate the optional field `target`
      if (jsonObj.get("target") != null && !jsonObj.get("target").isJsonNull()) {
        GoogleCloudDialogflowCxV3beta1TransitionCoverageTransitionNode.validateJsonElement(jsonObj.get("target"));
      }
      // validate the optional field `transitionRoute`
      if (jsonObj.get("transitionRoute") != null && !jsonObj.get("transitionRoute").isJsonNull()) {
        GoogleCloudDialogflowCxV3beta1TransitionRoute.validateJsonElement(jsonObj.get("transitionRoute"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDialogflowCxV3beta1TransitionCoverageTransition.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDialogflowCxV3beta1TransitionCoverageTransition' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDialogflowCxV3beta1TransitionCoverageTransition> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDialogflowCxV3beta1TransitionCoverageTransition.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDialogflowCxV3beta1TransitionCoverageTransition>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDialogflowCxV3beta1TransitionCoverageTransition value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDialogflowCxV3beta1TransitionCoverageTransition read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDialogflowCxV3beta1TransitionCoverageTransition given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDialogflowCxV3beta1TransitionCoverageTransition
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDialogflowCxV3beta1TransitionCoverageTransition
   */
  public static GoogleCloudDialogflowCxV3beta1TransitionCoverageTransition fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDialogflowCxV3beta1TransitionCoverageTransition.class);
  }

  /**
   * Convert an instance of GoogleCloudDialogflowCxV3beta1TransitionCoverageTransition to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

