/*
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudDialogflowCxV3beta1OutputAudioConfig;
import org.openapitools.client.model.GoogleCloudDialogflowCxV3beta1QueryResult;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Response of FulfillIntent
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:47:33.933227-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDialogflowCxV3beta1FulfillIntentResponse {
  public static final String SERIALIZED_NAME_OUTPUT_AUDIO = "outputAudio";
  @SerializedName(SERIALIZED_NAME_OUTPUT_AUDIO)
  private byte[] outputAudio;

  public static final String SERIALIZED_NAME_OUTPUT_AUDIO_CONFIG = "outputAudioConfig";
  @SerializedName(SERIALIZED_NAME_OUTPUT_AUDIO_CONFIG)
  private GoogleCloudDialogflowCxV3beta1OutputAudioConfig outputAudioConfig;

  public static final String SERIALIZED_NAME_QUERY_RESULT = "queryResult";
  @SerializedName(SERIALIZED_NAME_QUERY_RESULT)
  private GoogleCloudDialogflowCxV3beta1QueryResult queryResult;

  public static final String SERIALIZED_NAME_RESPONSE_ID = "responseId";
  @SerializedName(SERIALIZED_NAME_RESPONSE_ID)
  private String responseId;

  public GoogleCloudDialogflowCxV3beta1FulfillIntentResponse() {
  }

  public GoogleCloudDialogflowCxV3beta1FulfillIntentResponse outputAudio(byte[] outputAudio) {
    this.outputAudio = outputAudio;
    return this;
  }

  /**
   * The audio data bytes encoded as specified in the request. Note: The output audio is generated based on the values of default platform text responses found in the &#x60;query_result.response_messages&#x60; field. If multiple default text responses exist, they will be concatenated when generating audio. If no default platform text responses exist, the generated audio content will be empty. In some scenarios, multiple output audio fields may be present in the response structure. In these cases, only the top-most-level audio output has content.
   * @return outputAudio
   */
  @javax.annotation.Nullable
  public byte[] getOutputAudio() {
    return outputAudio;
  }

  public void setOutputAudio(byte[] outputAudio) {
    this.outputAudio = outputAudio;
  }


  public GoogleCloudDialogflowCxV3beta1FulfillIntentResponse outputAudioConfig(GoogleCloudDialogflowCxV3beta1OutputAudioConfig outputAudioConfig) {
    this.outputAudioConfig = outputAudioConfig;
    return this;
  }

  /**
   * Get outputAudioConfig
   * @return outputAudioConfig
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowCxV3beta1OutputAudioConfig getOutputAudioConfig() {
    return outputAudioConfig;
  }

  public void setOutputAudioConfig(GoogleCloudDialogflowCxV3beta1OutputAudioConfig outputAudioConfig) {
    this.outputAudioConfig = outputAudioConfig;
  }


  public GoogleCloudDialogflowCxV3beta1FulfillIntentResponse queryResult(GoogleCloudDialogflowCxV3beta1QueryResult queryResult) {
    this.queryResult = queryResult;
    return this;
  }

  /**
   * Get queryResult
   * @return queryResult
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowCxV3beta1QueryResult getQueryResult() {
    return queryResult;
  }

  public void setQueryResult(GoogleCloudDialogflowCxV3beta1QueryResult queryResult) {
    this.queryResult = queryResult;
  }


  public GoogleCloudDialogflowCxV3beta1FulfillIntentResponse responseId(String responseId) {
    this.responseId = responseId;
    return this;
  }

  /**
   * Output only. The unique identifier of the response. It can be used to locate a response in the training example set or for reporting issues.
   * @return responseId
   */
  @javax.annotation.Nullable
  public String getResponseId() {
    return responseId;
  }

  public void setResponseId(String responseId) {
    this.responseId = responseId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDialogflowCxV3beta1FulfillIntentResponse googleCloudDialogflowCxV3beta1FulfillIntentResponse = (GoogleCloudDialogflowCxV3beta1FulfillIntentResponse) o;
    return Arrays.equals(this.outputAudio, googleCloudDialogflowCxV3beta1FulfillIntentResponse.outputAudio) &&
        Objects.equals(this.outputAudioConfig, googleCloudDialogflowCxV3beta1FulfillIntentResponse.outputAudioConfig) &&
        Objects.equals(this.queryResult, googleCloudDialogflowCxV3beta1FulfillIntentResponse.queryResult) &&
        Objects.equals(this.responseId, googleCloudDialogflowCxV3beta1FulfillIntentResponse.responseId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(Arrays.hashCode(outputAudio), outputAudioConfig, queryResult, responseId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDialogflowCxV3beta1FulfillIntentResponse {\n");
    sb.append("    outputAudio: ").append(toIndentedString(outputAudio)).append("\n");
    sb.append("    outputAudioConfig: ").append(toIndentedString(outputAudioConfig)).append("\n");
    sb.append("    queryResult: ").append(toIndentedString(queryResult)).append("\n");
    sb.append("    responseId: ").append(toIndentedString(responseId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("outputAudio");
    openapiFields.add("outputAudioConfig");
    openapiFields.add("queryResult");
    openapiFields.add("responseId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDialogflowCxV3beta1FulfillIntentResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDialogflowCxV3beta1FulfillIntentResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDialogflowCxV3beta1FulfillIntentResponse is not found in the empty JSON string", GoogleCloudDialogflowCxV3beta1FulfillIntentResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDialogflowCxV3beta1FulfillIntentResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDialogflowCxV3beta1FulfillIntentResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `outputAudioConfig`
      if (jsonObj.get("outputAudioConfig") != null && !jsonObj.get("outputAudioConfig").isJsonNull()) {
        GoogleCloudDialogflowCxV3beta1OutputAudioConfig.validateJsonElement(jsonObj.get("outputAudioConfig"));
      }
      // validate the optional field `queryResult`
      if (jsonObj.get("queryResult") != null && !jsonObj.get("queryResult").isJsonNull()) {
        GoogleCloudDialogflowCxV3beta1QueryResult.validateJsonElement(jsonObj.get("queryResult"));
      }
      if ((jsonObj.get("responseId") != null && !jsonObj.get("responseId").isJsonNull()) && !jsonObj.get("responseId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `responseId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("responseId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDialogflowCxV3beta1FulfillIntentResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDialogflowCxV3beta1FulfillIntentResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDialogflowCxV3beta1FulfillIntentResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDialogflowCxV3beta1FulfillIntentResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDialogflowCxV3beta1FulfillIntentResponse>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDialogflowCxV3beta1FulfillIntentResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDialogflowCxV3beta1FulfillIntentResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDialogflowCxV3beta1FulfillIntentResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDialogflowCxV3beta1FulfillIntentResponse
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDialogflowCxV3beta1FulfillIntentResponse
   */
  public static GoogleCloudDialogflowCxV3beta1FulfillIntentResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDialogflowCxV3beta1FulfillIntentResponse.class);
  }

  /**
   * Convert an instance of GoogleCloudDialogflowCxV3beta1FulfillIntentResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

