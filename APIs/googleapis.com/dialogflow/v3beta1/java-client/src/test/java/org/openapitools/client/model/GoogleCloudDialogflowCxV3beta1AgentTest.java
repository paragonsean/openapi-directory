/*
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudDialogflowCxV3beta1AdvancedSettings;
import org.openapitools.client.model.GoogleCloudDialogflowCxV3beta1AgentAnswerFeedbackSettings;
import org.openapitools.client.model.GoogleCloudDialogflowCxV3beta1AgentGenAppBuilderSettings;
import org.openapitools.client.model.GoogleCloudDialogflowCxV3beta1AgentGitIntegrationSettings;
import org.openapitools.client.model.GoogleCloudDialogflowCxV3beta1SpeechToTextSettings;
import org.openapitools.client.model.GoogleCloudDialogflowCxV3beta1TextToSpeechSettings;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for GoogleCloudDialogflowCxV3beta1Agent
 */
public class GoogleCloudDialogflowCxV3beta1AgentTest {
    private final GoogleCloudDialogflowCxV3beta1Agent model = new GoogleCloudDialogflowCxV3beta1Agent();

    /**
     * Model tests for GoogleCloudDialogflowCxV3beta1Agent
     */
    @Test
    public void testGoogleCloudDialogflowCxV3beta1Agent() {
        // TODO: test GoogleCloudDialogflowCxV3beta1Agent
    }

    /**
     * Test the property 'advancedSettings'
     */
    @Test
    public void advancedSettingsTest() {
        // TODO: test advancedSettings
    }

    /**
     * Test the property 'answerFeedbackSettings'
     */
    @Test
    public void answerFeedbackSettingsTest() {
        // TODO: test answerFeedbackSettings
    }

    /**
     * Test the property 'avatarUri'
     */
    @Test
    public void avatarUriTest() {
        // TODO: test avatarUri
    }

    /**
     * Test the property 'defaultLanguageCode'
     */
    @Test
    public void defaultLanguageCodeTest() {
        // TODO: test defaultLanguageCode
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'displayName'
     */
    @Test
    public void displayNameTest() {
        // TODO: test displayName
    }

    /**
     * Test the property 'enableSpellCorrection'
     */
    @Test
    public void enableSpellCorrectionTest() {
        // TODO: test enableSpellCorrection
    }

    /**
     * Test the property 'enableStackdriverLogging'
     */
    @Test
    public void enableStackdriverLoggingTest() {
        // TODO: test enableStackdriverLogging
    }

    /**
     * Test the property 'genAppBuilderSettings'
     */
    @Test
    public void genAppBuilderSettingsTest() {
        // TODO: test genAppBuilderSettings
    }

    /**
     * Test the property 'gitIntegrationSettings'
     */
    @Test
    public void gitIntegrationSettingsTest() {
        // TODO: test gitIntegrationSettings
    }

    /**
     * Test the property 'locked'
     */
    @Test
    public void lockedTest() {
        // TODO: test locked
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'securitySettings'
     */
    @Test
    public void securitySettingsTest() {
        // TODO: test securitySettings
    }

    /**
     * Test the property 'speechToTextSettings'
     */
    @Test
    public void speechToTextSettingsTest() {
        // TODO: test speechToTextSettings
    }

    /**
     * Test the property 'startFlow'
     */
    @Test
    public void startFlowTest() {
        // TODO: test startFlow
    }

    /**
     * Test the property 'supportedLanguageCodes'
     */
    @Test
    public void supportedLanguageCodesTest() {
        // TODO: test supportedLanguageCodes
    }

    /**
     * Test the property 'textToSpeechSettings'
     */
    @Test
    public void textToSpeechSettingsTest() {
        // TODO: test textToSpeechSettings
    }

    /**
     * Test the property 'timeZone'
     */
    @Test
    public void timeZoneTest() {
        // TODO: test timeZone
    }

}
