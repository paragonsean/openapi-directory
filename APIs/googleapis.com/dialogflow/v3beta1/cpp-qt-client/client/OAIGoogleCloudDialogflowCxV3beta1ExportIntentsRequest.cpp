/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowCxV3beta1ExportIntentsRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowCxV3beta1ExportIntentsRequest::OAIGoogleCloudDialogflowCxV3beta1ExportIntentsRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowCxV3beta1ExportIntentsRequest::OAIGoogleCloudDialogflowCxV3beta1ExportIntentsRequest() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowCxV3beta1ExportIntentsRequest::~OAIGoogleCloudDialogflowCxV3beta1ExportIntentsRequest() {}

void OAIGoogleCloudDialogflowCxV3beta1ExportIntentsRequest::initializeModel() {

    m_data_format_isSet = false;
    m_data_format_isValid = false;

    m_intents_isSet = false;
    m_intents_isValid = false;

    m_intents_content_inline_isSet = false;
    m_intents_content_inline_isValid = false;

    m_intents_uri_isSet = false;
    m_intents_uri_isValid = false;
}

void OAIGoogleCloudDialogflowCxV3beta1ExportIntentsRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowCxV3beta1ExportIntentsRequest::fromJsonObject(QJsonObject json) {

    m_data_format_isValid = ::OpenAPI::fromJsonValue(m_data_format, json[QString("dataFormat")]);
    m_data_format_isSet = !json[QString("dataFormat")].isNull() && m_data_format_isValid;

    m_intents_isValid = ::OpenAPI::fromJsonValue(m_intents, json[QString("intents")]);
    m_intents_isSet = !json[QString("intents")].isNull() && m_intents_isValid;

    m_intents_content_inline_isValid = ::OpenAPI::fromJsonValue(m_intents_content_inline, json[QString("intentsContentInline")]);
    m_intents_content_inline_isSet = !json[QString("intentsContentInline")].isNull() && m_intents_content_inline_isValid;

    m_intents_uri_isValid = ::OpenAPI::fromJsonValue(m_intents_uri, json[QString("intentsUri")]);
    m_intents_uri_isSet = !json[QString("intentsUri")].isNull() && m_intents_uri_isValid;
}

QString OAIGoogleCloudDialogflowCxV3beta1ExportIntentsRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowCxV3beta1ExportIntentsRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_data_format_isSet) {
        obj.insert(QString("dataFormat"), ::OpenAPI::toJsonValue(m_data_format));
    }
    if (m_intents.size() > 0) {
        obj.insert(QString("intents"), ::OpenAPI::toJsonValue(m_intents));
    }
    if (m_intents_content_inline_isSet) {
        obj.insert(QString("intentsContentInline"), ::OpenAPI::toJsonValue(m_intents_content_inline));
    }
    if (m_intents_uri_isSet) {
        obj.insert(QString("intentsUri"), ::OpenAPI::toJsonValue(m_intents_uri));
    }
    return obj;
}

QString OAIGoogleCloudDialogflowCxV3beta1ExportIntentsRequest::getDataFormat() const {
    return m_data_format;
}
void OAIGoogleCloudDialogflowCxV3beta1ExportIntentsRequest::setDataFormat(const QString &data_format) {
    m_data_format = data_format;
    m_data_format_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1ExportIntentsRequest::is_data_format_Set() const{
    return m_data_format_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1ExportIntentsRequest::is_data_format_Valid() const{
    return m_data_format_isValid;
}

QList<QString> OAIGoogleCloudDialogflowCxV3beta1ExportIntentsRequest::getIntents() const {
    return m_intents;
}
void OAIGoogleCloudDialogflowCxV3beta1ExportIntentsRequest::setIntents(const QList<QString> &intents) {
    m_intents = intents;
    m_intents_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1ExportIntentsRequest::is_intents_Set() const{
    return m_intents_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1ExportIntentsRequest::is_intents_Valid() const{
    return m_intents_isValid;
}

bool OAIGoogleCloudDialogflowCxV3beta1ExportIntentsRequest::isIntentsContentInline() const {
    return m_intents_content_inline;
}
void OAIGoogleCloudDialogflowCxV3beta1ExportIntentsRequest::setIntentsContentInline(const bool &intents_content_inline) {
    m_intents_content_inline = intents_content_inline;
    m_intents_content_inline_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1ExportIntentsRequest::is_intents_content_inline_Set() const{
    return m_intents_content_inline_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1ExportIntentsRequest::is_intents_content_inline_Valid() const{
    return m_intents_content_inline_isValid;
}

QString OAIGoogleCloudDialogflowCxV3beta1ExportIntentsRequest::getIntentsUri() const {
    return m_intents_uri;
}
void OAIGoogleCloudDialogflowCxV3beta1ExportIntentsRequest::setIntentsUri(const QString &intents_uri) {
    m_intents_uri = intents_uri;
    m_intents_uri_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1ExportIntentsRequest::is_intents_uri_Set() const{
    return m_intents_uri_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1ExportIntentsRequest::is_intents_uri_Valid() const{
    return m_intents_uri_isValid;
}

bool OAIGoogleCloudDialogflowCxV3beta1ExportIntentsRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_data_format_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_intents.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_intents_content_inline_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_intents_uri_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowCxV3beta1ExportIntentsRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
