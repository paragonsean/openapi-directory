/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowCxV3beta1Experiment.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowCxV3beta1Experiment::OAIGoogleCloudDialogflowCxV3beta1Experiment(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowCxV3beta1Experiment::OAIGoogleCloudDialogflowCxV3beta1Experiment() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowCxV3beta1Experiment::~OAIGoogleCloudDialogflowCxV3beta1Experiment() {}

void OAIGoogleCloudDialogflowCxV3beta1Experiment::initializeModel() {

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_definition_isSet = false;
    m_definition_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_end_time_isSet = false;
    m_end_time_isValid = false;

    m_experiment_length_isSet = false;
    m_experiment_length_isValid = false;

    m_last_update_time_isSet = false;
    m_last_update_time_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_result_isSet = false;
    m_result_isValid = false;

    m_rollout_config_isSet = false;
    m_rollout_config_isValid = false;

    m_rollout_failure_reason_isSet = false;
    m_rollout_failure_reason_isValid = false;

    m_rollout_state_isSet = false;
    m_rollout_state_isValid = false;

    m_start_time_isSet = false;
    m_start_time_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;

    m_variants_history_isSet = false;
    m_variants_history_isValid = false;
}

void OAIGoogleCloudDialogflowCxV3beta1Experiment::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowCxV3beta1Experiment::fromJsonObject(QJsonObject json) {

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_definition_isValid = ::OpenAPI::fromJsonValue(m_definition, json[QString("definition")]);
    m_definition_isSet = !json[QString("definition")].isNull() && m_definition_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_end_time_isValid = ::OpenAPI::fromJsonValue(m_end_time, json[QString("endTime")]);
    m_end_time_isSet = !json[QString("endTime")].isNull() && m_end_time_isValid;

    m_experiment_length_isValid = ::OpenAPI::fromJsonValue(m_experiment_length, json[QString("experimentLength")]);
    m_experiment_length_isSet = !json[QString("experimentLength")].isNull() && m_experiment_length_isValid;

    m_last_update_time_isValid = ::OpenAPI::fromJsonValue(m_last_update_time, json[QString("lastUpdateTime")]);
    m_last_update_time_isSet = !json[QString("lastUpdateTime")].isNull() && m_last_update_time_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_result_isValid = ::OpenAPI::fromJsonValue(m_result, json[QString("result")]);
    m_result_isSet = !json[QString("result")].isNull() && m_result_isValid;

    m_rollout_config_isValid = ::OpenAPI::fromJsonValue(m_rollout_config, json[QString("rolloutConfig")]);
    m_rollout_config_isSet = !json[QString("rolloutConfig")].isNull() && m_rollout_config_isValid;

    m_rollout_failure_reason_isValid = ::OpenAPI::fromJsonValue(m_rollout_failure_reason, json[QString("rolloutFailureReason")]);
    m_rollout_failure_reason_isSet = !json[QString("rolloutFailureReason")].isNull() && m_rollout_failure_reason_isValid;

    m_rollout_state_isValid = ::OpenAPI::fromJsonValue(m_rollout_state, json[QString("rolloutState")]);
    m_rollout_state_isSet = !json[QString("rolloutState")].isNull() && m_rollout_state_isValid;

    m_start_time_isValid = ::OpenAPI::fromJsonValue(m_start_time, json[QString("startTime")]);
    m_start_time_isSet = !json[QString("startTime")].isNull() && m_start_time_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;

    m_variants_history_isValid = ::OpenAPI::fromJsonValue(m_variants_history, json[QString("variantsHistory")]);
    m_variants_history_isSet = !json[QString("variantsHistory")].isNull() && m_variants_history_isValid;
}

QString OAIGoogleCloudDialogflowCxV3beta1Experiment::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowCxV3beta1Experiment::asJsonObject() const {
    QJsonObject obj;
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_definition.isSet()) {
        obj.insert(QString("definition"), ::OpenAPI::toJsonValue(m_definition));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_end_time_isSet) {
        obj.insert(QString("endTime"), ::OpenAPI::toJsonValue(m_end_time));
    }
    if (m_experiment_length_isSet) {
        obj.insert(QString("experimentLength"), ::OpenAPI::toJsonValue(m_experiment_length));
    }
    if (m_last_update_time_isSet) {
        obj.insert(QString("lastUpdateTime"), ::OpenAPI::toJsonValue(m_last_update_time));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_result.isSet()) {
        obj.insert(QString("result"), ::OpenAPI::toJsonValue(m_result));
    }
    if (m_rollout_config.isSet()) {
        obj.insert(QString("rolloutConfig"), ::OpenAPI::toJsonValue(m_rollout_config));
    }
    if (m_rollout_failure_reason_isSet) {
        obj.insert(QString("rolloutFailureReason"), ::OpenAPI::toJsonValue(m_rollout_failure_reason));
    }
    if (m_rollout_state.isSet()) {
        obj.insert(QString("rolloutState"), ::OpenAPI::toJsonValue(m_rollout_state));
    }
    if (m_start_time_isSet) {
        obj.insert(QString("startTime"), ::OpenAPI::toJsonValue(m_start_time));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    if (m_variants_history.size() > 0) {
        obj.insert(QString("variantsHistory"), ::OpenAPI::toJsonValue(m_variants_history));
    }
    return obj;
}

QString OAIGoogleCloudDialogflowCxV3beta1Experiment::getCreateTime() const {
    return m_create_time;
}
void OAIGoogleCloudDialogflowCxV3beta1Experiment::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1Experiment::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1Experiment::is_create_time_Valid() const{
    return m_create_time_isValid;
}

OAIGoogleCloudDialogflowCxV3beta1ExperimentDefinition OAIGoogleCloudDialogflowCxV3beta1Experiment::getDefinition() const {
    return m_definition;
}
void OAIGoogleCloudDialogflowCxV3beta1Experiment::setDefinition(const OAIGoogleCloudDialogflowCxV3beta1ExperimentDefinition &definition) {
    m_definition = definition;
    m_definition_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1Experiment::is_definition_Set() const{
    return m_definition_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1Experiment::is_definition_Valid() const{
    return m_definition_isValid;
}

QString OAIGoogleCloudDialogflowCxV3beta1Experiment::getDescription() const {
    return m_description;
}
void OAIGoogleCloudDialogflowCxV3beta1Experiment::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1Experiment::is_description_Set() const{
    return m_description_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1Experiment::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIGoogleCloudDialogflowCxV3beta1Experiment::getDisplayName() const {
    return m_display_name;
}
void OAIGoogleCloudDialogflowCxV3beta1Experiment::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1Experiment::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1Experiment::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QString OAIGoogleCloudDialogflowCxV3beta1Experiment::getEndTime() const {
    return m_end_time;
}
void OAIGoogleCloudDialogflowCxV3beta1Experiment::setEndTime(const QString &end_time) {
    m_end_time = end_time;
    m_end_time_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1Experiment::is_end_time_Set() const{
    return m_end_time_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1Experiment::is_end_time_Valid() const{
    return m_end_time_isValid;
}

QString OAIGoogleCloudDialogflowCxV3beta1Experiment::getExperimentLength() const {
    return m_experiment_length;
}
void OAIGoogleCloudDialogflowCxV3beta1Experiment::setExperimentLength(const QString &experiment_length) {
    m_experiment_length = experiment_length;
    m_experiment_length_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1Experiment::is_experiment_length_Set() const{
    return m_experiment_length_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1Experiment::is_experiment_length_Valid() const{
    return m_experiment_length_isValid;
}

QString OAIGoogleCloudDialogflowCxV3beta1Experiment::getLastUpdateTime() const {
    return m_last_update_time;
}
void OAIGoogleCloudDialogflowCxV3beta1Experiment::setLastUpdateTime(const QString &last_update_time) {
    m_last_update_time = last_update_time;
    m_last_update_time_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1Experiment::is_last_update_time_Set() const{
    return m_last_update_time_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1Experiment::is_last_update_time_Valid() const{
    return m_last_update_time_isValid;
}

QString OAIGoogleCloudDialogflowCxV3beta1Experiment::getName() const {
    return m_name;
}
void OAIGoogleCloudDialogflowCxV3beta1Experiment::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1Experiment::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1Experiment::is_name_Valid() const{
    return m_name_isValid;
}

OAIGoogleCloudDialogflowCxV3beta1ExperimentResult OAIGoogleCloudDialogflowCxV3beta1Experiment::getResult() const {
    return m_result;
}
void OAIGoogleCloudDialogflowCxV3beta1Experiment::setResult(const OAIGoogleCloudDialogflowCxV3beta1ExperimentResult &result) {
    m_result = result;
    m_result_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1Experiment::is_result_Set() const{
    return m_result_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1Experiment::is_result_Valid() const{
    return m_result_isValid;
}

OAIGoogleCloudDialogflowCxV3beta1RolloutConfig OAIGoogleCloudDialogflowCxV3beta1Experiment::getRolloutConfig() const {
    return m_rollout_config;
}
void OAIGoogleCloudDialogflowCxV3beta1Experiment::setRolloutConfig(const OAIGoogleCloudDialogflowCxV3beta1RolloutConfig &rollout_config) {
    m_rollout_config = rollout_config;
    m_rollout_config_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1Experiment::is_rollout_config_Set() const{
    return m_rollout_config_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1Experiment::is_rollout_config_Valid() const{
    return m_rollout_config_isValid;
}

QString OAIGoogleCloudDialogflowCxV3beta1Experiment::getRolloutFailureReason() const {
    return m_rollout_failure_reason;
}
void OAIGoogleCloudDialogflowCxV3beta1Experiment::setRolloutFailureReason(const QString &rollout_failure_reason) {
    m_rollout_failure_reason = rollout_failure_reason;
    m_rollout_failure_reason_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1Experiment::is_rollout_failure_reason_Set() const{
    return m_rollout_failure_reason_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1Experiment::is_rollout_failure_reason_Valid() const{
    return m_rollout_failure_reason_isValid;
}

OAIGoogleCloudDialogflowCxV3beta1RolloutState OAIGoogleCloudDialogflowCxV3beta1Experiment::getRolloutState() const {
    return m_rollout_state;
}
void OAIGoogleCloudDialogflowCxV3beta1Experiment::setRolloutState(const OAIGoogleCloudDialogflowCxV3beta1RolloutState &rollout_state) {
    m_rollout_state = rollout_state;
    m_rollout_state_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1Experiment::is_rollout_state_Set() const{
    return m_rollout_state_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1Experiment::is_rollout_state_Valid() const{
    return m_rollout_state_isValid;
}

QString OAIGoogleCloudDialogflowCxV3beta1Experiment::getStartTime() const {
    return m_start_time;
}
void OAIGoogleCloudDialogflowCxV3beta1Experiment::setStartTime(const QString &start_time) {
    m_start_time = start_time;
    m_start_time_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1Experiment::is_start_time_Set() const{
    return m_start_time_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1Experiment::is_start_time_Valid() const{
    return m_start_time_isValid;
}

QString OAIGoogleCloudDialogflowCxV3beta1Experiment::getState() const {
    return m_state;
}
void OAIGoogleCloudDialogflowCxV3beta1Experiment::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1Experiment::is_state_Set() const{
    return m_state_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1Experiment::is_state_Valid() const{
    return m_state_isValid;
}

QList<OAIGoogleCloudDialogflowCxV3beta1VariantsHistory> OAIGoogleCloudDialogflowCxV3beta1Experiment::getVariantsHistory() const {
    return m_variants_history;
}
void OAIGoogleCloudDialogflowCxV3beta1Experiment::setVariantsHistory(const QList<OAIGoogleCloudDialogflowCxV3beta1VariantsHistory> &variants_history) {
    m_variants_history = variants_history;
    m_variants_history_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1Experiment::is_variants_history_Set() const{
    return m_variants_history_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1Experiment::is_variants_history_Valid() const{
    return m_variants_history_isValid;
}

bool OAIGoogleCloudDialogflowCxV3beta1Experiment::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_definition.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_experiment_length_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_result.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_rollout_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_rollout_failure_reason_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rollout_state.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_variants_history.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowCxV3beta1Experiment::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
