/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudDialogflowCxV3beta1QueryParameters.h
 *
 * Represents the parameters of a conversational query.
 */

#ifndef OAIGoogleCloudDialogflowCxV3beta1QueryParameters_H
#define OAIGoogleCloudDialogflowCxV3beta1QueryParameters_H

#include <QJsonObject>

#include "OAIGoogleCloudDialogflowCxV3beta1SearchConfig.h"
#include "OAIGoogleCloudDialogflowCxV3beta1SessionEntityType.h"
#include "OAIGoogleTypeLatLng.h"
#include <QJsonValue>
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleTypeLatLng;
class OAIGoogleCloudDialogflowCxV3beta1SearchConfig;
class OAIGoogleCloudDialogflowCxV3beta1SessionEntityType;

class OAIGoogleCloudDialogflowCxV3beta1QueryParameters : public OAIObject {
public:
    OAIGoogleCloudDialogflowCxV3beta1QueryParameters();
    OAIGoogleCloudDialogflowCxV3beta1QueryParameters(QString json);
    ~OAIGoogleCloudDialogflowCxV3beta1QueryParameters() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAnalyzeQueryTextSentiment() const;
    void setAnalyzeQueryTextSentiment(const bool &analyze_query_text_sentiment);
    bool is_analyze_query_text_sentiment_Set() const;
    bool is_analyze_query_text_sentiment_Valid() const;

    QString getChannel() const;
    void setChannel(const QString &channel);
    bool is_channel_Set() const;
    bool is_channel_Valid() const;

    QString getCurrentPage() const;
    void setCurrentPage(const QString &current_page);
    bool is_current_page_Set() const;
    bool is_current_page_Valid() const;

    bool isDisableWebhook() const;
    void setDisableWebhook(const bool &disable_webhook);
    bool is_disable_webhook_Set() const;
    bool is_disable_webhook_Valid() const;

    QMap<QString, QJsonValue> getEndUserMetadata() const;
    void setEndUserMetadata(const QMap<QString, QJsonValue> &end_user_metadata);
    bool is_end_user_metadata_Set() const;
    bool is_end_user_metadata_Valid() const;

    QList<QString> getFlowVersions() const;
    void setFlowVersions(const QList<QString> &flow_versions);
    bool is_flow_versions_Set() const;
    bool is_flow_versions_Valid() const;

    OAIGoogleTypeLatLng getGeoLocation() const;
    void setGeoLocation(const OAIGoogleTypeLatLng &geo_location);
    bool is_geo_location_Set() const;
    bool is_geo_location_Valid() const;

    QMap<QString, QJsonValue> getParameters() const;
    void setParameters(const QMap<QString, QJsonValue> &parameters);
    bool is_parameters_Set() const;
    bool is_parameters_Valid() const;

    QMap<QString, QJsonValue> getPayload() const;
    void setPayload(const QMap<QString, QJsonValue> &payload);
    bool is_payload_Set() const;
    bool is_payload_Valid() const;

    OAIGoogleCloudDialogflowCxV3beta1SearchConfig getSearchConfig() const;
    void setSearchConfig(const OAIGoogleCloudDialogflowCxV3beta1SearchConfig &search_config);
    bool is_search_config_Set() const;
    bool is_search_config_Valid() const;

    QList<OAIGoogleCloudDialogflowCxV3beta1SessionEntityType> getSessionEntityTypes() const;
    void setSessionEntityTypes(const QList<OAIGoogleCloudDialogflowCxV3beta1SessionEntityType> &session_entity_types);
    bool is_session_entity_types_Set() const;
    bool is_session_entity_types_Valid() const;

    QString getSessionTtl() const;
    void setSessionTtl(const QString &session_ttl);
    bool is_session_ttl_Set() const;
    bool is_session_ttl_Valid() const;

    QString getTimeZone() const;
    void setTimeZone(const QString &time_zone);
    bool is_time_zone_Set() const;
    bool is_time_zone_Valid() const;

    QMap<QString, QString> getWebhookHeaders() const;
    void setWebhookHeaders(const QMap<QString, QString> &webhook_headers);
    bool is_webhook_headers_Set() const;
    bool is_webhook_headers_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_analyze_query_text_sentiment;
    bool m_analyze_query_text_sentiment_isSet;
    bool m_analyze_query_text_sentiment_isValid;

    QString m_channel;
    bool m_channel_isSet;
    bool m_channel_isValid;

    QString m_current_page;
    bool m_current_page_isSet;
    bool m_current_page_isValid;

    bool m_disable_webhook;
    bool m_disable_webhook_isSet;
    bool m_disable_webhook_isValid;

    QMap<QString, QJsonValue> m_end_user_metadata;
    bool m_end_user_metadata_isSet;
    bool m_end_user_metadata_isValid;

    QList<QString> m_flow_versions;
    bool m_flow_versions_isSet;
    bool m_flow_versions_isValid;

    OAIGoogleTypeLatLng m_geo_location;
    bool m_geo_location_isSet;
    bool m_geo_location_isValid;

    QMap<QString, QJsonValue> m_parameters;
    bool m_parameters_isSet;
    bool m_parameters_isValid;

    QMap<QString, QJsonValue> m_payload;
    bool m_payload_isSet;
    bool m_payload_isValid;

    OAIGoogleCloudDialogflowCxV3beta1SearchConfig m_search_config;
    bool m_search_config_isSet;
    bool m_search_config_isValid;

    QList<OAIGoogleCloudDialogflowCxV3beta1SessionEntityType> m_session_entity_types;
    bool m_session_entity_types_isSet;
    bool m_session_entity_types_isValid;

    QString m_session_ttl;
    bool m_session_ttl_isSet;
    bool m_session_ttl_isValid;

    QString m_time_zone;
    bool m_time_zone_isSet;
    bool m_time_zone_isValid;

    QMap<QString, QString> m_webhook_headers;
    bool m_webhook_headers_isSet;
    bool m_webhook_headers_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudDialogflowCxV3beta1QueryParameters)

#endif // OAIGoogleCloudDialogflowCxV3beta1QueryParameters_H
