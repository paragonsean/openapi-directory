/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudDialogflowCxV3beta1ExportEntityTypesRequest.h
 *
 * The request message for EntityTypes.ExportEntityTypes.
 */

#ifndef OAIGoogleCloudDialogflowCxV3beta1ExportEntityTypesRequest_H
#define OAIGoogleCloudDialogflowCxV3beta1ExportEntityTypesRequest_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGoogleCloudDialogflowCxV3beta1ExportEntityTypesRequest : public OAIObject {
public:
    OAIGoogleCloudDialogflowCxV3beta1ExportEntityTypesRequest();
    OAIGoogleCloudDialogflowCxV3beta1ExportEntityTypesRequest(QString json);
    ~OAIGoogleCloudDialogflowCxV3beta1ExportEntityTypesRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDataFormat() const;
    void setDataFormat(const QString &data_format);
    bool is_data_format_Set() const;
    bool is_data_format_Valid() const;

    QList<QString> getEntityTypes() const;
    void setEntityTypes(const QList<QString> &entity_types);
    bool is_entity_types_Set() const;
    bool is_entity_types_Valid() const;

    bool isEntityTypesContentInline() const;
    void setEntityTypesContentInline(const bool &entity_types_content_inline);
    bool is_entity_types_content_inline_Set() const;
    bool is_entity_types_content_inline_Valid() const;

    QString getEntityTypesUri() const;
    void setEntityTypesUri(const QString &entity_types_uri);
    bool is_entity_types_uri_Set() const;
    bool is_entity_types_uri_Valid() const;

    QString getLanguageCode() const;
    void setLanguageCode(const QString &language_code);
    bool is_language_code_Set() const;
    bool is_language_code_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_data_format;
    bool m_data_format_isSet;
    bool m_data_format_isValid;

    QList<QString> m_entity_types;
    bool m_entity_types_isSet;
    bool m_entity_types_isValid;

    bool m_entity_types_content_inline;
    bool m_entity_types_content_inline_isSet;
    bool m_entity_types_content_inline_isValid;

    QString m_entity_types_uri;
    bool m_entity_types_uri_isSet;
    bool m_entity_types_uri_isValid;

    QString m_language_code;
    bool m_language_code_isSet;
    bool m_language_code_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudDialogflowCxV3beta1ExportEntityTypesRequest)

#endif // OAIGoogleCloudDialogflowCxV3beta1ExportEntityTypesRequest_H
