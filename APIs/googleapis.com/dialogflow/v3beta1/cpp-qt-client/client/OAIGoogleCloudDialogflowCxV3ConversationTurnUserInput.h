/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudDialogflowCxV3ConversationTurnUserInput.h
 *
 * The input from the human user.
 */

#ifndef OAIGoogleCloudDialogflowCxV3ConversationTurnUserInput_H
#define OAIGoogleCloudDialogflowCxV3ConversationTurnUserInput_H

#include <QJsonObject>

#include "OAIGoogleCloudDialogflowCxV3QueryInput.h"
#include <QJsonValue>
#include <QMap>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleCloudDialogflowCxV3QueryInput;

class OAIGoogleCloudDialogflowCxV3ConversationTurnUserInput : public OAIObject {
public:
    OAIGoogleCloudDialogflowCxV3ConversationTurnUserInput();
    OAIGoogleCloudDialogflowCxV3ConversationTurnUserInput(QString json);
    ~OAIGoogleCloudDialogflowCxV3ConversationTurnUserInput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isEnableSentimentAnalysis() const;
    void setEnableSentimentAnalysis(const bool &enable_sentiment_analysis);
    bool is_enable_sentiment_analysis_Set() const;
    bool is_enable_sentiment_analysis_Valid() const;

    QMap<QString, QJsonValue> getInjectedParameters() const;
    void setInjectedParameters(const QMap<QString, QJsonValue> &injected_parameters);
    bool is_injected_parameters_Set() const;
    bool is_injected_parameters_Valid() const;

    OAIGoogleCloudDialogflowCxV3QueryInput getInput() const;
    void setInput(const OAIGoogleCloudDialogflowCxV3QueryInput &input);
    bool is_input_Set() const;
    bool is_input_Valid() const;

    bool isIsWebhookEnabled() const;
    void setIsWebhookEnabled(const bool &is_webhook_enabled);
    bool is_is_webhook_enabled_Set() const;
    bool is_is_webhook_enabled_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_enable_sentiment_analysis;
    bool m_enable_sentiment_analysis_isSet;
    bool m_enable_sentiment_analysis_isValid;

    QMap<QString, QJsonValue> m_injected_parameters;
    bool m_injected_parameters_isSet;
    bool m_injected_parameters_isValid;

    OAIGoogleCloudDialogflowCxV3QueryInput m_input;
    bool m_input_isSet;
    bool m_input_isValid;

    bool m_is_webhook_enabled;
    bool m_is_webhook_enabled_isSet;
    bool m_is_webhook_enabled_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudDialogflowCxV3ConversationTurnUserInput)

#endif // OAIGoogleCloudDialogflowCxV3ConversationTurnUserInput_H
