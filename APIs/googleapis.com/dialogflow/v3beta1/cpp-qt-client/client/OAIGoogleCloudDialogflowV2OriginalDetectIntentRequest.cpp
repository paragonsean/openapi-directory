/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowV2OriginalDetectIntentRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowV2OriginalDetectIntentRequest::OAIGoogleCloudDialogflowV2OriginalDetectIntentRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowV2OriginalDetectIntentRequest::OAIGoogleCloudDialogflowV2OriginalDetectIntentRequest() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowV2OriginalDetectIntentRequest::~OAIGoogleCloudDialogflowV2OriginalDetectIntentRequest() {}

void OAIGoogleCloudDialogflowV2OriginalDetectIntentRequest::initializeModel() {

    m_payload_isSet = false;
    m_payload_isValid = false;

    m_source_isSet = false;
    m_source_isValid = false;

    m_version_isSet = false;
    m_version_isValid = false;
}

void OAIGoogleCloudDialogflowV2OriginalDetectIntentRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowV2OriginalDetectIntentRequest::fromJsonObject(QJsonObject json) {

    m_payload_isValid = ::OpenAPI::fromJsonValue(m_payload, json[QString("payload")]);
    m_payload_isSet = !json[QString("payload")].isNull() && m_payload_isValid;

    m_source_isValid = ::OpenAPI::fromJsonValue(m_source, json[QString("source")]);
    m_source_isSet = !json[QString("source")].isNull() && m_source_isValid;

    m_version_isValid = ::OpenAPI::fromJsonValue(m_version, json[QString("version")]);
    m_version_isSet = !json[QString("version")].isNull() && m_version_isValid;
}

QString OAIGoogleCloudDialogflowV2OriginalDetectIntentRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowV2OriginalDetectIntentRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_payload.size() > 0) {
        obj.insert(QString("payload"), ::OpenAPI::toJsonValue(m_payload));
    }
    if (m_source_isSet) {
        obj.insert(QString("source"), ::OpenAPI::toJsonValue(m_source));
    }
    if (m_version_isSet) {
        obj.insert(QString("version"), ::OpenAPI::toJsonValue(m_version));
    }
    return obj;
}

QMap<QString, QJsonValue> OAIGoogleCloudDialogflowV2OriginalDetectIntentRequest::getPayload() const {
    return m_payload;
}
void OAIGoogleCloudDialogflowV2OriginalDetectIntentRequest::setPayload(const QMap<QString, QJsonValue> &payload) {
    m_payload = payload;
    m_payload_isSet = true;
}

bool OAIGoogleCloudDialogflowV2OriginalDetectIntentRequest::is_payload_Set() const{
    return m_payload_isSet;
}

bool OAIGoogleCloudDialogflowV2OriginalDetectIntentRequest::is_payload_Valid() const{
    return m_payload_isValid;
}

QString OAIGoogleCloudDialogflowV2OriginalDetectIntentRequest::getSource() const {
    return m_source;
}
void OAIGoogleCloudDialogflowV2OriginalDetectIntentRequest::setSource(const QString &source) {
    m_source = source;
    m_source_isSet = true;
}

bool OAIGoogleCloudDialogflowV2OriginalDetectIntentRequest::is_source_Set() const{
    return m_source_isSet;
}

bool OAIGoogleCloudDialogflowV2OriginalDetectIntentRequest::is_source_Valid() const{
    return m_source_isValid;
}

QString OAIGoogleCloudDialogflowV2OriginalDetectIntentRequest::getVersion() const {
    return m_version;
}
void OAIGoogleCloudDialogflowV2OriginalDetectIntentRequest::setVersion(const QString &version) {
    m_version = version;
    m_version_isSet = true;
}

bool OAIGoogleCloudDialogflowV2OriginalDetectIntentRequest::is_version_Set() const{
    return m_version_isSet;
}

bool OAIGoogleCloudDialogflowV2OriginalDetectIntentRequest::is_version_Valid() const{
    return m_version_isValid;
}

bool OAIGoogleCloudDialogflowV2OriginalDetectIntentRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_payload.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_version_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowV2OriginalDetectIntentRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
