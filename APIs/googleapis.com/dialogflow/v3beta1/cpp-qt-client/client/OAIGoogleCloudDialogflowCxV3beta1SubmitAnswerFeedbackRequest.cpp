/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowCxV3beta1SubmitAnswerFeedbackRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowCxV3beta1SubmitAnswerFeedbackRequest::OAIGoogleCloudDialogflowCxV3beta1SubmitAnswerFeedbackRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowCxV3beta1SubmitAnswerFeedbackRequest::OAIGoogleCloudDialogflowCxV3beta1SubmitAnswerFeedbackRequest() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowCxV3beta1SubmitAnswerFeedbackRequest::~OAIGoogleCloudDialogflowCxV3beta1SubmitAnswerFeedbackRequest() {}

void OAIGoogleCloudDialogflowCxV3beta1SubmitAnswerFeedbackRequest::initializeModel() {

    m_answer_feedback_isSet = false;
    m_answer_feedback_isValid = false;

    m_response_id_isSet = false;
    m_response_id_isValid = false;

    m_update_mask_isSet = false;
    m_update_mask_isValid = false;
}

void OAIGoogleCloudDialogflowCxV3beta1SubmitAnswerFeedbackRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowCxV3beta1SubmitAnswerFeedbackRequest::fromJsonObject(QJsonObject json) {

    m_answer_feedback_isValid = ::OpenAPI::fromJsonValue(m_answer_feedback, json[QString("answerFeedback")]);
    m_answer_feedback_isSet = !json[QString("answerFeedback")].isNull() && m_answer_feedback_isValid;

    m_response_id_isValid = ::OpenAPI::fromJsonValue(m_response_id, json[QString("responseId")]);
    m_response_id_isSet = !json[QString("responseId")].isNull() && m_response_id_isValid;

    m_update_mask_isValid = ::OpenAPI::fromJsonValue(m_update_mask, json[QString("updateMask")]);
    m_update_mask_isSet = !json[QString("updateMask")].isNull() && m_update_mask_isValid;
}

QString OAIGoogleCloudDialogflowCxV3beta1SubmitAnswerFeedbackRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowCxV3beta1SubmitAnswerFeedbackRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_answer_feedback.isSet()) {
        obj.insert(QString("answerFeedback"), ::OpenAPI::toJsonValue(m_answer_feedback));
    }
    if (m_response_id_isSet) {
        obj.insert(QString("responseId"), ::OpenAPI::toJsonValue(m_response_id));
    }
    if (m_update_mask_isSet) {
        obj.insert(QString("updateMask"), ::OpenAPI::toJsonValue(m_update_mask));
    }
    return obj;
}

OAIGoogleCloudDialogflowCxV3beta1AnswerFeedback OAIGoogleCloudDialogflowCxV3beta1SubmitAnswerFeedbackRequest::getAnswerFeedback() const {
    return m_answer_feedback;
}
void OAIGoogleCloudDialogflowCxV3beta1SubmitAnswerFeedbackRequest::setAnswerFeedback(const OAIGoogleCloudDialogflowCxV3beta1AnswerFeedback &answer_feedback) {
    m_answer_feedback = answer_feedback;
    m_answer_feedback_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1SubmitAnswerFeedbackRequest::is_answer_feedback_Set() const{
    return m_answer_feedback_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1SubmitAnswerFeedbackRequest::is_answer_feedback_Valid() const{
    return m_answer_feedback_isValid;
}

QString OAIGoogleCloudDialogflowCxV3beta1SubmitAnswerFeedbackRequest::getResponseId() const {
    return m_response_id;
}
void OAIGoogleCloudDialogflowCxV3beta1SubmitAnswerFeedbackRequest::setResponseId(const QString &response_id) {
    m_response_id = response_id;
    m_response_id_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1SubmitAnswerFeedbackRequest::is_response_id_Set() const{
    return m_response_id_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1SubmitAnswerFeedbackRequest::is_response_id_Valid() const{
    return m_response_id_isValid;
}

QString OAIGoogleCloudDialogflowCxV3beta1SubmitAnswerFeedbackRequest::getUpdateMask() const {
    return m_update_mask;
}
void OAIGoogleCloudDialogflowCxV3beta1SubmitAnswerFeedbackRequest::setUpdateMask(const QString &update_mask) {
    m_update_mask = update_mask;
    m_update_mask_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1SubmitAnswerFeedbackRequest::is_update_mask_Set() const{
    return m_update_mask_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1SubmitAnswerFeedbackRequest::is_update_mask_Valid() const{
    return m_update_mask_isValid;
}

bool OAIGoogleCloudDialogflowCxV3beta1SubmitAnswerFeedbackRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_answer_feedback.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_response_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_mask_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowCxV3beta1SubmitAnswerFeedbackRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
