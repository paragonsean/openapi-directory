/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowCxV3beta1SecuritySettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowCxV3beta1SecuritySettings::OAIGoogleCloudDialogflowCxV3beta1SecuritySettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowCxV3beta1SecuritySettings::OAIGoogleCloudDialogflowCxV3beta1SecuritySettings() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowCxV3beta1SecuritySettings::~OAIGoogleCloudDialogflowCxV3beta1SecuritySettings() {}

void OAIGoogleCloudDialogflowCxV3beta1SecuritySettings::initializeModel() {

    m_audio_export_settings_isSet = false;
    m_audio_export_settings_isValid = false;

    m_deidentify_template_isSet = false;
    m_deidentify_template_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_insights_export_settings_isSet = false;
    m_insights_export_settings_isValid = false;

    m_inspect_template_isSet = false;
    m_inspect_template_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_purge_data_types_isSet = false;
    m_purge_data_types_isValid = false;

    m_redaction_scope_isSet = false;
    m_redaction_scope_isValid = false;

    m_redaction_strategy_isSet = false;
    m_redaction_strategy_isValid = false;

    m_retention_strategy_isSet = false;
    m_retention_strategy_isValid = false;

    m_retention_window_days_isSet = false;
    m_retention_window_days_isValid = false;
}

void OAIGoogleCloudDialogflowCxV3beta1SecuritySettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowCxV3beta1SecuritySettings::fromJsonObject(QJsonObject json) {

    m_audio_export_settings_isValid = ::OpenAPI::fromJsonValue(m_audio_export_settings, json[QString("audioExportSettings")]);
    m_audio_export_settings_isSet = !json[QString("audioExportSettings")].isNull() && m_audio_export_settings_isValid;

    m_deidentify_template_isValid = ::OpenAPI::fromJsonValue(m_deidentify_template, json[QString("deidentifyTemplate")]);
    m_deidentify_template_isSet = !json[QString("deidentifyTemplate")].isNull() && m_deidentify_template_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_insights_export_settings_isValid = ::OpenAPI::fromJsonValue(m_insights_export_settings, json[QString("insightsExportSettings")]);
    m_insights_export_settings_isSet = !json[QString("insightsExportSettings")].isNull() && m_insights_export_settings_isValid;

    m_inspect_template_isValid = ::OpenAPI::fromJsonValue(m_inspect_template, json[QString("inspectTemplate")]);
    m_inspect_template_isSet = !json[QString("inspectTemplate")].isNull() && m_inspect_template_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_purge_data_types_isValid = ::OpenAPI::fromJsonValue(m_purge_data_types, json[QString("purgeDataTypes")]);
    m_purge_data_types_isSet = !json[QString("purgeDataTypes")].isNull() && m_purge_data_types_isValid;

    m_redaction_scope_isValid = ::OpenAPI::fromJsonValue(m_redaction_scope, json[QString("redactionScope")]);
    m_redaction_scope_isSet = !json[QString("redactionScope")].isNull() && m_redaction_scope_isValid;

    m_redaction_strategy_isValid = ::OpenAPI::fromJsonValue(m_redaction_strategy, json[QString("redactionStrategy")]);
    m_redaction_strategy_isSet = !json[QString("redactionStrategy")].isNull() && m_redaction_strategy_isValid;

    m_retention_strategy_isValid = ::OpenAPI::fromJsonValue(m_retention_strategy, json[QString("retentionStrategy")]);
    m_retention_strategy_isSet = !json[QString("retentionStrategy")].isNull() && m_retention_strategy_isValid;

    m_retention_window_days_isValid = ::OpenAPI::fromJsonValue(m_retention_window_days, json[QString("retentionWindowDays")]);
    m_retention_window_days_isSet = !json[QString("retentionWindowDays")].isNull() && m_retention_window_days_isValid;
}

QString OAIGoogleCloudDialogflowCxV3beta1SecuritySettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowCxV3beta1SecuritySettings::asJsonObject() const {
    QJsonObject obj;
    if (m_audio_export_settings.isSet()) {
        obj.insert(QString("audioExportSettings"), ::OpenAPI::toJsonValue(m_audio_export_settings));
    }
    if (m_deidentify_template_isSet) {
        obj.insert(QString("deidentifyTemplate"), ::OpenAPI::toJsonValue(m_deidentify_template));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_insights_export_settings.isSet()) {
        obj.insert(QString("insightsExportSettings"), ::OpenAPI::toJsonValue(m_insights_export_settings));
    }
    if (m_inspect_template_isSet) {
        obj.insert(QString("inspectTemplate"), ::OpenAPI::toJsonValue(m_inspect_template));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_purge_data_types.size() > 0) {
        obj.insert(QString("purgeDataTypes"), ::OpenAPI::toJsonValue(m_purge_data_types));
    }
    if (m_redaction_scope_isSet) {
        obj.insert(QString("redactionScope"), ::OpenAPI::toJsonValue(m_redaction_scope));
    }
    if (m_redaction_strategy_isSet) {
        obj.insert(QString("redactionStrategy"), ::OpenAPI::toJsonValue(m_redaction_strategy));
    }
    if (m_retention_strategy_isSet) {
        obj.insert(QString("retentionStrategy"), ::OpenAPI::toJsonValue(m_retention_strategy));
    }
    if (m_retention_window_days_isSet) {
        obj.insert(QString("retentionWindowDays"), ::OpenAPI::toJsonValue(m_retention_window_days));
    }
    return obj;
}

OAIGoogleCloudDialogflowCxV3beta1SecuritySettingsAudioExportSettings OAIGoogleCloudDialogflowCxV3beta1SecuritySettings::getAudioExportSettings() const {
    return m_audio_export_settings;
}
void OAIGoogleCloudDialogflowCxV3beta1SecuritySettings::setAudioExportSettings(const OAIGoogleCloudDialogflowCxV3beta1SecuritySettingsAudioExportSettings &audio_export_settings) {
    m_audio_export_settings = audio_export_settings;
    m_audio_export_settings_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1SecuritySettings::is_audio_export_settings_Set() const{
    return m_audio_export_settings_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1SecuritySettings::is_audio_export_settings_Valid() const{
    return m_audio_export_settings_isValid;
}

QString OAIGoogleCloudDialogflowCxV3beta1SecuritySettings::getDeidentifyTemplate() const {
    return m_deidentify_template;
}
void OAIGoogleCloudDialogflowCxV3beta1SecuritySettings::setDeidentifyTemplate(const QString &deidentify_template) {
    m_deidentify_template = deidentify_template;
    m_deidentify_template_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1SecuritySettings::is_deidentify_template_Set() const{
    return m_deidentify_template_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1SecuritySettings::is_deidentify_template_Valid() const{
    return m_deidentify_template_isValid;
}

QString OAIGoogleCloudDialogflowCxV3beta1SecuritySettings::getDisplayName() const {
    return m_display_name;
}
void OAIGoogleCloudDialogflowCxV3beta1SecuritySettings::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1SecuritySettings::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1SecuritySettings::is_display_name_Valid() const{
    return m_display_name_isValid;
}

OAIGoogleCloudDialogflowCxV3beta1SecuritySettingsInsightsExportSettings OAIGoogleCloudDialogflowCxV3beta1SecuritySettings::getInsightsExportSettings() const {
    return m_insights_export_settings;
}
void OAIGoogleCloudDialogflowCxV3beta1SecuritySettings::setInsightsExportSettings(const OAIGoogleCloudDialogflowCxV3beta1SecuritySettingsInsightsExportSettings &insights_export_settings) {
    m_insights_export_settings = insights_export_settings;
    m_insights_export_settings_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1SecuritySettings::is_insights_export_settings_Set() const{
    return m_insights_export_settings_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1SecuritySettings::is_insights_export_settings_Valid() const{
    return m_insights_export_settings_isValid;
}

QString OAIGoogleCloudDialogflowCxV3beta1SecuritySettings::getInspectTemplate() const {
    return m_inspect_template;
}
void OAIGoogleCloudDialogflowCxV3beta1SecuritySettings::setInspectTemplate(const QString &inspect_template) {
    m_inspect_template = inspect_template;
    m_inspect_template_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1SecuritySettings::is_inspect_template_Set() const{
    return m_inspect_template_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1SecuritySettings::is_inspect_template_Valid() const{
    return m_inspect_template_isValid;
}

QString OAIGoogleCloudDialogflowCxV3beta1SecuritySettings::getName() const {
    return m_name;
}
void OAIGoogleCloudDialogflowCxV3beta1SecuritySettings::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1SecuritySettings::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1SecuritySettings::is_name_Valid() const{
    return m_name_isValid;
}

QList<QString> OAIGoogleCloudDialogflowCxV3beta1SecuritySettings::getPurgeDataTypes() const {
    return m_purge_data_types;
}
void OAIGoogleCloudDialogflowCxV3beta1SecuritySettings::setPurgeDataTypes(const QList<QString> &purge_data_types) {
    m_purge_data_types = purge_data_types;
    m_purge_data_types_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1SecuritySettings::is_purge_data_types_Set() const{
    return m_purge_data_types_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1SecuritySettings::is_purge_data_types_Valid() const{
    return m_purge_data_types_isValid;
}

QString OAIGoogleCloudDialogflowCxV3beta1SecuritySettings::getRedactionScope() const {
    return m_redaction_scope;
}
void OAIGoogleCloudDialogflowCxV3beta1SecuritySettings::setRedactionScope(const QString &redaction_scope) {
    m_redaction_scope = redaction_scope;
    m_redaction_scope_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1SecuritySettings::is_redaction_scope_Set() const{
    return m_redaction_scope_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1SecuritySettings::is_redaction_scope_Valid() const{
    return m_redaction_scope_isValid;
}

QString OAIGoogleCloudDialogflowCxV3beta1SecuritySettings::getRedactionStrategy() const {
    return m_redaction_strategy;
}
void OAIGoogleCloudDialogflowCxV3beta1SecuritySettings::setRedactionStrategy(const QString &redaction_strategy) {
    m_redaction_strategy = redaction_strategy;
    m_redaction_strategy_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1SecuritySettings::is_redaction_strategy_Set() const{
    return m_redaction_strategy_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1SecuritySettings::is_redaction_strategy_Valid() const{
    return m_redaction_strategy_isValid;
}

QString OAIGoogleCloudDialogflowCxV3beta1SecuritySettings::getRetentionStrategy() const {
    return m_retention_strategy;
}
void OAIGoogleCloudDialogflowCxV3beta1SecuritySettings::setRetentionStrategy(const QString &retention_strategy) {
    m_retention_strategy = retention_strategy;
    m_retention_strategy_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1SecuritySettings::is_retention_strategy_Set() const{
    return m_retention_strategy_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1SecuritySettings::is_retention_strategy_Valid() const{
    return m_retention_strategy_isValid;
}

qint32 OAIGoogleCloudDialogflowCxV3beta1SecuritySettings::getRetentionWindowDays() const {
    return m_retention_window_days;
}
void OAIGoogleCloudDialogflowCxV3beta1SecuritySettings::setRetentionWindowDays(const qint32 &retention_window_days) {
    m_retention_window_days = retention_window_days;
    m_retention_window_days_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1SecuritySettings::is_retention_window_days_Set() const{
    return m_retention_window_days_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1SecuritySettings::is_retention_window_days_Valid() const{
    return m_retention_window_days_isValid;
}

bool OAIGoogleCloudDialogflowCxV3beta1SecuritySettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_audio_export_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_deidentify_template_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_insights_export_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_inspect_template_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_purge_data_types.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_redaction_scope_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_redaction_strategy_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_retention_strategy_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_retention_window_days_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowCxV3beta1SecuritySettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
