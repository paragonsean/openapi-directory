/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowCxV3Webhook.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowCxV3Webhook::OAIGoogleCloudDialogflowCxV3Webhook(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowCxV3Webhook::OAIGoogleCloudDialogflowCxV3Webhook() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowCxV3Webhook::~OAIGoogleCloudDialogflowCxV3Webhook() {}

void OAIGoogleCloudDialogflowCxV3Webhook::initializeModel() {

    m_disabled_isSet = false;
    m_disabled_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_generic_web_service_isSet = false;
    m_generic_web_service_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_service_directory_isSet = false;
    m_service_directory_isValid = false;

    m_timeout_isSet = false;
    m_timeout_isValid = false;
}

void OAIGoogleCloudDialogflowCxV3Webhook::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowCxV3Webhook::fromJsonObject(QJsonObject json) {

    m_disabled_isValid = ::OpenAPI::fromJsonValue(m_disabled, json[QString("disabled")]);
    m_disabled_isSet = !json[QString("disabled")].isNull() && m_disabled_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_generic_web_service_isValid = ::OpenAPI::fromJsonValue(m_generic_web_service, json[QString("genericWebService")]);
    m_generic_web_service_isSet = !json[QString("genericWebService")].isNull() && m_generic_web_service_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_service_directory_isValid = ::OpenAPI::fromJsonValue(m_service_directory, json[QString("serviceDirectory")]);
    m_service_directory_isSet = !json[QString("serviceDirectory")].isNull() && m_service_directory_isValid;

    m_timeout_isValid = ::OpenAPI::fromJsonValue(m_timeout, json[QString("timeout")]);
    m_timeout_isSet = !json[QString("timeout")].isNull() && m_timeout_isValid;
}

QString OAIGoogleCloudDialogflowCxV3Webhook::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowCxV3Webhook::asJsonObject() const {
    QJsonObject obj;
    if (m_disabled_isSet) {
        obj.insert(QString("disabled"), ::OpenAPI::toJsonValue(m_disabled));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_generic_web_service.isSet()) {
        obj.insert(QString("genericWebService"), ::OpenAPI::toJsonValue(m_generic_web_service));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_service_directory.isSet()) {
        obj.insert(QString("serviceDirectory"), ::OpenAPI::toJsonValue(m_service_directory));
    }
    if (m_timeout_isSet) {
        obj.insert(QString("timeout"), ::OpenAPI::toJsonValue(m_timeout));
    }
    return obj;
}

bool OAIGoogleCloudDialogflowCxV3Webhook::isDisabled() const {
    return m_disabled;
}
void OAIGoogleCloudDialogflowCxV3Webhook::setDisabled(const bool &disabled) {
    m_disabled = disabled;
    m_disabled_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3Webhook::is_disabled_Set() const{
    return m_disabled_isSet;
}

bool OAIGoogleCloudDialogflowCxV3Webhook::is_disabled_Valid() const{
    return m_disabled_isValid;
}

QString OAIGoogleCloudDialogflowCxV3Webhook::getDisplayName() const {
    return m_display_name;
}
void OAIGoogleCloudDialogflowCxV3Webhook::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3Webhook::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGoogleCloudDialogflowCxV3Webhook::is_display_name_Valid() const{
    return m_display_name_isValid;
}

OAIGoogleCloudDialogflowCxV3WebhookGenericWebService OAIGoogleCloudDialogflowCxV3Webhook::getGenericWebService() const {
    return m_generic_web_service;
}
void OAIGoogleCloudDialogflowCxV3Webhook::setGenericWebService(const OAIGoogleCloudDialogflowCxV3WebhookGenericWebService &generic_web_service) {
    m_generic_web_service = generic_web_service;
    m_generic_web_service_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3Webhook::is_generic_web_service_Set() const{
    return m_generic_web_service_isSet;
}

bool OAIGoogleCloudDialogflowCxV3Webhook::is_generic_web_service_Valid() const{
    return m_generic_web_service_isValid;
}

QString OAIGoogleCloudDialogflowCxV3Webhook::getName() const {
    return m_name;
}
void OAIGoogleCloudDialogflowCxV3Webhook::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3Webhook::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudDialogflowCxV3Webhook::is_name_Valid() const{
    return m_name_isValid;
}

OAIGoogleCloudDialogflowCxV3WebhookServiceDirectoryConfig OAIGoogleCloudDialogflowCxV3Webhook::getServiceDirectory() const {
    return m_service_directory;
}
void OAIGoogleCloudDialogflowCxV3Webhook::setServiceDirectory(const OAIGoogleCloudDialogflowCxV3WebhookServiceDirectoryConfig &service_directory) {
    m_service_directory = service_directory;
    m_service_directory_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3Webhook::is_service_directory_Set() const{
    return m_service_directory_isSet;
}

bool OAIGoogleCloudDialogflowCxV3Webhook::is_service_directory_Valid() const{
    return m_service_directory_isValid;
}

QString OAIGoogleCloudDialogflowCxV3Webhook::getTimeout() const {
    return m_timeout;
}
void OAIGoogleCloudDialogflowCxV3Webhook::setTimeout(const QString &timeout) {
    m_timeout = timeout;
    m_timeout_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3Webhook::is_timeout_Set() const{
    return m_timeout_isSet;
}

bool OAIGoogleCloudDialogflowCxV3Webhook::is_timeout_Valid() const{
    return m_timeout_isValid;
}

bool OAIGoogleCloudDialogflowCxV3Webhook::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_disabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_generic_web_service.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_directory.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_timeout_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowCxV3Webhook::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
