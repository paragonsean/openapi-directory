/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudDialogflowV2Context.h
 *
 * Dialogflow contexts are similar to natural language context. If a person says to you \&quot;they are orange\&quot;, you need context in order to understand what \&quot;they\&quot; is referring to. Similarly, for Dialogflow to handle an end-user expression like that, it needs to be provided with context in order to correctly match an intent. Using contexts, you can control the flow of a conversation. You can configure contexts for an intent by setting input and output contexts, which are identified by string names. When an intent is matched, any configured output contexts for that intent become active. While any contexts are active, Dialogflow is more likely to match intents that are configured with input contexts that correspond to the currently active contexts. For more information about context, see the [Contexts guide](https://cloud.google.com/dialogflow/docs/contexts-overview).
 */

#ifndef OAIGoogleCloudDialogflowV2Context_H
#define OAIGoogleCloudDialogflowV2Context_H

#include <QJsonObject>

#include <QJsonValue>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGoogleCloudDialogflowV2Context : public OAIObject {
public:
    OAIGoogleCloudDialogflowV2Context();
    OAIGoogleCloudDialogflowV2Context(QString json);
    ~OAIGoogleCloudDialogflowV2Context() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getLifespanCount() const;
    void setLifespanCount(const qint32 &lifespan_count);
    bool is_lifespan_count_Set() const;
    bool is_lifespan_count_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QMap<QString, QJsonValue> getParameters() const;
    void setParameters(const QMap<QString, QJsonValue> &parameters);
    bool is_parameters_Set() const;
    bool is_parameters_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_lifespan_count;
    bool m_lifespan_count_isSet;
    bool m_lifespan_count_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QMap<QString, QJsonValue> m_parameters;
    bool m_parameters_isSet;
    bool m_parameters_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudDialogflowV2Context)

#endif // OAIGoogleCloudDialogflowV2Context_H
