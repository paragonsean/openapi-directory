/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard::OAIGoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard::OAIGoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard::~OAIGoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard() {}

void OAIGoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard::initializeModel() {

    m_card_content_isSet = false;
    m_card_content_isValid = false;

    m_card_orientation_isSet = false;
    m_card_orientation_isValid = false;

    m_thumbnail_image_alignment_isSet = false;
    m_thumbnail_image_alignment_isValid = false;
}

void OAIGoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard::fromJsonObject(QJsonObject json) {

    m_card_content_isValid = ::OpenAPI::fromJsonValue(m_card_content, json[QString("cardContent")]);
    m_card_content_isSet = !json[QString("cardContent")].isNull() && m_card_content_isValid;

    m_card_orientation_isValid = ::OpenAPI::fromJsonValue(m_card_orientation, json[QString("cardOrientation")]);
    m_card_orientation_isSet = !json[QString("cardOrientation")].isNull() && m_card_orientation_isValid;

    m_thumbnail_image_alignment_isValid = ::OpenAPI::fromJsonValue(m_thumbnail_image_alignment, json[QString("thumbnailImageAlignment")]);
    m_thumbnail_image_alignment_isSet = !json[QString("thumbnailImageAlignment")].isNull() && m_thumbnail_image_alignment_isValid;
}

QString OAIGoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard::asJsonObject() const {
    QJsonObject obj;
    if (m_card_content.isSet()) {
        obj.insert(QString("cardContent"), ::OpenAPI::toJsonValue(m_card_content));
    }
    if (m_card_orientation_isSet) {
        obj.insert(QString("cardOrientation"), ::OpenAPI::toJsonValue(m_card_orientation));
    }
    if (m_thumbnail_image_alignment_isSet) {
        obj.insert(QString("thumbnailImageAlignment"), ::OpenAPI::toJsonValue(m_thumbnail_image_alignment));
    }
    return obj;
}

OAIGoogleCloudDialogflowV2beta1IntentMessageRbmCardContent OAIGoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard::getCardContent() const {
    return m_card_content;
}
void OAIGoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard::setCardContent(const OAIGoogleCloudDialogflowV2beta1IntentMessageRbmCardContent &card_content) {
    m_card_content = card_content;
    m_card_content_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard::is_card_content_Set() const{
    return m_card_content_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard::is_card_content_Valid() const{
    return m_card_content_isValid;
}

QString OAIGoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard::getCardOrientation() const {
    return m_card_orientation;
}
void OAIGoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard::setCardOrientation(const QString &card_orientation) {
    m_card_orientation = card_orientation;
    m_card_orientation_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard::is_card_orientation_Set() const{
    return m_card_orientation_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard::is_card_orientation_Valid() const{
    return m_card_orientation_isValid;
}

QString OAIGoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard::getThumbnailImageAlignment() const {
    return m_thumbnail_image_alignment;
}
void OAIGoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard::setThumbnailImageAlignment(const QString &thumbnail_image_alignment) {
    m_thumbnail_image_alignment = thumbnail_image_alignment;
    m_thumbnail_image_alignment_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard::is_thumbnail_image_alignment_Set() const{
    return m_thumbnail_image_alignment_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard::is_thumbnail_image_alignment_Valid() const{
    return m_thumbnail_image_alignment_isValid;
}

bool OAIGoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_card_content.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_card_orientation_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_thumbnail_image_alignment_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
