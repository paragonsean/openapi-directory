/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowV2WebhookResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowV2WebhookResponse::OAIGoogleCloudDialogflowV2WebhookResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowV2WebhookResponse::OAIGoogleCloudDialogflowV2WebhookResponse() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowV2WebhookResponse::~OAIGoogleCloudDialogflowV2WebhookResponse() {}

void OAIGoogleCloudDialogflowV2WebhookResponse::initializeModel() {

    m_followup_event_input_isSet = false;
    m_followup_event_input_isValid = false;

    m_fulfillment_messages_isSet = false;
    m_fulfillment_messages_isValid = false;

    m_fulfillment_text_isSet = false;
    m_fulfillment_text_isValid = false;

    m_output_contexts_isSet = false;
    m_output_contexts_isValid = false;

    m_payload_isSet = false;
    m_payload_isValid = false;

    m_session_entity_types_isSet = false;
    m_session_entity_types_isValid = false;

    m_source_isSet = false;
    m_source_isValid = false;
}

void OAIGoogleCloudDialogflowV2WebhookResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowV2WebhookResponse::fromJsonObject(QJsonObject json) {

    m_followup_event_input_isValid = ::OpenAPI::fromJsonValue(m_followup_event_input, json[QString("followupEventInput")]);
    m_followup_event_input_isSet = !json[QString("followupEventInput")].isNull() && m_followup_event_input_isValid;

    m_fulfillment_messages_isValid = ::OpenAPI::fromJsonValue(m_fulfillment_messages, json[QString("fulfillmentMessages")]);
    m_fulfillment_messages_isSet = !json[QString("fulfillmentMessages")].isNull() && m_fulfillment_messages_isValid;

    m_fulfillment_text_isValid = ::OpenAPI::fromJsonValue(m_fulfillment_text, json[QString("fulfillmentText")]);
    m_fulfillment_text_isSet = !json[QString("fulfillmentText")].isNull() && m_fulfillment_text_isValid;

    m_output_contexts_isValid = ::OpenAPI::fromJsonValue(m_output_contexts, json[QString("outputContexts")]);
    m_output_contexts_isSet = !json[QString("outputContexts")].isNull() && m_output_contexts_isValid;

    m_payload_isValid = ::OpenAPI::fromJsonValue(m_payload, json[QString("payload")]);
    m_payload_isSet = !json[QString("payload")].isNull() && m_payload_isValid;

    m_session_entity_types_isValid = ::OpenAPI::fromJsonValue(m_session_entity_types, json[QString("sessionEntityTypes")]);
    m_session_entity_types_isSet = !json[QString("sessionEntityTypes")].isNull() && m_session_entity_types_isValid;

    m_source_isValid = ::OpenAPI::fromJsonValue(m_source, json[QString("source")]);
    m_source_isSet = !json[QString("source")].isNull() && m_source_isValid;
}

QString OAIGoogleCloudDialogflowV2WebhookResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowV2WebhookResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_followup_event_input.isSet()) {
        obj.insert(QString("followupEventInput"), ::OpenAPI::toJsonValue(m_followup_event_input));
    }
    if (m_fulfillment_messages.size() > 0) {
        obj.insert(QString("fulfillmentMessages"), ::OpenAPI::toJsonValue(m_fulfillment_messages));
    }
    if (m_fulfillment_text_isSet) {
        obj.insert(QString("fulfillmentText"), ::OpenAPI::toJsonValue(m_fulfillment_text));
    }
    if (m_output_contexts.size() > 0) {
        obj.insert(QString("outputContexts"), ::OpenAPI::toJsonValue(m_output_contexts));
    }
    if (m_payload.size() > 0) {
        obj.insert(QString("payload"), ::OpenAPI::toJsonValue(m_payload));
    }
    if (m_session_entity_types.size() > 0) {
        obj.insert(QString("sessionEntityTypes"), ::OpenAPI::toJsonValue(m_session_entity_types));
    }
    if (m_source_isSet) {
        obj.insert(QString("source"), ::OpenAPI::toJsonValue(m_source));
    }
    return obj;
}

OAIGoogleCloudDialogflowV2EventInput OAIGoogleCloudDialogflowV2WebhookResponse::getFollowupEventInput() const {
    return m_followup_event_input;
}
void OAIGoogleCloudDialogflowV2WebhookResponse::setFollowupEventInput(const OAIGoogleCloudDialogflowV2EventInput &followup_event_input) {
    m_followup_event_input = followup_event_input;
    m_followup_event_input_isSet = true;
}

bool OAIGoogleCloudDialogflowV2WebhookResponse::is_followup_event_input_Set() const{
    return m_followup_event_input_isSet;
}

bool OAIGoogleCloudDialogflowV2WebhookResponse::is_followup_event_input_Valid() const{
    return m_followup_event_input_isValid;
}

QList<OAIGoogleCloudDialogflowV2IntentMessage> OAIGoogleCloudDialogflowV2WebhookResponse::getFulfillmentMessages() const {
    return m_fulfillment_messages;
}
void OAIGoogleCloudDialogflowV2WebhookResponse::setFulfillmentMessages(const QList<OAIGoogleCloudDialogflowV2IntentMessage> &fulfillment_messages) {
    m_fulfillment_messages = fulfillment_messages;
    m_fulfillment_messages_isSet = true;
}

bool OAIGoogleCloudDialogflowV2WebhookResponse::is_fulfillment_messages_Set() const{
    return m_fulfillment_messages_isSet;
}

bool OAIGoogleCloudDialogflowV2WebhookResponse::is_fulfillment_messages_Valid() const{
    return m_fulfillment_messages_isValid;
}

QString OAIGoogleCloudDialogflowV2WebhookResponse::getFulfillmentText() const {
    return m_fulfillment_text;
}
void OAIGoogleCloudDialogflowV2WebhookResponse::setFulfillmentText(const QString &fulfillment_text) {
    m_fulfillment_text = fulfillment_text;
    m_fulfillment_text_isSet = true;
}

bool OAIGoogleCloudDialogflowV2WebhookResponse::is_fulfillment_text_Set() const{
    return m_fulfillment_text_isSet;
}

bool OAIGoogleCloudDialogflowV2WebhookResponse::is_fulfillment_text_Valid() const{
    return m_fulfillment_text_isValid;
}

QList<OAIGoogleCloudDialogflowV2Context> OAIGoogleCloudDialogflowV2WebhookResponse::getOutputContexts() const {
    return m_output_contexts;
}
void OAIGoogleCloudDialogflowV2WebhookResponse::setOutputContexts(const QList<OAIGoogleCloudDialogflowV2Context> &output_contexts) {
    m_output_contexts = output_contexts;
    m_output_contexts_isSet = true;
}

bool OAIGoogleCloudDialogflowV2WebhookResponse::is_output_contexts_Set() const{
    return m_output_contexts_isSet;
}

bool OAIGoogleCloudDialogflowV2WebhookResponse::is_output_contexts_Valid() const{
    return m_output_contexts_isValid;
}

QMap<QString, QJsonValue> OAIGoogleCloudDialogflowV2WebhookResponse::getPayload() const {
    return m_payload;
}
void OAIGoogleCloudDialogflowV2WebhookResponse::setPayload(const QMap<QString, QJsonValue> &payload) {
    m_payload = payload;
    m_payload_isSet = true;
}

bool OAIGoogleCloudDialogflowV2WebhookResponse::is_payload_Set() const{
    return m_payload_isSet;
}

bool OAIGoogleCloudDialogflowV2WebhookResponse::is_payload_Valid() const{
    return m_payload_isValid;
}

QList<OAIGoogleCloudDialogflowV2SessionEntityType> OAIGoogleCloudDialogflowV2WebhookResponse::getSessionEntityTypes() const {
    return m_session_entity_types;
}
void OAIGoogleCloudDialogflowV2WebhookResponse::setSessionEntityTypes(const QList<OAIGoogleCloudDialogflowV2SessionEntityType> &session_entity_types) {
    m_session_entity_types = session_entity_types;
    m_session_entity_types_isSet = true;
}

bool OAIGoogleCloudDialogflowV2WebhookResponse::is_session_entity_types_Set() const{
    return m_session_entity_types_isSet;
}

bool OAIGoogleCloudDialogflowV2WebhookResponse::is_session_entity_types_Valid() const{
    return m_session_entity_types_isValid;
}

QString OAIGoogleCloudDialogflowV2WebhookResponse::getSource() const {
    return m_source;
}
void OAIGoogleCloudDialogflowV2WebhookResponse::setSource(const QString &source) {
    m_source = source;
    m_source_isSet = true;
}

bool OAIGoogleCloudDialogflowV2WebhookResponse::is_source_Set() const{
    return m_source_isSet;
}

bool OAIGoogleCloudDialogflowV2WebhookResponse::is_source_Valid() const{
    return m_source_isValid;
}

bool OAIGoogleCloudDialogflowV2WebhookResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_followup_event_input.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_fulfillment_messages.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_fulfillment_text_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_output_contexts.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_payload.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_session_entity_types.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowV2WebhookResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
