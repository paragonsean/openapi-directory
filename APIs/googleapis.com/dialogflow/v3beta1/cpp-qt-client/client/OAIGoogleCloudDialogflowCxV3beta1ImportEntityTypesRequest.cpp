/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowCxV3beta1ImportEntityTypesRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowCxV3beta1ImportEntityTypesRequest::OAIGoogleCloudDialogflowCxV3beta1ImportEntityTypesRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowCxV3beta1ImportEntityTypesRequest::OAIGoogleCloudDialogflowCxV3beta1ImportEntityTypesRequest() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowCxV3beta1ImportEntityTypesRequest::~OAIGoogleCloudDialogflowCxV3beta1ImportEntityTypesRequest() {}

void OAIGoogleCloudDialogflowCxV3beta1ImportEntityTypesRequest::initializeModel() {

    m_entity_types_content_isSet = false;
    m_entity_types_content_isValid = false;

    m_entity_types_uri_isSet = false;
    m_entity_types_uri_isValid = false;

    m_merge_option_isSet = false;
    m_merge_option_isValid = false;

    m_target_entity_type_isSet = false;
    m_target_entity_type_isValid = false;
}

void OAIGoogleCloudDialogflowCxV3beta1ImportEntityTypesRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowCxV3beta1ImportEntityTypesRequest::fromJsonObject(QJsonObject json) {

    m_entity_types_content_isValid = ::OpenAPI::fromJsonValue(m_entity_types_content, json[QString("entityTypesContent")]);
    m_entity_types_content_isSet = !json[QString("entityTypesContent")].isNull() && m_entity_types_content_isValid;

    m_entity_types_uri_isValid = ::OpenAPI::fromJsonValue(m_entity_types_uri, json[QString("entityTypesUri")]);
    m_entity_types_uri_isSet = !json[QString("entityTypesUri")].isNull() && m_entity_types_uri_isValid;

    m_merge_option_isValid = ::OpenAPI::fromJsonValue(m_merge_option, json[QString("mergeOption")]);
    m_merge_option_isSet = !json[QString("mergeOption")].isNull() && m_merge_option_isValid;

    m_target_entity_type_isValid = ::OpenAPI::fromJsonValue(m_target_entity_type, json[QString("targetEntityType")]);
    m_target_entity_type_isSet = !json[QString("targetEntityType")].isNull() && m_target_entity_type_isValid;
}

QString OAIGoogleCloudDialogflowCxV3beta1ImportEntityTypesRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowCxV3beta1ImportEntityTypesRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_entity_types_content.isSet()) {
        obj.insert(QString("entityTypesContent"), ::OpenAPI::toJsonValue(m_entity_types_content));
    }
    if (m_entity_types_uri_isSet) {
        obj.insert(QString("entityTypesUri"), ::OpenAPI::toJsonValue(m_entity_types_uri));
    }
    if (m_merge_option_isSet) {
        obj.insert(QString("mergeOption"), ::OpenAPI::toJsonValue(m_merge_option));
    }
    if (m_target_entity_type_isSet) {
        obj.insert(QString("targetEntityType"), ::OpenAPI::toJsonValue(m_target_entity_type));
    }
    return obj;
}

OAIGoogleCloudDialogflowCxV3beta1InlineSource OAIGoogleCloudDialogflowCxV3beta1ImportEntityTypesRequest::getEntityTypesContent() const {
    return m_entity_types_content;
}
void OAIGoogleCloudDialogflowCxV3beta1ImportEntityTypesRequest::setEntityTypesContent(const OAIGoogleCloudDialogflowCxV3beta1InlineSource &entity_types_content) {
    m_entity_types_content = entity_types_content;
    m_entity_types_content_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1ImportEntityTypesRequest::is_entity_types_content_Set() const{
    return m_entity_types_content_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1ImportEntityTypesRequest::is_entity_types_content_Valid() const{
    return m_entity_types_content_isValid;
}

QString OAIGoogleCloudDialogflowCxV3beta1ImportEntityTypesRequest::getEntityTypesUri() const {
    return m_entity_types_uri;
}
void OAIGoogleCloudDialogflowCxV3beta1ImportEntityTypesRequest::setEntityTypesUri(const QString &entity_types_uri) {
    m_entity_types_uri = entity_types_uri;
    m_entity_types_uri_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1ImportEntityTypesRequest::is_entity_types_uri_Set() const{
    return m_entity_types_uri_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1ImportEntityTypesRequest::is_entity_types_uri_Valid() const{
    return m_entity_types_uri_isValid;
}

QString OAIGoogleCloudDialogflowCxV3beta1ImportEntityTypesRequest::getMergeOption() const {
    return m_merge_option;
}
void OAIGoogleCloudDialogflowCxV3beta1ImportEntityTypesRequest::setMergeOption(const QString &merge_option) {
    m_merge_option = merge_option;
    m_merge_option_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1ImportEntityTypesRequest::is_merge_option_Set() const{
    return m_merge_option_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1ImportEntityTypesRequest::is_merge_option_Valid() const{
    return m_merge_option_isValid;
}

QString OAIGoogleCloudDialogflowCxV3beta1ImportEntityTypesRequest::getTargetEntityType() const {
    return m_target_entity_type;
}
void OAIGoogleCloudDialogflowCxV3beta1ImportEntityTypesRequest::setTargetEntityType(const QString &target_entity_type) {
    m_target_entity_type = target_entity_type;
    m_target_entity_type_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1ImportEntityTypesRequest::is_target_entity_type_Set() const{
    return m_target_entity_type_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1ImportEntityTypesRequest::is_target_entity_type_Valid() const{
    return m_target_entity_type_isValid;
}

bool OAIGoogleCloudDialogflowCxV3beta1ImportEntityTypesRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_entity_types_content.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_entity_types_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_merge_option_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_target_entity_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowCxV3beta1ImportEntityTypesRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
