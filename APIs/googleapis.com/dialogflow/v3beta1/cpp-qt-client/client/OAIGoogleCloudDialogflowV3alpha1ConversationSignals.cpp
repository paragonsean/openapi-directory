/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowV3alpha1ConversationSignals.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowV3alpha1ConversationSignals::OAIGoogleCloudDialogflowV3alpha1ConversationSignals(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowV3alpha1ConversationSignals::OAIGoogleCloudDialogflowV3alpha1ConversationSignals() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowV3alpha1ConversationSignals::~OAIGoogleCloudDialogflowV3alpha1ConversationSignals() {}

void OAIGoogleCloudDialogflowV3alpha1ConversationSignals::initializeModel() {

    m_turn_signals_isSet = false;
    m_turn_signals_isValid = false;
}

void OAIGoogleCloudDialogflowV3alpha1ConversationSignals::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowV3alpha1ConversationSignals::fromJsonObject(QJsonObject json) {

    m_turn_signals_isValid = ::OpenAPI::fromJsonValue(m_turn_signals, json[QString("turnSignals")]);
    m_turn_signals_isSet = !json[QString("turnSignals")].isNull() && m_turn_signals_isValid;
}

QString OAIGoogleCloudDialogflowV3alpha1ConversationSignals::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowV3alpha1ConversationSignals::asJsonObject() const {
    QJsonObject obj;
    if (m_turn_signals.isSet()) {
        obj.insert(QString("turnSignals"), ::OpenAPI::toJsonValue(m_turn_signals));
    }
    return obj;
}

OAIGoogleCloudDialogflowV3alpha1TurnSignals OAIGoogleCloudDialogflowV3alpha1ConversationSignals::getTurnSignals() const {
    return m_turn_signals;
}
void OAIGoogleCloudDialogflowV3alpha1ConversationSignals::setTurnSignals(const OAIGoogleCloudDialogflowV3alpha1TurnSignals &turn_signals) {
    m_turn_signals = turn_signals;
    m_turn_signals_isSet = true;
}

bool OAIGoogleCloudDialogflowV3alpha1ConversationSignals::is_turn_signals_Set() const{
    return m_turn_signals_isSet;
}

bool OAIGoogleCloudDialogflowV3alpha1ConversationSignals::is_turn_signals_Valid() const{
    return m_turn_signals_isValid;
}

bool OAIGoogleCloudDialogflowV3alpha1ConversationSignals::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_turn_signals.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowV3alpha1ConversationSignals::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
