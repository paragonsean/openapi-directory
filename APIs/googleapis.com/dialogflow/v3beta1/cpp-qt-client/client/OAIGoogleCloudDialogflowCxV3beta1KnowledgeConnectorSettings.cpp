/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowCxV3beta1KnowledgeConnectorSettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowCxV3beta1KnowledgeConnectorSettings::OAIGoogleCloudDialogflowCxV3beta1KnowledgeConnectorSettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowCxV3beta1KnowledgeConnectorSettings::OAIGoogleCloudDialogflowCxV3beta1KnowledgeConnectorSettings() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowCxV3beta1KnowledgeConnectorSettings::~OAIGoogleCloudDialogflowCxV3beta1KnowledgeConnectorSettings() {}

void OAIGoogleCloudDialogflowCxV3beta1KnowledgeConnectorSettings::initializeModel() {

    m_data_store_connections_isSet = false;
    m_data_store_connections_isValid = false;

    m_enabled_isSet = false;
    m_enabled_isValid = false;

    m_target_flow_isSet = false;
    m_target_flow_isValid = false;

    m_target_page_isSet = false;
    m_target_page_isValid = false;

    m_trigger_fulfillment_isSet = false;
    m_trigger_fulfillment_isValid = false;
}

void OAIGoogleCloudDialogflowCxV3beta1KnowledgeConnectorSettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowCxV3beta1KnowledgeConnectorSettings::fromJsonObject(QJsonObject json) {

    m_data_store_connections_isValid = ::OpenAPI::fromJsonValue(m_data_store_connections, json[QString("dataStoreConnections")]);
    m_data_store_connections_isSet = !json[QString("dataStoreConnections")].isNull() && m_data_store_connections_isValid;

    m_enabled_isValid = ::OpenAPI::fromJsonValue(m_enabled, json[QString("enabled")]);
    m_enabled_isSet = !json[QString("enabled")].isNull() && m_enabled_isValid;

    m_target_flow_isValid = ::OpenAPI::fromJsonValue(m_target_flow, json[QString("targetFlow")]);
    m_target_flow_isSet = !json[QString("targetFlow")].isNull() && m_target_flow_isValid;

    m_target_page_isValid = ::OpenAPI::fromJsonValue(m_target_page, json[QString("targetPage")]);
    m_target_page_isSet = !json[QString("targetPage")].isNull() && m_target_page_isValid;

    m_trigger_fulfillment_isValid = ::OpenAPI::fromJsonValue(m_trigger_fulfillment, json[QString("triggerFulfillment")]);
    m_trigger_fulfillment_isSet = !json[QString("triggerFulfillment")].isNull() && m_trigger_fulfillment_isValid;
}

QString OAIGoogleCloudDialogflowCxV3beta1KnowledgeConnectorSettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowCxV3beta1KnowledgeConnectorSettings::asJsonObject() const {
    QJsonObject obj;
    if (m_data_store_connections.size() > 0) {
        obj.insert(QString("dataStoreConnections"), ::OpenAPI::toJsonValue(m_data_store_connections));
    }
    if (m_enabled_isSet) {
        obj.insert(QString("enabled"), ::OpenAPI::toJsonValue(m_enabled));
    }
    if (m_target_flow_isSet) {
        obj.insert(QString("targetFlow"), ::OpenAPI::toJsonValue(m_target_flow));
    }
    if (m_target_page_isSet) {
        obj.insert(QString("targetPage"), ::OpenAPI::toJsonValue(m_target_page));
    }
    if (m_trigger_fulfillment.isSet()) {
        obj.insert(QString("triggerFulfillment"), ::OpenAPI::toJsonValue(m_trigger_fulfillment));
    }
    return obj;
}

QList<OAIGoogleCloudDialogflowCxV3beta1DataStoreConnection> OAIGoogleCloudDialogflowCxV3beta1KnowledgeConnectorSettings::getDataStoreConnections() const {
    return m_data_store_connections;
}
void OAIGoogleCloudDialogflowCxV3beta1KnowledgeConnectorSettings::setDataStoreConnections(const QList<OAIGoogleCloudDialogflowCxV3beta1DataStoreConnection> &data_store_connections) {
    m_data_store_connections = data_store_connections;
    m_data_store_connections_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1KnowledgeConnectorSettings::is_data_store_connections_Set() const{
    return m_data_store_connections_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1KnowledgeConnectorSettings::is_data_store_connections_Valid() const{
    return m_data_store_connections_isValid;
}

bool OAIGoogleCloudDialogflowCxV3beta1KnowledgeConnectorSettings::isEnabled() const {
    return m_enabled;
}
void OAIGoogleCloudDialogflowCxV3beta1KnowledgeConnectorSettings::setEnabled(const bool &enabled) {
    m_enabled = enabled;
    m_enabled_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1KnowledgeConnectorSettings::is_enabled_Set() const{
    return m_enabled_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1KnowledgeConnectorSettings::is_enabled_Valid() const{
    return m_enabled_isValid;
}

QString OAIGoogleCloudDialogflowCxV3beta1KnowledgeConnectorSettings::getTargetFlow() const {
    return m_target_flow;
}
void OAIGoogleCloudDialogflowCxV3beta1KnowledgeConnectorSettings::setTargetFlow(const QString &target_flow) {
    m_target_flow = target_flow;
    m_target_flow_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1KnowledgeConnectorSettings::is_target_flow_Set() const{
    return m_target_flow_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1KnowledgeConnectorSettings::is_target_flow_Valid() const{
    return m_target_flow_isValid;
}

QString OAIGoogleCloudDialogflowCxV3beta1KnowledgeConnectorSettings::getTargetPage() const {
    return m_target_page;
}
void OAIGoogleCloudDialogflowCxV3beta1KnowledgeConnectorSettings::setTargetPage(const QString &target_page) {
    m_target_page = target_page;
    m_target_page_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1KnowledgeConnectorSettings::is_target_page_Set() const{
    return m_target_page_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1KnowledgeConnectorSettings::is_target_page_Valid() const{
    return m_target_page_isValid;
}

OAIGoogleCloudDialogflowCxV3beta1Fulfillment OAIGoogleCloudDialogflowCxV3beta1KnowledgeConnectorSettings::getTriggerFulfillment() const {
    return m_trigger_fulfillment;
}
void OAIGoogleCloudDialogflowCxV3beta1KnowledgeConnectorSettings::setTriggerFulfillment(const OAIGoogleCloudDialogflowCxV3beta1Fulfillment &trigger_fulfillment) {
    m_trigger_fulfillment = trigger_fulfillment;
    m_trigger_fulfillment_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1KnowledgeConnectorSettings::is_trigger_fulfillment_Set() const{
    return m_trigger_fulfillment_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1KnowledgeConnectorSettings::is_trigger_fulfillment_Valid() const{
    return m_trigger_fulfillment_isValid;
}

bool OAIGoogleCloudDialogflowCxV3beta1KnowledgeConnectorSettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_data_store_connections.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_target_flow_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_target_page_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_trigger_fulfillment.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowCxV3beta1KnowledgeConnectorSettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
