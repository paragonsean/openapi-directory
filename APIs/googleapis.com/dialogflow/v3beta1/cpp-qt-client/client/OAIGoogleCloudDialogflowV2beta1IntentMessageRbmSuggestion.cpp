/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowV2beta1IntentMessageRbmSuggestion.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowV2beta1IntentMessageRbmSuggestion::OAIGoogleCloudDialogflowV2beta1IntentMessageRbmSuggestion(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowV2beta1IntentMessageRbmSuggestion::OAIGoogleCloudDialogflowV2beta1IntentMessageRbmSuggestion() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowV2beta1IntentMessageRbmSuggestion::~OAIGoogleCloudDialogflowV2beta1IntentMessageRbmSuggestion() {}

void OAIGoogleCloudDialogflowV2beta1IntentMessageRbmSuggestion::initializeModel() {

    m_action_isSet = false;
    m_action_isValid = false;

    m_reply_isSet = false;
    m_reply_isValid = false;
}

void OAIGoogleCloudDialogflowV2beta1IntentMessageRbmSuggestion::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowV2beta1IntentMessageRbmSuggestion::fromJsonObject(QJsonObject json) {

    m_action_isValid = ::OpenAPI::fromJsonValue(m_action, json[QString("action")]);
    m_action_isSet = !json[QString("action")].isNull() && m_action_isValid;

    m_reply_isValid = ::OpenAPI::fromJsonValue(m_reply, json[QString("reply")]);
    m_reply_isSet = !json[QString("reply")].isNull() && m_reply_isValid;
}

QString OAIGoogleCloudDialogflowV2beta1IntentMessageRbmSuggestion::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowV2beta1IntentMessageRbmSuggestion::asJsonObject() const {
    QJsonObject obj;
    if (m_action.isSet()) {
        obj.insert(QString("action"), ::OpenAPI::toJsonValue(m_action));
    }
    if (m_reply.isSet()) {
        obj.insert(QString("reply"), ::OpenAPI::toJsonValue(m_reply));
    }
    return obj;
}

OAIGoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedAction OAIGoogleCloudDialogflowV2beta1IntentMessageRbmSuggestion::getAction() const {
    return m_action;
}
void OAIGoogleCloudDialogflowV2beta1IntentMessageRbmSuggestion::setAction(const OAIGoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedAction &action) {
    m_action = action;
    m_action_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1IntentMessageRbmSuggestion::is_action_Set() const{
    return m_action_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1IntentMessageRbmSuggestion::is_action_Valid() const{
    return m_action_isValid;
}

OAIGoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedReply OAIGoogleCloudDialogflowV2beta1IntentMessageRbmSuggestion::getReply() const {
    return m_reply;
}
void OAIGoogleCloudDialogflowV2beta1IntentMessageRbmSuggestion::setReply(const OAIGoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedReply &reply) {
    m_reply = reply;
    m_reply_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1IntentMessageRbmSuggestion::is_reply_Set() const{
    return m_reply_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1IntentMessageRbmSuggestion::is_reply_Valid() const{
    return m_reply_isValid;
}

bool OAIGoogleCloudDialogflowV2beta1IntentMessageRbmSuggestion::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_action.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_reply.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowV2beta1IntentMessageRbmSuggestion::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
