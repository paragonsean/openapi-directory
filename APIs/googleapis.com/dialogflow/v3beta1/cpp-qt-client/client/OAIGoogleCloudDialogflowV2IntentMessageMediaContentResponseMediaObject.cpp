/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowV2IntentMessageMediaContentResponseMediaObject.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowV2IntentMessageMediaContentResponseMediaObject::OAIGoogleCloudDialogflowV2IntentMessageMediaContentResponseMediaObject(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowV2IntentMessageMediaContentResponseMediaObject::OAIGoogleCloudDialogflowV2IntentMessageMediaContentResponseMediaObject() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowV2IntentMessageMediaContentResponseMediaObject::~OAIGoogleCloudDialogflowV2IntentMessageMediaContentResponseMediaObject() {}

void OAIGoogleCloudDialogflowV2IntentMessageMediaContentResponseMediaObject::initializeModel() {

    m_content_url_isSet = false;
    m_content_url_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_icon_isSet = false;
    m_icon_isValid = false;

    m_large_image_isSet = false;
    m_large_image_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAIGoogleCloudDialogflowV2IntentMessageMediaContentResponseMediaObject::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowV2IntentMessageMediaContentResponseMediaObject::fromJsonObject(QJsonObject json) {

    m_content_url_isValid = ::OpenAPI::fromJsonValue(m_content_url, json[QString("contentUrl")]);
    m_content_url_isSet = !json[QString("contentUrl")].isNull() && m_content_url_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_icon_isValid = ::OpenAPI::fromJsonValue(m_icon, json[QString("icon")]);
    m_icon_isSet = !json[QString("icon")].isNull() && m_icon_isValid;

    m_large_image_isValid = ::OpenAPI::fromJsonValue(m_large_image, json[QString("largeImage")]);
    m_large_image_isSet = !json[QString("largeImage")].isNull() && m_large_image_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;
}

QString OAIGoogleCloudDialogflowV2IntentMessageMediaContentResponseMediaObject::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowV2IntentMessageMediaContentResponseMediaObject::asJsonObject() const {
    QJsonObject obj;
    if (m_content_url_isSet) {
        obj.insert(QString("contentUrl"), ::OpenAPI::toJsonValue(m_content_url));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_icon.isSet()) {
        obj.insert(QString("icon"), ::OpenAPI::toJsonValue(m_icon));
    }
    if (m_large_image.isSet()) {
        obj.insert(QString("largeImage"), ::OpenAPI::toJsonValue(m_large_image));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

QString OAIGoogleCloudDialogflowV2IntentMessageMediaContentResponseMediaObject::getContentUrl() const {
    return m_content_url;
}
void OAIGoogleCloudDialogflowV2IntentMessageMediaContentResponseMediaObject::setContentUrl(const QString &content_url) {
    m_content_url = content_url;
    m_content_url_isSet = true;
}

bool OAIGoogleCloudDialogflowV2IntentMessageMediaContentResponseMediaObject::is_content_url_Set() const{
    return m_content_url_isSet;
}

bool OAIGoogleCloudDialogflowV2IntentMessageMediaContentResponseMediaObject::is_content_url_Valid() const{
    return m_content_url_isValid;
}

QString OAIGoogleCloudDialogflowV2IntentMessageMediaContentResponseMediaObject::getDescription() const {
    return m_description;
}
void OAIGoogleCloudDialogflowV2IntentMessageMediaContentResponseMediaObject::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIGoogleCloudDialogflowV2IntentMessageMediaContentResponseMediaObject::is_description_Set() const{
    return m_description_isSet;
}

bool OAIGoogleCloudDialogflowV2IntentMessageMediaContentResponseMediaObject::is_description_Valid() const{
    return m_description_isValid;
}

OAIGoogleCloudDialogflowV2IntentMessageImage OAIGoogleCloudDialogflowV2IntentMessageMediaContentResponseMediaObject::getIcon() const {
    return m_icon;
}
void OAIGoogleCloudDialogflowV2IntentMessageMediaContentResponseMediaObject::setIcon(const OAIGoogleCloudDialogflowV2IntentMessageImage &icon) {
    m_icon = icon;
    m_icon_isSet = true;
}

bool OAIGoogleCloudDialogflowV2IntentMessageMediaContentResponseMediaObject::is_icon_Set() const{
    return m_icon_isSet;
}

bool OAIGoogleCloudDialogflowV2IntentMessageMediaContentResponseMediaObject::is_icon_Valid() const{
    return m_icon_isValid;
}

OAIGoogleCloudDialogflowV2IntentMessageImage OAIGoogleCloudDialogflowV2IntentMessageMediaContentResponseMediaObject::getLargeImage() const {
    return m_large_image;
}
void OAIGoogleCloudDialogflowV2IntentMessageMediaContentResponseMediaObject::setLargeImage(const OAIGoogleCloudDialogflowV2IntentMessageImage &large_image) {
    m_large_image = large_image;
    m_large_image_isSet = true;
}

bool OAIGoogleCloudDialogflowV2IntentMessageMediaContentResponseMediaObject::is_large_image_Set() const{
    return m_large_image_isSet;
}

bool OAIGoogleCloudDialogflowV2IntentMessageMediaContentResponseMediaObject::is_large_image_Valid() const{
    return m_large_image_isValid;
}

QString OAIGoogleCloudDialogflowV2IntentMessageMediaContentResponseMediaObject::getName() const {
    return m_name;
}
void OAIGoogleCloudDialogflowV2IntentMessageMediaContentResponseMediaObject::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudDialogflowV2IntentMessageMediaContentResponseMediaObject::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudDialogflowV2IntentMessageMediaContentResponseMediaObject::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIGoogleCloudDialogflowV2IntentMessageMediaContentResponseMediaObject::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_content_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_icon.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_large_image.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowV2IntentMessageMediaContentResponseMediaObject::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
