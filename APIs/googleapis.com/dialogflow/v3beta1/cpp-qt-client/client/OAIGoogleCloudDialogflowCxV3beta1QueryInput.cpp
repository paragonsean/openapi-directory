/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowCxV3beta1QueryInput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowCxV3beta1QueryInput::OAIGoogleCloudDialogflowCxV3beta1QueryInput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowCxV3beta1QueryInput::OAIGoogleCloudDialogflowCxV3beta1QueryInput() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowCxV3beta1QueryInput::~OAIGoogleCloudDialogflowCxV3beta1QueryInput() {}

void OAIGoogleCloudDialogflowCxV3beta1QueryInput::initializeModel() {

    m_audio_isSet = false;
    m_audio_isValid = false;

    m_dtmf_isSet = false;
    m_dtmf_isValid = false;

    m_event_isSet = false;
    m_event_isValid = false;

    m_intent_isSet = false;
    m_intent_isValid = false;

    m_language_code_isSet = false;
    m_language_code_isValid = false;

    m_text_isSet = false;
    m_text_isValid = false;
}

void OAIGoogleCloudDialogflowCxV3beta1QueryInput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowCxV3beta1QueryInput::fromJsonObject(QJsonObject json) {

    m_audio_isValid = ::OpenAPI::fromJsonValue(m_audio, json[QString("audio")]);
    m_audio_isSet = !json[QString("audio")].isNull() && m_audio_isValid;

    m_dtmf_isValid = ::OpenAPI::fromJsonValue(m_dtmf, json[QString("dtmf")]);
    m_dtmf_isSet = !json[QString("dtmf")].isNull() && m_dtmf_isValid;

    m_event_isValid = ::OpenAPI::fromJsonValue(m_event, json[QString("event")]);
    m_event_isSet = !json[QString("event")].isNull() && m_event_isValid;

    m_intent_isValid = ::OpenAPI::fromJsonValue(m_intent, json[QString("intent")]);
    m_intent_isSet = !json[QString("intent")].isNull() && m_intent_isValid;

    m_language_code_isValid = ::OpenAPI::fromJsonValue(m_language_code, json[QString("languageCode")]);
    m_language_code_isSet = !json[QString("languageCode")].isNull() && m_language_code_isValid;

    m_text_isValid = ::OpenAPI::fromJsonValue(m_text, json[QString("text")]);
    m_text_isSet = !json[QString("text")].isNull() && m_text_isValid;
}

QString OAIGoogleCloudDialogflowCxV3beta1QueryInput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowCxV3beta1QueryInput::asJsonObject() const {
    QJsonObject obj;
    if (m_audio.isSet()) {
        obj.insert(QString("audio"), ::OpenAPI::toJsonValue(m_audio));
    }
    if (m_dtmf.isSet()) {
        obj.insert(QString("dtmf"), ::OpenAPI::toJsonValue(m_dtmf));
    }
    if (m_event.isSet()) {
        obj.insert(QString("event"), ::OpenAPI::toJsonValue(m_event));
    }
    if (m_intent.isSet()) {
        obj.insert(QString("intent"), ::OpenAPI::toJsonValue(m_intent));
    }
    if (m_language_code_isSet) {
        obj.insert(QString("languageCode"), ::OpenAPI::toJsonValue(m_language_code));
    }
    if (m_text.isSet()) {
        obj.insert(QString("text"), ::OpenAPI::toJsonValue(m_text));
    }
    return obj;
}

OAIGoogleCloudDialogflowCxV3beta1AudioInput OAIGoogleCloudDialogflowCxV3beta1QueryInput::getAudio() const {
    return m_audio;
}
void OAIGoogleCloudDialogflowCxV3beta1QueryInput::setAudio(const OAIGoogleCloudDialogflowCxV3beta1AudioInput &audio) {
    m_audio = audio;
    m_audio_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1QueryInput::is_audio_Set() const{
    return m_audio_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1QueryInput::is_audio_Valid() const{
    return m_audio_isValid;
}

OAIGoogleCloudDialogflowCxV3beta1DtmfInput OAIGoogleCloudDialogflowCxV3beta1QueryInput::getDtmf() const {
    return m_dtmf;
}
void OAIGoogleCloudDialogflowCxV3beta1QueryInput::setDtmf(const OAIGoogleCloudDialogflowCxV3beta1DtmfInput &dtmf) {
    m_dtmf = dtmf;
    m_dtmf_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1QueryInput::is_dtmf_Set() const{
    return m_dtmf_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1QueryInput::is_dtmf_Valid() const{
    return m_dtmf_isValid;
}

OAIGoogleCloudDialogflowCxV3beta1EventInput OAIGoogleCloudDialogflowCxV3beta1QueryInput::getEvent() const {
    return m_event;
}
void OAIGoogleCloudDialogflowCxV3beta1QueryInput::setEvent(const OAIGoogleCloudDialogflowCxV3beta1EventInput &event) {
    m_event = event;
    m_event_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1QueryInput::is_event_Set() const{
    return m_event_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1QueryInput::is_event_Valid() const{
    return m_event_isValid;
}

OAIGoogleCloudDialogflowCxV3beta1IntentInput OAIGoogleCloudDialogflowCxV3beta1QueryInput::getIntent() const {
    return m_intent;
}
void OAIGoogleCloudDialogflowCxV3beta1QueryInput::setIntent(const OAIGoogleCloudDialogflowCxV3beta1IntentInput &intent) {
    m_intent = intent;
    m_intent_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1QueryInput::is_intent_Set() const{
    return m_intent_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1QueryInput::is_intent_Valid() const{
    return m_intent_isValid;
}

QString OAIGoogleCloudDialogflowCxV3beta1QueryInput::getLanguageCode() const {
    return m_language_code;
}
void OAIGoogleCloudDialogflowCxV3beta1QueryInput::setLanguageCode(const QString &language_code) {
    m_language_code = language_code;
    m_language_code_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1QueryInput::is_language_code_Set() const{
    return m_language_code_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1QueryInput::is_language_code_Valid() const{
    return m_language_code_isValid;
}

OAIGoogleCloudDialogflowCxV3beta1TextInput OAIGoogleCloudDialogflowCxV3beta1QueryInput::getText() const {
    return m_text;
}
void OAIGoogleCloudDialogflowCxV3beta1QueryInput::setText(const OAIGoogleCloudDialogflowCxV3beta1TextInput &text) {
    m_text = text;
    m_text_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1QueryInput::is_text_Set() const{
    return m_text_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1QueryInput::is_text_Valid() const{
    return m_text_isValid;
}

bool OAIGoogleCloudDialogflowCxV3beta1QueryInput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_audio.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_dtmf.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_event.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_intent.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_language_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_text.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowCxV3beta1QueryInput::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
