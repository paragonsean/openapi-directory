/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowCxV3beta1Generator.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowCxV3beta1Generator::OAIGoogleCloudDialogflowCxV3beta1Generator(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowCxV3beta1Generator::OAIGoogleCloudDialogflowCxV3beta1Generator() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowCxV3beta1Generator::~OAIGoogleCloudDialogflowCxV3beta1Generator() {}

void OAIGoogleCloudDialogflowCxV3beta1Generator::initializeModel() {

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_placeholders_isSet = false;
    m_placeholders_isValid = false;

    m_prompt_text_isSet = false;
    m_prompt_text_isValid = false;
}

void OAIGoogleCloudDialogflowCxV3beta1Generator::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowCxV3beta1Generator::fromJsonObject(QJsonObject json) {

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_placeholders_isValid = ::OpenAPI::fromJsonValue(m_placeholders, json[QString("placeholders")]);
    m_placeholders_isSet = !json[QString("placeholders")].isNull() && m_placeholders_isValid;

    m_prompt_text_isValid = ::OpenAPI::fromJsonValue(m_prompt_text, json[QString("promptText")]);
    m_prompt_text_isSet = !json[QString("promptText")].isNull() && m_prompt_text_isValid;
}

QString OAIGoogleCloudDialogflowCxV3beta1Generator::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowCxV3beta1Generator::asJsonObject() const {
    QJsonObject obj;
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_placeholders.size() > 0) {
        obj.insert(QString("placeholders"), ::OpenAPI::toJsonValue(m_placeholders));
    }
    if (m_prompt_text.isSet()) {
        obj.insert(QString("promptText"), ::OpenAPI::toJsonValue(m_prompt_text));
    }
    return obj;
}

QString OAIGoogleCloudDialogflowCxV3beta1Generator::getDisplayName() const {
    return m_display_name;
}
void OAIGoogleCloudDialogflowCxV3beta1Generator::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1Generator::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1Generator::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QString OAIGoogleCloudDialogflowCxV3beta1Generator::getName() const {
    return m_name;
}
void OAIGoogleCloudDialogflowCxV3beta1Generator::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1Generator::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1Generator::is_name_Valid() const{
    return m_name_isValid;
}

QList<OAIGoogleCloudDialogflowCxV3beta1GeneratorPlaceholder> OAIGoogleCloudDialogflowCxV3beta1Generator::getPlaceholders() const {
    return m_placeholders;
}
void OAIGoogleCloudDialogflowCxV3beta1Generator::setPlaceholders(const QList<OAIGoogleCloudDialogflowCxV3beta1GeneratorPlaceholder> &placeholders) {
    m_placeholders = placeholders;
    m_placeholders_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1Generator::is_placeholders_Set() const{
    return m_placeholders_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1Generator::is_placeholders_Valid() const{
    return m_placeholders_isValid;
}

OAIGoogleCloudDialogflowCxV3beta1Phrase OAIGoogleCloudDialogflowCxV3beta1Generator::getPromptText() const {
    return m_prompt_text;
}
void OAIGoogleCloudDialogflowCxV3beta1Generator::setPromptText(const OAIGoogleCloudDialogflowCxV3beta1Phrase &prompt_text) {
    m_prompt_text = prompt_text;
    m_prompt_text_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1Generator::is_prompt_text_Set() const{
    return m_prompt_text_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1Generator::is_prompt_text_Valid() const{
    return m_prompt_text_isValid;
}

bool OAIGoogleCloudDialogflowCxV3beta1Generator::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_placeholders.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_prompt_text.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowCxV3beta1Generator::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
