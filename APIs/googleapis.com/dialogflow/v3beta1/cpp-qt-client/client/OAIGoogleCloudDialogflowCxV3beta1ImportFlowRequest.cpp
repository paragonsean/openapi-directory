/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowCxV3beta1ImportFlowRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowCxV3beta1ImportFlowRequest::OAIGoogleCloudDialogflowCxV3beta1ImportFlowRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowCxV3beta1ImportFlowRequest::OAIGoogleCloudDialogflowCxV3beta1ImportFlowRequest() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowCxV3beta1ImportFlowRequest::~OAIGoogleCloudDialogflowCxV3beta1ImportFlowRequest() {}

void OAIGoogleCloudDialogflowCxV3beta1ImportFlowRequest::initializeModel() {

    m_flow_content_isSet = false;
    m_flow_content_isValid = false;

    m_flow_import_strategy_isSet = false;
    m_flow_import_strategy_isValid = false;

    m_flow_uri_isSet = false;
    m_flow_uri_isValid = false;

    m_import_option_isSet = false;
    m_import_option_isValid = false;
}

void OAIGoogleCloudDialogflowCxV3beta1ImportFlowRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowCxV3beta1ImportFlowRequest::fromJsonObject(QJsonObject json) {

    m_flow_content_isValid = ::OpenAPI::fromJsonValue(m_flow_content, json[QString("flowContent")]);
    m_flow_content_isSet = !json[QString("flowContent")].isNull() && m_flow_content_isValid;

    m_flow_import_strategy_isValid = ::OpenAPI::fromJsonValue(m_flow_import_strategy, json[QString("flowImportStrategy")]);
    m_flow_import_strategy_isSet = !json[QString("flowImportStrategy")].isNull() && m_flow_import_strategy_isValid;

    m_flow_uri_isValid = ::OpenAPI::fromJsonValue(m_flow_uri, json[QString("flowUri")]);
    m_flow_uri_isSet = !json[QString("flowUri")].isNull() && m_flow_uri_isValid;

    m_import_option_isValid = ::OpenAPI::fromJsonValue(m_import_option, json[QString("importOption")]);
    m_import_option_isSet = !json[QString("importOption")].isNull() && m_import_option_isValid;
}

QString OAIGoogleCloudDialogflowCxV3beta1ImportFlowRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowCxV3beta1ImportFlowRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_flow_content_isSet) {
        obj.insert(QString("flowContent"), ::OpenAPI::toJsonValue(m_flow_content));
    }
    if (m_flow_import_strategy.isSet()) {
        obj.insert(QString("flowImportStrategy"), ::OpenAPI::toJsonValue(m_flow_import_strategy));
    }
    if (m_flow_uri_isSet) {
        obj.insert(QString("flowUri"), ::OpenAPI::toJsonValue(m_flow_uri));
    }
    if (m_import_option_isSet) {
        obj.insert(QString("importOption"), ::OpenAPI::toJsonValue(m_import_option));
    }
    return obj;
}

QByteArray OAIGoogleCloudDialogflowCxV3beta1ImportFlowRequest::getFlowContent() const {
    return m_flow_content;
}
void OAIGoogleCloudDialogflowCxV3beta1ImportFlowRequest::setFlowContent(const QByteArray &flow_content) {
    m_flow_content = flow_content;
    m_flow_content_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1ImportFlowRequest::is_flow_content_Set() const{
    return m_flow_content_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1ImportFlowRequest::is_flow_content_Valid() const{
    return m_flow_content_isValid;
}

OAIGoogleCloudDialogflowCxV3beta1FlowImportStrategy OAIGoogleCloudDialogflowCxV3beta1ImportFlowRequest::getFlowImportStrategy() const {
    return m_flow_import_strategy;
}
void OAIGoogleCloudDialogflowCxV3beta1ImportFlowRequest::setFlowImportStrategy(const OAIGoogleCloudDialogflowCxV3beta1FlowImportStrategy &flow_import_strategy) {
    m_flow_import_strategy = flow_import_strategy;
    m_flow_import_strategy_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1ImportFlowRequest::is_flow_import_strategy_Set() const{
    return m_flow_import_strategy_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1ImportFlowRequest::is_flow_import_strategy_Valid() const{
    return m_flow_import_strategy_isValid;
}

QString OAIGoogleCloudDialogflowCxV3beta1ImportFlowRequest::getFlowUri() const {
    return m_flow_uri;
}
void OAIGoogleCloudDialogflowCxV3beta1ImportFlowRequest::setFlowUri(const QString &flow_uri) {
    m_flow_uri = flow_uri;
    m_flow_uri_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1ImportFlowRequest::is_flow_uri_Set() const{
    return m_flow_uri_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1ImportFlowRequest::is_flow_uri_Valid() const{
    return m_flow_uri_isValid;
}

QString OAIGoogleCloudDialogflowCxV3beta1ImportFlowRequest::getImportOption() const {
    return m_import_option;
}
void OAIGoogleCloudDialogflowCxV3beta1ImportFlowRequest::setImportOption(const QString &import_option) {
    m_import_option = import_option;
    m_import_option_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1ImportFlowRequest::is_import_option_Set() const{
    return m_import_option_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1ImportFlowRequest::is_import_option_Valid() const{
    return m_import_option_isValid;
}

bool OAIGoogleCloudDialogflowCxV3beta1ImportFlowRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_flow_content_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_flow_import_strategy.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_flow_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_import_option_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowCxV3beta1ImportFlowRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
