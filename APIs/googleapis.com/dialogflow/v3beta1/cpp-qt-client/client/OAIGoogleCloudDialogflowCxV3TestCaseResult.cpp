/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowCxV3TestCaseResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowCxV3TestCaseResult::OAIGoogleCloudDialogflowCxV3TestCaseResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowCxV3TestCaseResult::OAIGoogleCloudDialogflowCxV3TestCaseResult() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowCxV3TestCaseResult::~OAIGoogleCloudDialogflowCxV3TestCaseResult() {}

void OAIGoogleCloudDialogflowCxV3TestCaseResult::initializeModel() {

    m_conversation_turns_isSet = false;
    m_conversation_turns_isValid = false;

    m_environment_isSet = false;
    m_environment_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_test_result_isSet = false;
    m_test_result_isValid = false;

    m_test_time_isSet = false;
    m_test_time_isValid = false;
}

void OAIGoogleCloudDialogflowCxV3TestCaseResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowCxV3TestCaseResult::fromJsonObject(QJsonObject json) {

    m_conversation_turns_isValid = ::OpenAPI::fromJsonValue(m_conversation_turns, json[QString("conversationTurns")]);
    m_conversation_turns_isSet = !json[QString("conversationTurns")].isNull() && m_conversation_turns_isValid;

    m_environment_isValid = ::OpenAPI::fromJsonValue(m_environment, json[QString("environment")]);
    m_environment_isSet = !json[QString("environment")].isNull() && m_environment_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_test_result_isValid = ::OpenAPI::fromJsonValue(m_test_result, json[QString("testResult")]);
    m_test_result_isSet = !json[QString("testResult")].isNull() && m_test_result_isValid;

    m_test_time_isValid = ::OpenAPI::fromJsonValue(m_test_time, json[QString("testTime")]);
    m_test_time_isSet = !json[QString("testTime")].isNull() && m_test_time_isValid;
}

QString OAIGoogleCloudDialogflowCxV3TestCaseResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowCxV3TestCaseResult::asJsonObject() const {
    QJsonObject obj;
    if (m_conversation_turns.size() > 0) {
        obj.insert(QString("conversationTurns"), ::OpenAPI::toJsonValue(m_conversation_turns));
    }
    if (m_environment_isSet) {
        obj.insert(QString("environment"), ::OpenAPI::toJsonValue(m_environment));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_test_result_isSet) {
        obj.insert(QString("testResult"), ::OpenAPI::toJsonValue(m_test_result));
    }
    if (m_test_time_isSet) {
        obj.insert(QString("testTime"), ::OpenAPI::toJsonValue(m_test_time));
    }
    return obj;
}

QList<OAIGoogleCloudDialogflowCxV3ConversationTurn> OAIGoogleCloudDialogflowCxV3TestCaseResult::getConversationTurns() const {
    return m_conversation_turns;
}
void OAIGoogleCloudDialogflowCxV3TestCaseResult::setConversationTurns(const QList<OAIGoogleCloudDialogflowCxV3ConversationTurn> &conversation_turns) {
    m_conversation_turns = conversation_turns;
    m_conversation_turns_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3TestCaseResult::is_conversation_turns_Set() const{
    return m_conversation_turns_isSet;
}

bool OAIGoogleCloudDialogflowCxV3TestCaseResult::is_conversation_turns_Valid() const{
    return m_conversation_turns_isValid;
}

QString OAIGoogleCloudDialogflowCxV3TestCaseResult::getEnvironment() const {
    return m_environment;
}
void OAIGoogleCloudDialogflowCxV3TestCaseResult::setEnvironment(const QString &environment) {
    m_environment = environment;
    m_environment_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3TestCaseResult::is_environment_Set() const{
    return m_environment_isSet;
}

bool OAIGoogleCloudDialogflowCxV3TestCaseResult::is_environment_Valid() const{
    return m_environment_isValid;
}

QString OAIGoogleCloudDialogflowCxV3TestCaseResult::getName() const {
    return m_name;
}
void OAIGoogleCloudDialogflowCxV3TestCaseResult::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3TestCaseResult::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudDialogflowCxV3TestCaseResult::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGoogleCloudDialogflowCxV3TestCaseResult::getTestResult() const {
    return m_test_result;
}
void OAIGoogleCloudDialogflowCxV3TestCaseResult::setTestResult(const QString &test_result) {
    m_test_result = test_result;
    m_test_result_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3TestCaseResult::is_test_result_Set() const{
    return m_test_result_isSet;
}

bool OAIGoogleCloudDialogflowCxV3TestCaseResult::is_test_result_Valid() const{
    return m_test_result_isValid;
}

QString OAIGoogleCloudDialogflowCxV3TestCaseResult::getTestTime() const {
    return m_test_time;
}
void OAIGoogleCloudDialogflowCxV3TestCaseResult::setTestTime(const QString &test_time) {
    m_test_time = test_time;
    m_test_time_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3TestCaseResult::is_test_time_Set() const{
    return m_test_time_isSet;
}

bool OAIGoogleCloudDialogflowCxV3TestCaseResult::is_test_time_Valid() const{
    return m_test_time_isValid;
}

bool OAIGoogleCloudDialogflowCxV3TestCaseResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_conversation_turns.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_environment_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_test_result_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_test_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowCxV3TestCaseResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
