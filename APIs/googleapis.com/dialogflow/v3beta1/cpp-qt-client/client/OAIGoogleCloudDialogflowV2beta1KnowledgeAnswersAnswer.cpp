/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer::OAIGoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer::OAIGoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer::~OAIGoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer() {}

void OAIGoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer::initializeModel() {

    m_answer_isSet = false;
    m_answer_isValid = false;

    m_faq_question_isSet = false;
    m_faq_question_isValid = false;

    m_match_confidence_isSet = false;
    m_match_confidence_isValid = false;

    m_match_confidence_level_isSet = false;
    m_match_confidence_level_isValid = false;

    m_source_isSet = false;
    m_source_isValid = false;
}

void OAIGoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer::fromJsonObject(QJsonObject json) {

    m_answer_isValid = ::OpenAPI::fromJsonValue(m_answer, json[QString("answer")]);
    m_answer_isSet = !json[QString("answer")].isNull() && m_answer_isValid;

    m_faq_question_isValid = ::OpenAPI::fromJsonValue(m_faq_question, json[QString("faqQuestion")]);
    m_faq_question_isSet = !json[QString("faqQuestion")].isNull() && m_faq_question_isValid;

    m_match_confidence_isValid = ::OpenAPI::fromJsonValue(m_match_confidence, json[QString("matchConfidence")]);
    m_match_confidence_isSet = !json[QString("matchConfidence")].isNull() && m_match_confidence_isValid;

    m_match_confidence_level_isValid = ::OpenAPI::fromJsonValue(m_match_confidence_level, json[QString("matchConfidenceLevel")]);
    m_match_confidence_level_isSet = !json[QString("matchConfidenceLevel")].isNull() && m_match_confidence_level_isValid;

    m_source_isValid = ::OpenAPI::fromJsonValue(m_source, json[QString("source")]);
    m_source_isSet = !json[QString("source")].isNull() && m_source_isValid;
}

QString OAIGoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer::asJsonObject() const {
    QJsonObject obj;
    if (m_answer_isSet) {
        obj.insert(QString("answer"), ::OpenAPI::toJsonValue(m_answer));
    }
    if (m_faq_question_isSet) {
        obj.insert(QString("faqQuestion"), ::OpenAPI::toJsonValue(m_faq_question));
    }
    if (m_match_confidence_isSet) {
        obj.insert(QString("matchConfidence"), ::OpenAPI::toJsonValue(m_match_confidence));
    }
    if (m_match_confidence_level_isSet) {
        obj.insert(QString("matchConfidenceLevel"), ::OpenAPI::toJsonValue(m_match_confidence_level));
    }
    if (m_source_isSet) {
        obj.insert(QString("source"), ::OpenAPI::toJsonValue(m_source));
    }
    return obj;
}

QString OAIGoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer::getAnswer() const {
    return m_answer;
}
void OAIGoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer::setAnswer(const QString &answer) {
    m_answer = answer;
    m_answer_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer::is_answer_Set() const{
    return m_answer_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer::is_answer_Valid() const{
    return m_answer_isValid;
}

QString OAIGoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer::getFaqQuestion() const {
    return m_faq_question;
}
void OAIGoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer::setFaqQuestion(const QString &faq_question) {
    m_faq_question = faq_question;
    m_faq_question_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer::is_faq_question_Set() const{
    return m_faq_question_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer::is_faq_question_Valid() const{
    return m_faq_question_isValid;
}

float OAIGoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer::getMatchConfidence() const {
    return m_match_confidence;
}
void OAIGoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer::setMatchConfidence(const float &match_confidence) {
    m_match_confidence = match_confidence;
    m_match_confidence_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer::is_match_confidence_Set() const{
    return m_match_confidence_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer::is_match_confidence_Valid() const{
    return m_match_confidence_isValid;
}

QString OAIGoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer::getMatchConfidenceLevel() const {
    return m_match_confidence_level;
}
void OAIGoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer::setMatchConfidenceLevel(const QString &match_confidence_level) {
    m_match_confidence_level = match_confidence_level;
    m_match_confidence_level_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer::is_match_confidence_level_Set() const{
    return m_match_confidence_level_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer::is_match_confidence_level_Valid() const{
    return m_match_confidence_level_isValid;
}

QString OAIGoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer::getSource() const {
    return m_source;
}
void OAIGoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer::setSource(const QString &source) {
    m_source = source;
    m_source_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer::is_source_Set() const{
    return m_source_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer::is_source_Valid() const{
    return m_source_isValid;
}

bool OAIGoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_answer_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_faq_question_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_match_confidence_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_match_confidence_level_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
