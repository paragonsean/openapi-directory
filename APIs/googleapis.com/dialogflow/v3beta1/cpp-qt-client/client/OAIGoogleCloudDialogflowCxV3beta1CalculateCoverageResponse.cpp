/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowCxV3beta1CalculateCoverageResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowCxV3beta1CalculateCoverageResponse::OAIGoogleCloudDialogflowCxV3beta1CalculateCoverageResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowCxV3beta1CalculateCoverageResponse::OAIGoogleCloudDialogflowCxV3beta1CalculateCoverageResponse() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowCxV3beta1CalculateCoverageResponse::~OAIGoogleCloudDialogflowCxV3beta1CalculateCoverageResponse() {}

void OAIGoogleCloudDialogflowCxV3beta1CalculateCoverageResponse::initializeModel() {

    m_agent_isSet = false;
    m_agent_isValid = false;

    m_intent_coverage_isSet = false;
    m_intent_coverage_isValid = false;

    m_route_group_coverage_isSet = false;
    m_route_group_coverage_isValid = false;

    m_transition_coverage_isSet = false;
    m_transition_coverage_isValid = false;
}

void OAIGoogleCloudDialogflowCxV3beta1CalculateCoverageResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowCxV3beta1CalculateCoverageResponse::fromJsonObject(QJsonObject json) {

    m_agent_isValid = ::OpenAPI::fromJsonValue(m_agent, json[QString("agent")]);
    m_agent_isSet = !json[QString("agent")].isNull() && m_agent_isValid;

    m_intent_coverage_isValid = ::OpenAPI::fromJsonValue(m_intent_coverage, json[QString("intentCoverage")]);
    m_intent_coverage_isSet = !json[QString("intentCoverage")].isNull() && m_intent_coverage_isValid;

    m_route_group_coverage_isValid = ::OpenAPI::fromJsonValue(m_route_group_coverage, json[QString("routeGroupCoverage")]);
    m_route_group_coverage_isSet = !json[QString("routeGroupCoverage")].isNull() && m_route_group_coverage_isValid;

    m_transition_coverage_isValid = ::OpenAPI::fromJsonValue(m_transition_coverage, json[QString("transitionCoverage")]);
    m_transition_coverage_isSet = !json[QString("transitionCoverage")].isNull() && m_transition_coverage_isValid;
}

QString OAIGoogleCloudDialogflowCxV3beta1CalculateCoverageResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowCxV3beta1CalculateCoverageResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_agent_isSet) {
        obj.insert(QString("agent"), ::OpenAPI::toJsonValue(m_agent));
    }
    if (m_intent_coverage.isSet()) {
        obj.insert(QString("intentCoverage"), ::OpenAPI::toJsonValue(m_intent_coverage));
    }
    if (m_route_group_coverage.isSet()) {
        obj.insert(QString("routeGroupCoverage"), ::OpenAPI::toJsonValue(m_route_group_coverage));
    }
    if (m_transition_coverage.isSet()) {
        obj.insert(QString("transitionCoverage"), ::OpenAPI::toJsonValue(m_transition_coverage));
    }
    return obj;
}

QString OAIGoogleCloudDialogflowCxV3beta1CalculateCoverageResponse::getAgent() const {
    return m_agent;
}
void OAIGoogleCloudDialogflowCxV3beta1CalculateCoverageResponse::setAgent(const QString &agent) {
    m_agent = agent;
    m_agent_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1CalculateCoverageResponse::is_agent_Set() const{
    return m_agent_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1CalculateCoverageResponse::is_agent_Valid() const{
    return m_agent_isValid;
}

OAIGoogleCloudDialogflowCxV3beta1IntentCoverage OAIGoogleCloudDialogflowCxV3beta1CalculateCoverageResponse::getIntentCoverage() const {
    return m_intent_coverage;
}
void OAIGoogleCloudDialogflowCxV3beta1CalculateCoverageResponse::setIntentCoverage(const OAIGoogleCloudDialogflowCxV3beta1IntentCoverage &intent_coverage) {
    m_intent_coverage = intent_coverage;
    m_intent_coverage_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1CalculateCoverageResponse::is_intent_coverage_Set() const{
    return m_intent_coverage_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1CalculateCoverageResponse::is_intent_coverage_Valid() const{
    return m_intent_coverage_isValid;
}

OAIGoogleCloudDialogflowCxV3beta1TransitionRouteGroupCoverage OAIGoogleCloudDialogflowCxV3beta1CalculateCoverageResponse::getRouteGroupCoverage() const {
    return m_route_group_coverage;
}
void OAIGoogleCloudDialogflowCxV3beta1CalculateCoverageResponse::setRouteGroupCoverage(const OAIGoogleCloudDialogflowCxV3beta1TransitionRouteGroupCoverage &route_group_coverage) {
    m_route_group_coverage = route_group_coverage;
    m_route_group_coverage_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1CalculateCoverageResponse::is_route_group_coverage_Set() const{
    return m_route_group_coverage_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1CalculateCoverageResponse::is_route_group_coverage_Valid() const{
    return m_route_group_coverage_isValid;
}

OAIGoogleCloudDialogflowCxV3beta1TransitionCoverage OAIGoogleCloudDialogflowCxV3beta1CalculateCoverageResponse::getTransitionCoverage() const {
    return m_transition_coverage;
}
void OAIGoogleCloudDialogflowCxV3beta1CalculateCoverageResponse::setTransitionCoverage(const OAIGoogleCloudDialogflowCxV3beta1TransitionCoverage &transition_coverage) {
    m_transition_coverage = transition_coverage;
    m_transition_coverage_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1CalculateCoverageResponse::is_transition_coverage_Set() const{
    return m_transition_coverage_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1CalculateCoverageResponse::is_transition_coverage_Valid() const{
    return m_transition_coverage_isValid;
}

bool OAIGoogleCloudDialogflowCxV3beta1CalculateCoverageResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_agent_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_intent_coverage.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_route_group_coverage.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_transition_coverage.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowCxV3beta1CalculateCoverageResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
