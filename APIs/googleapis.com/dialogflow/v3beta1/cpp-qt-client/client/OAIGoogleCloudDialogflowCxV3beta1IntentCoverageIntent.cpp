/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowCxV3beta1IntentCoverageIntent.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowCxV3beta1IntentCoverageIntent::OAIGoogleCloudDialogflowCxV3beta1IntentCoverageIntent(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowCxV3beta1IntentCoverageIntent::OAIGoogleCloudDialogflowCxV3beta1IntentCoverageIntent() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowCxV3beta1IntentCoverageIntent::~OAIGoogleCloudDialogflowCxV3beta1IntentCoverageIntent() {}

void OAIGoogleCloudDialogflowCxV3beta1IntentCoverageIntent::initializeModel() {

    m_covered_isSet = false;
    m_covered_isValid = false;

    m_intent_isSet = false;
    m_intent_isValid = false;
}

void OAIGoogleCloudDialogflowCxV3beta1IntentCoverageIntent::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowCxV3beta1IntentCoverageIntent::fromJsonObject(QJsonObject json) {

    m_covered_isValid = ::OpenAPI::fromJsonValue(m_covered, json[QString("covered")]);
    m_covered_isSet = !json[QString("covered")].isNull() && m_covered_isValid;

    m_intent_isValid = ::OpenAPI::fromJsonValue(m_intent, json[QString("intent")]);
    m_intent_isSet = !json[QString("intent")].isNull() && m_intent_isValid;
}

QString OAIGoogleCloudDialogflowCxV3beta1IntentCoverageIntent::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowCxV3beta1IntentCoverageIntent::asJsonObject() const {
    QJsonObject obj;
    if (m_covered_isSet) {
        obj.insert(QString("covered"), ::OpenAPI::toJsonValue(m_covered));
    }
    if (m_intent_isSet) {
        obj.insert(QString("intent"), ::OpenAPI::toJsonValue(m_intent));
    }
    return obj;
}

bool OAIGoogleCloudDialogflowCxV3beta1IntentCoverageIntent::isCovered() const {
    return m_covered;
}
void OAIGoogleCloudDialogflowCxV3beta1IntentCoverageIntent::setCovered(const bool &covered) {
    m_covered = covered;
    m_covered_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1IntentCoverageIntent::is_covered_Set() const{
    return m_covered_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1IntentCoverageIntent::is_covered_Valid() const{
    return m_covered_isValid;
}

QString OAIGoogleCloudDialogflowCxV3beta1IntentCoverageIntent::getIntent() const {
    return m_intent;
}
void OAIGoogleCloudDialogflowCxV3beta1IntentCoverageIntent::setIntent(const QString &intent) {
    m_intent = intent;
    m_intent_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1IntentCoverageIntent::is_intent_Set() const{
    return m_intent_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1IntentCoverageIntent::is_intent_Valid() const{
    return m_intent_isValid;
}

bool OAIGoogleCloudDialogflowCxV3beta1IntentCoverageIntent::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_covered_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_intent_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowCxV3beta1IntentCoverageIntent::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
