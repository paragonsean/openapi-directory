/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowCxV3beta1ValidationMessage.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowCxV3beta1ValidationMessage::OAIGoogleCloudDialogflowCxV3beta1ValidationMessage(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowCxV3beta1ValidationMessage::OAIGoogleCloudDialogflowCxV3beta1ValidationMessage() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowCxV3beta1ValidationMessage::~OAIGoogleCloudDialogflowCxV3beta1ValidationMessage() {}

void OAIGoogleCloudDialogflowCxV3beta1ValidationMessage::initializeModel() {

    m_detail_isSet = false;
    m_detail_isValid = false;

    m_resource_names_isSet = false;
    m_resource_names_isValid = false;

    m_resource_type_isSet = false;
    m_resource_type_isValid = false;

    m_resources_isSet = false;
    m_resources_isValid = false;

    m_severity_isSet = false;
    m_severity_isValid = false;
}

void OAIGoogleCloudDialogflowCxV3beta1ValidationMessage::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowCxV3beta1ValidationMessage::fromJsonObject(QJsonObject json) {

    m_detail_isValid = ::OpenAPI::fromJsonValue(m_detail, json[QString("detail")]);
    m_detail_isSet = !json[QString("detail")].isNull() && m_detail_isValid;

    m_resource_names_isValid = ::OpenAPI::fromJsonValue(m_resource_names, json[QString("resourceNames")]);
    m_resource_names_isSet = !json[QString("resourceNames")].isNull() && m_resource_names_isValid;

    m_resource_type_isValid = ::OpenAPI::fromJsonValue(m_resource_type, json[QString("resourceType")]);
    m_resource_type_isSet = !json[QString("resourceType")].isNull() && m_resource_type_isValid;

    m_resources_isValid = ::OpenAPI::fromJsonValue(m_resources, json[QString("resources")]);
    m_resources_isSet = !json[QString("resources")].isNull() && m_resources_isValid;

    m_severity_isValid = ::OpenAPI::fromJsonValue(m_severity, json[QString("severity")]);
    m_severity_isSet = !json[QString("severity")].isNull() && m_severity_isValid;
}

QString OAIGoogleCloudDialogflowCxV3beta1ValidationMessage::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowCxV3beta1ValidationMessage::asJsonObject() const {
    QJsonObject obj;
    if (m_detail_isSet) {
        obj.insert(QString("detail"), ::OpenAPI::toJsonValue(m_detail));
    }
    if (m_resource_names.size() > 0) {
        obj.insert(QString("resourceNames"), ::OpenAPI::toJsonValue(m_resource_names));
    }
    if (m_resource_type_isSet) {
        obj.insert(QString("resourceType"), ::OpenAPI::toJsonValue(m_resource_type));
    }
    if (m_resources.size() > 0) {
        obj.insert(QString("resources"), ::OpenAPI::toJsonValue(m_resources));
    }
    if (m_severity_isSet) {
        obj.insert(QString("severity"), ::OpenAPI::toJsonValue(m_severity));
    }
    return obj;
}

QString OAIGoogleCloudDialogflowCxV3beta1ValidationMessage::getDetail() const {
    return m_detail;
}
void OAIGoogleCloudDialogflowCxV3beta1ValidationMessage::setDetail(const QString &detail) {
    m_detail = detail;
    m_detail_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1ValidationMessage::is_detail_Set() const{
    return m_detail_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1ValidationMessage::is_detail_Valid() const{
    return m_detail_isValid;
}

QList<OAIGoogleCloudDialogflowCxV3beta1ResourceName> OAIGoogleCloudDialogflowCxV3beta1ValidationMessage::getResourceNames() const {
    return m_resource_names;
}
void OAIGoogleCloudDialogflowCxV3beta1ValidationMessage::setResourceNames(const QList<OAIGoogleCloudDialogflowCxV3beta1ResourceName> &resource_names) {
    m_resource_names = resource_names;
    m_resource_names_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1ValidationMessage::is_resource_names_Set() const{
    return m_resource_names_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1ValidationMessage::is_resource_names_Valid() const{
    return m_resource_names_isValid;
}

QString OAIGoogleCloudDialogflowCxV3beta1ValidationMessage::getResourceType() const {
    return m_resource_type;
}
void OAIGoogleCloudDialogflowCxV3beta1ValidationMessage::setResourceType(const QString &resource_type) {
    m_resource_type = resource_type;
    m_resource_type_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1ValidationMessage::is_resource_type_Set() const{
    return m_resource_type_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1ValidationMessage::is_resource_type_Valid() const{
    return m_resource_type_isValid;
}

QList<QString> OAIGoogleCloudDialogflowCxV3beta1ValidationMessage::getResources() const {
    return m_resources;
}
void OAIGoogleCloudDialogflowCxV3beta1ValidationMessage::setResources(const QList<QString> &resources) {
    m_resources = resources;
    m_resources_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1ValidationMessage::is_resources_Set() const{
    return m_resources_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1ValidationMessage::is_resources_Valid() const{
    return m_resources_isValid;
}

QString OAIGoogleCloudDialogflowCxV3beta1ValidationMessage::getSeverity() const {
    return m_severity;
}
void OAIGoogleCloudDialogflowCxV3beta1ValidationMessage::setSeverity(const QString &severity) {
    m_severity = severity;
    m_severity_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1ValidationMessage::is_severity_Set() const{
    return m_severity_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1ValidationMessage::is_severity_Valid() const{
    return m_severity_isValid;
}

bool OAIGoogleCloudDialogflowCxV3beta1ValidationMessage::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_detail_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_names.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resources.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_severity_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowCxV3beta1ValidationMessage::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
