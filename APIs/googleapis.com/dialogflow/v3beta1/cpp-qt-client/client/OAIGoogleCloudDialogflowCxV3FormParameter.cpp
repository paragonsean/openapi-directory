/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowCxV3FormParameter.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowCxV3FormParameter::OAIGoogleCloudDialogflowCxV3FormParameter(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowCxV3FormParameter::OAIGoogleCloudDialogflowCxV3FormParameter() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowCxV3FormParameter::~OAIGoogleCloudDialogflowCxV3FormParameter() {}

void OAIGoogleCloudDialogflowCxV3FormParameter::initializeModel() {

    m_advanced_settings_isSet = false;
    m_advanced_settings_isValid = false;

    m_default_value_isSet = false;
    m_default_value_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_entity_type_isSet = false;
    m_entity_type_isValid = false;

    m_fill_behavior_isSet = false;
    m_fill_behavior_isValid = false;

    m_is_list_isSet = false;
    m_is_list_isValid = false;

    m_redact_isSet = false;
    m_redact_isValid = false;

    m_required_isSet = false;
    m_required_isValid = false;
}

void OAIGoogleCloudDialogflowCxV3FormParameter::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowCxV3FormParameter::fromJsonObject(QJsonObject json) {

    m_advanced_settings_isValid = ::OpenAPI::fromJsonValue(m_advanced_settings, json[QString("advancedSettings")]);
    m_advanced_settings_isSet = !json[QString("advancedSettings")].isNull() && m_advanced_settings_isValid;

    m_default_value_isValid = ::OpenAPI::fromJsonValue(m_default_value, json[QString("defaultValue")]);
    m_default_value_isSet = !json[QString("defaultValue")].isNull() && m_default_value_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_entity_type_isValid = ::OpenAPI::fromJsonValue(m_entity_type, json[QString("entityType")]);
    m_entity_type_isSet = !json[QString("entityType")].isNull() && m_entity_type_isValid;

    m_fill_behavior_isValid = ::OpenAPI::fromJsonValue(m_fill_behavior, json[QString("fillBehavior")]);
    m_fill_behavior_isSet = !json[QString("fillBehavior")].isNull() && m_fill_behavior_isValid;

    m_is_list_isValid = ::OpenAPI::fromJsonValue(m_is_list, json[QString("isList")]);
    m_is_list_isSet = !json[QString("isList")].isNull() && m_is_list_isValid;

    m_redact_isValid = ::OpenAPI::fromJsonValue(m_redact, json[QString("redact")]);
    m_redact_isSet = !json[QString("redact")].isNull() && m_redact_isValid;

    m_required_isValid = ::OpenAPI::fromJsonValue(m_required, json[QString("required")]);
    m_required_isSet = !json[QString("required")].isNull() && m_required_isValid;
}

QString OAIGoogleCloudDialogflowCxV3FormParameter::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowCxV3FormParameter::asJsonObject() const {
    QJsonObject obj;
    if (m_advanced_settings.isSet()) {
        obj.insert(QString("advancedSettings"), ::OpenAPI::toJsonValue(m_advanced_settings));
    }
    if (m_default_value_isSet) {
        obj.insert(QString("defaultValue"), ::OpenAPI::toJsonValue(m_default_value));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_entity_type_isSet) {
        obj.insert(QString("entityType"), ::OpenAPI::toJsonValue(m_entity_type));
    }
    if (m_fill_behavior.isSet()) {
        obj.insert(QString("fillBehavior"), ::OpenAPI::toJsonValue(m_fill_behavior));
    }
    if (m_is_list_isSet) {
        obj.insert(QString("isList"), ::OpenAPI::toJsonValue(m_is_list));
    }
    if (m_redact_isSet) {
        obj.insert(QString("redact"), ::OpenAPI::toJsonValue(m_redact));
    }
    if (m_required_isSet) {
        obj.insert(QString("required"), ::OpenAPI::toJsonValue(m_required));
    }
    return obj;
}

OAIGoogleCloudDialogflowCxV3AdvancedSettings OAIGoogleCloudDialogflowCxV3FormParameter::getAdvancedSettings() const {
    return m_advanced_settings;
}
void OAIGoogleCloudDialogflowCxV3FormParameter::setAdvancedSettings(const OAIGoogleCloudDialogflowCxV3AdvancedSettings &advanced_settings) {
    m_advanced_settings = advanced_settings;
    m_advanced_settings_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3FormParameter::is_advanced_settings_Set() const{
    return m_advanced_settings_isSet;
}

bool OAIGoogleCloudDialogflowCxV3FormParameter::is_advanced_settings_Valid() const{
    return m_advanced_settings_isValid;
}

QJsonValue OAIGoogleCloudDialogflowCxV3FormParameter::getDefaultValue() const {
    return m_default_value;
}
void OAIGoogleCloudDialogflowCxV3FormParameter::setDefaultValue(const QJsonValue &default_value) {
    m_default_value = default_value;
    m_default_value_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3FormParameter::is_default_value_Set() const{
    return m_default_value_isSet;
}

bool OAIGoogleCloudDialogflowCxV3FormParameter::is_default_value_Valid() const{
    return m_default_value_isValid;
}

QString OAIGoogleCloudDialogflowCxV3FormParameter::getDisplayName() const {
    return m_display_name;
}
void OAIGoogleCloudDialogflowCxV3FormParameter::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3FormParameter::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGoogleCloudDialogflowCxV3FormParameter::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QString OAIGoogleCloudDialogflowCxV3FormParameter::getEntityType() const {
    return m_entity_type;
}
void OAIGoogleCloudDialogflowCxV3FormParameter::setEntityType(const QString &entity_type) {
    m_entity_type = entity_type;
    m_entity_type_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3FormParameter::is_entity_type_Set() const{
    return m_entity_type_isSet;
}

bool OAIGoogleCloudDialogflowCxV3FormParameter::is_entity_type_Valid() const{
    return m_entity_type_isValid;
}

OAIGoogleCloudDialogflowCxV3FormParameterFillBehavior OAIGoogleCloudDialogflowCxV3FormParameter::getFillBehavior() const {
    return m_fill_behavior;
}
void OAIGoogleCloudDialogflowCxV3FormParameter::setFillBehavior(const OAIGoogleCloudDialogflowCxV3FormParameterFillBehavior &fill_behavior) {
    m_fill_behavior = fill_behavior;
    m_fill_behavior_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3FormParameter::is_fill_behavior_Set() const{
    return m_fill_behavior_isSet;
}

bool OAIGoogleCloudDialogflowCxV3FormParameter::is_fill_behavior_Valid() const{
    return m_fill_behavior_isValid;
}

bool OAIGoogleCloudDialogflowCxV3FormParameter::isIsList() const {
    return m_is_list;
}
void OAIGoogleCloudDialogflowCxV3FormParameter::setIsList(const bool &is_list) {
    m_is_list = is_list;
    m_is_list_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3FormParameter::is_is_list_Set() const{
    return m_is_list_isSet;
}

bool OAIGoogleCloudDialogflowCxV3FormParameter::is_is_list_Valid() const{
    return m_is_list_isValid;
}

bool OAIGoogleCloudDialogflowCxV3FormParameter::isRedact() const {
    return m_redact;
}
void OAIGoogleCloudDialogflowCxV3FormParameter::setRedact(const bool &redact) {
    m_redact = redact;
    m_redact_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3FormParameter::is_redact_Set() const{
    return m_redact_isSet;
}

bool OAIGoogleCloudDialogflowCxV3FormParameter::is_redact_Valid() const{
    return m_redact_isValid;
}

bool OAIGoogleCloudDialogflowCxV3FormParameter::isRequired() const {
    return m_required;
}
void OAIGoogleCloudDialogflowCxV3FormParameter::setRequired(const bool &required) {
    m_required = required;
    m_required_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3FormParameter::is_required_Set() const{
    return m_required_isSet;
}

bool OAIGoogleCloudDialogflowCxV3FormParameter::is_required_Valid() const{
    return m_required_isValid;
}

bool OAIGoogleCloudDialogflowCxV3FormParameter::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_advanced_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_default_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_entity_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fill_behavior.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_list_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_redact_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_required_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowCxV3FormParameter::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
