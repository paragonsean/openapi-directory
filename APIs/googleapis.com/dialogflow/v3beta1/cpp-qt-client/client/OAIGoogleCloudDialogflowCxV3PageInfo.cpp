/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowCxV3PageInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowCxV3PageInfo::OAIGoogleCloudDialogflowCxV3PageInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowCxV3PageInfo::OAIGoogleCloudDialogflowCxV3PageInfo() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowCxV3PageInfo::~OAIGoogleCloudDialogflowCxV3PageInfo() {}

void OAIGoogleCloudDialogflowCxV3PageInfo::initializeModel() {

    m_current_page_isSet = false;
    m_current_page_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_form_info_isSet = false;
    m_form_info_isValid = false;
}

void OAIGoogleCloudDialogflowCxV3PageInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowCxV3PageInfo::fromJsonObject(QJsonObject json) {

    m_current_page_isValid = ::OpenAPI::fromJsonValue(m_current_page, json[QString("currentPage")]);
    m_current_page_isSet = !json[QString("currentPage")].isNull() && m_current_page_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_form_info_isValid = ::OpenAPI::fromJsonValue(m_form_info, json[QString("formInfo")]);
    m_form_info_isSet = !json[QString("formInfo")].isNull() && m_form_info_isValid;
}

QString OAIGoogleCloudDialogflowCxV3PageInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowCxV3PageInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_current_page_isSet) {
        obj.insert(QString("currentPage"), ::OpenAPI::toJsonValue(m_current_page));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_form_info.isSet()) {
        obj.insert(QString("formInfo"), ::OpenAPI::toJsonValue(m_form_info));
    }
    return obj;
}

QString OAIGoogleCloudDialogflowCxV3PageInfo::getCurrentPage() const {
    return m_current_page;
}
void OAIGoogleCloudDialogflowCxV3PageInfo::setCurrentPage(const QString &current_page) {
    m_current_page = current_page;
    m_current_page_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3PageInfo::is_current_page_Set() const{
    return m_current_page_isSet;
}

bool OAIGoogleCloudDialogflowCxV3PageInfo::is_current_page_Valid() const{
    return m_current_page_isValid;
}

QString OAIGoogleCloudDialogflowCxV3PageInfo::getDisplayName() const {
    return m_display_name;
}
void OAIGoogleCloudDialogflowCxV3PageInfo::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3PageInfo::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGoogleCloudDialogflowCxV3PageInfo::is_display_name_Valid() const{
    return m_display_name_isValid;
}

OAIGoogleCloudDialogflowCxV3PageInfoFormInfo OAIGoogleCloudDialogflowCxV3PageInfo::getFormInfo() const {
    return m_form_info;
}
void OAIGoogleCloudDialogflowCxV3PageInfo::setFormInfo(const OAIGoogleCloudDialogflowCxV3PageInfoFormInfo &form_info) {
    m_form_info = form_info;
    m_form_info_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3PageInfo::is_form_info_Set() const{
    return m_form_info_isSet;
}

bool OAIGoogleCloudDialogflowCxV3PageInfo::is_form_info_Valid() const{
    return m_form_info_isValid;
}

bool OAIGoogleCloudDialogflowCxV3PageInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_current_page_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_form_info.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowCxV3PageInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
