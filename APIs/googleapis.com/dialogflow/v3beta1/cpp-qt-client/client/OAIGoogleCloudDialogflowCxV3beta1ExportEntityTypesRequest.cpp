/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowCxV3beta1ExportEntityTypesRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowCxV3beta1ExportEntityTypesRequest::OAIGoogleCloudDialogflowCxV3beta1ExportEntityTypesRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowCxV3beta1ExportEntityTypesRequest::OAIGoogleCloudDialogflowCxV3beta1ExportEntityTypesRequest() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowCxV3beta1ExportEntityTypesRequest::~OAIGoogleCloudDialogflowCxV3beta1ExportEntityTypesRequest() {}

void OAIGoogleCloudDialogflowCxV3beta1ExportEntityTypesRequest::initializeModel() {

    m_data_format_isSet = false;
    m_data_format_isValid = false;

    m_entity_types_isSet = false;
    m_entity_types_isValid = false;

    m_entity_types_content_inline_isSet = false;
    m_entity_types_content_inline_isValid = false;

    m_entity_types_uri_isSet = false;
    m_entity_types_uri_isValid = false;

    m_language_code_isSet = false;
    m_language_code_isValid = false;
}

void OAIGoogleCloudDialogflowCxV3beta1ExportEntityTypesRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowCxV3beta1ExportEntityTypesRequest::fromJsonObject(QJsonObject json) {

    m_data_format_isValid = ::OpenAPI::fromJsonValue(m_data_format, json[QString("dataFormat")]);
    m_data_format_isSet = !json[QString("dataFormat")].isNull() && m_data_format_isValid;

    m_entity_types_isValid = ::OpenAPI::fromJsonValue(m_entity_types, json[QString("entityTypes")]);
    m_entity_types_isSet = !json[QString("entityTypes")].isNull() && m_entity_types_isValid;

    m_entity_types_content_inline_isValid = ::OpenAPI::fromJsonValue(m_entity_types_content_inline, json[QString("entityTypesContentInline")]);
    m_entity_types_content_inline_isSet = !json[QString("entityTypesContentInline")].isNull() && m_entity_types_content_inline_isValid;

    m_entity_types_uri_isValid = ::OpenAPI::fromJsonValue(m_entity_types_uri, json[QString("entityTypesUri")]);
    m_entity_types_uri_isSet = !json[QString("entityTypesUri")].isNull() && m_entity_types_uri_isValid;

    m_language_code_isValid = ::OpenAPI::fromJsonValue(m_language_code, json[QString("languageCode")]);
    m_language_code_isSet = !json[QString("languageCode")].isNull() && m_language_code_isValid;
}

QString OAIGoogleCloudDialogflowCxV3beta1ExportEntityTypesRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowCxV3beta1ExportEntityTypesRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_data_format_isSet) {
        obj.insert(QString("dataFormat"), ::OpenAPI::toJsonValue(m_data_format));
    }
    if (m_entity_types.size() > 0) {
        obj.insert(QString("entityTypes"), ::OpenAPI::toJsonValue(m_entity_types));
    }
    if (m_entity_types_content_inline_isSet) {
        obj.insert(QString("entityTypesContentInline"), ::OpenAPI::toJsonValue(m_entity_types_content_inline));
    }
    if (m_entity_types_uri_isSet) {
        obj.insert(QString("entityTypesUri"), ::OpenAPI::toJsonValue(m_entity_types_uri));
    }
    if (m_language_code_isSet) {
        obj.insert(QString("languageCode"), ::OpenAPI::toJsonValue(m_language_code));
    }
    return obj;
}

QString OAIGoogleCloudDialogflowCxV3beta1ExportEntityTypesRequest::getDataFormat() const {
    return m_data_format;
}
void OAIGoogleCloudDialogflowCxV3beta1ExportEntityTypesRequest::setDataFormat(const QString &data_format) {
    m_data_format = data_format;
    m_data_format_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1ExportEntityTypesRequest::is_data_format_Set() const{
    return m_data_format_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1ExportEntityTypesRequest::is_data_format_Valid() const{
    return m_data_format_isValid;
}

QList<QString> OAIGoogleCloudDialogflowCxV3beta1ExportEntityTypesRequest::getEntityTypes() const {
    return m_entity_types;
}
void OAIGoogleCloudDialogflowCxV3beta1ExportEntityTypesRequest::setEntityTypes(const QList<QString> &entity_types) {
    m_entity_types = entity_types;
    m_entity_types_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1ExportEntityTypesRequest::is_entity_types_Set() const{
    return m_entity_types_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1ExportEntityTypesRequest::is_entity_types_Valid() const{
    return m_entity_types_isValid;
}

bool OAIGoogleCloudDialogflowCxV3beta1ExportEntityTypesRequest::isEntityTypesContentInline() const {
    return m_entity_types_content_inline;
}
void OAIGoogleCloudDialogflowCxV3beta1ExportEntityTypesRequest::setEntityTypesContentInline(const bool &entity_types_content_inline) {
    m_entity_types_content_inline = entity_types_content_inline;
    m_entity_types_content_inline_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1ExportEntityTypesRequest::is_entity_types_content_inline_Set() const{
    return m_entity_types_content_inline_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1ExportEntityTypesRequest::is_entity_types_content_inline_Valid() const{
    return m_entity_types_content_inline_isValid;
}

QString OAIGoogleCloudDialogflowCxV3beta1ExportEntityTypesRequest::getEntityTypesUri() const {
    return m_entity_types_uri;
}
void OAIGoogleCloudDialogflowCxV3beta1ExportEntityTypesRequest::setEntityTypesUri(const QString &entity_types_uri) {
    m_entity_types_uri = entity_types_uri;
    m_entity_types_uri_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1ExportEntityTypesRequest::is_entity_types_uri_Set() const{
    return m_entity_types_uri_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1ExportEntityTypesRequest::is_entity_types_uri_Valid() const{
    return m_entity_types_uri_isValid;
}

QString OAIGoogleCloudDialogflowCxV3beta1ExportEntityTypesRequest::getLanguageCode() const {
    return m_language_code;
}
void OAIGoogleCloudDialogflowCxV3beta1ExportEntityTypesRequest::setLanguageCode(const QString &language_code) {
    m_language_code = language_code;
    m_language_code_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1ExportEntityTypesRequest::is_language_code_Set() const{
    return m_language_code_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1ExportEntityTypesRequest::is_language_code_Valid() const{
    return m_language_code_isValid;
}

bool OAIGoogleCloudDialogflowCxV3beta1ExportEntityTypesRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_data_format_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_entity_types.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_entity_types_content_inline_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_entity_types_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_language_code_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowCxV3beta1ExportEntityTypesRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
