# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDialogflowV2ClearSuggestionFeatureConfigRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, participant_role: str=None, suggestion_feature_type: str=None):
        """GoogleCloudDialogflowV2ClearSuggestionFeatureConfigRequest - a model defined in OpenAPI

        :param participant_role: The participant_role of this GoogleCloudDialogflowV2ClearSuggestionFeatureConfigRequest.
        :param suggestion_feature_type: The suggestion_feature_type of this GoogleCloudDialogflowV2ClearSuggestionFeatureConfigRequest.
        """
        self.openapi_types = {
            'participant_role': str,
            'suggestion_feature_type': str
        }

        self.attribute_map = {
            'participant_role': 'participantRole',
            'suggestion_feature_type': 'suggestionFeatureType'
        }

        self._participant_role = participant_role
        self._suggestion_feature_type = suggestion_feature_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDialogflowV2ClearSuggestionFeatureConfigRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDialogflowV2ClearSuggestionFeatureConfigRequest of this GoogleCloudDialogflowV2ClearSuggestionFeatureConfigRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def participant_role(self):
        """Gets the participant_role of this GoogleCloudDialogflowV2ClearSuggestionFeatureConfigRequest.

        Required. The participant role to remove the suggestion feature config. Only HUMAN_AGENT or END_USER can be used.

        :return: The participant_role of this GoogleCloudDialogflowV2ClearSuggestionFeatureConfigRequest.
        :rtype: str
        """
        return self._participant_role

    @participant_role.setter
    def participant_role(self, participant_role):
        """Sets the participant_role of this GoogleCloudDialogflowV2ClearSuggestionFeatureConfigRequest.

        Required. The participant role to remove the suggestion feature config. Only HUMAN_AGENT or END_USER can be used.

        :param participant_role: The participant_role of this GoogleCloudDialogflowV2ClearSuggestionFeatureConfigRequest.
        :type participant_role: str
        """
        allowed_values = ["ROLE_UNSPECIFIED", "HUMAN_AGENT", "AUTOMATED_AGENT", "END_USER"]  # noqa: E501
        if participant_role not in allowed_values:
            raise ValueError(
                "Invalid value for `participant_role` ({0}), must be one of {1}"
                .format(participant_role, allowed_values)
            )

        self._participant_role = participant_role

    @property
    def suggestion_feature_type(self):
        """Gets the suggestion_feature_type of this GoogleCloudDialogflowV2ClearSuggestionFeatureConfigRequest.

        Required. The type of the suggestion feature to remove.

        :return: The suggestion_feature_type of this GoogleCloudDialogflowV2ClearSuggestionFeatureConfigRequest.
        :rtype: str
        """
        return self._suggestion_feature_type

    @suggestion_feature_type.setter
    def suggestion_feature_type(self, suggestion_feature_type):
        """Sets the suggestion_feature_type of this GoogleCloudDialogflowV2ClearSuggestionFeatureConfigRequest.

        Required. The type of the suggestion feature to remove.

        :param suggestion_feature_type: The suggestion_feature_type of this GoogleCloudDialogflowV2ClearSuggestionFeatureConfigRequest.
        :type suggestion_feature_type: str
        """
        allowed_values = ["TYPE_UNSPECIFIED", "ARTICLE_SUGGESTION", "FAQ", "SMART_REPLY", "KNOWLEDGE_SEARCH"]  # noqa: E501
        if suggestion_feature_type not in allowed_values:
            raise ValueError(
                "Invalid value for `suggestion_feature_type` ({0}), must be one of {1}"
                .format(suggestion_feature_type, allowed_values)
            )

        self._suggestion_feature_type = suggestion_feature_type
