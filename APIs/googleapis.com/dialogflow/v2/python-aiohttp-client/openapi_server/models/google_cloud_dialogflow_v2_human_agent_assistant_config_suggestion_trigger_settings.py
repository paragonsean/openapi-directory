# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionTriggerSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, no_smalltalk: bool=None, only_end_user: bool=None):
        """GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionTriggerSettings - a model defined in OpenAPI

        :param no_smalltalk: The no_smalltalk of this GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionTriggerSettings.
        :param only_end_user: The only_end_user of this GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionTriggerSettings.
        """
        self.openapi_types = {
            'no_smalltalk': bool,
            'only_end_user': bool
        }

        self.attribute_map = {
            'no_smalltalk': 'noSmalltalk',
            'only_end_user': 'onlyEndUser'
        }

        self._no_smalltalk = no_smalltalk
        self._only_end_user = only_end_user

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionTriggerSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionTriggerSettings of this GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionTriggerSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def no_smalltalk(self):
        """Gets the no_smalltalk of this GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionTriggerSettings.

        Do not trigger if last utterance is small talk.

        :return: The no_smalltalk of this GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionTriggerSettings.
        :rtype: bool
        """
        return self._no_smalltalk

    @no_smalltalk.setter
    def no_smalltalk(self, no_smalltalk):
        """Sets the no_smalltalk of this GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionTriggerSettings.

        Do not trigger if last utterance is small talk.

        :param no_smalltalk: The no_smalltalk of this GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionTriggerSettings.
        :type no_smalltalk: bool
        """

        self._no_smalltalk = no_smalltalk

    @property
    def only_end_user(self):
        """Gets the only_end_user of this GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionTriggerSettings.

        Only trigger suggestion if participant role of last utterance is END_USER.

        :return: The only_end_user of this GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionTriggerSettings.
        :rtype: bool
        """
        return self._only_end_user

    @only_end_user.setter
    def only_end_user(self, only_end_user):
        """Sets the only_end_user of this GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionTriggerSettings.

        Only trigger suggestion if participant role of last utterance is END_USER.

        :param only_end_user: The only_end_user of this GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionTriggerSettings.
        :type only_end_user: bool
        """

        self._only_end_user = only_end_user
