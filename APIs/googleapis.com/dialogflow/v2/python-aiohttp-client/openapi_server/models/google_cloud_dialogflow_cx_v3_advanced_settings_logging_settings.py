# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, enable_interaction_logging: bool=None, enable_stackdriver_logging: bool=None):
        """GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettings - a model defined in OpenAPI

        :param enable_interaction_logging: The enable_interaction_logging of this GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettings.
        :param enable_stackdriver_logging: The enable_stackdriver_logging of this GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettings.
        """
        self.openapi_types = {
            'enable_interaction_logging': bool,
            'enable_stackdriver_logging': bool
        }

        self.attribute_map = {
            'enable_interaction_logging': 'enableInteractionLogging',
            'enable_stackdriver_logging': 'enableStackdriverLogging'
        }

        self._enable_interaction_logging = enable_interaction_logging
        self._enable_stackdriver_logging = enable_stackdriver_logging

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettings of this GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def enable_interaction_logging(self):
        """Gets the enable_interaction_logging of this GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettings.

        If true, DF Interaction logging is currently enabled.

        :return: The enable_interaction_logging of this GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettings.
        :rtype: bool
        """
        return self._enable_interaction_logging

    @enable_interaction_logging.setter
    def enable_interaction_logging(self, enable_interaction_logging):
        """Sets the enable_interaction_logging of this GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettings.

        If true, DF Interaction logging is currently enabled.

        :param enable_interaction_logging: The enable_interaction_logging of this GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettings.
        :type enable_interaction_logging: bool
        """

        self._enable_interaction_logging = enable_interaction_logging

    @property
    def enable_stackdriver_logging(self):
        """Gets the enable_stackdriver_logging of this GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettings.

        If true, StackDriver logging is currently enabled.

        :return: The enable_stackdriver_logging of this GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettings.
        :rtype: bool
        """
        return self._enable_stackdriver_logging

    @enable_stackdriver_logging.setter
    def enable_stackdriver_logging(self, enable_stackdriver_logging):
        """Sets the enable_stackdriver_logging of this GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettings.

        If true, StackDriver logging is currently enabled.

        :param enable_stackdriver_logging: The enable_stackdriver_logging of this GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettings.
        :type enable_stackdriver_logging: bool
        """

        self._enable_stackdriver_logging = enable_stackdriver_logging
