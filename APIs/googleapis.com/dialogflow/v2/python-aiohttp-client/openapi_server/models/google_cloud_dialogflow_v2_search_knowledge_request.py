# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_dialogflow_v2_text_input import GoogleCloudDialogflowV2TextInput
from openapi_server import util


class GoogleCloudDialogflowV2SearchKnowledgeRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, conversation: str=None, conversation_profile: str=None, latest_message: str=None, parent: str=None, query: GoogleCloudDialogflowV2TextInput=None, session_id: str=None):
        """GoogleCloudDialogflowV2SearchKnowledgeRequest - a model defined in OpenAPI

        :param conversation: The conversation of this GoogleCloudDialogflowV2SearchKnowledgeRequest.
        :param conversation_profile: The conversation_profile of this GoogleCloudDialogflowV2SearchKnowledgeRequest.
        :param latest_message: The latest_message of this GoogleCloudDialogflowV2SearchKnowledgeRequest.
        :param parent: The parent of this GoogleCloudDialogflowV2SearchKnowledgeRequest.
        :param query: The query of this GoogleCloudDialogflowV2SearchKnowledgeRequest.
        :param session_id: The session_id of this GoogleCloudDialogflowV2SearchKnowledgeRequest.
        """
        self.openapi_types = {
            'conversation': str,
            'conversation_profile': str,
            'latest_message': str,
            'parent': str,
            'query': GoogleCloudDialogflowV2TextInput,
            'session_id': str
        }

        self.attribute_map = {
            'conversation': 'conversation',
            'conversation_profile': 'conversationProfile',
            'latest_message': 'latestMessage',
            'parent': 'parent',
            'query': 'query',
            'session_id': 'sessionId'
        }

        self._conversation = conversation
        self._conversation_profile = conversation_profile
        self._latest_message = latest_message
        self._parent = parent
        self._query = query
        self._session_id = session_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDialogflowV2SearchKnowledgeRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDialogflowV2SearchKnowledgeRequest of this GoogleCloudDialogflowV2SearchKnowledgeRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def conversation(self):
        """Gets the conversation of this GoogleCloudDialogflowV2SearchKnowledgeRequest.

        The conversation (between human agent and end user) where the search request is triggered. Format: `projects//locations//conversations/`.

        :return: The conversation of this GoogleCloudDialogflowV2SearchKnowledgeRequest.
        :rtype: str
        """
        return self._conversation

    @conversation.setter
    def conversation(self, conversation):
        """Sets the conversation of this GoogleCloudDialogflowV2SearchKnowledgeRequest.

        The conversation (between human agent and end user) where the search request is triggered. Format: `projects//locations//conversations/`.

        :param conversation: The conversation of this GoogleCloudDialogflowV2SearchKnowledgeRequest.
        :type conversation: str
        """

        self._conversation = conversation

    @property
    def conversation_profile(self):
        """Gets the conversation_profile of this GoogleCloudDialogflowV2SearchKnowledgeRequest.

        Required. The conversation profile used to configure the search. Format: `projects//locations//conversationProfiles/`.

        :return: The conversation_profile of this GoogleCloudDialogflowV2SearchKnowledgeRequest.
        :rtype: str
        """
        return self._conversation_profile

    @conversation_profile.setter
    def conversation_profile(self, conversation_profile):
        """Sets the conversation_profile of this GoogleCloudDialogflowV2SearchKnowledgeRequest.

        Required. The conversation profile used to configure the search. Format: `projects//locations//conversationProfiles/`.

        :param conversation_profile: The conversation_profile of this GoogleCloudDialogflowV2SearchKnowledgeRequest.
        :type conversation_profile: str
        """

        self._conversation_profile = conversation_profile

    @property
    def latest_message(self):
        """Gets the latest_message of this GoogleCloudDialogflowV2SearchKnowledgeRequest.

        The name of the latest conversation message when the request is triggered. Format: `projects//locations//conversations//messages/`.

        :return: The latest_message of this GoogleCloudDialogflowV2SearchKnowledgeRequest.
        :rtype: str
        """
        return self._latest_message

    @latest_message.setter
    def latest_message(self, latest_message):
        """Sets the latest_message of this GoogleCloudDialogflowV2SearchKnowledgeRequest.

        The name of the latest conversation message when the request is triggered. Format: `projects//locations//conversations//messages/`.

        :param latest_message: The latest_message of this GoogleCloudDialogflowV2SearchKnowledgeRequest.
        :type latest_message: str
        """

        self._latest_message = latest_message

    @property
    def parent(self):
        """Gets the parent of this GoogleCloudDialogflowV2SearchKnowledgeRequest.

        The parent resource contains the conversation profile Format: 'projects/' or `projects//locations/`.

        :return: The parent of this GoogleCloudDialogflowV2SearchKnowledgeRequest.
        :rtype: str
        """
        return self._parent

    @parent.setter
    def parent(self, parent):
        """Sets the parent of this GoogleCloudDialogflowV2SearchKnowledgeRequest.

        The parent resource contains the conversation profile Format: 'projects/' or `projects//locations/`.

        :param parent: The parent of this GoogleCloudDialogflowV2SearchKnowledgeRequest.
        :type parent: str
        """

        self._parent = parent

    @property
    def query(self):
        """Gets the query of this GoogleCloudDialogflowV2SearchKnowledgeRequest.


        :return: The query of this GoogleCloudDialogflowV2SearchKnowledgeRequest.
        :rtype: GoogleCloudDialogflowV2TextInput
        """
        return self._query

    @query.setter
    def query(self, query):
        """Sets the query of this GoogleCloudDialogflowV2SearchKnowledgeRequest.


        :param query: The query of this GoogleCloudDialogflowV2SearchKnowledgeRequest.
        :type query: GoogleCloudDialogflowV2TextInput
        """

        self._query = query

    @property
    def session_id(self):
        """Gets the session_id of this GoogleCloudDialogflowV2SearchKnowledgeRequest.

        The ID of the search session. The session_id can be combined with Dialogflow V3 Agent ID retrieved from conversation profile or on its own to identify a search session. The search history of the same session will impact the search result. It's up to the API caller to choose an appropriate `Session ID`. It can be a random number or some type of session identifiers (preferably hashed). The length must not exceed 36 characters.

        :return: The session_id of this GoogleCloudDialogflowV2SearchKnowledgeRequest.
        :rtype: str
        """
        return self._session_id

    @session_id.setter
    def session_id(self, session_id):
        """Sets the session_id of this GoogleCloudDialogflowV2SearchKnowledgeRequest.

        The ID of the search session. The session_id can be combined with Dialogflow V3 Agent ID retrieved from conversation profile or on its own to identify a search session. The search history of the same session will impact the search result. It's up to the API caller to choose an appropriate `Session ID`. It can be a random number or some type of session identifiers (preferably hashed). The length must not exceed 36 characters.

        :param session_id: The session_id of this GoogleCloudDialogflowV2SearchKnowledgeRequest.
        :type session_id: str
        """

        self._session_id = session_id
