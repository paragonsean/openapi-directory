# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_dialogflow_v2_gcs_destination import GoogleCloudDialogflowV2GcsDestination
from openapi_server import util


class GoogleCloudDialogflowV2ExportDocumentRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, export_full_content: bool=None, gcs_destination: GoogleCloudDialogflowV2GcsDestination=None, smart_messaging_partial_update: bool=None):
        """GoogleCloudDialogflowV2ExportDocumentRequest - a model defined in OpenAPI

        :param export_full_content: The export_full_content of this GoogleCloudDialogflowV2ExportDocumentRequest.
        :param gcs_destination: The gcs_destination of this GoogleCloudDialogflowV2ExportDocumentRequest.
        :param smart_messaging_partial_update: The smart_messaging_partial_update of this GoogleCloudDialogflowV2ExportDocumentRequest.
        """
        self.openapi_types = {
            'export_full_content': bool,
            'gcs_destination': GoogleCloudDialogflowV2GcsDestination,
            'smart_messaging_partial_update': bool
        }

        self.attribute_map = {
            'export_full_content': 'exportFullContent',
            'gcs_destination': 'gcsDestination',
            'smart_messaging_partial_update': 'smartMessagingPartialUpdate'
        }

        self._export_full_content = export_full_content
        self._gcs_destination = gcs_destination
        self._smart_messaging_partial_update = smart_messaging_partial_update

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDialogflowV2ExportDocumentRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDialogflowV2ExportDocumentRequest of this GoogleCloudDialogflowV2ExportDocumentRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def export_full_content(self):
        """Gets the export_full_content of this GoogleCloudDialogflowV2ExportDocumentRequest.

        When enabled, export the full content of the document including empirical probability.

        :return: The export_full_content of this GoogleCloudDialogflowV2ExportDocumentRequest.
        :rtype: bool
        """
        return self._export_full_content

    @export_full_content.setter
    def export_full_content(self, export_full_content):
        """Sets the export_full_content of this GoogleCloudDialogflowV2ExportDocumentRequest.

        When enabled, export the full content of the document including empirical probability.

        :param export_full_content: The export_full_content of this GoogleCloudDialogflowV2ExportDocumentRequest.
        :type export_full_content: bool
        """

        self._export_full_content = export_full_content

    @property
    def gcs_destination(self):
        """Gets the gcs_destination of this GoogleCloudDialogflowV2ExportDocumentRequest.


        :return: The gcs_destination of this GoogleCloudDialogflowV2ExportDocumentRequest.
        :rtype: GoogleCloudDialogflowV2GcsDestination
        """
        return self._gcs_destination

    @gcs_destination.setter
    def gcs_destination(self, gcs_destination):
        """Sets the gcs_destination of this GoogleCloudDialogflowV2ExportDocumentRequest.


        :param gcs_destination: The gcs_destination of this GoogleCloudDialogflowV2ExportDocumentRequest.
        :type gcs_destination: GoogleCloudDialogflowV2GcsDestination
        """

        self._gcs_destination = gcs_destination

    @property
    def smart_messaging_partial_update(self):
        """Gets the smart_messaging_partial_update of this GoogleCloudDialogflowV2ExportDocumentRequest.

        When enabled, export the smart messaging allowlist document for partial update.

        :return: The smart_messaging_partial_update of this GoogleCloudDialogflowV2ExportDocumentRequest.
        :rtype: bool
        """
        return self._smart_messaging_partial_update

    @smart_messaging_partial_update.setter
    def smart_messaging_partial_update(self, smart_messaging_partial_update):
        """Sets the smart_messaging_partial_update of this GoogleCloudDialogflowV2ExportDocumentRequest.

        When enabled, export the smart messaging allowlist document for partial update.

        :param smart_messaging_partial_update: The smart_messaging_partial_update of this GoogleCloudDialogflowV2ExportDocumentRequest.
        :type smart_messaging_partial_update: bool
        """

        self._smart_messaging_partial_update = smart_messaging_partial_update
