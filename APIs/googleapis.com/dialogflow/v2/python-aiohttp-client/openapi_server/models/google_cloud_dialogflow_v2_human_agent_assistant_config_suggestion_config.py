# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_dialogflow_v2_human_agent_assistant_config_suggestion_feature_config import GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionFeatureConfig
from openapi_server import util


class GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, feature_configs: List[GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionFeatureConfig]=None, group_suggestion_responses: bool=None):
        """GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionConfig - a model defined in OpenAPI

        :param feature_configs: The feature_configs of this GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionConfig.
        :param group_suggestion_responses: The group_suggestion_responses of this GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionConfig.
        """
        self.openapi_types = {
            'feature_configs': List[GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionFeatureConfig],
            'group_suggestion_responses': bool
        }

        self.attribute_map = {
            'feature_configs': 'featureConfigs',
            'group_suggestion_responses': 'groupSuggestionResponses'
        }

        self._feature_configs = feature_configs
        self._group_suggestion_responses = group_suggestion_responses

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionConfig of this GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def feature_configs(self):
        """Gets the feature_configs of this GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionConfig.

        Configuration of different suggestion features. One feature can have only one config.

        :return: The feature_configs of this GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionConfig.
        :rtype: List[GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionFeatureConfig]
        """
        return self._feature_configs

    @feature_configs.setter
    def feature_configs(self, feature_configs):
        """Sets the feature_configs of this GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionConfig.

        Configuration of different suggestion features. One feature can have only one config.

        :param feature_configs: The feature_configs of this GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionConfig.
        :type feature_configs: List[GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionFeatureConfig]
        """

        self._feature_configs = feature_configs

    @property
    def group_suggestion_responses(self):
        """Gets the group_suggestion_responses of this GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionConfig.

        If `group_suggestion_responses` is false, and there are multiple `feature_configs` in `event based suggestion` or StreamingAnalyzeContent, we will try to deliver suggestions to customers as soon as we get new suggestion. Different type of suggestions based on the same context will be in separate Pub/Sub event or `StreamingAnalyzeContentResponse`. If `group_suggestion_responses` set to true. All the suggestions to the same participant based on the same context will be grouped into a single Pub/Sub event or StreamingAnalyzeContentResponse.

        :return: The group_suggestion_responses of this GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionConfig.
        :rtype: bool
        """
        return self._group_suggestion_responses

    @group_suggestion_responses.setter
    def group_suggestion_responses(self, group_suggestion_responses):
        """Sets the group_suggestion_responses of this GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionConfig.

        If `group_suggestion_responses` is false, and there are multiple `feature_configs` in `event based suggestion` or StreamingAnalyzeContent, we will try to deliver suggestions to customers as soon as we get new suggestion. Different type of suggestions based on the same context will be in separate Pub/Sub event or `StreamingAnalyzeContentResponse`. If `group_suggestion_responses` set to true. All the suggestions to the same participant based on the same context will be grouped into a single Pub/Sub event or StreamingAnalyzeContentResponse.

        :param group_suggestion_responses: The group_suggestion_responses of this GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionConfig.
        :type group_suggestion_responses: bool
        """

        self._group_suggestion_responses = group_suggestion_responses
