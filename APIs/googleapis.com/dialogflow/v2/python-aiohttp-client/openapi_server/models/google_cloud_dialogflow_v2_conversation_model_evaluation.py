# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_dialogflow_v2_evaluation_config import GoogleCloudDialogflowV2EvaluationConfig
from openapi_server.models.google_cloud_dialogflow_v2_smart_reply_metrics import GoogleCloudDialogflowV2SmartReplyMetrics
from openapi_server import util


class GoogleCloudDialogflowV2ConversationModelEvaluation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, create_time: str=None, display_name: str=None, evaluation_config: GoogleCloudDialogflowV2EvaluationConfig=None, name: str=None, raw_human_eval_template_csv: str=None, smart_reply_metrics: GoogleCloudDialogflowV2SmartReplyMetrics=None):
        """GoogleCloudDialogflowV2ConversationModelEvaluation - a model defined in OpenAPI

        :param create_time: The create_time of this GoogleCloudDialogflowV2ConversationModelEvaluation.
        :param display_name: The display_name of this GoogleCloudDialogflowV2ConversationModelEvaluation.
        :param evaluation_config: The evaluation_config of this GoogleCloudDialogflowV2ConversationModelEvaluation.
        :param name: The name of this GoogleCloudDialogflowV2ConversationModelEvaluation.
        :param raw_human_eval_template_csv: The raw_human_eval_template_csv of this GoogleCloudDialogflowV2ConversationModelEvaluation.
        :param smart_reply_metrics: The smart_reply_metrics of this GoogleCloudDialogflowV2ConversationModelEvaluation.
        """
        self.openapi_types = {
            'create_time': str,
            'display_name': str,
            'evaluation_config': GoogleCloudDialogflowV2EvaluationConfig,
            'name': str,
            'raw_human_eval_template_csv': str,
            'smart_reply_metrics': GoogleCloudDialogflowV2SmartReplyMetrics
        }

        self.attribute_map = {
            'create_time': 'createTime',
            'display_name': 'displayName',
            'evaluation_config': 'evaluationConfig',
            'name': 'name',
            'raw_human_eval_template_csv': 'rawHumanEvalTemplateCsv',
            'smart_reply_metrics': 'smartReplyMetrics'
        }

        self._create_time = create_time
        self._display_name = display_name
        self._evaluation_config = evaluation_config
        self._name = name
        self._raw_human_eval_template_csv = raw_human_eval_template_csv
        self._smart_reply_metrics = smart_reply_metrics

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDialogflowV2ConversationModelEvaluation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDialogflowV2ConversationModelEvaluation of this GoogleCloudDialogflowV2ConversationModelEvaluation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def create_time(self):
        """Gets the create_time of this GoogleCloudDialogflowV2ConversationModelEvaluation.

        Output only. Creation time of this model.

        :return: The create_time of this GoogleCloudDialogflowV2ConversationModelEvaluation.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this GoogleCloudDialogflowV2ConversationModelEvaluation.

        Output only. Creation time of this model.

        :param create_time: The create_time of this GoogleCloudDialogflowV2ConversationModelEvaluation.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def display_name(self):
        """Gets the display_name of this GoogleCloudDialogflowV2ConversationModelEvaluation.

        Optional. The display name of the model evaluation. At most 64 bytes long.

        :return: The display_name of this GoogleCloudDialogflowV2ConversationModelEvaluation.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this GoogleCloudDialogflowV2ConversationModelEvaluation.

        Optional. The display name of the model evaluation. At most 64 bytes long.

        :param display_name: The display_name of this GoogleCloudDialogflowV2ConversationModelEvaluation.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def evaluation_config(self):
        """Gets the evaluation_config of this GoogleCloudDialogflowV2ConversationModelEvaluation.


        :return: The evaluation_config of this GoogleCloudDialogflowV2ConversationModelEvaluation.
        :rtype: GoogleCloudDialogflowV2EvaluationConfig
        """
        return self._evaluation_config

    @evaluation_config.setter
    def evaluation_config(self, evaluation_config):
        """Sets the evaluation_config of this GoogleCloudDialogflowV2ConversationModelEvaluation.


        :param evaluation_config: The evaluation_config of this GoogleCloudDialogflowV2ConversationModelEvaluation.
        :type evaluation_config: GoogleCloudDialogflowV2EvaluationConfig
        """

        self._evaluation_config = evaluation_config

    @property
    def name(self):
        """Gets the name of this GoogleCloudDialogflowV2ConversationModelEvaluation.

        The resource name of the evaluation. Format: `projects//conversationModels//evaluations/`

        :return: The name of this GoogleCloudDialogflowV2ConversationModelEvaluation.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudDialogflowV2ConversationModelEvaluation.

        The resource name of the evaluation. Format: `projects//conversationModels//evaluations/`

        :param name: The name of this GoogleCloudDialogflowV2ConversationModelEvaluation.
        :type name: str
        """

        self._name = name

    @property
    def raw_human_eval_template_csv(self):
        """Gets the raw_human_eval_template_csv of this GoogleCloudDialogflowV2ConversationModelEvaluation.

        Output only. Human eval template in csv format. It tooks real-world conversations provided through input dataset, generates example suggestions for customer to verify quality of the model. For Smart Reply, the generated csv file contains columns of Context, (Suggestions,Q1,Q2)*3, Actual reply. Context contains at most 10 latest messages in the conversation prior to the current suggestion. Q1: \"Would you send it as the next message of agent?\" Evaluated based on whether the suggest is appropriate to be sent by agent in current context. Q2: \"Does the suggestion move the conversation closer to resolution?\" Evaluated based on whether the suggestion provide solutions, or answers customer's question or collect information from customer to resolve the customer's issue. Actual reply column contains the actual agent reply sent in the context.

        :return: The raw_human_eval_template_csv of this GoogleCloudDialogflowV2ConversationModelEvaluation.
        :rtype: str
        """
        return self._raw_human_eval_template_csv

    @raw_human_eval_template_csv.setter
    def raw_human_eval_template_csv(self, raw_human_eval_template_csv):
        """Sets the raw_human_eval_template_csv of this GoogleCloudDialogflowV2ConversationModelEvaluation.

        Output only. Human eval template in csv format. It tooks real-world conversations provided through input dataset, generates example suggestions for customer to verify quality of the model. For Smart Reply, the generated csv file contains columns of Context, (Suggestions,Q1,Q2)*3, Actual reply. Context contains at most 10 latest messages in the conversation prior to the current suggestion. Q1: \"Would you send it as the next message of agent?\" Evaluated based on whether the suggest is appropriate to be sent by agent in current context. Q2: \"Does the suggestion move the conversation closer to resolution?\" Evaluated based on whether the suggestion provide solutions, or answers customer's question or collect information from customer to resolve the customer's issue. Actual reply column contains the actual agent reply sent in the context.

        :param raw_human_eval_template_csv: The raw_human_eval_template_csv of this GoogleCloudDialogflowV2ConversationModelEvaluation.
        :type raw_human_eval_template_csv: str
        """

        self._raw_human_eval_template_csv = raw_human_eval_template_csv

    @property
    def smart_reply_metrics(self):
        """Gets the smart_reply_metrics of this GoogleCloudDialogflowV2ConversationModelEvaluation.


        :return: The smart_reply_metrics of this GoogleCloudDialogflowV2ConversationModelEvaluation.
        :rtype: GoogleCloudDialogflowV2SmartReplyMetrics
        """
        return self._smart_reply_metrics

    @smart_reply_metrics.setter
    def smart_reply_metrics(self, smart_reply_metrics):
        """Sets the smart_reply_metrics of this GoogleCloudDialogflowV2ConversationModelEvaluation.


        :param smart_reply_metrics: The smart_reply_metrics of this GoogleCloudDialogflowV2ConversationModelEvaluation.
        :type smart_reply_metrics: GoogleCloudDialogflowV2SmartReplyMetrics
        """

        self._smart_reply_metrics = smart_reply_metrics
