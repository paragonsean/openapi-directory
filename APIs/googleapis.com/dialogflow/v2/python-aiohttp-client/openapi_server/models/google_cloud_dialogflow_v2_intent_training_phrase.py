# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_dialogflow_v2_intent_training_phrase_part import GoogleCloudDialogflowV2IntentTrainingPhrasePart
from openapi_server import util


class GoogleCloudDialogflowV2IntentTrainingPhrase(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, parts: List[GoogleCloudDialogflowV2IntentTrainingPhrasePart]=None, times_added_count: int=None, type: str=None):
        """GoogleCloudDialogflowV2IntentTrainingPhrase - a model defined in OpenAPI

        :param name: The name of this GoogleCloudDialogflowV2IntentTrainingPhrase.
        :param parts: The parts of this GoogleCloudDialogflowV2IntentTrainingPhrase.
        :param times_added_count: The times_added_count of this GoogleCloudDialogflowV2IntentTrainingPhrase.
        :param type: The type of this GoogleCloudDialogflowV2IntentTrainingPhrase.
        """
        self.openapi_types = {
            'name': str,
            'parts': List[GoogleCloudDialogflowV2IntentTrainingPhrasePart],
            'times_added_count': int,
            'type': str
        }

        self.attribute_map = {
            'name': 'name',
            'parts': 'parts',
            'times_added_count': 'timesAddedCount',
            'type': 'type'
        }

        self._name = name
        self._parts = parts
        self._times_added_count = times_added_count
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDialogflowV2IntentTrainingPhrase':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDialogflowV2IntentTrainingPhrase of this GoogleCloudDialogflowV2IntentTrainingPhrase.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this GoogleCloudDialogflowV2IntentTrainingPhrase.

        Output only. The unique identifier of this training phrase.

        :return: The name of this GoogleCloudDialogflowV2IntentTrainingPhrase.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudDialogflowV2IntentTrainingPhrase.

        Output only. The unique identifier of this training phrase.

        :param name: The name of this GoogleCloudDialogflowV2IntentTrainingPhrase.
        :type name: str
        """

        self._name = name

    @property
    def parts(self):
        """Gets the parts of this GoogleCloudDialogflowV2IntentTrainingPhrase.

        Required. The ordered list of training phrase parts. The parts are concatenated in order to form the training phrase. Note: The API does not automatically annotate training phrases like the Dialogflow Console does. Note: Do not forget to include whitespace at part boundaries, so the training phrase is well formatted when the parts are concatenated. If the training phrase does not need to be annotated with parameters, you just need a single part with only the Part.text field set. If you want to annotate the training phrase, you must create multiple parts, where the fields of each part are populated in one of two ways: - `Part.text` is set to a part of the phrase that has no parameters. - `Part.text` is set to a part of the phrase that you want to annotate, and the `entity_type`, `alias`, and `user_defined` fields are all set.

        :return: The parts of this GoogleCloudDialogflowV2IntentTrainingPhrase.
        :rtype: List[GoogleCloudDialogflowV2IntentTrainingPhrasePart]
        """
        return self._parts

    @parts.setter
    def parts(self, parts):
        """Sets the parts of this GoogleCloudDialogflowV2IntentTrainingPhrase.

        Required. The ordered list of training phrase parts. The parts are concatenated in order to form the training phrase. Note: The API does not automatically annotate training phrases like the Dialogflow Console does. Note: Do not forget to include whitespace at part boundaries, so the training phrase is well formatted when the parts are concatenated. If the training phrase does not need to be annotated with parameters, you just need a single part with only the Part.text field set. If you want to annotate the training phrase, you must create multiple parts, where the fields of each part are populated in one of two ways: - `Part.text` is set to a part of the phrase that has no parameters. - `Part.text` is set to a part of the phrase that you want to annotate, and the `entity_type`, `alias`, and `user_defined` fields are all set.

        :param parts: The parts of this GoogleCloudDialogflowV2IntentTrainingPhrase.
        :type parts: List[GoogleCloudDialogflowV2IntentTrainingPhrasePart]
        """

        self._parts = parts

    @property
    def times_added_count(self):
        """Gets the times_added_count of this GoogleCloudDialogflowV2IntentTrainingPhrase.

        Optional. Indicates how many times this example was added to the intent. Each time a developer adds an existing sample by editing an intent or training, this counter is increased.

        :return: The times_added_count of this GoogleCloudDialogflowV2IntentTrainingPhrase.
        :rtype: int
        """
        return self._times_added_count

    @times_added_count.setter
    def times_added_count(self, times_added_count):
        """Sets the times_added_count of this GoogleCloudDialogflowV2IntentTrainingPhrase.

        Optional. Indicates how many times this example was added to the intent. Each time a developer adds an existing sample by editing an intent or training, this counter is increased.

        :param times_added_count: The times_added_count of this GoogleCloudDialogflowV2IntentTrainingPhrase.
        :type times_added_count: int
        """

        self._times_added_count = times_added_count

    @property
    def type(self):
        """Gets the type of this GoogleCloudDialogflowV2IntentTrainingPhrase.

        Required. The type of the training phrase.

        :return: The type of this GoogleCloudDialogflowV2IntentTrainingPhrase.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this GoogleCloudDialogflowV2IntentTrainingPhrase.

        Required. The type of the training phrase.

        :param type: The type of this GoogleCloudDialogflowV2IntentTrainingPhrase.
        :type type: str
        """
        allowed_values = ["TYPE_UNSPECIFIED", "EXAMPLE", "TEMPLATE"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type
