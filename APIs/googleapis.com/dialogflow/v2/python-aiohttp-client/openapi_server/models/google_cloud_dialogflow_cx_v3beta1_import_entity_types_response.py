# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_dialogflow_cx_v3beta1_import_entity_types_response_conflicting_resources import GoogleCloudDialogflowCxV3beta1ImportEntityTypesResponseConflictingResources
from openapi_server import util


class GoogleCloudDialogflowCxV3beta1ImportEntityTypesResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, conflicting_resources: GoogleCloudDialogflowCxV3beta1ImportEntityTypesResponseConflictingResources=None, entity_types: List[str]=None):
        """GoogleCloudDialogflowCxV3beta1ImportEntityTypesResponse - a model defined in OpenAPI

        :param conflicting_resources: The conflicting_resources of this GoogleCloudDialogflowCxV3beta1ImportEntityTypesResponse.
        :param entity_types: The entity_types of this GoogleCloudDialogflowCxV3beta1ImportEntityTypesResponse.
        """
        self.openapi_types = {
            'conflicting_resources': GoogleCloudDialogflowCxV3beta1ImportEntityTypesResponseConflictingResources,
            'entity_types': List[str]
        }

        self.attribute_map = {
            'conflicting_resources': 'conflictingResources',
            'entity_types': 'entityTypes'
        }

        self._conflicting_resources = conflicting_resources
        self._entity_types = entity_types

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDialogflowCxV3beta1ImportEntityTypesResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDialogflowCxV3beta1ImportEntityTypesResponse of this GoogleCloudDialogflowCxV3beta1ImportEntityTypesResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def conflicting_resources(self):
        """Gets the conflicting_resources of this GoogleCloudDialogflowCxV3beta1ImportEntityTypesResponse.


        :return: The conflicting_resources of this GoogleCloudDialogflowCxV3beta1ImportEntityTypesResponse.
        :rtype: GoogleCloudDialogflowCxV3beta1ImportEntityTypesResponseConflictingResources
        """
        return self._conflicting_resources

    @conflicting_resources.setter
    def conflicting_resources(self, conflicting_resources):
        """Sets the conflicting_resources of this GoogleCloudDialogflowCxV3beta1ImportEntityTypesResponse.


        :param conflicting_resources: The conflicting_resources of this GoogleCloudDialogflowCxV3beta1ImportEntityTypesResponse.
        :type conflicting_resources: GoogleCloudDialogflowCxV3beta1ImportEntityTypesResponseConflictingResources
        """

        self._conflicting_resources = conflicting_resources

    @property
    def entity_types(self):
        """Gets the entity_types of this GoogleCloudDialogflowCxV3beta1ImportEntityTypesResponse.

        The unique identifier of the imported entity types. Format: `projects//locations//agents//entity_types/`.

        :return: The entity_types of this GoogleCloudDialogflowCxV3beta1ImportEntityTypesResponse.
        :rtype: List[str]
        """
        return self._entity_types

    @entity_types.setter
    def entity_types(self, entity_types):
        """Sets the entity_types of this GoogleCloudDialogflowCxV3beta1ImportEntityTypesResponse.

        The unique identifier of the imported entity types. Format: `projects//locations//agents//entity_types/`.

        :param entity_types: The entity_types of this GoogleCloudDialogflowCxV3beta1ImportEntityTypesResponse.
        :type entity_types: List[str]
        """

        self._entity_types = entity_types
