# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_dialogflow_cx_v3beta1_intent_training_phrase_part import GoogleCloudDialogflowCxV3beta1IntentTrainingPhrasePart
from openapi_server import util


class GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, parts: List[GoogleCloudDialogflowCxV3beta1IntentTrainingPhrasePart]=None, repeat_count: int=None):
        """GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase - a model defined in OpenAPI

        :param id: The id of this GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase.
        :param parts: The parts of this GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase.
        :param repeat_count: The repeat_count of this GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase.
        """
        self.openapi_types = {
            'id': str,
            'parts': List[GoogleCloudDialogflowCxV3beta1IntentTrainingPhrasePart],
            'repeat_count': int
        }

        self.attribute_map = {
            'id': 'id',
            'parts': 'parts',
            'repeat_count': 'repeatCount'
        }

        self._id = id
        self._parts = parts
        self._repeat_count = repeat_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase of this GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase.

        Output only. The unique identifier of the training phrase.

        :return: The id of this GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase.

        Output only. The unique identifier of the training phrase.

        :param id: The id of this GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase.
        :type id: str
        """

        self._id = id

    @property
    def parts(self):
        """Gets the parts of this GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase.

        Required. The ordered list of training phrase parts. The parts are concatenated in order to form the training phrase. Note: The API does not automatically annotate training phrases like the Dialogflow Console does. Note: Do not forget to include whitespace at part boundaries, so the training phrase is well formatted when the parts are concatenated. If the training phrase does not need to be annotated with parameters, you just need a single part with only the Part.text field set. If you want to annotate the training phrase, you must create multiple parts, where the fields of each part are populated in one of two ways: - `Part.text` is set to a part of the phrase that has no parameters. - `Part.text` is set to a part of the phrase that you want to annotate, and the `parameter_id` field is set.

        :return: The parts of this GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase.
        :rtype: List[GoogleCloudDialogflowCxV3beta1IntentTrainingPhrasePart]
        """
        return self._parts

    @parts.setter
    def parts(self, parts):
        """Sets the parts of this GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase.

        Required. The ordered list of training phrase parts. The parts are concatenated in order to form the training phrase. Note: The API does not automatically annotate training phrases like the Dialogflow Console does. Note: Do not forget to include whitespace at part boundaries, so the training phrase is well formatted when the parts are concatenated. If the training phrase does not need to be annotated with parameters, you just need a single part with only the Part.text field set. If you want to annotate the training phrase, you must create multiple parts, where the fields of each part are populated in one of two ways: - `Part.text` is set to a part of the phrase that has no parameters. - `Part.text` is set to a part of the phrase that you want to annotate, and the `parameter_id` field is set.

        :param parts: The parts of this GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase.
        :type parts: List[GoogleCloudDialogflowCxV3beta1IntentTrainingPhrasePart]
        """

        self._parts = parts

    @property
    def repeat_count(self):
        """Gets the repeat_count of this GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase.

        Indicates how many times this example was added to the intent.

        :return: The repeat_count of this GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase.
        :rtype: int
        """
        return self._repeat_count

    @repeat_count.setter
    def repeat_count(self, repeat_count):
        """Sets the repeat_count of this GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase.

        Indicates how many times this example was added to the intent.

        :param repeat_count: The repeat_count of this GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase.
        :type repeat_count: int
        """

        self._repeat_count = repeat_count
