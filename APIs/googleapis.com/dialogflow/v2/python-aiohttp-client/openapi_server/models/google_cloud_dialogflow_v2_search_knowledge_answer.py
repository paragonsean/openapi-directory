# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_dialogflow_v2_search_knowledge_answer_answer_source import GoogleCloudDialogflowV2SearchKnowledgeAnswerAnswerSource
from openapi_server import util


class GoogleCloudDialogflowV2SearchKnowledgeAnswer(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, answer: str=None, answer_record: str=None, answer_sources: List[GoogleCloudDialogflowV2SearchKnowledgeAnswerAnswerSource]=None, answer_type: str=None):
        """GoogleCloudDialogflowV2SearchKnowledgeAnswer - a model defined in OpenAPI

        :param answer: The answer of this GoogleCloudDialogflowV2SearchKnowledgeAnswer.
        :param answer_record: The answer_record of this GoogleCloudDialogflowV2SearchKnowledgeAnswer.
        :param answer_sources: The answer_sources of this GoogleCloudDialogflowV2SearchKnowledgeAnswer.
        :param answer_type: The answer_type of this GoogleCloudDialogflowV2SearchKnowledgeAnswer.
        """
        self.openapi_types = {
            'answer': str,
            'answer_record': str,
            'answer_sources': List[GoogleCloudDialogflowV2SearchKnowledgeAnswerAnswerSource],
            'answer_type': str
        }

        self.attribute_map = {
            'answer': 'answer',
            'answer_record': 'answerRecord',
            'answer_sources': 'answerSources',
            'answer_type': 'answerType'
        }

        self._answer = answer
        self._answer_record = answer_record
        self._answer_sources = answer_sources
        self._answer_type = answer_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDialogflowV2SearchKnowledgeAnswer':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDialogflowV2SearchKnowledgeAnswer of this GoogleCloudDialogflowV2SearchKnowledgeAnswer.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def answer(self):
        """Gets the answer of this GoogleCloudDialogflowV2SearchKnowledgeAnswer.

        The piece of text from the knowledge base documents that answers the search query

        :return: The answer of this GoogleCloudDialogflowV2SearchKnowledgeAnswer.
        :rtype: str
        """
        return self._answer

    @answer.setter
    def answer(self, answer):
        """Sets the answer of this GoogleCloudDialogflowV2SearchKnowledgeAnswer.

        The piece of text from the knowledge base documents that answers the search query

        :param answer: The answer of this GoogleCloudDialogflowV2SearchKnowledgeAnswer.
        :type answer: str
        """

        self._answer = answer

    @property
    def answer_record(self):
        """Gets the answer_record of this GoogleCloudDialogflowV2SearchKnowledgeAnswer.

        The name of the answer record. Format: `projects//locations//answer Records/`

        :return: The answer_record of this GoogleCloudDialogflowV2SearchKnowledgeAnswer.
        :rtype: str
        """
        return self._answer_record

    @answer_record.setter
    def answer_record(self, answer_record):
        """Sets the answer_record of this GoogleCloudDialogflowV2SearchKnowledgeAnswer.

        The name of the answer record. Format: `projects//locations//answer Records/`

        :param answer_record: The answer_record of this GoogleCloudDialogflowV2SearchKnowledgeAnswer.
        :type answer_record: str
        """

        self._answer_record = answer_record

    @property
    def answer_sources(self):
        """Gets the answer_sources of this GoogleCloudDialogflowV2SearchKnowledgeAnswer.

        All sources used to generate the answer.

        :return: The answer_sources of this GoogleCloudDialogflowV2SearchKnowledgeAnswer.
        :rtype: List[GoogleCloudDialogflowV2SearchKnowledgeAnswerAnswerSource]
        """
        return self._answer_sources

    @answer_sources.setter
    def answer_sources(self, answer_sources):
        """Sets the answer_sources of this GoogleCloudDialogflowV2SearchKnowledgeAnswer.

        All sources used to generate the answer.

        :param answer_sources: The answer_sources of this GoogleCloudDialogflowV2SearchKnowledgeAnswer.
        :type answer_sources: List[GoogleCloudDialogflowV2SearchKnowledgeAnswerAnswerSource]
        """

        self._answer_sources = answer_sources

    @property
    def answer_type(self):
        """Gets the answer_type of this GoogleCloudDialogflowV2SearchKnowledgeAnswer.

        The type of the answer.

        :return: The answer_type of this GoogleCloudDialogflowV2SearchKnowledgeAnswer.
        :rtype: str
        """
        return self._answer_type

    @answer_type.setter
    def answer_type(self, answer_type):
        """Sets the answer_type of this GoogleCloudDialogflowV2SearchKnowledgeAnswer.

        The type of the answer.

        :param answer_type: The answer_type of this GoogleCloudDialogflowV2SearchKnowledgeAnswer.
        :type answer_type: str
        """
        allowed_values = ["ANSWER_TYPE_UNSPECIFIED", "FAQ", "GENERATIVE", "INTENT"]  # noqa: E501
        if answer_type not in allowed_values:
            raise ValueError(
                "Invalid value for `answer_type` ({0}), must be one of {1}"
                .format(answer_type, allowed_values)
            )

        self._answer_type = answer_type
