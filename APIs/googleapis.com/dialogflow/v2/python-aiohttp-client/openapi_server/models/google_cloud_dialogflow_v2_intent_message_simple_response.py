# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDialogflowV2IntentMessageSimpleResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, display_text: str=None, ssml: str=None, text_to_speech: str=None):
        """GoogleCloudDialogflowV2IntentMessageSimpleResponse - a model defined in OpenAPI

        :param display_text: The display_text of this GoogleCloudDialogflowV2IntentMessageSimpleResponse.
        :param ssml: The ssml of this GoogleCloudDialogflowV2IntentMessageSimpleResponse.
        :param text_to_speech: The text_to_speech of this GoogleCloudDialogflowV2IntentMessageSimpleResponse.
        """
        self.openapi_types = {
            'display_text': str,
            'ssml': str,
            'text_to_speech': str
        }

        self.attribute_map = {
            'display_text': 'displayText',
            'ssml': 'ssml',
            'text_to_speech': 'textToSpeech'
        }

        self._display_text = display_text
        self._ssml = ssml
        self._text_to_speech = text_to_speech

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDialogflowV2IntentMessageSimpleResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDialogflowV2IntentMessageSimpleResponse of this GoogleCloudDialogflowV2IntentMessageSimpleResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def display_text(self):
        """Gets the display_text of this GoogleCloudDialogflowV2IntentMessageSimpleResponse.

        Optional. The text to display.

        :return: The display_text of this GoogleCloudDialogflowV2IntentMessageSimpleResponse.
        :rtype: str
        """
        return self._display_text

    @display_text.setter
    def display_text(self, display_text):
        """Sets the display_text of this GoogleCloudDialogflowV2IntentMessageSimpleResponse.

        Optional. The text to display.

        :param display_text: The display_text of this GoogleCloudDialogflowV2IntentMessageSimpleResponse.
        :type display_text: str
        """

        self._display_text = display_text

    @property
    def ssml(self):
        """Gets the ssml of this GoogleCloudDialogflowV2IntentMessageSimpleResponse.

        One of text_to_speech or ssml must be provided. Structured spoken response to the user in the SSML format. Mutually exclusive with text_to_speech.

        :return: The ssml of this GoogleCloudDialogflowV2IntentMessageSimpleResponse.
        :rtype: str
        """
        return self._ssml

    @ssml.setter
    def ssml(self, ssml):
        """Sets the ssml of this GoogleCloudDialogflowV2IntentMessageSimpleResponse.

        One of text_to_speech or ssml must be provided. Structured spoken response to the user in the SSML format. Mutually exclusive with text_to_speech.

        :param ssml: The ssml of this GoogleCloudDialogflowV2IntentMessageSimpleResponse.
        :type ssml: str
        """

        self._ssml = ssml

    @property
    def text_to_speech(self):
        """Gets the text_to_speech of this GoogleCloudDialogflowV2IntentMessageSimpleResponse.

        One of text_to_speech or ssml must be provided. The plain text of the speech output. Mutually exclusive with ssml.

        :return: The text_to_speech of this GoogleCloudDialogflowV2IntentMessageSimpleResponse.
        :rtype: str
        """
        return self._text_to_speech

    @text_to_speech.setter
    def text_to_speech(self, text_to_speech):
        """Sets the text_to_speech of this GoogleCloudDialogflowV2IntentMessageSimpleResponse.

        One of text_to_speech or ssml must be provided. The plain text of the speech output. Mutually exclusive with ssml.

        :param text_to_speech: The text_to_speech of this GoogleCloudDialogflowV2IntentMessageSimpleResponse.
        :type text_to_speech: str
        """

        self._text_to_speech = text_to_speech
