# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_dialogflow_v2beta1_message_annotation import GoogleCloudDialogflowV2beta1MessageAnnotation
from openapi_server.models.google_cloud_dialogflow_v2beta1_sentiment_analysis_result import GoogleCloudDialogflowV2beta1SentimentAnalysisResult
from openapi_server import util


class GoogleCloudDialogflowV2beta1Message(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, content: str=None, create_time: str=None, language_code: str=None, message_annotation: GoogleCloudDialogflowV2beta1MessageAnnotation=None, name: str=None, participant: str=None, participant_role: str=None, send_time: str=None, sentiment_analysis: GoogleCloudDialogflowV2beta1SentimentAnalysisResult=None):
        """GoogleCloudDialogflowV2beta1Message - a model defined in OpenAPI

        :param content: The content of this GoogleCloudDialogflowV2beta1Message.
        :param create_time: The create_time of this GoogleCloudDialogflowV2beta1Message.
        :param language_code: The language_code of this GoogleCloudDialogflowV2beta1Message.
        :param message_annotation: The message_annotation of this GoogleCloudDialogflowV2beta1Message.
        :param name: The name of this GoogleCloudDialogflowV2beta1Message.
        :param participant: The participant of this GoogleCloudDialogflowV2beta1Message.
        :param participant_role: The participant_role of this GoogleCloudDialogflowV2beta1Message.
        :param send_time: The send_time of this GoogleCloudDialogflowV2beta1Message.
        :param sentiment_analysis: The sentiment_analysis of this GoogleCloudDialogflowV2beta1Message.
        """
        self.openapi_types = {
            'content': str,
            'create_time': str,
            'language_code': str,
            'message_annotation': GoogleCloudDialogflowV2beta1MessageAnnotation,
            'name': str,
            'participant': str,
            'participant_role': str,
            'send_time': str,
            'sentiment_analysis': GoogleCloudDialogflowV2beta1SentimentAnalysisResult
        }

        self.attribute_map = {
            'content': 'content',
            'create_time': 'createTime',
            'language_code': 'languageCode',
            'message_annotation': 'messageAnnotation',
            'name': 'name',
            'participant': 'participant',
            'participant_role': 'participantRole',
            'send_time': 'sendTime',
            'sentiment_analysis': 'sentimentAnalysis'
        }

        self._content = content
        self._create_time = create_time
        self._language_code = language_code
        self._message_annotation = message_annotation
        self._name = name
        self._participant = participant
        self._participant_role = participant_role
        self._send_time = send_time
        self._sentiment_analysis = sentiment_analysis

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDialogflowV2beta1Message':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDialogflowV2beta1Message of this GoogleCloudDialogflowV2beta1Message.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def content(self):
        """Gets the content of this GoogleCloudDialogflowV2beta1Message.

        Required. The message content.

        :return: The content of this GoogleCloudDialogflowV2beta1Message.
        :rtype: str
        """
        return self._content

    @content.setter
    def content(self, content):
        """Sets the content of this GoogleCloudDialogflowV2beta1Message.

        Required. The message content.

        :param content: The content of this GoogleCloudDialogflowV2beta1Message.
        :type content: str
        """

        self._content = content

    @property
    def create_time(self):
        """Gets the create_time of this GoogleCloudDialogflowV2beta1Message.

        Output only. The time when the message was created in Contact Center AI.

        :return: The create_time of this GoogleCloudDialogflowV2beta1Message.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this GoogleCloudDialogflowV2beta1Message.

        Output only. The time when the message was created in Contact Center AI.

        :param create_time: The create_time of this GoogleCloudDialogflowV2beta1Message.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def language_code(self):
        """Gets the language_code of this GoogleCloudDialogflowV2beta1Message.

        Optional. The message language. This should be a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: \"en-US\".

        :return: The language_code of this GoogleCloudDialogflowV2beta1Message.
        :rtype: str
        """
        return self._language_code

    @language_code.setter
    def language_code(self, language_code):
        """Sets the language_code of this GoogleCloudDialogflowV2beta1Message.

        Optional. The message language. This should be a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: \"en-US\".

        :param language_code: The language_code of this GoogleCloudDialogflowV2beta1Message.
        :type language_code: str
        """

        self._language_code = language_code

    @property
    def message_annotation(self):
        """Gets the message_annotation of this GoogleCloudDialogflowV2beta1Message.


        :return: The message_annotation of this GoogleCloudDialogflowV2beta1Message.
        :rtype: GoogleCloudDialogflowV2beta1MessageAnnotation
        """
        return self._message_annotation

    @message_annotation.setter
    def message_annotation(self, message_annotation):
        """Sets the message_annotation of this GoogleCloudDialogflowV2beta1Message.


        :param message_annotation: The message_annotation of this GoogleCloudDialogflowV2beta1Message.
        :type message_annotation: GoogleCloudDialogflowV2beta1MessageAnnotation
        """

        self._message_annotation = message_annotation

    @property
    def name(self):
        """Gets the name of this GoogleCloudDialogflowV2beta1Message.

        Optional. The unique identifier of the message. Format: `projects//locations//conversations//messages/`.

        :return: The name of this GoogleCloudDialogflowV2beta1Message.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudDialogflowV2beta1Message.

        Optional. The unique identifier of the message. Format: `projects//locations//conversations//messages/`.

        :param name: The name of this GoogleCloudDialogflowV2beta1Message.
        :type name: str
        """

        self._name = name

    @property
    def participant(self):
        """Gets the participant of this GoogleCloudDialogflowV2beta1Message.

        Output only. The participant that sends this message.

        :return: The participant of this GoogleCloudDialogflowV2beta1Message.
        :rtype: str
        """
        return self._participant

    @participant.setter
    def participant(self, participant):
        """Sets the participant of this GoogleCloudDialogflowV2beta1Message.

        Output only. The participant that sends this message.

        :param participant: The participant of this GoogleCloudDialogflowV2beta1Message.
        :type participant: str
        """

        self._participant = participant

    @property
    def participant_role(self):
        """Gets the participant_role of this GoogleCloudDialogflowV2beta1Message.

        Output only. The role of the participant.

        :return: The participant_role of this GoogleCloudDialogflowV2beta1Message.
        :rtype: str
        """
        return self._participant_role

    @participant_role.setter
    def participant_role(self, participant_role):
        """Sets the participant_role of this GoogleCloudDialogflowV2beta1Message.

        Output only. The role of the participant.

        :param participant_role: The participant_role of this GoogleCloudDialogflowV2beta1Message.
        :type participant_role: str
        """
        allowed_values = ["ROLE_UNSPECIFIED", "HUMAN_AGENT", "AUTOMATED_AGENT", "END_USER"]  # noqa: E501
        if participant_role not in allowed_values:
            raise ValueError(
                "Invalid value for `participant_role` ({0}), must be one of {1}"
                .format(participant_role, allowed_values)
            )

        self._participant_role = participant_role

    @property
    def send_time(self):
        """Gets the send_time of this GoogleCloudDialogflowV2beta1Message.

        Optional. The time when the message was sent.

        :return: The send_time of this GoogleCloudDialogflowV2beta1Message.
        :rtype: str
        """
        return self._send_time

    @send_time.setter
    def send_time(self, send_time):
        """Sets the send_time of this GoogleCloudDialogflowV2beta1Message.

        Optional. The time when the message was sent.

        :param send_time: The send_time of this GoogleCloudDialogflowV2beta1Message.
        :type send_time: str
        """

        self._send_time = send_time

    @property
    def sentiment_analysis(self):
        """Gets the sentiment_analysis of this GoogleCloudDialogflowV2beta1Message.


        :return: The sentiment_analysis of this GoogleCloudDialogflowV2beta1Message.
        :rtype: GoogleCloudDialogflowV2beta1SentimentAnalysisResult
        """
        return self._sentiment_analysis

    @sentiment_analysis.setter
    def sentiment_analysis(self, sentiment_analysis):
        """Sets the sentiment_analysis of this GoogleCloudDialogflowV2beta1Message.


        :param sentiment_analysis: The sentiment_analysis of this GoogleCloudDialogflowV2beta1Message.
        :type sentiment_analysis: GoogleCloudDialogflowV2beta1SentimentAnalysisResult
        """

        self._sentiment_analysis = sentiment_analysis
