# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_dialogflow_v2_agent_assistant_feedback import GoogleCloudDialogflowV2AgentAssistantFeedback
from openapi_server import util


class GoogleCloudDialogflowV2AnswerFeedback(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, agent_assistant_detail_feedback: GoogleCloudDialogflowV2AgentAssistantFeedback=None, click_time: str=None, clicked: bool=None, correctness_level: str=None, display_time: str=None, displayed: bool=None):
        """GoogleCloudDialogflowV2AnswerFeedback - a model defined in OpenAPI

        :param agent_assistant_detail_feedback: The agent_assistant_detail_feedback of this GoogleCloudDialogflowV2AnswerFeedback.
        :param click_time: The click_time of this GoogleCloudDialogflowV2AnswerFeedback.
        :param clicked: The clicked of this GoogleCloudDialogflowV2AnswerFeedback.
        :param correctness_level: The correctness_level of this GoogleCloudDialogflowV2AnswerFeedback.
        :param display_time: The display_time of this GoogleCloudDialogflowV2AnswerFeedback.
        :param displayed: The displayed of this GoogleCloudDialogflowV2AnswerFeedback.
        """
        self.openapi_types = {
            'agent_assistant_detail_feedback': GoogleCloudDialogflowV2AgentAssistantFeedback,
            'click_time': str,
            'clicked': bool,
            'correctness_level': str,
            'display_time': str,
            'displayed': bool
        }

        self.attribute_map = {
            'agent_assistant_detail_feedback': 'agentAssistantDetailFeedback',
            'click_time': 'clickTime',
            'clicked': 'clicked',
            'correctness_level': 'correctnessLevel',
            'display_time': 'displayTime',
            'displayed': 'displayed'
        }

        self._agent_assistant_detail_feedback = agent_assistant_detail_feedback
        self._click_time = click_time
        self._clicked = clicked
        self._correctness_level = correctness_level
        self._display_time = display_time
        self._displayed = displayed

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDialogflowV2AnswerFeedback':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDialogflowV2AnswerFeedback of this GoogleCloudDialogflowV2AnswerFeedback.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def agent_assistant_detail_feedback(self):
        """Gets the agent_assistant_detail_feedback of this GoogleCloudDialogflowV2AnswerFeedback.


        :return: The agent_assistant_detail_feedback of this GoogleCloudDialogflowV2AnswerFeedback.
        :rtype: GoogleCloudDialogflowV2AgentAssistantFeedback
        """
        return self._agent_assistant_detail_feedback

    @agent_assistant_detail_feedback.setter
    def agent_assistant_detail_feedback(self, agent_assistant_detail_feedback):
        """Sets the agent_assistant_detail_feedback of this GoogleCloudDialogflowV2AnswerFeedback.


        :param agent_assistant_detail_feedback: The agent_assistant_detail_feedback of this GoogleCloudDialogflowV2AnswerFeedback.
        :type agent_assistant_detail_feedback: GoogleCloudDialogflowV2AgentAssistantFeedback
        """

        self._agent_assistant_detail_feedback = agent_assistant_detail_feedback

    @property
    def click_time(self):
        """Gets the click_time of this GoogleCloudDialogflowV2AnswerFeedback.

        Time when the answer/item was clicked.

        :return: The click_time of this GoogleCloudDialogflowV2AnswerFeedback.
        :rtype: str
        """
        return self._click_time

    @click_time.setter
    def click_time(self, click_time):
        """Sets the click_time of this GoogleCloudDialogflowV2AnswerFeedback.

        Time when the answer/item was clicked.

        :param click_time: The click_time of this GoogleCloudDialogflowV2AnswerFeedback.
        :type click_time: str
        """

        self._click_time = click_time

    @property
    def clicked(self):
        """Gets the clicked of this GoogleCloudDialogflowV2AnswerFeedback.

        Indicates whether the answer/item was clicked by the human agent or not. Default to false. For knowledge search and knowledge assist, the answer record is considered to be clicked if the answer was copied or any URI was clicked.

        :return: The clicked of this GoogleCloudDialogflowV2AnswerFeedback.
        :rtype: bool
        """
        return self._clicked

    @clicked.setter
    def clicked(self, clicked):
        """Sets the clicked of this GoogleCloudDialogflowV2AnswerFeedback.

        Indicates whether the answer/item was clicked by the human agent or not. Default to false. For knowledge search and knowledge assist, the answer record is considered to be clicked if the answer was copied or any URI was clicked.

        :param clicked: The clicked of this GoogleCloudDialogflowV2AnswerFeedback.
        :type clicked: bool
        """

        self._clicked = clicked

    @property
    def correctness_level(self):
        """Gets the correctness_level of this GoogleCloudDialogflowV2AnswerFeedback.

        The correctness level of the specific answer.

        :return: The correctness_level of this GoogleCloudDialogflowV2AnswerFeedback.
        :rtype: str
        """
        return self._correctness_level

    @correctness_level.setter
    def correctness_level(self, correctness_level):
        """Sets the correctness_level of this GoogleCloudDialogflowV2AnswerFeedback.

        The correctness level of the specific answer.

        :param correctness_level: The correctness_level of this GoogleCloudDialogflowV2AnswerFeedback.
        :type correctness_level: str
        """
        allowed_values = ["CORRECTNESS_LEVEL_UNSPECIFIED", "NOT_CORRECT", "PARTIALLY_CORRECT", "FULLY_CORRECT"]  # noqa: E501
        if correctness_level not in allowed_values:
            raise ValueError(
                "Invalid value for `correctness_level` ({0}), must be one of {1}"
                .format(correctness_level, allowed_values)
            )

        self._correctness_level = correctness_level

    @property
    def display_time(self):
        """Gets the display_time of this GoogleCloudDialogflowV2AnswerFeedback.

        Time when the answer/item was displayed.

        :return: The display_time of this GoogleCloudDialogflowV2AnswerFeedback.
        :rtype: str
        """
        return self._display_time

    @display_time.setter
    def display_time(self, display_time):
        """Sets the display_time of this GoogleCloudDialogflowV2AnswerFeedback.

        Time when the answer/item was displayed.

        :param display_time: The display_time of this GoogleCloudDialogflowV2AnswerFeedback.
        :type display_time: str
        """

        self._display_time = display_time

    @property
    def displayed(self):
        """Gets the displayed of this GoogleCloudDialogflowV2AnswerFeedback.

        Indicates whether the answer/item was displayed to the human agent in the agent desktop UI. Default to false.

        :return: The displayed of this GoogleCloudDialogflowV2AnswerFeedback.
        :rtype: bool
        """
        return self._displayed

    @displayed.setter
    def displayed(self, displayed):
        """Sets the displayed of this GoogleCloudDialogflowV2AnswerFeedback.

        Indicates whether the answer/item was displayed to the human agent in the agent desktop UI. Default to false.

        :param displayed: The displayed of this GoogleCloudDialogflowV2AnswerFeedback.
        :type displayed: bool
        """

        self._displayed = displayed
