/*
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudDialogflowV2FulfillmentFeature;
import org.openapitools.client.model.GoogleCloudDialogflowV2FulfillmentGenericWebService;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * By default, your agent responds to a matched intent with a static response. As an alternative, you can provide a more dynamic response by using fulfillment. When you enable fulfillment for an intent, Dialogflow responds to that intent by calling a service that you define. For example, if an end-user wants to schedule a haircut on Friday, your service can check your database and respond to the end-user with availability information for Friday. For more information, see the [fulfillment guide](https://cloud.google.com/dialogflow/docs/fulfillment-overview).
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:48:05.098863-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDialogflowV2Fulfillment {
  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_ENABLED = "enabled";
  @SerializedName(SERIALIZED_NAME_ENABLED)
  private Boolean enabled;

  public static final String SERIALIZED_NAME_FEATURES = "features";
  @SerializedName(SERIALIZED_NAME_FEATURES)
  private List<GoogleCloudDialogflowV2FulfillmentFeature> features = new ArrayList<>();

  public static final String SERIALIZED_NAME_GENERIC_WEB_SERVICE = "genericWebService";
  @SerializedName(SERIALIZED_NAME_GENERIC_WEB_SERVICE)
  private GoogleCloudDialogflowV2FulfillmentGenericWebService genericWebService;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public GoogleCloudDialogflowV2Fulfillment() {
  }

  public GoogleCloudDialogflowV2Fulfillment displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Optional. The human-readable name of the fulfillment, unique within the agent. This field is not used for Fulfillment in an Environment.
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public GoogleCloudDialogflowV2Fulfillment enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

  /**
   * Optional. Whether fulfillment is enabled.
   * @return enabled
   */
  @javax.annotation.Nullable
  public Boolean getEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  public GoogleCloudDialogflowV2Fulfillment features(List<GoogleCloudDialogflowV2FulfillmentFeature> features) {
    this.features = features;
    return this;
  }

  public GoogleCloudDialogflowV2Fulfillment addFeaturesItem(GoogleCloudDialogflowV2FulfillmentFeature featuresItem) {
    if (this.features == null) {
      this.features = new ArrayList<>();
    }
    this.features.add(featuresItem);
    return this;
  }

  /**
   * Optional. The field defines whether the fulfillment is enabled for certain features.
   * @return features
   */
  @javax.annotation.Nullable
  public List<GoogleCloudDialogflowV2FulfillmentFeature> getFeatures() {
    return features;
  }

  public void setFeatures(List<GoogleCloudDialogflowV2FulfillmentFeature> features) {
    this.features = features;
  }


  public GoogleCloudDialogflowV2Fulfillment genericWebService(GoogleCloudDialogflowV2FulfillmentGenericWebService genericWebService) {
    this.genericWebService = genericWebService;
    return this;
  }

  /**
   * Get genericWebService
   * @return genericWebService
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowV2FulfillmentGenericWebService getGenericWebService() {
    return genericWebService;
  }

  public void setGenericWebService(GoogleCloudDialogflowV2FulfillmentGenericWebService genericWebService) {
    this.genericWebService = genericWebService;
  }


  public GoogleCloudDialogflowV2Fulfillment name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Required. The unique identifier of the fulfillment. Supported formats: - &#x60;projects//agent/fulfillment&#x60; - &#x60;projects//locations//agent/fulfillment&#x60; This field is not used for Fulfillment in an Environment.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDialogflowV2Fulfillment googleCloudDialogflowV2Fulfillment = (GoogleCloudDialogflowV2Fulfillment) o;
    return Objects.equals(this.displayName, googleCloudDialogflowV2Fulfillment.displayName) &&
        Objects.equals(this.enabled, googleCloudDialogflowV2Fulfillment.enabled) &&
        Objects.equals(this.features, googleCloudDialogflowV2Fulfillment.features) &&
        Objects.equals(this.genericWebService, googleCloudDialogflowV2Fulfillment.genericWebService) &&
        Objects.equals(this.name, googleCloudDialogflowV2Fulfillment.name);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, enabled, features, genericWebService, name);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDialogflowV2Fulfillment {\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    features: ").append(toIndentedString(features)).append("\n");
    sb.append("    genericWebService: ").append(toIndentedString(genericWebService)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("displayName");
    openapiFields.add("enabled");
    openapiFields.add("features");
    openapiFields.add("genericWebService");
    openapiFields.add("name");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDialogflowV2Fulfillment
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDialogflowV2Fulfillment.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDialogflowV2Fulfillment is not found in the empty JSON string", GoogleCloudDialogflowV2Fulfillment.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDialogflowV2Fulfillment.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDialogflowV2Fulfillment` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      if (jsonObj.get("features") != null && !jsonObj.get("features").isJsonNull()) {
        JsonArray jsonArrayfeatures = jsonObj.getAsJsonArray("features");
        if (jsonArrayfeatures != null) {
          // ensure the json data is an array
          if (!jsonObj.get("features").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `features` to be an array in the JSON string but got `%s`", jsonObj.get("features").toString()));
          }

          // validate the optional field `features` (array)
          for (int i = 0; i < jsonArrayfeatures.size(); i++) {
            GoogleCloudDialogflowV2FulfillmentFeature.validateJsonElement(jsonArrayfeatures.get(i));
          };
        }
      }
      // validate the optional field `genericWebService`
      if (jsonObj.get("genericWebService") != null && !jsonObj.get("genericWebService").isJsonNull()) {
        GoogleCloudDialogflowV2FulfillmentGenericWebService.validateJsonElement(jsonObj.get("genericWebService"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDialogflowV2Fulfillment.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDialogflowV2Fulfillment' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDialogflowV2Fulfillment> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDialogflowV2Fulfillment.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDialogflowV2Fulfillment>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDialogflowV2Fulfillment value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDialogflowV2Fulfillment read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDialogflowV2Fulfillment given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDialogflowV2Fulfillment
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDialogflowV2Fulfillment
   */
  public static GoogleCloudDialogflowV2Fulfillment fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDialogflowV2Fulfillment.class);
  }

  /**
   * Convert an instance of GoogleCloudDialogflowV2Fulfillment to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

