/*
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.GoogleCloudDialogflowCxV3WebhookRequestIntentInfoIntentParameterValue;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents intent information communicated to the webhook.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:48:05.098863-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDialogflowCxV3WebhookRequestIntentInfo {
  public static final String SERIALIZED_NAME_CONFIDENCE = "confidence";
  @SerializedName(SERIALIZED_NAME_CONFIDENCE)
  private Float confidence;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_LAST_MATCHED_INTENT = "lastMatchedIntent";
  @SerializedName(SERIALIZED_NAME_LAST_MATCHED_INTENT)
  private String lastMatchedIntent;

  public static final String SERIALIZED_NAME_PARAMETERS = "parameters";
  @SerializedName(SERIALIZED_NAME_PARAMETERS)
  private Map<String, GoogleCloudDialogflowCxV3WebhookRequestIntentInfoIntentParameterValue> parameters = new HashMap<>();

  public GoogleCloudDialogflowCxV3WebhookRequestIntentInfo() {
  }

  public GoogleCloudDialogflowCxV3WebhookRequestIntentInfo confidence(Float confidence) {
    this.confidence = confidence;
    return this;
  }

  /**
   * The confidence of the matched intent. Values range from 0.0 (completely uncertain) to 1.0 (completely certain).
   * @return confidence
   */
  @javax.annotation.Nullable
  public Float getConfidence() {
    return confidence;
  }

  public void setConfidence(Float confidence) {
    this.confidence = confidence;
  }


  public GoogleCloudDialogflowCxV3WebhookRequestIntentInfo displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Always present. The display name of the last matched intent.
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public GoogleCloudDialogflowCxV3WebhookRequestIntentInfo lastMatchedIntent(String lastMatchedIntent) {
    this.lastMatchedIntent = lastMatchedIntent;
    return this;
  }

  /**
   * Always present. The unique identifier of the last matched intent. Format: &#x60;projects//locations//agents//intents/&#x60;.
   * @return lastMatchedIntent
   */
  @javax.annotation.Nullable
  public String getLastMatchedIntent() {
    return lastMatchedIntent;
  }

  public void setLastMatchedIntent(String lastMatchedIntent) {
    this.lastMatchedIntent = lastMatchedIntent;
  }


  public GoogleCloudDialogflowCxV3WebhookRequestIntentInfo parameters(Map<String, GoogleCloudDialogflowCxV3WebhookRequestIntentInfoIntentParameterValue> parameters) {
    this.parameters = parameters;
    return this;
  }

  public GoogleCloudDialogflowCxV3WebhookRequestIntentInfo putParametersItem(String key, GoogleCloudDialogflowCxV3WebhookRequestIntentInfoIntentParameterValue parametersItem) {
    if (this.parameters == null) {
      this.parameters = new HashMap<>();
    }
    this.parameters.put(key, parametersItem);
    return this;
  }

  /**
   * Parameters identified as a result of intent matching. This is a map of the name of the identified parameter to the value of the parameter identified from the user&#39;s utterance. All parameters defined in the matched intent that are identified will be surfaced here.
   * @return parameters
   */
  @javax.annotation.Nullable
  public Map<String, GoogleCloudDialogflowCxV3WebhookRequestIntentInfoIntentParameterValue> getParameters() {
    return parameters;
  }

  public void setParameters(Map<String, GoogleCloudDialogflowCxV3WebhookRequestIntentInfoIntentParameterValue> parameters) {
    this.parameters = parameters;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDialogflowCxV3WebhookRequestIntentInfo googleCloudDialogflowCxV3WebhookRequestIntentInfo = (GoogleCloudDialogflowCxV3WebhookRequestIntentInfo) o;
    return Objects.equals(this.confidence, googleCloudDialogflowCxV3WebhookRequestIntentInfo.confidence) &&
        Objects.equals(this.displayName, googleCloudDialogflowCxV3WebhookRequestIntentInfo.displayName) &&
        Objects.equals(this.lastMatchedIntent, googleCloudDialogflowCxV3WebhookRequestIntentInfo.lastMatchedIntent) &&
        Objects.equals(this.parameters, googleCloudDialogflowCxV3WebhookRequestIntentInfo.parameters);
  }

  @Override
  public int hashCode() {
    return Objects.hash(confidence, displayName, lastMatchedIntent, parameters);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDialogflowCxV3WebhookRequestIntentInfo {\n");
    sb.append("    confidence: ").append(toIndentedString(confidence)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    lastMatchedIntent: ").append(toIndentedString(lastMatchedIntent)).append("\n");
    sb.append("    parameters: ").append(toIndentedString(parameters)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("confidence");
    openapiFields.add("displayName");
    openapiFields.add("lastMatchedIntent");
    openapiFields.add("parameters");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDialogflowCxV3WebhookRequestIntentInfo
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDialogflowCxV3WebhookRequestIntentInfo.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDialogflowCxV3WebhookRequestIntentInfo is not found in the empty JSON string", GoogleCloudDialogflowCxV3WebhookRequestIntentInfo.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDialogflowCxV3WebhookRequestIntentInfo.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDialogflowCxV3WebhookRequestIntentInfo` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      if ((jsonObj.get("lastMatchedIntent") != null && !jsonObj.get("lastMatchedIntent").isJsonNull()) && !jsonObj.get("lastMatchedIntent").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastMatchedIntent` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastMatchedIntent").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDialogflowCxV3WebhookRequestIntentInfo.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDialogflowCxV3WebhookRequestIntentInfo' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDialogflowCxV3WebhookRequestIntentInfo> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDialogflowCxV3WebhookRequestIntentInfo.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDialogflowCxV3WebhookRequestIntentInfo>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDialogflowCxV3WebhookRequestIntentInfo value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDialogflowCxV3WebhookRequestIntentInfo read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDialogflowCxV3WebhookRequestIntentInfo given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDialogflowCxV3WebhookRequestIntentInfo
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDialogflowCxV3WebhookRequestIntentInfo
   */
  public static GoogleCloudDialogflowCxV3WebhookRequestIntentInfo fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDialogflowCxV3WebhookRequestIntentInfo.class);
  }

  /**
   * Convert an instance of GoogleCloudDialogflowCxV3WebhookRequestIntentInfo to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

