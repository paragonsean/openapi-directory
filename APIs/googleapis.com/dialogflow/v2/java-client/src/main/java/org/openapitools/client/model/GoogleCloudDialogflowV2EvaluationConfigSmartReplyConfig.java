/*
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Smart reply specific configuration for evaluation job.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:48:05.098863-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDialogflowV2EvaluationConfigSmartReplyConfig {
  public static final String SERIALIZED_NAME_ALLOWLIST_DOCUMENT = "allowlistDocument";
  @SerializedName(SERIALIZED_NAME_ALLOWLIST_DOCUMENT)
  private String allowlistDocument;

  public static final String SERIALIZED_NAME_MAX_RESULT_COUNT = "maxResultCount";
  @SerializedName(SERIALIZED_NAME_MAX_RESULT_COUNT)
  private Integer maxResultCount;

  public GoogleCloudDialogflowV2EvaluationConfigSmartReplyConfig() {
  }

  public GoogleCloudDialogflowV2EvaluationConfigSmartReplyConfig allowlistDocument(String allowlistDocument) {
    this.allowlistDocument = allowlistDocument;
    return this;
  }

  /**
   * The allowlist document resource name. Format: &#x60;projects//knowledgeBases//documents/&#x60;. Only used for smart reply model.
   * @return allowlistDocument
   */
  @javax.annotation.Nullable
  public String getAllowlistDocument() {
    return allowlistDocument;
  }

  public void setAllowlistDocument(String allowlistDocument) {
    this.allowlistDocument = allowlistDocument;
  }


  public GoogleCloudDialogflowV2EvaluationConfigSmartReplyConfig maxResultCount(Integer maxResultCount) {
    this.maxResultCount = maxResultCount;
    return this;
  }

  /**
   * Required. The model to be evaluated can return multiple results with confidence score on each query. These results will be sorted by the descending order of the scores and we only keep the first max_result_count results as the final results to evaluate.
   * @return maxResultCount
   */
  @javax.annotation.Nullable
  public Integer getMaxResultCount() {
    return maxResultCount;
  }

  public void setMaxResultCount(Integer maxResultCount) {
    this.maxResultCount = maxResultCount;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDialogflowV2EvaluationConfigSmartReplyConfig googleCloudDialogflowV2EvaluationConfigSmartReplyConfig = (GoogleCloudDialogflowV2EvaluationConfigSmartReplyConfig) o;
    return Objects.equals(this.allowlistDocument, googleCloudDialogflowV2EvaluationConfigSmartReplyConfig.allowlistDocument) &&
        Objects.equals(this.maxResultCount, googleCloudDialogflowV2EvaluationConfigSmartReplyConfig.maxResultCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allowlistDocument, maxResultCount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDialogflowV2EvaluationConfigSmartReplyConfig {\n");
    sb.append("    allowlistDocument: ").append(toIndentedString(allowlistDocument)).append("\n");
    sb.append("    maxResultCount: ").append(toIndentedString(maxResultCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("allowlistDocument");
    openapiFields.add("maxResultCount");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDialogflowV2EvaluationConfigSmartReplyConfig
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDialogflowV2EvaluationConfigSmartReplyConfig.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDialogflowV2EvaluationConfigSmartReplyConfig is not found in the empty JSON string", GoogleCloudDialogflowV2EvaluationConfigSmartReplyConfig.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDialogflowV2EvaluationConfigSmartReplyConfig.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDialogflowV2EvaluationConfigSmartReplyConfig` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("allowlistDocument") != null && !jsonObj.get("allowlistDocument").isJsonNull()) && !jsonObj.get("allowlistDocument").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `allowlistDocument` to be a primitive type in the JSON string but got `%s`", jsonObj.get("allowlistDocument").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDialogflowV2EvaluationConfigSmartReplyConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDialogflowV2EvaluationConfigSmartReplyConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDialogflowV2EvaluationConfigSmartReplyConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDialogflowV2EvaluationConfigSmartReplyConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDialogflowV2EvaluationConfigSmartReplyConfig>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDialogflowV2EvaluationConfigSmartReplyConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDialogflowV2EvaluationConfigSmartReplyConfig read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDialogflowV2EvaluationConfigSmartReplyConfig given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDialogflowV2EvaluationConfigSmartReplyConfig
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDialogflowV2EvaluationConfigSmartReplyConfig
   */
  public static GoogleCloudDialogflowV2EvaluationConfigSmartReplyConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDialogflowV2EvaluationConfigSmartReplyConfig.class);
  }

  /**
   * Convert an instance of GoogleCloudDialogflowV2EvaluationConfigSmartReplyConfig to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

