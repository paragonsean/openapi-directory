/*
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.GoogleCloudDialogflowV2Context;
import org.openapitools.client.model.GoogleCloudDialogflowV2SentimentAnalysisRequestConfig;
import org.openapitools.client.model.GoogleCloudDialogflowV2SessionEntityType;
import org.openapitools.client.model.GoogleTypeLatLng;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents the parameters of the conversational query.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:48:05.098863-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDialogflowV2QueryParameters {
  public static final String SERIALIZED_NAME_CONTEXTS = "contexts";
  @SerializedName(SERIALIZED_NAME_CONTEXTS)
  private List<GoogleCloudDialogflowV2Context> contexts = new ArrayList<>();

  public static final String SERIALIZED_NAME_GEO_LOCATION = "geoLocation";
  @SerializedName(SERIALIZED_NAME_GEO_LOCATION)
  private GoogleTypeLatLng geoLocation;

  public static final String SERIALIZED_NAME_PAYLOAD = "payload";
  @SerializedName(SERIALIZED_NAME_PAYLOAD)
  private Map<String, Object> payload = new HashMap<>();

  public static final String SERIALIZED_NAME_PLATFORM = "platform";
  @SerializedName(SERIALIZED_NAME_PLATFORM)
  private String platform;

  public static final String SERIALIZED_NAME_RESET_CONTEXTS = "resetContexts";
  @SerializedName(SERIALIZED_NAME_RESET_CONTEXTS)
  private Boolean resetContexts;

  public static final String SERIALIZED_NAME_SENTIMENT_ANALYSIS_REQUEST_CONFIG = "sentimentAnalysisRequestConfig";
  @SerializedName(SERIALIZED_NAME_SENTIMENT_ANALYSIS_REQUEST_CONFIG)
  private GoogleCloudDialogflowV2SentimentAnalysisRequestConfig sentimentAnalysisRequestConfig;

  public static final String SERIALIZED_NAME_SESSION_ENTITY_TYPES = "sessionEntityTypes";
  @SerializedName(SERIALIZED_NAME_SESSION_ENTITY_TYPES)
  private List<GoogleCloudDialogflowV2SessionEntityType> sessionEntityTypes = new ArrayList<>();

  public static final String SERIALIZED_NAME_TIME_ZONE = "timeZone";
  @SerializedName(SERIALIZED_NAME_TIME_ZONE)
  private String timeZone;

  public static final String SERIALIZED_NAME_WEBHOOK_HEADERS = "webhookHeaders";
  @SerializedName(SERIALIZED_NAME_WEBHOOK_HEADERS)
  private Map<String, String> webhookHeaders = new HashMap<>();

  public GoogleCloudDialogflowV2QueryParameters() {
  }

  public GoogleCloudDialogflowV2QueryParameters contexts(List<GoogleCloudDialogflowV2Context> contexts) {
    this.contexts = contexts;
    return this;
  }

  public GoogleCloudDialogflowV2QueryParameters addContextsItem(GoogleCloudDialogflowV2Context contextsItem) {
    if (this.contexts == null) {
      this.contexts = new ArrayList<>();
    }
    this.contexts.add(contextsItem);
    return this;
  }

  /**
   * The collection of contexts to be activated before this query is executed.
   * @return contexts
   */
  @javax.annotation.Nullable
  public List<GoogleCloudDialogflowV2Context> getContexts() {
    return contexts;
  }

  public void setContexts(List<GoogleCloudDialogflowV2Context> contexts) {
    this.contexts = contexts;
  }


  public GoogleCloudDialogflowV2QueryParameters geoLocation(GoogleTypeLatLng geoLocation) {
    this.geoLocation = geoLocation;
    return this;
  }

  /**
   * Get geoLocation
   * @return geoLocation
   */
  @javax.annotation.Nullable
  public GoogleTypeLatLng getGeoLocation() {
    return geoLocation;
  }

  public void setGeoLocation(GoogleTypeLatLng geoLocation) {
    this.geoLocation = geoLocation;
  }


  public GoogleCloudDialogflowV2QueryParameters payload(Map<String, Object> payload) {
    this.payload = payload;
    return this;
  }

  public GoogleCloudDialogflowV2QueryParameters putPayloadItem(String key, Object payloadItem) {
    if (this.payload == null) {
      this.payload = new HashMap<>();
    }
    this.payload.put(key, payloadItem);
    return this;
  }

  /**
   * This field can be used to pass custom data to your webhook. Arbitrary JSON objects are supported. If supplied, the value is used to populate the &#x60;WebhookRequest.original_detect_intent_request.payload&#x60; field sent to your webhook.
   * @return payload
   */
  @javax.annotation.Nullable
  public Map<String, Object> getPayload() {
    return payload;
  }

  public void setPayload(Map<String, Object> payload) {
    this.payload = payload;
  }


  public GoogleCloudDialogflowV2QueryParameters platform(String platform) {
    this.platform = platform;
    return this;
  }

  /**
   * The platform of the virtual agent response messages. If not empty, only emits messages from this platform in the response. Valid values are the enum names of platform.
   * @return platform
   */
  @javax.annotation.Nullable
  public String getPlatform() {
    return platform;
  }

  public void setPlatform(String platform) {
    this.platform = platform;
  }


  public GoogleCloudDialogflowV2QueryParameters resetContexts(Boolean resetContexts) {
    this.resetContexts = resetContexts;
    return this;
  }

  /**
   * Specifies whether to delete all contexts in the current session before the new ones are activated.
   * @return resetContexts
   */
  @javax.annotation.Nullable
  public Boolean getResetContexts() {
    return resetContexts;
  }

  public void setResetContexts(Boolean resetContexts) {
    this.resetContexts = resetContexts;
  }


  public GoogleCloudDialogflowV2QueryParameters sentimentAnalysisRequestConfig(GoogleCloudDialogflowV2SentimentAnalysisRequestConfig sentimentAnalysisRequestConfig) {
    this.sentimentAnalysisRequestConfig = sentimentAnalysisRequestConfig;
    return this;
  }

  /**
   * Get sentimentAnalysisRequestConfig
   * @return sentimentAnalysisRequestConfig
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowV2SentimentAnalysisRequestConfig getSentimentAnalysisRequestConfig() {
    return sentimentAnalysisRequestConfig;
  }

  public void setSentimentAnalysisRequestConfig(GoogleCloudDialogflowV2SentimentAnalysisRequestConfig sentimentAnalysisRequestConfig) {
    this.sentimentAnalysisRequestConfig = sentimentAnalysisRequestConfig;
  }


  public GoogleCloudDialogflowV2QueryParameters sessionEntityTypes(List<GoogleCloudDialogflowV2SessionEntityType> sessionEntityTypes) {
    this.sessionEntityTypes = sessionEntityTypes;
    return this;
  }

  public GoogleCloudDialogflowV2QueryParameters addSessionEntityTypesItem(GoogleCloudDialogflowV2SessionEntityType sessionEntityTypesItem) {
    if (this.sessionEntityTypes == null) {
      this.sessionEntityTypes = new ArrayList<>();
    }
    this.sessionEntityTypes.add(sessionEntityTypesItem);
    return this;
  }

  /**
   * Additional session entity types to replace or extend developer entity types with. The entity synonyms apply to all languages and persist for the session of this query.
   * @return sessionEntityTypes
   */
  @javax.annotation.Nullable
  public List<GoogleCloudDialogflowV2SessionEntityType> getSessionEntityTypes() {
    return sessionEntityTypes;
  }

  public void setSessionEntityTypes(List<GoogleCloudDialogflowV2SessionEntityType> sessionEntityTypes) {
    this.sessionEntityTypes = sessionEntityTypes;
  }


  public GoogleCloudDialogflowV2QueryParameters timeZone(String timeZone) {
    this.timeZone = timeZone;
    return this;
  }

  /**
   * The time zone of this conversational query from the [time zone database](https://www.iana.org/time-zones), e.g., America/New_York, Europe/Paris. If not provided, the time zone specified in agent settings is used.
   * @return timeZone
   */
  @javax.annotation.Nullable
  public String getTimeZone() {
    return timeZone;
  }

  public void setTimeZone(String timeZone) {
    this.timeZone = timeZone;
  }


  public GoogleCloudDialogflowV2QueryParameters webhookHeaders(Map<String, String> webhookHeaders) {
    this.webhookHeaders = webhookHeaders;
    return this;
  }

  public GoogleCloudDialogflowV2QueryParameters putWebhookHeadersItem(String key, String webhookHeadersItem) {
    if (this.webhookHeaders == null) {
      this.webhookHeaders = new HashMap<>();
    }
    this.webhookHeaders.put(key, webhookHeadersItem);
    return this;
  }

  /**
   * This field can be used to pass HTTP headers for a webhook call. These headers will be sent to webhook along with the headers that have been configured through the Dialogflow web console. The headers defined within this field will overwrite the headers configured through the Dialogflow console if there is a conflict. Header names are case-insensitive. Google&#39;s specified headers are not allowed. Including: \&quot;Host\&quot;, \&quot;Content-Length\&quot;, \&quot;Connection\&quot;, \&quot;From\&quot;, \&quot;User-Agent\&quot;, \&quot;Accept-Encoding\&quot;, \&quot;If-Modified-Since\&quot;, \&quot;If-None-Match\&quot;, \&quot;X-Forwarded-For\&quot;, etc.
   * @return webhookHeaders
   */
  @javax.annotation.Nullable
  public Map<String, String> getWebhookHeaders() {
    return webhookHeaders;
  }

  public void setWebhookHeaders(Map<String, String> webhookHeaders) {
    this.webhookHeaders = webhookHeaders;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDialogflowV2QueryParameters googleCloudDialogflowV2QueryParameters = (GoogleCloudDialogflowV2QueryParameters) o;
    return Objects.equals(this.contexts, googleCloudDialogflowV2QueryParameters.contexts) &&
        Objects.equals(this.geoLocation, googleCloudDialogflowV2QueryParameters.geoLocation) &&
        Objects.equals(this.payload, googleCloudDialogflowV2QueryParameters.payload) &&
        Objects.equals(this.platform, googleCloudDialogflowV2QueryParameters.platform) &&
        Objects.equals(this.resetContexts, googleCloudDialogflowV2QueryParameters.resetContexts) &&
        Objects.equals(this.sentimentAnalysisRequestConfig, googleCloudDialogflowV2QueryParameters.sentimentAnalysisRequestConfig) &&
        Objects.equals(this.sessionEntityTypes, googleCloudDialogflowV2QueryParameters.sessionEntityTypes) &&
        Objects.equals(this.timeZone, googleCloudDialogflowV2QueryParameters.timeZone) &&
        Objects.equals(this.webhookHeaders, googleCloudDialogflowV2QueryParameters.webhookHeaders);
  }

  @Override
  public int hashCode() {
    return Objects.hash(contexts, geoLocation, payload, platform, resetContexts, sentimentAnalysisRequestConfig, sessionEntityTypes, timeZone, webhookHeaders);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDialogflowV2QueryParameters {\n");
    sb.append("    contexts: ").append(toIndentedString(contexts)).append("\n");
    sb.append("    geoLocation: ").append(toIndentedString(geoLocation)).append("\n");
    sb.append("    payload: ").append(toIndentedString(payload)).append("\n");
    sb.append("    platform: ").append(toIndentedString(platform)).append("\n");
    sb.append("    resetContexts: ").append(toIndentedString(resetContexts)).append("\n");
    sb.append("    sentimentAnalysisRequestConfig: ").append(toIndentedString(sentimentAnalysisRequestConfig)).append("\n");
    sb.append("    sessionEntityTypes: ").append(toIndentedString(sessionEntityTypes)).append("\n");
    sb.append("    timeZone: ").append(toIndentedString(timeZone)).append("\n");
    sb.append("    webhookHeaders: ").append(toIndentedString(webhookHeaders)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("contexts");
    openapiFields.add("geoLocation");
    openapiFields.add("payload");
    openapiFields.add("platform");
    openapiFields.add("resetContexts");
    openapiFields.add("sentimentAnalysisRequestConfig");
    openapiFields.add("sessionEntityTypes");
    openapiFields.add("timeZone");
    openapiFields.add("webhookHeaders");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDialogflowV2QueryParameters
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDialogflowV2QueryParameters.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDialogflowV2QueryParameters is not found in the empty JSON string", GoogleCloudDialogflowV2QueryParameters.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDialogflowV2QueryParameters.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDialogflowV2QueryParameters` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("contexts") != null && !jsonObj.get("contexts").isJsonNull()) {
        JsonArray jsonArraycontexts = jsonObj.getAsJsonArray("contexts");
        if (jsonArraycontexts != null) {
          // ensure the json data is an array
          if (!jsonObj.get("contexts").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `contexts` to be an array in the JSON string but got `%s`", jsonObj.get("contexts").toString()));
          }

          // validate the optional field `contexts` (array)
          for (int i = 0; i < jsonArraycontexts.size(); i++) {
            GoogleCloudDialogflowV2Context.validateJsonElement(jsonArraycontexts.get(i));
          };
        }
      }
      // validate the optional field `geoLocation`
      if (jsonObj.get("geoLocation") != null && !jsonObj.get("geoLocation").isJsonNull()) {
        GoogleTypeLatLng.validateJsonElement(jsonObj.get("geoLocation"));
      }
      if ((jsonObj.get("platform") != null && !jsonObj.get("platform").isJsonNull()) && !jsonObj.get("platform").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `platform` to be a primitive type in the JSON string but got `%s`", jsonObj.get("platform").toString()));
      }
      // validate the optional field `sentimentAnalysisRequestConfig`
      if (jsonObj.get("sentimentAnalysisRequestConfig") != null && !jsonObj.get("sentimentAnalysisRequestConfig").isJsonNull()) {
        GoogleCloudDialogflowV2SentimentAnalysisRequestConfig.validateJsonElement(jsonObj.get("sentimentAnalysisRequestConfig"));
      }
      if (jsonObj.get("sessionEntityTypes") != null && !jsonObj.get("sessionEntityTypes").isJsonNull()) {
        JsonArray jsonArraysessionEntityTypes = jsonObj.getAsJsonArray("sessionEntityTypes");
        if (jsonArraysessionEntityTypes != null) {
          // ensure the json data is an array
          if (!jsonObj.get("sessionEntityTypes").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `sessionEntityTypes` to be an array in the JSON string but got `%s`", jsonObj.get("sessionEntityTypes").toString()));
          }

          // validate the optional field `sessionEntityTypes` (array)
          for (int i = 0; i < jsonArraysessionEntityTypes.size(); i++) {
            GoogleCloudDialogflowV2SessionEntityType.validateJsonElement(jsonArraysessionEntityTypes.get(i));
          };
        }
      }
      if ((jsonObj.get("timeZone") != null && !jsonObj.get("timeZone").isJsonNull()) && !jsonObj.get("timeZone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `timeZone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("timeZone").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDialogflowV2QueryParameters.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDialogflowV2QueryParameters' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDialogflowV2QueryParameters> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDialogflowV2QueryParameters.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDialogflowV2QueryParameters>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDialogflowV2QueryParameters value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDialogflowV2QueryParameters read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDialogflowV2QueryParameters given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDialogflowV2QueryParameters
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDialogflowV2QueryParameters
   */
  public static GoogleCloudDialogflowV2QueryParameters fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDialogflowV2QueryParameters.class);
  }

  /**
   * Convert an instance of GoogleCloudDialogflowV2QueryParameters to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

