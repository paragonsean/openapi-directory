/*
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1Context;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1EventInput;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1IntentMessage;
import org.openapitools.client.model.GoogleCloudDialogflowV2beta1SessionEntityType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The response message for a webhook call. This response is validated by the Dialogflow server. If validation fails, an error will be returned in the QueryResult.diagnostic_info field. Setting JSON fields to an empty value with the wrong type is a common error. To avoid this error: - Use &#x60;\&quot;\&quot;&#x60; for empty strings - Use &#x60;{}&#x60; or &#x60;null&#x60; for empty objects - Use &#x60;[]&#x60; or &#x60;null&#x60; for empty arrays For more information, see the [Protocol Buffers Language Guide](https://developers.google.com/protocol-buffers/docs/proto3#json).
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:48:05.098863-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDialogflowV2beta1WebhookResponse {
  public static final String SERIALIZED_NAME_END_INTERACTION = "endInteraction";
  @SerializedName(SERIALIZED_NAME_END_INTERACTION)
  private Boolean endInteraction;

  public static final String SERIALIZED_NAME_FOLLOWUP_EVENT_INPUT = "followupEventInput";
  @SerializedName(SERIALIZED_NAME_FOLLOWUP_EVENT_INPUT)
  private GoogleCloudDialogflowV2beta1EventInput followupEventInput;

  public static final String SERIALIZED_NAME_FULFILLMENT_MESSAGES = "fulfillmentMessages";
  @SerializedName(SERIALIZED_NAME_FULFILLMENT_MESSAGES)
  private List<GoogleCloudDialogflowV2beta1IntentMessage> fulfillmentMessages = new ArrayList<>();

  public static final String SERIALIZED_NAME_FULFILLMENT_TEXT = "fulfillmentText";
  @SerializedName(SERIALIZED_NAME_FULFILLMENT_TEXT)
  private String fulfillmentText;

  public static final String SERIALIZED_NAME_LIVE_AGENT_HANDOFF = "liveAgentHandoff";
  @SerializedName(SERIALIZED_NAME_LIVE_AGENT_HANDOFF)
  private Boolean liveAgentHandoff;

  public static final String SERIALIZED_NAME_OUTPUT_CONTEXTS = "outputContexts";
  @SerializedName(SERIALIZED_NAME_OUTPUT_CONTEXTS)
  private List<GoogleCloudDialogflowV2beta1Context> outputContexts = new ArrayList<>();

  public static final String SERIALIZED_NAME_PAYLOAD = "payload";
  @SerializedName(SERIALIZED_NAME_PAYLOAD)
  private Map<String, Object> payload = new HashMap<>();

  public static final String SERIALIZED_NAME_SESSION_ENTITY_TYPES = "sessionEntityTypes";
  @SerializedName(SERIALIZED_NAME_SESSION_ENTITY_TYPES)
  private List<GoogleCloudDialogflowV2beta1SessionEntityType> sessionEntityTypes = new ArrayList<>();

  public static final String SERIALIZED_NAME_SOURCE = "source";
  @SerializedName(SERIALIZED_NAME_SOURCE)
  private String source;

  public GoogleCloudDialogflowV2beta1WebhookResponse() {
  }

  public GoogleCloudDialogflowV2beta1WebhookResponse endInteraction(Boolean endInteraction) {
    this.endInteraction = endInteraction;
    return this;
  }

  /**
   * Optional. Indicates that this intent ends an interaction. Some integrations (e.g., Actions on Google or Dialogflow phone gateway) use this information to close interaction with an end user. Default is false.
   * @return endInteraction
   */
  @javax.annotation.Nullable
  public Boolean getEndInteraction() {
    return endInteraction;
  }

  public void setEndInteraction(Boolean endInteraction) {
    this.endInteraction = endInteraction;
  }


  public GoogleCloudDialogflowV2beta1WebhookResponse followupEventInput(GoogleCloudDialogflowV2beta1EventInput followupEventInput) {
    this.followupEventInput = followupEventInput;
    return this;
  }

  /**
   * Get followupEventInput
   * @return followupEventInput
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowV2beta1EventInput getFollowupEventInput() {
    return followupEventInput;
  }

  public void setFollowupEventInput(GoogleCloudDialogflowV2beta1EventInput followupEventInput) {
    this.followupEventInput = followupEventInput;
  }


  public GoogleCloudDialogflowV2beta1WebhookResponse fulfillmentMessages(List<GoogleCloudDialogflowV2beta1IntentMessage> fulfillmentMessages) {
    this.fulfillmentMessages = fulfillmentMessages;
    return this;
  }

  public GoogleCloudDialogflowV2beta1WebhookResponse addFulfillmentMessagesItem(GoogleCloudDialogflowV2beta1IntentMessage fulfillmentMessagesItem) {
    if (this.fulfillmentMessages == null) {
      this.fulfillmentMessages = new ArrayList<>();
    }
    this.fulfillmentMessages.add(fulfillmentMessagesItem);
    return this;
  }

  /**
   * Optional. The rich response messages intended for the end-user. When provided, Dialogflow uses this field to populate QueryResult.fulfillment_messages sent to the integration or API caller.
   * @return fulfillmentMessages
   */
  @javax.annotation.Nullable
  public List<GoogleCloudDialogflowV2beta1IntentMessage> getFulfillmentMessages() {
    return fulfillmentMessages;
  }

  public void setFulfillmentMessages(List<GoogleCloudDialogflowV2beta1IntentMessage> fulfillmentMessages) {
    this.fulfillmentMessages = fulfillmentMessages;
  }


  public GoogleCloudDialogflowV2beta1WebhookResponse fulfillmentText(String fulfillmentText) {
    this.fulfillmentText = fulfillmentText;
    return this;
  }

  /**
   * Optional. The text response message intended for the end-user. It is recommended to use &#x60;fulfillment_messages.text.text[0]&#x60; instead. When provided, Dialogflow uses this field to populate QueryResult.fulfillment_text sent to the integration or API caller.
   * @return fulfillmentText
   */
  @javax.annotation.Nullable
  public String getFulfillmentText() {
    return fulfillmentText;
  }

  public void setFulfillmentText(String fulfillmentText) {
    this.fulfillmentText = fulfillmentText;
  }


  public GoogleCloudDialogflowV2beta1WebhookResponse liveAgentHandoff(Boolean liveAgentHandoff) {
    this.liveAgentHandoff = liveAgentHandoff;
    return this;
  }

  /**
   * Indicates that a live agent should be brought in to handle the interaction with the user. In most cases, when you set this flag to true, you would also want to set end_interaction to true as well. Default is false.
   * @return liveAgentHandoff
   */
  @javax.annotation.Nullable
  public Boolean getLiveAgentHandoff() {
    return liveAgentHandoff;
  }

  public void setLiveAgentHandoff(Boolean liveAgentHandoff) {
    this.liveAgentHandoff = liveAgentHandoff;
  }


  public GoogleCloudDialogflowV2beta1WebhookResponse outputContexts(List<GoogleCloudDialogflowV2beta1Context> outputContexts) {
    this.outputContexts = outputContexts;
    return this;
  }

  public GoogleCloudDialogflowV2beta1WebhookResponse addOutputContextsItem(GoogleCloudDialogflowV2beta1Context outputContextsItem) {
    if (this.outputContexts == null) {
      this.outputContexts = new ArrayList<>();
    }
    this.outputContexts.add(outputContextsItem);
    return this;
  }

  /**
   * Optional. The collection of output contexts that will overwrite currently active contexts for the session and reset their lifespans. When provided, Dialogflow uses this field to populate QueryResult.output_contexts sent to the integration or API caller.
   * @return outputContexts
   */
  @javax.annotation.Nullable
  public List<GoogleCloudDialogflowV2beta1Context> getOutputContexts() {
    return outputContexts;
  }

  public void setOutputContexts(List<GoogleCloudDialogflowV2beta1Context> outputContexts) {
    this.outputContexts = outputContexts;
  }


  public GoogleCloudDialogflowV2beta1WebhookResponse payload(Map<String, Object> payload) {
    this.payload = payload;
    return this;
  }

  public GoogleCloudDialogflowV2beta1WebhookResponse putPayloadItem(String key, Object payloadItem) {
    if (this.payload == null) {
      this.payload = new HashMap<>();
    }
    this.payload.put(key, payloadItem);
    return this;
  }

  /**
   * Optional. This field can be used to pass custom data from your webhook to the integration or API caller. Arbitrary JSON objects are supported. When provided, Dialogflow uses this field to populate QueryResult.webhook_payload sent to the integration or API caller. This field is also used by the [Google Assistant integration](https://cloud.google.com/dialogflow/docs/integrations/aog) for rich response messages. See the format definition at [Google Assistant Dialogflow webhook format](https://developers.google.com/assistant/actions/build/json/dialogflow-webhook-json)
   * @return payload
   */
  @javax.annotation.Nullable
  public Map<String, Object> getPayload() {
    return payload;
  }

  public void setPayload(Map<String, Object> payload) {
    this.payload = payload;
  }


  public GoogleCloudDialogflowV2beta1WebhookResponse sessionEntityTypes(List<GoogleCloudDialogflowV2beta1SessionEntityType> sessionEntityTypes) {
    this.sessionEntityTypes = sessionEntityTypes;
    return this;
  }

  public GoogleCloudDialogflowV2beta1WebhookResponse addSessionEntityTypesItem(GoogleCloudDialogflowV2beta1SessionEntityType sessionEntityTypesItem) {
    if (this.sessionEntityTypes == null) {
      this.sessionEntityTypes = new ArrayList<>();
    }
    this.sessionEntityTypes.add(sessionEntityTypesItem);
    return this;
  }

  /**
   * Optional. Additional session entity types to replace or extend developer entity types with. The entity synonyms apply to all languages and persist for the session. Setting this data from a webhook overwrites the session entity types that have been set using &#x60;detectIntent&#x60;, &#x60;streamingDetectIntent&#x60; or SessionEntityType management methods.
   * @return sessionEntityTypes
   */
  @javax.annotation.Nullable
  public List<GoogleCloudDialogflowV2beta1SessionEntityType> getSessionEntityTypes() {
    return sessionEntityTypes;
  }

  public void setSessionEntityTypes(List<GoogleCloudDialogflowV2beta1SessionEntityType> sessionEntityTypes) {
    this.sessionEntityTypes = sessionEntityTypes;
  }


  public GoogleCloudDialogflowV2beta1WebhookResponse source(String source) {
    this.source = source;
    return this;
  }

  /**
   * Optional. A custom field used to identify the webhook source. Arbitrary strings are supported. When provided, Dialogflow uses this field to populate QueryResult.webhook_source sent to the integration or API caller.
   * @return source
   */
  @javax.annotation.Nullable
  public String getSource() {
    return source;
  }

  public void setSource(String source) {
    this.source = source;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDialogflowV2beta1WebhookResponse googleCloudDialogflowV2beta1WebhookResponse = (GoogleCloudDialogflowV2beta1WebhookResponse) o;
    return Objects.equals(this.endInteraction, googleCloudDialogflowV2beta1WebhookResponse.endInteraction) &&
        Objects.equals(this.followupEventInput, googleCloudDialogflowV2beta1WebhookResponse.followupEventInput) &&
        Objects.equals(this.fulfillmentMessages, googleCloudDialogflowV2beta1WebhookResponse.fulfillmentMessages) &&
        Objects.equals(this.fulfillmentText, googleCloudDialogflowV2beta1WebhookResponse.fulfillmentText) &&
        Objects.equals(this.liveAgentHandoff, googleCloudDialogflowV2beta1WebhookResponse.liveAgentHandoff) &&
        Objects.equals(this.outputContexts, googleCloudDialogflowV2beta1WebhookResponse.outputContexts) &&
        Objects.equals(this.payload, googleCloudDialogflowV2beta1WebhookResponse.payload) &&
        Objects.equals(this.sessionEntityTypes, googleCloudDialogflowV2beta1WebhookResponse.sessionEntityTypes) &&
        Objects.equals(this.source, googleCloudDialogflowV2beta1WebhookResponse.source);
  }

  @Override
  public int hashCode() {
    return Objects.hash(endInteraction, followupEventInput, fulfillmentMessages, fulfillmentText, liveAgentHandoff, outputContexts, payload, sessionEntityTypes, source);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDialogflowV2beta1WebhookResponse {\n");
    sb.append("    endInteraction: ").append(toIndentedString(endInteraction)).append("\n");
    sb.append("    followupEventInput: ").append(toIndentedString(followupEventInput)).append("\n");
    sb.append("    fulfillmentMessages: ").append(toIndentedString(fulfillmentMessages)).append("\n");
    sb.append("    fulfillmentText: ").append(toIndentedString(fulfillmentText)).append("\n");
    sb.append("    liveAgentHandoff: ").append(toIndentedString(liveAgentHandoff)).append("\n");
    sb.append("    outputContexts: ").append(toIndentedString(outputContexts)).append("\n");
    sb.append("    payload: ").append(toIndentedString(payload)).append("\n");
    sb.append("    sessionEntityTypes: ").append(toIndentedString(sessionEntityTypes)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("endInteraction");
    openapiFields.add("followupEventInput");
    openapiFields.add("fulfillmentMessages");
    openapiFields.add("fulfillmentText");
    openapiFields.add("liveAgentHandoff");
    openapiFields.add("outputContexts");
    openapiFields.add("payload");
    openapiFields.add("sessionEntityTypes");
    openapiFields.add("source");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDialogflowV2beta1WebhookResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDialogflowV2beta1WebhookResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDialogflowV2beta1WebhookResponse is not found in the empty JSON string", GoogleCloudDialogflowV2beta1WebhookResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDialogflowV2beta1WebhookResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDialogflowV2beta1WebhookResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `followupEventInput`
      if (jsonObj.get("followupEventInput") != null && !jsonObj.get("followupEventInput").isJsonNull()) {
        GoogleCloudDialogflowV2beta1EventInput.validateJsonElement(jsonObj.get("followupEventInput"));
      }
      if (jsonObj.get("fulfillmentMessages") != null && !jsonObj.get("fulfillmentMessages").isJsonNull()) {
        JsonArray jsonArrayfulfillmentMessages = jsonObj.getAsJsonArray("fulfillmentMessages");
        if (jsonArrayfulfillmentMessages != null) {
          // ensure the json data is an array
          if (!jsonObj.get("fulfillmentMessages").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `fulfillmentMessages` to be an array in the JSON string but got `%s`", jsonObj.get("fulfillmentMessages").toString()));
          }

          // validate the optional field `fulfillmentMessages` (array)
          for (int i = 0; i < jsonArrayfulfillmentMessages.size(); i++) {
            GoogleCloudDialogflowV2beta1IntentMessage.validateJsonElement(jsonArrayfulfillmentMessages.get(i));
          };
        }
      }
      if ((jsonObj.get("fulfillmentText") != null && !jsonObj.get("fulfillmentText").isJsonNull()) && !jsonObj.get("fulfillmentText").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fulfillmentText` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fulfillmentText").toString()));
      }
      if (jsonObj.get("outputContexts") != null && !jsonObj.get("outputContexts").isJsonNull()) {
        JsonArray jsonArrayoutputContexts = jsonObj.getAsJsonArray("outputContexts");
        if (jsonArrayoutputContexts != null) {
          // ensure the json data is an array
          if (!jsonObj.get("outputContexts").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `outputContexts` to be an array in the JSON string but got `%s`", jsonObj.get("outputContexts").toString()));
          }

          // validate the optional field `outputContexts` (array)
          for (int i = 0; i < jsonArrayoutputContexts.size(); i++) {
            GoogleCloudDialogflowV2beta1Context.validateJsonElement(jsonArrayoutputContexts.get(i));
          };
        }
      }
      if (jsonObj.get("sessionEntityTypes") != null && !jsonObj.get("sessionEntityTypes").isJsonNull()) {
        JsonArray jsonArraysessionEntityTypes = jsonObj.getAsJsonArray("sessionEntityTypes");
        if (jsonArraysessionEntityTypes != null) {
          // ensure the json data is an array
          if (!jsonObj.get("sessionEntityTypes").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `sessionEntityTypes` to be an array in the JSON string but got `%s`", jsonObj.get("sessionEntityTypes").toString()));
          }

          // validate the optional field `sessionEntityTypes` (array)
          for (int i = 0; i < jsonArraysessionEntityTypes.size(); i++) {
            GoogleCloudDialogflowV2beta1SessionEntityType.validateJsonElement(jsonArraysessionEntityTypes.get(i));
          };
        }
      }
      if ((jsonObj.get("source") != null && !jsonObj.get("source").isJsonNull()) && !jsonObj.get("source").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `source` to be a primitive type in the JSON string but got `%s`", jsonObj.get("source").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDialogflowV2beta1WebhookResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDialogflowV2beta1WebhookResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDialogflowV2beta1WebhookResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDialogflowV2beta1WebhookResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDialogflowV2beta1WebhookResponse>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDialogflowV2beta1WebhookResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDialogflowV2beta1WebhookResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDialogflowV2beta1WebhookResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDialogflowV2beta1WebhookResponse
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDialogflowV2beta1WebhookResponse
   */
  public static GoogleCloudDialogflowV2beta1WebhookResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDialogflowV2beta1WebhookResponse.class);
  }

  /**
   * Convert an instance of GoogleCloudDialogflowV2beta1WebhookResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

