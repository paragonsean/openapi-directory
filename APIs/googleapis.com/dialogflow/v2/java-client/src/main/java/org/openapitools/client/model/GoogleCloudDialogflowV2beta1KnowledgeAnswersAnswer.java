/*
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * An answer from Knowledge Connector.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:48:05.098863-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer {
  public static final String SERIALIZED_NAME_ANSWER = "answer";
  @SerializedName(SERIALIZED_NAME_ANSWER)
  private String answer;

  public static final String SERIALIZED_NAME_FAQ_QUESTION = "faqQuestion";
  @SerializedName(SERIALIZED_NAME_FAQ_QUESTION)
  private String faqQuestion;

  public static final String SERIALIZED_NAME_MATCH_CONFIDENCE = "matchConfidence";
  @SerializedName(SERIALIZED_NAME_MATCH_CONFIDENCE)
  private Float matchConfidence;

  /**
   * The system&#39;s confidence level that this knowledge answer is a good match for this conversational query. NOTE: The confidence level for a given &#x60;&#x60; pair may change without notice, as it depends on models that are constantly being improved. However, it will change less frequently than the confidence score below, and should be preferred for referencing the quality of an answer.
   */
  @JsonAdapter(MatchConfidenceLevelEnum.Adapter.class)
  public enum MatchConfidenceLevelEnum {
    MATCH_CONFIDENCE_LEVEL_UNSPECIFIED("MATCH_CONFIDENCE_LEVEL_UNSPECIFIED"),
    
    LOW("LOW"),
    
    MEDIUM("MEDIUM"),
    
    HIGH("HIGH");

    private String value;

    MatchConfidenceLevelEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static MatchConfidenceLevelEnum fromValue(String value) {
      for (MatchConfidenceLevelEnum b : MatchConfidenceLevelEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<MatchConfidenceLevelEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final MatchConfidenceLevelEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public MatchConfidenceLevelEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return MatchConfidenceLevelEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      MatchConfidenceLevelEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_MATCH_CONFIDENCE_LEVEL = "matchConfidenceLevel";
  @SerializedName(SERIALIZED_NAME_MATCH_CONFIDENCE_LEVEL)
  private MatchConfidenceLevelEnum matchConfidenceLevel;

  public static final String SERIALIZED_NAME_SOURCE = "source";
  @SerializedName(SERIALIZED_NAME_SOURCE)
  private String source;

  public GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer() {
  }

  public GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer answer(String answer) {
    this.answer = answer;
    return this;
  }

  /**
   * The piece of text from the &#x60;source&#x60; knowledge base document that answers this conversational query.
   * @return answer
   */
  @javax.annotation.Nullable
  public String getAnswer() {
    return answer;
  }

  public void setAnswer(String answer) {
    this.answer = answer;
  }


  public GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer faqQuestion(String faqQuestion) {
    this.faqQuestion = faqQuestion;
    return this;
  }

  /**
   * The corresponding FAQ question if the answer was extracted from a FAQ Document, empty otherwise.
   * @return faqQuestion
   */
  @javax.annotation.Nullable
  public String getFaqQuestion() {
    return faqQuestion;
  }

  public void setFaqQuestion(String faqQuestion) {
    this.faqQuestion = faqQuestion;
  }


  public GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer matchConfidence(Float matchConfidence) {
    this.matchConfidence = matchConfidence;
    return this;
  }

  /**
   * The system&#39;s confidence score that this Knowledge answer is a good match for this conversational query. The range is from 0.0 (completely uncertain) to 1.0 (completely certain). Note: The confidence score is likely to vary somewhat (possibly even for identical requests), as the underlying model is under constant improvement. It may be deprecated in the future. We recommend using &#x60;match_confidence_level&#x60; which should be generally more stable.
   * @return matchConfidence
   */
  @javax.annotation.Nullable
  public Float getMatchConfidence() {
    return matchConfidence;
  }

  public void setMatchConfidence(Float matchConfidence) {
    this.matchConfidence = matchConfidence;
  }


  public GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer matchConfidenceLevel(MatchConfidenceLevelEnum matchConfidenceLevel) {
    this.matchConfidenceLevel = matchConfidenceLevel;
    return this;
  }

  /**
   * The system&#39;s confidence level that this knowledge answer is a good match for this conversational query. NOTE: The confidence level for a given &#x60;&#x60; pair may change without notice, as it depends on models that are constantly being improved. However, it will change less frequently than the confidence score below, and should be preferred for referencing the quality of an answer.
   * @return matchConfidenceLevel
   */
  @javax.annotation.Nullable
  public MatchConfidenceLevelEnum getMatchConfidenceLevel() {
    return matchConfidenceLevel;
  }

  public void setMatchConfidenceLevel(MatchConfidenceLevelEnum matchConfidenceLevel) {
    this.matchConfidenceLevel = matchConfidenceLevel;
  }


  public GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer source(String source) {
    this.source = source;
    return this;
  }

  /**
   * Indicates which Knowledge Document this answer was extracted from. Format: &#x60;projects//knowledgeBases//documents/&#x60;.
   * @return source
   */
  @javax.annotation.Nullable
  public String getSource() {
    return source;
  }

  public void setSource(String source) {
    this.source = source;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer googleCloudDialogflowV2beta1KnowledgeAnswersAnswer = (GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer) o;
    return Objects.equals(this.answer, googleCloudDialogflowV2beta1KnowledgeAnswersAnswer.answer) &&
        Objects.equals(this.faqQuestion, googleCloudDialogflowV2beta1KnowledgeAnswersAnswer.faqQuestion) &&
        Objects.equals(this.matchConfidence, googleCloudDialogflowV2beta1KnowledgeAnswersAnswer.matchConfidence) &&
        Objects.equals(this.matchConfidenceLevel, googleCloudDialogflowV2beta1KnowledgeAnswersAnswer.matchConfidenceLevel) &&
        Objects.equals(this.source, googleCloudDialogflowV2beta1KnowledgeAnswersAnswer.source);
  }

  @Override
  public int hashCode() {
    return Objects.hash(answer, faqQuestion, matchConfidence, matchConfidenceLevel, source);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer {\n");
    sb.append("    answer: ").append(toIndentedString(answer)).append("\n");
    sb.append("    faqQuestion: ").append(toIndentedString(faqQuestion)).append("\n");
    sb.append("    matchConfidence: ").append(toIndentedString(matchConfidence)).append("\n");
    sb.append("    matchConfidenceLevel: ").append(toIndentedString(matchConfidenceLevel)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("answer");
    openapiFields.add("faqQuestion");
    openapiFields.add("matchConfidence");
    openapiFields.add("matchConfidenceLevel");
    openapiFields.add("source");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer is not found in the empty JSON string", GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("answer") != null && !jsonObj.get("answer").isJsonNull()) && !jsonObj.get("answer").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `answer` to be a primitive type in the JSON string but got `%s`", jsonObj.get("answer").toString()));
      }
      if ((jsonObj.get("faqQuestion") != null && !jsonObj.get("faqQuestion").isJsonNull()) && !jsonObj.get("faqQuestion").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `faqQuestion` to be a primitive type in the JSON string but got `%s`", jsonObj.get("faqQuestion").toString()));
      }
      if ((jsonObj.get("matchConfidenceLevel") != null && !jsonObj.get("matchConfidenceLevel").isJsonNull()) && !jsonObj.get("matchConfidenceLevel").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `matchConfidenceLevel` to be a primitive type in the JSON string but got `%s`", jsonObj.get("matchConfidenceLevel").toString()));
      }
      // validate the optional field `matchConfidenceLevel`
      if (jsonObj.get("matchConfidenceLevel") != null && !jsonObj.get("matchConfidenceLevel").isJsonNull()) {
        MatchConfidenceLevelEnum.validateJsonElement(jsonObj.get("matchConfidenceLevel"));
      }
      if ((jsonObj.get("source") != null && !jsonObj.get("source").isJsonNull()) && !jsonObj.get("source").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `source` to be a primitive type in the JSON string but got `%s`", jsonObj.get("source").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer
   */
  public static GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer.class);
  }

  /**
   * Convert an instance of GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

