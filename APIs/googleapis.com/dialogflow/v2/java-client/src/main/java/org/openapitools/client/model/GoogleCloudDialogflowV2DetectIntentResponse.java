/*
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudDialogflowV2OutputAudioConfig;
import org.openapitools.client.model.GoogleCloudDialogflowV2QueryResult;
import org.openapitools.client.model.GoogleRpcStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The message returned from the DetectIntent method.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:48:05.098863-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDialogflowV2DetectIntentResponse {
  public static final String SERIALIZED_NAME_OUTPUT_AUDIO = "outputAudio";
  @SerializedName(SERIALIZED_NAME_OUTPUT_AUDIO)
  private byte[] outputAudio;

  public static final String SERIALIZED_NAME_OUTPUT_AUDIO_CONFIG = "outputAudioConfig";
  @SerializedName(SERIALIZED_NAME_OUTPUT_AUDIO_CONFIG)
  private GoogleCloudDialogflowV2OutputAudioConfig outputAudioConfig;

  public static final String SERIALIZED_NAME_QUERY_RESULT = "queryResult";
  @SerializedName(SERIALIZED_NAME_QUERY_RESULT)
  private GoogleCloudDialogflowV2QueryResult queryResult;

  public static final String SERIALIZED_NAME_RESPONSE_ID = "responseId";
  @SerializedName(SERIALIZED_NAME_RESPONSE_ID)
  private String responseId;

  public static final String SERIALIZED_NAME_WEBHOOK_STATUS = "webhookStatus";
  @SerializedName(SERIALIZED_NAME_WEBHOOK_STATUS)
  private GoogleRpcStatus webhookStatus;

  public GoogleCloudDialogflowV2DetectIntentResponse() {
  }

  public GoogleCloudDialogflowV2DetectIntentResponse outputAudio(byte[] outputAudio) {
    this.outputAudio = outputAudio;
    return this;
  }

  /**
   * The audio data bytes encoded as specified in the request. Note: The output audio is generated based on the values of default platform text responses found in the &#x60;query_result.fulfillment_messages&#x60; field. If multiple default text responses exist, they will be concatenated when generating audio. If no default platform text responses exist, the generated audio content will be empty. In some scenarios, multiple output audio fields may be present in the response structure. In these cases, only the top-most-level audio output has content.
   * @return outputAudio
   */
  @javax.annotation.Nullable
  public byte[] getOutputAudio() {
    return outputAudio;
  }

  public void setOutputAudio(byte[] outputAudio) {
    this.outputAudio = outputAudio;
  }


  public GoogleCloudDialogflowV2DetectIntentResponse outputAudioConfig(GoogleCloudDialogflowV2OutputAudioConfig outputAudioConfig) {
    this.outputAudioConfig = outputAudioConfig;
    return this;
  }

  /**
   * Get outputAudioConfig
   * @return outputAudioConfig
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowV2OutputAudioConfig getOutputAudioConfig() {
    return outputAudioConfig;
  }

  public void setOutputAudioConfig(GoogleCloudDialogflowV2OutputAudioConfig outputAudioConfig) {
    this.outputAudioConfig = outputAudioConfig;
  }


  public GoogleCloudDialogflowV2DetectIntentResponse queryResult(GoogleCloudDialogflowV2QueryResult queryResult) {
    this.queryResult = queryResult;
    return this;
  }

  /**
   * Get queryResult
   * @return queryResult
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowV2QueryResult getQueryResult() {
    return queryResult;
  }

  public void setQueryResult(GoogleCloudDialogflowV2QueryResult queryResult) {
    this.queryResult = queryResult;
  }


  public GoogleCloudDialogflowV2DetectIntentResponse responseId(String responseId) {
    this.responseId = responseId;
    return this;
  }

  /**
   * The unique identifier of the response. It can be used to locate a response in the training example set or for reporting issues.
   * @return responseId
   */
  @javax.annotation.Nullable
  public String getResponseId() {
    return responseId;
  }

  public void setResponseId(String responseId) {
    this.responseId = responseId;
  }


  public GoogleCloudDialogflowV2DetectIntentResponse webhookStatus(GoogleRpcStatus webhookStatus) {
    this.webhookStatus = webhookStatus;
    return this;
  }

  /**
   * Get webhookStatus
   * @return webhookStatus
   */
  @javax.annotation.Nullable
  public GoogleRpcStatus getWebhookStatus() {
    return webhookStatus;
  }

  public void setWebhookStatus(GoogleRpcStatus webhookStatus) {
    this.webhookStatus = webhookStatus;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDialogflowV2DetectIntentResponse googleCloudDialogflowV2DetectIntentResponse = (GoogleCloudDialogflowV2DetectIntentResponse) o;
    return Arrays.equals(this.outputAudio, googleCloudDialogflowV2DetectIntentResponse.outputAudio) &&
        Objects.equals(this.outputAudioConfig, googleCloudDialogflowV2DetectIntentResponse.outputAudioConfig) &&
        Objects.equals(this.queryResult, googleCloudDialogflowV2DetectIntentResponse.queryResult) &&
        Objects.equals(this.responseId, googleCloudDialogflowV2DetectIntentResponse.responseId) &&
        Objects.equals(this.webhookStatus, googleCloudDialogflowV2DetectIntentResponse.webhookStatus);
  }

  @Override
  public int hashCode() {
    return Objects.hash(Arrays.hashCode(outputAudio), outputAudioConfig, queryResult, responseId, webhookStatus);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDialogflowV2DetectIntentResponse {\n");
    sb.append("    outputAudio: ").append(toIndentedString(outputAudio)).append("\n");
    sb.append("    outputAudioConfig: ").append(toIndentedString(outputAudioConfig)).append("\n");
    sb.append("    queryResult: ").append(toIndentedString(queryResult)).append("\n");
    sb.append("    responseId: ").append(toIndentedString(responseId)).append("\n");
    sb.append("    webhookStatus: ").append(toIndentedString(webhookStatus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("outputAudio");
    openapiFields.add("outputAudioConfig");
    openapiFields.add("queryResult");
    openapiFields.add("responseId");
    openapiFields.add("webhookStatus");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDialogflowV2DetectIntentResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDialogflowV2DetectIntentResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDialogflowV2DetectIntentResponse is not found in the empty JSON string", GoogleCloudDialogflowV2DetectIntentResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDialogflowV2DetectIntentResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDialogflowV2DetectIntentResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `outputAudioConfig`
      if (jsonObj.get("outputAudioConfig") != null && !jsonObj.get("outputAudioConfig").isJsonNull()) {
        GoogleCloudDialogflowV2OutputAudioConfig.validateJsonElement(jsonObj.get("outputAudioConfig"));
      }
      // validate the optional field `queryResult`
      if (jsonObj.get("queryResult") != null && !jsonObj.get("queryResult").isJsonNull()) {
        GoogleCloudDialogflowV2QueryResult.validateJsonElement(jsonObj.get("queryResult"));
      }
      if ((jsonObj.get("responseId") != null && !jsonObj.get("responseId").isJsonNull()) && !jsonObj.get("responseId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `responseId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("responseId").toString()));
      }
      // validate the optional field `webhookStatus`
      if (jsonObj.get("webhookStatus") != null && !jsonObj.get("webhookStatus").isJsonNull()) {
        GoogleRpcStatus.validateJsonElement(jsonObj.get("webhookStatus"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDialogflowV2DetectIntentResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDialogflowV2DetectIntentResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDialogflowV2DetectIntentResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDialogflowV2DetectIntentResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDialogflowV2DetectIntentResponse>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDialogflowV2DetectIntentResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDialogflowV2DetectIntentResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDialogflowV2DetectIntentResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDialogflowV2DetectIntentResponse
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDialogflowV2DetectIntentResponse
   */
  public static GoogleCloudDialogflowV2DetectIntentResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDialogflowV2DetectIntentResponse.class);
  }

  /**
   * Convert an instance of GoogleCloudDialogflowV2DetectIntentResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

