/*
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudDialogflowV2ConversationInfo;
import org.openapitools.client.model.GoogleCloudDialogflowV2InputConfig;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents a conversation dataset that a user imports raw data into. The data inside ConversationDataset can not be changed after ImportConversationData finishes (and calling ImportConversationData on a dataset that already has data is not allowed).
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:48:05.098863-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDialogflowV2ConversationDataset {
  public static final String SERIALIZED_NAME_CONVERSATION_COUNT = "conversationCount";
  @SerializedName(SERIALIZED_NAME_CONVERSATION_COUNT)
  private String conversationCount;

  public static final String SERIALIZED_NAME_CONVERSATION_INFO = "conversationInfo";
  @SerializedName(SERIALIZED_NAME_CONVERSATION_INFO)
  private GoogleCloudDialogflowV2ConversationInfo conversationInfo;

  public static final String SERIALIZED_NAME_CREATE_TIME = "createTime";
  @SerializedName(SERIALIZED_NAME_CREATE_TIME)
  private String createTime;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_INPUT_CONFIG = "inputConfig";
  @SerializedName(SERIALIZED_NAME_INPUT_CONFIG)
  private GoogleCloudDialogflowV2InputConfig inputConfig;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public GoogleCloudDialogflowV2ConversationDataset() {
  }

  public GoogleCloudDialogflowV2ConversationDataset(
     String conversationCount, 
     String createTime, 
     String name
  ) {
    this();
    this.conversationCount = conversationCount;
    this.createTime = createTime;
    this.name = name;
  }

  /**
   * Output only. The number of conversations this conversation dataset contains.
   * @return conversationCount
   */
  @javax.annotation.Nullable
  public String getConversationCount() {
    return conversationCount;
  }



  public GoogleCloudDialogflowV2ConversationDataset conversationInfo(GoogleCloudDialogflowV2ConversationInfo conversationInfo) {
    this.conversationInfo = conversationInfo;
    return this;
  }

  /**
   * Get conversationInfo
   * @return conversationInfo
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowV2ConversationInfo getConversationInfo() {
    return conversationInfo;
  }

  public void setConversationInfo(GoogleCloudDialogflowV2ConversationInfo conversationInfo) {
    this.conversationInfo = conversationInfo;
  }


  /**
   * Output only. Creation time of this dataset.
   * @return createTime
   */
  @javax.annotation.Nullable
  public String getCreateTime() {
    return createTime;
  }



  public GoogleCloudDialogflowV2ConversationDataset description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Optional. The description of the dataset. Maximum of 10000 bytes.
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public GoogleCloudDialogflowV2ConversationDataset displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Required. The display name of the dataset. Maximum of 64 bytes.
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public GoogleCloudDialogflowV2ConversationDataset inputConfig(GoogleCloudDialogflowV2InputConfig inputConfig) {
    this.inputConfig = inputConfig;
    return this;
  }

  /**
   * Get inputConfig
   * @return inputConfig
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowV2InputConfig getInputConfig() {
    return inputConfig;
  }

  public void setInputConfig(GoogleCloudDialogflowV2InputConfig inputConfig) {
    this.inputConfig = inputConfig;
  }


  /**
   * Output only. ConversationDataset resource name. Format: &#x60;projects//locations//conversationDatasets/&#x60;
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDialogflowV2ConversationDataset googleCloudDialogflowV2ConversationDataset = (GoogleCloudDialogflowV2ConversationDataset) o;
    return Objects.equals(this.conversationCount, googleCloudDialogflowV2ConversationDataset.conversationCount) &&
        Objects.equals(this.conversationInfo, googleCloudDialogflowV2ConversationDataset.conversationInfo) &&
        Objects.equals(this.createTime, googleCloudDialogflowV2ConversationDataset.createTime) &&
        Objects.equals(this.description, googleCloudDialogflowV2ConversationDataset.description) &&
        Objects.equals(this.displayName, googleCloudDialogflowV2ConversationDataset.displayName) &&
        Objects.equals(this.inputConfig, googleCloudDialogflowV2ConversationDataset.inputConfig) &&
        Objects.equals(this.name, googleCloudDialogflowV2ConversationDataset.name);
  }

  @Override
  public int hashCode() {
    return Objects.hash(conversationCount, conversationInfo, createTime, description, displayName, inputConfig, name);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDialogflowV2ConversationDataset {\n");
    sb.append("    conversationCount: ").append(toIndentedString(conversationCount)).append("\n");
    sb.append("    conversationInfo: ").append(toIndentedString(conversationInfo)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    inputConfig: ").append(toIndentedString(inputConfig)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("conversationCount");
    openapiFields.add("conversationInfo");
    openapiFields.add("createTime");
    openapiFields.add("description");
    openapiFields.add("displayName");
    openapiFields.add("inputConfig");
    openapiFields.add("name");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDialogflowV2ConversationDataset
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDialogflowV2ConversationDataset.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDialogflowV2ConversationDataset is not found in the empty JSON string", GoogleCloudDialogflowV2ConversationDataset.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDialogflowV2ConversationDataset.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDialogflowV2ConversationDataset` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("conversationCount") != null && !jsonObj.get("conversationCount").isJsonNull()) && !jsonObj.get("conversationCount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `conversationCount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("conversationCount").toString()));
      }
      // validate the optional field `conversationInfo`
      if (jsonObj.get("conversationInfo") != null && !jsonObj.get("conversationInfo").isJsonNull()) {
        GoogleCloudDialogflowV2ConversationInfo.validateJsonElement(jsonObj.get("conversationInfo"));
      }
      if ((jsonObj.get("createTime") != null && !jsonObj.get("createTime").isJsonNull()) && !jsonObj.get("createTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createTime").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      // validate the optional field `inputConfig`
      if (jsonObj.get("inputConfig") != null && !jsonObj.get("inputConfig").isJsonNull()) {
        GoogleCloudDialogflowV2InputConfig.validateJsonElement(jsonObj.get("inputConfig"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDialogflowV2ConversationDataset.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDialogflowV2ConversationDataset' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDialogflowV2ConversationDataset> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDialogflowV2ConversationDataset.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDialogflowV2ConversationDataset>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDialogflowV2ConversationDataset value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDialogflowV2ConversationDataset read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDialogflowV2ConversationDataset given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDialogflowV2ConversationDataset
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDialogflowV2ConversationDataset
   */
  public static GoogleCloudDialogflowV2ConversationDataset fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDialogflowV2ConversationDataset.class);
  }

  /**
   * Convert an instance of GoogleCloudDialogflowV2ConversationDataset to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

