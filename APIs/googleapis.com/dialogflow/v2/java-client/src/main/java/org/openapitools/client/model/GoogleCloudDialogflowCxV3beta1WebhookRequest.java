/*
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.GoogleCloudDialogflowCxV3beta1PageInfo;
import org.openapitools.client.model.GoogleCloudDialogflowCxV3beta1ResponseMessage;
import org.openapitools.client.model.GoogleCloudDialogflowCxV3beta1SessionInfo;
import org.openapitools.client.model.GoogleCloudDialogflowCxV3beta1WebhookRequestFulfillmentInfo;
import org.openapitools.client.model.GoogleCloudDialogflowCxV3beta1WebhookRequestIntentInfo;
import org.openapitools.client.model.GoogleCloudDialogflowCxV3beta1WebhookRequestSentimentAnalysisResult;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The request message for a webhook call. The request is sent as a JSON object and the field names will be presented in camel cases. You may see undocumented fields in an actual request. These fields are used internally by Dialogflow and should be ignored.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:48:05.098863-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDialogflowCxV3beta1WebhookRequest {
  public static final String SERIALIZED_NAME_DETECT_INTENT_RESPONSE_ID = "detectIntentResponseId";
  @SerializedName(SERIALIZED_NAME_DETECT_INTENT_RESPONSE_ID)
  private String detectIntentResponseId;

  public static final String SERIALIZED_NAME_DTMF_DIGITS = "dtmfDigits";
  @SerializedName(SERIALIZED_NAME_DTMF_DIGITS)
  private String dtmfDigits;

  public static final String SERIALIZED_NAME_FULFILLMENT_INFO = "fulfillmentInfo";
  @SerializedName(SERIALIZED_NAME_FULFILLMENT_INFO)
  private GoogleCloudDialogflowCxV3beta1WebhookRequestFulfillmentInfo fulfillmentInfo;

  public static final String SERIALIZED_NAME_INTENT_INFO = "intentInfo";
  @SerializedName(SERIALIZED_NAME_INTENT_INFO)
  private GoogleCloudDialogflowCxV3beta1WebhookRequestIntentInfo intentInfo;

  public static final String SERIALIZED_NAME_LANGUAGE_CODE = "languageCode";
  @SerializedName(SERIALIZED_NAME_LANGUAGE_CODE)
  private String languageCode;

  public static final String SERIALIZED_NAME_MESSAGES = "messages";
  @SerializedName(SERIALIZED_NAME_MESSAGES)
  private List<GoogleCloudDialogflowCxV3beta1ResponseMessage> messages = new ArrayList<>();

  public static final String SERIALIZED_NAME_PAGE_INFO = "pageInfo";
  @SerializedName(SERIALIZED_NAME_PAGE_INFO)
  private GoogleCloudDialogflowCxV3beta1PageInfo pageInfo;

  public static final String SERIALIZED_NAME_PAYLOAD = "payload";
  @SerializedName(SERIALIZED_NAME_PAYLOAD)
  private Map<String, Object> payload = new HashMap<>();

  public static final String SERIALIZED_NAME_SENTIMENT_ANALYSIS_RESULT = "sentimentAnalysisResult";
  @SerializedName(SERIALIZED_NAME_SENTIMENT_ANALYSIS_RESULT)
  private GoogleCloudDialogflowCxV3beta1WebhookRequestSentimentAnalysisResult sentimentAnalysisResult;

  public static final String SERIALIZED_NAME_SESSION_INFO = "sessionInfo";
  @SerializedName(SERIALIZED_NAME_SESSION_INFO)
  private GoogleCloudDialogflowCxV3beta1SessionInfo sessionInfo;

  public static final String SERIALIZED_NAME_TEXT = "text";
  @SerializedName(SERIALIZED_NAME_TEXT)
  private String text;

  public static final String SERIALIZED_NAME_TRANSCRIPT = "transcript";
  @SerializedName(SERIALIZED_NAME_TRANSCRIPT)
  private String transcript;

  public static final String SERIALIZED_NAME_TRIGGER_EVENT = "triggerEvent";
  @SerializedName(SERIALIZED_NAME_TRIGGER_EVENT)
  private String triggerEvent;

  public static final String SERIALIZED_NAME_TRIGGER_INTENT = "triggerIntent";
  @SerializedName(SERIALIZED_NAME_TRIGGER_INTENT)
  private String triggerIntent;

  public GoogleCloudDialogflowCxV3beta1WebhookRequest() {
  }

  public GoogleCloudDialogflowCxV3beta1WebhookRequest detectIntentResponseId(String detectIntentResponseId) {
    this.detectIntentResponseId = detectIntentResponseId;
    return this;
  }

  /**
   * Always present. The unique identifier of the DetectIntentResponse that will be returned to the API caller.
   * @return detectIntentResponseId
   */
  @javax.annotation.Nullable
  public String getDetectIntentResponseId() {
    return detectIntentResponseId;
  }

  public void setDetectIntentResponseId(String detectIntentResponseId) {
    this.detectIntentResponseId = detectIntentResponseId;
  }


  public GoogleCloudDialogflowCxV3beta1WebhookRequest dtmfDigits(String dtmfDigits) {
    this.dtmfDigits = dtmfDigits;
    return this;
  }

  /**
   * If DTMF was provided as input, this field will contain the DTMF digits.
   * @return dtmfDigits
   */
  @javax.annotation.Nullable
  public String getDtmfDigits() {
    return dtmfDigits;
  }

  public void setDtmfDigits(String dtmfDigits) {
    this.dtmfDigits = dtmfDigits;
  }


  public GoogleCloudDialogflowCxV3beta1WebhookRequest fulfillmentInfo(GoogleCloudDialogflowCxV3beta1WebhookRequestFulfillmentInfo fulfillmentInfo) {
    this.fulfillmentInfo = fulfillmentInfo;
    return this;
  }

  /**
   * Get fulfillmentInfo
   * @return fulfillmentInfo
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowCxV3beta1WebhookRequestFulfillmentInfo getFulfillmentInfo() {
    return fulfillmentInfo;
  }

  public void setFulfillmentInfo(GoogleCloudDialogflowCxV3beta1WebhookRequestFulfillmentInfo fulfillmentInfo) {
    this.fulfillmentInfo = fulfillmentInfo;
  }


  public GoogleCloudDialogflowCxV3beta1WebhookRequest intentInfo(GoogleCloudDialogflowCxV3beta1WebhookRequestIntentInfo intentInfo) {
    this.intentInfo = intentInfo;
    return this;
  }

  /**
   * Get intentInfo
   * @return intentInfo
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowCxV3beta1WebhookRequestIntentInfo getIntentInfo() {
    return intentInfo;
  }

  public void setIntentInfo(GoogleCloudDialogflowCxV3beta1WebhookRequestIntentInfo intentInfo) {
    this.intentInfo = intentInfo;
  }


  public GoogleCloudDialogflowCxV3beta1WebhookRequest languageCode(String languageCode) {
    this.languageCode = languageCode;
    return this;
  }

  /**
   * The language code specified in the original request.
   * @return languageCode
   */
  @javax.annotation.Nullable
  public String getLanguageCode() {
    return languageCode;
  }

  public void setLanguageCode(String languageCode) {
    this.languageCode = languageCode;
  }


  public GoogleCloudDialogflowCxV3beta1WebhookRequest messages(List<GoogleCloudDialogflowCxV3beta1ResponseMessage> messages) {
    this.messages = messages;
    return this;
  }

  public GoogleCloudDialogflowCxV3beta1WebhookRequest addMessagesItem(GoogleCloudDialogflowCxV3beta1ResponseMessage messagesItem) {
    if (this.messages == null) {
      this.messages = new ArrayList<>();
    }
    this.messages.add(messagesItem);
    return this;
  }

  /**
   * The list of rich message responses to present to the user. Webhook can choose to append or replace this list in WebhookResponse.fulfillment_response;
   * @return messages
   */
  @javax.annotation.Nullable
  public List<GoogleCloudDialogflowCxV3beta1ResponseMessage> getMessages() {
    return messages;
  }

  public void setMessages(List<GoogleCloudDialogflowCxV3beta1ResponseMessage> messages) {
    this.messages = messages;
  }


  public GoogleCloudDialogflowCxV3beta1WebhookRequest pageInfo(GoogleCloudDialogflowCxV3beta1PageInfo pageInfo) {
    this.pageInfo = pageInfo;
    return this;
  }

  /**
   * Get pageInfo
   * @return pageInfo
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowCxV3beta1PageInfo getPageInfo() {
    return pageInfo;
  }

  public void setPageInfo(GoogleCloudDialogflowCxV3beta1PageInfo pageInfo) {
    this.pageInfo = pageInfo;
  }


  public GoogleCloudDialogflowCxV3beta1WebhookRequest payload(Map<String, Object> payload) {
    this.payload = payload;
    return this;
  }

  public GoogleCloudDialogflowCxV3beta1WebhookRequest putPayloadItem(String key, Object payloadItem) {
    if (this.payload == null) {
      this.payload = new HashMap<>();
    }
    this.payload.put(key, payloadItem);
    return this;
  }

  /**
   * Custom data set in QueryParameters.payload.
   * @return payload
   */
  @javax.annotation.Nullable
  public Map<String, Object> getPayload() {
    return payload;
  }

  public void setPayload(Map<String, Object> payload) {
    this.payload = payload;
  }


  public GoogleCloudDialogflowCxV3beta1WebhookRequest sentimentAnalysisResult(GoogleCloudDialogflowCxV3beta1WebhookRequestSentimentAnalysisResult sentimentAnalysisResult) {
    this.sentimentAnalysisResult = sentimentAnalysisResult;
    return this;
  }

  /**
   * Get sentimentAnalysisResult
   * @return sentimentAnalysisResult
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowCxV3beta1WebhookRequestSentimentAnalysisResult getSentimentAnalysisResult() {
    return sentimentAnalysisResult;
  }

  public void setSentimentAnalysisResult(GoogleCloudDialogflowCxV3beta1WebhookRequestSentimentAnalysisResult sentimentAnalysisResult) {
    this.sentimentAnalysisResult = sentimentAnalysisResult;
  }


  public GoogleCloudDialogflowCxV3beta1WebhookRequest sessionInfo(GoogleCloudDialogflowCxV3beta1SessionInfo sessionInfo) {
    this.sessionInfo = sessionInfo;
    return this;
  }

  /**
   * Get sessionInfo
   * @return sessionInfo
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowCxV3beta1SessionInfo getSessionInfo() {
    return sessionInfo;
  }

  public void setSessionInfo(GoogleCloudDialogflowCxV3beta1SessionInfo sessionInfo) {
    this.sessionInfo = sessionInfo;
  }


  public GoogleCloudDialogflowCxV3beta1WebhookRequest text(String text) {
    this.text = text;
    return this;
  }

  /**
   * If natural language text was provided as input, this field will contain a copy of the text.
   * @return text
   */
  @javax.annotation.Nullable
  public String getText() {
    return text;
  }

  public void setText(String text) {
    this.text = text;
  }


  public GoogleCloudDialogflowCxV3beta1WebhookRequest transcript(String transcript) {
    this.transcript = transcript;
    return this;
  }

  /**
   * If natural language speech audio was provided as input, this field will contain the transcript for the audio.
   * @return transcript
   */
  @javax.annotation.Nullable
  public String getTranscript() {
    return transcript;
  }

  public void setTranscript(String transcript) {
    this.transcript = transcript;
  }


  public GoogleCloudDialogflowCxV3beta1WebhookRequest triggerEvent(String triggerEvent) {
    this.triggerEvent = triggerEvent;
    return this;
  }

  /**
   * If an event was provided as input, this field will contain the name of the event.
   * @return triggerEvent
   */
  @javax.annotation.Nullable
  public String getTriggerEvent() {
    return triggerEvent;
  }

  public void setTriggerEvent(String triggerEvent) {
    this.triggerEvent = triggerEvent;
  }


  public GoogleCloudDialogflowCxV3beta1WebhookRequest triggerIntent(String triggerIntent) {
    this.triggerIntent = triggerIntent;
    return this;
  }

  /**
   * If an intent was provided as input, this field will contain a copy of the intent identifier. Format: &#x60;projects//locations//agents//intents/&#x60;.
   * @return triggerIntent
   */
  @javax.annotation.Nullable
  public String getTriggerIntent() {
    return triggerIntent;
  }

  public void setTriggerIntent(String triggerIntent) {
    this.triggerIntent = triggerIntent;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDialogflowCxV3beta1WebhookRequest googleCloudDialogflowCxV3beta1WebhookRequest = (GoogleCloudDialogflowCxV3beta1WebhookRequest) o;
    return Objects.equals(this.detectIntentResponseId, googleCloudDialogflowCxV3beta1WebhookRequest.detectIntentResponseId) &&
        Objects.equals(this.dtmfDigits, googleCloudDialogflowCxV3beta1WebhookRequest.dtmfDigits) &&
        Objects.equals(this.fulfillmentInfo, googleCloudDialogflowCxV3beta1WebhookRequest.fulfillmentInfo) &&
        Objects.equals(this.intentInfo, googleCloudDialogflowCxV3beta1WebhookRequest.intentInfo) &&
        Objects.equals(this.languageCode, googleCloudDialogflowCxV3beta1WebhookRequest.languageCode) &&
        Objects.equals(this.messages, googleCloudDialogflowCxV3beta1WebhookRequest.messages) &&
        Objects.equals(this.pageInfo, googleCloudDialogflowCxV3beta1WebhookRequest.pageInfo) &&
        Objects.equals(this.payload, googleCloudDialogflowCxV3beta1WebhookRequest.payload) &&
        Objects.equals(this.sentimentAnalysisResult, googleCloudDialogflowCxV3beta1WebhookRequest.sentimentAnalysisResult) &&
        Objects.equals(this.sessionInfo, googleCloudDialogflowCxV3beta1WebhookRequest.sessionInfo) &&
        Objects.equals(this.text, googleCloudDialogflowCxV3beta1WebhookRequest.text) &&
        Objects.equals(this.transcript, googleCloudDialogflowCxV3beta1WebhookRequest.transcript) &&
        Objects.equals(this.triggerEvent, googleCloudDialogflowCxV3beta1WebhookRequest.triggerEvent) &&
        Objects.equals(this.triggerIntent, googleCloudDialogflowCxV3beta1WebhookRequest.triggerIntent);
  }

  @Override
  public int hashCode() {
    return Objects.hash(detectIntentResponseId, dtmfDigits, fulfillmentInfo, intentInfo, languageCode, messages, pageInfo, payload, sentimentAnalysisResult, sessionInfo, text, transcript, triggerEvent, triggerIntent);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDialogflowCxV3beta1WebhookRequest {\n");
    sb.append("    detectIntentResponseId: ").append(toIndentedString(detectIntentResponseId)).append("\n");
    sb.append("    dtmfDigits: ").append(toIndentedString(dtmfDigits)).append("\n");
    sb.append("    fulfillmentInfo: ").append(toIndentedString(fulfillmentInfo)).append("\n");
    sb.append("    intentInfo: ").append(toIndentedString(intentInfo)).append("\n");
    sb.append("    languageCode: ").append(toIndentedString(languageCode)).append("\n");
    sb.append("    messages: ").append(toIndentedString(messages)).append("\n");
    sb.append("    pageInfo: ").append(toIndentedString(pageInfo)).append("\n");
    sb.append("    payload: ").append(toIndentedString(payload)).append("\n");
    sb.append("    sentimentAnalysisResult: ").append(toIndentedString(sentimentAnalysisResult)).append("\n");
    sb.append("    sessionInfo: ").append(toIndentedString(sessionInfo)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    transcript: ").append(toIndentedString(transcript)).append("\n");
    sb.append("    triggerEvent: ").append(toIndentedString(triggerEvent)).append("\n");
    sb.append("    triggerIntent: ").append(toIndentedString(triggerIntent)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("detectIntentResponseId");
    openapiFields.add("dtmfDigits");
    openapiFields.add("fulfillmentInfo");
    openapiFields.add("intentInfo");
    openapiFields.add("languageCode");
    openapiFields.add("messages");
    openapiFields.add("pageInfo");
    openapiFields.add("payload");
    openapiFields.add("sentimentAnalysisResult");
    openapiFields.add("sessionInfo");
    openapiFields.add("text");
    openapiFields.add("transcript");
    openapiFields.add("triggerEvent");
    openapiFields.add("triggerIntent");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDialogflowCxV3beta1WebhookRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDialogflowCxV3beta1WebhookRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDialogflowCxV3beta1WebhookRequest is not found in the empty JSON string", GoogleCloudDialogflowCxV3beta1WebhookRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDialogflowCxV3beta1WebhookRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDialogflowCxV3beta1WebhookRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("detectIntentResponseId") != null && !jsonObj.get("detectIntentResponseId").isJsonNull()) && !jsonObj.get("detectIntentResponseId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `detectIntentResponseId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("detectIntentResponseId").toString()));
      }
      if ((jsonObj.get("dtmfDigits") != null && !jsonObj.get("dtmfDigits").isJsonNull()) && !jsonObj.get("dtmfDigits").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dtmfDigits` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dtmfDigits").toString()));
      }
      // validate the optional field `fulfillmentInfo`
      if (jsonObj.get("fulfillmentInfo") != null && !jsonObj.get("fulfillmentInfo").isJsonNull()) {
        GoogleCloudDialogflowCxV3beta1WebhookRequestFulfillmentInfo.validateJsonElement(jsonObj.get("fulfillmentInfo"));
      }
      // validate the optional field `intentInfo`
      if (jsonObj.get("intentInfo") != null && !jsonObj.get("intentInfo").isJsonNull()) {
        GoogleCloudDialogflowCxV3beta1WebhookRequestIntentInfo.validateJsonElement(jsonObj.get("intentInfo"));
      }
      if ((jsonObj.get("languageCode") != null && !jsonObj.get("languageCode").isJsonNull()) && !jsonObj.get("languageCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `languageCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("languageCode").toString()));
      }
      if (jsonObj.get("messages") != null && !jsonObj.get("messages").isJsonNull()) {
        JsonArray jsonArraymessages = jsonObj.getAsJsonArray("messages");
        if (jsonArraymessages != null) {
          // ensure the json data is an array
          if (!jsonObj.get("messages").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `messages` to be an array in the JSON string but got `%s`", jsonObj.get("messages").toString()));
          }

          // validate the optional field `messages` (array)
          for (int i = 0; i < jsonArraymessages.size(); i++) {
            GoogleCloudDialogflowCxV3beta1ResponseMessage.validateJsonElement(jsonArraymessages.get(i));
          };
        }
      }
      // validate the optional field `pageInfo`
      if (jsonObj.get("pageInfo") != null && !jsonObj.get("pageInfo").isJsonNull()) {
        GoogleCloudDialogflowCxV3beta1PageInfo.validateJsonElement(jsonObj.get("pageInfo"));
      }
      // validate the optional field `sentimentAnalysisResult`
      if (jsonObj.get("sentimentAnalysisResult") != null && !jsonObj.get("sentimentAnalysisResult").isJsonNull()) {
        GoogleCloudDialogflowCxV3beta1WebhookRequestSentimentAnalysisResult.validateJsonElement(jsonObj.get("sentimentAnalysisResult"));
      }
      // validate the optional field `sessionInfo`
      if (jsonObj.get("sessionInfo") != null && !jsonObj.get("sessionInfo").isJsonNull()) {
        GoogleCloudDialogflowCxV3beta1SessionInfo.validateJsonElement(jsonObj.get("sessionInfo"));
      }
      if ((jsonObj.get("text") != null && !jsonObj.get("text").isJsonNull()) && !jsonObj.get("text").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `text` to be a primitive type in the JSON string but got `%s`", jsonObj.get("text").toString()));
      }
      if ((jsonObj.get("transcript") != null && !jsonObj.get("transcript").isJsonNull()) && !jsonObj.get("transcript").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `transcript` to be a primitive type in the JSON string but got `%s`", jsonObj.get("transcript").toString()));
      }
      if ((jsonObj.get("triggerEvent") != null && !jsonObj.get("triggerEvent").isJsonNull()) && !jsonObj.get("triggerEvent").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `triggerEvent` to be a primitive type in the JSON string but got `%s`", jsonObj.get("triggerEvent").toString()));
      }
      if ((jsonObj.get("triggerIntent") != null && !jsonObj.get("triggerIntent").isJsonNull()) && !jsonObj.get("triggerIntent").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `triggerIntent` to be a primitive type in the JSON string but got `%s`", jsonObj.get("triggerIntent").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDialogflowCxV3beta1WebhookRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDialogflowCxV3beta1WebhookRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDialogflowCxV3beta1WebhookRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDialogflowCxV3beta1WebhookRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDialogflowCxV3beta1WebhookRequest>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDialogflowCxV3beta1WebhookRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDialogflowCxV3beta1WebhookRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDialogflowCxV3beta1WebhookRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDialogflowCxV3beta1WebhookRequest
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDialogflowCxV3beta1WebhookRequest
   */
  public static GoogleCloudDialogflowCxV3beta1WebhookRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDialogflowCxV3beta1WebhookRequest.class);
  }

  /**
   * Convert an instance of GoogleCloudDialogflowCxV3beta1WebhookRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

