/*
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents intent parameters.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:48:05.098863-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDialogflowV2beta1IntentParameter {
  public static final String SERIALIZED_NAME_DEFAULT_VALUE = "defaultValue";
  @SerializedName(SERIALIZED_NAME_DEFAULT_VALUE)
  private String defaultValue;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_ENTITY_TYPE_DISPLAY_NAME = "entityTypeDisplayName";
  @SerializedName(SERIALIZED_NAME_ENTITY_TYPE_DISPLAY_NAME)
  private String entityTypeDisplayName;

  public static final String SERIALIZED_NAME_IS_LIST = "isList";
  @SerializedName(SERIALIZED_NAME_IS_LIST)
  private Boolean isList;

  public static final String SERIALIZED_NAME_MANDATORY = "mandatory";
  @SerializedName(SERIALIZED_NAME_MANDATORY)
  private Boolean mandatory;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PROMPTS = "prompts";
  @SerializedName(SERIALIZED_NAME_PROMPTS)
  private List<String> prompts = new ArrayList<>();

  public static final String SERIALIZED_NAME_VALUE = "value";
  @SerializedName(SERIALIZED_NAME_VALUE)
  private String value;

  public GoogleCloudDialogflowV2beta1IntentParameter() {
  }

  public GoogleCloudDialogflowV2beta1IntentParameter defaultValue(String defaultValue) {
    this.defaultValue = defaultValue;
    return this;
  }

  /**
   * Optional. The default value to use when the &#x60;value&#x60; yields an empty result. Default values can be extracted from contexts by using the following syntax: &#x60;#context_name.parameter_name&#x60;.
   * @return defaultValue
   */
  @javax.annotation.Nullable
  public String getDefaultValue() {
    return defaultValue;
  }

  public void setDefaultValue(String defaultValue) {
    this.defaultValue = defaultValue;
  }


  public GoogleCloudDialogflowV2beta1IntentParameter displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Required. The name of the parameter.
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public GoogleCloudDialogflowV2beta1IntentParameter entityTypeDisplayName(String entityTypeDisplayName) {
    this.entityTypeDisplayName = entityTypeDisplayName;
    return this;
  }

  /**
   * Optional. The name of the entity type, prefixed with &#x60;@&#x60;, that describes values of the parameter. If the parameter is required, this must be provided.
   * @return entityTypeDisplayName
   */
  @javax.annotation.Nullable
  public String getEntityTypeDisplayName() {
    return entityTypeDisplayName;
  }

  public void setEntityTypeDisplayName(String entityTypeDisplayName) {
    this.entityTypeDisplayName = entityTypeDisplayName;
  }


  public GoogleCloudDialogflowV2beta1IntentParameter isList(Boolean isList) {
    this.isList = isList;
    return this;
  }

  /**
   * Optional. Indicates whether the parameter represents a list of values.
   * @return isList
   */
  @javax.annotation.Nullable
  public Boolean getIsList() {
    return isList;
  }

  public void setIsList(Boolean isList) {
    this.isList = isList;
  }


  public GoogleCloudDialogflowV2beta1IntentParameter mandatory(Boolean mandatory) {
    this.mandatory = mandatory;
    return this;
  }

  /**
   * Optional. Indicates whether the parameter is required. That is, whether the intent cannot be completed without collecting the parameter value.
   * @return mandatory
   */
  @javax.annotation.Nullable
  public Boolean getMandatory() {
    return mandatory;
  }

  public void setMandatory(Boolean mandatory) {
    this.mandatory = mandatory;
  }


  public GoogleCloudDialogflowV2beta1IntentParameter name(String name) {
    this.name = name;
    return this;
  }

  /**
   * The unique identifier of this parameter.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public GoogleCloudDialogflowV2beta1IntentParameter prompts(List<String> prompts) {
    this.prompts = prompts;
    return this;
  }

  public GoogleCloudDialogflowV2beta1IntentParameter addPromptsItem(String promptsItem) {
    if (this.prompts == null) {
      this.prompts = new ArrayList<>();
    }
    this.prompts.add(promptsItem);
    return this;
  }

  /**
   * Optional. The collection of prompts that the agent can present to the user in order to collect a value for the parameter.
   * @return prompts
   */
  @javax.annotation.Nullable
  public List<String> getPrompts() {
    return prompts;
  }

  public void setPrompts(List<String> prompts) {
    this.prompts = prompts;
  }


  public GoogleCloudDialogflowV2beta1IntentParameter value(String value) {
    this.value = value;
    return this;
  }

  /**
   * Optional. The definition of the parameter value. It can be: - a constant string, - a parameter value defined as &#x60;$parameter_name&#x60;, - an original parameter value defined as &#x60;$parameter_name.original&#x60;, - a parameter value from some context defined as &#x60;#context_name.parameter_name&#x60;.
   * @return value
   */
  @javax.annotation.Nullable
  public String getValue() {
    return value;
  }

  public void setValue(String value) {
    this.value = value;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDialogflowV2beta1IntentParameter googleCloudDialogflowV2beta1IntentParameter = (GoogleCloudDialogflowV2beta1IntentParameter) o;
    return Objects.equals(this.defaultValue, googleCloudDialogflowV2beta1IntentParameter.defaultValue) &&
        Objects.equals(this.displayName, googleCloudDialogflowV2beta1IntentParameter.displayName) &&
        Objects.equals(this.entityTypeDisplayName, googleCloudDialogflowV2beta1IntentParameter.entityTypeDisplayName) &&
        Objects.equals(this.isList, googleCloudDialogflowV2beta1IntentParameter.isList) &&
        Objects.equals(this.mandatory, googleCloudDialogflowV2beta1IntentParameter.mandatory) &&
        Objects.equals(this.name, googleCloudDialogflowV2beta1IntentParameter.name) &&
        Objects.equals(this.prompts, googleCloudDialogflowV2beta1IntentParameter.prompts) &&
        Objects.equals(this.value, googleCloudDialogflowV2beta1IntentParameter.value);
  }

  @Override
  public int hashCode() {
    return Objects.hash(defaultValue, displayName, entityTypeDisplayName, isList, mandatory, name, prompts, value);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDialogflowV2beta1IntentParameter {\n");
    sb.append("    defaultValue: ").append(toIndentedString(defaultValue)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    entityTypeDisplayName: ").append(toIndentedString(entityTypeDisplayName)).append("\n");
    sb.append("    isList: ").append(toIndentedString(isList)).append("\n");
    sb.append("    mandatory: ").append(toIndentedString(mandatory)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    prompts: ").append(toIndentedString(prompts)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("defaultValue");
    openapiFields.add("displayName");
    openapiFields.add("entityTypeDisplayName");
    openapiFields.add("isList");
    openapiFields.add("mandatory");
    openapiFields.add("name");
    openapiFields.add("prompts");
    openapiFields.add("value");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDialogflowV2beta1IntentParameter
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDialogflowV2beta1IntentParameter.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDialogflowV2beta1IntentParameter is not found in the empty JSON string", GoogleCloudDialogflowV2beta1IntentParameter.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDialogflowV2beta1IntentParameter.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDialogflowV2beta1IntentParameter` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("defaultValue") != null && !jsonObj.get("defaultValue").isJsonNull()) && !jsonObj.get("defaultValue").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `defaultValue` to be a primitive type in the JSON string but got `%s`", jsonObj.get("defaultValue").toString()));
      }
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      if ((jsonObj.get("entityTypeDisplayName") != null && !jsonObj.get("entityTypeDisplayName").isJsonNull()) && !jsonObj.get("entityTypeDisplayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `entityTypeDisplayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("entityTypeDisplayName").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("prompts") != null && !jsonObj.get("prompts").isJsonNull() && !jsonObj.get("prompts").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `prompts` to be an array in the JSON string but got `%s`", jsonObj.get("prompts").toString()));
      }
      if ((jsonObj.get("value") != null && !jsonObj.get("value").isJsonNull()) && !jsonObj.get("value").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `value` to be a primitive type in the JSON string but got `%s`", jsonObj.get("value").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDialogflowV2beta1IntentParameter.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDialogflowV2beta1IntentParameter' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDialogflowV2beta1IntentParameter> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDialogflowV2beta1IntentParameter.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDialogflowV2beta1IntentParameter>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDialogflowV2beta1IntentParameter value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDialogflowV2beta1IntentParameter read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDialogflowV2beta1IntentParameter given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDialogflowV2beta1IntentParameter
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDialogflowV2beta1IntentParameter
   */
  public static GoogleCloudDialogflowV2beta1IntentParameter fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDialogflowV2beta1IntentParameter.class);
  }

  /**
   * Convert an instance of GoogleCloudDialogflowV2beta1IntentParameter to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

