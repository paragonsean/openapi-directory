/*
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudDialogflowV2Context;
import org.openapitools.client.model.GoogleCloudDialogflowV2IntentFollowupIntentInfo;
import org.openapitools.client.model.GoogleCloudDialogflowV2IntentMessage;
import org.openapitools.client.model.GoogleCloudDialogflowV2IntentParameter;
import org.openapitools.client.model.GoogleCloudDialogflowV2IntentTrainingPhrase;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * An intent categorizes an end-user&#39;s intention for one conversation turn. For each agent, you define many intents, where your combined intents can handle a complete conversation. When an end-user writes or says something, referred to as an end-user expression or end-user input, Dialogflow matches the end-user input to the best intent in your agent. Matching an intent is also known as intent classification. For more information, see the [intent guide](https://cloud.google.com/dialogflow/docs/intents-overview).
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:48:05.098863-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDialogflowV2Intent {
  public static final String SERIALIZED_NAME_ACTION = "action";
  @SerializedName(SERIALIZED_NAME_ACTION)
  private String action;

  /**
   * Gets or Sets defaultResponsePlatforms
   */
  @JsonAdapter(DefaultResponsePlatformsEnum.Adapter.class)
  public enum DefaultResponsePlatformsEnum {
    PLATFORM_UNSPECIFIED("PLATFORM_UNSPECIFIED"),
    
    FACEBOOK("FACEBOOK"),
    
    SLACK("SLACK"),
    
    TELEGRAM("TELEGRAM"),
    
    KIK("KIK"),
    
    SKYPE("SKYPE"),
    
    LINE("LINE"),
    
    VIBER("VIBER"),
    
    ACTIONS_ON_GOOGLE("ACTIONS_ON_GOOGLE"),
    
    GOOGLE_HANGOUTS("GOOGLE_HANGOUTS");

    private String value;

    DefaultResponsePlatformsEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static DefaultResponsePlatformsEnum fromValue(String value) {
      for (DefaultResponsePlatformsEnum b : DefaultResponsePlatformsEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<DefaultResponsePlatformsEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DefaultResponsePlatformsEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public DefaultResponsePlatformsEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return DefaultResponsePlatformsEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      DefaultResponsePlatformsEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_DEFAULT_RESPONSE_PLATFORMS = "defaultResponsePlatforms";
  @SerializedName(SERIALIZED_NAME_DEFAULT_RESPONSE_PLATFORMS)
  private List<DefaultResponsePlatformsEnum> defaultResponsePlatforms = new ArrayList<>();

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_END_INTERACTION = "endInteraction";
  @SerializedName(SERIALIZED_NAME_END_INTERACTION)
  private Boolean endInteraction;

  public static final String SERIALIZED_NAME_EVENTS = "events";
  @SerializedName(SERIALIZED_NAME_EVENTS)
  private List<String> events = new ArrayList<>();

  public static final String SERIALIZED_NAME_FOLLOWUP_INTENT_INFO = "followupIntentInfo";
  @SerializedName(SERIALIZED_NAME_FOLLOWUP_INTENT_INFO)
  private List<GoogleCloudDialogflowV2IntentFollowupIntentInfo> followupIntentInfo = new ArrayList<>();

  public static final String SERIALIZED_NAME_INPUT_CONTEXT_NAMES = "inputContextNames";
  @SerializedName(SERIALIZED_NAME_INPUT_CONTEXT_NAMES)
  private List<String> inputContextNames = new ArrayList<>();

  public static final String SERIALIZED_NAME_IS_FALLBACK = "isFallback";
  @SerializedName(SERIALIZED_NAME_IS_FALLBACK)
  private Boolean isFallback;

  public static final String SERIALIZED_NAME_LIVE_AGENT_HANDOFF = "liveAgentHandoff";
  @SerializedName(SERIALIZED_NAME_LIVE_AGENT_HANDOFF)
  private Boolean liveAgentHandoff;

  public static final String SERIALIZED_NAME_MESSAGES = "messages";
  @SerializedName(SERIALIZED_NAME_MESSAGES)
  private List<GoogleCloudDialogflowV2IntentMessage> messages = new ArrayList<>();

  public static final String SERIALIZED_NAME_ML_DISABLED = "mlDisabled";
  @SerializedName(SERIALIZED_NAME_ML_DISABLED)
  private Boolean mlDisabled;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_OUTPUT_CONTEXTS = "outputContexts";
  @SerializedName(SERIALIZED_NAME_OUTPUT_CONTEXTS)
  private List<GoogleCloudDialogflowV2Context> outputContexts = new ArrayList<>();

  public static final String SERIALIZED_NAME_PARAMETERS = "parameters";
  @SerializedName(SERIALIZED_NAME_PARAMETERS)
  private List<GoogleCloudDialogflowV2IntentParameter> parameters = new ArrayList<>();

  public static final String SERIALIZED_NAME_PARENT_FOLLOWUP_INTENT_NAME = "parentFollowupIntentName";
  @SerializedName(SERIALIZED_NAME_PARENT_FOLLOWUP_INTENT_NAME)
  private String parentFollowupIntentName;

  public static final String SERIALIZED_NAME_PRIORITY = "priority";
  @SerializedName(SERIALIZED_NAME_PRIORITY)
  private Integer priority;

  public static final String SERIALIZED_NAME_RESET_CONTEXTS = "resetContexts";
  @SerializedName(SERIALIZED_NAME_RESET_CONTEXTS)
  private Boolean resetContexts;

  public static final String SERIALIZED_NAME_ROOT_FOLLOWUP_INTENT_NAME = "rootFollowupIntentName";
  @SerializedName(SERIALIZED_NAME_ROOT_FOLLOWUP_INTENT_NAME)
  private String rootFollowupIntentName;

  public static final String SERIALIZED_NAME_TRAINING_PHRASES = "trainingPhrases";
  @SerializedName(SERIALIZED_NAME_TRAINING_PHRASES)
  private List<GoogleCloudDialogflowV2IntentTrainingPhrase> trainingPhrases = new ArrayList<>();

  /**
   * Optional. Indicates whether webhooks are enabled for the intent.
   */
  @JsonAdapter(WebhookStateEnum.Adapter.class)
  public enum WebhookStateEnum {
    UNSPECIFIED("WEBHOOK_STATE_UNSPECIFIED"),
    
    ENABLED("WEBHOOK_STATE_ENABLED"),
    
    ENABLED_FOR_SLOT_FILLING("WEBHOOK_STATE_ENABLED_FOR_SLOT_FILLING");

    private String value;

    WebhookStateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static WebhookStateEnum fromValue(String value) {
      for (WebhookStateEnum b : WebhookStateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<WebhookStateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final WebhookStateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public WebhookStateEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return WebhookStateEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      WebhookStateEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_WEBHOOK_STATE = "webhookState";
  @SerializedName(SERIALIZED_NAME_WEBHOOK_STATE)
  private WebhookStateEnum webhookState;

  public GoogleCloudDialogflowV2Intent() {
  }

  public GoogleCloudDialogflowV2Intent(
     List<GoogleCloudDialogflowV2IntentFollowupIntentInfo> followupIntentInfo, 
     String rootFollowupIntentName
  ) {
    this();
    this.followupIntentInfo = followupIntentInfo;
    this.rootFollowupIntentName = rootFollowupIntentName;
  }

  public GoogleCloudDialogflowV2Intent action(String action) {
    this.action = action;
    return this;
  }

  /**
   * Optional. The name of the action associated with the intent. Note: The action name must not contain whitespaces.
   * @return action
   */
  @javax.annotation.Nullable
  public String getAction() {
    return action;
  }

  public void setAction(String action) {
    this.action = action;
  }


  public GoogleCloudDialogflowV2Intent defaultResponsePlatforms(List<DefaultResponsePlatformsEnum> defaultResponsePlatforms) {
    this.defaultResponsePlatforms = defaultResponsePlatforms;
    return this;
  }

  public GoogleCloudDialogflowV2Intent addDefaultResponsePlatformsItem(DefaultResponsePlatformsEnum defaultResponsePlatformsItem) {
    if (this.defaultResponsePlatforms == null) {
      this.defaultResponsePlatforms = new ArrayList<>();
    }
    this.defaultResponsePlatforms.add(defaultResponsePlatformsItem);
    return this;
  }

  /**
   * Optional. The list of platforms for which the first responses will be copied from the messages in PLATFORM_UNSPECIFIED (i.e. default platform).
   * @return defaultResponsePlatforms
   */
  @javax.annotation.Nullable
  public List<DefaultResponsePlatformsEnum> getDefaultResponsePlatforms() {
    return defaultResponsePlatforms;
  }

  public void setDefaultResponsePlatforms(List<DefaultResponsePlatformsEnum> defaultResponsePlatforms) {
    this.defaultResponsePlatforms = defaultResponsePlatforms;
  }


  public GoogleCloudDialogflowV2Intent displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Required. The name of this intent.
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public GoogleCloudDialogflowV2Intent endInteraction(Boolean endInteraction) {
    this.endInteraction = endInteraction;
    return this;
  }

  /**
   * Optional. Indicates that this intent ends an interaction. Some integrations (e.g., Actions on Google or Dialogflow phone gateway) use this information to close interaction with an end user. Default is false.
   * @return endInteraction
   */
  @javax.annotation.Nullable
  public Boolean getEndInteraction() {
    return endInteraction;
  }

  public void setEndInteraction(Boolean endInteraction) {
    this.endInteraction = endInteraction;
  }


  public GoogleCloudDialogflowV2Intent events(List<String> events) {
    this.events = events;
    return this;
  }

  public GoogleCloudDialogflowV2Intent addEventsItem(String eventsItem) {
    if (this.events == null) {
      this.events = new ArrayList<>();
    }
    this.events.add(eventsItem);
    return this;
  }

  /**
   * Optional. The collection of event names that trigger the intent. If the collection of input contexts is not empty, all of the contexts must be present in the active user session for an event to trigger this intent. Event names are limited to 150 characters.
   * @return events
   */
  @javax.annotation.Nullable
  public List<String> getEvents() {
    return events;
  }

  public void setEvents(List<String> events) {
    this.events = events;
  }


  /**
   * Output only. Read-only. Information about all followup intents that have this intent as a direct or indirect parent. We populate this field only in the output.
   * @return followupIntentInfo
   */
  @javax.annotation.Nullable
  public List<GoogleCloudDialogflowV2IntentFollowupIntentInfo> getFollowupIntentInfo() {
    return followupIntentInfo;
  }



  public GoogleCloudDialogflowV2Intent inputContextNames(List<String> inputContextNames) {
    this.inputContextNames = inputContextNames;
    return this;
  }

  public GoogleCloudDialogflowV2Intent addInputContextNamesItem(String inputContextNamesItem) {
    if (this.inputContextNames == null) {
      this.inputContextNames = new ArrayList<>();
    }
    this.inputContextNames.add(inputContextNamesItem);
    return this;
  }

  /**
   * Optional. The list of context names required for this intent to be triggered. Format: &#x60;projects//agent/sessions/-/contexts/&#x60;.
   * @return inputContextNames
   */
  @javax.annotation.Nullable
  public List<String> getInputContextNames() {
    return inputContextNames;
  }

  public void setInputContextNames(List<String> inputContextNames) {
    this.inputContextNames = inputContextNames;
  }


  public GoogleCloudDialogflowV2Intent isFallback(Boolean isFallback) {
    this.isFallback = isFallback;
    return this;
  }

  /**
   * Optional. Indicates whether this is a fallback intent.
   * @return isFallback
   */
  @javax.annotation.Nullable
  public Boolean getIsFallback() {
    return isFallback;
  }

  public void setIsFallback(Boolean isFallback) {
    this.isFallback = isFallback;
  }


  public GoogleCloudDialogflowV2Intent liveAgentHandoff(Boolean liveAgentHandoff) {
    this.liveAgentHandoff = liveAgentHandoff;
    return this;
  }

  /**
   * Optional. Indicates that a live agent should be brought in to handle the interaction with the user. In most cases, when you set this flag to true, you would also want to set end_interaction to true as well. Default is false.
   * @return liveAgentHandoff
   */
  @javax.annotation.Nullable
  public Boolean getLiveAgentHandoff() {
    return liveAgentHandoff;
  }

  public void setLiveAgentHandoff(Boolean liveAgentHandoff) {
    this.liveAgentHandoff = liveAgentHandoff;
  }


  public GoogleCloudDialogflowV2Intent messages(List<GoogleCloudDialogflowV2IntentMessage> messages) {
    this.messages = messages;
    return this;
  }

  public GoogleCloudDialogflowV2Intent addMessagesItem(GoogleCloudDialogflowV2IntentMessage messagesItem) {
    if (this.messages == null) {
      this.messages = new ArrayList<>();
    }
    this.messages.add(messagesItem);
    return this;
  }

  /**
   * Optional. The collection of rich messages corresponding to the &#x60;Response&#x60; field in the Dialogflow console.
   * @return messages
   */
  @javax.annotation.Nullable
  public List<GoogleCloudDialogflowV2IntentMessage> getMessages() {
    return messages;
  }

  public void setMessages(List<GoogleCloudDialogflowV2IntentMessage> messages) {
    this.messages = messages;
  }


  public GoogleCloudDialogflowV2Intent mlDisabled(Boolean mlDisabled) {
    this.mlDisabled = mlDisabled;
    return this;
  }

  /**
   * Optional. Indicates whether Machine Learning is disabled for the intent. Note: If &#x60;ml_disabled&#x60; setting is set to true, then this intent is not taken into account during inference in &#x60;ML ONLY&#x60; match mode. Also, auto-markup in the UI is turned off.
   * @return mlDisabled
   */
  @javax.annotation.Nullable
  public Boolean getMlDisabled() {
    return mlDisabled;
  }

  public void setMlDisabled(Boolean mlDisabled) {
    this.mlDisabled = mlDisabled;
  }


  public GoogleCloudDialogflowV2Intent name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Optional. The unique identifier of this intent. Required for Intents.UpdateIntent and Intents.BatchUpdateIntents methods. Format: &#x60;projects//agent/intents/&#x60;.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public GoogleCloudDialogflowV2Intent outputContexts(List<GoogleCloudDialogflowV2Context> outputContexts) {
    this.outputContexts = outputContexts;
    return this;
  }

  public GoogleCloudDialogflowV2Intent addOutputContextsItem(GoogleCloudDialogflowV2Context outputContextsItem) {
    if (this.outputContexts == null) {
      this.outputContexts = new ArrayList<>();
    }
    this.outputContexts.add(outputContextsItem);
    return this;
  }

  /**
   * Optional. The collection of contexts that are activated when the intent is matched. Context messages in this collection should not set the parameters field. Setting the &#x60;lifespan_count&#x60; to 0 will reset the context when the intent is matched. Format: &#x60;projects//agent/sessions/-/contexts/&#x60;.
   * @return outputContexts
   */
  @javax.annotation.Nullable
  public List<GoogleCloudDialogflowV2Context> getOutputContexts() {
    return outputContexts;
  }

  public void setOutputContexts(List<GoogleCloudDialogflowV2Context> outputContexts) {
    this.outputContexts = outputContexts;
  }


  public GoogleCloudDialogflowV2Intent parameters(List<GoogleCloudDialogflowV2IntentParameter> parameters) {
    this.parameters = parameters;
    return this;
  }

  public GoogleCloudDialogflowV2Intent addParametersItem(GoogleCloudDialogflowV2IntentParameter parametersItem) {
    if (this.parameters == null) {
      this.parameters = new ArrayList<>();
    }
    this.parameters.add(parametersItem);
    return this;
  }

  /**
   * Optional. The collection of parameters associated with the intent.
   * @return parameters
   */
  @javax.annotation.Nullable
  public List<GoogleCloudDialogflowV2IntentParameter> getParameters() {
    return parameters;
  }

  public void setParameters(List<GoogleCloudDialogflowV2IntentParameter> parameters) {
    this.parameters = parameters;
  }


  public GoogleCloudDialogflowV2Intent parentFollowupIntentName(String parentFollowupIntentName) {
    this.parentFollowupIntentName = parentFollowupIntentName;
    return this;
  }

  /**
   * Read-only after creation. The unique identifier of the parent intent in the chain of followup intents. You can set this field when creating an intent, for example with CreateIntent or BatchUpdateIntents, in order to make this intent a followup intent. It identifies the parent followup intent. Format: &#x60;projects//agent/intents/&#x60;.
   * @return parentFollowupIntentName
   */
  @javax.annotation.Nullable
  public String getParentFollowupIntentName() {
    return parentFollowupIntentName;
  }

  public void setParentFollowupIntentName(String parentFollowupIntentName) {
    this.parentFollowupIntentName = parentFollowupIntentName;
  }


  public GoogleCloudDialogflowV2Intent priority(Integer priority) {
    this.priority = priority;
    return this;
  }

  /**
   * Optional. The priority of this intent. Higher numbers represent higher priorities. - If the supplied value is unspecified or 0, the service translates the value to 500,000, which corresponds to the &#x60;Normal&#x60; priority in the console. - If the supplied value is negative, the intent is ignored in runtime detect intent requests.
   * @return priority
   */
  @javax.annotation.Nullable
  public Integer getPriority() {
    return priority;
  }

  public void setPriority(Integer priority) {
    this.priority = priority;
  }


  public GoogleCloudDialogflowV2Intent resetContexts(Boolean resetContexts) {
    this.resetContexts = resetContexts;
    return this;
  }

  /**
   * Optional. Indicates whether to delete all contexts in the current session when this intent is matched.
   * @return resetContexts
   */
  @javax.annotation.Nullable
  public Boolean getResetContexts() {
    return resetContexts;
  }

  public void setResetContexts(Boolean resetContexts) {
    this.resetContexts = resetContexts;
  }


  /**
   * Output only. Read-only. The unique identifier of the root intent in the chain of followup intents. It identifies the correct followup intents chain for this intent. We populate this field only in the output. Format: &#x60;projects//agent/intents/&#x60;.
   * @return rootFollowupIntentName
   */
  @javax.annotation.Nullable
  public String getRootFollowupIntentName() {
    return rootFollowupIntentName;
  }



  public GoogleCloudDialogflowV2Intent trainingPhrases(List<GoogleCloudDialogflowV2IntentTrainingPhrase> trainingPhrases) {
    this.trainingPhrases = trainingPhrases;
    return this;
  }

  public GoogleCloudDialogflowV2Intent addTrainingPhrasesItem(GoogleCloudDialogflowV2IntentTrainingPhrase trainingPhrasesItem) {
    if (this.trainingPhrases == null) {
      this.trainingPhrases = new ArrayList<>();
    }
    this.trainingPhrases.add(trainingPhrasesItem);
    return this;
  }

  /**
   * Optional. The collection of examples that the agent is trained on.
   * @return trainingPhrases
   */
  @javax.annotation.Nullable
  public List<GoogleCloudDialogflowV2IntentTrainingPhrase> getTrainingPhrases() {
    return trainingPhrases;
  }

  public void setTrainingPhrases(List<GoogleCloudDialogflowV2IntentTrainingPhrase> trainingPhrases) {
    this.trainingPhrases = trainingPhrases;
  }


  public GoogleCloudDialogflowV2Intent webhookState(WebhookStateEnum webhookState) {
    this.webhookState = webhookState;
    return this;
  }

  /**
   * Optional. Indicates whether webhooks are enabled for the intent.
   * @return webhookState
   */
  @javax.annotation.Nullable
  public WebhookStateEnum getWebhookState() {
    return webhookState;
  }

  public void setWebhookState(WebhookStateEnum webhookState) {
    this.webhookState = webhookState;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDialogflowV2Intent googleCloudDialogflowV2Intent = (GoogleCloudDialogflowV2Intent) o;
    return Objects.equals(this.action, googleCloudDialogflowV2Intent.action) &&
        Objects.equals(this.defaultResponsePlatforms, googleCloudDialogflowV2Intent.defaultResponsePlatforms) &&
        Objects.equals(this.displayName, googleCloudDialogflowV2Intent.displayName) &&
        Objects.equals(this.endInteraction, googleCloudDialogflowV2Intent.endInteraction) &&
        Objects.equals(this.events, googleCloudDialogflowV2Intent.events) &&
        Objects.equals(this.followupIntentInfo, googleCloudDialogflowV2Intent.followupIntentInfo) &&
        Objects.equals(this.inputContextNames, googleCloudDialogflowV2Intent.inputContextNames) &&
        Objects.equals(this.isFallback, googleCloudDialogflowV2Intent.isFallback) &&
        Objects.equals(this.liveAgentHandoff, googleCloudDialogflowV2Intent.liveAgentHandoff) &&
        Objects.equals(this.messages, googleCloudDialogflowV2Intent.messages) &&
        Objects.equals(this.mlDisabled, googleCloudDialogflowV2Intent.mlDisabled) &&
        Objects.equals(this.name, googleCloudDialogflowV2Intent.name) &&
        Objects.equals(this.outputContexts, googleCloudDialogflowV2Intent.outputContexts) &&
        Objects.equals(this.parameters, googleCloudDialogflowV2Intent.parameters) &&
        Objects.equals(this.parentFollowupIntentName, googleCloudDialogflowV2Intent.parentFollowupIntentName) &&
        Objects.equals(this.priority, googleCloudDialogflowV2Intent.priority) &&
        Objects.equals(this.resetContexts, googleCloudDialogflowV2Intent.resetContexts) &&
        Objects.equals(this.rootFollowupIntentName, googleCloudDialogflowV2Intent.rootFollowupIntentName) &&
        Objects.equals(this.trainingPhrases, googleCloudDialogflowV2Intent.trainingPhrases) &&
        Objects.equals(this.webhookState, googleCloudDialogflowV2Intent.webhookState);
  }

  @Override
  public int hashCode() {
    return Objects.hash(action, defaultResponsePlatforms, displayName, endInteraction, events, followupIntentInfo, inputContextNames, isFallback, liveAgentHandoff, messages, mlDisabled, name, outputContexts, parameters, parentFollowupIntentName, priority, resetContexts, rootFollowupIntentName, trainingPhrases, webhookState);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDialogflowV2Intent {\n");
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    defaultResponsePlatforms: ").append(toIndentedString(defaultResponsePlatforms)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    endInteraction: ").append(toIndentedString(endInteraction)).append("\n");
    sb.append("    events: ").append(toIndentedString(events)).append("\n");
    sb.append("    followupIntentInfo: ").append(toIndentedString(followupIntentInfo)).append("\n");
    sb.append("    inputContextNames: ").append(toIndentedString(inputContextNames)).append("\n");
    sb.append("    isFallback: ").append(toIndentedString(isFallback)).append("\n");
    sb.append("    liveAgentHandoff: ").append(toIndentedString(liveAgentHandoff)).append("\n");
    sb.append("    messages: ").append(toIndentedString(messages)).append("\n");
    sb.append("    mlDisabled: ").append(toIndentedString(mlDisabled)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    outputContexts: ").append(toIndentedString(outputContexts)).append("\n");
    sb.append("    parameters: ").append(toIndentedString(parameters)).append("\n");
    sb.append("    parentFollowupIntentName: ").append(toIndentedString(parentFollowupIntentName)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    resetContexts: ").append(toIndentedString(resetContexts)).append("\n");
    sb.append("    rootFollowupIntentName: ").append(toIndentedString(rootFollowupIntentName)).append("\n");
    sb.append("    trainingPhrases: ").append(toIndentedString(trainingPhrases)).append("\n");
    sb.append("    webhookState: ").append(toIndentedString(webhookState)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("action");
    openapiFields.add("defaultResponsePlatforms");
    openapiFields.add("displayName");
    openapiFields.add("endInteraction");
    openapiFields.add("events");
    openapiFields.add("followupIntentInfo");
    openapiFields.add("inputContextNames");
    openapiFields.add("isFallback");
    openapiFields.add("liveAgentHandoff");
    openapiFields.add("messages");
    openapiFields.add("mlDisabled");
    openapiFields.add("name");
    openapiFields.add("outputContexts");
    openapiFields.add("parameters");
    openapiFields.add("parentFollowupIntentName");
    openapiFields.add("priority");
    openapiFields.add("resetContexts");
    openapiFields.add("rootFollowupIntentName");
    openapiFields.add("trainingPhrases");
    openapiFields.add("webhookState");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDialogflowV2Intent
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDialogflowV2Intent.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDialogflowV2Intent is not found in the empty JSON string", GoogleCloudDialogflowV2Intent.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDialogflowV2Intent.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDialogflowV2Intent` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("action") != null && !jsonObj.get("action").isJsonNull()) && !jsonObj.get("action").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `action` to be a primitive type in the JSON string but got `%s`", jsonObj.get("action").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("defaultResponsePlatforms") != null && !jsonObj.get("defaultResponsePlatforms").isJsonNull() && !jsonObj.get("defaultResponsePlatforms").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `defaultResponsePlatforms` to be an array in the JSON string but got `%s`", jsonObj.get("defaultResponsePlatforms").toString()));
      }
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("events") != null && !jsonObj.get("events").isJsonNull() && !jsonObj.get("events").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `events` to be an array in the JSON string but got `%s`", jsonObj.get("events").toString()));
      }
      if (jsonObj.get("followupIntentInfo") != null && !jsonObj.get("followupIntentInfo").isJsonNull()) {
        JsonArray jsonArrayfollowupIntentInfo = jsonObj.getAsJsonArray("followupIntentInfo");
        if (jsonArrayfollowupIntentInfo != null) {
          // ensure the json data is an array
          if (!jsonObj.get("followupIntentInfo").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `followupIntentInfo` to be an array in the JSON string but got `%s`", jsonObj.get("followupIntentInfo").toString()));
          }

          // validate the optional field `followupIntentInfo` (array)
          for (int i = 0; i < jsonArrayfollowupIntentInfo.size(); i++) {
            GoogleCloudDialogflowV2IntentFollowupIntentInfo.validateJsonElement(jsonArrayfollowupIntentInfo.get(i));
          };
        }
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("inputContextNames") != null && !jsonObj.get("inputContextNames").isJsonNull() && !jsonObj.get("inputContextNames").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `inputContextNames` to be an array in the JSON string but got `%s`", jsonObj.get("inputContextNames").toString()));
      }
      if (jsonObj.get("messages") != null && !jsonObj.get("messages").isJsonNull()) {
        JsonArray jsonArraymessages = jsonObj.getAsJsonArray("messages");
        if (jsonArraymessages != null) {
          // ensure the json data is an array
          if (!jsonObj.get("messages").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `messages` to be an array in the JSON string but got `%s`", jsonObj.get("messages").toString()));
          }

          // validate the optional field `messages` (array)
          for (int i = 0; i < jsonArraymessages.size(); i++) {
            GoogleCloudDialogflowV2IntentMessage.validateJsonElement(jsonArraymessages.get(i));
          };
        }
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if (jsonObj.get("outputContexts") != null && !jsonObj.get("outputContexts").isJsonNull()) {
        JsonArray jsonArrayoutputContexts = jsonObj.getAsJsonArray("outputContexts");
        if (jsonArrayoutputContexts != null) {
          // ensure the json data is an array
          if (!jsonObj.get("outputContexts").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `outputContexts` to be an array in the JSON string but got `%s`", jsonObj.get("outputContexts").toString()));
          }

          // validate the optional field `outputContexts` (array)
          for (int i = 0; i < jsonArrayoutputContexts.size(); i++) {
            GoogleCloudDialogflowV2Context.validateJsonElement(jsonArrayoutputContexts.get(i));
          };
        }
      }
      if (jsonObj.get("parameters") != null && !jsonObj.get("parameters").isJsonNull()) {
        JsonArray jsonArrayparameters = jsonObj.getAsJsonArray("parameters");
        if (jsonArrayparameters != null) {
          // ensure the json data is an array
          if (!jsonObj.get("parameters").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `parameters` to be an array in the JSON string but got `%s`", jsonObj.get("parameters").toString()));
          }

          // validate the optional field `parameters` (array)
          for (int i = 0; i < jsonArrayparameters.size(); i++) {
            GoogleCloudDialogflowV2IntentParameter.validateJsonElement(jsonArrayparameters.get(i));
          };
        }
      }
      if ((jsonObj.get("parentFollowupIntentName") != null && !jsonObj.get("parentFollowupIntentName").isJsonNull()) && !jsonObj.get("parentFollowupIntentName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `parentFollowupIntentName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("parentFollowupIntentName").toString()));
      }
      if ((jsonObj.get("rootFollowupIntentName") != null && !jsonObj.get("rootFollowupIntentName").isJsonNull()) && !jsonObj.get("rootFollowupIntentName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `rootFollowupIntentName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("rootFollowupIntentName").toString()));
      }
      if (jsonObj.get("trainingPhrases") != null && !jsonObj.get("trainingPhrases").isJsonNull()) {
        JsonArray jsonArraytrainingPhrases = jsonObj.getAsJsonArray("trainingPhrases");
        if (jsonArraytrainingPhrases != null) {
          // ensure the json data is an array
          if (!jsonObj.get("trainingPhrases").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `trainingPhrases` to be an array in the JSON string but got `%s`", jsonObj.get("trainingPhrases").toString()));
          }

          // validate the optional field `trainingPhrases` (array)
          for (int i = 0; i < jsonArraytrainingPhrases.size(); i++) {
            GoogleCloudDialogflowV2IntentTrainingPhrase.validateJsonElement(jsonArraytrainingPhrases.get(i));
          };
        }
      }
      if ((jsonObj.get("webhookState") != null && !jsonObj.get("webhookState").isJsonNull()) && !jsonObj.get("webhookState").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `webhookState` to be a primitive type in the JSON string but got `%s`", jsonObj.get("webhookState").toString()));
      }
      // validate the optional field `webhookState`
      if (jsonObj.get("webhookState") != null && !jsonObj.get("webhookState").isJsonNull()) {
        WebhookStateEnum.validateJsonElement(jsonObj.get("webhookState"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDialogflowV2Intent.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDialogflowV2Intent' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDialogflowV2Intent> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDialogflowV2Intent.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDialogflowV2Intent>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDialogflowV2Intent value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDialogflowV2Intent read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDialogflowV2Intent given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDialogflowV2Intent
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDialogflowV2Intent
   */
  public static GoogleCloudDialogflowV2Intent fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDialogflowV2Intent.class);
  }

  /**
   * Convert an instance of GoogleCloudDialogflowV2Intent to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

