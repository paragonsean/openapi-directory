/*
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudDialogflowV2EvaluationConfig;
import org.openapitools.client.model.GoogleCloudDialogflowV2SmartReplyMetrics;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents evaluation result of a conversation model.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:48:05.098863-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDialogflowV2ConversationModelEvaluation {
  public static final String SERIALIZED_NAME_CREATE_TIME = "createTime";
  @SerializedName(SERIALIZED_NAME_CREATE_TIME)
  private String createTime;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_EVALUATION_CONFIG = "evaluationConfig";
  @SerializedName(SERIALIZED_NAME_EVALUATION_CONFIG)
  private GoogleCloudDialogflowV2EvaluationConfig evaluationConfig;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_RAW_HUMAN_EVAL_TEMPLATE_CSV = "rawHumanEvalTemplateCsv";
  @SerializedName(SERIALIZED_NAME_RAW_HUMAN_EVAL_TEMPLATE_CSV)
  private String rawHumanEvalTemplateCsv;

  public static final String SERIALIZED_NAME_SMART_REPLY_METRICS = "smartReplyMetrics";
  @SerializedName(SERIALIZED_NAME_SMART_REPLY_METRICS)
  private GoogleCloudDialogflowV2SmartReplyMetrics smartReplyMetrics;

  public GoogleCloudDialogflowV2ConversationModelEvaluation() {
  }

  public GoogleCloudDialogflowV2ConversationModelEvaluation(
     String createTime, 
     String rawHumanEvalTemplateCsv
  ) {
    this();
    this.createTime = createTime;
    this.rawHumanEvalTemplateCsv = rawHumanEvalTemplateCsv;
  }

  /**
   * Output only. Creation time of this model.
   * @return createTime
   */
  @javax.annotation.Nullable
  public String getCreateTime() {
    return createTime;
  }



  public GoogleCloudDialogflowV2ConversationModelEvaluation displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Optional. The display name of the model evaluation. At most 64 bytes long.
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public GoogleCloudDialogflowV2ConversationModelEvaluation evaluationConfig(GoogleCloudDialogflowV2EvaluationConfig evaluationConfig) {
    this.evaluationConfig = evaluationConfig;
    return this;
  }

  /**
   * Get evaluationConfig
   * @return evaluationConfig
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowV2EvaluationConfig getEvaluationConfig() {
    return evaluationConfig;
  }

  public void setEvaluationConfig(GoogleCloudDialogflowV2EvaluationConfig evaluationConfig) {
    this.evaluationConfig = evaluationConfig;
  }


  public GoogleCloudDialogflowV2ConversationModelEvaluation name(String name) {
    this.name = name;
    return this;
  }

  /**
   * The resource name of the evaluation. Format: &#x60;projects//conversationModels//evaluations/&#x60;
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  /**
   * Output only. Human eval template in csv format. It tooks real-world conversations provided through input dataset, generates example suggestions for customer to verify quality of the model. For Smart Reply, the generated csv file contains columns of Context, (Suggestions,Q1,Q2)*3, Actual reply. Context contains at most 10 latest messages in the conversation prior to the current suggestion. Q1: \&quot;Would you send it as the next message of agent?\&quot; Evaluated based on whether the suggest is appropriate to be sent by agent in current context. Q2: \&quot;Does the suggestion move the conversation closer to resolution?\&quot; Evaluated based on whether the suggestion provide solutions, or answers customer&#39;s question or collect information from customer to resolve the customer&#39;s issue. Actual reply column contains the actual agent reply sent in the context.
   * @return rawHumanEvalTemplateCsv
   */
  @javax.annotation.Nullable
  public String getRawHumanEvalTemplateCsv() {
    return rawHumanEvalTemplateCsv;
  }



  public GoogleCloudDialogflowV2ConversationModelEvaluation smartReplyMetrics(GoogleCloudDialogflowV2SmartReplyMetrics smartReplyMetrics) {
    this.smartReplyMetrics = smartReplyMetrics;
    return this;
  }

  /**
   * Get smartReplyMetrics
   * @return smartReplyMetrics
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowV2SmartReplyMetrics getSmartReplyMetrics() {
    return smartReplyMetrics;
  }

  public void setSmartReplyMetrics(GoogleCloudDialogflowV2SmartReplyMetrics smartReplyMetrics) {
    this.smartReplyMetrics = smartReplyMetrics;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDialogflowV2ConversationModelEvaluation googleCloudDialogflowV2ConversationModelEvaluation = (GoogleCloudDialogflowV2ConversationModelEvaluation) o;
    return Objects.equals(this.createTime, googleCloudDialogflowV2ConversationModelEvaluation.createTime) &&
        Objects.equals(this.displayName, googleCloudDialogflowV2ConversationModelEvaluation.displayName) &&
        Objects.equals(this.evaluationConfig, googleCloudDialogflowV2ConversationModelEvaluation.evaluationConfig) &&
        Objects.equals(this.name, googleCloudDialogflowV2ConversationModelEvaluation.name) &&
        Objects.equals(this.rawHumanEvalTemplateCsv, googleCloudDialogflowV2ConversationModelEvaluation.rawHumanEvalTemplateCsv) &&
        Objects.equals(this.smartReplyMetrics, googleCloudDialogflowV2ConversationModelEvaluation.smartReplyMetrics);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createTime, displayName, evaluationConfig, name, rawHumanEvalTemplateCsv, smartReplyMetrics);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDialogflowV2ConversationModelEvaluation {\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    evaluationConfig: ").append(toIndentedString(evaluationConfig)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    rawHumanEvalTemplateCsv: ").append(toIndentedString(rawHumanEvalTemplateCsv)).append("\n");
    sb.append("    smartReplyMetrics: ").append(toIndentedString(smartReplyMetrics)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("createTime");
    openapiFields.add("displayName");
    openapiFields.add("evaluationConfig");
    openapiFields.add("name");
    openapiFields.add("rawHumanEvalTemplateCsv");
    openapiFields.add("smartReplyMetrics");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDialogflowV2ConversationModelEvaluation
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDialogflowV2ConversationModelEvaluation.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDialogflowV2ConversationModelEvaluation is not found in the empty JSON string", GoogleCloudDialogflowV2ConversationModelEvaluation.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDialogflowV2ConversationModelEvaluation.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDialogflowV2ConversationModelEvaluation` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("createTime") != null && !jsonObj.get("createTime").isJsonNull()) && !jsonObj.get("createTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createTime").toString()));
      }
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      // validate the optional field `evaluationConfig`
      if (jsonObj.get("evaluationConfig") != null && !jsonObj.get("evaluationConfig").isJsonNull()) {
        GoogleCloudDialogflowV2EvaluationConfig.validateJsonElement(jsonObj.get("evaluationConfig"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("rawHumanEvalTemplateCsv") != null && !jsonObj.get("rawHumanEvalTemplateCsv").isJsonNull()) && !jsonObj.get("rawHumanEvalTemplateCsv").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `rawHumanEvalTemplateCsv` to be a primitive type in the JSON string but got `%s`", jsonObj.get("rawHumanEvalTemplateCsv").toString()));
      }
      // validate the optional field `smartReplyMetrics`
      if (jsonObj.get("smartReplyMetrics") != null && !jsonObj.get("smartReplyMetrics").isJsonNull()) {
        GoogleCloudDialogflowV2SmartReplyMetrics.validateJsonElement(jsonObj.get("smartReplyMetrics"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDialogflowV2ConversationModelEvaluation.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDialogflowV2ConversationModelEvaluation' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDialogflowV2ConversationModelEvaluation> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDialogflowV2ConversationModelEvaluation.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDialogflowV2ConversationModelEvaluation>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDialogflowV2ConversationModelEvaluation value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDialogflowV2ConversationModelEvaluation read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDialogflowV2ConversationModelEvaluation given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDialogflowV2ConversationModelEvaluation
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDialogflowV2ConversationModelEvaluation
   */
  public static GoogleCloudDialogflowV2ConversationModelEvaluation fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDialogflowV2ConversationModelEvaluation.class);
  }

  /**
   * Convert an instance of GoogleCloudDialogflowV2ConversationModelEvaluation to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

