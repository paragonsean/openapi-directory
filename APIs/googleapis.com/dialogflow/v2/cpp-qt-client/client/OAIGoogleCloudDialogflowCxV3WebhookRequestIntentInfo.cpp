/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowCxV3WebhookRequestIntentInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowCxV3WebhookRequestIntentInfo::OAIGoogleCloudDialogflowCxV3WebhookRequestIntentInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowCxV3WebhookRequestIntentInfo::OAIGoogleCloudDialogflowCxV3WebhookRequestIntentInfo() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowCxV3WebhookRequestIntentInfo::~OAIGoogleCloudDialogflowCxV3WebhookRequestIntentInfo() {}

void OAIGoogleCloudDialogflowCxV3WebhookRequestIntentInfo::initializeModel() {

    m_confidence_isSet = false;
    m_confidence_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_last_matched_intent_isSet = false;
    m_last_matched_intent_isValid = false;

    m_parameters_isSet = false;
    m_parameters_isValid = false;
}

void OAIGoogleCloudDialogflowCxV3WebhookRequestIntentInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowCxV3WebhookRequestIntentInfo::fromJsonObject(QJsonObject json) {

    m_confidence_isValid = ::OpenAPI::fromJsonValue(m_confidence, json[QString("confidence")]);
    m_confidence_isSet = !json[QString("confidence")].isNull() && m_confidence_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_last_matched_intent_isValid = ::OpenAPI::fromJsonValue(m_last_matched_intent, json[QString("lastMatchedIntent")]);
    m_last_matched_intent_isSet = !json[QString("lastMatchedIntent")].isNull() && m_last_matched_intent_isValid;

    m_parameters_isValid = ::OpenAPI::fromJsonValue(m_parameters, json[QString("parameters")]);
    m_parameters_isSet = !json[QString("parameters")].isNull() && m_parameters_isValid;
}

QString OAIGoogleCloudDialogflowCxV3WebhookRequestIntentInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowCxV3WebhookRequestIntentInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_confidence_isSet) {
        obj.insert(QString("confidence"), ::OpenAPI::toJsonValue(m_confidence));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_last_matched_intent_isSet) {
        obj.insert(QString("lastMatchedIntent"), ::OpenAPI::toJsonValue(m_last_matched_intent));
    }
    if (m_parameters.size() > 0) {
        obj.insert(QString("parameters"), ::OpenAPI::toJsonValue(m_parameters));
    }
    return obj;
}

float OAIGoogleCloudDialogflowCxV3WebhookRequestIntentInfo::getConfidence() const {
    return m_confidence;
}
void OAIGoogleCloudDialogflowCxV3WebhookRequestIntentInfo::setConfidence(const float &confidence) {
    m_confidence = confidence;
    m_confidence_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3WebhookRequestIntentInfo::is_confidence_Set() const{
    return m_confidence_isSet;
}

bool OAIGoogleCloudDialogflowCxV3WebhookRequestIntentInfo::is_confidence_Valid() const{
    return m_confidence_isValid;
}

QString OAIGoogleCloudDialogflowCxV3WebhookRequestIntentInfo::getDisplayName() const {
    return m_display_name;
}
void OAIGoogleCloudDialogflowCxV3WebhookRequestIntentInfo::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3WebhookRequestIntentInfo::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGoogleCloudDialogflowCxV3WebhookRequestIntentInfo::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QString OAIGoogleCloudDialogflowCxV3WebhookRequestIntentInfo::getLastMatchedIntent() const {
    return m_last_matched_intent;
}
void OAIGoogleCloudDialogflowCxV3WebhookRequestIntentInfo::setLastMatchedIntent(const QString &last_matched_intent) {
    m_last_matched_intent = last_matched_intent;
    m_last_matched_intent_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3WebhookRequestIntentInfo::is_last_matched_intent_Set() const{
    return m_last_matched_intent_isSet;
}

bool OAIGoogleCloudDialogflowCxV3WebhookRequestIntentInfo::is_last_matched_intent_Valid() const{
    return m_last_matched_intent_isValid;
}

QMap<QString, OAIGoogleCloudDialogflowCxV3WebhookRequestIntentInfoIntentParameterValue> OAIGoogleCloudDialogflowCxV3WebhookRequestIntentInfo::getParameters() const {
    return m_parameters;
}
void OAIGoogleCloudDialogflowCxV3WebhookRequestIntentInfo::setParameters(const QMap<QString, OAIGoogleCloudDialogflowCxV3WebhookRequestIntentInfoIntentParameterValue> &parameters) {
    m_parameters = parameters;
    m_parameters_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3WebhookRequestIntentInfo::is_parameters_Set() const{
    return m_parameters_isSet;
}

bool OAIGoogleCloudDialogflowCxV3WebhookRequestIntentInfo::is_parameters_Valid() const{
    return m_parameters_isValid;
}

bool OAIGoogleCloudDialogflowCxV3WebhookRequestIntentInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_confidence_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_matched_intent_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_parameters.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowCxV3WebhookRequestIntentInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
