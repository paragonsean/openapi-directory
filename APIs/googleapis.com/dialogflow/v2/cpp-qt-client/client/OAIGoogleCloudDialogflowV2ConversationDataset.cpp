/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowV2ConversationDataset.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowV2ConversationDataset::OAIGoogleCloudDialogflowV2ConversationDataset(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowV2ConversationDataset::OAIGoogleCloudDialogflowV2ConversationDataset() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowV2ConversationDataset::~OAIGoogleCloudDialogflowV2ConversationDataset() {}

void OAIGoogleCloudDialogflowV2ConversationDataset::initializeModel() {

    m_conversation_count_isSet = false;
    m_conversation_count_isValid = false;

    m_conversation_info_isSet = false;
    m_conversation_info_isValid = false;

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_input_config_isSet = false;
    m_input_config_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAIGoogleCloudDialogflowV2ConversationDataset::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowV2ConversationDataset::fromJsonObject(QJsonObject json) {

    m_conversation_count_isValid = ::OpenAPI::fromJsonValue(m_conversation_count, json[QString("conversationCount")]);
    m_conversation_count_isSet = !json[QString("conversationCount")].isNull() && m_conversation_count_isValid;

    m_conversation_info_isValid = ::OpenAPI::fromJsonValue(m_conversation_info, json[QString("conversationInfo")]);
    m_conversation_info_isSet = !json[QString("conversationInfo")].isNull() && m_conversation_info_isValid;

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_input_config_isValid = ::OpenAPI::fromJsonValue(m_input_config, json[QString("inputConfig")]);
    m_input_config_isSet = !json[QString("inputConfig")].isNull() && m_input_config_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;
}

QString OAIGoogleCloudDialogflowV2ConversationDataset::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowV2ConversationDataset::asJsonObject() const {
    QJsonObject obj;
    if (m_conversation_count_isSet) {
        obj.insert(QString("conversationCount"), ::OpenAPI::toJsonValue(m_conversation_count));
    }
    if (m_conversation_info.isSet()) {
        obj.insert(QString("conversationInfo"), ::OpenAPI::toJsonValue(m_conversation_info));
    }
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_input_config.isSet()) {
        obj.insert(QString("inputConfig"), ::OpenAPI::toJsonValue(m_input_config));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

QString OAIGoogleCloudDialogflowV2ConversationDataset::getConversationCount() const {
    return m_conversation_count;
}
void OAIGoogleCloudDialogflowV2ConversationDataset::setConversationCount(const QString &conversation_count) {
    m_conversation_count = conversation_count;
    m_conversation_count_isSet = true;
}

bool OAIGoogleCloudDialogflowV2ConversationDataset::is_conversation_count_Set() const{
    return m_conversation_count_isSet;
}

bool OAIGoogleCloudDialogflowV2ConversationDataset::is_conversation_count_Valid() const{
    return m_conversation_count_isValid;
}

OAIGoogleCloudDialogflowV2ConversationInfo OAIGoogleCloudDialogflowV2ConversationDataset::getConversationInfo() const {
    return m_conversation_info;
}
void OAIGoogleCloudDialogflowV2ConversationDataset::setConversationInfo(const OAIGoogleCloudDialogflowV2ConversationInfo &conversation_info) {
    m_conversation_info = conversation_info;
    m_conversation_info_isSet = true;
}

bool OAIGoogleCloudDialogflowV2ConversationDataset::is_conversation_info_Set() const{
    return m_conversation_info_isSet;
}

bool OAIGoogleCloudDialogflowV2ConversationDataset::is_conversation_info_Valid() const{
    return m_conversation_info_isValid;
}

QString OAIGoogleCloudDialogflowV2ConversationDataset::getCreateTime() const {
    return m_create_time;
}
void OAIGoogleCloudDialogflowV2ConversationDataset::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIGoogleCloudDialogflowV2ConversationDataset::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIGoogleCloudDialogflowV2ConversationDataset::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QString OAIGoogleCloudDialogflowV2ConversationDataset::getDescription() const {
    return m_description;
}
void OAIGoogleCloudDialogflowV2ConversationDataset::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIGoogleCloudDialogflowV2ConversationDataset::is_description_Set() const{
    return m_description_isSet;
}

bool OAIGoogleCloudDialogflowV2ConversationDataset::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIGoogleCloudDialogflowV2ConversationDataset::getDisplayName() const {
    return m_display_name;
}
void OAIGoogleCloudDialogflowV2ConversationDataset::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGoogleCloudDialogflowV2ConversationDataset::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGoogleCloudDialogflowV2ConversationDataset::is_display_name_Valid() const{
    return m_display_name_isValid;
}

OAIGoogleCloudDialogflowV2InputConfig OAIGoogleCloudDialogflowV2ConversationDataset::getInputConfig() const {
    return m_input_config;
}
void OAIGoogleCloudDialogflowV2ConversationDataset::setInputConfig(const OAIGoogleCloudDialogflowV2InputConfig &input_config) {
    m_input_config = input_config;
    m_input_config_isSet = true;
}

bool OAIGoogleCloudDialogflowV2ConversationDataset::is_input_config_Set() const{
    return m_input_config_isSet;
}

bool OAIGoogleCloudDialogflowV2ConversationDataset::is_input_config_Valid() const{
    return m_input_config_isValid;
}

QString OAIGoogleCloudDialogflowV2ConversationDataset::getName() const {
    return m_name;
}
void OAIGoogleCloudDialogflowV2ConversationDataset::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudDialogflowV2ConversationDataset::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudDialogflowV2ConversationDataset::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIGoogleCloudDialogflowV2ConversationDataset::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_conversation_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_conversation_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_input_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowV2ConversationDataset::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
