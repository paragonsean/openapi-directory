/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowCxV3ConversationTurn.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowCxV3ConversationTurn::OAIGoogleCloudDialogflowCxV3ConversationTurn(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowCxV3ConversationTurn::OAIGoogleCloudDialogflowCxV3ConversationTurn() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowCxV3ConversationTurn::~OAIGoogleCloudDialogflowCxV3ConversationTurn() {}

void OAIGoogleCloudDialogflowCxV3ConversationTurn::initializeModel() {

    m_user_input_isSet = false;
    m_user_input_isValid = false;

    m_virtual_agent_output_isSet = false;
    m_virtual_agent_output_isValid = false;
}

void OAIGoogleCloudDialogflowCxV3ConversationTurn::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowCxV3ConversationTurn::fromJsonObject(QJsonObject json) {

    m_user_input_isValid = ::OpenAPI::fromJsonValue(m_user_input, json[QString("userInput")]);
    m_user_input_isSet = !json[QString("userInput")].isNull() && m_user_input_isValid;

    m_virtual_agent_output_isValid = ::OpenAPI::fromJsonValue(m_virtual_agent_output, json[QString("virtualAgentOutput")]);
    m_virtual_agent_output_isSet = !json[QString("virtualAgentOutput")].isNull() && m_virtual_agent_output_isValid;
}

QString OAIGoogleCloudDialogflowCxV3ConversationTurn::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowCxV3ConversationTurn::asJsonObject() const {
    QJsonObject obj;
    if (m_user_input.isSet()) {
        obj.insert(QString("userInput"), ::OpenAPI::toJsonValue(m_user_input));
    }
    if (m_virtual_agent_output.isSet()) {
        obj.insert(QString("virtualAgentOutput"), ::OpenAPI::toJsonValue(m_virtual_agent_output));
    }
    return obj;
}

OAIGoogleCloudDialogflowCxV3ConversationTurnUserInput OAIGoogleCloudDialogflowCxV3ConversationTurn::getUserInput() const {
    return m_user_input;
}
void OAIGoogleCloudDialogflowCxV3ConversationTurn::setUserInput(const OAIGoogleCloudDialogflowCxV3ConversationTurnUserInput &user_input) {
    m_user_input = user_input;
    m_user_input_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3ConversationTurn::is_user_input_Set() const{
    return m_user_input_isSet;
}

bool OAIGoogleCloudDialogflowCxV3ConversationTurn::is_user_input_Valid() const{
    return m_user_input_isValid;
}

OAIGoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput OAIGoogleCloudDialogflowCxV3ConversationTurn::getVirtualAgentOutput() const {
    return m_virtual_agent_output;
}
void OAIGoogleCloudDialogflowCxV3ConversationTurn::setVirtualAgentOutput(const OAIGoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput &virtual_agent_output) {
    m_virtual_agent_output = virtual_agent_output;
    m_virtual_agent_output_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3ConversationTurn::is_virtual_agent_output_Set() const{
    return m_virtual_agent_output_isSet;
}

bool OAIGoogleCloudDialogflowCxV3ConversationTurn::is_virtual_agent_output_Valid() const{
    return m_virtual_agent_output_isValid;
}

bool OAIGoogleCloudDialogflowCxV3ConversationTurn::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_user_input.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_virtual_agent_output.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowCxV3ConversationTurn::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
