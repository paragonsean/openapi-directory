/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowV2AgentAssistantFeedbackSummarizationFeedback.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowV2AgentAssistantFeedbackSummarizationFeedback::OAIGoogleCloudDialogflowV2AgentAssistantFeedbackSummarizationFeedback(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowV2AgentAssistantFeedbackSummarizationFeedback::OAIGoogleCloudDialogflowV2AgentAssistantFeedbackSummarizationFeedback() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowV2AgentAssistantFeedbackSummarizationFeedback::~OAIGoogleCloudDialogflowV2AgentAssistantFeedbackSummarizationFeedback() {}

void OAIGoogleCloudDialogflowV2AgentAssistantFeedbackSummarizationFeedback::initializeModel() {

    m_start_time_isSet = false;
    m_start_time_isValid = false;

    m_submit_time_isSet = false;
    m_submit_time_isValid = false;

    m_summary_text_isSet = false;
    m_summary_text_isValid = false;

    m_text_sections_isSet = false;
    m_text_sections_isValid = false;
}

void OAIGoogleCloudDialogflowV2AgentAssistantFeedbackSummarizationFeedback::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowV2AgentAssistantFeedbackSummarizationFeedback::fromJsonObject(QJsonObject json) {

    m_start_time_isValid = ::OpenAPI::fromJsonValue(m_start_time, json[QString("startTime")]);
    m_start_time_isSet = !json[QString("startTime")].isNull() && m_start_time_isValid;

    m_submit_time_isValid = ::OpenAPI::fromJsonValue(m_submit_time, json[QString("submitTime")]);
    m_submit_time_isSet = !json[QString("submitTime")].isNull() && m_submit_time_isValid;

    m_summary_text_isValid = ::OpenAPI::fromJsonValue(m_summary_text, json[QString("summaryText")]);
    m_summary_text_isSet = !json[QString("summaryText")].isNull() && m_summary_text_isValid;

    m_text_sections_isValid = ::OpenAPI::fromJsonValue(m_text_sections, json[QString("textSections")]);
    m_text_sections_isSet = !json[QString("textSections")].isNull() && m_text_sections_isValid;
}

QString OAIGoogleCloudDialogflowV2AgentAssistantFeedbackSummarizationFeedback::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowV2AgentAssistantFeedbackSummarizationFeedback::asJsonObject() const {
    QJsonObject obj;
    if (m_start_time_isSet) {
        obj.insert(QString("startTime"), ::OpenAPI::toJsonValue(m_start_time));
    }
    if (m_submit_time_isSet) {
        obj.insert(QString("submitTime"), ::OpenAPI::toJsonValue(m_submit_time));
    }
    if (m_summary_text_isSet) {
        obj.insert(QString("summaryText"), ::OpenAPI::toJsonValue(m_summary_text));
    }
    if (m_text_sections.size() > 0) {
        obj.insert(QString("textSections"), ::OpenAPI::toJsonValue(m_text_sections));
    }
    return obj;
}

QString OAIGoogleCloudDialogflowV2AgentAssistantFeedbackSummarizationFeedback::getStartTime() const {
    return m_start_time;
}
void OAIGoogleCloudDialogflowV2AgentAssistantFeedbackSummarizationFeedback::setStartTime(const QString &start_time) {
    m_start_time = start_time;
    m_start_time_isSet = true;
}

bool OAIGoogleCloudDialogflowV2AgentAssistantFeedbackSummarizationFeedback::is_start_time_Set() const{
    return m_start_time_isSet;
}

bool OAIGoogleCloudDialogflowV2AgentAssistantFeedbackSummarizationFeedback::is_start_time_Valid() const{
    return m_start_time_isValid;
}

QString OAIGoogleCloudDialogflowV2AgentAssistantFeedbackSummarizationFeedback::getSubmitTime() const {
    return m_submit_time;
}
void OAIGoogleCloudDialogflowV2AgentAssistantFeedbackSummarizationFeedback::setSubmitTime(const QString &submit_time) {
    m_submit_time = submit_time;
    m_submit_time_isSet = true;
}

bool OAIGoogleCloudDialogflowV2AgentAssistantFeedbackSummarizationFeedback::is_submit_time_Set() const{
    return m_submit_time_isSet;
}

bool OAIGoogleCloudDialogflowV2AgentAssistantFeedbackSummarizationFeedback::is_submit_time_Valid() const{
    return m_submit_time_isValid;
}

QString OAIGoogleCloudDialogflowV2AgentAssistantFeedbackSummarizationFeedback::getSummaryText() const {
    return m_summary_text;
}
void OAIGoogleCloudDialogflowV2AgentAssistantFeedbackSummarizationFeedback::setSummaryText(const QString &summary_text) {
    m_summary_text = summary_text;
    m_summary_text_isSet = true;
}

bool OAIGoogleCloudDialogflowV2AgentAssistantFeedbackSummarizationFeedback::is_summary_text_Set() const{
    return m_summary_text_isSet;
}

bool OAIGoogleCloudDialogflowV2AgentAssistantFeedbackSummarizationFeedback::is_summary_text_Valid() const{
    return m_summary_text_isValid;
}

QMap<QString, QString> OAIGoogleCloudDialogflowV2AgentAssistantFeedbackSummarizationFeedback::getTextSections() const {
    return m_text_sections;
}
void OAIGoogleCloudDialogflowV2AgentAssistantFeedbackSummarizationFeedback::setTextSections(const QMap<QString, QString> &text_sections) {
    m_text_sections = text_sections;
    m_text_sections_isSet = true;
}

bool OAIGoogleCloudDialogflowV2AgentAssistantFeedbackSummarizationFeedback::is_text_sections_Set() const{
    return m_text_sections_isSet;
}

bool OAIGoogleCloudDialogflowV2AgentAssistantFeedbackSummarizationFeedback::is_text_sections_Valid() const{
    return m_text_sections_isValid;
}

bool OAIGoogleCloudDialogflowV2AgentAssistantFeedbackSummarizationFeedback::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_submit_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_summary_text_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_text_sections.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowV2AgentAssistantFeedbackSummarizationFeedback::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
