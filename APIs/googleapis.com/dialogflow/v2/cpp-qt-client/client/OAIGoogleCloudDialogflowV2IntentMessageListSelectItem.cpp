/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowV2IntentMessageListSelectItem.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowV2IntentMessageListSelectItem::OAIGoogleCloudDialogflowV2IntentMessageListSelectItem(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowV2IntentMessageListSelectItem::OAIGoogleCloudDialogflowV2IntentMessageListSelectItem() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowV2IntentMessageListSelectItem::~OAIGoogleCloudDialogflowV2IntentMessageListSelectItem() {}

void OAIGoogleCloudDialogflowV2IntentMessageListSelectItem::initializeModel() {

    m_description_isSet = false;
    m_description_isValid = false;

    m_image_isSet = false;
    m_image_isValid = false;

    m_info_isSet = false;
    m_info_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;
}

void OAIGoogleCloudDialogflowV2IntentMessageListSelectItem::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowV2IntentMessageListSelectItem::fromJsonObject(QJsonObject json) {

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_image_isValid = ::OpenAPI::fromJsonValue(m_image, json[QString("image")]);
    m_image_isSet = !json[QString("image")].isNull() && m_image_isValid;

    m_info_isValid = ::OpenAPI::fromJsonValue(m_info, json[QString("info")]);
    m_info_isSet = !json[QString("info")].isNull() && m_info_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("title")]);
    m_title_isSet = !json[QString("title")].isNull() && m_title_isValid;
}

QString OAIGoogleCloudDialogflowV2IntentMessageListSelectItem::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowV2IntentMessageListSelectItem::asJsonObject() const {
    QJsonObject obj;
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_image.isSet()) {
        obj.insert(QString("image"), ::OpenAPI::toJsonValue(m_image));
    }
    if (m_info.isSet()) {
        obj.insert(QString("info"), ::OpenAPI::toJsonValue(m_info));
    }
    if (m_title_isSet) {
        obj.insert(QString("title"), ::OpenAPI::toJsonValue(m_title));
    }
    return obj;
}

QString OAIGoogleCloudDialogflowV2IntentMessageListSelectItem::getDescription() const {
    return m_description;
}
void OAIGoogleCloudDialogflowV2IntentMessageListSelectItem::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIGoogleCloudDialogflowV2IntentMessageListSelectItem::is_description_Set() const{
    return m_description_isSet;
}

bool OAIGoogleCloudDialogflowV2IntentMessageListSelectItem::is_description_Valid() const{
    return m_description_isValid;
}

OAIGoogleCloudDialogflowV2IntentMessageImage OAIGoogleCloudDialogflowV2IntentMessageListSelectItem::getImage() const {
    return m_image;
}
void OAIGoogleCloudDialogflowV2IntentMessageListSelectItem::setImage(const OAIGoogleCloudDialogflowV2IntentMessageImage &image) {
    m_image = image;
    m_image_isSet = true;
}

bool OAIGoogleCloudDialogflowV2IntentMessageListSelectItem::is_image_Set() const{
    return m_image_isSet;
}

bool OAIGoogleCloudDialogflowV2IntentMessageListSelectItem::is_image_Valid() const{
    return m_image_isValid;
}

OAIGoogleCloudDialogflowV2IntentMessageSelectItemInfo OAIGoogleCloudDialogflowV2IntentMessageListSelectItem::getInfo() const {
    return m_info;
}
void OAIGoogleCloudDialogflowV2IntentMessageListSelectItem::setInfo(const OAIGoogleCloudDialogflowV2IntentMessageSelectItemInfo &info) {
    m_info = info;
    m_info_isSet = true;
}

bool OAIGoogleCloudDialogflowV2IntentMessageListSelectItem::is_info_Set() const{
    return m_info_isSet;
}

bool OAIGoogleCloudDialogflowV2IntentMessageListSelectItem::is_info_Valid() const{
    return m_info_isValid;
}

QString OAIGoogleCloudDialogflowV2IntentMessageListSelectItem::getTitle() const {
    return m_title;
}
void OAIGoogleCloudDialogflowV2IntentMessageListSelectItem::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAIGoogleCloudDialogflowV2IntentMessageListSelectItem::is_title_Set() const{
    return m_title_isSet;
}

bool OAIGoogleCloudDialogflowV2IntentMessageListSelectItem::is_title_Valid() const{
    return m_title_isValid;
}

bool OAIGoogleCloudDialogflowV2IntentMessageListSelectItem::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_image.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowV2IntentMessageListSelectItem::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
