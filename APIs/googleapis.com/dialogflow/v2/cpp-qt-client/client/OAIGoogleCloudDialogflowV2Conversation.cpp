/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowV2Conversation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowV2Conversation::OAIGoogleCloudDialogflowV2Conversation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowV2Conversation::OAIGoogleCloudDialogflowV2Conversation() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowV2Conversation::~OAIGoogleCloudDialogflowV2Conversation() {}

void OAIGoogleCloudDialogflowV2Conversation::initializeModel() {

    m_conversation_profile_isSet = false;
    m_conversation_profile_isValid = false;

    m_conversation_stage_isSet = false;
    m_conversation_stage_isValid = false;

    m_end_time_isSet = false;
    m_end_time_isValid = false;

    m_lifecycle_state_isSet = false;
    m_lifecycle_state_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_phone_number_isSet = false;
    m_phone_number_isValid = false;

    m_start_time_isSet = false;
    m_start_time_isValid = false;
}

void OAIGoogleCloudDialogflowV2Conversation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowV2Conversation::fromJsonObject(QJsonObject json) {

    m_conversation_profile_isValid = ::OpenAPI::fromJsonValue(m_conversation_profile, json[QString("conversationProfile")]);
    m_conversation_profile_isSet = !json[QString("conversationProfile")].isNull() && m_conversation_profile_isValid;

    m_conversation_stage_isValid = ::OpenAPI::fromJsonValue(m_conversation_stage, json[QString("conversationStage")]);
    m_conversation_stage_isSet = !json[QString("conversationStage")].isNull() && m_conversation_stage_isValid;

    m_end_time_isValid = ::OpenAPI::fromJsonValue(m_end_time, json[QString("endTime")]);
    m_end_time_isSet = !json[QString("endTime")].isNull() && m_end_time_isValid;

    m_lifecycle_state_isValid = ::OpenAPI::fromJsonValue(m_lifecycle_state, json[QString("lifecycleState")]);
    m_lifecycle_state_isSet = !json[QString("lifecycleState")].isNull() && m_lifecycle_state_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_phone_number_isValid = ::OpenAPI::fromJsonValue(m_phone_number, json[QString("phoneNumber")]);
    m_phone_number_isSet = !json[QString("phoneNumber")].isNull() && m_phone_number_isValid;

    m_start_time_isValid = ::OpenAPI::fromJsonValue(m_start_time, json[QString("startTime")]);
    m_start_time_isSet = !json[QString("startTime")].isNull() && m_start_time_isValid;
}

QString OAIGoogleCloudDialogflowV2Conversation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowV2Conversation::asJsonObject() const {
    QJsonObject obj;
    if (m_conversation_profile_isSet) {
        obj.insert(QString("conversationProfile"), ::OpenAPI::toJsonValue(m_conversation_profile));
    }
    if (m_conversation_stage_isSet) {
        obj.insert(QString("conversationStage"), ::OpenAPI::toJsonValue(m_conversation_stage));
    }
    if (m_end_time_isSet) {
        obj.insert(QString("endTime"), ::OpenAPI::toJsonValue(m_end_time));
    }
    if (m_lifecycle_state_isSet) {
        obj.insert(QString("lifecycleState"), ::OpenAPI::toJsonValue(m_lifecycle_state));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_phone_number.isSet()) {
        obj.insert(QString("phoneNumber"), ::OpenAPI::toJsonValue(m_phone_number));
    }
    if (m_start_time_isSet) {
        obj.insert(QString("startTime"), ::OpenAPI::toJsonValue(m_start_time));
    }
    return obj;
}

QString OAIGoogleCloudDialogflowV2Conversation::getConversationProfile() const {
    return m_conversation_profile;
}
void OAIGoogleCloudDialogflowV2Conversation::setConversationProfile(const QString &conversation_profile) {
    m_conversation_profile = conversation_profile;
    m_conversation_profile_isSet = true;
}

bool OAIGoogleCloudDialogflowV2Conversation::is_conversation_profile_Set() const{
    return m_conversation_profile_isSet;
}

bool OAIGoogleCloudDialogflowV2Conversation::is_conversation_profile_Valid() const{
    return m_conversation_profile_isValid;
}

QString OAIGoogleCloudDialogflowV2Conversation::getConversationStage() const {
    return m_conversation_stage;
}
void OAIGoogleCloudDialogflowV2Conversation::setConversationStage(const QString &conversation_stage) {
    m_conversation_stage = conversation_stage;
    m_conversation_stage_isSet = true;
}

bool OAIGoogleCloudDialogflowV2Conversation::is_conversation_stage_Set() const{
    return m_conversation_stage_isSet;
}

bool OAIGoogleCloudDialogflowV2Conversation::is_conversation_stage_Valid() const{
    return m_conversation_stage_isValid;
}

QString OAIGoogleCloudDialogflowV2Conversation::getEndTime() const {
    return m_end_time;
}
void OAIGoogleCloudDialogflowV2Conversation::setEndTime(const QString &end_time) {
    m_end_time = end_time;
    m_end_time_isSet = true;
}

bool OAIGoogleCloudDialogflowV2Conversation::is_end_time_Set() const{
    return m_end_time_isSet;
}

bool OAIGoogleCloudDialogflowV2Conversation::is_end_time_Valid() const{
    return m_end_time_isValid;
}

QString OAIGoogleCloudDialogflowV2Conversation::getLifecycleState() const {
    return m_lifecycle_state;
}
void OAIGoogleCloudDialogflowV2Conversation::setLifecycleState(const QString &lifecycle_state) {
    m_lifecycle_state = lifecycle_state;
    m_lifecycle_state_isSet = true;
}

bool OAIGoogleCloudDialogflowV2Conversation::is_lifecycle_state_Set() const{
    return m_lifecycle_state_isSet;
}

bool OAIGoogleCloudDialogflowV2Conversation::is_lifecycle_state_Valid() const{
    return m_lifecycle_state_isValid;
}

QString OAIGoogleCloudDialogflowV2Conversation::getName() const {
    return m_name;
}
void OAIGoogleCloudDialogflowV2Conversation::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudDialogflowV2Conversation::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudDialogflowV2Conversation::is_name_Valid() const{
    return m_name_isValid;
}

OAIGoogleCloudDialogflowV2ConversationPhoneNumber OAIGoogleCloudDialogflowV2Conversation::getPhoneNumber() const {
    return m_phone_number;
}
void OAIGoogleCloudDialogflowV2Conversation::setPhoneNumber(const OAIGoogleCloudDialogflowV2ConversationPhoneNumber &phone_number) {
    m_phone_number = phone_number;
    m_phone_number_isSet = true;
}

bool OAIGoogleCloudDialogflowV2Conversation::is_phone_number_Set() const{
    return m_phone_number_isSet;
}

bool OAIGoogleCloudDialogflowV2Conversation::is_phone_number_Valid() const{
    return m_phone_number_isValid;
}

QString OAIGoogleCloudDialogflowV2Conversation::getStartTime() const {
    return m_start_time;
}
void OAIGoogleCloudDialogflowV2Conversation::setStartTime(const QString &start_time) {
    m_start_time = start_time;
    m_start_time_isSet = true;
}

bool OAIGoogleCloudDialogflowV2Conversation::is_start_time_Set() const{
    return m_start_time_isSet;
}

bool OAIGoogleCloudDialogflowV2Conversation::is_start_time_Valid() const{
    return m_start_time_isValid;
}

bool OAIGoogleCloudDialogflowV2Conversation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_conversation_profile_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_conversation_stage_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_lifecycle_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone_number.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowV2Conversation::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
