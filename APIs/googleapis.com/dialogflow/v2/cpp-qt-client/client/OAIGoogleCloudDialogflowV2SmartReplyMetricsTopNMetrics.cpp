/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowV2SmartReplyMetricsTopNMetrics.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowV2SmartReplyMetricsTopNMetrics::OAIGoogleCloudDialogflowV2SmartReplyMetricsTopNMetrics(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowV2SmartReplyMetricsTopNMetrics::OAIGoogleCloudDialogflowV2SmartReplyMetricsTopNMetrics() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowV2SmartReplyMetricsTopNMetrics::~OAIGoogleCloudDialogflowV2SmartReplyMetricsTopNMetrics() {}

void OAIGoogleCloudDialogflowV2SmartReplyMetricsTopNMetrics::initializeModel() {

    m_n_isSet = false;
    m_n_isValid = false;

    m_recall_isSet = false;
    m_recall_isValid = false;
}

void OAIGoogleCloudDialogflowV2SmartReplyMetricsTopNMetrics::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowV2SmartReplyMetricsTopNMetrics::fromJsonObject(QJsonObject json) {

    m_n_isValid = ::OpenAPI::fromJsonValue(m_n, json[QString("n")]);
    m_n_isSet = !json[QString("n")].isNull() && m_n_isValid;

    m_recall_isValid = ::OpenAPI::fromJsonValue(m_recall, json[QString("recall")]);
    m_recall_isSet = !json[QString("recall")].isNull() && m_recall_isValid;
}

QString OAIGoogleCloudDialogflowV2SmartReplyMetricsTopNMetrics::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowV2SmartReplyMetricsTopNMetrics::asJsonObject() const {
    QJsonObject obj;
    if (m_n_isSet) {
        obj.insert(QString("n"), ::OpenAPI::toJsonValue(m_n));
    }
    if (m_recall_isSet) {
        obj.insert(QString("recall"), ::OpenAPI::toJsonValue(m_recall));
    }
    return obj;
}

qint32 OAIGoogleCloudDialogflowV2SmartReplyMetricsTopNMetrics::getN() const {
    return m_n;
}
void OAIGoogleCloudDialogflowV2SmartReplyMetricsTopNMetrics::setN(const qint32 &n) {
    m_n = n;
    m_n_isSet = true;
}

bool OAIGoogleCloudDialogflowV2SmartReplyMetricsTopNMetrics::is_n_Set() const{
    return m_n_isSet;
}

bool OAIGoogleCloudDialogflowV2SmartReplyMetricsTopNMetrics::is_n_Valid() const{
    return m_n_isValid;
}

float OAIGoogleCloudDialogflowV2SmartReplyMetricsTopNMetrics::getRecall() const {
    return m_recall;
}
void OAIGoogleCloudDialogflowV2SmartReplyMetricsTopNMetrics::setRecall(const float &recall) {
    m_recall = recall;
    m_recall_isSet = true;
}

bool OAIGoogleCloudDialogflowV2SmartReplyMetricsTopNMetrics::is_recall_Set() const{
    return m_recall_isSet;
}

bool OAIGoogleCloudDialogflowV2SmartReplyMetricsTopNMetrics::is_recall_Valid() const{
    return m_recall_isValid;
}

bool OAIGoogleCloudDialogflowV2SmartReplyMetricsTopNMetrics::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_n_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_recall_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowV2SmartReplyMetricsTopNMetrics::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
