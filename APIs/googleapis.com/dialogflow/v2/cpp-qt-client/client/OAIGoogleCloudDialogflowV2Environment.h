/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudDialogflowV2Environment.h
 *
 * You can create multiple versions of your agent and publish them to separate environments. When you edit an agent, you are editing the draft agent. At any point, you can save the draft agent as an agent version, which is an immutable snapshot of your agent. When you save the draft agent, it is published to the default environment. When you create agent versions, you can publish them to custom environments. You can create a variety of custom environments for: - testing - development - production - etc. For more information, see the [versions and environments guide](https://cloud.google.com/dialogflow/docs/agents-versions).
 */

#ifndef OAIGoogleCloudDialogflowV2Environment_H
#define OAIGoogleCloudDialogflowV2Environment_H

#include <QJsonObject>

#include "OAIGoogleCloudDialogflowV2Fulfillment.h"
#include "OAIGoogleCloudDialogflowV2TextToSpeechSettings.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleCloudDialogflowV2Fulfillment;
class OAIGoogleCloudDialogflowV2TextToSpeechSettings;

class OAIGoogleCloudDialogflowV2Environment : public OAIObject {
public:
    OAIGoogleCloudDialogflowV2Environment();
    OAIGoogleCloudDialogflowV2Environment(QString json);
    ~OAIGoogleCloudDialogflowV2Environment() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAgentVersion() const;
    void setAgentVersion(const QString &agent_version);
    bool is_agent_version_Set() const;
    bool is_agent_version_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAIGoogleCloudDialogflowV2Fulfillment getFulfillment() const;
    void setFulfillment(const OAIGoogleCloudDialogflowV2Fulfillment &fulfillment);
    bool is_fulfillment_Set() const;
    bool is_fulfillment_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    OAIGoogleCloudDialogflowV2TextToSpeechSettings getTextToSpeechSettings() const;
    void setTextToSpeechSettings(const OAIGoogleCloudDialogflowV2TextToSpeechSettings &text_to_speech_settings);
    bool is_text_to_speech_settings_Set() const;
    bool is_text_to_speech_settings_Valid() const;

    QString getUpdateTime() const;
    void setUpdateTime(const QString &update_time);
    bool is_update_time_Set() const;
    bool is_update_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_agent_version;
    bool m_agent_version_isSet;
    bool m_agent_version_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAIGoogleCloudDialogflowV2Fulfillment m_fulfillment;
    bool m_fulfillment_isSet;
    bool m_fulfillment_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    OAIGoogleCloudDialogflowV2TextToSpeechSettings m_text_to_speech_settings;
    bool m_text_to_speech_settings_isSet;
    bool m_text_to_speech_settings_isValid;

    QString m_update_time;
    bool m_update_time_isSet;
    bool m_update_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudDialogflowV2Environment)

#endif // OAIGoogleCloudDialogflowV2Environment_H
