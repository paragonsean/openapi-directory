/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowV2AnalyzeContentRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowV2AnalyzeContentRequest::OAIGoogleCloudDialogflowV2AnalyzeContentRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowV2AnalyzeContentRequest::OAIGoogleCloudDialogflowV2AnalyzeContentRequest() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowV2AnalyzeContentRequest::~OAIGoogleCloudDialogflowV2AnalyzeContentRequest() {}

void OAIGoogleCloudDialogflowV2AnalyzeContentRequest::initializeModel() {

    m_assist_query_params_isSet = false;
    m_assist_query_params_isValid = false;

    m_cx_parameters_isSet = false;
    m_cx_parameters_isValid = false;

    m_event_input_isSet = false;
    m_event_input_isValid = false;

    m_query_params_isSet = false;
    m_query_params_isValid = false;

    m_reply_audio_config_isSet = false;
    m_reply_audio_config_isValid = false;

    m_request_id_isSet = false;
    m_request_id_isValid = false;

    m_suggestion_input_isSet = false;
    m_suggestion_input_isValid = false;

    m_text_input_isSet = false;
    m_text_input_isValid = false;
}

void OAIGoogleCloudDialogflowV2AnalyzeContentRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowV2AnalyzeContentRequest::fromJsonObject(QJsonObject json) {

    m_assist_query_params_isValid = ::OpenAPI::fromJsonValue(m_assist_query_params, json[QString("assistQueryParams")]);
    m_assist_query_params_isSet = !json[QString("assistQueryParams")].isNull() && m_assist_query_params_isValid;

    m_cx_parameters_isValid = ::OpenAPI::fromJsonValue(m_cx_parameters, json[QString("cxParameters")]);
    m_cx_parameters_isSet = !json[QString("cxParameters")].isNull() && m_cx_parameters_isValid;

    m_event_input_isValid = ::OpenAPI::fromJsonValue(m_event_input, json[QString("eventInput")]);
    m_event_input_isSet = !json[QString("eventInput")].isNull() && m_event_input_isValid;

    m_query_params_isValid = ::OpenAPI::fromJsonValue(m_query_params, json[QString("queryParams")]);
    m_query_params_isSet = !json[QString("queryParams")].isNull() && m_query_params_isValid;

    m_reply_audio_config_isValid = ::OpenAPI::fromJsonValue(m_reply_audio_config, json[QString("replyAudioConfig")]);
    m_reply_audio_config_isSet = !json[QString("replyAudioConfig")].isNull() && m_reply_audio_config_isValid;

    m_request_id_isValid = ::OpenAPI::fromJsonValue(m_request_id, json[QString("requestId")]);
    m_request_id_isSet = !json[QString("requestId")].isNull() && m_request_id_isValid;

    m_suggestion_input_isValid = ::OpenAPI::fromJsonValue(m_suggestion_input, json[QString("suggestionInput")]);
    m_suggestion_input_isSet = !json[QString("suggestionInput")].isNull() && m_suggestion_input_isValid;

    m_text_input_isValid = ::OpenAPI::fromJsonValue(m_text_input, json[QString("textInput")]);
    m_text_input_isSet = !json[QString("textInput")].isNull() && m_text_input_isValid;
}

QString OAIGoogleCloudDialogflowV2AnalyzeContentRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowV2AnalyzeContentRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_assist_query_params.isSet()) {
        obj.insert(QString("assistQueryParams"), ::OpenAPI::toJsonValue(m_assist_query_params));
    }
    if (m_cx_parameters.size() > 0) {
        obj.insert(QString("cxParameters"), ::OpenAPI::toJsonValue(m_cx_parameters));
    }
    if (m_event_input.isSet()) {
        obj.insert(QString("eventInput"), ::OpenAPI::toJsonValue(m_event_input));
    }
    if (m_query_params.isSet()) {
        obj.insert(QString("queryParams"), ::OpenAPI::toJsonValue(m_query_params));
    }
    if (m_reply_audio_config.isSet()) {
        obj.insert(QString("replyAudioConfig"), ::OpenAPI::toJsonValue(m_reply_audio_config));
    }
    if (m_request_id_isSet) {
        obj.insert(QString("requestId"), ::OpenAPI::toJsonValue(m_request_id));
    }
    if (m_suggestion_input.isSet()) {
        obj.insert(QString("suggestionInput"), ::OpenAPI::toJsonValue(m_suggestion_input));
    }
    if (m_text_input.isSet()) {
        obj.insert(QString("textInput"), ::OpenAPI::toJsonValue(m_text_input));
    }
    return obj;
}

OAIGoogleCloudDialogflowV2AssistQueryParameters OAIGoogleCloudDialogflowV2AnalyzeContentRequest::getAssistQueryParams() const {
    return m_assist_query_params;
}
void OAIGoogleCloudDialogflowV2AnalyzeContentRequest::setAssistQueryParams(const OAIGoogleCloudDialogflowV2AssistQueryParameters &assist_query_params) {
    m_assist_query_params = assist_query_params;
    m_assist_query_params_isSet = true;
}

bool OAIGoogleCloudDialogflowV2AnalyzeContentRequest::is_assist_query_params_Set() const{
    return m_assist_query_params_isSet;
}

bool OAIGoogleCloudDialogflowV2AnalyzeContentRequest::is_assist_query_params_Valid() const{
    return m_assist_query_params_isValid;
}

QMap<QString, QJsonValue> OAIGoogleCloudDialogflowV2AnalyzeContentRequest::getCxParameters() const {
    return m_cx_parameters;
}
void OAIGoogleCloudDialogflowV2AnalyzeContentRequest::setCxParameters(const QMap<QString, QJsonValue> &cx_parameters) {
    m_cx_parameters = cx_parameters;
    m_cx_parameters_isSet = true;
}

bool OAIGoogleCloudDialogflowV2AnalyzeContentRequest::is_cx_parameters_Set() const{
    return m_cx_parameters_isSet;
}

bool OAIGoogleCloudDialogflowV2AnalyzeContentRequest::is_cx_parameters_Valid() const{
    return m_cx_parameters_isValid;
}

OAIGoogleCloudDialogflowV2EventInput OAIGoogleCloudDialogflowV2AnalyzeContentRequest::getEventInput() const {
    return m_event_input;
}
void OAIGoogleCloudDialogflowV2AnalyzeContentRequest::setEventInput(const OAIGoogleCloudDialogflowV2EventInput &event_input) {
    m_event_input = event_input;
    m_event_input_isSet = true;
}

bool OAIGoogleCloudDialogflowV2AnalyzeContentRequest::is_event_input_Set() const{
    return m_event_input_isSet;
}

bool OAIGoogleCloudDialogflowV2AnalyzeContentRequest::is_event_input_Valid() const{
    return m_event_input_isValid;
}

OAIGoogleCloudDialogflowV2QueryParameters OAIGoogleCloudDialogflowV2AnalyzeContentRequest::getQueryParams() const {
    return m_query_params;
}
void OAIGoogleCloudDialogflowV2AnalyzeContentRequest::setQueryParams(const OAIGoogleCloudDialogflowV2QueryParameters &query_params) {
    m_query_params = query_params;
    m_query_params_isSet = true;
}

bool OAIGoogleCloudDialogflowV2AnalyzeContentRequest::is_query_params_Set() const{
    return m_query_params_isSet;
}

bool OAIGoogleCloudDialogflowV2AnalyzeContentRequest::is_query_params_Valid() const{
    return m_query_params_isValid;
}

OAIGoogleCloudDialogflowV2OutputAudioConfig OAIGoogleCloudDialogflowV2AnalyzeContentRequest::getReplyAudioConfig() const {
    return m_reply_audio_config;
}
void OAIGoogleCloudDialogflowV2AnalyzeContentRequest::setReplyAudioConfig(const OAIGoogleCloudDialogflowV2OutputAudioConfig &reply_audio_config) {
    m_reply_audio_config = reply_audio_config;
    m_reply_audio_config_isSet = true;
}

bool OAIGoogleCloudDialogflowV2AnalyzeContentRequest::is_reply_audio_config_Set() const{
    return m_reply_audio_config_isSet;
}

bool OAIGoogleCloudDialogflowV2AnalyzeContentRequest::is_reply_audio_config_Valid() const{
    return m_reply_audio_config_isValid;
}

QString OAIGoogleCloudDialogflowV2AnalyzeContentRequest::getRequestId() const {
    return m_request_id;
}
void OAIGoogleCloudDialogflowV2AnalyzeContentRequest::setRequestId(const QString &request_id) {
    m_request_id = request_id;
    m_request_id_isSet = true;
}

bool OAIGoogleCloudDialogflowV2AnalyzeContentRequest::is_request_id_Set() const{
    return m_request_id_isSet;
}

bool OAIGoogleCloudDialogflowV2AnalyzeContentRequest::is_request_id_Valid() const{
    return m_request_id_isValid;
}

OAIGoogleCloudDialogflowV2SuggestionInput OAIGoogleCloudDialogflowV2AnalyzeContentRequest::getSuggestionInput() const {
    return m_suggestion_input;
}
void OAIGoogleCloudDialogflowV2AnalyzeContentRequest::setSuggestionInput(const OAIGoogleCloudDialogflowV2SuggestionInput &suggestion_input) {
    m_suggestion_input = suggestion_input;
    m_suggestion_input_isSet = true;
}

bool OAIGoogleCloudDialogflowV2AnalyzeContentRequest::is_suggestion_input_Set() const{
    return m_suggestion_input_isSet;
}

bool OAIGoogleCloudDialogflowV2AnalyzeContentRequest::is_suggestion_input_Valid() const{
    return m_suggestion_input_isValid;
}

OAIGoogleCloudDialogflowV2TextInput OAIGoogleCloudDialogflowV2AnalyzeContentRequest::getTextInput() const {
    return m_text_input;
}
void OAIGoogleCloudDialogflowV2AnalyzeContentRequest::setTextInput(const OAIGoogleCloudDialogflowV2TextInput &text_input) {
    m_text_input = text_input;
    m_text_input_isSet = true;
}

bool OAIGoogleCloudDialogflowV2AnalyzeContentRequest::is_text_input_Set() const{
    return m_text_input_isSet;
}

bool OAIGoogleCloudDialogflowV2AnalyzeContentRequest::is_text_input_Valid() const{
    return m_text_input_isValid;
}

bool OAIGoogleCloudDialogflowV2AnalyzeContentRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_assist_query_params.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_cx_parameters.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_event_input.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_query_params.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_reply_audio_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_request_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_suggestion_input.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_text_input.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowV2AnalyzeContentRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
