/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowV2ConversationModel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowV2ConversationModel::OAIGoogleCloudDialogflowV2ConversationModel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowV2ConversationModel::OAIGoogleCloudDialogflowV2ConversationModel() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowV2ConversationModel::~OAIGoogleCloudDialogflowV2ConversationModel() {}

void OAIGoogleCloudDialogflowV2ConversationModel::initializeModel() {

    m_article_suggestion_model_metadata_isSet = false;
    m_article_suggestion_model_metadata_isValid = false;

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_datasets_isSet = false;
    m_datasets_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_language_code_isSet = false;
    m_language_code_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_smart_reply_model_metadata_isSet = false;
    m_smart_reply_model_metadata_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;
}

void OAIGoogleCloudDialogflowV2ConversationModel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowV2ConversationModel::fromJsonObject(QJsonObject json) {

    m_article_suggestion_model_metadata_isValid = ::OpenAPI::fromJsonValue(m_article_suggestion_model_metadata, json[QString("articleSuggestionModelMetadata")]);
    m_article_suggestion_model_metadata_isSet = !json[QString("articleSuggestionModelMetadata")].isNull() && m_article_suggestion_model_metadata_isValid;

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_datasets_isValid = ::OpenAPI::fromJsonValue(m_datasets, json[QString("datasets")]);
    m_datasets_isSet = !json[QString("datasets")].isNull() && m_datasets_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_language_code_isValid = ::OpenAPI::fromJsonValue(m_language_code, json[QString("languageCode")]);
    m_language_code_isSet = !json[QString("languageCode")].isNull() && m_language_code_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_smart_reply_model_metadata_isValid = ::OpenAPI::fromJsonValue(m_smart_reply_model_metadata, json[QString("smartReplyModelMetadata")]);
    m_smart_reply_model_metadata_isSet = !json[QString("smartReplyModelMetadata")].isNull() && m_smart_reply_model_metadata_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;
}

QString OAIGoogleCloudDialogflowV2ConversationModel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowV2ConversationModel::asJsonObject() const {
    QJsonObject obj;
    if (m_article_suggestion_model_metadata.isSet()) {
        obj.insert(QString("articleSuggestionModelMetadata"), ::OpenAPI::toJsonValue(m_article_suggestion_model_metadata));
    }
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_datasets.size() > 0) {
        obj.insert(QString("datasets"), ::OpenAPI::toJsonValue(m_datasets));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_language_code_isSet) {
        obj.insert(QString("languageCode"), ::OpenAPI::toJsonValue(m_language_code));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_smart_reply_model_metadata.isSet()) {
        obj.insert(QString("smartReplyModelMetadata"), ::OpenAPI::toJsonValue(m_smart_reply_model_metadata));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    return obj;
}

OAIGoogleCloudDialogflowV2ArticleSuggestionModelMetadata OAIGoogleCloudDialogflowV2ConversationModel::getArticleSuggestionModelMetadata() const {
    return m_article_suggestion_model_metadata;
}
void OAIGoogleCloudDialogflowV2ConversationModel::setArticleSuggestionModelMetadata(const OAIGoogleCloudDialogflowV2ArticleSuggestionModelMetadata &article_suggestion_model_metadata) {
    m_article_suggestion_model_metadata = article_suggestion_model_metadata;
    m_article_suggestion_model_metadata_isSet = true;
}

bool OAIGoogleCloudDialogflowV2ConversationModel::is_article_suggestion_model_metadata_Set() const{
    return m_article_suggestion_model_metadata_isSet;
}

bool OAIGoogleCloudDialogflowV2ConversationModel::is_article_suggestion_model_metadata_Valid() const{
    return m_article_suggestion_model_metadata_isValid;
}

QString OAIGoogleCloudDialogflowV2ConversationModel::getCreateTime() const {
    return m_create_time;
}
void OAIGoogleCloudDialogflowV2ConversationModel::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIGoogleCloudDialogflowV2ConversationModel::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIGoogleCloudDialogflowV2ConversationModel::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QList<OAIGoogleCloudDialogflowV2InputDataset> OAIGoogleCloudDialogflowV2ConversationModel::getDatasets() const {
    return m_datasets;
}
void OAIGoogleCloudDialogflowV2ConversationModel::setDatasets(const QList<OAIGoogleCloudDialogflowV2InputDataset> &datasets) {
    m_datasets = datasets;
    m_datasets_isSet = true;
}

bool OAIGoogleCloudDialogflowV2ConversationModel::is_datasets_Set() const{
    return m_datasets_isSet;
}

bool OAIGoogleCloudDialogflowV2ConversationModel::is_datasets_Valid() const{
    return m_datasets_isValid;
}

QString OAIGoogleCloudDialogflowV2ConversationModel::getDisplayName() const {
    return m_display_name;
}
void OAIGoogleCloudDialogflowV2ConversationModel::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGoogleCloudDialogflowV2ConversationModel::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGoogleCloudDialogflowV2ConversationModel::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QString OAIGoogleCloudDialogflowV2ConversationModel::getLanguageCode() const {
    return m_language_code;
}
void OAIGoogleCloudDialogflowV2ConversationModel::setLanguageCode(const QString &language_code) {
    m_language_code = language_code;
    m_language_code_isSet = true;
}

bool OAIGoogleCloudDialogflowV2ConversationModel::is_language_code_Set() const{
    return m_language_code_isSet;
}

bool OAIGoogleCloudDialogflowV2ConversationModel::is_language_code_Valid() const{
    return m_language_code_isValid;
}

QString OAIGoogleCloudDialogflowV2ConversationModel::getName() const {
    return m_name;
}
void OAIGoogleCloudDialogflowV2ConversationModel::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudDialogflowV2ConversationModel::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudDialogflowV2ConversationModel::is_name_Valid() const{
    return m_name_isValid;
}

OAIGoogleCloudDialogflowV2SmartReplyModelMetadata OAIGoogleCloudDialogflowV2ConversationModel::getSmartReplyModelMetadata() const {
    return m_smart_reply_model_metadata;
}
void OAIGoogleCloudDialogflowV2ConversationModel::setSmartReplyModelMetadata(const OAIGoogleCloudDialogflowV2SmartReplyModelMetadata &smart_reply_model_metadata) {
    m_smart_reply_model_metadata = smart_reply_model_metadata;
    m_smart_reply_model_metadata_isSet = true;
}

bool OAIGoogleCloudDialogflowV2ConversationModel::is_smart_reply_model_metadata_Set() const{
    return m_smart_reply_model_metadata_isSet;
}

bool OAIGoogleCloudDialogflowV2ConversationModel::is_smart_reply_model_metadata_Valid() const{
    return m_smart_reply_model_metadata_isValid;
}

QString OAIGoogleCloudDialogflowV2ConversationModel::getState() const {
    return m_state;
}
void OAIGoogleCloudDialogflowV2ConversationModel::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIGoogleCloudDialogflowV2ConversationModel::is_state_Set() const{
    return m_state_isSet;
}

bool OAIGoogleCloudDialogflowV2ConversationModel::is_state_Valid() const{
    return m_state_isValid;
}

bool OAIGoogleCloudDialogflowV2ConversationModel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_article_suggestion_model_metadata.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_datasets.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_language_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_smart_reply_model_metadata.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowV2ConversationModel::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
