/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowV2ConversationModelEvaluation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowV2ConversationModelEvaluation::OAIGoogleCloudDialogflowV2ConversationModelEvaluation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowV2ConversationModelEvaluation::OAIGoogleCloudDialogflowV2ConversationModelEvaluation() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowV2ConversationModelEvaluation::~OAIGoogleCloudDialogflowV2ConversationModelEvaluation() {}

void OAIGoogleCloudDialogflowV2ConversationModelEvaluation::initializeModel() {

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_evaluation_config_isSet = false;
    m_evaluation_config_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_raw_human_eval_template_csv_isSet = false;
    m_raw_human_eval_template_csv_isValid = false;

    m_smart_reply_metrics_isSet = false;
    m_smart_reply_metrics_isValid = false;
}

void OAIGoogleCloudDialogflowV2ConversationModelEvaluation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowV2ConversationModelEvaluation::fromJsonObject(QJsonObject json) {

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_evaluation_config_isValid = ::OpenAPI::fromJsonValue(m_evaluation_config, json[QString("evaluationConfig")]);
    m_evaluation_config_isSet = !json[QString("evaluationConfig")].isNull() && m_evaluation_config_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_raw_human_eval_template_csv_isValid = ::OpenAPI::fromJsonValue(m_raw_human_eval_template_csv, json[QString("rawHumanEvalTemplateCsv")]);
    m_raw_human_eval_template_csv_isSet = !json[QString("rawHumanEvalTemplateCsv")].isNull() && m_raw_human_eval_template_csv_isValid;

    m_smart_reply_metrics_isValid = ::OpenAPI::fromJsonValue(m_smart_reply_metrics, json[QString("smartReplyMetrics")]);
    m_smart_reply_metrics_isSet = !json[QString("smartReplyMetrics")].isNull() && m_smart_reply_metrics_isValid;
}

QString OAIGoogleCloudDialogflowV2ConversationModelEvaluation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowV2ConversationModelEvaluation::asJsonObject() const {
    QJsonObject obj;
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_evaluation_config.isSet()) {
        obj.insert(QString("evaluationConfig"), ::OpenAPI::toJsonValue(m_evaluation_config));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_raw_human_eval_template_csv_isSet) {
        obj.insert(QString("rawHumanEvalTemplateCsv"), ::OpenAPI::toJsonValue(m_raw_human_eval_template_csv));
    }
    if (m_smart_reply_metrics.isSet()) {
        obj.insert(QString("smartReplyMetrics"), ::OpenAPI::toJsonValue(m_smart_reply_metrics));
    }
    return obj;
}

QString OAIGoogleCloudDialogflowV2ConversationModelEvaluation::getCreateTime() const {
    return m_create_time;
}
void OAIGoogleCloudDialogflowV2ConversationModelEvaluation::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIGoogleCloudDialogflowV2ConversationModelEvaluation::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIGoogleCloudDialogflowV2ConversationModelEvaluation::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QString OAIGoogleCloudDialogflowV2ConversationModelEvaluation::getDisplayName() const {
    return m_display_name;
}
void OAIGoogleCloudDialogflowV2ConversationModelEvaluation::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGoogleCloudDialogflowV2ConversationModelEvaluation::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGoogleCloudDialogflowV2ConversationModelEvaluation::is_display_name_Valid() const{
    return m_display_name_isValid;
}

OAIGoogleCloudDialogflowV2EvaluationConfig OAIGoogleCloudDialogflowV2ConversationModelEvaluation::getEvaluationConfig() const {
    return m_evaluation_config;
}
void OAIGoogleCloudDialogflowV2ConversationModelEvaluation::setEvaluationConfig(const OAIGoogleCloudDialogflowV2EvaluationConfig &evaluation_config) {
    m_evaluation_config = evaluation_config;
    m_evaluation_config_isSet = true;
}

bool OAIGoogleCloudDialogflowV2ConversationModelEvaluation::is_evaluation_config_Set() const{
    return m_evaluation_config_isSet;
}

bool OAIGoogleCloudDialogflowV2ConversationModelEvaluation::is_evaluation_config_Valid() const{
    return m_evaluation_config_isValid;
}

QString OAIGoogleCloudDialogflowV2ConversationModelEvaluation::getName() const {
    return m_name;
}
void OAIGoogleCloudDialogflowV2ConversationModelEvaluation::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudDialogflowV2ConversationModelEvaluation::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudDialogflowV2ConversationModelEvaluation::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGoogleCloudDialogflowV2ConversationModelEvaluation::getRawHumanEvalTemplateCsv() const {
    return m_raw_human_eval_template_csv;
}
void OAIGoogleCloudDialogflowV2ConversationModelEvaluation::setRawHumanEvalTemplateCsv(const QString &raw_human_eval_template_csv) {
    m_raw_human_eval_template_csv = raw_human_eval_template_csv;
    m_raw_human_eval_template_csv_isSet = true;
}

bool OAIGoogleCloudDialogflowV2ConversationModelEvaluation::is_raw_human_eval_template_csv_Set() const{
    return m_raw_human_eval_template_csv_isSet;
}

bool OAIGoogleCloudDialogflowV2ConversationModelEvaluation::is_raw_human_eval_template_csv_Valid() const{
    return m_raw_human_eval_template_csv_isValid;
}

OAIGoogleCloudDialogflowV2SmartReplyMetrics OAIGoogleCloudDialogflowV2ConversationModelEvaluation::getSmartReplyMetrics() const {
    return m_smart_reply_metrics;
}
void OAIGoogleCloudDialogflowV2ConversationModelEvaluation::setSmartReplyMetrics(const OAIGoogleCloudDialogflowV2SmartReplyMetrics &smart_reply_metrics) {
    m_smart_reply_metrics = smart_reply_metrics;
    m_smart_reply_metrics_isSet = true;
}

bool OAIGoogleCloudDialogflowV2ConversationModelEvaluation::is_smart_reply_metrics_Set() const{
    return m_smart_reply_metrics_isSet;
}

bool OAIGoogleCloudDialogflowV2ConversationModelEvaluation::is_smart_reply_metrics_Valid() const{
    return m_smart_reply_metrics_isValid;
}

bool OAIGoogleCloudDialogflowV2ConversationModelEvaluation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_evaluation_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_raw_human_eval_template_csv_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_smart_reply_metrics.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowV2ConversationModelEvaluation::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
