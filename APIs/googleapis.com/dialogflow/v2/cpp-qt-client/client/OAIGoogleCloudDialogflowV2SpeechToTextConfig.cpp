/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowV2SpeechToTextConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowV2SpeechToTextConfig::OAIGoogleCloudDialogflowV2SpeechToTextConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowV2SpeechToTextConfig::OAIGoogleCloudDialogflowV2SpeechToTextConfig() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowV2SpeechToTextConfig::~OAIGoogleCloudDialogflowV2SpeechToTextConfig() {}

void OAIGoogleCloudDialogflowV2SpeechToTextConfig::initializeModel() {

    m_model_isSet = false;
    m_model_isValid = false;

    m_speech_model_variant_isSet = false;
    m_speech_model_variant_isValid = false;

    m_use_timeout_based_endpointing_isSet = false;
    m_use_timeout_based_endpointing_isValid = false;
}

void OAIGoogleCloudDialogflowV2SpeechToTextConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowV2SpeechToTextConfig::fromJsonObject(QJsonObject json) {

    m_model_isValid = ::OpenAPI::fromJsonValue(m_model, json[QString("model")]);
    m_model_isSet = !json[QString("model")].isNull() && m_model_isValid;

    m_speech_model_variant_isValid = ::OpenAPI::fromJsonValue(m_speech_model_variant, json[QString("speechModelVariant")]);
    m_speech_model_variant_isSet = !json[QString("speechModelVariant")].isNull() && m_speech_model_variant_isValid;

    m_use_timeout_based_endpointing_isValid = ::OpenAPI::fromJsonValue(m_use_timeout_based_endpointing, json[QString("useTimeoutBasedEndpointing")]);
    m_use_timeout_based_endpointing_isSet = !json[QString("useTimeoutBasedEndpointing")].isNull() && m_use_timeout_based_endpointing_isValid;
}

QString OAIGoogleCloudDialogflowV2SpeechToTextConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowV2SpeechToTextConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_model_isSet) {
        obj.insert(QString("model"), ::OpenAPI::toJsonValue(m_model));
    }
    if (m_speech_model_variant_isSet) {
        obj.insert(QString("speechModelVariant"), ::OpenAPI::toJsonValue(m_speech_model_variant));
    }
    if (m_use_timeout_based_endpointing_isSet) {
        obj.insert(QString("useTimeoutBasedEndpointing"), ::OpenAPI::toJsonValue(m_use_timeout_based_endpointing));
    }
    return obj;
}

QString OAIGoogleCloudDialogflowV2SpeechToTextConfig::getModel() const {
    return m_model;
}
void OAIGoogleCloudDialogflowV2SpeechToTextConfig::setModel(const QString &model) {
    m_model = model;
    m_model_isSet = true;
}

bool OAIGoogleCloudDialogflowV2SpeechToTextConfig::is_model_Set() const{
    return m_model_isSet;
}

bool OAIGoogleCloudDialogflowV2SpeechToTextConfig::is_model_Valid() const{
    return m_model_isValid;
}

QString OAIGoogleCloudDialogflowV2SpeechToTextConfig::getSpeechModelVariant() const {
    return m_speech_model_variant;
}
void OAIGoogleCloudDialogflowV2SpeechToTextConfig::setSpeechModelVariant(const QString &speech_model_variant) {
    m_speech_model_variant = speech_model_variant;
    m_speech_model_variant_isSet = true;
}

bool OAIGoogleCloudDialogflowV2SpeechToTextConfig::is_speech_model_variant_Set() const{
    return m_speech_model_variant_isSet;
}

bool OAIGoogleCloudDialogflowV2SpeechToTextConfig::is_speech_model_variant_Valid() const{
    return m_speech_model_variant_isValid;
}

bool OAIGoogleCloudDialogflowV2SpeechToTextConfig::isUseTimeoutBasedEndpointing() const {
    return m_use_timeout_based_endpointing;
}
void OAIGoogleCloudDialogflowV2SpeechToTextConfig::setUseTimeoutBasedEndpointing(const bool &use_timeout_based_endpointing) {
    m_use_timeout_based_endpointing = use_timeout_based_endpointing;
    m_use_timeout_based_endpointing_isSet = true;
}

bool OAIGoogleCloudDialogflowV2SpeechToTextConfig::is_use_timeout_based_endpointing_Set() const{
    return m_use_timeout_based_endpointing_isSet;
}

bool OAIGoogleCloudDialogflowV2SpeechToTextConfig::is_use_timeout_based_endpointing_Valid() const{
    return m_use_timeout_based_endpointing_isValid;
}

bool OAIGoogleCloudDialogflowV2SpeechToTextConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_model_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_speech_model_variant_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_use_timeout_based_endpointing_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowV2SpeechToTextConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
