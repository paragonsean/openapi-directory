/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowV2ValidationError.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowV2ValidationError::OAIGoogleCloudDialogflowV2ValidationError(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowV2ValidationError::OAIGoogleCloudDialogflowV2ValidationError() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowV2ValidationError::~OAIGoogleCloudDialogflowV2ValidationError() {}

void OAIGoogleCloudDialogflowV2ValidationError::initializeModel() {

    m_entries_isSet = false;
    m_entries_isValid = false;

    m_error_message_isSet = false;
    m_error_message_isValid = false;

    m_severity_isSet = false;
    m_severity_isValid = false;
}

void OAIGoogleCloudDialogflowV2ValidationError::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowV2ValidationError::fromJsonObject(QJsonObject json) {

    m_entries_isValid = ::OpenAPI::fromJsonValue(m_entries, json[QString("entries")]);
    m_entries_isSet = !json[QString("entries")].isNull() && m_entries_isValid;

    m_error_message_isValid = ::OpenAPI::fromJsonValue(m_error_message, json[QString("errorMessage")]);
    m_error_message_isSet = !json[QString("errorMessage")].isNull() && m_error_message_isValid;

    m_severity_isValid = ::OpenAPI::fromJsonValue(m_severity, json[QString("severity")]);
    m_severity_isSet = !json[QString("severity")].isNull() && m_severity_isValid;
}

QString OAIGoogleCloudDialogflowV2ValidationError::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowV2ValidationError::asJsonObject() const {
    QJsonObject obj;
    if (m_entries.size() > 0) {
        obj.insert(QString("entries"), ::OpenAPI::toJsonValue(m_entries));
    }
    if (m_error_message_isSet) {
        obj.insert(QString("errorMessage"), ::OpenAPI::toJsonValue(m_error_message));
    }
    if (m_severity_isSet) {
        obj.insert(QString("severity"), ::OpenAPI::toJsonValue(m_severity));
    }
    return obj;
}

QList<QString> OAIGoogleCloudDialogflowV2ValidationError::getEntries() const {
    return m_entries;
}
void OAIGoogleCloudDialogflowV2ValidationError::setEntries(const QList<QString> &entries) {
    m_entries = entries;
    m_entries_isSet = true;
}

bool OAIGoogleCloudDialogflowV2ValidationError::is_entries_Set() const{
    return m_entries_isSet;
}

bool OAIGoogleCloudDialogflowV2ValidationError::is_entries_Valid() const{
    return m_entries_isValid;
}

QString OAIGoogleCloudDialogflowV2ValidationError::getErrorMessage() const {
    return m_error_message;
}
void OAIGoogleCloudDialogflowV2ValidationError::setErrorMessage(const QString &error_message) {
    m_error_message = error_message;
    m_error_message_isSet = true;
}

bool OAIGoogleCloudDialogflowV2ValidationError::is_error_message_Set() const{
    return m_error_message_isSet;
}

bool OAIGoogleCloudDialogflowV2ValidationError::is_error_message_Valid() const{
    return m_error_message_isValid;
}

QString OAIGoogleCloudDialogflowV2ValidationError::getSeverity() const {
    return m_severity;
}
void OAIGoogleCloudDialogflowV2ValidationError::setSeverity(const QString &severity) {
    m_severity = severity;
    m_severity_isSet = true;
}

bool OAIGoogleCloudDialogflowV2ValidationError::is_severity_Set() const{
    return m_severity_isSet;
}

bool OAIGoogleCloudDialogflowV2ValidationError::is_severity_Valid() const{
    return m_severity_isValid;
}

bool OAIGoogleCloudDialogflowV2ValidationError::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_entries.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_error_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_severity_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowV2ValidationError::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
