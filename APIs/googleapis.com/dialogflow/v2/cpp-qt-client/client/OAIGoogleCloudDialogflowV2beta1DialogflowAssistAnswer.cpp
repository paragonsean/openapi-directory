/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowV2beta1DialogflowAssistAnswer.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowV2beta1DialogflowAssistAnswer::OAIGoogleCloudDialogflowV2beta1DialogflowAssistAnswer(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowV2beta1DialogflowAssistAnswer::OAIGoogleCloudDialogflowV2beta1DialogflowAssistAnswer() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowV2beta1DialogflowAssistAnswer::~OAIGoogleCloudDialogflowV2beta1DialogflowAssistAnswer() {}

void OAIGoogleCloudDialogflowV2beta1DialogflowAssistAnswer::initializeModel() {

    m_answer_record_isSet = false;
    m_answer_record_isValid = false;

    m_intent_suggestion_isSet = false;
    m_intent_suggestion_isValid = false;

    m_query_result_isSet = false;
    m_query_result_isValid = false;
}

void OAIGoogleCloudDialogflowV2beta1DialogflowAssistAnswer::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowV2beta1DialogflowAssistAnswer::fromJsonObject(QJsonObject json) {

    m_answer_record_isValid = ::OpenAPI::fromJsonValue(m_answer_record, json[QString("answerRecord")]);
    m_answer_record_isSet = !json[QString("answerRecord")].isNull() && m_answer_record_isValid;

    m_intent_suggestion_isValid = ::OpenAPI::fromJsonValue(m_intent_suggestion, json[QString("intentSuggestion")]);
    m_intent_suggestion_isSet = !json[QString("intentSuggestion")].isNull() && m_intent_suggestion_isValid;

    m_query_result_isValid = ::OpenAPI::fromJsonValue(m_query_result, json[QString("queryResult")]);
    m_query_result_isSet = !json[QString("queryResult")].isNull() && m_query_result_isValid;
}

QString OAIGoogleCloudDialogflowV2beta1DialogflowAssistAnswer::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowV2beta1DialogflowAssistAnswer::asJsonObject() const {
    QJsonObject obj;
    if (m_answer_record_isSet) {
        obj.insert(QString("answerRecord"), ::OpenAPI::toJsonValue(m_answer_record));
    }
    if (m_intent_suggestion.isSet()) {
        obj.insert(QString("intentSuggestion"), ::OpenAPI::toJsonValue(m_intent_suggestion));
    }
    if (m_query_result.isSet()) {
        obj.insert(QString("queryResult"), ::OpenAPI::toJsonValue(m_query_result));
    }
    return obj;
}

QString OAIGoogleCloudDialogflowV2beta1DialogflowAssistAnswer::getAnswerRecord() const {
    return m_answer_record;
}
void OAIGoogleCloudDialogflowV2beta1DialogflowAssistAnswer::setAnswerRecord(const QString &answer_record) {
    m_answer_record = answer_record;
    m_answer_record_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1DialogflowAssistAnswer::is_answer_record_Set() const{
    return m_answer_record_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1DialogflowAssistAnswer::is_answer_record_Valid() const{
    return m_answer_record_isValid;
}

OAIGoogleCloudDialogflowV2beta1IntentSuggestion OAIGoogleCloudDialogflowV2beta1DialogflowAssistAnswer::getIntentSuggestion() const {
    return m_intent_suggestion;
}
void OAIGoogleCloudDialogflowV2beta1DialogflowAssistAnswer::setIntentSuggestion(const OAIGoogleCloudDialogflowV2beta1IntentSuggestion &intent_suggestion) {
    m_intent_suggestion = intent_suggestion;
    m_intent_suggestion_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1DialogflowAssistAnswer::is_intent_suggestion_Set() const{
    return m_intent_suggestion_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1DialogflowAssistAnswer::is_intent_suggestion_Valid() const{
    return m_intent_suggestion_isValid;
}

OAIGoogleCloudDialogflowV2beta1QueryResult OAIGoogleCloudDialogflowV2beta1DialogflowAssistAnswer::getQueryResult() const {
    return m_query_result;
}
void OAIGoogleCloudDialogflowV2beta1DialogflowAssistAnswer::setQueryResult(const OAIGoogleCloudDialogflowV2beta1QueryResult &query_result) {
    m_query_result = query_result;
    m_query_result_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1DialogflowAssistAnswer::is_query_result_Set() const{
    return m_query_result_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1DialogflowAssistAnswer::is_query_result_Valid() const{
    return m_query_result_isValid;
}

bool OAIGoogleCloudDialogflowV2beta1DialogflowAssistAnswer::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_answer_record_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_intent_suggestion.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_query_result.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowV2beta1DialogflowAssistAnswer::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
