/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowV2AnswerRecord.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowV2AnswerRecord::OAIGoogleCloudDialogflowV2AnswerRecord(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowV2AnswerRecord::OAIGoogleCloudDialogflowV2AnswerRecord() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowV2AnswerRecord::~OAIGoogleCloudDialogflowV2AnswerRecord() {}

void OAIGoogleCloudDialogflowV2AnswerRecord::initializeModel() {

    m_agent_assistant_record_isSet = false;
    m_agent_assistant_record_isValid = false;

    m_answer_feedback_isSet = false;
    m_answer_feedback_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAIGoogleCloudDialogflowV2AnswerRecord::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowV2AnswerRecord::fromJsonObject(QJsonObject json) {

    m_agent_assistant_record_isValid = ::OpenAPI::fromJsonValue(m_agent_assistant_record, json[QString("agentAssistantRecord")]);
    m_agent_assistant_record_isSet = !json[QString("agentAssistantRecord")].isNull() && m_agent_assistant_record_isValid;

    m_answer_feedback_isValid = ::OpenAPI::fromJsonValue(m_answer_feedback, json[QString("answerFeedback")]);
    m_answer_feedback_isSet = !json[QString("answerFeedback")].isNull() && m_answer_feedback_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;
}

QString OAIGoogleCloudDialogflowV2AnswerRecord::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowV2AnswerRecord::asJsonObject() const {
    QJsonObject obj;
    if (m_agent_assistant_record.isSet()) {
        obj.insert(QString("agentAssistantRecord"), ::OpenAPI::toJsonValue(m_agent_assistant_record));
    }
    if (m_answer_feedback.isSet()) {
        obj.insert(QString("answerFeedback"), ::OpenAPI::toJsonValue(m_answer_feedback));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

OAIGoogleCloudDialogflowV2AgentAssistantRecord OAIGoogleCloudDialogflowV2AnswerRecord::getAgentAssistantRecord() const {
    return m_agent_assistant_record;
}
void OAIGoogleCloudDialogflowV2AnswerRecord::setAgentAssistantRecord(const OAIGoogleCloudDialogflowV2AgentAssistantRecord &agent_assistant_record) {
    m_agent_assistant_record = agent_assistant_record;
    m_agent_assistant_record_isSet = true;
}

bool OAIGoogleCloudDialogflowV2AnswerRecord::is_agent_assistant_record_Set() const{
    return m_agent_assistant_record_isSet;
}

bool OAIGoogleCloudDialogflowV2AnswerRecord::is_agent_assistant_record_Valid() const{
    return m_agent_assistant_record_isValid;
}

OAIGoogleCloudDialogflowV2AnswerFeedback OAIGoogleCloudDialogflowV2AnswerRecord::getAnswerFeedback() const {
    return m_answer_feedback;
}
void OAIGoogleCloudDialogflowV2AnswerRecord::setAnswerFeedback(const OAIGoogleCloudDialogflowV2AnswerFeedback &answer_feedback) {
    m_answer_feedback = answer_feedback;
    m_answer_feedback_isSet = true;
}

bool OAIGoogleCloudDialogflowV2AnswerRecord::is_answer_feedback_Set() const{
    return m_answer_feedback_isSet;
}

bool OAIGoogleCloudDialogflowV2AnswerRecord::is_answer_feedback_Valid() const{
    return m_answer_feedback_isValid;
}

QString OAIGoogleCloudDialogflowV2AnswerRecord::getName() const {
    return m_name;
}
void OAIGoogleCloudDialogflowV2AnswerRecord::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudDialogflowV2AnswerRecord::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudDialogflowV2AnswerRecord::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIGoogleCloudDialogflowV2AnswerRecord::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_agent_assistant_record.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_answer_feedback.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowV2AnswerRecord::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
