/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowV2HumanAgentAssistantConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowV2HumanAgentAssistantConfig::OAIGoogleCloudDialogflowV2HumanAgentAssistantConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowV2HumanAgentAssistantConfig::OAIGoogleCloudDialogflowV2HumanAgentAssistantConfig() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowV2HumanAgentAssistantConfig::~OAIGoogleCloudDialogflowV2HumanAgentAssistantConfig() {}

void OAIGoogleCloudDialogflowV2HumanAgentAssistantConfig::initializeModel() {

    m_end_user_suggestion_config_isSet = false;
    m_end_user_suggestion_config_isValid = false;

    m_human_agent_suggestion_config_isSet = false;
    m_human_agent_suggestion_config_isValid = false;

    m_message_analysis_config_isSet = false;
    m_message_analysis_config_isValid = false;

    m_notification_config_isSet = false;
    m_notification_config_isValid = false;
}

void OAIGoogleCloudDialogflowV2HumanAgentAssistantConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowV2HumanAgentAssistantConfig::fromJsonObject(QJsonObject json) {

    m_end_user_suggestion_config_isValid = ::OpenAPI::fromJsonValue(m_end_user_suggestion_config, json[QString("endUserSuggestionConfig")]);
    m_end_user_suggestion_config_isSet = !json[QString("endUserSuggestionConfig")].isNull() && m_end_user_suggestion_config_isValid;

    m_human_agent_suggestion_config_isValid = ::OpenAPI::fromJsonValue(m_human_agent_suggestion_config, json[QString("humanAgentSuggestionConfig")]);
    m_human_agent_suggestion_config_isSet = !json[QString("humanAgentSuggestionConfig")].isNull() && m_human_agent_suggestion_config_isValid;

    m_message_analysis_config_isValid = ::OpenAPI::fromJsonValue(m_message_analysis_config, json[QString("messageAnalysisConfig")]);
    m_message_analysis_config_isSet = !json[QString("messageAnalysisConfig")].isNull() && m_message_analysis_config_isValid;

    m_notification_config_isValid = ::OpenAPI::fromJsonValue(m_notification_config, json[QString("notificationConfig")]);
    m_notification_config_isSet = !json[QString("notificationConfig")].isNull() && m_notification_config_isValid;
}

QString OAIGoogleCloudDialogflowV2HumanAgentAssistantConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowV2HumanAgentAssistantConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_end_user_suggestion_config.isSet()) {
        obj.insert(QString("endUserSuggestionConfig"), ::OpenAPI::toJsonValue(m_end_user_suggestion_config));
    }
    if (m_human_agent_suggestion_config.isSet()) {
        obj.insert(QString("humanAgentSuggestionConfig"), ::OpenAPI::toJsonValue(m_human_agent_suggestion_config));
    }
    if (m_message_analysis_config.isSet()) {
        obj.insert(QString("messageAnalysisConfig"), ::OpenAPI::toJsonValue(m_message_analysis_config));
    }
    if (m_notification_config.isSet()) {
        obj.insert(QString("notificationConfig"), ::OpenAPI::toJsonValue(m_notification_config));
    }
    return obj;
}

OAIGoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionConfig OAIGoogleCloudDialogflowV2HumanAgentAssistantConfig::getEndUserSuggestionConfig() const {
    return m_end_user_suggestion_config;
}
void OAIGoogleCloudDialogflowV2HumanAgentAssistantConfig::setEndUserSuggestionConfig(const OAIGoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionConfig &end_user_suggestion_config) {
    m_end_user_suggestion_config = end_user_suggestion_config;
    m_end_user_suggestion_config_isSet = true;
}

bool OAIGoogleCloudDialogflowV2HumanAgentAssistantConfig::is_end_user_suggestion_config_Set() const{
    return m_end_user_suggestion_config_isSet;
}

bool OAIGoogleCloudDialogflowV2HumanAgentAssistantConfig::is_end_user_suggestion_config_Valid() const{
    return m_end_user_suggestion_config_isValid;
}

OAIGoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionConfig OAIGoogleCloudDialogflowV2HumanAgentAssistantConfig::getHumanAgentSuggestionConfig() const {
    return m_human_agent_suggestion_config;
}
void OAIGoogleCloudDialogflowV2HumanAgentAssistantConfig::setHumanAgentSuggestionConfig(const OAIGoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionConfig &human_agent_suggestion_config) {
    m_human_agent_suggestion_config = human_agent_suggestion_config;
    m_human_agent_suggestion_config_isSet = true;
}

bool OAIGoogleCloudDialogflowV2HumanAgentAssistantConfig::is_human_agent_suggestion_config_Set() const{
    return m_human_agent_suggestion_config_isSet;
}

bool OAIGoogleCloudDialogflowV2HumanAgentAssistantConfig::is_human_agent_suggestion_config_Valid() const{
    return m_human_agent_suggestion_config_isValid;
}

OAIGoogleCloudDialogflowV2HumanAgentAssistantConfigMessageAnalysisConfig OAIGoogleCloudDialogflowV2HumanAgentAssistantConfig::getMessageAnalysisConfig() const {
    return m_message_analysis_config;
}
void OAIGoogleCloudDialogflowV2HumanAgentAssistantConfig::setMessageAnalysisConfig(const OAIGoogleCloudDialogflowV2HumanAgentAssistantConfigMessageAnalysisConfig &message_analysis_config) {
    m_message_analysis_config = message_analysis_config;
    m_message_analysis_config_isSet = true;
}

bool OAIGoogleCloudDialogflowV2HumanAgentAssistantConfig::is_message_analysis_config_Set() const{
    return m_message_analysis_config_isSet;
}

bool OAIGoogleCloudDialogflowV2HumanAgentAssistantConfig::is_message_analysis_config_Valid() const{
    return m_message_analysis_config_isValid;
}

OAIGoogleCloudDialogflowV2NotificationConfig OAIGoogleCloudDialogflowV2HumanAgentAssistantConfig::getNotificationConfig() const {
    return m_notification_config;
}
void OAIGoogleCloudDialogflowV2HumanAgentAssistantConfig::setNotificationConfig(const OAIGoogleCloudDialogflowV2NotificationConfig &notification_config) {
    m_notification_config = notification_config;
    m_notification_config_isSet = true;
}

bool OAIGoogleCloudDialogflowV2HumanAgentAssistantConfig::is_notification_config_Set() const{
    return m_notification_config_isSet;
}

bool OAIGoogleCloudDialogflowV2HumanAgentAssistantConfig::is_notification_config_Valid() const{
    return m_notification_config_isValid;
}

bool OAIGoogleCloudDialogflowV2HumanAgentAssistantConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_end_user_suggestion_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_human_agent_suggestion_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_message_analysis_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_notification_config.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowV2HumanAgentAssistantConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
