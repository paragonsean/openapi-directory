/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowV2DetectIntentRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowV2DetectIntentRequest::OAIGoogleCloudDialogflowV2DetectIntentRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowV2DetectIntentRequest::OAIGoogleCloudDialogflowV2DetectIntentRequest() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowV2DetectIntentRequest::~OAIGoogleCloudDialogflowV2DetectIntentRequest() {}

void OAIGoogleCloudDialogflowV2DetectIntentRequest::initializeModel() {

    m_input_audio_isSet = false;
    m_input_audio_isValid = false;

    m_output_audio_config_isSet = false;
    m_output_audio_config_isValid = false;

    m_output_audio_config_mask_isSet = false;
    m_output_audio_config_mask_isValid = false;

    m_query_input_isSet = false;
    m_query_input_isValid = false;

    m_query_params_isSet = false;
    m_query_params_isValid = false;
}

void OAIGoogleCloudDialogflowV2DetectIntentRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowV2DetectIntentRequest::fromJsonObject(QJsonObject json) {

    m_input_audio_isValid = ::OpenAPI::fromJsonValue(m_input_audio, json[QString("inputAudio")]);
    m_input_audio_isSet = !json[QString("inputAudio")].isNull() && m_input_audio_isValid;

    m_output_audio_config_isValid = ::OpenAPI::fromJsonValue(m_output_audio_config, json[QString("outputAudioConfig")]);
    m_output_audio_config_isSet = !json[QString("outputAudioConfig")].isNull() && m_output_audio_config_isValid;

    m_output_audio_config_mask_isValid = ::OpenAPI::fromJsonValue(m_output_audio_config_mask, json[QString("outputAudioConfigMask")]);
    m_output_audio_config_mask_isSet = !json[QString("outputAudioConfigMask")].isNull() && m_output_audio_config_mask_isValid;

    m_query_input_isValid = ::OpenAPI::fromJsonValue(m_query_input, json[QString("queryInput")]);
    m_query_input_isSet = !json[QString("queryInput")].isNull() && m_query_input_isValid;

    m_query_params_isValid = ::OpenAPI::fromJsonValue(m_query_params, json[QString("queryParams")]);
    m_query_params_isSet = !json[QString("queryParams")].isNull() && m_query_params_isValid;
}

QString OAIGoogleCloudDialogflowV2DetectIntentRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowV2DetectIntentRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_input_audio_isSet) {
        obj.insert(QString("inputAudio"), ::OpenAPI::toJsonValue(m_input_audio));
    }
    if (m_output_audio_config.isSet()) {
        obj.insert(QString("outputAudioConfig"), ::OpenAPI::toJsonValue(m_output_audio_config));
    }
    if (m_output_audio_config_mask_isSet) {
        obj.insert(QString("outputAudioConfigMask"), ::OpenAPI::toJsonValue(m_output_audio_config_mask));
    }
    if (m_query_input.isSet()) {
        obj.insert(QString("queryInput"), ::OpenAPI::toJsonValue(m_query_input));
    }
    if (m_query_params.isSet()) {
        obj.insert(QString("queryParams"), ::OpenAPI::toJsonValue(m_query_params));
    }
    return obj;
}

QByteArray OAIGoogleCloudDialogflowV2DetectIntentRequest::getInputAudio() const {
    return m_input_audio;
}
void OAIGoogleCloudDialogflowV2DetectIntentRequest::setInputAudio(const QByteArray &input_audio) {
    m_input_audio = input_audio;
    m_input_audio_isSet = true;
}

bool OAIGoogleCloudDialogflowV2DetectIntentRequest::is_input_audio_Set() const{
    return m_input_audio_isSet;
}

bool OAIGoogleCloudDialogflowV2DetectIntentRequest::is_input_audio_Valid() const{
    return m_input_audio_isValid;
}

OAIGoogleCloudDialogflowV2OutputAudioConfig OAIGoogleCloudDialogflowV2DetectIntentRequest::getOutputAudioConfig() const {
    return m_output_audio_config;
}
void OAIGoogleCloudDialogflowV2DetectIntentRequest::setOutputAudioConfig(const OAIGoogleCloudDialogflowV2OutputAudioConfig &output_audio_config) {
    m_output_audio_config = output_audio_config;
    m_output_audio_config_isSet = true;
}

bool OAIGoogleCloudDialogflowV2DetectIntentRequest::is_output_audio_config_Set() const{
    return m_output_audio_config_isSet;
}

bool OAIGoogleCloudDialogflowV2DetectIntentRequest::is_output_audio_config_Valid() const{
    return m_output_audio_config_isValid;
}

QString OAIGoogleCloudDialogflowV2DetectIntentRequest::getOutputAudioConfigMask() const {
    return m_output_audio_config_mask;
}
void OAIGoogleCloudDialogflowV2DetectIntentRequest::setOutputAudioConfigMask(const QString &output_audio_config_mask) {
    m_output_audio_config_mask = output_audio_config_mask;
    m_output_audio_config_mask_isSet = true;
}

bool OAIGoogleCloudDialogflowV2DetectIntentRequest::is_output_audio_config_mask_Set() const{
    return m_output_audio_config_mask_isSet;
}

bool OAIGoogleCloudDialogflowV2DetectIntentRequest::is_output_audio_config_mask_Valid() const{
    return m_output_audio_config_mask_isValid;
}

OAIGoogleCloudDialogflowV2QueryInput OAIGoogleCloudDialogflowV2DetectIntentRequest::getQueryInput() const {
    return m_query_input;
}
void OAIGoogleCloudDialogflowV2DetectIntentRequest::setQueryInput(const OAIGoogleCloudDialogflowV2QueryInput &query_input) {
    m_query_input = query_input;
    m_query_input_isSet = true;
}

bool OAIGoogleCloudDialogflowV2DetectIntentRequest::is_query_input_Set() const{
    return m_query_input_isSet;
}

bool OAIGoogleCloudDialogflowV2DetectIntentRequest::is_query_input_Valid() const{
    return m_query_input_isValid;
}

OAIGoogleCloudDialogflowV2QueryParameters OAIGoogleCloudDialogflowV2DetectIntentRequest::getQueryParams() const {
    return m_query_params;
}
void OAIGoogleCloudDialogflowV2DetectIntentRequest::setQueryParams(const OAIGoogleCloudDialogflowV2QueryParameters &query_params) {
    m_query_params = query_params;
    m_query_params_isSet = true;
}

bool OAIGoogleCloudDialogflowV2DetectIntentRequest::is_query_params_Set() const{
    return m_query_params_isSet;
}

bool OAIGoogleCloudDialogflowV2DetectIntentRequest::is_query_params_Valid() const{
    return m_query_params_isValid;
}

bool OAIGoogleCloudDialogflowV2DetectIntentRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_input_audio_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_output_audio_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_output_audio_config_mask_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_query_input.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_query_params.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowV2DetectIntentRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
