/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowV2EvaluationConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowV2EvaluationConfig::OAIGoogleCloudDialogflowV2EvaluationConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowV2EvaluationConfig::OAIGoogleCloudDialogflowV2EvaluationConfig() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowV2EvaluationConfig::~OAIGoogleCloudDialogflowV2EvaluationConfig() {}

void OAIGoogleCloudDialogflowV2EvaluationConfig::initializeModel() {

    m_datasets_isSet = false;
    m_datasets_isValid = false;

    m_smart_compose_config_isSet = false;
    m_smart_compose_config_isValid = false;

    m_smart_reply_config_isSet = false;
    m_smart_reply_config_isValid = false;
}

void OAIGoogleCloudDialogflowV2EvaluationConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowV2EvaluationConfig::fromJsonObject(QJsonObject json) {

    m_datasets_isValid = ::OpenAPI::fromJsonValue(m_datasets, json[QString("datasets")]);
    m_datasets_isSet = !json[QString("datasets")].isNull() && m_datasets_isValid;

    m_smart_compose_config_isValid = ::OpenAPI::fromJsonValue(m_smart_compose_config, json[QString("smartComposeConfig")]);
    m_smart_compose_config_isSet = !json[QString("smartComposeConfig")].isNull() && m_smart_compose_config_isValid;

    m_smart_reply_config_isValid = ::OpenAPI::fromJsonValue(m_smart_reply_config, json[QString("smartReplyConfig")]);
    m_smart_reply_config_isSet = !json[QString("smartReplyConfig")].isNull() && m_smart_reply_config_isValid;
}

QString OAIGoogleCloudDialogflowV2EvaluationConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowV2EvaluationConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_datasets.size() > 0) {
        obj.insert(QString("datasets"), ::OpenAPI::toJsonValue(m_datasets));
    }
    if (m_smart_compose_config.isSet()) {
        obj.insert(QString("smartComposeConfig"), ::OpenAPI::toJsonValue(m_smart_compose_config));
    }
    if (m_smart_reply_config.isSet()) {
        obj.insert(QString("smartReplyConfig"), ::OpenAPI::toJsonValue(m_smart_reply_config));
    }
    return obj;
}

QList<OAIGoogleCloudDialogflowV2InputDataset> OAIGoogleCloudDialogflowV2EvaluationConfig::getDatasets() const {
    return m_datasets;
}
void OAIGoogleCloudDialogflowV2EvaluationConfig::setDatasets(const QList<OAIGoogleCloudDialogflowV2InputDataset> &datasets) {
    m_datasets = datasets;
    m_datasets_isSet = true;
}

bool OAIGoogleCloudDialogflowV2EvaluationConfig::is_datasets_Set() const{
    return m_datasets_isSet;
}

bool OAIGoogleCloudDialogflowV2EvaluationConfig::is_datasets_Valid() const{
    return m_datasets_isValid;
}

OAIGoogleCloudDialogflowV2EvaluationConfigSmartComposeConfig OAIGoogleCloudDialogflowV2EvaluationConfig::getSmartComposeConfig() const {
    return m_smart_compose_config;
}
void OAIGoogleCloudDialogflowV2EvaluationConfig::setSmartComposeConfig(const OAIGoogleCloudDialogflowV2EvaluationConfigSmartComposeConfig &smart_compose_config) {
    m_smart_compose_config = smart_compose_config;
    m_smart_compose_config_isSet = true;
}

bool OAIGoogleCloudDialogflowV2EvaluationConfig::is_smart_compose_config_Set() const{
    return m_smart_compose_config_isSet;
}

bool OAIGoogleCloudDialogflowV2EvaluationConfig::is_smart_compose_config_Valid() const{
    return m_smart_compose_config_isValid;
}

OAIGoogleCloudDialogflowV2EvaluationConfigSmartReplyConfig OAIGoogleCloudDialogflowV2EvaluationConfig::getSmartReplyConfig() const {
    return m_smart_reply_config;
}
void OAIGoogleCloudDialogflowV2EvaluationConfig::setSmartReplyConfig(const OAIGoogleCloudDialogflowV2EvaluationConfigSmartReplyConfig &smart_reply_config) {
    m_smart_reply_config = smart_reply_config;
    m_smart_reply_config_isSet = true;
}

bool OAIGoogleCloudDialogflowV2EvaluationConfig::is_smart_reply_config_Set() const{
    return m_smart_reply_config_isSet;
}

bool OAIGoogleCloudDialogflowV2EvaluationConfig::is_smart_reply_config_Valid() const{
    return m_smart_reply_config_isValid;
}

bool OAIGoogleCloudDialogflowV2EvaluationConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_datasets.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_smart_compose_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_smart_reply_config.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowV2EvaluationConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
