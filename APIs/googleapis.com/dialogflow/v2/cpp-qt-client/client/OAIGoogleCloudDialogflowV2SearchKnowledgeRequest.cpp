/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowV2SearchKnowledgeRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowV2SearchKnowledgeRequest::OAIGoogleCloudDialogflowV2SearchKnowledgeRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowV2SearchKnowledgeRequest::OAIGoogleCloudDialogflowV2SearchKnowledgeRequest() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowV2SearchKnowledgeRequest::~OAIGoogleCloudDialogflowV2SearchKnowledgeRequest() {}

void OAIGoogleCloudDialogflowV2SearchKnowledgeRequest::initializeModel() {

    m_conversation_isSet = false;
    m_conversation_isValid = false;

    m_conversation_profile_isSet = false;
    m_conversation_profile_isValid = false;

    m_latest_message_isSet = false;
    m_latest_message_isValid = false;

    m_parent_isSet = false;
    m_parent_isValid = false;

    m_query_isSet = false;
    m_query_isValid = false;

    m_session_id_isSet = false;
    m_session_id_isValid = false;
}

void OAIGoogleCloudDialogflowV2SearchKnowledgeRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowV2SearchKnowledgeRequest::fromJsonObject(QJsonObject json) {

    m_conversation_isValid = ::OpenAPI::fromJsonValue(m_conversation, json[QString("conversation")]);
    m_conversation_isSet = !json[QString("conversation")].isNull() && m_conversation_isValid;

    m_conversation_profile_isValid = ::OpenAPI::fromJsonValue(m_conversation_profile, json[QString("conversationProfile")]);
    m_conversation_profile_isSet = !json[QString("conversationProfile")].isNull() && m_conversation_profile_isValid;

    m_latest_message_isValid = ::OpenAPI::fromJsonValue(m_latest_message, json[QString("latestMessage")]);
    m_latest_message_isSet = !json[QString("latestMessage")].isNull() && m_latest_message_isValid;

    m_parent_isValid = ::OpenAPI::fromJsonValue(m_parent, json[QString("parent")]);
    m_parent_isSet = !json[QString("parent")].isNull() && m_parent_isValid;

    m_query_isValid = ::OpenAPI::fromJsonValue(m_query, json[QString("query")]);
    m_query_isSet = !json[QString("query")].isNull() && m_query_isValid;

    m_session_id_isValid = ::OpenAPI::fromJsonValue(m_session_id, json[QString("sessionId")]);
    m_session_id_isSet = !json[QString("sessionId")].isNull() && m_session_id_isValid;
}

QString OAIGoogleCloudDialogflowV2SearchKnowledgeRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowV2SearchKnowledgeRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_conversation_isSet) {
        obj.insert(QString("conversation"), ::OpenAPI::toJsonValue(m_conversation));
    }
    if (m_conversation_profile_isSet) {
        obj.insert(QString("conversationProfile"), ::OpenAPI::toJsonValue(m_conversation_profile));
    }
    if (m_latest_message_isSet) {
        obj.insert(QString("latestMessage"), ::OpenAPI::toJsonValue(m_latest_message));
    }
    if (m_parent_isSet) {
        obj.insert(QString("parent"), ::OpenAPI::toJsonValue(m_parent));
    }
    if (m_query.isSet()) {
        obj.insert(QString("query"), ::OpenAPI::toJsonValue(m_query));
    }
    if (m_session_id_isSet) {
        obj.insert(QString("sessionId"), ::OpenAPI::toJsonValue(m_session_id));
    }
    return obj;
}

QString OAIGoogleCloudDialogflowV2SearchKnowledgeRequest::getConversation() const {
    return m_conversation;
}
void OAIGoogleCloudDialogflowV2SearchKnowledgeRequest::setConversation(const QString &conversation) {
    m_conversation = conversation;
    m_conversation_isSet = true;
}

bool OAIGoogleCloudDialogflowV2SearchKnowledgeRequest::is_conversation_Set() const{
    return m_conversation_isSet;
}

bool OAIGoogleCloudDialogflowV2SearchKnowledgeRequest::is_conversation_Valid() const{
    return m_conversation_isValid;
}

QString OAIGoogleCloudDialogflowV2SearchKnowledgeRequest::getConversationProfile() const {
    return m_conversation_profile;
}
void OAIGoogleCloudDialogflowV2SearchKnowledgeRequest::setConversationProfile(const QString &conversation_profile) {
    m_conversation_profile = conversation_profile;
    m_conversation_profile_isSet = true;
}

bool OAIGoogleCloudDialogflowV2SearchKnowledgeRequest::is_conversation_profile_Set() const{
    return m_conversation_profile_isSet;
}

bool OAIGoogleCloudDialogflowV2SearchKnowledgeRequest::is_conversation_profile_Valid() const{
    return m_conversation_profile_isValid;
}

QString OAIGoogleCloudDialogflowV2SearchKnowledgeRequest::getLatestMessage() const {
    return m_latest_message;
}
void OAIGoogleCloudDialogflowV2SearchKnowledgeRequest::setLatestMessage(const QString &latest_message) {
    m_latest_message = latest_message;
    m_latest_message_isSet = true;
}

bool OAIGoogleCloudDialogflowV2SearchKnowledgeRequest::is_latest_message_Set() const{
    return m_latest_message_isSet;
}

bool OAIGoogleCloudDialogflowV2SearchKnowledgeRequest::is_latest_message_Valid() const{
    return m_latest_message_isValid;
}

QString OAIGoogleCloudDialogflowV2SearchKnowledgeRequest::getParent() const {
    return m_parent;
}
void OAIGoogleCloudDialogflowV2SearchKnowledgeRequest::setParent(const QString &parent) {
    m_parent = parent;
    m_parent_isSet = true;
}

bool OAIGoogleCloudDialogflowV2SearchKnowledgeRequest::is_parent_Set() const{
    return m_parent_isSet;
}

bool OAIGoogleCloudDialogflowV2SearchKnowledgeRequest::is_parent_Valid() const{
    return m_parent_isValid;
}

OAIGoogleCloudDialogflowV2TextInput OAIGoogleCloudDialogflowV2SearchKnowledgeRequest::getQuery() const {
    return m_query;
}
void OAIGoogleCloudDialogflowV2SearchKnowledgeRequest::setQuery(const OAIGoogleCloudDialogflowV2TextInput &query) {
    m_query = query;
    m_query_isSet = true;
}

bool OAIGoogleCloudDialogflowV2SearchKnowledgeRequest::is_query_Set() const{
    return m_query_isSet;
}

bool OAIGoogleCloudDialogflowV2SearchKnowledgeRequest::is_query_Valid() const{
    return m_query_isValid;
}

QString OAIGoogleCloudDialogflowV2SearchKnowledgeRequest::getSessionId() const {
    return m_session_id;
}
void OAIGoogleCloudDialogflowV2SearchKnowledgeRequest::setSessionId(const QString &session_id) {
    m_session_id = session_id;
    m_session_id_isSet = true;
}

bool OAIGoogleCloudDialogflowV2SearchKnowledgeRequest::is_session_id_Set() const{
    return m_session_id_isSet;
}

bool OAIGoogleCloudDialogflowV2SearchKnowledgeRequest::is_session_id_Valid() const{
    return m_session_id_isValid;
}

bool OAIGoogleCloudDialogflowV2SearchKnowledgeRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_conversation_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_conversation_profile_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_latest_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_parent_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_query.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_session_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowV2SearchKnowledgeRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
