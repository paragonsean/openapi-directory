/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowV2OutputAudio.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowV2OutputAudio::OAIGoogleCloudDialogflowV2OutputAudio(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowV2OutputAudio::OAIGoogleCloudDialogflowV2OutputAudio() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowV2OutputAudio::~OAIGoogleCloudDialogflowV2OutputAudio() {}

void OAIGoogleCloudDialogflowV2OutputAudio::initializeModel() {

    m_audio_isSet = false;
    m_audio_isValid = false;

    m_config_isSet = false;
    m_config_isValid = false;
}

void OAIGoogleCloudDialogflowV2OutputAudio::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowV2OutputAudio::fromJsonObject(QJsonObject json) {

    m_audio_isValid = ::OpenAPI::fromJsonValue(m_audio, json[QString("audio")]);
    m_audio_isSet = !json[QString("audio")].isNull() && m_audio_isValid;

    m_config_isValid = ::OpenAPI::fromJsonValue(m_config, json[QString("config")]);
    m_config_isSet = !json[QString("config")].isNull() && m_config_isValid;
}

QString OAIGoogleCloudDialogflowV2OutputAudio::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowV2OutputAudio::asJsonObject() const {
    QJsonObject obj;
    if (m_audio_isSet) {
        obj.insert(QString("audio"), ::OpenAPI::toJsonValue(m_audio));
    }
    if (m_config.isSet()) {
        obj.insert(QString("config"), ::OpenAPI::toJsonValue(m_config));
    }
    return obj;
}

QByteArray OAIGoogleCloudDialogflowV2OutputAudio::getAudio() const {
    return m_audio;
}
void OAIGoogleCloudDialogflowV2OutputAudio::setAudio(const QByteArray &audio) {
    m_audio = audio;
    m_audio_isSet = true;
}

bool OAIGoogleCloudDialogflowV2OutputAudio::is_audio_Set() const{
    return m_audio_isSet;
}

bool OAIGoogleCloudDialogflowV2OutputAudio::is_audio_Valid() const{
    return m_audio_isValid;
}

OAIGoogleCloudDialogflowV2OutputAudioConfig OAIGoogleCloudDialogflowV2OutputAudio::getConfig() const {
    return m_config;
}
void OAIGoogleCloudDialogflowV2OutputAudio::setConfig(const OAIGoogleCloudDialogflowV2OutputAudioConfig &config) {
    m_config = config;
    m_config_isSet = true;
}

bool OAIGoogleCloudDialogflowV2OutputAudio::is_config_Set() const{
    return m_config_isSet;
}

bool OAIGoogleCloudDialogflowV2OutputAudio::is_config_Valid() const{
    return m_config_isValid;
}

bool OAIGoogleCloudDialogflowV2OutputAudio::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_audio_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_config.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowV2OutputAudio::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
