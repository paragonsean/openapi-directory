/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowV2beta1ConversationEvent.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowV2beta1ConversationEvent::OAIGoogleCloudDialogflowV2beta1ConversationEvent(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowV2beta1ConversationEvent::OAIGoogleCloudDialogflowV2beta1ConversationEvent() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowV2beta1ConversationEvent::~OAIGoogleCloudDialogflowV2beta1ConversationEvent() {}

void OAIGoogleCloudDialogflowV2beta1ConversationEvent::initializeModel() {

    m_conversation_isSet = false;
    m_conversation_isValid = false;

    m_error_status_isSet = false;
    m_error_status_isValid = false;

    m_new_message_payload_isSet = false;
    m_new_message_payload_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIGoogleCloudDialogflowV2beta1ConversationEvent::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowV2beta1ConversationEvent::fromJsonObject(QJsonObject json) {

    m_conversation_isValid = ::OpenAPI::fromJsonValue(m_conversation, json[QString("conversation")]);
    m_conversation_isSet = !json[QString("conversation")].isNull() && m_conversation_isValid;

    m_error_status_isValid = ::OpenAPI::fromJsonValue(m_error_status, json[QString("errorStatus")]);
    m_error_status_isSet = !json[QString("errorStatus")].isNull() && m_error_status_isValid;

    m_new_message_payload_isValid = ::OpenAPI::fromJsonValue(m_new_message_payload, json[QString("newMessagePayload")]);
    m_new_message_payload_isSet = !json[QString("newMessagePayload")].isNull() && m_new_message_payload_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIGoogleCloudDialogflowV2beta1ConversationEvent::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowV2beta1ConversationEvent::asJsonObject() const {
    QJsonObject obj;
    if (m_conversation_isSet) {
        obj.insert(QString("conversation"), ::OpenAPI::toJsonValue(m_conversation));
    }
    if (m_error_status.isSet()) {
        obj.insert(QString("errorStatus"), ::OpenAPI::toJsonValue(m_error_status));
    }
    if (m_new_message_payload.isSet()) {
        obj.insert(QString("newMessagePayload"), ::OpenAPI::toJsonValue(m_new_message_payload));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QString OAIGoogleCloudDialogflowV2beta1ConversationEvent::getConversation() const {
    return m_conversation;
}
void OAIGoogleCloudDialogflowV2beta1ConversationEvent::setConversation(const QString &conversation) {
    m_conversation = conversation;
    m_conversation_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1ConversationEvent::is_conversation_Set() const{
    return m_conversation_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1ConversationEvent::is_conversation_Valid() const{
    return m_conversation_isValid;
}

OAIGoogleRpcStatus OAIGoogleCloudDialogflowV2beta1ConversationEvent::getErrorStatus() const {
    return m_error_status;
}
void OAIGoogleCloudDialogflowV2beta1ConversationEvent::setErrorStatus(const OAIGoogleRpcStatus &error_status) {
    m_error_status = error_status;
    m_error_status_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1ConversationEvent::is_error_status_Set() const{
    return m_error_status_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1ConversationEvent::is_error_status_Valid() const{
    return m_error_status_isValid;
}

OAIGoogleCloudDialogflowV2beta1Message OAIGoogleCloudDialogflowV2beta1ConversationEvent::getNewMessagePayload() const {
    return m_new_message_payload;
}
void OAIGoogleCloudDialogflowV2beta1ConversationEvent::setNewMessagePayload(const OAIGoogleCloudDialogflowV2beta1Message &new_message_payload) {
    m_new_message_payload = new_message_payload;
    m_new_message_payload_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1ConversationEvent::is_new_message_payload_Set() const{
    return m_new_message_payload_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1ConversationEvent::is_new_message_payload_Valid() const{
    return m_new_message_payload_isValid;
}

QString OAIGoogleCloudDialogflowV2beta1ConversationEvent::getType() const {
    return m_type;
}
void OAIGoogleCloudDialogflowV2beta1ConversationEvent::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIGoogleCloudDialogflowV2beta1ConversationEvent::is_type_Set() const{
    return m_type_isSet;
}

bool OAIGoogleCloudDialogflowV2beta1ConversationEvent::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIGoogleCloudDialogflowV2beta1ConversationEvent::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_conversation_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_error_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_new_message_payload.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowV2beta1ConversationEvent::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
