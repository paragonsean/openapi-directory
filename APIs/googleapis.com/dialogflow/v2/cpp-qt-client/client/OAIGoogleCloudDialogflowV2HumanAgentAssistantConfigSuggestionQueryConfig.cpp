/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfig::OAIGoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfig::OAIGoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfig() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfig::~OAIGoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfig() {}

void OAIGoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfig::initializeModel() {

    m_confidence_threshold_isSet = false;
    m_confidence_threshold_isValid = false;

    m_context_filter_settings_isSet = false;
    m_context_filter_settings_isValid = false;

    m_dialogflow_query_source_isSet = false;
    m_dialogflow_query_source_isValid = false;

    m_document_query_source_isSet = false;
    m_document_query_source_isValid = false;

    m_knowledge_base_query_source_isSet = false;
    m_knowledge_base_query_source_isValid = false;

    m_max_results_isSet = false;
    m_max_results_isValid = false;

    m_sections_isSet = false;
    m_sections_isValid = false;
}

void OAIGoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfig::fromJsonObject(QJsonObject json) {

    m_confidence_threshold_isValid = ::OpenAPI::fromJsonValue(m_confidence_threshold, json[QString("confidenceThreshold")]);
    m_confidence_threshold_isSet = !json[QString("confidenceThreshold")].isNull() && m_confidence_threshold_isValid;

    m_context_filter_settings_isValid = ::OpenAPI::fromJsonValue(m_context_filter_settings, json[QString("contextFilterSettings")]);
    m_context_filter_settings_isSet = !json[QString("contextFilterSettings")].isNull() && m_context_filter_settings_isValid;

    m_dialogflow_query_source_isValid = ::OpenAPI::fromJsonValue(m_dialogflow_query_source, json[QString("dialogflowQuerySource")]);
    m_dialogflow_query_source_isSet = !json[QString("dialogflowQuerySource")].isNull() && m_dialogflow_query_source_isValid;

    m_document_query_source_isValid = ::OpenAPI::fromJsonValue(m_document_query_source, json[QString("documentQuerySource")]);
    m_document_query_source_isSet = !json[QString("documentQuerySource")].isNull() && m_document_query_source_isValid;

    m_knowledge_base_query_source_isValid = ::OpenAPI::fromJsonValue(m_knowledge_base_query_source, json[QString("knowledgeBaseQuerySource")]);
    m_knowledge_base_query_source_isSet = !json[QString("knowledgeBaseQuerySource")].isNull() && m_knowledge_base_query_source_isValid;

    m_max_results_isValid = ::OpenAPI::fromJsonValue(m_max_results, json[QString("maxResults")]);
    m_max_results_isSet = !json[QString("maxResults")].isNull() && m_max_results_isValid;

    m_sections_isValid = ::OpenAPI::fromJsonValue(m_sections, json[QString("sections")]);
    m_sections_isSet = !json[QString("sections")].isNull() && m_sections_isValid;
}

QString OAIGoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_confidence_threshold_isSet) {
        obj.insert(QString("confidenceThreshold"), ::OpenAPI::toJsonValue(m_confidence_threshold));
    }
    if (m_context_filter_settings.isSet()) {
        obj.insert(QString("contextFilterSettings"), ::OpenAPI::toJsonValue(m_context_filter_settings));
    }
    if (m_dialogflow_query_source.isSet()) {
        obj.insert(QString("dialogflowQuerySource"), ::OpenAPI::toJsonValue(m_dialogflow_query_source));
    }
    if (m_document_query_source.isSet()) {
        obj.insert(QString("documentQuerySource"), ::OpenAPI::toJsonValue(m_document_query_source));
    }
    if (m_knowledge_base_query_source.isSet()) {
        obj.insert(QString("knowledgeBaseQuerySource"), ::OpenAPI::toJsonValue(m_knowledge_base_query_source));
    }
    if (m_max_results_isSet) {
        obj.insert(QString("maxResults"), ::OpenAPI::toJsonValue(m_max_results));
    }
    if (m_sections.isSet()) {
        obj.insert(QString("sections"), ::OpenAPI::toJsonValue(m_sections));
    }
    return obj;
}

float OAIGoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfig::getConfidenceThreshold() const {
    return m_confidence_threshold;
}
void OAIGoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfig::setConfidenceThreshold(const float &confidence_threshold) {
    m_confidence_threshold = confidence_threshold;
    m_confidence_threshold_isSet = true;
}

bool OAIGoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfig::is_confidence_threshold_Set() const{
    return m_confidence_threshold_isSet;
}

bool OAIGoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfig::is_confidence_threshold_Valid() const{
    return m_confidence_threshold_isValid;
}

OAIGoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigContextFilterSettings OAIGoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfig::getContextFilterSettings() const {
    return m_context_filter_settings;
}
void OAIGoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfig::setContextFilterSettings(const OAIGoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigContextFilterSettings &context_filter_settings) {
    m_context_filter_settings = context_filter_settings;
    m_context_filter_settings_isSet = true;
}

bool OAIGoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfig::is_context_filter_settings_Set() const{
    return m_context_filter_settings_isSet;
}

bool OAIGoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfig::is_context_filter_settings_Valid() const{
    return m_context_filter_settings_isValid;
}

OAIGoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigDialogflowQuerySource OAIGoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfig::getDialogflowQuerySource() const {
    return m_dialogflow_query_source;
}
void OAIGoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfig::setDialogflowQuerySource(const OAIGoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigDialogflowQuerySource &dialogflow_query_source) {
    m_dialogflow_query_source = dialogflow_query_source;
    m_dialogflow_query_source_isSet = true;
}

bool OAIGoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfig::is_dialogflow_query_source_Set() const{
    return m_dialogflow_query_source_isSet;
}

bool OAIGoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfig::is_dialogflow_query_source_Valid() const{
    return m_dialogflow_query_source_isValid;
}

OAIGoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigDocumentQuerySource OAIGoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfig::getDocumentQuerySource() const {
    return m_document_query_source;
}
void OAIGoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfig::setDocumentQuerySource(const OAIGoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigDocumentQuerySource &document_query_source) {
    m_document_query_source = document_query_source;
    m_document_query_source_isSet = true;
}

bool OAIGoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfig::is_document_query_source_Set() const{
    return m_document_query_source_isSet;
}

bool OAIGoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfig::is_document_query_source_Valid() const{
    return m_document_query_source_isValid;
}

OAIGoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigKnowledgeBaseQuerySource OAIGoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfig::getKnowledgeBaseQuerySource() const {
    return m_knowledge_base_query_source;
}
void OAIGoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfig::setKnowledgeBaseQuerySource(const OAIGoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigKnowledgeBaseQuerySource &knowledge_base_query_source) {
    m_knowledge_base_query_source = knowledge_base_query_source;
    m_knowledge_base_query_source_isSet = true;
}

bool OAIGoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfig::is_knowledge_base_query_source_Set() const{
    return m_knowledge_base_query_source_isSet;
}

bool OAIGoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfig::is_knowledge_base_query_source_Valid() const{
    return m_knowledge_base_query_source_isValid;
}

qint32 OAIGoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfig::getMaxResults() const {
    return m_max_results;
}
void OAIGoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfig::setMaxResults(const qint32 &max_results) {
    m_max_results = max_results;
    m_max_results_isSet = true;
}

bool OAIGoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfig::is_max_results_Set() const{
    return m_max_results_isSet;
}

bool OAIGoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfig::is_max_results_Valid() const{
    return m_max_results_isValid;
}

OAIGoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigSections OAIGoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfig::getSections() const {
    return m_sections;
}
void OAIGoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfig::setSections(const OAIGoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigSections &sections) {
    m_sections = sections;
    m_sections_isSet = true;
}

bool OAIGoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfig::is_sections_Set() const{
    return m_sections_isSet;
}

bool OAIGoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfig::is_sections_Valid() const{
    return m_sections_isValid;
}

bool OAIGoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_confidence_threshold_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_context_filter_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_dialogflow_query_source.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_document_query_source.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_knowledge_base_query_source.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_results_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sections.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
