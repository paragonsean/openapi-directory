/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowV2AnswerFeedback.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowV2AnswerFeedback::OAIGoogleCloudDialogflowV2AnswerFeedback(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowV2AnswerFeedback::OAIGoogleCloudDialogflowV2AnswerFeedback() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowV2AnswerFeedback::~OAIGoogleCloudDialogflowV2AnswerFeedback() {}

void OAIGoogleCloudDialogflowV2AnswerFeedback::initializeModel() {

    m_agent_assistant_detail_feedback_isSet = false;
    m_agent_assistant_detail_feedback_isValid = false;

    m_click_time_isSet = false;
    m_click_time_isValid = false;

    m_clicked_isSet = false;
    m_clicked_isValid = false;

    m_correctness_level_isSet = false;
    m_correctness_level_isValid = false;

    m_display_time_isSet = false;
    m_display_time_isValid = false;

    m_displayed_isSet = false;
    m_displayed_isValid = false;
}

void OAIGoogleCloudDialogflowV2AnswerFeedback::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowV2AnswerFeedback::fromJsonObject(QJsonObject json) {

    m_agent_assistant_detail_feedback_isValid = ::OpenAPI::fromJsonValue(m_agent_assistant_detail_feedback, json[QString("agentAssistantDetailFeedback")]);
    m_agent_assistant_detail_feedback_isSet = !json[QString("agentAssistantDetailFeedback")].isNull() && m_agent_assistant_detail_feedback_isValid;

    m_click_time_isValid = ::OpenAPI::fromJsonValue(m_click_time, json[QString("clickTime")]);
    m_click_time_isSet = !json[QString("clickTime")].isNull() && m_click_time_isValid;

    m_clicked_isValid = ::OpenAPI::fromJsonValue(m_clicked, json[QString("clicked")]);
    m_clicked_isSet = !json[QString("clicked")].isNull() && m_clicked_isValid;

    m_correctness_level_isValid = ::OpenAPI::fromJsonValue(m_correctness_level, json[QString("correctnessLevel")]);
    m_correctness_level_isSet = !json[QString("correctnessLevel")].isNull() && m_correctness_level_isValid;

    m_display_time_isValid = ::OpenAPI::fromJsonValue(m_display_time, json[QString("displayTime")]);
    m_display_time_isSet = !json[QString("displayTime")].isNull() && m_display_time_isValid;

    m_displayed_isValid = ::OpenAPI::fromJsonValue(m_displayed, json[QString("displayed")]);
    m_displayed_isSet = !json[QString("displayed")].isNull() && m_displayed_isValid;
}

QString OAIGoogleCloudDialogflowV2AnswerFeedback::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowV2AnswerFeedback::asJsonObject() const {
    QJsonObject obj;
    if (m_agent_assistant_detail_feedback.isSet()) {
        obj.insert(QString("agentAssistantDetailFeedback"), ::OpenAPI::toJsonValue(m_agent_assistant_detail_feedback));
    }
    if (m_click_time_isSet) {
        obj.insert(QString("clickTime"), ::OpenAPI::toJsonValue(m_click_time));
    }
    if (m_clicked_isSet) {
        obj.insert(QString("clicked"), ::OpenAPI::toJsonValue(m_clicked));
    }
    if (m_correctness_level_isSet) {
        obj.insert(QString("correctnessLevel"), ::OpenAPI::toJsonValue(m_correctness_level));
    }
    if (m_display_time_isSet) {
        obj.insert(QString("displayTime"), ::OpenAPI::toJsonValue(m_display_time));
    }
    if (m_displayed_isSet) {
        obj.insert(QString("displayed"), ::OpenAPI::toJsonValue(m_displayed));
    }
    return obj;
}

OAIGoogleCloudDialogflowV2AgentAssistantFeedback OAIGoogleCloudDialogflowV2AnswerFeedback::getAgentAssistantDetailFeedback() const {
    return m_agent_assistant_detail_feedback;
}
void OAIGoogleCloudDialogflowV2AnswerFeedback::setAgentAssistantDetailFeedback(const OAIGoogleCloudDialogflowV2AgentAssistantFeedback &agent_assistant_detail_feedback) {
    m_agent_assistant_detail_feedback = agent_assistant_detail_feedback;
    m_agent_assistant_detail_feedback_isSet = true;
}

bool OAIGoogleCloudDialogflowV2AnswerFeedback::is_agent_assistant_detail_feedback_Set() const{
    return m_agent_assistant_detail_feedback_isSet;
}

bool OAIGoogleCloudDialogflowV2AnswerFeedback::is_agent_assistant_detail_feedback_Valid() const{
    return m_agent_assistant_detail_feedback_isValid;
}

QString OAIGoogleCloudDialogflowV2AnswerFeedback::getClickTime() const {
    return m_click_time;
}
void OAIGoogleCloudDialogflowV2AnswerFeedback::setClickTime(const QString &click_time) {
    m_click_time = click_time;
    m_click_time_isSet = true;
}

bool OAIGoogleCloudDialogflowV2AnswerFeedback::is_click_time_Set() const{
    return m_click_time_isSet;
}

bool OAIGoogleCloudDialogflowV2AnswerFeedback::is_click_time_Valid() const{
    return m_click_time_isValid;
}

bool OAIGoogleCloudDialogflowV2AnswerFeedback::isClicked() const {
    return m_clicked;
}
void OAIGoogleCloudDialogflowV2AnswerFeedback::setClicked(const bool &clicked) {
    m_clicked = clicked;
    m_clicked_isSet = true;
}

bool OAIGoogleCloudDialogflowV2AnswerFeedback::is_clicked_Set() const{
    return m_clicked_isSet;
}

bool OAIGoogleCloudDialogflowV2AnswerFeedback::is_clicked_Valid() const{
    return m_clicked_isValid;
}

QString OAIGoogleCloudDialogflowV2AnswerFeedback::getCorrectnessLevel() const {
    return m_correctness_level;
}
void OAIGoogleCloudDialogflowV2AnswerFeedback::setCorrectnessLevel(const QString &correctness_level) {
    m_correctness_level = correctness_level;
    m_correctness_level_isSet = true;
}

bool OAIGoogleCloudDialogflowV2AnswerFeedback::is_correctness_level_Set() const{
    return m_correctness_level_isSet;
}

bool OAIGoogleCloudDialogflowV2AnswerFeedback::is_correctness_level_Valid() const{
    return m_correctness_level_isValid;
}

QString OAIGoogleCloudDialogflowV2AnswerFeedback::getDisplayTime() const {
    return m_display_time;
}
void OAIGoogleCloudDialogflowV2AnswerFeedback::setDisplayTime(const QString &display_time) {
    m_display_time = display_time;
    m_display_time_isSet = true;
}

bool OAIGoogleCloudDialogflowV2AnswerFeedback::is_display_time_Set() const{
    return m_display_time_isSet;
}

bool OAIGoogleCloudDialogflowV2AnswerFeedback::is_display_time_Valid() const{
    return m_display_time_isValid;
}

bool OAIGoogleCloudDialogflowV2AnswerFeedback::isDisplayed() const {
    return m_displayed;
}
void OAIGoogleCloudDialogflowV2AnswerFeedback::setDisplayed(const bool &displayed) {
    m_displayed = displayed;
    m_displayed_isSet = true;
}

bool OAIGoogleCloudDialogflowV2AnswerFeedback::is_displayed_Set() const{
    return m_displayed_isSet;
}

bool OAIGoogleCloudDialogflowV2AnswerFeedback::is_displayed_Valid() const{
    return m_displayed_isValid;
}

bool OAIGoogleCloudDialogflowV2AnswerFeedback::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_agent_assistant_detail_feedback.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_click_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_clicked_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_correctness_level_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_displayed_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowV2AnswerFeedback::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
