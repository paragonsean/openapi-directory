/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowV2ExportDocumentRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowV2ExportDocumentRequest::OAIGoogleCloudDialogflowV2ExportDocumentRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowV2ExportDocumentRequest::OAIGoogleCloudDialogflowV2ExportDocumentRequest() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowV2ExportDocumentRequest::~OAIGoogleCloudDialogflowV2ExportDocumentRequest() {}

void OAIGoogleCloudDialogflowV2ExportDocumentRequest::initializeModel() {

    m_export_full_content_isSet = false;
    m_export_full_content_isValid = false;

    m_gcs_destination_isSet = false;
    m_gcs_destination_isValid = false;

    m_smart_messaging_partial_update_isSet = false;
    m_smart_messaging_partial_update_isValid = false;
}

void OAIGoogleCloudDialogflowV2ExportDocumentRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowV2ExportDocumentRequest::fromJsonObject(QJsonObject json) {

    m_export_full_content_isValid = ::OpenAPI::fromJsonValue(m_export_full_content, json[QString("exportFullContent")]);
    m_export_full_content_isSet = !json[QString("exportFullContent")].isNull() && m_export_full_content_isValid;

    m_gcs_destination_isValid = ::OpenAPI::fromJsonValue(m_gcs_destination, json[QString("gcsDestination")]);
    m_gcs_destination_isSet = !json[QString("gcsDestination")].isNull() && m_gcs_destination_isValid;

    m_smart_messaging_partial_update_isValid = ::OpenAPI::fromJsonValue(m_smart_messaging_partial_update, json[QString("smartMessagingPartialUpdate")]);
    m_smart_messaging_partial_update_isSet = !json[QString("smartMessagingPartialUpdate")].isNull() && m_smart_messaging_partial_update_isValid;
}

QString OAIGoogleCloudDialogflowV2ExportDocumentRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowV2ExportDocumentRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_export_full_content_isSet) {
        obj.insert(QString("exportFullContent"), ::OpenAPI::toJsonValue(m_export_full_content));
    }
    if (m_gcs_destination.isSet()) {
        obj.insert(QString("gcsDestination"), ::OpenAPI::toJsonValue(m_gcs_destination));
    }
    if (m_smart_messaging_partial_update_isSet) {
        obj.insert(QString("smartMessagingPartialUpdate"), ::OpenAPI::toJsonValue(m_smart_messaging_partial_update));
    }
    return obj;
}

bool OAIGoogleCloudDialogflowV2ExportDocumentRequest::isExportFullContent() const {
    return m_export_full_content;
}
void OAIGoogleCloudDialogflowV2ExportDocumentRequest::setExportFullContent(const bool &export_full_content) {
    m_export_full_content = export_full_content;
    m_export_full_content_isSet = true;
}

bool OAIGoogleCloudDialogflowV2ExportDocumentRequest::is_export_full_content_Set() const{
    return m_export_full_content_isSet;
}

bool OAIGoogleCloudDialogflowV2ExportDocumentRequest::is_export_full_content_Valid() const{
    return m_export_full_content_isValid;
}

OAIGoogleCloudDialogflowV2GcsDestination OAIGoogleCloudDialogflowV2ExportDocumentRequest::getGcsDestination() const {
    return m_gcs_destination;
}
void OAIGoogleCloudDialogflowV2ExportDocumentRequest::setGcsDestination(const OAIGoogleCloudDialogflowV2GcsDestination &gcs_destination) {
    m_gcs_destination = gcs_destination;
    m_gcs_destination_isSet = true;
}

bool OAIGoogleCloudDialogflowV2ExportDocumentRequest::is_gcs_destination_Set() const{
    return m_gcs_destination_isSet;
}

bool OAIGoogleCloudDialogflowV2ExportDocumentRequest::is_gcs_destination_Valid() const{
    return m_gcs_destination_isValid;
}

bool OAIGoogleCloudDialogflowV2ExportDocumentRequest::isSmartMessagingPartialUpdate() const {
    return m_smart_messaging_partial_update;
}
void OAIGoogleCloudDialogflowV2ExportDocumentRequest::setSmartMessagingPartialUpdate(const bool &smart_messaging_partial_update) {
    m_smart_messaging_partial_update = smart_messaging_partial_update;
    m_smart_messaging_partial_update_isSet = true;
}

bool OAIGoogleCloudDialogflowV2ExportDocumentRequest::is_smart_messaging_partial_update_Set() const{
    return m_smart_messaging_partial_update_isSet;
}

bool OAIGoogleCloudDialogflowV2ExportDocumentRequest::is_smart_messaging_partial_update_Valid() const{
    return m_smart_messaging_partial_update_isValid;
}

bool OAIGoogleCloudDialogflowV2ExportDocumentRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_export_full_content_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gcs_destination.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_smart_messaging_partial_update_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowV2ExportDocumentRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
