/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowV2AutomatedAgentReply.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowV2AutomatedAgentReply::OAIGoogleCloudDialogflowV2AutomatedAgentReply(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowV2AutomatedAgentReply::OAIGoogleCloudDialogflowV2AutomatedAgentReply() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowV2AutomatedAgentReply::~OAIGoogleCloudDialogflowV2AutomatedAgentReply() {}

void OAIGoogleCloudDialogflowV2AutomatedAgentReply::initializeModel() {

    m_allow_cancellation_isSet = false;
    m_allow_cancellation_isValid = false;

    m_automated_agent_reply_type_isSet = false;
    m_automated_agent_reply_type_isValid = false;

    m_cx_current_page_isSet = false;
    m_cx_current_page_isValid = false;

    m_detect_intent_response_isSet = false;
    m_detect_intent_response_isValid = false;
}

void OAIGoogleCloudDialogflowV2AutomatedAgentReply::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowV2AutomatedAgentReply::fromJsonObject(QJsonObject json) {

    m_allow_cancellation_isValid = ::OpenAPI::fromJsonValue(m_allow_cancellation, json[QString("allowCancellation")]);
    m_allow_cancellation_isSet = !json[QString("allowCancellation")].isNull() && m_allow_cancellation_isValid;

    m_automated_agent_reply_type_isValid = ::OpenAPI::fromJsonValue(m_automated_agent_reply_type, json[QString("automatedAgentReplyType")]);
    m_automated_agent_reply_type_isSet = !json[QString("automatedAgentReplyType")].isNull() && m_automated_agent_reply_type_isValid;

    m_cx_current_page_isValid = ::OpenAPI::fromJsonValue(m_cx_current_page, json[QString("cxCurrentPage")]);
    m_cx_current_page_isSet = !json[QString("cxCurrentPage")].isNull() && m_cx_current_page_isValid;

    m_detect_intent_response_isValid = ::OpenAPI::fromJsonValue(m_detect_intent_response, json[QString("detectIntentResponse")]);
    m_detect_intent_response_isSet = !json[QString("detectIntentResponse")].isNull() && m_detect_intent_response_isValid;
}

QString OAIGoogleCloudDialogflowV2AutomatedAgentReply::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowV2AutomatedAgentReply::asJsonObject() const {
    QJsonObject obj;
    if (m_allow_cancellation_isSet) {
        obj.insert(QString("allowCancellation"), ::OpenAPI::toJsonValue(m_allow_cancellation));
    }
    if (m_automated_agent_reply_type_isSet) {
        obj.insert(QString("automatedAgentReplyType"), ::OpenAPI::toJsonValue(m_automated_agent_reply_type));
    }
    if (m_cx_current_page_isSet) {
        obj.insert(QString("cxCurrentPage"), ::OpenAPI::toJsonValue(m_cx_current_page));
    }
    if (m_detect_intent_response.isSet()) {
        obj.insert(QString("detectIntentResponse"), ::OpenAPI::toJsonValue(m_detect_intent_response));
    }
    return obj;
}

bool OAIGoogleCloudDialogflowV2AutomatedAgentReply::isAllowCancellation() const {
    return m_allow_cancellation;
}
void OAIGoogleCloudDialogflowV2AutomatedAgentReply::setAllowCancellation(const bool &allow_cancellation) {
    m_allow_cancellation = allow_cancellation;
    m_allow_cancellation_isSet = true;
}

bool OAIGoogleCloudDialogflowV2AutomatedAgentReply::is_allow_cancellation_Set() const{
    return m_allow_cancellation_isSet;
}

bool OAIGoogleCloudDialogflowV2AutomatedAgentReply::is_allow_cancellation_Valid() const{
    return m_allow_cancellation_isValid;
}

QString OAIGoogleCloudDialogflowV2AutomatedAgentReply::getAutomatedAgentReplyType() const {
    return m_automated_agent_reply_type;
}
void OAIGoogleCloudDialogflowV2AutomatedAgentReply::setAutomatedAgentReplyType(const QString &automated_agent_reply_type) {
    m_automated_agent_reply_type = automated_agent_reply_type;
    m_automated_agent_reply_type_isSet = true;
}

bool OAIGoogleCloudDialogflowV2AutomatedAgentReply::is_automated_agent_reply_type_Set() const{
    return m_automated_agent_reply_type_isSet;
}

bool OAIGoogleCloudDialogflowV2AutomatedAgentReply::is_automated_agent_reply_type_Valid() const{
    return m_automated_agent_reply_type_isValid;
}

QString OAIGoogleCloudDialogflowV2AutomatedAgentReply::getCxCurrentPage() const {
    return m_cx_current_page;
}
void OAIGoogleCloudDialogflowV2AutomatedAgentReply::setCxCurrentPage(const QString &cx_current_page) {
    m_cx_current_page = cx_current_page;
    m_cx_current_page_isSet = true;
}

bool OAIGoogleCloudDialogflowV2AutomatedAgentReply::is_cx_current_page_Set() const{
    return m_cx_current_page_isSet;
}

bool OAIGoogleCloudDialogflowV2AutomatedAgentReply::is_cx_current_page_Valid() const{
    return m_cx_current_page_isValid;
}

OAIGoogleCloudDialogflowV2DetectIntentResponse OAIGoogleCloudDialogflowV2AutomatedAgentReply::getDetectIntentResponse() const {
    return m_detect_intent_response;
}
void OAIGoogleCloudDialogflowV2AutomatedAgentReply::setDetectIntentResponse(const OAIGoogleCloudDialogflowV2DetectIntentResponse &detect_intent_response) {
    m_detect_intent_response = detect_intent_response;
    m_detect_intent_response_isSet = true;
}

bool OAIGoogleCloudDialogflowV2AutomatedAgentReply::is_detect_intent_response_Set() const{
    return m_detect_intent_response_isSet;
}

bool OAIGoogleCloudDialogflowV2AutomatedAgentReply::is_detect_intent_response_Valid() const{
    return m_detect_intent_response_isValid;
}

bool OAIGoogleCloudDialogflowV2AutomatedAgentReply::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_allow_cancellation_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_automated_agent_reply_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cx_current_page_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_detect_intent_response.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowV2AutomatedAgentReply::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
