/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudDialogflowV2EvaluationConfig from './GoogleCloudDialogflowV2EvaluationConfig';
import GoogleCloudDialogflowV2SmartReplyMetrics from './GoogleCloudDialogflowV2SmartReplyMetrics';

/**
 * The GoogleCloudDialogflowV2ConversationModelEvaluation model module.
 * @module model/GoogleCloudDialogflowV2ConversationModelEvaluation
 * @version v2
 */
class GoogleCloudDialogflowV2ConversationModelEvaluation {
    /**
     * Constructs a new <code>GoogleCloudDialogflowV2ConversationModelEvaluation</code>.
     * Represents evaluation result of a conversation model.
     * @alias module:model/GoogleCloudDialogflowV2ConversationModelEvaluation
     */
    constructor() { 
        
        GoogleCloudDialogflowV2ConversationModelEvaluation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDialogflowV2ConversationModelEvaluation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDialogflowV2ConversationModelEvaluation} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDialogflowV2ConversationModelEvaluation} The populated <code>GoogleCloudDialogflowV2ConversationModelEvaluation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDialogflowV2ConversationModelEvaluation();

            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('evaluationConfig')) {
                obj['evaluationConfig'] = GoogleCloudDialogflowV2EvaluationConfig.constructFromObject(data['evaluationConfig']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('rawHumanEvalTemplateCsv')) {
                obj['rawHumanEvalTemplateCsv'] = ApiClient.convertToType(data['rawHumanEvalTemplateCsv'], 'String');
            }
            if (data.hasOwnProperty('smartReplyMetrics')) {
                obj['smartReplyMetrics'] = GoogleCloudDialogflowV2SmartReplyMetrics.constructFromObject(data['smartReplyMetrics']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDialogflowV2ConversationModelEvaluation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDialogflowV2ConversationModelEvaluation</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // validate the optional field `evaluationConfig`
        if (data['evaluationConfig']) { // data not null
          GoogleCloudDialogflowV2EvaluationConfig.validateJSON(data['evaluationConfig']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['rawHumanEvalTemplateCsv'] && !(typeof data['rawHumanEvalTemplateCsv'] === 'string' || data['rawHumanEvalTemplateCsv'] instanceof String)) {
            throw new Error("Expected the field `rawHumanEvalTemplateCsv` to be a primitive type in the JSON string but got " + data['rawHumanEvalTemplateCsv']);
        }
        // validate the optional field `smartReplyMetrics`
        if (data['smartReplyMetrics']) { // data not null
          GoogleCloudDialogflowV2SmartReplyMetrics.validateJSON(data['smartReplyMetrics']);
        }

        return true;
    }


}



/**
 * Output only. Creation time of this model.
 * @member {String} createTime
 */
GoogleCloudDialogflowV2ConversationModelEvaluation.prototype['createTime'] = undefined;

/**
 * Optional. The display name of the model evaluation. At most 64 bytes long.
 * @member {String} displayName
 */
GoogleCloudDialogflowV2ConversationModelEvaluation.prototype['displayName'] = undefined;

/**
 * @member {module:model/GoogleCloudDialogflowV2EvaluationConfig} evaluationConfig
 */
GoogleCloudDialogflowV2ConversationModelEvaluation.prototype['evaluationConfig'] = undefined;

/**
 * The resource name of the evaluation. Format: `projects//conversationModels//evaluations/`
 * @member {String} name
 */
GoogleCloudDialogflowV2ConversationModelEvaluation.prototype['name'] = undefined;

/**
 * Output only. Human eval template in csv format. It tooks real-world conversations provided through input dataset, generates example suggestions for customer to verify quality of the model. For Smart Reply, the generated csv file contains columns of Context, (Suggestions,Q1,Q2)*3, Actual reply. Context contains at most 10 latest messages in the conversation prior to the current suggestion. Q1: \"Would you send it as the next message of agent?\" Evaluated based on whether the suggest is appropriate to be sent by agent in current context. Q2: \"Does the suggestion move the conversation closer to resolution?\" Evaluated based on whether the suggestion provide solutions, or answers customer's question or collect information from customer to resolve the customer's issue. Actual reply column contains the actual agent reply sent in the context.
 * @member {String} rawHumanEvalTemplateCsv
 */
GoogleCloudDialogflowV2ConversationModelEvaluation.prototype['rawHumanEvalTemplateCsv'] = undefined;

/**
 * @member {module:model/GoogleCloudDialogflowV2SmartReplyMetrics} smartReplyMetrics
 */
GoogleCloudDialogflowV2ConversationModelEvaluation.prototype['smartReplyMetrics'] = undefined;






export default GoogleCloudDialogflowV2ConversationModelEvaluation;

