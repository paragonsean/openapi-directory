/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudDialogflowCxV3QueryInput from './GoogleCloudDialogflowCxV3QueryInput';

/**
 * The GoogleCloudDialogflowCxV3ConversationTurnUserInput model module.
 * @module model/GoogleCloudDialogflowCxV3ConversationTurnUserInput
 * @version v2
 */
class GoogleCloudDialogflowCxV3ConversationTurnUserInput {
    /**
     * Constructs a new <code>GoogleCloudDialogflowCxV3ConversationTurnUserInput</code>.
     * The input from the human user.
     * @alias module:model/GoogleCloudDialogflowCxV3ConversationTurnUserInput
     */
    constructor() { 
        
        GoogleCloudDialogflowCxV3ConversationTurnUserInput.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDialogflowCxV3ConversationTurnUserInput</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDialogflowCxV3ConversationTurnUserInput} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDialogflowCxV3ConversationTurnUserInput} The populated <code>GoogleCloudDialogflowCxV3ConversationTurnUserInput</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDialogflowCxV3ConversationTurnUserInput();

            if (data.hasOwnProperty('enableSentimentAnalysis')) {
                obj['enableSentimentAnalysis'] = ApiClient.convertToType(data['enableSentimentAnalysis'], 'Boolean');
            }
            if (data.hasOwnProperty('injectedParameters')) {
                obj['injectedParameters'] = ApiClient.convertToType(data['injectedParameters'], {'String': Object});
            }
            if (data.hasOwnProperty('input')) {
                obj['input'] = GoogleCloudDialogflowCxV3QueryInput.constructFromObject(data['input']);
            }
            if (data.hasOwnProperty('isWebhookEnabled')) {
                obj['isWebhookEnabled'] = ApiClient.convertToType(data['isWebhookEnabled'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDialogflowCxV3ConversationTurnUserInput</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDialogflowCxV3ConversationTurnUserInput</code>.
     */
    static validateJSON(data) {
        // validate the optional field `input`
        if (data['input']) { // data not null
          GoogleCloudDialogflowCxV3QueryInput.validateJSON(data['input']);
        }

        return true;
    }


}



/**
 * Whether sentiment analysis is enabled.
 * @member {Boolean} enableSentimentAnalysis
 */
GoogleCloudDialogflowCxV3ConversationTurnUserInput.prototype['enableSentimentAnalysis'] = undefined;

/**
 * Parameters that need to be injected into the conversation during intent detection.
 * @member {Object.<String, Object>} injectedParameters
 */
GoogleCloudDialogflowCxV3ConversationTurnUserInput.prototype['injectedParameters'] = undefined;

/**
 * @member {module:model/GoogleCloudDialogflowCxV3QueryInput} input
 */
GoogleCloudDialogflowCxV3ConversationTurnUserInput.prototype['input'] = undefined;

/**
 * If webhooks should be allowed to trigger in response to the user utterance. Often if parameters are injected, webhooks should not be enabled.
 * @member {Boolean} isWebhookEnabled
 */
GoogleCloudDialogflowCxV3ConversationTurnUserInput.prototype['isWebhookEnabled'] = undefined;






export default GoogleCloudDialogflowCxV3ConversationTurnUserInput;

