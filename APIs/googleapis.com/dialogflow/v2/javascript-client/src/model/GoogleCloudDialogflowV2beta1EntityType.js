/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudDialogflowV2beta1EntityTypeEntity from './GoogleCloudDialogflowV2beta1EntityTypeEntity';

/**
 * The GoogleCloudDialogflowV2beta1EntityType model module.
 * @module model/GoogleCloudDialogflowV2beta1EntityType
 * @version v2
 */
class GoogleCloudDialogflowV2beta1EntityType {
    /**
     * Constructs a new <code>GoogleCloudDialogflowV2beta1EntityType</code>.
     * Each intent parameter has a type, called the entity type, which dictates exactly how data from an end-user expression is extracted. Dialogflow provides predefined system entities that can match many common types of data. For example, there are system entities for matching dates, times, colors, email addresses, and so on. You can also create your own custom entities for matching custom data. For example, you could define a vegetable entity that can match the types of vegetables available for purchase with a grocery store agent. For more information, see the [Entity guide](https://cloud.google.com/dialogflow/docs/entities-overview).
     * @alias module:model/GoogleCloudDialogflowV2beta1EntityType
     */
    constructor() { 
        
        GoogleCloudDialogflowV2beta1EntityType.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDialogflowV2beta1EntityType</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDialogflowV2beta1EntityType} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDialogflowV2beta1EntityType} The populated <code>GoogleCloudDialogflowV2beta1EntityType</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDialogflowV2beta1EntityType();

            if (data.hasOwnProperty('autoExpansionMode')) {
                obj['autoExpansionMode'] = ApiClient.convertToType(data['autoExpansionMode'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('enableFuzzyExtraction')) {
                obj['enableFuzzyExtraction'] = ApiClient.convertToType(data['enableFuzzyExtraction'], 'Boolean');
            }
            if (data.hasOwnProperty('entities')) {
                obj['entities'] = ApiClient.convertToType(data['entities'], [GoogleCloudDialogflowV2beta1EntityTypeEntity]);
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDialogflowV2beta1EntityType</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDialogflowV2beta1EntityType</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['autoExpansionMode'] && !(typeof data['autoExpansionMode'] === 'string' || data['autoExpansionMode'] instanceof String)) {
            throw new Error("Expected the field `autoExpansionMode` to be a primitive type in the JSON string but got " + data['autoExpansionMode']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        if (data['entities']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['entities'])) {
                throw new Error("Expected the field `entities` to be an array in the JSON data but got " + data['entities']);
            }
            // validate the optional field `entities` (array)
            for (const item of data['entities']) {
                GoogleCloudDialogflowV2beta1EntityTypeEntity.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}



/**
 * Optional. Indicates whether the entity type can be automatically expanded.
 * @member {module:model/GoogleCloudDialogflowV2beta1EntityType.AutoExpansionModeEnum} autoExpansionMode
 */
GoogleCloudDialogflowV2beta1EntityType.prototype['autoExpansionMode'] = undefined;

/**
 * Required. The name of the entity type.
 * @member {String} displayName
 */
GoogleCloudDialogflowV2beta1EntityType.prototype['displayName'] = undefined;

/**
 * Optional. Enables fuzzy entity extraction during classification.
 * @member {Boolean} enableFuzzyExtraction
 */
GoogleCloudDialogflowV2beta1EntityType.prototype['enableFuzzyExtraction'] = undefined;

/**
 * Optional. The collection of entity entries associated with the entity type.
 * @member {Array.<module:model/GoogleCloudDialogflowV2beta1EntityTypeEntity>} entities
 */
GoogleCloudDialogflowV2beta1EntityType.prototype['entities'] = undefined;

/**
 * Required. Indicates the kind of entity type.
 * @member {module:model/GoogleCloudDialogflowV2beta1EntityType.KindEnum} kind
 */
GoogleCloudDialogflowV2beta1EntityType.prototype['kind'] = undefined;

/**
 * The unique identifier of the entity type. Required for EntityTypes.UpdateEntityType and EntityTypes.BatchUpdateEntityTypes methods. Supported formats: - `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/`
 * @member {String} name
 */
GoogleCloudDialogflowV2beta1EntityType.prototype['name'] = undefined;





/**
 * Allowed values for the <code>autoExpansionMode</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudDialogflowV2beta1EntityType['AutoExpansionModeEnum'] = {

    /**
     * value: "AUTO_EXPANSION_MODE_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "AUTO_EXPANSION_MODE_UNSPECIFIED",

    /**
     * value: "AUTO_EXPANSION_MODE_DEFAULT"
     * @const
     */
    "DEFAULT": "AUTO_EXPANSION_MODE_DEFAULT"
};


/**
 * Allowed values for the <code>kind</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudDialogflowV2beta1EntityType['KindEnum'] = {

    /**
     * value: "KIND_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "KIND_UNSPECIFIED",

    /**
     * value: "KIND_MAP"
     * @const
     */
    "MAP": "KIND_MAP",

    /**
     * value: "KIND_LIST"
     * @const
     */
    "LIST": "KIND_LIST",

    /**
     * value: "KIND_REGEXP"
     * @const
     */
    "REGEXP": "KIND_REGEXP"
};



export default GoogleCloudDialogflowV2beta1EntityType;

