/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudDialogflowV2FulfillmentFeature from './GoogleCloudDialogflowV2FulfillmentFeature';
import GoogleCloudDialogflowV2FulfillmentGenericWebService from './GoogleCloudDialogflowV2FulfillmentGenericWebService';

/**
 * The GoogleCloudDialogflowV2Fulfillment model module.
 * @module model/GoogleCloudDialogflowV2Fulfillment
 * @version v2
 */
class GoogleCloudDialogflowV2Fulfillment {
    /**
     * Constructs a new <code>GoogleCloudDialogflowV2Fulfillment</code>.
     * By default, your agent responds to a matched intent with a static response. As an alternative, you can provide a more dynamic response by using fulfillment. When you enable fulfillment for an intent, Dialogflow responds to that intent by calling a service that you define. For example, if an end-user wants to schedule a haircut on Friday, your service can check your database and respond to the end-user with availability information for Friday. For more information, see the [fulfillment guide](https://cloud.google.com/dialogflow/docs/fulfillment-overview).
     * @alias module:model/GoogleCloudDialogflowV2Fulfillment
     */
    constructor() { 
        
        GoogleCloudDialogflowV2Fulfillment.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDialogflowV2Fulfillment</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDialogflowV2Fulfillment} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDialogflowV2Fulfillment} The populated <code>GoogleCloudDialogflowV2Fulfillment</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDialogflowV2Fulfillment();

            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('enabled')) {
                obj['enabled'] = ApiClient.convertToType(data['enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('features')) {
                obj['features'] = ApiClient.convertToType(data['features'], [GoogleCloudDialogflowV2FulfillmentFeature]);
            }
            if (data.hasOwnProperty('genericWebService')) {
                obj['genericWebService'] = GoogleCloudDialogflowV2FulfillmentGenericWebService.constructFromObject(data['genericWebService']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDialogflowV2Fulfillment</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDialogflowV2Fulfillment</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        if (data['features']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['features'])) {
                throw new Error("Expected the field `features` to be an array in the JSON data but got " + data['features']);
            }
            // validate the optional field `features` (array)
            for (const item of data['features']) {
                GoogleCloudDialogflowV2FulfillmentFeature.validateJSON(item);
            };
        }
        // validate the optional field `genericWebService`
        if (data['genericWebService']) { // data not null
          GoogleCloudDialogflowV2FulfillmentGenericWebService.validateJSON(data['genericWebService']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}



/**
 * Optional. The human-readable name of the fulfillment, unique within the agent. This field is not used for Fulfillment in an Environment.
 * @member {String} displayName
 */
GoogleCloudDialogflowV2Fulfillment.prototype['displayName'] = undefined;

/**
 * Optional. Whether fulfillment is enabled.
 * @member {Boolean} enabled
 */
GoogleCloudDialogflowV2Fulfillment.prototype['enabled'] = undefined;

/**
 * Optional. The field defines whether the fulfillment is enabled for certain features.
 * @member {Array.<module:model/GoogleCloudDialogflowV2FulfillmentFeature>} features
 */
GoogleCloudDialogflowV2Fulfillment.prototype['features'] = undefined;

/**
 * @member {module:model/GoogleCloudDialogflowV2FulfillmentGenericWebService} genericWebService
 */
GoogleCloudDialogflowV2Fulfillment.prototype['genericWebService'] = undefined;

/**
 * Required. The unique identifier of the fulfillment. Supported formats: - `projects//agent/fulfillment` - `projects//locations//agent/fulfillment` This field is not used for Fulfillment in an Environment.
 * @member {String} name
 */
GoogleCloudDialogflowV2Fulfillment.prototype['name'] = undefined;






export default GoogleCloudDialogflowV2Fulfillment;

