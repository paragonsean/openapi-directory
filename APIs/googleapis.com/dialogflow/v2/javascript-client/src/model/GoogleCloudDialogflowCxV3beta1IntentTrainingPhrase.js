/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudDialogflowCxV3beta1IntentTrainingPhrasePart from './GoogleCloudDialogflowCxV3beta1IntentTrainingPhrasePart';

/**
 * The GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase model module.
 * @module model/GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase
 * @version v2
 */
class GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase {
    /**
     * Constructs a new <code>GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase</code>.
     * Represents an example that the agent is trained on to identify the intent.
     * @alias module:model/GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase
     */
    constructor() { 
        
        GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase} The populated <code>GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('parts')) {
                obj['parts'] = ApiClient.convertToType(data['parts'], [GoogleCloudDialogflowCxV3beta1IntentTrainingPhrasePart]);
            }
            if (data.hasOwnProperty('repeatCount')) {
                obj['repeatCount'] = ApiClient.convertToType(data['repeatCount'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        if (data['parts']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['parts'])) {
                throw new Error("Expected the field `parts` to be an array in the JSON data but got " + data['parts']);
            }
            // validate the optional field `parts` (array)
            for (const item of data['parts']) {
                GoogleCloudDialogflowCxV3beta1IntentTrainingPhrasePart.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Output only. The unique identifier of the training phrase.
 * @member {String} id
 */
GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase.prototype['id'] = undefined;

/**
 * Required. The ordered list of training phrase parts. The parts are concatenated in order to form the training phrase. Note: The API does not automatically annotate training phrases like the Dialogflow Console does. Note: Do not forget to include whitespace at part boundaries, so the training phrase is well formatted when the parts are concatenated. If the training phrase does not need to be annotated with parameters, you just need a single part with only the Part.text field set. If you want to annotate the training phrase, you must create multiple parts, where the fields of each part are populated in one of two ways: - `Part.text` is set to a part of the phrase that has no parameters. - `Part.text` is set to a part of the phrase that you want to annotate, and the `parameter_id` field is set.
 * @member {Array.<module:model/GoogleCloudDialogflowCxV3beta1IntentTrainingPhrasePart>} parts
 */
GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase.prototype['parts'] = undefined;

/**
 * Indicates how many times this example was added to the intent.
 * @member {Number} repeatCount
 */
GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase.prototype['repeatCount'] = undefined;






export default GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase;

