/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudDialogflowV2NotificationConfig model module.
 * @module model/GoogleCloudDialogflowV2NotificationConfig
 * @version v2
 */
class GoogleCloudDialogflowV2NotificationConfig {
    /**
     * Constructs a new <code>GoogleCloudDialogflowV2NotificationConfig</code>.
     * Defines notification behavior.
     * @alias module:model/GoogleCloudDialogflowV2NotificationConfig
     */
    constructor() { 
        
        GoogleCloudDialogflowV2NotificationConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDialogflowV2NotificationConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDialogflowV2NotificationConfig} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDialogflowV2NotificationConfig} The populated <code>GoogleCloudDialogflowV2NotificationConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDialogflowV2NotificationConfig();

            if (data.hasOwnProperty('messageFormat')) {
                obj['messageFormat'] = ApiClient.convertToType(data['messageFormat'], 'String');
            }
            if (data.hasOwnProperty('topic')) {
                obj['topic'] = ApiClient.convertToType(data['topic'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDialogflowV2NotificationConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDialogflowV2NotificationConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['messageFormat'] && !(typeof data['messageFormat'] === 'string' || data['messageFormat'] instanceof String)) {
            throw new Error("Expected the field `messageFormat` to be a primitive type in the JSON string but got " + data['messageFormat']);
        }
        // ensure the json data is a string
        if (data['topic'] && !(typeof data['topic'] === 'string' || data['topic'] instanceof String)) {
            throw new Error("Expected the field `topic` to be a primitive type in the JSON string but got " + data['topic']);
        }

        return true;
    }


}



/**
 * Format of message.
 * @member {module:model/GoogleCloudDialogflowV2NotificationConfig.MessageFormatEnum} messageFormat
 */
GoogleCloudDialogflowV2NotificationConfig.prototype['messageFormat'] = undefined;

/**
 * Name of the Pub/Sub topic to publish conversation events like CONVERSATION_STARTED as serialized ConversationEvent protos. For telephony integration to receive notification, make sure either this topic is in the same project as the conversation or you grant `service-@gcp-sa-dialogflow.iam.gserviceaccount.com` the `Dialogflow Service Agent` role in the topic project. For chat integration to receive notification, make sure API caller has been granted the `Dialogflow Service Agent` role for the topic. Format: `projects//locations//topics/`.
 * @member {String} topic
 */
GoogleCloudDialogflowV2NotificationConfig.prototype['topic'] = undefined;





/**
 * Allowed values for the <code>messageFormat</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudDialogflowV2NotificationConfig['MessageFormatEnum'] = {

    /**
     * value: "MESSAGE_FORMAT_UNSPECIFIED"
     * @const
     */
    "MESSAGE_FORMAT_UNSPECIFIED": "MESSAGE_FORMAT_UNSPECIFIED",

    /**
     * value: "PROTO"
     * @const
     */
    "PROTO": "PROTO",

    /**
     * value: "JSON"
     * @const
     */
    "JSON": "JSON"
};



export default GoogleCloudDialogflowV2NotificationConfig;

