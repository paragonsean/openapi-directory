/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import GoogleCloudDialogflowV2Agent from '../model/GoogleCloudDialogflowV2Agent';
import GoogleCloudDialogflowV2AnalyzeContentRequest from '../model/GoogleCloudDialogflowV2AnalyzeContentRequest';
import GoogleCloudDialogflowV2AnalyzeContentResponse from '../model/GoogleCloudDialogflowV2AnalyzeContentResponse';
import GoogleCloudDialogflowV2BatchCreateEntitiesRequest from '../model/GoogleCloudDialogflowV2BatchCreateEntitiesRequest';
import GoogleCloudDialogflowV2BatchDeleteEntitiesRequest from '../model/GoogleCloudDialogflowV2BatchDeleteEntitiesRequest';
import GoogleCloudDialogflowV2BatchDeleteEntityTypesRequest from '../model/GoogleCloudDialogflowV2BatchDeleteEntityTypesRequest';
import GoogleCloudDialogflowV2BatchDeleteIntentsRequest from '../model/GoogleCloudDialogflowV2BatchDeleteIntentsRequest';
import GoogleCloudDialogflowV2BatchUpdateEntitiesRequest from '../model/GoogleCloudDialogflowV2BatchUpdateEntitiesRequest';
import GoogleCloudDialogflowV2BatchUpdateEntityTypesRequest from '../model/GoogleCloudDialogflowV2BatchUpdateEntityTypesRequest';
import GoogleCloudDialogflowV2BatchUpdateIntentsRequest from '../model/GoogleCloudDialogflowV2BatchUpdateIntentsRequest';
import GoogleCloudDialogflowV2ClearSuggestionFeatureConfigRequest from '../model/GoogleCloudDialogflowV2ClearSuggestionFeatureConfigRequest';
import GoogleCloudDialogflowV2Context from '../model/GoogleCloudDialogflowV2Context';
import GoogleCloudDialogflowV2Conversation from '../model/GoogleCloudDialogflowV2Conversation';
import GoogleCloudDialogflowV2ConversationDataset from '../model/GoogleCloudDialogflowV2ConversationDataset';
import GoogleCloudDialogflowV2ConversationModel from '../model/GoogleCloudDialogflowV2ConversationModel';
import GoogleCloudDialogflowV2ConversationProfile from '../model/GoogleCloudDialogflowV2ConversationProfile';
import GoogleCloudDialogflowV2CreateConversationModelEvaluationRequest from '../model/GoogleCloudDialogflowV2CreateConversationModelEvaluationRequest';
import GoogleCloudDialogflowV2DetectIntentRequest from '../model/GoogleCloudDialogflowV2DetectIntentRequest';
import GoogleCloudDialogflowV2DetectIntentResponse from '../model/GoogleCloudDialogflowV2DetectIntentResponse';
import GoogleCloudDialogflowV2Document from '../model/GoogleCloudDialogflowV2Document';
import GoogleCloudDialogflowV2Environment from '../model/GoogleCloudDialogflowV2Environment';
import GoogleCloudDialogflowV2EnvironmentHistory from '../model/GoogleCloudDialogflowV2EnvironmentHistory';
import GoogleCloudDialogflowV2ExportAgentRequest from '../model/GoogleCloudDialogflowV2ExportAgentRequest';
import GoogleCloudDialogflowV2ExportDocumentRequest from '../model/GoogleCloudDialogflowV2ExportDocumentRequest';
import GoogleCloudDialogflowV2GenerateStatelessSummaryRequest from '../model/GoogleCloudDialogflowV2GenerateStatelessSummaryRequest';
import GoogleCloudDialogflowV2GenerateStatelessSummaryResponse from '../model/GoogleCloudDialogflowV2GenerateStatelessSummaryResponse';
import GoogleCloudDialogflowV2ImportAgentRequest from '../model/GoogleCloudDialogflowV2ImportAgentRequest';
import GoogleCloudDialogflowV2ImportConversationDataRequest from '../model/GoogleCloudDialogflowV2ImportConversationDataRequest';
import GoogleCloudDialogflowV2ImportDocumentsRequest from '../model/GoogleCloudDialogflowV2ImportDocumentsRequest';
import GoogleCloudDialogflowV2Intent from '../model/GoogleCloudDialogflowV2Intent';
import GoogleCloudDialogflowV2KnowledgeBase from '../model/GoogleCloudDialogflowV2KnowledgeBase';
import GoogleCloudDialogflowV2ListAnswerRecordsResponse from '../model/GoogleCloudDialogflowV2ListAnswerRecordsResponse';
import GoogleCloudDialogflowV2ListContextsResponse from '../model/GoogleCloudDialogflowV2ListContextsResponse';
import GoogleCloudDialogflowV2ListConversationDatasetsResponse from '../model/GoogleCloudDialogflowV2ListConversationDatasetsResponse';
import GoogleCloudDialogflowV2ListConversationModelEvaluationsResponse from '../model/GoogleCloudDialogflowV2ListConversationModelEvaluationsResponse';
import GoogleCloudDialogflowV2ListConversationModelsResponse from '../model/GoogleCloudDialogflowV2ListConversationModelsResponse';
import GoogleCloudDialogflowV2ListConversationProfilesResponse from '../model/GoogleCloudDialogflowV2ListConversationProfilesResponse';
import GoogleCloudDialogflowV2ListConversationsResponse from '../model/GoogleCloudDialogflowV2ListConversationsResponse';
import GoogleCloudDialogflowV2ListDocumentsResponse from '../model/GoogleCloudDialogflowV2ListDocumentsResponse';
import GoogleCloudDialogflowV2ListEnvironmentsResponse from '../model/GoogleCloudDialogflowV2ListEnvironmentsResponse';
import GoogleCloudDialogflowV2ListIntentsResponse from '../model/GoogleCloudDialogflowV2ListIntentsResponse';
import GoogleCloudDialogflowV2ListKnowledgeBasesResponse from '../model/GoogleCloudDialogflowV2ListKnowledgeBasesResponse';
import GoogleCloudDialogflowV2ListMessagesResponse from '../model/GoogleCloudDialogflowV2ListMessagesResponse';
import GoogleCloudDialogflowV2ListParticipantsResponse from '../model/GoogleCloudDialogflowV2ListParticipantsResponse';
import GoogleCloudDialogflowV2ListSessionEntityTypesResponse from '../model/GoogleCloudDialogflowV2ListSessionEntityTypesResponse';
import GoogleCloudDialogflowV2ListVersionsResponse from '../model/GoogleCloudDialogflowV2ListVersionsResponse';
import GoogleCloudDialogflowV2Participant from '../model/GoogleCloudDialogflowV2Participant';
import GoogleCloudDialogflowV2ReloadDocumentRequest from '../model/GoogleCloudDialogflowV2ReloadDocumentRequest';
import GoogleCloudDialogflowV2RestoreAgentRequest from '../model/GoogleCloudDialogflowV2RestoreAgentRequest';
import GoogleCloudDialogflowV2SearchAgentsResponse from '../model/GoogleCloudDialogflowV2SearchAgentsResponse';
import GoogleCloudDialogflowV2SearchKnowledgeRequest from '../model/GoogleCloudDialogflowV2SearchKnowledgeRequest';
import GoogleCloudDialogflowV2SearchKnowledgeResponse from '../model/GoogleCloudDialogflowV2SearchKnowledgeResponse';
import GoogleCloudDialogflowV2SessionEntityType from '../model/GoogleCloudDialogflowV2SessionEntityType';
import GoogleCloudDialogflowV2SetSuggestionFeatureConfigRequest from '../model/GoogleCloudDialogflowV2SetSuggestionFeatureConfigRequest';
import GoogleCloudDialogflowV2SuggestArticlesRequest from '../model/GoogleCloudDialogflowV2SuggestArticlesRequest';
import GoogleCloudDialogflowV2SuggestArticlesResponse from '../model/GoogleCloudDialogflowV2SuggestArticlesResponse';
import GoogleCloudDialogflowV2SuggestConversationSummaryRequest from '../model/GoogleCloudDialogflowV2SuggestConversationSummaryRequest';
import GoogleCloudDialogflowV2SuggestConversationSummaryResponse from '../model/GoogleCloudDialogflowV2SuggestConversationSummaryResponse';
import GoogleCloudDialogflowV2SuggestFaqAnswersRequest from '../model/GoogleCloudDialogflowV2SuggestFaqAnswersRequest';
import GoogleCloudDialogflowV2SuggestFaqAnswersResponse from '../model/GoogleCloudDialogflowV2SuggestFaqAnswersResponse';
import GoogleCloudDialogflowV2SuggestSmartRepliesRequest from '../model/GoogleCloudDialogflowV2SuggestSmartRepliesRequest';
import GoogleCloudDialogflowV2SuggestSmartRepliesResponse from '../model/GoogleCloudDialogflowV2SuggestSmartRepliesResponse';
import GoogleCloudDialogflowV2ValidationResult from '../model/GoogleCloudDialogflowV2ValidationResult';
import GoogleCloudDialogflowV2Version from '../model/GoogleCloudDialogflowV2Version';
import GoogleCloudLocationListLocationsResponse from '../model/GoogleCloudLocationListLocationsResponse';
import GoogleLongrunningListOperationsResponse from '../model/GoogleLongrunningListOperationsResponse';
import GoogleLongrunningOperation from '../model/GoogleLongrunningOperation';

/**
* Projects service.
* @module api/ProjectsApi
* @version v2
*/
export default class ProjectsApi {

    /**
    * Constructs a new ProjectsApi. 
    * @alias module:api/ProjectsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the dialogflowProjectsLocationsAgentEntityTypesBatchDelete operation.
     * @callback module:api/ProjectsApi~dialogflowProjectsLocationsAgentEntityTypesBatchDeleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes entity types in the specified agent. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: An [Empty message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) Note: You should always train an agent prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).
     * @param {String} parent Required. The name of the agent to delete all entities types for. Format: `projects//agent`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudDialogflowV2BatchDeleteEntityTypesRequest} [googleCloudDialogflowV2BatchDeleteEntityTypesRequest] 
     * @param {module:api/ProjectsApi~dialogflowProjectsLocationsAgentEntityTypesBatchDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    dialogflowProjectsLocationsAgentEntityTypesBatchDelete(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudDialogflowV2BatchDeleteEntityTypesRequest'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling dialogflowProjectsLocationsAgentEntityTypesBatchDelete");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v2/{parent}/entityTypes:batchDelete', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dialogflowProjectsLocationsAgentEntityTypesBatchUpdate operation.
     * @callback module:api/ProjectsApi~dialogflowProjectsLocationsAgentEntityTypesBatchUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates/Creates multiple entity types in the specified agent. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: BatchUpdateEntityTypesResponse Note: You should always train an agent prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).
     * @param {String} parent Required. The name of the agent to update or create entity types in. Format: `projects//agent`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudDialogflowV2BatchUpdateEntityTypesRequest} [googleCloudDialogflowV2BatchUpdateEntityTypesRequest] 
     * @param {module:api/ProjectsApi~dialogflowProjectsLocationsAgentEntityTypesBatchUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    dialogflowProjectsLocationsAgentEntityTypesBatchUpdate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudDialogflowV2BatchUpdateEntityTypesRequest'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling dialogflowProjectsLocationsAgentEntityTypesBatchUpdate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v2/{parent}/entityTypes:batchUpdate', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dialogflowProjectsLocationsAgentEntityTypesEntitiesBatchCreate operation.
     * @callback module:api/ProjectsApi~dialogflowProjectsLocationsAgentEntityTypesEntitiesBatchCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates multiple new entities in the specified entity type. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: An [Empty message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) Note: You should always train an agent prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).
     * @param {String} parent Required. The name of the entity type to create entities in. Format: `projects//agent/entityTypes/`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudDialogflowV2BatchCreateEntitiesRequest} [googleCloudDialogflowV2BatchCreateEntitiesRequest] 
     * @param {module:api/ProjectsApi~dialogflowProjectsLocationsAgentEntityTypesEntitiesBatchCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    dialogflowProjectsLocationsAgentEntityTypesEntitiesBatchCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudDialogflowV2BatchCreateEntitiesRequest'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling dialogflowProjectsLocationsAgentEntityTypesEntitiesBatchCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v2/{parent}/entities:batchCreate', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dialogflowProjectsLocationsAgentEntityTypesEntitiesBatchDelete operation.
     * @callback module:api/ProjectsApi~dialogflowProjectsLocationsAgentEntityTypesEntitiesBatchDeleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes entities in the specified entity type. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: An [Empty message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) Note: You should always train an agent prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).
     * @param {String} parent Required. The name of the entity type to delete entries for. Format: `projects//agent/entityTypes/`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudDialogflowV2BatchDeleteEntitiesRequest} [googleCloudDialogflowV2BatchDeleteEntitiesRequest] 
     * @param {module:api/ProjectsApi~dialogflowProjectsLocationsAgentEntityTypesEntitiesBatchDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    dialogflowProjectsLocationsAgentEntityTypesEntitiesBatchDelete(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudDialogflowV2BatchDeleteEntitiesRequest'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling dialogflowProjectsLocationsAgentEntityTypesEntitiesBatchDelete");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v2/{parent}/entities:batchDelete', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dialogflowProjectsLocationsAgentEntityTypesEntitiesBatchUpdate operation.
     * @callback module:api/ProjectsApi~dialogflowProjectsLocationsAgentEntityTypesEntitiesBatchUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates or creates multiple entities in the specified entity type. This method does not affect entities in the entity type that aren't explicitly specified in the request. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: An [Empty message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) Note: You should always train an agent prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training). 
     * @param {String} parent Required. The name of the entity type to update or create entities in. Format: `projects//agent/entityTypes/`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudDialogflowV2BatchUpdateEntitiesRequest} [googleCloudDialogflowV2BatchUpdateEntitiesRequest] 
     * @param {module:api/ProjectsApi~dialogflowProjectsLocationsAgentEntityTypesEntitiesBatchUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    dialogflowProjectsLocationsAgentEntityTypesEntitiesBatchUpdate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudDialogflowV2BatchUpdateEntitiesRequest'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling dialogflowProjectsLocationsAgentEntityTypesEntitiesBatchUpdate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v2/{parent}/entities:batchUpdate', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dialogflowProjectsLocationsAgentEnvironmentsCreate operation.
     * @callback module:api/ProjectsApi~dialogflowProjectsLocationsAgentEnvironmentsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudDialogflowV2Environment} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates an agent environment.
     * @param {String} parent Required. The agent to create an environment for. Supported formats: - `projects//agent` - `projects//locations//agent`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [environmentId] Required. The unique id of the new environment.
     * @param {module:model/GoogleCloudDialogflowV2Environment} [googleCloudDialogflowV2Environment] 
     * @param {module:api/ProjectsApi~dialogflowProjectsLocationsAgentEnvironmentsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudDialogflowV2Environment}
     */
    dialogflowProjectsLocationsAgentEnvironmentsCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudDialogflowV2Environment'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling dialogflowProjectsLocationsAgentEnvironmentsCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'environmentId': opts['environmentId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudDialogflowV2Environment;
      return this.apiClient.callApi(
        '/v2/{parent}/environments', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dialogflowProjectsLocationsAgentEnvironmentsGetHistory operation.
     * @callback module:api/ProjectsApi~dialogflowProjectsLocationsAgentEnvironmentsGetHistoryCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudDialogflowV2EnvironmentHistory} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the history of the specified environment.
     * @param {String} parent Required. The name of the environment to retrieve history for. Supported formats: - `projects//agent/environments/` - `projects//locations//agent/environments/` The environment ID for the default environment is `-`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Number} [pageSize] Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.
     * @param {String} [pageToken] Optional. The next_page_token value returned from a previous list request.
     * @param {module:api/ProjectsApi~dialogflowProjectsLocationsAgentEnvironmentsGetHistoryCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudDialogflowV2EnvironmentHistory}
     */
    dialogflowProjectsLocationsAgentEnvironmentsGetHistory(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling dialogflowProjectsLocationsAgentEnvironmentsGetHistory");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudDialogflowV2EnvironmentHistory;
      return this.apiClient.callApi(
        '/v2/{parent}/history', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dialogflowProjectsLocationsAgentEnvironmentsList operation.
     * @callback module:api/ProjectsApi~dialogflowProjectsLocationsAgentEnvironmentsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudDialogflowV2ListEnvironmentsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns the list of all non-default environments of the specified agent.
     * @param {String} parent Required. The agent to list all environments from. Format: - `projects//agent` - `projects//locations//agent`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Number} [pageSize] Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.
     * @param {String} [pageToken] Optional. The next_page_token value returned from a previous list request.
     * @param {module:api/ProjectsApi~dialogflowProjectsLocationsAgentEnvironmentsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudDialogflowV2ListEnvironmentsResponse}
     */
    dialogflowProjectsLocationsAgentEnvironmentsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling dialogflowProjectsLocationsAgentEnvironmentsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudDialogflowV2ListEnvironmentsResponse;
      return this.apiClient.callApi(
        '/v2/{parent}/environments', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dialogflowProjectsLocationsAgentExport operation.
     * @callback module:api/ProjectsApi~dialogflowProjectsLocationsAgentExportCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Exports the specified agent to a ZIP file. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: ExportAgentResponse
     * @param {String} parent Required. The project that the agent to export is associated with. Format: `projects/`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudDialogflowV2ExportAgentRequest} [googleCloudDialogflowV2ExportAgentRequest] 
     * @param {module:api/ProjectsApi~dialogflowProjectsLocationsAgentExportCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    dialogflowProjectsLocationsAgentExport(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudDialogflowV2ExportAgentRequest'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling dialogflowProjectsLocationsAgentExport");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v2/{parent}/agent:export', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dialogflowProjectsLocationsAgentGetValidationResult operation.
     * @callback module:api/ProjectsApi~dialogflowProjectsLocationsAgentGetValidationResultCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudDialogflowV2ValidationResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets agent validation result. Agent validation is performed during training time and is updated automatically when training is completed.
     * @param {String} parent Required. The project that the agent is associated with. Format: `projects/`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [languageCode] Optional. The language for which you want a validation result. If not specified, the agent's default language is used. [Many languages](https://cloud.google.com/dialogflow/docs/reference/language) are supported. Note: languages must be enabled in the agent before they can be used.
     * @param {module:api/ProjectsApi~dialogflowProjectsLocationsAgentGetValidationResultCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudDialogflowV2ValidationResult}
     */
    dialogflowProjectsLocationsAgentGetValidationResult(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling dialogflowProjectsLocationsAgentGetValidationResult");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'languageCode': opts['languageCode']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudDialogflowV2ValidationResult;
      return this.apiClient.callApi(
        '/v2/{parent}/agent/validationResult', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dialogflowProjectsLocationsAgentImport operation.
     * @callback module:api/ProjectsApi~dialogflowProjectsLocationsAgentImportCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Imports the specified agent from a ZIP file. Uploads new intents and entity types without deleting the existing ones. Intents and entity types with the same name are replaced with the new versions from ImportAgentRequest. After the import, the imported draft agent will be trained automatically (unless disabled in agent settings). However, once the import is done, training may not be completed yet. Please call TrainAgent and wait for the operation it returns in order to train explicitly. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: An [Empty message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) The operation only tracks when importing is complete, not when it is done training. Note: You should always train an agent prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).
     * @param {String} parent Required. The project that the agent to import is associated with. Format: `projects/`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudDialogflowV2ImportAgentRequest} [googleCloudDialogflowV2ImportAgentRequest] 
     * @param {module:api/ProjectsApi~dialogflowProjectsLocationsAgentImportCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    dialogflowProjectsLocationsAgentImport(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudDialogflowV2ImportAgentRequest'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling dialogflowProjectsLocationsAgentImport");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v2/{parent}/agent:import', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dialogflowProjectsLocationsAgentIntentsBatchDelete operation.
     * @callback module:api/ProjectsApi~dialogflowProjectsLocationsAgentIntentsBatchDeleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes intents in the specified agent. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: An [Empty message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) Note: You should always train an agent prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).
     * @param {String} parent Required. The name of the agent to delete all entities types for. Format: `projects//agent`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudDialogflowV2BatchDeleteIntentsRequest} [googleCloudDialogflowV2BatchDeleteIntentsRequest] 
     * @param {module:api/ProjectsApi~dialogflowProjectsLocationsAgentIntentsBatchDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    dialogflowProjectsLocationsAgentIntentsBatchDelete(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudDialogflowV2BatchDeleteIntentsRequest'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling dialogflowProjectsLocationsAgentIntentsBatchDelete");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v2/{parent}/intents:batchDelete', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dialogflowProjectsLocationsAgentIntentsBatchUpdate operation.
     * @callback module:api/ProjectsApi~dialogflowProjectsLocationsAgentIntentsBatchUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates/Creates multiple intents in the specified agent. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: BatchUpdateIntentsResponse Note: You should always train an agent prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).
     * @param {String} parent Required. The name of the agent to update or create intents in. Format: `projects//agent`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudDialogflowV2BatchUpdateIntentsRequest} [googleCloudDialogflowV2BatchUpdateIntentsRequest] 
     * @param {module:api/ProjectsApi~dialogflowProjectsLocationsAgentIntentsBatchUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    dialogflowProjectsLocationsAgentIntentsBatchUpdate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudDialogflowV2BatchUpdateIntentsRequest'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling dialogflowProjectsLocationsAgentIntentsBatchUpdate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v2/{parent}/intents:batchUpdate', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dialogflowProjectsLocationsAgentIntentsCreate operation.
     * @callback module:api/ProjectsApi~dialogflowProjectsLocationsAgentIntentsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudDialogflowV2Intent} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates an intent in the specified agent. Note: You should always train an agent prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).
     * @param {String} parent Required. The agent to create a intent for. Format: `projects//agent`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/String} [intentView] Optional. The resource view to apply to the returned intent.
     * @param {String} [languageCode] Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
     * @param {module:model/GoogleCloudDialogflowV2Intent} [googleCloudDialogflowV2Intent] 
     * @param {module:api/ProjectsApi~dialogflowProjectsLocationsAgentIntentsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudDialogflowV2Intent}
     */
    dialogflowProjectsLocationsAgentIntentsCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudDialogflowV2Intent'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling dialogflowProjectsLocationsAgentIntentsCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'intentView': opts['intentView'],
        'languageCode': opts['languageCode']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudDialogflowV2Intent;
      return this.apiClient.callApi(
        '/v2/{parent}/intents', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dialogflowProjectsLocationsAgentIntentsList operation.
     * @callback module:api/ProjectsApi~dialogflowProjectsLocationsAgentIntentsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudDialogflowV2ListIntentsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns the list of all intents in the specified agent.
     * @param {String} parent Required. The agent to list all intents from. Format: `projects//agent` or `projects//locations//agent`. Alternatively, you can specify the environment to list intents for. Format: `projects//agent/environments/` or `projects//locations//agent/environments/`. Note: training phrases of the intents will not be returned for non-draft environment.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/String} [intentView] Optional. The resource view to apply to the returned intent.
     * @param {String} [languageCode] Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
     * @param {Number} [pageSize] Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.
     * @param {String} [pageToken] Optional. The next_page_token value returned from a previous list request.
     * @param {module:api/ProjectsApi~dialogflowProjectsLocationsAgentIntentsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudDialogflowV2ListIntentsResponse}
     */
    dialogflowProjectsLocationsAgentIntentsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling dialogflowProjectsLocationsAgentIntentsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'intentView': opts['intentView'],
        'languageCode': opts['languageCode'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudDialogflowV2ListIntentsResponse;
      return this.apiClient.callApi(
        '/v2/{parent}/intents', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dialogflowProjectsLocationsAgentRestore operation.
     * @callback module:api/ProjectsApi~dialogflowProjectsLocationsAgentRestoreCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Restores the specified agent from a ZIP file. Replaces the current agent version with a new one. All the intents and entity types in the older version are deleted. After the restore, the restored draft agent will be trained automatically (unless disabled in agent settings). However, once the restore is done, training may not be completed yet. Please call TrainAgent and wait for the operation it returns in order to train explicitly. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: An [Empty message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) The operation only tracks when restoring is complete, not when it is done training. Note: You should always train an agent prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).
     * @param {String} parent Required. The project that the agent to restore is associated with. Format: `projects/`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudDialogflowV2RestoreAgentRequest} [googleCloudDialogflowV2RestoreAgentRequest] 
     * @param {module:api/ProjectsApi~dialogflowProjectsLocationsAgentRestoreCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    dialogflowProjectsLocationsAgentRestore(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudDialogflowV2RestoreAgentRequest'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling dialogflowProjectsLocationsAgentRestore");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v2/{parent}/agent:restore', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dialogflowProjectsLocationsAgentSearch operation.
     * @callback module:api/ProjectsApi~dialogflowProjectsLocationsAgentSearchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudDialogflowV2SearchAgentsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns the list of agents. Since there is at most one conversational agent per project, this method is useful primarily for listing all agents across projects the caller has access to. One can achieve that with a wildcard project collection id \"-\". Refer to [List Sub-Collections](https://cloud.google.com/apis/design/design_patterns#list_sub-collections).
     * @param {String} parent Required. The project to list agents from. Format: `projects/`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Number} [pageSize] Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.
     * @param {String} [pageToken] The next_page_token value returned from a previous list request.
     * @param {module:api/ProjectsApi~dialogflowProjectsLocationsAgentSearchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudDialogflowV2SearchAgentsResponse}
     */
    dialogflowProjectsLocationsAgentSearch(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling dialogflowProjectsLocationsAgentSearch");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudDialogflowV2SearchAgentsResponse;
      return this.apiClient.callApi(
        '/v2/{parent}/agent:search', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dialogflowProjectsLocationsAgentSessionsContextsCreate operation.
     * @callback module:api/ProjectsApi~dialogflowProjectsLocationsAgentSessionsContextsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudDialogflowV2Context} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a context. If the specified context already exists, overrides the context.
     * @param {String} parent Required. The session to create a context for. Format: `projects//agent/sessions/` or `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudDialogflowV2Context} [googleCloudDialogflowV2Context] 
     * @param {module:api/ProjectsApi~dialogflowProjectsLocationsAgentSessionsContextsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudDialogflowV2Context}
     */
    dialogflowProjectsLocationsAgentSessionsContextsCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudDialogflowV2Context'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling dialogflowProjectsLocationsAgentSessionsContextsCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudDialogflowV2Context;
      return this.apiClient.callApi(
        '/v2/{parent}/contexts', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dialogflowProjectsLocationsAgentSessionsContextsList operation.
     * @callback module:api/ProjectsApi~dialogflowProjectsLocationsAgentSessionsContextsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudDialogflowV2ListContextsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns the list of all contexts in the specified session.
     * @param {String} parent Required. The session to list all contexts from. Format: `projects//agent/sessions/` or `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Number} [pageSize] Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.
     * @param {String} [pageToken] Optional. The next_page_token value returned from a previous list request.
     * @param {module:api/ProjectsApi~dialogflowProjectsLocationsAgentSessionsContextsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudDialogflowV2ListContextsResponse}
     */
    dialogflowProjectsLocationsAgentSessionsContextsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling dialogflowProjectsLocationsAgentSessionsContextsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudDialogflowV2ListContextsResponse;
      return this.apiClient.callApi(
        '/v2/{parent}/contexts', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dialogflowProjectsLocationsAgentSessionsDeleteContexts operation.
     * @callback module:api/ProjectsApi~dialogflowProjectsLocationsAgentSessionsDeleteContextsCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes all active contexts in the specified session.
     * @param {String} parent Required. The name of the session to delete all contexts from. Format: `projects//agent/sessions/` or `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:api/ProjectsApi~dialogflowProjectsLocationsAgentSessionsDeleteContextsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    dialogflowProjectsLocationsAgentSessionsDeleteContexts(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling dialogflowProjectsLocationsAgentSessionsDeleteContexts");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/v2/{parent}/contexts', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dialogflowProjectsLocationsAgentSessionsDetectIntent operation.
     * @callback module:api/ProjectsApi~dialogflowProjectsLocationsAgentSessionsDetectIntentCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudDialogflowV2DetectIntentResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Processes a natural language query and returns structured, actionable data as a result. This method is not idempotent, because it may cause contexts and session entity types to be updated, which in turn might affect results of future queries. If you might use [Agent Assist](https://cloud.google.com/dialogflow/docs/#aa) or other CCAI products now or in the future, consider using AnalyzeContent instead of `DetectIntent`. `AnalyzeContent` has additional functionality for Agent Assist and other CCAI products. Note: Always use agent versions for production traffic. See [Versions and environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).
     * @param {String} session Required. The name of the session this query is sent to. Format: `projects//agent/sessions/`, or `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment (`Environment ID` might be referred to as environment name at some places). If `User ID` is not specified, we are using \"-\". It's up to the API caller to choose an appropriate `Session ID` and `User Id`. They can be a random number or some type of user and session identifiers (preferably hashed). The length of the `Session ID` and `User ID` must not exceed 36 characters. For more information, see the [API interactions guide](https://cloud.google.com/dialogflow/docs/api-overview). Note: Always use agent versions for production traffic. See [Versions and environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudDialogflowV2DetectIntentRequest} [googleCloudDialogflowV2DetectIntentRequest] 
     * @param {module:api/ProjectsApi~dialogflowProjectsLocationsAgentSessionsDetectIntentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudDialogflowV2DetectIntentResponse}
     */
    dialogflowProjectsLocationsAgentSessionsDetectIntent(session, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudDialogflowV2DetectIntentRequest'];
      // verify the required parameter 'session' is set
      if (session === undefined || session === null) {
        throw new Error("Missing the required parameter 'session' when calling dialogflowProjectsLocationsAgentSessionsDetectIntent");
      }

      let pathParams = {
        'session': session
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudDialogflowV2DetectIntentResponse;
      return this.apiClient.callApi(
        '/v2/{session}:detectIntent', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dialogflowProjectsLocationsAgentSessionsEntityTypesCreate operation.
     * @callback module:api/ProjectsApi~dialogflowProjectsLocationsAgentSessionsEntityTypesCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudDialogflowV2SessionEntityType} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a session entity type. If the specified session entity type already exists, overrides the session entity type. This method doesn't work with Google Assistant integration. Contact Dialogflow support if you need to use session entities with Google Assistant integration.
     * @param {String} parent Required. The session to create a session entity type for. Format: `projects//agent/sessions/` or `projects//agent/environments//users// sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [languageCode] Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
     * @param {module:model/GoogleCloudDialogflowV2SessionEntityType} [googleCloudDialogflowV2SessionEntityType] 
     * @param {module:api/ProjectsApi~dialogflowProjectsLocationsAgentSessionsEntityTypesCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudDialogflowV2SessionEntityType}
     */
    dialogflowProjectsLocationsAgentSessionsEntityTypesCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudDialogflowV2SessionEntityType'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling dialogflowProjectsLocationsAgentSessionsEntityTypesCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'languageCode': opts['languageCode']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudDialogflowV2SessionEntityType;
      return this.apiClient.callApi(
        '/v2/{parent}/entityTypes', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dialogflowProjectsLocationsAgentSessionsEntityTypesList operation.
     * @callback module:api/ProjectsApi~dialogflowProjectsLocationsAgentSessionsEntityTypesListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudDialogflowV2ListSessionEntityTypesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns the list of all session entity types in the specified session. This method doesn't work with Google Assistant integration. Contact Dialogflow support if you need to use session entities with Google Assistant integration.
     * @param {String} parent Required. The session to list all session entity types from. Format: `projects//agent/sessions/` or `projects//agent/environments//users// sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Number} [pageSize] Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.
     * @param {String} [pageToken] Optional. The next_page_token value returned from a previous list request.
     * @param {module:api/ProjectsApi~dialogflowProjectsLocationsAgentSessionsEntityTypesListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudDialogflowV2ListSessionEntityTypesResponse}
     */
    dialogflowProjectsLocationsAgentSessionsEntityTypesList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling dialogflowProjectsLocationsAgentSessionsEntityTypesList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudDialogflowV2ListSessionEntityTypesResponse;
      return this.apiClient.callApi(
        '/v2/{parent}/entityTypes', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dialogflowProjectsLocationsAgentTrain operation.
     * @callback module:api/ProjectsApi~dialogflowProjectsLocationsAgentTrainCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Trains the specified agent. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: An [Empty message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) Note: You should always train an agent prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).
     * @param {String} parent Required. The project that the agent to train is associated with. Format: `projects/`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Object.<String, Object>} [body] 
     * @param {module:api/ProjectsApi~dialogflowProjectsLocationsAgentTrainCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    dialogflowProjectsLocationsAgentTrain(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling dialogflowProjectsLocationsAgentTrain");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v2/{parent}/agent:train', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dialogflowProjectsLocationsAgentVersionsCreate operation.
     * @callback module:api/ProjectsApi~dialogflowProjectsLocationsAgentVersionsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudDialogflowV2Version} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates an agent version. The new version points to the agent instance in the \"default\" environment.
     * @param {String} parent Required. The agent to create a version for. Supported formats: - `projects//agent` - `projects//locations//agent`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudDialogflowV2Version} [googleCloudDialogflowV2Version] 
     * @param {module:api/ProjectsApi~dialogflowProjectsLocationsAgentVersionsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudDialogflowV2Version}
     */
    dialogflowProjectsLocationsAgentVersionsCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudDialogflowV2Version'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling dialogflowProjectsLocationsAgentVersionsCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudDialogflowV2Version;
      return this.apiClient.callApi(
        '/v2/{parent}/versions', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dialogflowProjectsLocationsAgentVersionsList operation.
     * @callback module:api/ProjectsApi~dialogflowProjectsLocationsAgentVersionsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudDialogflowV2ListVersionsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns the list of all versions of the specified agent.
     * @param {String} parent Required. The agent to list all versions from. Supported formats: - `projects//agent` - `projects//locations//agent`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Number} [pageSize] Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.
     * @param {String} [pageToken] Optional. The next_page_token value returned from a previous list request.
     * @param {module:api/ProjectsApi~dialogflowProjectsLocationsAgentVersionsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudDialogflowV2ListVersionsResponse}
     */
    dialogflowProjectsLocationsAgentVersionsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling dialogflowProjectsLocationsAgentVersionsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudDialogflowV2ListVersionsResponse;
      return this.apiClient.callApi(
        '/v2/{parent}/versions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dialogflowProjectsLocationsAnswerRecordsList operation.
     * @callback module:api/ProjectsApi~dialogflowProjectsLocationsAnswerRecordsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudDialogflowV2ListAnswerRecordsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns the list of all answer records in the specified project in reverse chronological order.
     * @param {String} parent Required. The project to list all answer records for in reverse chronological order. Format: `projects//locations/`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [filter] Optional. Filters to restrict results to specific answer records. Marked deprecated as it hasn't been, and isn't currently, supported. For more information about filtering, see [API Filtering](https://aip.dev/160).
     * @param {Number} [pageSize] Optional. The maximum number of records to return in a single page. The server may return fewer records than this. If unspecified, we use 10. The maximum is 100.
     * @param {String} [pageToken] Optional. The ListAnswerRecordsResponse.next_page_token value returned from a previous list request used to continue listing on the next page.
     * @param {module:api/ProjectsApi~dialogflowProjectsLocationsAnswerRecordsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudDialogflowV2ListAnswerRecordsResponse}
     */
    dialogflowProjectsLocationsAnswerRecordsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling dialogflowProjectsLocationsAnswerRecordsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'filter': opts['filter'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudDialogflowV2ListAnswerRecordsResponse;
      return this.apiClient.callApi(
        '/v2/{parent}/answerRecords', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dialogflowProjectsLocationsConversationDatasetsCreate operation.
     * @callback module:api/ProjectsApi~dialogflowProjectsLocationsConversationDatasetsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a new conversation dataset. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned `Operation` type has the following method-specific fields: - `metadata`: CreateConversationDatasetOperationMetadata - `response`: ConversationDataset
     * @param {String} parent Required. The project to create conversation dataset for. Format: `projects//locations/`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudDialogflowV2ConversationDataset} [googleCloudDialogflowV2ConversationDataset] 
     * @param {module:api/ProjectsApi~dialogflowProjectsLocationsConversationDatasetsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    dialogflowProjectsLocationsConversationDatasetsCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudDialogflowV2ConversationDataset'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling dialogflowProjectsLocationsConversationDatasetsCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v2/{parent}/conversationDatasets', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dialogflowProjectsLocationsConversationDatasetsImportConversationData operation.
     * @callback module:api/ProjectsApi~dialogflowProjectsLocationsConversationDatasetsImportConversationDataCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Import data into the specified conversation dataset. Note that it is not allowed to import data to a conversation dataset that already has data in it. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned `Operation` type has the following method-specific fields: - `metadata`: ImportConversationDataOperationMetadata - `response`: ImportConversationDataOperationResponse
     * @param {String} name Required. Dataset resource name. Format: `projects//locations//conversationDatasets/`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudDialogflowV2ImportConversationDataRequest} [googleCloudDialogflowV2ImportConversationDataRequest] 
     * @param {module:api/ProjectsApi~dialogflowProjectsLocationsConversationDatasetsImportConversationDataCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    dialogflowProjectsLocationsConversationDatasetsImportConversationData(name, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudDialogflowV2ImportConversationDataRequest'];
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling dialogflowProjectsLocationsConversationDatasetsImportConversationData");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v2/{name}:importConversationData', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dialogflowProjectsLocationsConversationDatasetsList operation.
     * @callback module:api/ProjectsApi~dialogflowProjectsLocationsConversationDatasetsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudDialogflowV2ListConversationDatasetsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns the list of all conversation datasets in the specified project and location.
     * @param {String} parent Required. The project and location name to list all conversation datasets for. Format: `projects//locations/`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Number} [pageSize] Optional. Maximum number of conversation datasets to return in a single page. By default 100 and at most 1000.
     * @param {String} [pageToken] Optional. The next_page_token value returned from a previous list request.
     * @param {module:api/ProjectsApi~dialogflowProjectsLocationsConversationDatasetsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudDialogflowV2ListConversationDatasetsResponse}
     */
    dialogflowProjectsLocationsConversationDatasetsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling dialogflowProjectsLocationsConversationDatasetsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudDialogflowV2ListConversationDatasetsResponse;
      return this.apiClient.callApi(
        '/v2/{parent}/conversationDatasets', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dialogflowProjectsLocationsConversationModelsCreate operation.
     * @callback module:api/ProjectsApi~dialogflowProjectsLocationsConversationModelsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a model. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned `Operation` type has the following method-specific fields: - `metadata`: CreateConversationModelOperationMetadata - `response`: ConversationModel
     * @param {String} parent The project to create conversation model for. Format: `projects/`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudDialogflowV2ConversationModel} [googleCloudDialogflowV2ConversationModel] 
     * @param {module:api/ProjectsApi~dialogflowProjectsLocationsConversationModelsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    dialogflowProjectsLocationsConversationModelsCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudDialogflowV2ConversationModel'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling dialogflowProjectsLocationsConversationModelsCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v2/{parent}/conversationModels', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dialogflowProjectsLocationsConversationModelsDeploy operation.
     * @callback module:api/ProjectsApi~dialogflowProjectsLocationsConversationModelsDeployCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deploys a model. If a model is already deployed, deploying it has no effect. A model can only serve prediction requests after it gets deployed. For article suggestion, custom model will not be used unless it is deployed. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned `Operation` type has the following method-specific fields: - `metadata`: DeployConversationModelOperationMetadata - `response`: An [Empty message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
     * @param {String} name Required. The conversation model to deploy. Format: `projects//conversationModels/`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Object.<String, Object>} [body] 
     * @param {module:api/ProjectsApi~dialogflowProjectsLocationsConversationModelsDeployCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    dialogflowProjectsLocationsConversationModelsDeploy(name, opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling dialogflowProjectsLocationsConversationModelsDeploy");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v2/{name}:deploy', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dialogflowProjectsLocationsConversationModelsEvaluationsCreate operation.
     * @callback module:api/ProjectsApi~dialogflowProjectsLocationsConversationModelsEvaluationsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates evaluation of a conversation model.
     * @param {String} parent Required. The conversation model resource name. Format: `projects//locations//conversationModels/`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudDialogflowV2CreateConversationModelEvaluationRequest} [googleCloudDialogflowV2CreateConversationModelEvaluationRequest] 
     * @param {module:api/ProjectsApi~dialogflowProjectsLocationsConversationModelsEvaluationsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    dialogflowProjectsLocationsConversationModelsEvaluationsCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudDialogflowV2CreateConversationModelEvaluationRequest'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling dialogflowProjectsLocationsConversationModelsEvaluationsCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v2/{parent}/evaluations', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dialogflowProjectsLocationsConversationModelsEvaluationsList operation.
     * @callback module:api/ProjectsApi~dialogflowProjectsLocationsConversationModelsEvaluationsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudDialogflowV2ListConversationModelEvaluationsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists evaluations of a conversation model.
     * @param {String} parent Required. The conversation model resource name. Format: `projects//conversationModels/`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Number} [pageSize] Optional. Maximum number of evaluations to return in a single page. By default 100 and at most 1000.
     * @param {String} [pageToken] Optional. The next_page_token value returned from a previous list request.
     * @param {module:api/ProjectsApi~dialogflowProjectsLocationsConversationModelsEvaluationsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudDialogflowV2ListConversationModelEvaluationsResponse}
     */
    dialogflowProjectsLocationsConversationModelsEvaluationsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling dialogflowProjectsLocationsConversationModelsEvaluationsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudDialogflowV2ListConversationModelEvaluationsResponse;
      return this.apiClient.callApi(
        '/v2/{parent}/evaluations', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dialogflowProjectsLocationsConversationModelsList operation.
     * @callback module:api/ProjectsApi~dialogflowProjectsLocationsConversationModelsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudDialogflowV2ListConversationModelsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists conversation models.
     * @param {String} parent Required. The project to list all conversation models for. Format: `projects/`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Number} [pageSize] Optional. Maximum number of conversation models to return in a single page. By default 100 and at most 1000.
     * @param {String} [pageToken] Optional. The next_page_token value returned from a previous list request.
     * @param {module:api/ProjectsApi~dialogflowProjectsLocationsConversationModelsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudDialogflowV2ListConversationModelsResponse}
     */
    dialogflowProjectsLocationsConversationModelsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling dialogflowProjectsLocationsConversationModelsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudDialogflowV2ListConversationModelsResponse;
      return this.apiClient.callApi(
        '/v2/{parent}/conversationModels', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dialogflowProjectsLocationsConversationModelsUndeploy operation.
     * @callback module:api/ProjectsApi~dialogflowProjectsLocationsConversationModelsUndeployCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Undeploys a model. If the model is not deployed this method has no effect. If the model is currently being used: - For article suggestion, article suggestion will fallback to the default model if model is undeployed. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned `Operation` type has the following method-specific fields: - `metadata`: UndeployConversationModelOperationMetadata - `response`: An [Empty message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
     * @param {String} name Required. The conversation model to undeploy. Format: `projects//conversationModels/`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Object.<String, Object>} [body] 
     * @param {module:api/ProjectsApi~dialogflowProjectsLocationsConversationModelsUndeployCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    dialogflowProjectsLocationsConversationModelsUndeploy(name, opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling dialogflowProjectsLocationsConversationModelsUndeploy");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v2/{name}:undeploy', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dialogflowProjectsLocationsConversationProfilesClearSuggestionFeatureConfig operation.
     * @callback module:api/ProjectsApi~dialogflowProjectsLocationsConversationProfilesClearSuggestionFeatureConfigCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Clears a suggestion feature from a conversation profile for the given participant role. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned `Operation` type has the following method-specific fields: - `metadata`: ClearSuggestionFeatureConfigOperationMetadata - `response`: ConversationProfile
     * @param {String} conversationProfile Required. The Conversation Profile to add or update the suggestion feature config. Format: `projects//locations//conversationProfiles/`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudDialogflowV2ClearSuggestionFeatureConfigRequest} [googleCloudDialogflowV2ClearSuggestionFeatureConfigRequest] 
     * @param {module:api/ProjectsApi~dialogflowProjectsLocationsConversationProfilesClearSuggestionFeatureConfigCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    dialogflowProjectsLocationsConversationProfilesClearSuggestionFeatureConfig(conversationProfile, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudDialogflowV2ClearSuggestionFeatureConfigRequest'];
      // verify the required parameter 'conversationProfile' is set
      if (conversationProfile === undefined || conversationProfile === null) {
        throw new Error("Missing the required parameter 'conversationProfile' when calling dialogflowProjectsLocationsConversationProfilesClearSuggestionFeatureConfig");
      }

      let pathParams = {
        'conversationProfile': conversationProfile
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v2/{conversationProfile}:clearSuggestionFeatureConfig', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dialogflowProjectsLocationsConversationProfilesCreate operation.
     * @callback module:api/ProjectsApi~dialogflowProjectsLocationsConversationProfilesCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudDialogflowV2ConversationProfile} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a conversation profile in the specified project. ConversationProfile.CreateTime and ConversationProfile.UpdateTime aren't populated in the response. You can retrieve them via GetConversationProfile API.
     * @param {String} parent Required. The project to create a conversation profile for. Format: `projects//locations/`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudDialogflowV2ConversationProfile} [googleCloudDialogflowV2ConversationProfile] 
     * @param {module:api/ProjectsApi~dialogflowProjectsLocationsConversationProfilesCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudDialogflowV2ConversationProfile}
     */
    dialogflowProjectsLocationsConversationProfilesCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudDialogflowV2ConversationProfile'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling dialogflowProjectsLocationsConversationProfilesCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudDialogflowV2ConversationProfile;
      return this.apiClient.callApi(
        '/v2/{parent}/conversationProfiles', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dialogflowProjectsLocationsConversationProfilesList operation.
     * @callback module:api/ProjectsApi~dialogflowProjectsLocationsConversationProfilesListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudDialogflowV2ListConversationProfilesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns the list of all conversation profiles in the specified project.
     * @param {String} parent Required. The project to list all conversation profiles from. Format: `projects//locations/`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Number} [pageSize] The maximum number of items to return in a single page. By default 100 and at most 1000.
     * @param {String} [pageToken] The next_page_token value returned from a previous list request.
     * @param {module:api/ProjectsApi~dialogflowProjectsLocationsConversationProfilesListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudDialogflowV2ListConversationProfilesResponse}
     */
    dialogflowProjectsLocationsConversationProfilesList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling dialogflowProjectsLocationsConversationProfilesList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudDialogflowV2ListConversationProfilesResponse;
      return this.apiClient.callApi(
        '/v2/{parent}/conversationProfiles', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dialogflowProjectsLocationsConversationProfilesSetSuggestionFeatureConfig operation.
     * @callback module:api/ProjectsApi~dialogflowProjectsLocationsConversationProfilesSetSuggestionFeatureConfigCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Adds or updates a suggestion feature in a conversation profile. If the conversation profile contains the type of suggestion feature for the participant role, it will update it. Otherwise it will insert the suggestion feature. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned `Operation` type has the following method-specific fields: - `metadata`: SetSuggestionFeatureConfigOperationMetadata - `response`: ConversationProfile If a long running operation to add or update suggestion feature config for the same conversation profile, participant role and suggestion feature type exists, please cancel the existing long running operation before sending such request, otherwise the request will be rejected.
     * @param {String} conversationProfile Required. The Conversation Profile to add or update the suggestion feature config. Format: `projects//locations//conversationProfiles/`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudDialogflowV2SetSuggestionFeatureConfigRequest} [googleCloudDialogflowV2SetSuggestionFeatureConfigRequest] 
     * @param {module:api/ProjectsApi~dialogflowProjectsLocationsConversationProfilesSetSuggestionFeatureConfigCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    dialogflowProjectsLocationsConversationProfilesSetSuggestionFeatureConfig(conversationProfile, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudDialogflowV2SetSuggestionFeatureConfigRequest'];
      // verify the required parameter 'conversationProfile' is set
      if (conversationProfile === undefined || conversationProfile === null) {
        throw new Error("Missing the required parameter 'conversationProfile' when calling dialogflowProjectsLocationsConversationProfilesSetSuggestionFeatureConfig");
      }

      let pathParams = {
        'conversationProfile': conversationProfile
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v2/{conversationProfile}:setSuggestionFeatureConfig', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dialogflowProjectsLocationsConversationsComplete operation.
     * @callback module:api/ProjectsApi~dialogflowProjectsLocationsConversationsCompleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudDialogflowV2Conversation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Completes the specified conversation. Finished conversations are purged from the database after 30 days.
     * @param {String} name Required. Resource identifier of the conversation to close. Format: `projects//locations//conversations/`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Object.<String, Object>} [body] 
     * @param {module:api/ProjectsApi~dialogflowProjectsLocationsConversationsCompleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudDialogflowV2Conversation}
     */
    dialogflowProjectsLocationsConversationsComplete(name, opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling dialogflowProjectsLocationsConversationsComplete");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudDialogflowV2Conversation;
      return this.apiClient.callApi(
        '/v2/{name}:complete', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dialogflowProjectsLocationsConversationsCreate operation.
     * @callback module:api/ProjectsApi~dialogflowProjectsLocationsConversationsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudDialogflowV2Conversation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a new conversation. Conversations are auto-completed after 24 hours. Conversation Lifecycle: There are two stages during a conversation: Automated Agent Stage and Assist Stage. For Automated Agent Stage, there will be a dialogflow agent responding to user queries. For Assist Stage, there's no dialogflow agent responding to user queries. But we will provide suggestions which are generated from conversation. If Conversation.conversation_profile is configured for a dialogflow agent, conversation will start from `Automated Agent Stage`, otherwise, it will start from `Assist Stage`. And during `Automated Agent Stage`, once an Intent with Intent.live_agent_handoff is triggered, conversation will transfer to Assist Stage.
     * @param {String} parent Required. Resource identifier of the project creating the conversation. Format: `projects//locations/`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [conversationId] Optional. Identifier of the conversation. Generally it's auto generated by Google. Only set it if you cannot wait for the response to return a auto-generated one to you. The conversation ID must be compliant with the regression fomula `a-zA-Z*` with the characters length in range of [3,64]. If the field is provided, the caller is resposible for 1. the uniqueness of the ID, otherwise the request will be rejected. 2. the consistency for whether to use custom ID or not under a project to better ensure uniqueness.
     * @param {module:model/GoogleCloudDialogflowV2Conversation} [googleCloudDialogflowV2Conversation] 
     * @param {module:api/ProjectsApi~dialogflowProjectsLocationsConversationsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudDialogflowV2Conversation}
     */
    dialogflowProjectsLocationsConversationsCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudDialogflowV2Conversation'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling dialogflowProjectsLocationsConversationsCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'conversationId': opts['conversationId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudDialogflowV2Conversation;
      return this.apiClient.callApi(
        '/v2/{parent}/conversations', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dialogflowProjectsLocationsConversationsList operation.
     * @callback module:api/ProjectsApi~dialogflowProjectsLocationsConversationsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudDialogflowV2ListConversationsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns the list of all conversations in the specified project.
     * @param {String} parent Required. The project from which to list all conversation. Format: `projects//locations/`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [filter] A filter expression that filters conversations listed in the response. In general, the expression must specify the field name, a comparison operator, and the value to use for filtering: - The value must be a string, a number, or a boolean. - The comparison operator must be either `=`,`!=`, `>`, or `<`. - To filter on multiple expressions, separate the expressions with `AND` or `OR` (omitting both implies `AND`). - For clarity, expressions can be enclosed in parentheses. Only `lifecycle_state` can be filtered on in this way. For example, the following expression only returns `COMPLETED` conversations: `lifecycle_state = \"COMPLETED\"` For more information about filtering, see [API Filtering](https://aip.dev/160).
     * @param {Number} [pageSize] Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.
     * @param {String} [pageToken] Optional. The next_page_token value returned from a previous list request.
     * @param {module:api/ProjectsApi~dialogflowProjectsLocationsConversationsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudDialogflowV2ListConversationsResponse}
     */
    dialogflowProjectsLocationsConversationsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling dialogflowProjectsLocationsConversationsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'filter': opts['filter'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudDialogflowV2ListConversationsResponse;
      return this.apiClient.callApi(
        '/v2/{parent}/conversations', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dialogflowProjectsLocationsConversationsMessagesList operation.
     * @callback module:api/ProjectsApi~dialogflowProjectsLocationsConversationsMessagesListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudDialogflowV2ListMessagesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists messages that belong to a given conversation. `messages` are ordered by `create_time` in descending order. To fetch updates without duplication, send request with filter `create_time_epoch_microseconds > [first item's create_time of previous request]` and empty page_token.
     * @param {String} parent Required. The name of the conversation to list messages for. Format: `projects//locations//conversations/`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [filter] Optional. Filter on message fields. Currently predicates on `create_time` and `create_time_epoch_microseconds` are supported. `create_time` only support milliseconds accuracy. E.g., `create_time_epoch_microseconds > 1551790877964485` or `create_time > 2017-01-15T01:30:15.01Z`. For more information about filtering, see [API Filtering](https://aip.dev/160).
     * @param {Number} [pageSize] Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.
     * @param {String} [pageToken] Optional. The next_page_token value returned from a previous list request.
     * @param {module:api/ProjectsApi~dialogflowProjectsLocationsConversationsMessagesListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudDialogflowV2ListMessagesResponse}
     */
    dialogflowProjectsLocationsConversationsMessagesList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling dialogflowProjectsLocationsConversationsMessagesList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'filter': opts['filter'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudDialogflowV2ListMessagesResponse;
      return this.apiClient.callApi(
        '/v2/{parent}/messages', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dialogflowProjectsLocationsConversationsParticipantsAnalyzeContent operation.
     * @callback module:api/ProjectsApi~dialogflowProjectsLocationsConversationsParticipantsAnalyzeContentCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudDialogflowV2AnalyzeContentResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Adds a text (chat, for example), or audio (phone recording, for example) message from a participant into the conversation. Note: Always use agent versions for production traffic sent to virtual agents. See [Versions and environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).
     * @param {String} participant Required. The name of the participant this text comes from. Format: `projects//locations//conversations//participants/`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudDialogflowV2AnalyzeContentRequest} [googleCloudDialogflowV2AnalyzeContentRequest] 
     * @param {module:api/ProjectsApi~dialogflowProjectsLocationsConversationsParticipantsAnalyzeContentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudDialogflowV2AnalyzeContentResponse}
     */
    dialogflowProjectsLocationsConversationsParticipantsAnalyzeContent(participant, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudDialogflowV2AnalyzeContentRequest'];
      // verify the required parameter 'participant' is set
      if (participant === undefined || participant === null) {
        throw new Error("Missing the required parameter 'participant' when calling dialogflowProjectsLocationsConversationsParticipantsAnalyzeContent");
      }

      let pathParams = {
        'participant': participant
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudDialogflowV2AnalyzeContentResponse;
      return this.apiClient.callApi(
        '/v2/{participant}:analyzeContent', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dialogflowProjectsLocationsConversationsParticipantsCreate operation.
     * @callback module:api/ProjectsApi~dialogflowProjectsLocationsConversationsParticipantsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudDialogflowV2Participant} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a new participant in a conversation.
     * @param {String} parent Required. Resource identifier of the conversation adding the participant. Format: `projects//locations//conversations/`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudDialogflowV2Participant} [googleCloudDialogflowV2Participant] 
     * @param {module:api/ProjectsApi~dialogflowProjectsLocationsConversationsParticipantsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudDialogflowV2Participant}
     */
    dialogflowProjectsLocationsConversationsParticipantsCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudDialogflowV2Participant'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling dialogflowProjectsLocationsConversationsParticipantsCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudDialogflowV2Participant;
      return this.apiClient.callApi(
        '/v2/{parent}/participants', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dialogflowProjectsLocationsConversationsParticipantsList operation.
     * @callback module:api/ProjectsApi~dialogflowProjectsLocationsConversationsParticipantsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudDialogflowV2ListParticipantsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns the list of all participants in the specified conversation.
     * @param {String} parent Required. The conversation to list all participants from. Format: `projects//locations//conversations/`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Number} [pageSize] Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.
     * @param {String} [pageToken] Optional. The next_page_token value returned from a previous list request.
     * @param {module:api/ProjectsApi~dialogflowProjectsLocationsConversationsParticipantsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudDialogflowV2ListParticipantsResponse}
     */
    dialogflowProjectsLocationsConversationsParticipantsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling dialogflowProjectsLocationsConversationsParticipantsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudDialogflowV2ListParticipantsResponse;
      return this.apiClient.callApi(
        '/v2/{parent}/participants', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dialogflowProjectsLocationsConversationsParticipantsSuggestionsSuggestArticles operation.
     * @callback module:api/ProjectsApi~dialogflowProjectsLocationsConversationsParticipantsSuggestionsSuggestArticlesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudDialogflowV2SuggestArticlesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets suggested articles for a participant based on specific historical messages.
     * @param {String} parent Required. The name of the participant to fetch suggestion for. Format: `projects//locations//conversations//participants/`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudDialogflowV2SuggestArticlesRequest} [googleCloudDialogflowV2SuggestArticlesRequest] 
     * @param {module:api/ProjectsApi~dialogflowProjectsLocationsConversationsParticipantsSuggestionsSuggestArticlesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudDialogflowV2SuggestArticlesResponse}
     */
    dialogflowProjectsLocationsConversationsParticipantsSuggestionsSuggestArticles(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudDialogflowV2SuggestArticlesRequest'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling dialogflowProjectsLocationsConversationsParticipantsSuggestionsSuggestArticles");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudDialogflowV2SuggestArticlesResponse;
      return this.apiClient.callApi(
        '/v2/{parent}/suggestions:suggestArticles', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dialogflowProjectsLocationsConversationsParticipantsSuggestionsSuggestFaqAnswers operation.
     * @callback module:api/ProjectsApi~dialogflowProjectsLocationsConversationsParticipantsSuggestionsSuggestFaqAnswersCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudDialogflowV2SuggestFaqAnswersResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets suggested faq answers for a participant based on specific historical messages.
     * @param {String} parent Required. The name of the participant to fetch suggestion for. Format: `projects//locations//conversations//participants/`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudDialogflowV2SuggestFaqAnswersRequest} [googleCloudDialogflowV2SuggestFaqAnswersRequest] 
     * @param {module:api/ProjectsApi~dialogflowProjectsLocationsConversationsParticipantsSuggestionsSuggestFaqAnswersCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudDialogflowV2SuggestFaqAnswersResponse}
     */
    dialogflowProjectsLocationsConversationsParticipantsSuggestionsSuggestFaqAnswers(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudDialogflowV2SuggestFaqAnswersRequest'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling dialogflowProjectsLocationsConversationsParticipantsSuggestionsSuggestFaqAnswers");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudDialogflowV2SuggestFaqAnswersResponse;
      return this.apiClient.callApi(
        '/v2/{parent}/suggestions:suggestFaqAnswers', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dialogflowProjectsLocationsConversationsParticipantsSuggestionsSuggestSmartReplies operation.
     * @callback module:api/ProjectsApi~dialogflowProjectsLocationsConversationsParticipantsSuggestionsSuggestSmartRepliesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudDialogflowV2SuggestSmartRepliesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets smart replies for a participant based on specific historical messages.
     * @param {String} parent Required. The name of the participant to fetch suggestion for. Format: `projects//locations//conversations//participants/`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudDialogflowV2SuggestSmartRepliesRequest} [googleCloudDialogflowV2SuggestSmartRepliesRequest] 
     * @param {module:api/ProjectsApi~dialogflowProjectsLocationsConversationsParticipantsSuggestionsSuggestSmartRepliesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudDialogflowV2SuggestSmartRepliesResponse}
     */
    dialogflowProjectsLocationsConversationsParticipantsSuggestionsSuggestSmartReplies(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudDialogflowV2SuggestSmartRepliesRequest'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling dialogflowProjectsLocationsConversationsParticipantsSuggestionsSuggestSmartReplies");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudDialogflowV2SuggestSmartRepliesResponse;
      return this.apiClient.callApi(
        '/v2/{parent}/suggestions:suggestSmartReplies', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dialogflowProjectsLocationsConversationsSuggestionsSearchKnowledge operation.
     * @callback module:api/ProjectsApi~dialogflowProjectsLocationsConversationsSuggestionsSearchKnowledgeCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudDialogflowV2SearchKnowledgeResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get answers for the given query based on knowledge documents.
     * @param {String} conversation The conversation (between human agent and end user) where the search request is triggered. Format: `projects//locations//conversations/`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudDialogflowV2SearchKnowledgeRequest} [googleCloudDialogflowV2SearchKnowledgeRequest] 
     * @param {module:api/ProjectsApi~dialogflowProjectsLocationsConversationsSuggestionsSearchKnowledgeCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudDialogflowV2SearchKnowledgeResponse}
     */
    dialogflowProjectsLocationsConversationsSuggestionsSearchKnowledge(conversation, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudDialogflowV2SearchKnowledgeRequest'];
      // verify the required parameter 'conversation' is set
      if (conversation === undefined || conversation === null) {
        throw new Error("Missing the required parameter 'conversation' when calling dialogflowProjectsLocationsConversationsSuggestionsSearchKnowledge");
      }

      let pathParams = {
        'conversation': conversation
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudDialogflowV2SearchKnowledgeResponse;
      return this.apiClient.callApi(
        '/v2/{conversation}/suggestions:searchKnowledge', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dialogflowProjectsLocationsConversationsSuggestionsSuggestConversationSummary operation.
     * @callback module:api/ProjectsApi~dialogflowProjectsLocationsConversationsSuggestionsSuggestConversationSummaryCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudDialogflowV2SuggestConversationSummaryResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Suggests summary for a conversation based on specific historical messages. The range of the messages to be used for summary can be specified in the request.
     * @param {String} conversation Required. The conversation to fetch suggestion for. Format: `projects//locations//conversations/`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudDialogflowV2SuggestConversationSummaryRequest} [googleCloudDialogflowV2SuggestConversationSummaryRequest] 
     * @param {module:api/ProjectsApi~dialogflowProjectsLocationsConversationsSuggestionsSuggestConversationSummaryCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudDialogflowV2SuggestConversationSummaryResponse}
     */
    dialogflowProjectsLocationsConversationsSuggestionsSuggestConversationSummary(conversation, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudDialogflowV2SuggestConversationSummaryRequest'];
      // verify the required parameter 'conversation' is set
      if (conversation === undefined || conversation === null) {
        throw new Error("Missing the required parameter 'conversation' when calling dialogflowProjectsLocationsConversationsSuggestionsSuggestConversationSummary");
      }

      let pathParams = {
        'conversation': conversation
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudDialogflowV2SuggestConversationSummaryResponse;
      return this.apiClient.callApi(
        '/v2/{conversation}/suggestions:suggestConversationSummary', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dialogflowProjectsLocationsDeleteAgent operation.
     * @callback module:api/ProjectsApi~dialogflowProjectsLocationsDeleteAgentCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes the specified agent.
     * @param {String} parent Required. The project that the agent to delete is associated with. Format: `projects/`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:api/ProjectsApi~dialogflowProjectsLocationsDeleteAgentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    dialogflowProjectsLocationsDeleteAgent(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling dialogflowProjectsLocationsDeleteAgent");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/v2/{parent}/agent', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dialogflowProjectsLocationsGetAgent operation.
     * @callback module:api/ProjectsApi~dialogflowProjectsLocationsGetAgentCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudDialogflowV2Agent} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves the specified agent.
     * @param {String} parent Required. The project that the agent to fetch is associated with. Format: `projects/`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:api/ProjectsApi~dialogflowProjectsLocationsGetAgentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudDialogflowV2Agent}
     */
    dialogflowProjectsLocationsGetAgent(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling dialogflowProjectsLocationsGetAgent");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudDialogflowV2Agent;
      return this.apiClient.callApi(
        '/v2/{parent}/agent', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dialogflowProjectsLocationsKnowledgeBasesCreate operation.
     * @callback module:api/ProjectsApi~dialogflowProjectsLocationsKnowledgeBasesCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudDialogflowV2KnowledgeBase} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a knowledge base.
     * @param {String} parent Required. The project to create a knowledge base for. Format: `projects//locations/`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudDialogflowV2KnowledgeBase} [googleCloudDialogflowV2KnowledgeBase] 
     * @param {module:api/ProjectsApi~dialogflowProjectsLocationsKnowledgeBasesCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudDialogflowV2KnowledgeBase}
     */
    dialogflowProjectsLocationsKnowledgeBasesCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudDialogflowV2KnowledgeBase'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling dialogflowProjectsLocationsKnowledgeBasesCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudDialogflowV2KnowledgeBase;
      return this.apiClient.callApi(
        '/v2/{parent}/knowledgeBases', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dialogflowProjectsLocationsKnowledgeBasesDocumentsCreate operation.
     * @callback module:api/ProjectsApi~dialogflowProjectsLocationsKnowledgeBasesDocumentsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a new document. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following method-specific fields: - `metadata`: KnowledgeOperationMetadata - `response`: Document
     * @param {String} parent Required. The knowledge base to create a document for. Format: `projects//locations//knowledgeBases/`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudDialogflowV2Document} [googleCloudDialogflowV2Document] 
     * @param {module:api/ProjectsApi~dialogflowProjectsLocationsKnowledgeBasesDocumentsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    dialogflowProjectsLocationsKnowledgeBasesDocumentsCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudDialogflowV2Document'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling dialogflowProjectsLocationsKnowledgeBasesDocumentsCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v2/{parent}/documents', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dialogflowProjectsLocationsKnowledgeBasesDocumentsDelete operation.
     * @callback module:api/ProjectsApi~dialogflowProjectsLocationsKnowledgeBasesDocumentsDeleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes the specified document. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following method-specific fields: - `metadata`: KnowledgeOperationMetadata - `response`: An [Empty message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
     * @param {String} name Required. The name of the document to delete. Format: `projects//locations//knowledgeBases//documents/`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Boolean} [force] Optional. Force deletes the knowledge base. When set to true, any documents in the knowledge base are also deleted.
     * @param {module:api/ProjectsApi~dialogflowProjectsLocationsKnowledgeBasesDocumentsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    dialogflowProjectsLocationsKnowledgeBasesDocumentsDelete(name, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling dialogflowProjectsLocationsKnowledgeBasesDocumentsDelete");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'force': opts['force']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v2/{name}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dialogflowProjectsLocationsKnowledgeBasesDocumentsExport operation.
     * @callback module:api/ProjectsApi~dialogflowProjectsLocationsKnowledgeBasesDocumentsExportCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Exports a smart messaging candidate document into the specified destination. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following method-specific fields: - `metadata`: KnowledgeOperationMetadata - `response`: Document
     * @param {String} name Required. The name of the document to export. Format: `projects//locations//knowledgeBases//documents/`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudDialogflowV2ExportDocumentRequest} [googleCloudDialogflowV2ExportDocumentRequest] 
     * @param {module:api/ProjectsApi~dialogflowProjectsLocationsKnowledgeBasesDocumentsExportCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    dialogflowProjectsLocationsKnowledgeBasesDocumentsExport(name, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudDialogflowV2ExportDocumentRequest'];
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling dialogflowProjectsLocationsKnowledgeBasesDocumentsExport");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v2/{name}:export', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dialogflowProjectsLocationsKnowledgeBasesDocumentsImport operation.
     * @callback module:api/ProjectsApi~dialogflowProjectsLocationsKnowledgeBasesDocumentsImportCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates documents by importing data from external sources. Dialogflow supports up to 350 documents in each request. If you try to import more, Dialogflow will return an error. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following method-specific fields: - `metadata`: KnowledgeOperationMetadata - `response`: ImportDocumentsResponse
     * @param {String} parent Required. The knowledge base to import documents into. Format: `projects//locations//knowledgeBases/`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudDialogflowV2ImportDocumentsRequest} [googleCloudDialogflowV2ImportDocumentsRequest] 
     * @param {module:api/ProjectsApi~dialogflowProjectsLocationsKnowledgeBasesDocumentsImportCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    dialogflowProjectsLocationsKnowledgeBasesDocumentsImport(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudDialogflowV2ImportDocumentsRequest'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling dialogflowProjectsLocationsKnowledgeBasesDocumentsImport");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v2/{parent}/documents:import', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dialogflowProjectsLocationsKnowledgeBasesDocumentsList operation.
     * @callback module:api/ProjectsApi~dialogflowProjectsLocationsKnowledgeBasesDocumentsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudDialogflowV2ListDocumentsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns the list of all documents of the knowledge base.
     * @param {String} parent Required. The knowledge base to list all documents for. Format: `projects//locations//knowledgeBases/`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [filter] The filter expression used to filter documents returned by the list method. The expression has the following syntax: [AND ] ... The following fields and operators are supported: * knowledge_types with has(:) operator * display_name with has(:) operator * state with equals(=) operator Examples: * \"knowledge_types:FAQ\" matches documents with FAQ knowledge type. * \"display_name:customer\" matches documents whose display name contains \"customer\". * \"state=ACTIVE\" matches documents with ACTIVE state. * \"knowledge_types:FAQ AND state=ACTIVE\" matches all active FAQ documents. For more information about filtering, see [API Filtering](https://aip.dev/160).
     * @param {Number} [pageSize] The maximum number of items to return in a single page. By default 10 and at most 100.
     * @param {String} [pageToken] The next_page_token value returned from a previous list request.
     * @param {module:api/ProjectsApi~dialogflowProjectsLocationsKnowledgeBasesDocumentsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudDialogflowV2ListDocumentsResponse}
     */
    dialogflowProjectsLocationsKnowledgeBasesDocumentsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling dialogflowProjectsLocationsKnowledgeBasesDocumentsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'filter': opts['filter'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudDialogflowV2ListDocumentsResponse;
      return this.apiClient.callApi(
        '/v2/{parent}/documents', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dialogflowProjectsLocationsKnowledgeBasesDocumentsPatch operation.
     * @callback module:api/ProjectsApi~dialogflowProjectsLocationsKnowledgeBasesDocumentsPatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates the specified document. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following method-specific fields: - `metadata`: KnowledgeOperationMetadata - `response`: Document
     * @param {String} name Optional. The document resource name. The name must be empty when creating a document. Format: `projects//locations//knowledgeBases//documents/`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/String} [updateMask] Optional. Not specified means `update all`. Currently, only `display_name` can be updated, an InvalidArgument will be returned for attempting to update other fields.
     * @param {String} [languageCode] Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
     * @param {module:model/GoogleCloudDialogflowV2Document} [googleCloudDialogflowV2Document] 
     * @param {module:api/ProjectsApi~dialogflowProjectsLocationsKnowledgeBasesDocumentsPatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    dialogflowProjectsLocationsKnowledgeBasesDocumentsPatch(name, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudDialogflowV2Document'];
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling dialogflowProjectsLocationsKnowledgeBasesDocumentsPatch");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'updateMask': opts['updateMask'],
        'languageCode': opts['languageCode']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v2/{name}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dialogflowProjectsLocationsKnowledgeBasesDocumentsReload operation.
     * @callback module:api/ProjectsApi~dialogflowProjectsLocationsKnowledgeBasesDocumentsReloadCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Reloads the specified document from its specified source, content_uri or content. The previously loaded content of the document will be deleted. Note: Even when the content of the document has not changed, there still may be side effects because of internal implementation changes. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following method-specific fields: - `metadata`: KnowledgeOperationMetadata - `response`: Document Note: The `projects.agent.knowledgeBases.documents` resource is deprecated; only use `projects.knowledgeBases.documents`.
     * @param {String} name Required. The name of the document to reload. Format: `projects//locations//knowledgeBases//documents/`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudDialogflowV2ReloadDocumentRequest} [googleCloudDialogflowV2ReloadDocumentRequest] 
     * @param {module:api/ProjectsApi~dialogflowProjectsLocationsKnowledgeBasesDocumentsReloadCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    dialogflowProjectsLocationsKnowledgeBasesDocumentsReload(name, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudDialogflowV2ReloadDocumentRequest'];
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling dialogflowProjectsLocationsKnowledgeBasesDocumentsReload");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v2/{name}:reload', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dialogflowProjectsLocationsKnowledgeBasesList operation.
     * @callback module:api/ProjectsApi~dialogflowProjectsLocationsKnowledgeBasesListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudDialogflowV2ListKnowledgeBasesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns the list of all knowledge bases of the specified agent.
     * @param {String} parent Required. The project to list of knowledge bases for. Format: `projects//locations/`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [filter] The filter expression used to filter knowledge bases returned by the list method. The expression has the following syntax: [AND ] ... The following fields and operators are supported: * display_name with has(:) operator * language_code with equals(=) operator Examples: * 'language_code=en-us' matches knowledge bases with en-us language code. * 'display_name:articles' matches knowledge bases whose display name contains \"articles\". * 'display_name:\"Best Articles\"' matches knowledge bases whose display name contains \"Best Articles\". * 'language_code=en-gb AND display_name=articles' matches all knowledge bases whose display name contains \"articles\" and whose language code is \"en-gb\". Note: An empty filter string (i.e. \"\") is a no-op and will result in no filtering. For more information about filtering, see [API Filtering](https://aip.dev/160).
     * @param {Number} [pageSize] The maximum number of items to return in a single page. By default 10 and at most 100.
     * @param {String} [pageToken] The next_page_token value returned from a previous list request.
     * @param {module:api/ProjectsApi~dialogflowProjectsLocationsKnowledgeBasesListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudDialogflowV2ListKnowledgeBasesResponse}
     */
    dialogflowProjectsLocationsKnowledgeBasesList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling dialogflowProjectsLocationsKnowledgeBasesList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'filter': opts['filter'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudDialogflowV2ListKnowledgeBasesResponse;
      return this.apiClient.callApi(
        '/v2/{parent}/knowledgeBases', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dialogflowProjectsLocationsList operation.
     * @callback module:api/ProjectsApi~dialogflowProjectsLocationsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudLocationListLocationsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists information about the supported locations for this service.
     * @param {String} name The resource that owns the locations collection, if applicable.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [filter] A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).
     * @param {Number} [pageSize] The maximum number of results to return. If not set, the service selects a default.
     * @param {String} [pageToken] A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.
     * @param {module:api/ProjectsApi~dialogflowProjectsLocationsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudLocationListLocationsResponse}
     */
    dialogflowProjectsLocationsList(name, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling dialogflowProjectsLocationsList");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'filter': opts['filter'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudLocationListLocationsResponse;
      return this.apiClient.callApi(
        '/v2/{name}/locations', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dialogflowProjectsLocationsSetAgent operation.
     * @callback module:api/ProjectsApi~dialogflowProjectsLocationsSetAgentCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudDialogflowV2Agent} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates/updates the specified agent. Note: You should always train an agent prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).
     * @param {String} parent Required. The project of this agent. Format: `projects/`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [updateMask] Optional. The mask to control which fields get updated.
     * @param {module:model/GoogleCloudDialogflowV2Agent} [googleCloudDialogflowV2Agent] 
     * @param {module:api/ProjectsApi~dialogflowProjectsLocationsSetAgentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudDialogflowV2Agent}
     */
    dialogflowProjectsLocationsSetAgent(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudDialogflowV2Agent'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling dialogflowProjectsLocationsSetAgent");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'updateMask': opts['updateMask']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudDialogflowV2Agent;
      return this.apiClient.callApi(
        '/v2/{parent}/agent', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dialogflowProjectsOperationsCancel operation.
     * @callback module:api/ProjectsApi~dialogflowProjectsOperationsCancelCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
     * @param {String} name The name of the operation resource to be cancelled.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:api/ProjectsApi~dialogflowProjectsOperationsCancelCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    dialogflowProjectsOperationsCancel(name, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling dialogflowProjectsOperationsCancel");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/v2/{name}:cancel', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dialogflowProjectsOperationsGet operation.
     * @callback module:api/ProjectsApi~dialogflowProjectsOperationsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
     * @param {String} name The name of the operation resource.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/String} [intentView] Optional. The resource view to apply to the returned intent.
     * @param {String} [languageCode] Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
     * @param {module:api/ProjectsApi~dialogflowProjectsOperationsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    dialogflowProjectsOperationsGet(name, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling dialogflowProjectsOperationsGet");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'intentView': opts['intentView'],
        'languageCode': opts['languageCode']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v2/{name}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dialogflowProjectsOperationsList operation.
     * @callback module:api/ProjectsApi~dialogflowProjectsOperationsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningListOperationsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.
     * @param {String} name The name of the operation's parent resource.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [filter] The standard list filter.
     * @param {Number} [pageSize] The standard list page size.
     * @param {String} [pageToken] The standard list page token.
     * @param {module:api/ProjectsApi~dialogflowProjectsOperationsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningListOperationsResponse}
     */
    dialogflowProjectsOperationsList(name, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling dialogflowProjectsOperationsList");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'filter': opts['filter'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningListOperationsResponse;
      return this.apiClient.callApi(
        '/v2/{name}/operations', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dialogflowProjectsSuggestionsGenerateStatelessSummary operation.
     * @callback module:api/ProjectsApi~dialogflowProjectsSuggestionsGenerateStatelessSummaryCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudDialogflowV2GenerateStatelessSummaryResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Generates and returns a summary for a conversation that does not have a resource created for it.
     * @param {String} parent Required. The parent resource to charge for the Summary's generation. Format: `projects//locations/`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudDialogflowV2GenerateStatelessSummaryRequest} [googleCloudDialogflowV2GenerateStatelessSummaryRequest] 
     * @param {module:api/ProjectsApi~dialogflowProjectsSuggestionsGenerateStatelessSummaryCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudDialogflowV2GenerateStatelessSummaryResponse}
     */
    dialogflowProjectsSuggestionsGenerateStatelessSummary(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudDialogflowV2GenerateStatelessSummaryRequest'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling dialogflowProjectsSuggestionsGenerateStatelessSummary");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudDialogflowV2GenerateStatelessSummaryResponse;
      return this.apiClient.callApi(
        '/v2/{parent}/suggestions:generateStatelessSummary', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dialogflowProjectsSuggestionsSearchKnowledge operation.
     * @callback module:api/ProjectsApi~dialogflowProjectsSuggestionsSearchKnowledgeCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudDialogflowV2SearchKnowledgeResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get answers for the given query based on knowledge documents.
     * @param {String} parent The parent resource contains the conversation profile Format: 'projects/' or `projects//locations/`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudDialogflowV2SearchKnowledgeRequest} [googleCloudDialogflowV2SearchKnowledgeRequest] 
     * @param {module:api/ProjectsApi~dialogflowProjectsSuggestionsSearchKnowledgeCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudDialogflowV2SearchKnowledgeResponse}
     */
    dialogflowProjectsSuggestionsSearchKnowledge(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudDialogflowV2SearchKnowledgeRequest'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling dialogflowProjectsSuggestionsSearchKnowledge");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudDialogflowV2SearchKnowledgeResponse;
      return this.apiClient.callApi(
        '/v2/{parent}/suggestions:searchKnowledge', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
