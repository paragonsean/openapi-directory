# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, answer: str=None, faq_question: str=None, match_confidence: float=None, match_confidence_level: str=None, source: str=None):
        """GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer - a model defined in OpenAPI

        :param answer: The answer of this GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer.
        :param faq_question: The faq_question of this GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer.
        :param match_confidence: The match_confidence of this GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer.
        :param match_confidence_level: The match_confidence_level of this GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer.
        :param source: The source of this GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer.
        """
        self.openapi_types = {
            'answer': str,
            'faq_question': str,
            'match_confidence': float,
            'match_confidence_level': str,
            'source': str
        }

        self.attribute_map = {
            'answer': 'answer',
            'faq_question': 'faqQuestion',
            'match_confidence': 'matchConfidence',
            'match_confidence_level': 'matchConfidenceLevel',
            'source': 'source'
        }

        self._answer = answer
        self._faq_question = faq_question
        self._match_confidence = match_confidence
        self._match_confidence_level = match_confidence_level
        self._source = source

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer of this GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def answer(self):
        """Gets the answer of this GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer.

        The piece of text from the `source` knowledge base document that answers this conversational query.

        :return: The answer of this GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer.
        :rtype: str
        """
        return self._answer

    @answer.setter
    def answer(self, answer):
        """Sets the answer of this GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer.

        The piece of text from the `source` knowledge base document that answers this conversational query.

        :param answer: The answer of this GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer.
        :type answer: str
        """

        self._answer = answer

    @property
    def faq_question(self):
        """Gets the faq_question of this GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer.

        The corresponding FAQ question if the answer was extracted from a FAQ Document, empty otherwise.

        :return: The faq_question of this GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer.
        :rtype: str
        """
        return self._faq_question

    @faq_question.setter
    def faq_question(self, faq_question):
        """Sets the faq_question of this GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer.

        The corresponding FAQ question if the answer was extracted from a FAQ Document, empty otherwise.

        :param faq_question: The faq_question of this GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer.
        :type faq_question: str
        """

        self._faq_question = faq_question

    @property
    def match_confidence(self):
        """Gets the match_confidence of this GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer.

        The system's confidence score that this Knowledge answer is a good match for this conversational query. The range is from 0.0 (completely uncertain) to 1.0 (completely certain). Note: The confidence score is likely to vary somewhat (possibly even for identical requests), as the underlying model is under constant improvement. It may be deprecated in the future. We recommend using `match_confidence_level` which should be generally more stable.

        :return: The match_confidence of this GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer.
        :rtype: float
        """
        return self._match_confidence

    @match_confidence.setter
    def match_confidence(self, match_confidence):
        """Sets the match_confidence of this GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer.

        The system's confidence score that this Knowledge answer is a good match for this conversational query. The range is from 0.0 (completely uncertain) to 1.0 (completely certain). Note: The confidence score is likely to vary somewhat (possibly even for identical requests), as the underlying model is under constant improvement. It may be deprecated in the future. We recommend using `match_confidence_level` which should be generally more stable.

        :param match_confidence: The match_confidence of this GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer.
        :type match_confidence: float
        """

        self._match_confidence = match_confidence

    @property
    def match_confidence_level(self):
        """Gets the match_confidence_level of this GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer.

        The system's confidence level that this knowledge answer is a good match for this conversational query. NOTE: The confidence level for a given `` pair may change without notice, as it depends on models that are constantly being improved. However, it will change less frequently than the confidence score below, and should be preferred for referencing the quality of an answer.

        :return: The match_confidence_level of this GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer.
        :rtype: str
        """
        return self._match_confidence_level

    @match_confidence_level.setter
    def match_confidence_level(self, match_confidence_level):
        """Sets the match_confidence_level of this GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer.

        The system's confidence level that this knowledge answer is a good match for this conversational query. NOTE: The confidence level for a given `` pair may change without notice, as it depends on models that are constantly being improved. However, it will change less frequently than the confidence score below, and should be preferred for referencing the quality of an answer.

        :param match_confidence_level: The match_confidence_level of this GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer.
        :type match_confidence_level: str
        """
        allowed_values = ["MATCH_CONFIDENCE_LEVEL_UNSPECIFIED", "LOW", "MEDIUM", "HIGH"]  # noqa: E501
        if match_confidence_level not in allowed_values:
            raise ValueError(
                "Invalid value for `match_confidence_level` ({0}), must be one of {1}"
                .format(match_confidence_level, allowed_values)
            )

        self._match_confidence_level = match_confidence_level

    @property
    def source(self):
        """Gets the source of this GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer.

        Indicates which Knowledge Document this answer was extracted from. Format: `projects//knowledgeBases//documents/`.

        :return: The source of this GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer.
        :rtype: str
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer.

        Indicates which Knowledge Document this answer was extracted from. Format: `projects//knowledgeBases//documents/`.

        :param source: The source of this GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer.
        :type source: str
        """

        self._source = source
