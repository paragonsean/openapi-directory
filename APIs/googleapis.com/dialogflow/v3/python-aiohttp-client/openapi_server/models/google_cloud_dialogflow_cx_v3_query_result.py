# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_dialogflow_cx_v3_advanced_settings import GoogleCloudDialogflowCxV3AdvancedSettings
from openapi_server.models.google_cloud_dialogflow_cx_v3_dtmf_input import GoogleCloudDialogflowCxV3DtmfInput
from openapi_server.models.google_cloud_dialogflow_cx_v3_intent import GoogleCloudDialogflowCxV3Intent
from openapi_server.models.google_cloud_dialogflow_cx_v3_match import GoogleCloudDialogflowCxV3Match
from openapi_server.models.google_cloud_dialogflow_cx_v3_page import GoogleCloudDialogflowCxV3Page
from openapi_server.models.google_cloud_dialogflow_cx_v3_response_message import GoogleCloudDialogflowCxV3ResponseMessage
from openapi_server.models.google_cloud_dialogflow_cx_v3_sentiment_analysis_result import GoogleCloudDialogflowCxV3SentimentAnalysisResult
from openapi_server.models.google_rpc_status import GoogleRpcStatus
from openapi_server import util


class GoogleCloudDialogflowCxV3QueryResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, advanced_settings: GoogleCloudDialogflowCxV3AdvancedSettings=None, allow_answer_feedback: bool=None, current_page: GoogleCloudDialogflowCxV3Page=None, diagnostic_info: Dict[str, object]=None, dtmf: GoogleCloudDialogflowCxV3DtmfInput=None, intent: GoogleCloudDialogflowCxV3Intent=None, intent_detection_confidence: float=None, language_code: str=None, match: GoogleCloudDialogflowCxV3Match=None, parameters: Dict[str, object]=None, response_messages: List[GoogleCloudDialogflowCxV3ResponseMessage]=None, sentiment_analysis_result: GoogleCloudDialogflowCxV3SentimentAnalysisResult=None, text: str=None, transcript: str=None, trigger_event: str=None, trigger_intent: str=None, webhook_payloads: List[Dict[str, object]]=None, webhook_statuses: List[GoogleRpcStatus]=None):
        """GoogleCloudDialogflowCxV3QueryResult - a model defined in OpenAPI

        :param advanced_settings: The advanced_settings of this GoogleCloudDialogflowCxV3QueryResult.
        :param allow_answer_feedback: The allow_answer_feedback of this GoogleCloudDialogflowCxV3QueryResult.
        :param current_page: The current_page of this GoogleCloudDialogflowCxV3QueryResult.
        :param diagnostic_info: The diagnostic_info of this GoogleCloudDialogflowCxV3QueryResult.
        :param dtmf: The dtmf of this GoogleCloudDialogflowCxV3QueryResult.
        :param intent: The intent of this GoogleCloudDialogflowCxV3QueryResult.
        :param intent_detection_confidence: The intent_detection_confidence of this GoogleCloudDialogflowCxV3QueryResult.
        :param language_code: The language_code of this GoogleCloudDialogflowCxV3QueryResult.
        :param match: The match of this GoogleCloudDialogflowCxV3QueryResult.
        :param parameters: The parameters of this GoogleCloudDialogflowCxV3QueryResult.
        :param response_messages: The response_messages of this GoogleCloudDialogflowCxV3QueryResult.
        :param sentiment_analysis_result: The sentiment_analysis_result of this GoogleCloudDialogflowCxV3QueryResult.
        :param text: The text of this GoogleCloudDialogflowCxV3QueryResult.
        :param transcript: The transcript of this GoogleCloudDialogflowCxV3QueryResult.
        :param trigger_event: The trigger_event of this GoogleCloudDialogflowCxV3QueryResult.
        :param trigger_intent: The trigger_intent of this GoogleCloudDialogflowCxV3QueryResult.
        :param webhook_payloads: The webhook_payloads of this GoogleCloudDialogflowCxV3QueryResult.
        :param webhook_statuses: The webhook_statuses of this GoogleCloudDialogflowCxV3QueryResult.
        """
        self.openapi_types = {
            'advanced_settings': GoogleCloudDialogflowCxV3AdvancedSettings,
            'allow_answer_feedback': bool,
            'current_page': GoogleCloudDialogflowCxV3Page,
            'diagnostic_info': Dict[str, object],
            'dtmf': GoogleCloudDialogflowCxV3DtmfInput,
            'intent': GoogleCloudDialogflowCxV3Intent,
            'intent_detection_confidence': float,
            'language_code': str,
            'match': GoogleCloudDialogflowCxV3Match,
            'parameters': Dict[str, object],
            'response_messages': List[GoogleCloudDialogflowCxV3ResponseMessage],
            'sentiment_analysis_result': GoogleCloudDialogflowCxV3SentimentAnalysisResult,
            'text': str,
            'transcript': str,
            'trigger_event': str,
            'trigger_intent': str,
            'webhook_payloads': List[Dict[str, object]],
            'webhook_statuses': List[GoogleRpcStatus]
        }

        self.attribute_map = {
            'advanced_settings': 'advancedSettings',
            'allow_answer_feedback': 'allowAnswerFeedback',
            'current_page': 'currentPage',
            'diagnostic_info': 'diagnosticInfo',
            'dtmf': 'dtmf',
            'intent': 'intent',
            'intent_detection_confidence': 'intentDetectionConfidence',
            'language_code': 'languageCode',
            'match': 'match',
            'parameters': 'parameters',
            'response_messages': 'responseMessages',
            'sentiment_analysis_result': 'sentimentAnalysisResult',
            'text': 'text',
            'transcript': 'transcript',
            'trigger_event': 'triggerEvent',
            'trigger_intent': 'triggerIntent',
            'webhook_payloads': 'webhookPayloads',
            'webhook_statuses': 'webhookStatuses'
        }

        self._advanced_settings = advanced_settings
        self._allow_answer_feedback = allow_answer_feedback
        self._current_page = current_page
        self._diagnostic_info = diagnostic_info
        self._dtmf = dtmf
        self._intent = intent
        self._intent_detection_confidence = intent_detection_confidence
        self._language_code = language_code
        self._match = match
        self._parameters = parameters
        self._response_messages = response_messages
        self._sentiment_analysis_result = sentiment_analysis_result
        self._text = text
        self._transcript = transcript
        self._trigger_event = trigger_event
        self._trigger_intent = trigger_intent
        self._webhook_payloads = webhook_payloads
        self._webhook_statuses = webhook_statuses

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDialogflowCxV3QueryResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDialogflowCxV3QueryResult of this GoogleCloudDialogflowCxV3QueryResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def advanced_settings(self):
        """Gets the advanced_settings of this GoogleCloudDialogflowCxV3QueryResult.


        :return: The advanced_settings of this GoogleCloudDialogflowCxV3QueryResult.
        :rtype: GoogleCloudDialogflowCxV3AdvancedSettings
        """
        return self._advanced_settings

    @advanced_settings.setter
    def advanced_settings(self, advanced_settings):
        """Sets the advanced_settings of this GoogleCloudDialogflowCxV3QueryResult.


        :param advanced_settings: The advanced_settings of this GoogleCloudDialogflowCxV3QueryResult.
        :type advanced_settings: GoogleCloudDialogflowCxV3AdvancedSettings
        """

        self._advanced_settings = advanced_settings

    @property
    def allow_answer_feedback(self):
        """Gets the allow_answer_feedback of this GoogleCloudDialogflowCxV3QueryResult.

        Indicates whether the Thumbs up/Thumbs down rating controls are need to be shown for the response in the Dialogflow Messenger widget.

        :return: The allow_answer_feedback of this GoogleCloudDialogflowCxV3QueryResult.
        :rtype: bool
        """
        return self._allow_answer_feedback

    @allow_answer_feedback.setter
    def allow_answer_feedback(self, allow_answer_feedback):
        """Sets the allow_answer_feedback of this GoogleCloudDialogflowCxV3QueryResult.

        Indicates whether the Thumbs up/Thumbs down rating controls are need to be shown for the response in the Dialogflow Messenger widget.

        :param allow_answer_feedback: The allow_answer_feedback of this GoogleCloudDialogflowCxV3QueryResult.
        :type allow_answer_feedback: bool
        """

        self._allow_answer_feedback = allow_answer_feedback

    @property
    def current_page(self):
        """Gets the current_page of this GoogleCloudDialogflowCxV3QueryResult.


        :return: The current_page of this GoogleCloudDialogflowCxV3QueryResult.
        :rtype: GoogleCloudDialogflowCxV3Page
        """
        return self._current_page

    @current_page.setter
    def current_page(self, current_page):
        """Sets the current_page of this GoogleCloudDialogflowCxV3QueryResult.


        :param current_page: The current_page of this GoogleCloudDialogflowCxV3QueryResult.
        :type current_page: GoogleCloudDialogflowCxV3Page
        """

        self._current_page = current_page

    @property
    def diagnostic_info(self):
        """Gets the diagnostic_info of this GoogleCloudDialogflowCxV3QueryResult.

        The free-form diagnostic info. For example, this field could contain webhook call latency. The fields of this data can change without notice, so you should not write code that depends on its structure. One of the fields is called \"Alternative Matched Intents\", which may aid with debugging. The following describes these intent results: - The list is empty if no intent was matched to end-user input. - Only intents that are referenced in the currently active flow are included. - The matched intent is included. - Other intents that could have matched end-user input, but did not match because they are referenced by intent routes that are out of [scope](https://cloud.google.com/dialogflow/cx/docs/concept/handler#scope), are included. - Other intents referenced by intent routes in scope that matched end-user input, but had a lower confidence score.

        :return: The diagnostic_info of this GoogleCloudDialogflowCxV3QueryResult.
        :rtype: Dict[str, object]
        """
        return self._diagnostic_info

    @diagnostic_info.setter
    def diagnostic_info(self, diagnostic_info):
        """Sets the diagnostic_info of this GoogleCloudDialogflowCxV3QueryResult.

        The free-form diagnostic info. For example, this field could contain webhook call latency. The fields of this data can change without notice, so you should not write code that depends on its structure. One of the fields is called \"Alternative Matched Intents\", which may aid with debugging. The following describes these intent results: - The list is empty if no intent was matched to end-user input. - Only intents that are referenced in the currently active flow are included. - The matched intent is included. - Other intents that could have matched end-user input, but did not match because they are referenced by intent routes that are out of [scope](https://cloud.google.com/dialogflow/cx/docs/concept/handler#scope), are included. - Other intents referenced by intent routes in scope that matched end-user input, but had a lower confidence score.

        :param diagnostic_info: The diagnostic_info of this GoogleCloudDialogflowCxV3QueryResult.
        :type diagnostic_info: Dict[str, object]
        """

        self._diagnostic_info = diagnostic_info

    @property
    def dtmf(self):
        """Gets the dtmf of this GoogleCloudDialogflowCxV3QueryResult.


        :return: The dtmf of this GoogleCloudDialogflowCxV3QueryResult.
        :rtype: GoogleCloudDialogflowCxV3DtmfInput
        """
        return self._dtmf

    @dtmf.setter
    def dtmf(self, dtmf):
        """Sets the dtmf of this GoogleCloudDialogflowCxV3QueryResult.


        :param dtmf: The dtmf of this GoogleCloudDialogflowCxV3QueryResult.
        :type dtmf: GoogleCloudDialogflowCxV3DtmfInput
        """

        self._dtmf = dtmf

    @property
    def intent(self):
        """Gets the intent of this GoogleCloudDialogflowCxV3QueryResult.


        :return: The intent of this GoogleCloudDialogflowCxV3QueryResult.
        :rtype: GoogleCloudDialogflowCxV3Intent
        """
        return self._intent

    @intent.setter
    def intent(self, intent):
        """Sets the intent of this GoogleCloudDialogflowCxV3QueryResult.


        :param intent: The intent of this GoogleCloudDialogflowCxV3QueryResult.
        :type intent: GoogleCloudDialogflowCxV3Intent
        """

        self._intent = intent

    @property
    def intent_detection_confidence(self):
        """Gets the intent_detection_confidence of this GoogleCloudDialogflowCxV3QueryResult.

        The intent detection confidence. Values range from 0.0 (completely uncertain) to 1.0 (completely certain). This value is for informational purpose only and is only used to help match the best intent within the classification threshold. This value may change for the same end-user expression at any time due to a model retraining or change in implementation. This field is deprecated, please use QueryResult.match instead.

        :return: The intent_detection_confidence of this GoogleCloudDialogflowCxV3QueryResult.
        :rtype: float
        """
        return self._intent_detection_confidence

    @intent_detection_confidence.setter
    def intent_detection_confidence(self, intent_detection_confidence):
        """Sets the intent_detection_confidence of this GoogleCloudDialogflowCxV3QueryResult.

        The intent detection confidence. Values range from 0.0 (completely uncertain) to 1.0 (completely certain). This value is for informational purpose only and is only used to help match the best intent within the classification threshold. This value may change for the same end-user expression at any time due to a model retraining or change in implementation. This field is deprecated, please use QueryResult.match instead.

        :param intent_detection_confidence: The intent_detection_confidence of this GoogleCloudDialogflowCxV3QueryResult.
        :type intent_detection_confidence: float
        """

        self._intent_detection_confidence = intent_detection_confidence

    @property
    def language_code(self):
        """Gets the language_code of this GoogleCloudDialogflowCxV3QueryResult.

        The language that was triggered during intent detection. See [Language Support](https://cloud.google.com/dialogflow/cx/docs/reference/language) for a list of the currently supported language codes.

        :return: The language_code of this GoogleCloudDialogflowCxV3QueryResult.
        :rtype: str
        """
        return self._language_code

    @language_code.setter
    def language_code(self, language_code):
        """Sets the language_code of this GoogleCloudDialogflowCxV3QueryResult.

        The language that was triggered during intent detection. See [Language Support](https://cloud.google.com/dialogflow/cx/docs/reference/language) for a list of the currently supported language codes.

        :param language_code: The language_code of this GoogleCloudDialogflowCxV3QueryResult.
        :type language_code: str
        """

        self._language_code = language_code

    @property
    def match(self):
        """Gets the match of this GoogleCloudDialogflowCxV3QueryResult.


        :return: The match of this GoogleCloudDialogflowCxV3QueryResult.
        :rtype: GoogleCloudDialogflowCxV3Match
        """
        return self._match

    @match.setter
    def match(self, match):
        """Sets the match of this GoogleCloudDialogflowCxV3QueryResult.


        :param match: The match of this GoogleCloudDialogflowCxV3QueryResult.
        :type match: GoogleCloudDialogflowCxV3Match
        """

        self._match = match

    @property
    def parameters(self):
        """Gets the parameters of this GoogleCloudDialogflowCxV3QueryResult.

        The collected session parameters. Depending on your protocol or client library language, this is a map, associative array, symbol table, dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs: * MapKey type: string * MapKey value: parameter name * MapValue type: If parameter's entity type is a composite entity then use map, otherwise, depending on the parameter value type, it could be one of string, number, boolean, null, list or map. * MapValue value: If parameter's entity type is a composite entity then use map from composite entity property names to property values, otherwise, use parameter value.

        :return: The parameters of this GoogleCloudDialogflowCxV3QueryResult.
        :rtype: Dict[str, object]
        """
        return self._parameters

    @parameters.setter
    def parameters(self, parameters):
        """Sets the parameters of this GoogleCloudDialogflowCxV3QueryResult.

        The collected session parameters. Depending on your protocol or client library language, this is a map, associative array, symbol table, dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs: * MapKey type: string * MapKey value: parameter name * MapValue type: If parameter's entity type is a composite entity then use map, otherwise, depending on the parameter value type, it could be one of string, number, boolean, null, list or map. * MapValue value: If parameter's entity type is a composite entity then use map from composite entity property names to property values, otherwise, use parameter value.

        :param parameters: The parameters of this GoogleCloudDialogflowCxV3QueryResult.
        :type parameters: Dict[str, object]
        """

        self._parameters = parameters

    @property
    def response_messages(self):
        """Gets the response_messages of this GoogleCloudDialogflowCxV3QueryResult.

        The list of rich messages returned to the client. Responses vary from simple text messages to more sophisticated, structured payloads used to drive complex logic.

        :return: The response_messages of this GoogleCloudDialogflowCxV3QueryResult.
        :rtype: List[GoogleCloudDialogflowCxV3ResponseMessage]
        """
        return self._response_messages

    @response_messages.setter
    def response_messages(self, response_messages):
        """Sets the response_messages of this GoogleCloudDialogflowCxV3QueryResult.

        The list of rich messages returned to the client. Responses vary from simple text messages to more sophisticated, structured payloads used to drive complex logic.

        :param response_messages: The response_messages of this GoogleCloudDialogflowCxV3QueryResult.
        :type response_messages: List[GoogleCloudDialogflowCxV3ResponseMessage]
        """

        self._response_messages = response_messages

    @property
    def sentiment_analysis_result(self):
        """Gets the sentiment_analysis_result of this GoogleCloudDialogflowCxV3QueryResult.


        :return: The sentiment_analysis_result of this GoogleCloudDialogflowCxV3QueryResult.
        :rtype: GoogleCloudDialogflowCxV3SentimentAnalysisResult
        """
        return self._sentiment_analysis_result

    @sentiment_analysis_result.setter
    def sentiment_analysis_result(self, sentiment_analysis_result):
        """Sets the sentiment_analysis_result of this GoogleCloudDialogflowCxV3QueryResult.


        :param sentiment_analysis_result: The sentiment_analysis_result of this GoogleCloudDialogflowCxV3QueryResult.
        :type sentiment_analysis_result: GoogleCloudDialogflowCxV3SentimentAnalysisResult
        """

        self._sentiment_analysis_result = sentiment_analysis_result

    @property
    def text(self):
        """Gets the text of this GoogleCloudDialogflowCxV3QueryResult.

        If natural language text was provided as input, this field will contain a copy of the text.

        :return: The text of this GoogleCloudDialogflowCxV3QueryResult.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text):
        """Sets the text of this GoogleCloudDialogflowCxV3QueryResult.

        If natural language text was provided as input, this field will contain a copy of the text.

        :param text: The text of this GoogleCloudDialogflowCxV3QueryResult.
        :type text: str
        """

        self._text = text

    @property
    def transcript(self):
        """Gets the transcript of this GoogleCloudDialogflowCxV3QueryResult.

        If natural language speech audio was provided as input, this field will contain the transcript for the audio.

        :return: The transcript of this GoogleCloudDialogflowCxV3QueryResult.
        :rtype: str
        """
        return self._transcript

    @transcript.setter
    def transcript(self, transcript):
        """Sets the transcript of this GoogleCloudDialogflowCxV3QueryResult.

        If natural language speech audio was provided as input, this field will contain the transcript for the audio.

        :param transcript: The transcript of this GoogleCloudDialogflowCxV3QueryResult.
        :type transcript: str
        """

        self._transcript = transcript

    @property
    def trigger_event(self):
        """Gets the trigger_event of this GoogleCloudDialogflowCxV3QueryResult.

        If an event was provided as input, this field will contain the name of the event.

        :return: The trigger_event of this GoogleCloudDialogflowCxV3QueryResult.
        :rtype: str
        """
        return self._trigger_event

    @trigger_event.setter
    def trigger_event(self, trigger_event):
        """Sets the trigger_event of this GoogleCloudDialogflowCxV3QueryResult.

        If an event was provided as input, this field will contain the name of the event.

        :param trigger_event: The trigger_event of this GoogleCloudDialogflowCxV3QueryResult.
        :type trigger_event: str
        """

        self._trigger_event = trigger_event

    @property
    def trigger_intent(self):
        """Gets the trigger_intent of this GoogleCloudDialogflowCxV3QueryResult.

        If an intent was provided as input, this field will contain a copy of the intent identifier. Format: `projects//locations//agents//intents/`.

        :return: The trigger_intent of this GoogleCloudDialogflowCxV3QueryResult.
        :rtype: str
        """
        return self._trigger_intent

    @trigger_intent.setter
    def trigger_intent(self, trigger_intent):
        """Sets the trigger_intent of this GoogleCloudDialogflowCxV3QueryResult.

        If an intent was provided as input, this field will contain a copy of the intent identifier. Format: `projects//locations//agents//intents/`.

        :param trigger_intent: The trigger_intent of this GoogleCloudDialogflowCxV3QueryResult.
        :type trigger_intent: str
        """

        self._trigger_intent = trigger_intent

    @property
    def webhook_payloads(self):
        """Gets the webhook_payloads of this GoogleCloudDialogflowCxV3QueryResult.

        The list of webhook payload in WebhookResponse.payload, in the order of call sequence. If some webhook call fails or doesn't return any payload, an empty `Struct` would be used instead.

        :return: The webhook_payloads of this GoogleCloudDialogflowCxV3QueryResult.
        :rtype: List[Dict[str, object]]
        """
        return self._webhook_payloads

    @webhook_payloads.setter
    def webhook_payloads(self, webhook_payloads):
        """Sets the webhook_payloads of this GoogleCloudDialogflowCxV3QueryResult.

        The list of webhook payload in WebhookResponse.payload, in the order of call sequence. If some webhook call fails or doesn't return any payload, an empty `Struct` would be used instead.

        :param webhook_payloads: The webhook_payloads of this GoogleCloudDialogflowCxV3QueryResult.
        :type webhook_payloads: List[Dict[str, object]]
        """

        self._webhook_payloads = webhook_payloads

    @property
    def webhook_statuses(self):
        """Gets the webhook_statuses of this GoogleCloudDialogflowCxV3QueryResult.

        The list of webhook call status in the order of call sequence.

        :return: The webhook_statuses of this GoogleCloudDialogflowCxV3QueryResult.
        :rtype: List[GoogleRpcStatus]
        """
        return self._webhook_statuses

    @webhook_statuses.setter
    def webhook_statuses(self, webhook_statuses):
        """Sets the webhook_statuses of this GoogleCloudDialogflowCxV3QueryResult.

        The list of webhook call status in the order of call sequence.

        :param webhook_statuses: The webhook_statuses of this GoogleCloudDialogflowCxV3QueryResult.
        :type webhook_statuses: List[GoogleRpcStatus]
        """

        self._webhook_statuses = webhook_statuses
