# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_dialogflow_cx_v3_inline_source import GoogleCloudDialogflowCxV3InlineSource
from openapi_server import util


class GoogleCloudDialogflowCxV3ImportIntentsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, intents_content: GoogleCloudDialogflowCxV3InlineSource=None, intents_uri: str=None, merge_option: str=None):
        """GoogleCloudDialogflowCxV3ImportIntentsRequest - a model defined in OpenAPI

        :param intents_content: The intents_content of this GoogleCloudDialogflowCxV3ImportIntentsRequest.
        :param intents_uri: The intents_uri of this GoogleCloudDialogflowCxV3ImportIntentsRequest.
        :param merge_option: The merge_option of this GoogleCloudDialogflowCxV3ImportIntentsRequest.
        """
        self.openapi_types = {
            'intents_content': GoogleCloudDialogflowCxV3InlineSource,
            'intents_uri': str,
            'merge_option': str
        }

        self.attribute_map = {
            'intents_content': 'intentsContent',
            'intents_uri': 'intentsUri',
            'merge_option': 'mergeOption'
        }

        self._intents_content = intents_content
        self._intents_uri = intents_uri
        self._merge_option = merge_option

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDialogflowCxV3ImportIntentsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDialogflowCxV3ImportIntentsRequest of this GoogleCloudDialogflowCxV3ImportIntentsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def intents_content(self):
        """Gets the intents_content of this GoogleCloudDialogflowCxV3ImportIntentsRequest.


        :return: The intents_content of this GoogleCloudDialogflowCxV3ImportIntentsRequest.
        :rtype: GoogleCloudDialogflowCxV3InlineSource
        """
        return self._intents_content

    @intents_content.setter
    def intents_content(self, intents_content):
        """Sets the intents_content of this GoogleCloudDialogflowCxV3ImportIntentsRequest.


        :param intents_content: The intents_content of this GoogleCloudDialogflowCxV3ImportIntentsRequest.
        :type intents_content: GoogleCloudDialogflowCxV3InlineSource
        """

        self._intents_content = intents_content

    @property
    def intents_uri(self):
        """Gets the intents_uri of this GoogleCloudDialogflowCxV3ImportIntentsRequest.

        The [Google Cloud Storage](https://cloud.google.com/storage/docs/) URI to import intents from. The format of this URI must be `gs:///`. Dialogflow performs a read operation for the Cloud Storage object on the caller's behalf, so your request authentication must have read permissions for the object. For more information, see [Dialogflow access control](https://cloud.google.com/dialogflow/cx/docs/concept/access-control#storage).

        :return: The intents_uri of this GoogleCloudDialogflowCxV3ImportIntentsRequest.
        :rtype: str
        """
        return self._intents_uri

    @intents_uri.setter
    def intents_uri(self, intents_uri):
        """Sets the intents_uri of this GoogleCloudDialogflowCxV3ImportIntentsRequest.

        The [Google Cloud Storage](https://cloud.google.com/storage/docs/) URI to import intents from. The format of this URI must be `gs:///`. Dialogflow performs a read operation for the Cloud Storage object on the caller's behalf, so your request authentication must have read permissions for the object. For more information, see [Dialogflow access control](https://cloud.google.com/dialogflow/cx/docs/concept/access-control#storage).

        :param intents_uri: The intents_uri of this GoogleCloudDialogflowCxV3ImportIntentsRequest.
        :type intents_uri: str
        """

        self._intents_uri = intents_uri

    @property
    def merge_option(self):
        """Gets the merge_option of this GoogleCloudDialogflowCxV3ImportIntentsRequest.

        Merge option for importing intents. If not specified, `REJECT` is assumed.

        :return: The merge_option of this GoogleCloudDialogflowCxV3ImportIntentsRequest.
        :rtype: str
        """
        return self._merge_option

    @merge_option.setter
    def merge_option(self, merge_option):
        """Sets the merge_option of this GoogleCloudDialogflowCxV3ImportIntentsRequest.

        Merge option for importing intents. If not specified, `REJECT` is assumed.

        :param merge_option: The merge_option of this GoogleCloudDialogflowCxV3ImportIntentsRequest.
        :type merge_option: str
        """
        allowed_values = ["MERGE_OPTION_UNSPECIFIED", "REJECT", "REPLACE", "MERGE", "RENAME", "REPORT_CONFLICT", "KEEP"]  # noqa: E501
        if merge_option not in allowed_values:
            raise ValueError(
                "Invalid value for `merge_option` ({0}), must be one of {1}"
                .format(merge_option, allowed_values)
            )

        self._merge_option = merge_option
