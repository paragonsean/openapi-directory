# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_dialogflow_cx_v3_export_agent_request_git_destination import GoogleCloudDialogflowCxV3ExportAgentRequestGitDestination
from openapi_server import util


class GoogleCloudDialogflowCxV3ExportAgentRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, agent_uri: str=None, data_format: str=None, environment: str=None, git_destination: GoogleCloudDialogflowCxV3ExportAgentRequestGitDestination=None, include_bigquery_export_settings: bool=None):
        """GoogleCloudDialogflowCxV3ExportAgentRequest - a model defined in OpenAPI

        :param agent_uri: The agent_uri of this GoogleCloudDialogflowCxV3ExportAgentRequest.
        :param data_format: The data_format of this GoogleCloudDialogflowCxV3ExportAgentRequest.
        :param environment: The environment of this GoogleCloudDialogflowCxV3ExportAgentRequest.
        :param git_destination: The git_destination of this GoogleCloudDialogflowCxV3ExportAgentRequest.
        :param include_bigquery_export_settings: The include_bigquery_export_settings of this GoogleCloudDialogflowCxV3ExportAgentRequest.
        """
        self.openapi_types = {
            'agent_uri': str,
            'data_format': str,
            'environment': str,
            'git_destination': GoogleCloudDialogflowCxV3ExportAgentRequestGitDestination,
            'include_bigquery_export_settings': bool
        }

        self.attribute_map = {
            'agent_uri': 'agentUri',
            'data_format': 'dataFormat',
            'environment': 'environment',
            'git_destination': 'gitDestination',
            'include_bigquery_export_settings': 'includeBigqueryExportSettings'
        }

        self._agent_uri = agent_uri
        self._data_format = data_format
        self._environment = environment
        self._git_destination = git_destination
        self._include_bigquery_export_settings = include_bigquery_export_settings

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDialogflowCxV3ExportAgentRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDialogflowCxV3ExportAgentRequest of this GoogleCloudDialogflowCxV3ExportAgentRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def agent_uri(self):
        """Gets the agent_uri of this GoogleCloudDialogflowCxV3ExportAgentRequest.

        Optional. The [Google Cloud Storage](https://cloud.google.com/storage/docs/) URI to export the agent to. The format of this URI must be `gs:///`. If left unspecified, the serialized agent is returned inline. Dialogflow performs a write operation for the Cloud Storage object on the caller's behalf, so your request authentication must have write permissions for the object. For more information, see [Dialogflow access control](https://cloud.google.com/dialogflow/cx/docs/concept/access-control#storage).

        :return: The agent_uri of this GoogleCloudDialogflowCxV3ExportAgentRequest.
        :rtype: str
        """
        return self._agent_uri

    @agent_uri.setter
    def agent_uri(self, agent_uri):
        """Sets the agent_uri of this GoogleCloudDialogflowCxV3ExportAgentRequest.

        Optional. The [Google Cloud Storage](https://cloud.google.com/storage/docs/) URI to export the agent to. The format of this URI must be `gs:///`. If left unspecified, the serialized agent is returned inline. Dialogflow performs a write operation for the Cloud Storage object on the caller's behalf, so your request authentication must have write permissions for the object. For more information, see [Dialogflow access control](https://cloud.google.com/dialogflow/cx/docs/concept/access-control#storage).

        :param agent_uri: The agent_uri of this GoogleCloudDialogflowCxV3ExportAgentRequest.
        :type agent_uri: str
        """

        self._agent_uri = agent_uri

    @property
    def data_format(self):
        """Gets the data_format of this GoogleCloudDialogflowCxV3ExportAgentRequest.

        Optional. The data format of the exported agent. If not specified, `BLOB` is assumed.

        :return: The data_format of this GoogleCloudDialogflowCxV3ExportAgentRequest.
        :rtype: str
        """
        return self._data_format

    @data_format.setter
    def data_format(self, data_format):
        """Sets the data_format of this GoogleCloudDialogflowCxV3ExportAgentRequest.

        Optional. The data format of the exported agent. If not specified, `BLOB` is assumed.

        :param data_format: The data_format of this GoogleCloudDialogflowCxV3ExportAgentRequest.
        :type data_format: str
        """
        allowed_values = ["DATA_FORMAT_UNSPECIFIED", "BLOB", "JSON_PACKAGE"]  # noqa: E501
        if data_format not in allowed_values:
            raise ValueError(
                "Invalid value for `data_format` ({0}), must be one of {1}"
                .format(data_format, allowed_values)
            )

        self._data_format = data_format

    @property
    def environment(self):
        """Gets the environment of this GoogleCloudDialogflowCxV3ExportAgentRequest.

        Optional. Environment name. If not set, draft environment is assumed. Format: `projects//locations//agents//environments/`.

        :return: The environment of this GoogleCloudDialogflowCxV3ExportAgentRequest.
        :rtype: str
        """
        return self._environment

    @environment.setter
    def environment(self, environment):
        """Sets the environment of this GoogleCloudDialogflowCxV3ExportAgentRequest.

        Optional. Environment name. If not set, draft environment is assumed. Format: `projects//locations//agents//environments/`.

        :param environment: The environment of this GoogleCloudDialogflowCxV3ExportAgentRequest.
        :type environment: str
        """

        self._environment = environment

    @property
    def git_destination(self):
        """Gets the git_destination of this GoogleCloudDialogflowCxV3ExportAgentRequest.


        :return: The git_destination of this GoogleCloudDialogflowCxV3ExportAgentRequest.
        :rtype: GoogleCloudDialogflowCxV3ExportAgentRequestGitDestination
        """
        return self._git_destination

    @git_destination.setter
    def git_destination(self, git_destination):
        """Sets the git_destination of this GoogleCloudDialogflowCxV3ExportAgentRequest.


        :param git_destination: The git_destination of this GoogleCloudDialogflowCxV3ExportAgentRequest.
        :type git_destination: GoogleCloudDialogflowCxV3ExportAgentRequestGitDestination
        """

        self._git_destination = git_destination

    @property
    def include_bigquery_export_settings(self):
        """Gets the include_bigquery_export_settings of this GoogleCloudDialogflowCxV3ExportAgentRequest.

        Optional. Whether to include BigQuery Export setting.

        :return: The include_bigquery_export_settings of this GoogleCloudDialogflowCxV3ExportAgentRequest.
        :rtype: bool
        """
        return self._include_bigquery_export_settings

    @include_bigquery_export_settings.setter
    def include_bigquery_export_settings(self, include_bigquery_export_settings):
        """Sets the include_bigquery_export_settings of this GoogleCloudDialogflowCxV3ExportAgentRequest.

        Optional. Whether to include BigQuery Export setting.

        :param include_bigquery_export_settings: The include_bigquery_export_settings of this GoogleCloudDialogflowCxV3ExportAgentRequest.
        :type include_bigquery_export_settings: bool
        """

        self._include_bigquery_export_settings = include_bigquery_export_settings
