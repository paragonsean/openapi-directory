# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDialogflowCxV3RunTestCaseRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, environment: str=None):
        """GoogleCloudDialogflowCxV3RunTestCaseRequest - a model defined in OpenAPI

        :param environment: The environment of this GoogleCloudDialogflowCxV3RunTestCaseRequest.
        """
        self.openapi_types = {
            'environment': str
        }

        self.attribute_map = {
            'environment': 'environment'
        }

        self._environment = environment

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDialogflowCxV3RunTestCaseRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDialogflowCxV3RunTestCaseRequest of this GoogleCloudDialogflowCxV3RunTestCaseRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def environment(self):
        """Gets the environment of this GoogleCloudDialogflowCxV3RunTestCaseRequest.

        Optional. Environment name. If not set, draft environment is assumed. Format: `projects//locations//agents//environments/`.

        :return: The environment of this GoogleCloudDialogflowCxV3RunTestCaseRequest.
        :rtype: str
        """
        return self._environment

    @environment.setter
    def environment(self, environment):
        """Sets the environment of this GoogleCloudDialogflowCxV3RunTestCaseRequest.

        Optional. Environment name. If not set, draft environment is assumed. Format: `projects//locations//agents//environments/`.

        :param environment: The environment of this GoogleCloudDialogflowCxV3RunTestCaseRequest.
        :type environment: str
        """

        self._environment = environment
