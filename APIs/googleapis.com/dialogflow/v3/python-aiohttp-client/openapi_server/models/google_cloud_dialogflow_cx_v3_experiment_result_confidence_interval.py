# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDialogflowCxV3ExperimentResultConfidenceInterval(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, confidence_level: float=None, lower_bound: float=None, ratio: float=None, upper_bound: float=None):
        """GoogleCloudDialogflowCxV3ExperimentResultConfidenceInterval - a model defined in OpenAPI

        :param confidence_level: The confidence_level of this GoogleCloudDialogflowCxV3ExperimentResultConfidenceInterval.
        :param lower_bound: The lower_bound of this GoogleCloudDialogflowCxV3ExperimentResultConfidenceInterval.
        :param ratio: The ratio of this GoogleCloudDialogflowCxV3ExperimentResultConfidenceInterval.
        :param upper_bound: The upper_bound of this GoogleCloudDialogflowCxV3ExperimentResultConfidenceInterval.
        """
        self.openapi_types = {
            'confidence_level': float,
            'lower_bound': float,
            'ratio': float,
            'upper_bound': float
        }

        self.attribute_map = {
            'confidence_level': 'confidenceLevel',
            'lower_bound': 'lowerBound',
            'ratio': 'ratio',
            'upper_bound': 'upperBound'
        }

        self._confidence_level = confidence_level
        self._lower_bound = lower_bound
        self._ratio = ratio
        self._upper_bound = upper_bound

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDialogflowCxV3ExperimentResultConfidenceInterval':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDialogflowCxV3ExperimentResultConfidenceInterval of this GoogleCloudDialogflowCxV3ExperimentResultConfidenceInterval.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def confidence_level(self):
        """Gets the confidence_level of this GoogleCloudDialogflowCxV3ExperimentResultConfidenceInterval.

        The confidence level used to construct the interval, i.e. there is X% chance that the true value is within this interval.

        :return: The confidence_level of this GoogleCloudDialogflowCxV3ExperimentResultConfidenceInterval.
        :rtype: float
        """
        return self._confidence_level

    @confidence_level.setter
    def confidence_level(self, confidence_level):
        """Sets the confidence_level of this GoogleCloudDialogflowCxV3ExperimentResultConfidenceInterval.

        The confidence level used to construct the interval, i.e. there is X% chance that the true value is within this interval.

        :param confidence_level: The confidence_level of this GoogleCloudDialogflowCxV3ExperimentResultConfidenceInterval.
        :type confidence_level: float
        """

        self._confidence_level = confidence_level

    @property
    def lower_bound(self):
        """Gets the lower_bound of this GoogleCloudDialogflowCxV3ExperimentResultConfidenceInterval.

        Lower bound of the interval.

        :return: The lower_bound of this GoogleCloudDialogflowCxV3ExperimentResultConfidenceInterval.
        :rtype: float
        """
        return self._lower_bound

    @lower_bound.setter
    def lower_bound(self, lower_bound):
        """Sets the lower_bound of this GoogleCloudDialogflowCxV3ExperimentResultConfidenceInterval.

        Lower bound of the interval.

        :param lower_bound: The lower_bound of this GoogleCloudDialogflowCxV3ExperimentResultConfidenceInterval.
        :type lower_bound: float
        """

        self._lower_bound = lower_bound

    @property
    def ratio(self):
        """Gets the ratio of this GoogleCloudDialogflowCxV3ExperimentResultConfidenceInterval.

        The percent change between an experiment metric's value and the value for its control.

        :return: The ratio of this GoogleCloudDialogflowCxV3ExperimentResultConfidenceInterval.
        :rtype: float
        """
        return self._ratio

    @ratio.setter
    def ratio(self, ratio):
        """Sets the ratio of this GoogleCloudDialogflowCxV3ExperimentResultConfidenceInterval.

        The percent change between an experiment metric's value and the value for its control.

        :param ratio: The ratio of this GoogleCloudDialogflowCxV3ExperimentResultConfidenceInterval.
        :type ratio: float
        """

        self._ratio = ratio

    @property
    def upper_bound(self):
        """Gets the upper_bound of this GoogleCloudDialogflowCxV3ExperimentResultConfidenceInterval.

        Upper bound of the interval.

        :return: The upper_bound of this GoogleCloudDialogflowCxV3ExperimentResultConfidenceInterval.
        :rtype: float
        """
        return self._upper_bound

    @upper_bound.setter
    def upper_bound(self, upper_bound):
        """Sets the upper_bound of this GoogleCloudDialogflowCxV3ExperimentResultConfidenceInterval.

        Upper bound of the interval.

        :param upper_bound: The upper_bound of this GoogleCloudDialogflowCxV3ExperimentResultConfidenceInterval.
        :type upper_bound: float
        """

        self._upper_bound = upper_bound
