# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_dialogflow_cx_v3_data_store_connection import GoogleCloudDialogflowCxV3DataStoreConnection
from openapi_server.models.google_cloud_dialogflow_cx_v3_fulfillment import GoogleCloudDialogflowCxV3Fulfillment
from openapi_server import util


class GoogleCloudDialogflowCxV3KnowledgeConnectorSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data_store_connections: List[GoogleCloudDialogflowCxV3DataStoreConnection]=None, enabled: bool=None, target_flow: str=None, target_page: str=None, trigger_fulfillment: GoogleCloudDialogflowCxV3Fulfillment=None):
        """GoogleCloudDialogflowCxV3KnowledgeConnectorSettings - a model defined in OpenAPI

        :param data_store_connections: The data_store_connections of this GoogleCloudDialogflowCxV3KnowledgeConnectorSettings.
        :param enabled: The enabled of this GoogleCloudDialogflowCxV3KnowledgeConnectorSettings.
        :param target_flow: The target_flow of this GoogleCloudDialogflowCxV3KnowledgeConnectorSettings.
        :param target_page: The target_page of this GoogleCloudDialogflowCxV3KnowledgeConnectorSettings.
        :param trigger_fulfillment: The trigger_fulfillment of this GoogleCloudDialogflowCxV3KnowledgeConnectorSettings.
        """
        self.openapi_types = {
            'data_store_connections': List[GoogleCloudDialogflowCxV3DataStoreConnection],
            'enabled': bool,
            'target_flow': str,
            'target_page': str,
            'trigger_fulfillment': GoogleCloudDialogflowCxV3Fulfillment
        }

        self.attribute_map = {
            'data_store_connections': 'dataStoreConnections',
            'enabled': 'enabled',
            'target_flow': 'targetFlow',
            'target_page': 'targetPage',
            'trigger_fulfillment': 'triggerFulfillment'
        }

        self._data_store_connections = data_store_connections
        self._enabled = enabled
        self._target_flow = target_flow
        self._target_page = target_page
        self._trigger_fulfillment = trigger_fulfillment

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDialogflowCxV3KnowledgeConnectorSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDialogflowCxV3KnowledgeConnectorSettings of this GoogleCloudDialogflowCxV3KnowledgeConnectorSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data_store_connections(self):
        """Gets the data_store_connections of this GoogleCloudDialogflowCxV3KnowledgeConnectorSettings.

        Optional. List of related data store connections.

        :return: The data_store_connections of this GoogleCloudDialogflowCxV3KnowledgeConnectorSettings.
        :rtype: List[GoogleCloudDialogflowCxV3DataStoreConnection]
        """
        return self._data_store_connections

    @data_store_connections.setter
    def data_store_connections(self, data_store_connections):
        """Sets the data_store_connections of this GoogleCloudDialogflowCxV3KnowledgeConnectorSettings.

        Optional. List of related data store connections.

        :param data_store_connections: The data_store_connections of this GoogleCloudDialogflowCxV3KnowledgeConnectorSettings.
        :type data_store_connections: List[GoogleCloudDialogflowCxV3DataStoreConnection]
        """

        self._data_store_connections = data_store_connections

    @property
    def enabled(self):
        """Gets the enabled of this GoogleCloudDialogflowCxV3KnowledgeConnectorSettings.

        Whether Knowledge Connector is enabled or not.

        :return: The enabled of this GoogleCloudDialogflowCxV3KnowledgeConnectorSettings.
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """Sets the enabled of this GoogleCloudDialogflowCxV3KnowledgeConnectorSettings.

        Whether Knowledge Connector is enabled or not.

        :param enabled: The enabled of this GoogleCloudDialogflowCxV3KnowledgeConnectorSettings.
        :type enabled: bool
        """

        self._enabled = enabled

    @property
    def target_flow(self):
        """Gets the target_flow of this GoogleCloudDialogflowCxV3KnowledgeConnectorSettings.

        The target flow to transition to. Format: `projects//locations//agents//flows/`.

        :return: The target_flow of this GoogleCloudDialogflowCxV3KnowledgeConnectorSettings.
        :rtype: str
        """
        return self._target_flow

    @target_flow.setter
    def target_flow(self, target_flow):
        """Sets the target_flow of this GoogleCloudDialogflowCxV3KnowledgeConnectorSettings.

        The target flow to transition to. Format: `projects//locations//agents//flows/`.

        :param target_flow: The target_flow of this GoogleCloudDialogflowCxV3KnowledgeConnectorSettings.
        :type target_flow: str
        """

        self._target_flow = target_flow

    @property
    def target_page(self):
        """Gets the target_page of this GoogleCloudDialogflowCxV3KnowledgeConnectorSettings.

        The target page to transition to. Format: `projects//locations//agents//flows//pages/`.

        :return: The target_page of this GoogleCloudDialogflowCxV3KnowledgeConnectorSettings.
        :rtype: str
        """
        return self._target_page

    @target_page.setter
    def target_page(self, target_page):
        """Sets the target_page of this GoogleCloudDialogflowCxV3KnowledgeConnectorSettings.

        The target page to transition to. Format: `projects//locations//agents//flows//pages/`.

        :param target_page: The target_page of this GoogleCloudDialogflowCxV3KnowledgeConnectorSettings.
        :type target_page: str
        """

        self._target_page = target_page

    @property
    def trigger_fulfillment(self):
        """Gets the trigger_fulfillment of this GoogleCloudDialogflowCxV3KnowledgeConnectorSettings.


        :return: The trigger_fulfillment of this GoogleCloudDialogflowCxV3KnowledgeConnectorSettings.
        :rtype: GoogleCloudDialogflowCxV3Fulfillment
        """
        return self._trigger_fulfillment

    @trigger_fulfillment.setter
    def trigger_fulfillment(self, trigger_fulfillment):
        """Sets the trigger_fulfillment of this GoogleCloudDialogflowCxV3KnowledgeConnectorSettings.


        :param trigger_fulfillment: The trigger_fulfillment of this GoogleCloudDialogflowCxV3KnowledgeConnectorSettings.
        :type trigger_fulfillment: GoogleCloudDialogflowCxV3Fulfillment
        """

        self._trigger_fulfillment = trigger_fulfillment
