# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_dialogflow_cx_v3_import_intents_response_conflicting_resources import GoogleCloudDialogflowCxV3ImportIntentsResponseConflictingResources
from openapi_server import util


class GoogleCloudDialogflowCxV3ImportIntentsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, conflicting_resources: GoogleCloudDialogflowCxV3ImportIntentsResponseConflictingResources=None, intents: List[str]=None):
        """GoogleCloudDialogflowCxV3ImportIntentsResponse - a model defined in OpenAPI

        :param conflicting_resources: The conflicting_resources of this GoogleCloudDialogflowCxV3ImportIntentsResponse.
        :param intents: The intents of this GoogleCloudDialogflowCxV3ImportIntentsResponse.
        """
        self.openapi_types = {
            'conflicting_resources': GoogleCloudDialogflowCxV3ImportIntentsResponseConflictingResources,
            'intents': List[str]
        }

        self.attribute_map = {
            'conflicting_resources': 'conflictingResources',
            'intents': 'intents'
        }

        self._conflicting_resources = conflicting_resources
        self._intents = intents

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDialogflowCxV3ImportIntentsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDialogflowCxV3ImportIntentsResponse of this GoogleCloudDialogflowCxV3ImportIntentsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def conflicting_resources(self):
        """Gets the conflicting_resources of this GoogleCloudDialogflowCxV3ImportIntentsResponse.


        :return: The conflicting_resources of this GoogleCloudDialogflowCxV3ImportIntentsResponse.
        :rtype: GoogleCloudDialogflowCxV3ImportIntentsResponseConflictingResources
        """
        return self._conflicting_resources

    @conflicting_resources.setter
    def conflicting_resources(self, conflicting_resources):
        """Sets the conflicting_resources of this GoogleCloudDialogflowCxV3ImportIntentsResponse.


        :param conflicting_resources: The conflicting_resources of this GoogleCloudDialogflowCxV3ImportIntentsResponse.
        :type conflicting_resources: GoogleCloudDialogflowCxV3ImportIntentsResponseConflictingResources
        """

        self._conflicting_resources = conflicting_resources

    @property
    def intents(self):
        """Gets the intents of this GoogleCloudDialogflowCxV3ImportIntentsResponse.

        The unique identifier of the imported intents. Format: `projects//locations//agents//intents/`.

        :return: The intents of this GoogleCloudDialogflowCxV3ImportIntentsResponse.
        :rtype: List[str]
        """
        return self._intents

    @intents.setter
    def intents(self, intents):
        """Sets the intents of this GoogleCloudDialogflowCxV3ImportIntentsResponse.

        The unique identifier of the imported intents. Format: `projects//locations//agents//intents/`.

        :param intents: The intents of this GoogleCloudDialogflowCxV3ImportIntentsResponse.
        :type intents: List[str]
        """

        self._intents = intents
