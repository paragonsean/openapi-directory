# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_dialogflow_cx_v3_generator import GoogleCloudDialogflowCxV3Generator
from openapi_server import util


class GoogleCloudDialogflowCxV3ListGeneratorsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, generators: List[GoogleCloudDialogflowCxV3Generator]=None, next_page_token: str=None):
        """GoogleCloudDialogflowCxV3ListGeneratorsResponse - a model defined in OpenAPI

        :param generators: The generators of this GoogleCloudDialogflowCxV3ListGeneratorsResponse.
        :param next_page_token: The next_page_token of this GoogleCloudDialogflowCxV3ListGeneratorsResponse.
        """
        self.openapi_types = {
            'generators': List[GoogleCloudDialogflowCxV3Generator],
            'next_page_token': str
        }

        self.attribute_map = {
            'generators': 'generators',
            'next_page_token': 'nextPageToken'
        }

        self._generators = generators
        self._next_page_token = next_page_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDialogflowCxV3ListGeneratorsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDialogflowCxV3ListGeneratorsResponse of this GoogleCloudDialogflowCxV3ListGeneratorsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def generators(self):
        """Gets the generators of this GoogleCloudDialogflowCxV3ListGeneratorsResponse.

        The list of generators. There will be a maximum number of items returned based on the page_size field in the request.

        :return: The generators of this GoogleCloudDialogflowCxV3ListGeneratorsResponse.
        :rtype: List[GoogleCloudDialogflowCxV3Generator]
        """
        return self._generators

    @generators.setter
    def generators(self, generators):
        """Sets the generators of this GoogleCloudDialogflowCxV3ListGeneratorsResponse.

        The list of generators. There will be a maximum number of items returned based on the page_size field in the request.

        :param generators: The generators of this GoogleCloudDialogflowCxV3ListGeneratorsResponse.
        :type generators: List[GoogleCloudDialogflowCxV3Generator]
        """

        self._generators = generators

    @property
    def next_page_token(self):
        """Gets the next_page_token of this GoogleCloudDialogflowCxV3ListGeneratorsResponse.

        Token to retrieve the next page of results, or empty if there are no more results in the list.

        :return: The next_page_token of this GoogleCloudDialogflowCxV3ListGeneratorsResponse.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this GoogleCloudDialogflowCxV3ListGeneratorsResponse.

        Token to retrieve the next page of results, or empty if there are no more results in the list.

        :param next_page_token: The next_page_token of this GoogleCloudDialogflowCxV3ListGeneratorsResponse.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token
