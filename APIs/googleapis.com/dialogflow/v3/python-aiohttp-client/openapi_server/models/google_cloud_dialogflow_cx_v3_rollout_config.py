# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_dialogflow_cx_v3_rollout_config_rollout_step import GoogleCloudDialogflowCxV3RolloutConfigRolloutStep
from openapi_server import util


class GoogleCloudDialogflowCxV3RolloutConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, failure_condition: str=None, rollout_condition: str=None, rollout_steps: List[GoogleCloudDialogflowCxV3RolloutConfigRolloutStep]=None):
        """GoogleCloudDialogflowCxV3RolloutConfig - a model defined in OpenAPI

        :param failure_condition: The failure_condition of this GoogleCloudDialogflowCxV3RolloutConfig.
        :param rollout_condition: The rollout_condition of this GoogleCloudDialogflowCxV3RolloutConfig.
        :param rollout_steps: The rollout_steps of this GoogleCloudDialogflowCxV3RolloutConfig.
        """
        self.openapi_types = {
            'failure_condition': str,
            'rollout_condition': str,
            'rollout_steps': List[GoogleCloudDialogflowCxV3RolloutConfigRolloutStep]
        }

        self.attribute_map = {
            'failure_condition': 'failureCondition',
            'rollout_condition': 'rolloutCondition',
            'rollout_steps': 'rolloutSteps'
        }

        self._failure_condition = failure_condition
        self._rollout_condition = rollout_condition
        self._rollout_steps = rollout_steps

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDialogflowCxV3RolloutConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDialogflowCxV3RolloutConfig of this GoogleCloudDialogflowCxV3RolloutConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def failure_condition(self):
        """Gets the failure_condition of this GoogleCloudDialogflowCxV3RolloutConfig.

        The conditions that are used to evaluate the failure of a rollout step. If not specified, no rollout steps will fail. E.g. \"containment_rate < 10% OR average_turn_count < 3\". See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).

        :return: The failure_condition of this GoogleCloudDialogflowCxV3RolloutConfig.
        :rtype: str
        """
        return self._failure_condition

    @failure_condition.setter
    def failure_condition(self, failure_condition):
        """Sets the failure_condition of this GoogleCloudDialogflowCxV3RolloutConfig.

        The conditions that are used to evaluate the failure of a rollout step. If not specified, no rollout steps will fail. E.g. \"containment_rate < 10% OR average_turn_count < 3\". See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).

        :param failure_condition: The failure_condition of this GoogleCloudDialogflowCxV3RolloutConfig.
        :type failure_condition: str
        """

        self._failure_condition = failure_condition

    @property
    def rollout_condition(self):
        """Gets the rollout_condition of this GoogleCloudDialogflowCxV3RolloutConfig.

        The conditions that are used to evaluate the success of a rollout step. If not specified, all rollout steps will proceed to the next one unless failure conditions are met. E.g. \"containment_rate > 60% AND callback_rate < 20%\". See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).

        :return: The rollout_condition of this GoogleCloudDialogflowCxV3RolloutConfig.
        :rtype: str
        """
        return self._rollout_condition

    @rollout_condition.setter
    def rollout_condition(self, rollout_condition):
        """Sets the rollout_condition of this GoogleCloudDialogflowCxV3RolloutConfig.

        The conditions that are used to evaluate the success of a rollout step. If not specified, all rollout steps will proceed to the next one unless failure conditions are met. E.g. \"containment_rate > 60% AND callback_rate < 20%\". See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).

        :param rollout_condition: The rollout_condition of this GoogleCloudDialogflowCxV3RolloutConfig.
        :type rollout_condition: str
        """

        self._rollout_condition = rollout_condition

    @property
    def rollout_steps(self):
        """Gets the rollout_steps of this GoogleCloudDialogflowCxV3RolloutConfig.

        Steps to roll out a flow version. Steps should be sorted by percentage in ascending order.

        :return: The rollout_steps of this GoogleCloudDialogflowCxV3RolloutConfig.
        :rtype: List[GoogleCloudDialogflowCxV3RolloutConfigRolloutStep]
        """
        return self._rollout_steps

    @rollout_steps.setter
    def rollout_steps(self, rollout_steps):
        """Sets the rollout_steps of this GoogleCloudDialogflowCxV3RolloutConfig.

        Steps to roll out a flow version. Steps should be sorted by percentage in ascending order.

        :param rollout_steps: The rollout_steps of this GoogleCloudDialogflowCxV3RolloutConfig.
        :type rollout_steps: List[GoogleCloudDialogflowCxV3RolloutConfigRolloutStep]
        """

        self._rollout_steps = rollout_steps
