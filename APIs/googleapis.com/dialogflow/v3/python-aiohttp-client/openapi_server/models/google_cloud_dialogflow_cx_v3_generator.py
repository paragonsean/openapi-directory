# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_dialogflow_cx_v3_generator_placeholder import GoogleCloudDialogflowCxV3GeneratorPlaceholder
from openapi_server.models.google_cloud_dialogflow_cx_v3_phrase import GoogleCloudDialogflowCxV3Phrase
from openapi_server import util


class GoogleCloudDialogflowCxV3Generator(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, display_name: str=None, name: str=None, placeholders: List[GoogleCloudDialogflowCxV3GeneratorPlaceholder]=None, prompt_text: GoogleCloudDialogflowCxV3Phrase=None):
        """GoogleCloudDialogflowCxV3Generator - a model defined in OpenAPI

        :param display_name: The display_name of this GoogleCloudDialogflowCxV3Generator.
        :param name: The name of this GoogleCloudDialogflowCxV3Generator.
        :param placeholders: The placeholders of this GoogleCloudDialogflowCxV3Generator.
        :param prompt_text: The prompt_text of this GoogleCloudDialogflowCxV3Generator.
        """
        self.openapi_types = {
            'display_name': str,
            'name': str,
            'placeholders': List[GoogleCloudDialogflowCxV3GeneratorPlaceholder],
            'prompt_text': GoogleCloudDialogflowCxV3Phrase
        }

        self.attribute_map = {
            'display_name': 'displayName',
            'name': 'name',
            'placeholders': 'placeholders',
            'prompt_text': 'promptText'
        }

        self._display_name = display_name
        self._name = name
        self._placeholders = placeholders
        self._prompt_text = prompt_text

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDialogflowCxV3Generator':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDialogflowCxV3Generator of this GoogleCloudDialogflowCxV3Generator.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def display_name(self):
        """Gets the display_name of this GoogleCloudDialogflowCxV3Generator.

        Required. The human-readable name of the generator, unique within the agent. The prompt contains pre-defined parameters such as $conversation, $last-user-utterance, etc. populated by Dialogflow. It can also contain custom placeholders which will be resolved during fulfillment.

        :return: The display_name of this GoogleCloudDialogflowCxV3Generator.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this GoogleCloudDialogflowCxV3Generator.

        Required. The human-readable name of the generator, unique within the agent. The prompt contains pre-defined parameters such as $conversation, $last-user-utterance, etc. populated by Dialogflow. It can also contain custom placeholders which will be resolved during fulfillment.

        :param display_name: The display_name of this GoogleCloudDialogflowCxV3Generator.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def name(self):
        """Gets the name of this GoogleCloudDialogflowCxV3Generator.

        The unique identifier of the generator. Must be set for the Generators.UpdateGenerator method. Generators.CreateGenerate populates the name automatically. Format: `projects//locations//agents//generators/`.

        :return: The name of this GoogleCloudDialogflowCxV3Generator.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudDialogflowCxV3Generator.

        The unique identifier of the generator. Must be set for the Generators.UpdateGenerator method. Generators.CreateGenerate populates the name automatically. Format: `projects//locations//agents//generators/`.

        :param name: The name of this GoogleCloudDialogflowCxV3Generator.
        :type name: str
        """

        self._name = name

    @property
    def placeholders(self):
        """Gets the placeholders of this GoogleCloudDialogflowCxV3Generator.

        Optional. List of custom placeholders in the prompt text.

        :return: The placeholders of this GoogleCloudDialogflowCxV3Generator.
        :rtype: List[GoogleCloudDialogflowCxV3GeneratorPlaceholder]
        """
        return self._placeholders

    @placeholders.setter
    def placeholders(self, placeholders):
        """Sets the placeholders of this GoogleCloudDialogflowCxV3Generator.

        Optional. List of custom placeholders in the prompt text.

        :param placeholders: The placeholders of this GoogleCloudDialogflowCxV3Generator.
        :type placeholders: List[GoogleCloudDialogflowCxV3GeneratorPlaceholder]
        """

        self._placeholders = placeholders

    @property
    def prompt_text(self):
        """Gets the prompt_text of this GoogleCloudDialogflowCxV3Generator.


        :return: The prompt_text of this GoogleCloudDialogflowCxV3Generator.
        :rtype: GoogleCloudDialogflowCxV3Phrase
        """
        return self._prompt_text

    @prompt_text.setter
    def prompt_text(self, prompt_text):
        """Sets the prompt_text of this GoogleCloudDialogflowCxV3Generator.


        :param prompt_text: The prompt_text of this GoogleCloudDialogflowCxV3Generator.
        :type prompt_text: GoogleCloudDialogflowCxV3Phrase
        """

        self._prompt_text = prompt_text
