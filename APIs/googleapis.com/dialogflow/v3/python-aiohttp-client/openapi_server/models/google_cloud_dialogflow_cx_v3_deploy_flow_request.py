# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDialogflowCxV3DeployFlowRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, flow_version: str=None):
        """GoogleCloudDialogflowCxV3DeployFlowRequest - a model defined in OpenAPI

        :param flow_version: The flow_version of this GoogleCloudDialogflowCxV3DeployFlowRequest.
        """
        self.openapi_types = {
            'flow_version': str
        }

        self.attribute_map = {
            'flow_version': 'flowVersion'
        }

        self._flow_version = flow_version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDialogflowCxV3DeployFlowRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDialogflowCxV3DeployFlowRequest of this GoogleCloudDialogflowCxV3DeployFlowRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def flow_version(self):
        """Gets the flow_version of this GoogleCloudDialogflowCxV3DeployFlowRequest.

        Required. The flow version to deploy. Format: `projects//locations//agents// flows//versions/`.

        :return: The flow_version of this GoogleCloudDialogflowCxV3DeployFlowRequest.
        :rtype: str
        """
        return self._flow_version

    @flow_version.setter
    def flow_version(self, flow_version):
        """Sets the flow_version of this GoogleCloudDialogflowCxV3DeployFlowRequest.

        Required. The flow version to deploy. Format: `projects//locations//agents// flows//versions/`.

        :param flow_version: The flow_version of this GoogleCloudDialogflowCxV3DeployFlowRequest.
        :type flow_version: str
        """

        self._flow_version = flow_version
