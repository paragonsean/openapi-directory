# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, metadata: Dict[str, object]=None):
        """GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff - a model defined in OpenAPI

        :param metadata: The metadata of this GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff.
        """
        self.openapi_types = {
            'metadata': Dict[str, object]
        }

        self.attribute_map = {
            'metadata': 'metadata'
        }

        self._metadata = metadata

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff of this GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def metadata(self):
        """Gets the metadata of this GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff.

        Custom metadata for your handoff procedure. Dialogflow doesn't impose any structure on this.

        :return: The metadata of this GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff.
        :rtype: Dict[str, object]
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff.

        Custom metadata for your handoff procedure. Dialogflow doesn't impose any structure on this.

        :param metadata: The metadata of this GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff.
        :type metadata: Dict[str, object]
        """

        self._metadata = metadata
