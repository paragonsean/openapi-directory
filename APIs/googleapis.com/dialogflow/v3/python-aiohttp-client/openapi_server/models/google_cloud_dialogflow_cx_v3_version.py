# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_dialogflow_cx_v3_nlu_settings import GoogleCloudDialogflowCxV3NluSettings
from openapi_server import util


class GoogleCloudDialogflowCxV3Version(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, create_time: str=None, description: str=None, display_name: str=None, name: str=None, nlu_settings: GoogleCloudDialogflowCxV3NluSettings=None, state: str=None):
        """GoogleCloudDialogflowCxV3Version - a model defined in OpenAPI

        :param create_time: The create_time of this GoogleCloudDialogflowCxV3Version.
        :param description: The description of this GoogleCloudDialogflowCxV3Version.
        :param display_name: The display_name of this GoogleCloudDialogflowCxV3Version.
        :param name: The name of this GoogleCloudDialogflowCxV3Version.
        :param nlu_settings: The nlu_settings of this GoogleCloudDialogflowCxV3Version.
        :param state: The state of this GoogleCloudDialogflowCxV3Version.
        """
        self.openapi_types = {
            'create_time': str,
            'description': str,
            'display_name': str,
            'name': str,
            'nlu_settings': GoogleCloudDialogflowCxV3NluSettings,
            'state': str
        }

        self.attribute_map = {
            'create_time': 'createTime',
            'description': 'description',
            'display_name': 'displayName',
            'name': 'name',
            'nlu_settings': 'nluSettings',
            'state': 'state'
        }

        self._create_time = create_time
        self._description = description
        self._display_name = display_name
        self._name = name
        self._nlu_settings = nlu_settings
        self._state = state

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDialogflowCxV3Version':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDialogflowCxV3Version of this GoogleCloudDialogflowCxV3Version.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def create_time(self):
        """Gets the create_time of this GoogleCloudDialogflowCxV3Version.

        Output only. Create time of the version.

        :return: The create_time of this GoogleCloudDialogflowCxV3Version.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this GoogleCloudDialogflowCxV3Version.

        Output only. Create time of the version.

        :param create_time: The create_time of this GoogleCloudDialogflowCxV3Version.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def description(self):
        """Gets the description of this GoogleCloudDialogflowCxV3Version.

        The description of the version. The maximum length is 500 characters. If exceeded, the request is rejected.

        :return: The description of this GoogleCloudDialogflowCxV3Version.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GoogleCloudDialogflowCxV3Version.

        The description of the version. The maximum length is 500 characters. If exceeded, the request is rejected.

        :param description: The description of this GoogleCloudDialogflowCxV3Version.
        :type description: str
        """

        self._description = description

    @property
    def display_name(self):
        """Gets the display_name of this GoogleCloudDialogflowCxV3Version.

        Required. The human-readable name of the version. Limit of 64 characters.

        :return: The display_name of this GoogleCloudDialogflowCxV3Version.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this GoogleCloudDialogflowCxV3Version.

        Required. The human-readable name of the version. Limit of 64 characters.

        :param display_name: The display_name of this GoogleCloudDialogflowCxV3Version.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def name(self):
        """Gets the name of this GoogleCloudDialogflowCxV3Version.

        Format: projects//locations//agents//flows//versions/. Version ID is a self-increasing number generated by Dialogflow upon version creation.

        :return: The name of this GoogleCloudDialogflowCxV3Version.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudDialogflowCxV3Version.

        Format: projects//locations//agents//flows//versions/. Version ID is a self-increasing number generated by Dialogflow upon version creation.

        :param name: The name of this GoogleCloudDialogflowCxV3Version.
        :type name: str
        """

        self._name = name

    @property
    def nlu_settings(self):
        """Gets the nlu_settings of this GoogleCloudDialogflowCxV3Version.


        :return: The nlu_settings of this GoogleCloudDialogflowCxV3Version.
        :rtype: GoogleCloudDialogflowCxV3NluSettings
        """
        return self._nlu_settings

    @nlu_settings.setter
    def nlu_settings(self, nlu_settings):
        """Sets the nlu_settings of this GoogleCloudDialogflowCxV3Version.


        :param nlu_settings: The nlu_settings of this GoogleCloudDialogflowCxV3Version.
        :type nlu_settings: GoogleCloudDialogflowCxV3NluSettings
        """

        self._nlu_settings = nlu_settings

    @property
    def state(self):
        """Gets the state of this GoogleCloudDialogflowCxV3Version.

        Output only. The state of this version. This field is read-only and cannot be set by create and update methods.

        :return: The state of this GoogleCloudDialogflowCxV3Version.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this GoogleCloudDialogflowCxV3Version.

        Output only. The state of this version. This field is read-only and cannot be set by create and update methods.

        :param state: The state of this GoogleCloudDialogflowCxV3Version.
        :type state: str
        """
        allowed_values = ["STATE_UNSPECIFIED", "RUNNING", "SUCCEEDED", "FAILED"]  # noqa: E501
        if state not in allowed_values:
            raise ValueError(
                "Invalid value for `state` ({0}), must be one of {1}"
                .format(state, allowed_values)
            )

        self._state = state
