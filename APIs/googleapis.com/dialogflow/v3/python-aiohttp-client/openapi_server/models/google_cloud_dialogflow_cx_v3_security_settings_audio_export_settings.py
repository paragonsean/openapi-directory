# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, audio_export_pattern: str=None, audio_format: str=None, enable_audio_redaction: bool=None, gcs_bucket: str=None):
        """GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings - a model defined in OpenAPI

        :param audio_export_pattern: The audio_export_pattern of this GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings.
        :param audio_format: The audio_format of this GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings.
        :param enable_audio_redaction: The enable_audio_redaction of this GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings.
        :param gcs_bucket: The gcs_bucket of this GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings.
        """
        self.openapi_types = {
            'audio_export_pattern': str,
            'audio_format': str,
            'enable_audio_redaction': bool,
            'gcs_bucket': str
        }

        self.attribute_map = {
            'audio_export_pattern': 'audioExportPattern',
            'audio_format': 'audioFormat',
            'enable_audio_redaction': 'enableAudioRedaction',
            'gcs_bucket': 'gcsBucket'
        }

        self._audio_export_pattern = audio_export_pattern
        self._audio_format = audio_format
        self._enable_audio_redaction = enable_audio_redaction
        self._gcs_bucket = gcs_bucket

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings of this GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def audio_export_pattern(self):
        """Gets the audio_export_pattern of this GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings.

        Filename pattern for exported audio.

        :return: The audio_export_pattern of this GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings.
        :rtype: str
        """
        return self._audio_export_pattern

    @audio_export_pattern.setter
    def audio_export_pattern(self, audio_export_pattern):
        """Sets the audio_export_pattern of this GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings.

        Filename pattern for exported audio.

        :param audio_export_pattern: The audio_export_pattern of this GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings.
        :type audio_export_pattern: str
        """

        self._audio_export_pattern = audio_export_pattern

    @property
    def audio_format(self):
        """Gets the audio_format of this GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings.

        File format for exported audio file. Currently only in telephony recordings.

        :return: The audio_format of this GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings.
        :rtype: str
        """
        return self._audio_format

    @audio_format.setter
    def audio_format(self, audio_format):
        """Sets the audio_format of this GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings.

        File format for exported audio file. Currently only in telephony recordings.

        :param audio_format: The audio_format of this GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings.
        :type audio_format: str
        """
        allowed_values = ["AUDIO_FORMAT_UNSPECIFIED", "MULAW", "MP3", "OGG"]  # noqa: E501
        if audio_format not in allowed_values:
            raise ValueError(
                "Invalid value for `audio_format` ({0}), must be one of {1}"
                .format(audio_format, allowed_values)
            )

        self._audio_format = audio_format

    @property
    def enable_audio_redaction(self):
        """Gets the enable_audio_redaction of this GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings.

        Enable audio redaction if it is true.

        :return: The enable_audio_redaction of this GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings.
        :rtype: bool
        """
        return self._enable_audio_redaction

    @enable_audio_redaction.setter
    def enable_audio_redaction(self, enable_audio_redaction):
        """Sets the enable_audio_redaction of this GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings.

        Enable audio redaction if it is true.

        :param enable_audio_redaction: The enable_audio_redaction of this GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings.
        :type enable_audio_redaction: bool
        """

        self._enable_audio_redaction = enable_audio_redaction

    @property
    def gcs_bucket(self):
        """Gets the gcs_bucket of this GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings.

        Cloud Storage bucket to export audio record to. Setting this field would grant the Storage Object Creator role to the Dialogflow Service Agent. API caller that tries to modify this field should have the permission of storage.buckets.setIamPolicy.

        :return: The gcs_bucket of this GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings.
        :rtype: str
        """
        return self._gcs_bucket

    @gcs_bucket.setter
    def gcs_bucket(self, gcs_bucket):
        """Sets the gcs_bucket of this GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings.

        Cloud Storage bucket to export audio record to. Setting this field would grant the Storage Object Creator role to the Dialogflow Service Agent. API caller that tries to modify this field should have the permission of storage.buckets.setIamPolicy.

        :param gcs_bucket: The gcs_bucket of this GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings.
        :type gcs_bucket: str
        """

        self._gcs_bucket = gcs_bucket
