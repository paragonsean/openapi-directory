# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, enabled: bool=None, finish_digit: str=None, max_digits: int=None):
        """GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettings - a model defined in OpenAPI

        :param enabled: The enabled of this GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettings.
        :param finish_digit: The finish_digit of this GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettings.
        :param max_digits: The max_digits of this GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettings.
        """
        self.openapi_types = {
            'enabled': bool,
            'finish_digit': str,
            'max_digits': int
        }

        self.attribute_map = {
            'enabled': 'enabled',
            'finish_digit': 'finishDigit',
            'max_digits': 'maxDigits'
        }

        self._enabled = enabled
        self._finish_digit = finish_digit
        self._max_digits = max_digits

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettings of this GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def enabled(self):
        """Gets the enabled of this GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettings.

        If true, incoming audio is processed for DTMF (dual tone multi frequency) events. For example, if the caller presses a button on their telephone keypad and DTMF processing is enabled, Dialogflow will detect the event (e.g. a \"3\" was pressed) in the incoming audio and pass the event to the bot to drive business logic (e.g. when 3 is pressed, return the account balance).

        :return: The enabled of this GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettings.
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """Sets the enabled of this GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettings.

        If true, incoming audio is processed for DTMF (dual tone multi frequency) events. For example, if the caller presses a button on their telephone keypad and DTMF processing is enabled, Dialogflow will detect the event (e.g. a \"3\" was pressed) in the incoming audio and pass the event to the bot to drive business logic (e.g. when 3 is pressed, return the account balance).

        :param enabled: The enabled of this GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettings.
        :type enabled: bool
        """

        self._enabled = enabled

    @property
    def finish_digit(self):
        """Gets the finish_digit of this GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettings.

        The digit that terminates a DTMF digit sequence.

        :return: The finish_digit of this GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettings.
        :rtype: str
        """
        return self._finish_digit

    @finish_digit.setter
    def finish_digit(self, finish_digit):
        """Sets the finish_digit of this GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettings.

        The digit that terminates a DTMF digit sequence.

        :param finish_digit: The finish_digit of this GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettings.
        :type finish_digit: str
        """

        self._finish_digit = finish_digit

    @property
    def max_digits(self):
        """Gets the max_digits of this GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettings.

        Max length of DTMF digits.

        :return: The max_digits of this GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettings.
        :rtype: int
        """
        return self._max_digits

    @max_digits.setter
    def max_digits(self, max_digits):
        """Sets the max_digits of this GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettings.

        Max length of DTMF digits.

        :param max_digits: The max_digits of this GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettings.
        :type max_digits: int
        """

        self._max_digits = max_digits
