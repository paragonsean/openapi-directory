# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_dialogflow_v2beta1_intent_message_rbm_card_content import GoogleCloudDialogflowV2beta1IntentMessageRbmCardContent
from openapi_server import util


class GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, card_content: GoogleCloudDialogflowV2beta1IntentMessageRbmCardContent=None, card_orientation: str=None, thumbnail_image_alignment: str=None):
        """GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard - a model defined in OpenAPI

        :param card_content: The card_content of this GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard.
        :param card_orientation: The card_orientation of this GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard.
        :param thumbnail_image_alignment: The thumbnail_image_alignment of this GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard.
        """
        self.openapi_types = {
            'card_content': GoogleCloudDialogflowV2beta1IntentMessageRbmCardContent,
            'card_orientation': str,
            'thumbnail_image_alignment': str
        }

        self.attribute_map = {
            'card_content': 'cardContent',
            'card_orientation': 'cardOrientation',
            'thumbnail_image_alignment': 'thumbnailImageAlignment'
        }

        self._card_content = card_content
        self._card_orientation = card_orientation
        self._thumbnail_image_alignment = thumbnail_image_alignment

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard of this GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def card_content(self):
        """Gets the card_content of this GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard.


        :return: The card_content of this GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard.
        :rtype: GoogleCloudDialogflowV2beta1IntentMessageRbmCardContent
        """
        return self._card_content

    @card_content.setter
    def card_content(self, card_content):
        """Sets the card_content of this GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard.


        :param card_content: The card_content of this GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard.
        :type card_content: GoogleCloudDialogflowV2beta1IntentMessageRbmCardContent
        """

        self._card_content = card_content

    @property
    def card_orientation(self):
        """Gets the card_orientation of this GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard.

        Required. Orientation of the card.

        :return: The card_orientation of this GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard.
        :rtype: str
        """
        return self._card_orientation

    @card_orientation.setter
    def card_orientation(self, card_orientation):
        """Sets the card_orientation of this GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard.

        Required. Orientation of the card.

        :param card_orientation: The card_orientation of this GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard.
        :type card_orientation: str
        """
        allowed_values = ["CARD_ORIENTATION_UNSPECIFIED", "HORIZONTAL", "VERTICAL"]  # noqa: E501
        if card_orientation not in allowed_values:
            raise ValueError(
                "Invalid value for `card_orientation` ({0}), must be one of {1}"
                .format(card_orientation, allowed_values)
            )

        self._card_orientation = card_orientation

    @property
    def thumbnail_image_alignment(self):
        """Gets the thumbnail_image_alignment of this GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard.

        Required if orientation is horizontal. Image preview alignment for standalone cards with horizontal layout.

        :return: The thumbnail_image_alignment of this GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard.
        :rtype: str
        """
        return self._thumbnail_image_alignment

    @thumbnail_image_alignment.setter
    def thumbnail_image_alignment(self, thumbnail_image_alignment):
        """Sets the thumbnail_image_alignment of this GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard.

        Required if orientation is horizontal. Image preview alignment for standalone cards with horizontal layout.

        :param thumbnail_image_alignment: The thumbnail_image_alignment of this GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard.
        :type thumbnail_image_alignment: str
        """
        allowed_values = ["THUMBNAIL_IMAGE_ALIGNMENT_UNSPECIFIED", "LEFT", "RIGHT"]  # noqa: E501
        if thumbnail_image_alignment not in allowed_values:
            raise ValueError(
                "Invalid value for `thumbnail_image_alignment` ({0}), must be one of {1}"
                .format(thumbnail_image_alignment, allowed_values)
            )

        self._thumbnail_image_alignment = thumbnail_image_alignment
