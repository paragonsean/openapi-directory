# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_dialogflow_cx_v3_match import GoogleCloudDialogflowCxV3Match
from openapi_server.models.google_cloud_dialogflow_cx_v3_page import GoogleCloudDialogflowCxV3Page
from openapi_server import util


class GoogleCloudDialogflowCxV3MatchIntentResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, current_page: GoogleCloudDialogflowCxV3Page=None, matches: List[GoogleCloudDialogflowCxV3Match]=None, text: str=None, transcript: str=None, trigger_event: str=None, trigger_intent: str=None):
        """GoogleCloudDialogflowCxV3MatchIntentResponse - a model defined in OpenAPI

        :param current_page: The current_page of this GoogleCloudDialogflowCxV3MatchIntentResponse.
        :param matches: The matches of this GoogleCloudDialogflowCxV3MatchIntentResponse.
        :param text: The text of this GoogleCloudDialogflowCxV3MatchIntentResponse.
        :param transcript: The transcript of this GoogleCloudDialogflowCxV3MatchIntentResponse.
        :param trigger_event: The trigger_event of this GoogleCloudDialogflowCxV3MatchIntentResponse.
        :param trigger_intent: The trigger_intent of this GoogleCloudDialogflowCxV3MatchIntentResponse.
        """
        self.openapi_types = {
            'current_page': GoogleCloudDialogflowCxV3Page,
            'matches': List[GoogleCloudDialogflowCxV3Match],
            'text': str,
            'transcript': str,
            'trigger_event': str,
            'trigger_intent': str
        }

        self.attribute_map = {
            'current_page': 'currentPage',
            'matches': 'matches',
            'text': 'text',
            'transcript': 'transcript',
            'trigger_event': 'triggerEvent',
            'trigger_intent': 'triggerIntent'
        }

        self._current_page = current_page
        self._matches = matches
        self._text = text
        self._transcript = transcript
        self._trigger_event = trigger_event
        self._trigger_intent = trigger_intent

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDialogflowCxV3MatchIntentResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDialogflowCxV3MatchIntentResponse of this GoogleCloudDialogflowCxV3MatchIntentResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def current_page(self):
        """Gets the current_page of this GoogleCloudDialogflowCxV3MatchIntentResponse.


        :return: The current_page of this GoogleCloudDialogflowCxV3MatchIntentResponse.
        :rtype: GoogleCloudDialogflowCxV3Page
        """
        return self._current_page

    @current_page.setter
    def current_page(self, current_page):
        """Sets the current_page of this GoogleCloudDialogflowCxV3MatchIntentResponse.


        :param current_page: The current_page of this GoogleCloudDialogflowCxV3MatchIntentResponse.
        :type current_page: GoogleCloudDialogflowCxV3Page
        """

        self._current_page = current_page

    @property
    def matches(self):
        """Gets the matches of this GoogleCloudDialogflowCxV3MatchIntentResponse.

        Match results, if more than one, ordered descendingly by the confidence we have that the particular intent matches the query.

        :return: The matches of this GoogleCloudDialogflowCxV3MatchIntentResponse.
        :rtype: List[GoogleCloudDialogflowCxV3Match]
        """
        return self._matches

    @matches.setter
    def matches(self, matches):
        """Sets the matches of this GoogleCloudDialogflowCxV3MatchIntentResponse.

        Match results, if more than one, ordered descendingly by the confidence we have that the particular intent matches the query.

        :param matches: The matches of this GoogleCloudDialogflowCxV3MatchIntentResponse.
        :type matches: List[GoogleCloudDialogflowCxV3Match]
        """

        self._matches = matches

    @property
    def text(self):
        """Gets the text of this GoogleCloudDialogflowCxV3MatchIntentResponse.

        If natural language text was provided as input, this field will contain a copy of the text.

        :return: The text of this GoogleCloudDialogflowCxV3MatchIntentResponse.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text):
        """Sets the text of this GoogleCloudDialogflowCxV3MatchIntentResponse.

        If natural language text was provided as input, this field will contain a copy of the text.

        :param text: The text of this GoogleCloudDialogflowCxV3MatchIntentResponse.
        :type text: str
        """

        self._text = text

    @property
    def transcript(self):
        """Gets the transcript of this GoogleCloudDialogflowCxV3MatchIntentResponse.

        If natural language speech audio was provided as input, this field will contain the transcript for the audio.

        :return: The transcript of this GoogleCloudDialogflowCxV3MatchIntentResponse.
        :rtype: str
        """
        return self._transcript

    @transcript.setter
    def transcript(self, transcript):
        """Sets the transcript of this GoogleCloudDialogflowCxV3MatchIntentResponse.

        If natural language speech audio was provided as input, this field will contain the transcript for the audio.

        :param transcript: The transcript of this GoogleCloudDialogflowCxV3MatchIntentResponse.
        :type transcript: str
        """

        self._transcript = transcript

    @property
    def trigger_event(self):
        """Gets the trigger_event of this GoogleCloudDialogflowCxV3MatchIntentResponse.

        If an event was provided as input, this field will contain a copy of the event name.

        :return: The trigger_event of this GoogleCloudDialogflowCxV3MatchIntentResponse.
        :rtype: str
        """
        return self._trigger_event

    @trigger_event.setter
    def trigger_event(self, trigger_event):
        """Sets the trigger_event of this GoogleCloudDialogflowCxV3MatchIntentResponse.

        If an event was provided as input, this field will contain a copy of the event name.

        :param trigger_event: The trigger_event of this GoogleCloudDialogflowCxV3MatchIntentResponse.
        :type trigger_event: str
        """

        self._trigger_event = trigger_event

    @property
    def trigger_intent(self):
        """Gets the trigger_intent of this GoogleCloudDialogflowCxV3MatchIntentResponse.

        If an intent was provided as input, this field will contain a copy of the intent identifier. Format: `projects//locations//agents//intents/`.

        :return: The trigger_intent of this GoogleCloudDialogflowCxV3MatchIntentResponse.
        :rtype: str
        """
        return self._trigger_intent

    @trigger_intent.setter
    def trigger_intent(self, trigger_intent):
        """Sets the trigger_intent of this GoogleCloudDialogflowCxV3MatchIntentResponse.

        If an intent was provided as input, this field will contain a copy of the intent identifier. Format: `projects//locations//agents//intents/`.

        :param trigger_intent: The trigger_intent of this GoogleCloudDialogflowCxV3MatchIntentResponse.
        :type trigger_intent: str
        """

        self._trigger_intent = trigger_intent
