# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_dialogflow_cx_v3_output_audio_config import GoogleCloudDialogflowCxV3OutputAudioConfig
from openapi_server.models.google_cloud_dialogflow_cx_v3_query_result import GoogleCloudDialogflowCxV3QueryResult
from openapi_server import util


class GoogleCloudDialogflowCxV3DetectIntentResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, allow_cancellation: bool=None, output_audio: str=None, output_audio_config: GoogleCloudDialogflowCxV3OutputAudioConfig=None, query_result: GoogleCloudDialogflowCxV3QueryResult=None, response_id: str=None, response_type: str=None):
        """GoogleCloudDialogflowCxV3DetectIntentResponse - a model defined in OpenAPI

        :param allow_cancellation: The allow_cancellation of this GoogleCloudDialogflowCxV3DetectIntentResponse.
        :param output_audio: The output_audio of this GoogleCloudDialogflowCxV3DetectIntentResponse.
        :param output_audio_config: The output_audio_config of this GoogleCloudDialogflowCxV3DetectIntentResponse.
        :param query_result: The query_result of this GoogleCloudDialogflowCxV3DetectIntentResponse.
        :param response_id: The response_id of this GoogleCloudDialogflowCxV3DetectIntentResponse.
        :param response_type: The response_type of this GoogleCloudDialogflowCxV3DetectIntentResponse.
        """
        self.openapi_types = {
            'allow_cancellation': bool,
            'output_audio': str,
            'output_audio_config': GoogleCloudDialogflowCxV3OutputAudioConfig,
            'query_result': GoogleCloudDialogflowCxV3QueryResult,
            'response_id': str,
            'response_type': str
        }

        self.attribute_map = {
            'allow_cancellation': 'allowCancellation',
            'output_audio': 'outputAudio',
            'output_audio_config': 'outputAudioConfig',
            'query_result': 'queryResult',
            'response_id': 'responseId',
            'response_type': 'responseType'
        }

        self._allow_cancellation = allow_cancellation
        self._output_audio = output_audio
        self._output_audio_config = output_audio_config
        self._query_result = query_result
        self._response_id = response_id
        self._response_type = response_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDialogflowCxV3DetectIntentResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDialogflowCxV3DetectIntentResponse of this GoogleCloudDialogflowCxV3DetectIntentResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allow_cancellation(self):
        """Gets the allow_cancellation of this GoogleCloudDialogflowCxV3DetectIntentResponse.

        Indicates whether the partial response can be cancelled when a later response arrives. e.g. if the agent specified some music as partial response, it can be cancelled.

        :return: The allow_cancellation of this GoogleCloudDialogflowCxV3DetectIntentResponse.
        :rtype: bool
        """
        return self._allow_cancellation

    @allow_cancellation.setter
    def allow_cancellation(self, allow_cancellation):
        """Sets the allow_cancellation of this GoogleCloudDialogflowCxV3DetectIntentResponse.

        Indicates whether the partial response can be cancelled when a later response arrives. e.g. if the agent specified some music as partial response, it can be cancelled.

        :param allow_cancellation: The allow_cancellation of this GoogleCloudDialogflowCxV3DetectIntentResponse.
        :type allow_cancellation: bool
        """

        self._allow_cancellation = allow_cancellation

    @property
    def output_audio(self):
        """Gets the output_audio of this GoogleCloudDialogflowCxV3DetectIntentResponse.

        The audio data bytes encoded as specified in the request. Note: The output audio is generated based on the values of default platform text responses found in the `query_result.response_messages` field. If multiple default text responses exist, they will be concatenated when generating audio. If no default platform text responses exist, the generated audio content will be empty. In some scenarios, multiple output audio fields may be present in the response structure. In these cases, only the top-most-level audio output has content.

        :return: The output_audio of this GoogleCloudDialogflowCxV3DetectIntentResponse.
        :rtype: str
        """
        return self._output_audio

    @output_audio.setter
    def output_audio(self, output_audio):
        """Sets the output_audio of this GoogleCloudDialogflowCxV3DetectIntentResponse.

        The audio data bytes encoded as specified in the request. Note: The output audio is generated based on the values of default platform text responses found in the `query_result.response_messages` field. If multiple default text responses exist, they will be concatenated when generating audio. If no default platform text responses exist, the generated audio content will be empty. In some scenarios, multiple output audio fields may be present in the response structure. In these cases, only the top-most-level audio output has content.

        :param output_audio: The output_audio of this GoogleCloudDialogflowCxV3DetectIntentResponse.
        :type output_audio: str
        """

        self._output_audio = output_audio

    @property
    def output_audio_config(self):
        """Gets the output_audio_config of this GoogleCloudDialogflowCxV3DetectIntentResponse.


        :return: The output_audio_config of this GoogleCloudDialogflowCxV3DetectIntentResponse.
        :rtype: GoogleCloudDialogflowCxV3OutputAudioConfig
        """
        return self._output_audio_config

    @output_audio_config.setter
    def output_audio_config(self, output_audio_config):
        """Sets the output_audio_config of this GoogleCloudDialogflowCxV3DetectIntentResponse.


        :param output_audio_config: The output_audio_config of this GoogleCloudDialogflowCxV3DetectIntentResponse.
        :type output_audio_config: GoogleCloudDialogflowCxV3OutputAudioConfig
        """

        self._output_audio_config = output_audio_config

    @property
    def query_result(self):
        """Gets the query_result of this GoogleCloudDialogflowCxV3DetectIntentResponse.


        :return: The query_result of this GoogleCloudDialogflowCxV3DetectIntentResponse.
        :rtype: GoogleCloudDialogflowCxV3QueryResult
        """
        return self._query_result

    @query_result.setter
    def query_result(self, query_result):
        """Sets the query_result of this GoogleCloudDialogflowCxV3DetectIntentResponse.


        :param query_result: The query_result of this GoogleCloudDialogflowCxV3DetectIntentResponse.
        :type query_result: GoogleCloudDialogflowCxV3QueryResult
        """

        self._query_result = query_result

    @property
    def response_id(self):
        """Gets the response_id of this GoogleCloudDialogflowCxV3DetectIntentResponse.

        Output only. The unique identifier of the response. It can be used to locate a response in the training example set or for reporting issues.

        :return: The response_id of this GoogleCloudDialogflowCxV3DetectIntentResponse.
        :rtype: str
        """
        return self._response_id

    @response_id.setter
    def response_id(self, response_id):
        """Sets the response_id of this GoogleCloudDialogflowCxV3DetectIntentResponse.

        Output only. The unique identifier of the response. It can be used to locate a response in the training example set or for reporting issues.

        :param response_id: The response_id of this GoogleCloudDialogflowCxV3DetectIntentResponse.
        :type response_id: str
        """

        self._response_id = response_id

    @property
    def response_type(self):
        """Gets the response_type of this GoogleCloudDialogflowCxV3DetectIntentResponse.

        Response type.

        :return: The response_type of this GoogleCloudDialogflowCxV3DetectIntentResponse.
        :rtype: str
        """
        return self._response_type

    @response_type.setter
    def response_type(self, response_type):
        """Sets the response_type of this GoogleCloudDialogflowCxV3DetectIntentResponse.

        Response type.

        :param response_type: The response_type of this GoogleCloudDialogflowCxV3DetectIntentResponse.
        :type response_type: str
        """
        allowed_values = ["RESPONSE_TYPE_UNSPECIFIED", "PARTIAL", "FINAL"]  # noqa: E501
        if response_type not in allowed_values:
            raise ValueError(
                "Invalid value for `response_type` ({0}), must be one of {1}"
                .format(response_type, allowed_values)
            )

        self._response_type = response_type
