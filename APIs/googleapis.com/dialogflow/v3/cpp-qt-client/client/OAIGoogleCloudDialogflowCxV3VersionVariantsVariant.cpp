/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowCxV3VersionVariantsVariant.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowCxV3VersionVariantsVariant::OAIGoogleCloudDialogflowCxV3VersionVariantsVariant(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowCxV3VersionVariantsVariant::OAIGoogleCloudDialogflowCxV3VersionVariantsVariant() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowCxV3VersionVariantsVariant::~OAIGoogleCloudDialogflowCxV3VersionVariantsVariant() {}

void OAIGoogleCloudDialogflowCxV3VersionVariantsVariant::initializeModel() {

    m_is_control_group_isSet = false;
    m_is_control_group_isValid = false;

    m_traffic_allocation_isSet = false;
    m_traffic_allocation_isValid = false;

    m_version_isSet = false;
    m_version_isValid = false;
}

void OAIGoogleCloudDialogflowCxV3VersionVariantsVariant::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowCxV3VersionVariantsVariant::fromJsonObject(QJsonObject json) {

    m_is_control_group_isValid = ::OpenAPI::fromJsonValue(m_is_control_group, json[QString("isControlGroup")]);
    m_is_control_group_isSet = !json[QString("isControlGroup")].isNull() && m_is_control_group_isValid;

    m_traffic_allocation_isValid = ::OpenAPI::fromJsonValue(m_traffic_allocation, json[QString("trafficAllocation")]);
    m_traffic_allocation_isSet = !json[QString("trafficAllocation")].isNull() && m_traffic_allocation_isValid;

    m_version_isValid = ::OpenAPI::fromJsonValue(m_version, json[QString("version")]);
    m_version_isSet = !json[QString("version")].isNull() && m_version_isValid;
}

QString OAIGoogleCloudDialogflowCxV3VersionVariantsVariant::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowCxV3VersionVariantsVariant::asJsonObject() const {
    QJsonObject obj;
    if (m_is_control_group_isSet) {
        obj.insert(QString("isControlGroup"), ::OpenAPI::toJsonValue(m_is_control_group));
    }
    if (m_traffic_allocation_isSet) {
        obj.insert(QString("trafficAllocation"), ::OpenAPI::toJsonValue(m_traffic_allocation));
    }
    if (m_version_isSet) {
        obj.insert(QString("version"), ::OpenAPI::toJsonValue(m_version));
    }
    return obj;
}

bool OAIGoogleCloudDialogflowCxV3VersionVariantsVariant::isIsControlGroup() const {
    return m_is_control_group;
}
void OAIGoogleCloudDialogflowCxV3VersionVariantsVariant::setIsControlGroup(const bool &is_control_group) {
    m_is_control_group = is_control_group;
    m_is_control_group_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3VersionVariantsVariant::is_is_control_group_Set() const{
    return m_is_control_group_isSet;
}

bool OAIGoogleCloudDialogflowCxV3VersionVariantsVariant::is_is_control_group_Valid() const{
    return m_is_control_group_isValid;
}

float OAIGoogleCloudDialogflowCxV3VersionVariantsVariant::getTrafficAllocation() const {
    return m_traffic_allocation;
}
void OAIGoogleCloudDialogflowCxV3VersionVariantsVariant::setTrafficAllocation(const float &traffic_allocation) {
    m_traffic_allocation = traffic_allocation;
    m_traffic_allocation_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3VersionVariantsVariant::is_traffic_allocation_Set() const{
    return m_traffic_allocation_isSet;
}

bool OAIGoogleCloudDialogflowCxV3VersionVariantsVariant::is_traffic_allocation_Valid() const{
    return m_traffic_allocation_isValid;
}

QString OAIGoogleCloudDialogflowCxV3VersionVariantsVariant::getVersion() const {
    return m_version;
}
void OAIGoogleCloudDialogflowCxV3VersionVariantsVariant::setVersion(const QString &version) {
    m_version = version;
    m_version_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3VersionVariantsVariant::is_version_Set() const{
    return m_version_isSet;
}

bool OAIGoogleCloudDialogflowCxV3VersionVariantsVariant::is_version_Valid() const{
    return m_version_isValid;
}

bool OAIGoogleCloudDialogflowCxV3VersionVariantsVariant::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_is_control_group_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_traffic_allocation_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_version_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowCxV3VersionVariantsVariant::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
