/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowCxV3FulfillIntentRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowCxV3FulfillIntentRequest::OAIGoogleCloudDialogflowCxV3FulfillIntentRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowCxV3FulfillIntentRequest::OAIGoogleCloudDialogflowCxV3FulfillIntentRequest() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowCxV3FulfillIntentRequest::~OAIGoogleCloudDialogflowCxV3FulfillIntentRequest() {}

void OAIGoogleCloudDialogflowCxV3FulfillIntentRequest::initializeModel() {

    m_match_isSet = false;
    m_match_isValid = false;

    m_match_intent_request_isSet = false;
    m_match_intent_request_isValid = false;

    m_output_audio_config_isSet = false;
    m_output_audio_config_isValid = false;
}

void OAIGoogleCloudDialogflowCxV3FulfillIntentRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowCxV3FulfillIntentRequest::fromJsonObject(QJsonObject json) {

    m_match_isValid = ::OpenAPI::fromJsonValue(m_match, json[QString("match")]);
    m_match_isSet = !json[QString("match")].isNull() && m_match_isValid;

    m_match_intent_request_isValid = ::OpenAPI::fromJsonValue(m_match_intent_request, json[QString("matchIntentRequest")]);
    m_match_intent_request_isSet = !json[QString("matchIntentRequest")].isNull() && m_match_intent_request_isValid;

    m_output_audio_config_isValid = ::OpenAPI::fromJsonValue(m_output_audio_config, json[QString("outputAudioConfig")]);
    m_output_audio_config_isSet = !json[QString("outputAudioConfig")].isNull() && m_output_audio_config_isValid;
}

QString OAIGoogleCloudDialogflowCxV3FulfillIntentRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowCxV3FulfillIntentRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_match.isSet()) {
        obj.insert(QString("match"), ::OpenAPI::toJsonValue(m_match));
    }
    if (m_match_intent_request.isSet()) {
        obj.insert(QString("matchIntentRequest"), ::OpenAPI::toJsonValue(m_match_intent_request));
    }
    if (m_output_audio_config.isSet()) {
        obj.insert(QString("outputAudioConfig"), ::OpenAPI::toJsonValue(m_output_audio_config));
    }
    return obj;
}

OAIGoogleCloudDialogflowCxV3Match OAIGoogleCloudDialogflowCxV3FulfillIntentRequest::getMatch() const {
    return m_match;
}
void OAIGoogleCloudDialogflowCxV3FulfillIntentRequest::setMatch(const OAIGoogleCloudDialogflowCxV3Match &match) {
    m_match = match;
    m_match_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3FulfillIntentRequest::is_match_Set() const{
    return m_match_isSet;
}

bool OAIGoogleCloudDialogflowCxV3FulfillIntentRequest::is_match_Valid() const{
    return m_match_isValid;
}

OAIGoogleCloudDialogflowCxV3MatchIntentRequest OAIGoogleCloudDialogflowCxV3FulfillIntentRequest::getMatchIntentRequest() const {
    return m_match_intent_request;
}
void OAIGoogleCloudDialogflowCxV3FulfillIntentRequest::setMatchIntentRequest(const OAIGoogleCloudDialogflowCxV3MatchIntentRequest &match_intent_request) {
    m_match_intent_request = match_intent_request;
    m_match_intent_request_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3FulfillIntentRequest::is_match_intent_request_Set() const{
    return m_match_intent_request_isSet;
}

bool OAIGoogleCloudDialogflowCxV3FulfillIntentRequest::is_match_intent_request_Valid() const{
    return m_match_intent_request_isValid;
}

OAIGoogleCloudDialogflowCxV3OutputAudioConfig OAIGoogleCloudDialogflowCxV3FulfillIntentRequest::getOutputAudioConfig() const {
    return m_output_audio_config;
}
void OAIGoogleCloudDialogflowCxV3FulfillIntentRequest::setOutputAudioConfig(const OAIGoogleCloudDialogflowCxV3OutputAudioConfig &output_audio_config) {
    m_output_audio_config = output_audio_config;
    m_output_audio_config_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3FulfillIntentRequest::is_output_audio_config_Set() const{
    return m_output_audio_config_isSet;
}

bool OAIGoogleCloudDialogflowCxV3FulfillIntentRequest::is_output_audio_config_Valid() const{
    return m_output_audio_config_isValid;
}

bool OAIGoogleCloudDialogflowCxV3FulfillIntentRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_match.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_match_intent_request.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_output_audio_config.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowCxV3FulfillIntentRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
