/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowCxV3ImportIntentsRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowCxV3ImportIntentsRequest::OAIGoogleCloudDialogflowCxV3ImportIntentsRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowCxV3ImportIntentsRequest::OAIGoogleCloudDialogflowCxV3ImportIntentsRequest() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowCxV3ImportIntentsRequest::~OAIGoogleCloudDialogflowCxV3ImportIntentsRequest() {}

void OAIGoogleCloudDialogflowCxV3ImportIntentsRequest::initializeModel() {

    m_intents_content_isSet = false;
    m_intents_content_isValid = false;

    m_intents_uri_isSet = false;
    m_intents_uri_isValid = false;

    m_merge_option_isSet = false;
    m_merge_option_isValid = false;
}

void OAIGoogleCloudDialogflowCxV3ImportIntentsRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowCxV3ImportIntentsRequest::fromJsonObject(QJsonObject json) {

    m_intents_content_isValid = ::OpenAPI::fromJsonValue(m_intents_content, json[QString("intentsContent")]);
    m_intents_content_isSet = !json[QString("intentsContent")].isNull() && m_intents_content_isValid;

    m_intents_uri_isValid = ::OpenAPI::fromJsonValue(m_intents_uri, json[QString("intentsUri")]);
    m_intents_uri_isSet = !json[QString("intentsUri")].isNull() && m_intents_uri_isValid;

    m_merge_option_isValid = ::OpenAPI::fromJsonValue(m_merge_option, json[QString("mergeOption")]);
    m_merge_option_isSet = !json[QString("mergeOption")].isNull() && m_merge_option_isValid;
}

QString OAIGoogleCloudDialogflowCxV3ImportIntentsRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowCxV3ImportIntentsRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_intents_content.isSet()) {
        obj.insert(QString("intentsContent"), ::OpenAPI::toJsonValue(m_intents_content));
    }
    if (m_intents_uri_isSet) {
        obj.insert(QString("intentsUri"), ::OpenAPI::toJsonValue(m_intents_uri));
    }
    if (m_merge_option_isSet) {
        obj.insert(QString("mergeOption"), ::OpenAPI::toJsonValue(m_merge_option));
    }
    return obj;
}

OAIGoogleCloudDialogflowCxV3InlineSource OAIGoogleCloudDialogflowCxV3ImportIntentsRequest::getIntentsContent() const {
    return m_intents_content;
}
void OAIGoogleCloudDialogflowCxV3ImportIntentsRequest::setIntentsContent(const OAIGoogleCloudDialogflowCxV3InlineSource &intents_content) {
    m_intents_content = intents_content;
    m_intents_content_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3ImportIntentsRequest::is_intents_content_Set() const{
    return m_intents_content_isSet;
}

bool OAIGoogleCloudDialogflowCxV3ImportIntentsRequest::is_intents_content_Valid() const{
    return m_intents_content_isValid;
}

QString OAIGoogleCloudDialogflowCxV3ImportIntentsRequest::getIntentsUri() const {
    return m_intents_uri;
}
void OAIGoogleCloudDialogflowCxV3ImportIntentsRequest::setIntentsUri(const QString &intents_uri) {
    m_intents_uri = intents_uri;
    m_intents_uri_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3ImportIntentsRequest::is_intents_uri_Set() const{
    return m_intents_uri_isSet;
}

bool OAIGoogleCloudDialogflowCxV3ImportIntentsRequest::is_intents_uri_Valid() const{
    return m_intents_uri_isValid;
}

QString OAIGoogleCloudDialogflowCxV3ImportIntentsRequest::getMergeOption() const {
    return m_merge_option;
}
void OAIGoogleCloudDialogflowCxV3ImportIntentsRequest::setMergeOption(const QString &merge_option) {
    m_merge_option = merge_option;
    m_merge_option_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3ImportIntentsRequest::is_merge_option_Set() const{
    return m_merge_option_isSet;
}

bool OAIGoogleCloudDialogflowCxV3ImportIntentsRequest::is_merge_option_Valid() const{
    return m_merge_option_isValid;
}

bool OAIGoogleCloudDialogflowCxV3ImportIntentsRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_intents_content.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_intents_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_merge_option_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowCxV3ImportIntentsRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
