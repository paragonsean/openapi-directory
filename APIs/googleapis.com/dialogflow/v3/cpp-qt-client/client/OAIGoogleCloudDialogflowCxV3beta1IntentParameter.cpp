/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowCxV3beta1IntentParameter.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowCxV3beta1IntentParameter::OAIGoogleCloudDialogflowCxV3beta1IntentParameter(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowCxV3beta1IntentParameter::OAIGoogleCloudDialogflowCxV3beta1IntentParameter() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowCxV3beta1IntentParameter::~OAIGoogleCloudDialogflowCxV3beta1IntentParameter() {}

void OAIGoogleCloudDialogflowCxV3beta1IntentParameter::initializeModel() {

    m_entity_type_isSet = false;
    m_entity_type_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_is_list_isSet = false;
    m_is_list_isValid = false;

    m_redact_isSet = false;
    m_redact_isValid = false;
}

void OAIGoogleCloudDialogflowCxV3beta1IntentParameter::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowCxV3beta1IntentParameter::fromJsonObject(QJsonObject json) {

    m_entity_type_isValid = ::OpenAPI::fromJsonValue(m_entity_type, json[QString("entityType")]);
    m_entity_type_isSet = !json[QString("entityType")].isNull() && m_entity_type_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_is_list_isValid = ::OpenAPI::fromJsonValue(m_is_list, json[QString("isList")]);
    m_is_list_isSet = !json[QString("isList")].isNull() && m_is_list_isValid;

    m_redact_isValid = ::OpenAPI::fromJsonValue(m_redact, json[QString("redact")]);
    m_redact_isSet = !json[QString("redact")].isNull() && m_redact_isValid;
}

QString OAIGoogleCloudDialogflowCxV3beta1IntentParameter::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowCxV3beta1IntentParameter::asJsonObject() const {
    QJsonObject obj;
    if (m_entity_type_isSet) {
        obj.insert(QString("entityType"), ::OpenAPI::toJsonValue(m_entity_type));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_is_list_isSet) {
        obj.insert(QString("isList"), ::OpenAPI::toJsonValue(m_is_list));
    }
    if (m_redact_isSet) {
        obj.insert(QString("redact"), ::OpenAPI::toJsonValue(m_redact));
    }
    return obj;
}

QString OAIGoogleCloudDialogflowCxV3beta1IntentParameter::getEntityType() const {
    return m_entity_type;
}
void OAIGoogleCloudDialogflowCxV3beta1IntentParameter::setEntityType(const QString &entity_type) {
    m_entity_type = entity_type;
    m_entity_type_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1IntentParameter::is_entity_type_Set() const{
    return m_entity_type_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1IntentParameter::is_entity_type_Valid() const{
    return m_entity_type_isValid;
}

QString OAIGoogleCloudDialogflowCxV3beta1IntentParameter::getId() const {
    return m_id;
}
void OAIGoogleCloudDialogflowCxV3beta1IntentParameter::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1IntentParameter::is_id_Set() const{
    return m_id_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1IntentParameter::is_id_Valid() const{
    return m_id_isValid;
}

bool OAIGoogleCloudDialogflowCxV3beta1IntentParameter::isIsList() const {
    return m_is_list;
}
void OAIGoogleCloudDialogflowCxV3beta1IntentParameter::setIsList(const bool &is_list) {
    m_is_list = is_list;
    m_is_list_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1IntentParameter::is_is_list_Set() const{
    return m_is_list_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1IntentParameter::is_is_list_Valid() const{
    return m_is_list_isValid;
}

bool OAIGoogleCloudDialogflowCxV3beta1IntentParameter::isRedact() const {
    return m_redact;
}
void OAIGoogleCloudDialogflowCxV3beta1IntentParameter::setRedact(const bool &redact) {
    m_redact = redact;
    m_redact_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1IntentParameter::is_redact_Set() const{
    return m_redact_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1IntentParameter::is_redact_Valid() const{
    return m_redact_isValid;
}

bool OAIGoogleCloudDialogflowCxV3beta1IntentParameter::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_entity_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_list_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_redact_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowCxV3beta1IntentParameter::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
