/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowCxV3beta1Intent.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowCxV3beta1Intent::OAIGoogleCloudDialogflowCxV3beta1Intent(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowCxV3beta1Intent::OAIGoogleCloudDialogflowCxV3beta1Intent() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowCxV3beta1Intent::~OAIGoogleCloudDialogflowCxV3beta1Intent() {}

void OAIGoogleCloudDialogflowCxV3beta1Intent::initializeModel() {

    m_description_isSet = false;
    m_description_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_is_fallback_isSet = false;
    m_is_fallback_isValid = false;

    m_labels_isSet = false;
    m_labels_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_parameters_isSet = false;
    m_parameters_isValid = false;

    m_priority_isSet = false;
    m_priority_isValid = false;

    m_training_phrases_isSet = false;
    m_training_phrases_isValid = false;
}

void OAIGoogleCloudDialogflowCxV3beta1Intent::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowCxV3beta1Intent::fromJsonObject(QJsonObject json) {

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_is_fallback_isValid = ::OpenAPI::fromJsonValue(m_is_fallback, json[QString("isFallback")]);
    m_is_fallback_isSet = !json[QString("isFallback")].isNull() && m_is_fallback_isValid;

    m_labels_isValid = ::OpenAPI::fromJsonValue(m_labels, json[QString("labels")]);
    m_labels_isSet = !json[QString("labels")].isNull() && m_labels_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_parameters_isValid = ::OpenAPI::fromJsonValue(m_parameters, json[QString("parameters")]);
    m_parameters_isSet = !json[QString("parameters")].isNull() && m_parameters_isValid;

    m_priority_isValid = ::OpenAPI::fromJsonValue(m_priority, json[QString("priority")]);
    m_priority_isSet = !json[QString("priority")].isNull() && m_priority_isValid;

    m_training_phrases_isValid = ::OpenAPI::fromJsonValue(m_training_phrases, json[QString("trainingPhrases")]);
    m_training_phrases_isSet = !json[QString("trainingPhrases")].isNull() && m_training_phrases_isValid;
}

QString OAIGoogleCloudDialogflowCxV3beta1Intent::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowCxV3beta1Intent::asJsonObject() const {
    QJsonObject obj;
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_is_fallback_isSet) {
        obj.insert(QString("isFallback"), ::OpenAPI::toJsonValue(m_is_fallback));
    }
    if (m_labels.size() > 0) {
        obj.insert(QString("labels"), ::OpenAPI::toJsonValue(m_labels));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_parameters.size() > 0) {
        obj.insert(QString("parameters"), ::OpenAPI::toJsonValue(m_parameters));
    }
    if (m_priority_isSet) {
        obj.insert(QString("priority"), ::OpenAPI::toJsonValue(m_priority));
    }
    if (m_training_phrases.size() > 0) {
        obj.insert(QString("trainingPhrases"), ::OpenAPI::toJsonValue(m_training_phrases));
    }
    return obj;
}

QString OAIGoogleCloudDialogflowCxV3beta1Intent::getDescription() const {
    return m_description;
}
void OAIGoogleCloudDialogflowCxV3beta1Intent::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1Intent::is_description_Set() const{
    return m_description_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1Intent::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIGoogleCloudDialogflowCxV3beta1Intent::getDisplayName() const {
    return m_display_name;
}
void OAIGoogleCloudDialogflowCxV3beta1Intent::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1Intent::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1Intent::is_display_name_Valid() const{
    return m_display_name_isValid;
}

bool OAIGoogleCloudDialogflowCxV3beta1Intent::isIsFallback() const {
    return m_is_fallback;
}
void OAIGoogleCloudDialogflowCxV3beta1Intent::setIsFallback(const bool &is_fallback) {
    m_is_fallback = is_fallback;
    m_is_fallback_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1Intent::is_is_fallback_Set() const{
    return m_is_fallback_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1Intent::is_is_fallback_Valid() const{
    return m_is_fallback_isValid;
}

QMap<QString, QString> OAIGoogleCloudDialogflowCxV3beta1Intent::getLabels() const {
    return m_labels;
}
void OAIGoogleCloudDialogflowCxV3beta1Intent::setLabels(const QMap<QString, QString> &labels) {
    m_labels = labels;
    m_labels_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1Intent::is_labels_Set() const{
    return m_labels_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1Intent::is_labels_Valid() const{
    return m_labels_isValid;
}

QString OAIGoogleCloudDialogflowCxV3beta1Intent::getName() const {
    return m_name;
}
void OAIGoogleCloudDialogflowCxV3beta1Intent::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1Intent::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1Intent::is_name_Valid() const{
    return m_name_isValid;
}

QList<OAIGoogleCloudDialogflowCxV3beta1IntentParameter> OAIGoogleCloudDialogflowCxV3beta1Intent::getParameters() const {
    return m_parameters;
}
void OAIGoogleCloudDialogflowCxV3beta1Intent::setParameters(const QList<OAIGoogleCloudDialogflowCxV3beta1IntentParameter> &parameters) {
    m_parameters = parameters;
    m_parameters_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1Intent::is_parameters_Set() const{
    return m_parameters_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1Intent::is_parameters_Valid() const{
    return m_parameters_isValid;
}

qint32 OAIGoogleCloudDialogflowCxV3beta1Intent::getPriority() const {
    return m_priority;
}
void OAIGoogleCloudDialogflowCxV3beta1Intent::setPriority(const qint32 &priority) {
    m_priority = priority;
    m_priority_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1Intent::is_priority_Set() const{
    return m_priority_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1Intent::is_priority_Valid() const{
    return m_priority_isValid;
}

QList<OAIGoogleCloudDialogflowCxV3beta1IntentTrainingPhrase> OAIGoogleCloudDialogflowCxV3beta1Intent::getTrainingPhrases() const {
    return m_training_phrases;
}
void OAIGoogleCloudDialogflowCxV3beta1Intent::setTrainingPhrases(const QList<OAIGoogleCloudDialogflowCxV3beta1IntentTrainingPhrase> &training_phrases) {
    m_training_phrases = training_phrases;
    m_training_phrases_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1Intent::is_training_phrases_Set() const{
    return m_training_phrases_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1Intent::is_training_phrases_Valid() const{
    return m_training_phrases_isValid;
}

bool OAIGoogleCloudDialogflowCxV3beta1Intent::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_fallback_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_labels.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_parameters.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_priority_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_training_phrases.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowCxV3beta1Intent::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
