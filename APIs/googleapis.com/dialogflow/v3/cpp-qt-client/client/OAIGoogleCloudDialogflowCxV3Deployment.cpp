/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowCxV3Deployment.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowCxV3Deployment::OAIGoogleCloudDialogflowCxV3Deployment(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowCxV3Deployment::OAIGoogleCloudDialogflowCxV3Deployment() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowCxV3Deployment::~OAIGoogleCloudDialogflowCxV3Deployment() {}

void OAIGoogleCloudDialogflowCxV3Deployment::initializeModel() {

    m_end_time_isSet = false;
    m_end_time_isValid = false;

    m_flow_version_isSet = false;
    m_flow_version_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_result_isSet = false;
    m_result_isValid = false;

    m_start_time_isSet = false;
    m_start_time_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;
}

void OAIGoogleCloudDialogflowCxV3Deployment::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowCxV3Deployment::fromJsonObject(QJsonObject json) {

    m_end_time_isValid = ::OpenAPI::fromJsonValue(m_end_time, json[QString("endTime")]);
    m_end_time_isSet = !json[QString("endTime")].isNull() && m_end_time_isValid;

    m_flow_version_isValid = ::OpenAPI::fromJsonValue(m_flow_version, json[QString("flowVersion")]);
    m_flow_version_isSet = !json[QString("flowVersion")].isNull() && m_flow_version_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_result_isValid = ::OpenAPI::fromJsonValue(m_result, json[QString("result")]);
    m_result_isSet = !json[QString("result")].isNull() && m_result_isValid;

    m_start_time_isValid = ::OpenAPI::fromJsonValue(m_start_time, json[QString("startTime")]);
    m_start_time_isSet = !json[QString("startTime")].isNull() && m_start_time_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;
}

QString OAIGoogleCloudDialogflowCxV3Deployment::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowCxV3Deployment::asJsonObject() const {
    QJsonObject obj;
    if (m_end_time_isSet) {
        obj.insert(QString("endTime"), ::OpenAPI::toJsonValue(m_end_time));
    }
    if (m_flow_version_isSet) {
        obj.insert(QString("flowVersion"), ::OpenAPI::toJsonValue(m_flow_version));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_result.isSet()) {
        obj.insert(QString("result"), ::OpenAPI::toJsonValue(m_result));
    }
    if (m_start_time_isSet) {
        obj.insert(QString("startTime"), ::OpenAPI::toJsonValue(m_start_time));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    return obj;
}

QString OAIGoogleCloudDialogflowCxV3Deployment::getEndTime() const {
    return m_end_time;
}
void OAIGoogleCloudDialogflowCxV3Deployment::setEndTime(const QString &end_time) {
    m_end_time = end_time;
    m_end_time_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3Deployment::is_end_time_Set() const{
    return m_end_time_isSet;
}

bool OAIGoogleCloudDialogflowCxV3Deployment::is_end_time_Valid() const{
    return m_end_time_isValid;
}

QString OAIGoogleCloudDialogflowCxV3Deployment::getFlowVersion() const {
    return m_flow_version;
}
void OAIGoogleCloudDialogflowCxV3Deployment::setFlowVersion(const QString &flow_version) {
    m_flow_version = flow_version;
    m_flow_version_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3Deployment::is_flow_version_Set() const{
    return m_flow_version_isSet;
}

bool OAIGoogleCloudDialogflowCxV3Deployment::is_flow_version_Valid() const{
    return m_flow_version_isValid;
}

QString OAIGoogleCloudDialogflowCxV3Deployment::getName() const {
    return m_name;
}
void OAIGoogleCloudDialogflowCxV3Deployment::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3Deployment::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudDialogflowCxV3Deployment::is_name_Valid() const{
    return m_name_isValid;
}

OAIGoogleCloudDialogflowCxV3DeploymentResult OAIGoogleCloudDialogflowCxV3Deployment::getResult() const {
    return m_result;
}
void OAIGoogleCloudDialogflowCxV3Deployment::setResult(const OAIGoogleCloudDialogflowCxV3DeploymentResult &result) {
    m_result = result;
    m_result_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3Deployment::is_result_Set() const{
    return m_result_isSet;
}

bool OAIGoogleCloudDialogflowCxV3Deployment::is_result_Valid() const{
    return m_result_isValid;
}

QString OAIGoogleCloudDialogflowCxV3Deployment::getStartTime() const {
    return m_start_time;
}
void OAIGoogleCloudDialogflowCxV3Deployment::setStartTime(const QString &start_time) {
    m_start_time = start_time;
    m_start_time_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3Deployment::is_start_time_Set() const{
    return m_start_time_isSet;
}

bool OAIGoogleCloudDialogflowCxV3Deployment::is_start_time_Valid() const{
    return m_start_time_isValid;
}

QString OAIGoogleCloudDialogflowCxV3Deployment::getState() const {
    return m_state;
}
void OAIGoogleCloudDialogflowCxV3Deployment::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3Deployment::is_state_Set() const{
    return m_state_isSet;
}

bool OAIGoogleCloudDialogflowCxV3Deployment::is_state_Valid() const{
    return m_state_isValid;
}

bool OAIGoogleCloudDialogflowCxV3Deployment::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_end_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_flow_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_result.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowCxV3Deployment::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
