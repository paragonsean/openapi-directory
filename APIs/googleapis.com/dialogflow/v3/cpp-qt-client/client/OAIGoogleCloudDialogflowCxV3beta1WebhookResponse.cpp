/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowCxV3beta1WebhookResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowCxV3beta1WebhookResponse::OAIGoogleCloudDialogflowCxV3beta1WebhookResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowCxV3beta1WebhookResponse::OAIGoogleCloudDialogflowCxV3beta1WebhookResponse() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowCxV3beta1WebhookResponse::~OAIGoogleCloudDialogflowCxV3beta1WebhookResponse() {}

void OAIGoogleCloudDialogflowCxV3beta1WebhookResponse::initializeModel() {

    m_fulfillment_response_isSet = false;
    m_fulfillment_response_isValid = false;

    m_page_info_isSet = false;
    m_page_info_isValid = false;

    m_payload_isSet = false;
    m_payload_isValid = false;

    m_session_info_isSet = false;
    m_session_info_isValid = false;

    m_target_flow_isSet = false;
    m_target_flow_isValid = false;

    m_target_page_isSet = false;
    m_target_page_isValid = false;
}

void OAIGoogleCloudDialogflowCxV3beta1WebhookResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowCxV3beta1WebhookResponse::fromJsonObject(QJsonObject json) {

    m_fulfillment_response_isValid = ::OpenAPI::fromJsonValue(m_fulfillment_response, json[QString("fulfillmentResponse")]);
    m_fulfillment_response_isSet = !json[QString("fulfillmentResponse")].isNull() && m_fulfillment_response_isValid;

    m_page_info_isValid = ::OpenAPI::fromJsonValue(m_page_info, json[QString("pageInfo")]);
    m_page_info_isSet = !json[QString("pageInfo")].isNull() && m_page_info_isValid;

    m_payload_isValid = ::OpenAPI::fromJsonValue(m_payload, json[QString("payload")]);
    m_payload_isSet = !json[QString("payload")].isNull() && m_payload_isValid;

    m_session_info_isValid = ::OpenAPI::fromJsonValue(m_session_info, json[QString("sessionInfo")]);
    m_session_info_isSet = !json[QString("sessionInfo")].isNull() && m_session_info_isValid;

    m_target_flow_isValid = ::OpenAPI::fromJsonValue(m_target_flow, json[QString("targetFlow")]);
    m_target_flow_isSet = !json[QString("targetFlow")].isNull() && m_target_flow_isValid;

    m_target_page_isValid = ::OpenAPI::fromJsonValue(m_target_page, json[QString("targetPage")]);
    m_target_page_isSet = !json[QString("targetPage")].isNull() && m_target_page_isValid;
}

QString OAIGoogleCloudDialogflowCxV3beta1WebhookResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowCxV3beta1WebhookResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_fulfillment_response.isSet()) {
        obj.insert(QString("fulfillmentResponse"), ::OpenAPI::toJsonValue(m_fulfillment_response));
    }
    if (m_page_info.isSet()) {
        obj.insert(QString("pageInfo"), ::OpenAPI::toJsonValue(m_page_info));
    }
    if (m_payload.size() > 0) {
        obj.insert(QString("payload"), ::OpenAPI::toJsonValue(m_payload));
    }
    if (m_session_info.isSet()) {
        obj.insert(QString("sessionInfo"), ::OpenAPI::toJsonValue(m_session_info));
    }
    if (m_target_flow_isSet) {
        obj.insert(QString("targetFlow"), ::OpenAPI::toJsonValue(m_target_flow));
    }
    if (m_target_page_isSet) {
        obj.insert(QString("targetPage"), ::OpenAPI::toJsonValue(m_target_page));
    }
    return obj;
}

OAIGoogleCloudDialogflowCxV3beta1WebhookResponseFulfillmentResponse OAIGoogleCloudDialogflowCxV3beta1WebhookResponse::getFulfillmentResponse() const {
    return m_fulfillment_response;
}
void OAIGoogleCloudDialogflowCxV3beta1WebhookResponse::setFulfillmentResponse(const OAIGoogleCloudDialogflowCxV3beta1WebhookResponseFulfillmentResponse &fulfillment_response) {
    m_fulfillment_response = fulfillment_response;
    m_fulfillment_response_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1WebhookResponse::is_fulfillment_response_Set() const{
    return m_fulfillment_response_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1WebhookResponse::is_fulfillment_response_Valid() const{
    return m_fulfillment_response_isValid;
}

OAIGoogleCloudDialogflowCxV3beta1PageInfo OAIGoogleCloudDialogflowCxV3beta1WebhookResponse::getPageInfo() const {
    return m_page_info;
}
void OAIGoogleCloudDialogflowCxV3beta1WebhookResponse::setPageInfo(const OAIGoogleCloudDialogflowCxV3beta1PageInfo &page_info) {
    m_page_info = page_info;
    m_page_info_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1WebhookResponse::is_page_info_Set() const{
    return m_page_info_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1WebhookResponse::is_page_info_Valid() const{
    return m_page_info_isValid;
}

QMap<QString, QJsonValue> OAIGoogleCloudDialogflowCxV3beta1WebhookResponse::getPayload() const {
    return m_payload;
}
void OAIGoogleCloudDialogflowCxV3beta1WebhookResponse::setPayload(const QMap<QString, QJsonValue> &payload) {
    m_payload = payload;
    m_payload_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1WebhookResponse::is_payload_Set() const{
    return m_payload_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1WebhookResponse::is_payload_Valid() const{
    return m_payload_isValid;
}

OAIGoogleCloudDialogflowCxV3beta1SessionInfo OAIGoogleCloudDialogflowCxV3beta1WebhookResponse::getSessionInfo() const {
    return m_session_info;
}
void OAIGoogleCloudDialogflowCxV3beta1WebhookResponse::setSessionInfo(const OAIGoogleCloudDialogflowCxV3beta1SessionInfo &session_info) {
    m_session_info = session_info;
    m_session_info_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1WebhookResponse::is_session_info_Set() const{
    return m_session_info_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1WebhookResponse::is_session_info_Valid() const{
    return m_session_info_isValid;
}

QString OAIGoogleCloudDialogflowCxV3beta1WebhookResponse::getTargetFlow() const {
    return m_target_flow;
}
void OAIGoogleCloudDialogflowCxV3beta1WebhookResponse::setTargetFlow(const QString &target_flow) {
    m_target_flow = target_flow;
    m_target_flow_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1WebhookResponse::is_target_flow_Set() const{
    return m_target_flow_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1WebhookResponse::is_target_flow_Valid() const{
    return m_target_flow_isValid;
}

QString OAIGoogleCloudDialogflowCxV3beta1WebhookResponse::getTargetPage() const {
    return m_target_page;
}
void OAIGoogleCloudDialogflowCxV3beta1WebhookResponse::setTargetPage(const QString &target_page) {
    m_target_page = target_page;
    m_target_page_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1WebhookResponse::is_target_page_Set() const{
    return m_target_page_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1WebhookResponse::is_target_page_Valid() const{
    return m_target_page_isValid;
}

bool OAIGoogleCloudDialogflowCxV3beta1WebhookResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_fulfillment_response.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_page_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_payload.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_session_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_target_flow_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_target_page_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowCxV3beta1WebhookResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
