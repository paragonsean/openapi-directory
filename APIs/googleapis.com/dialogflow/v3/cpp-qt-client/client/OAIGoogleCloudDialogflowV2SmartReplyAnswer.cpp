/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowV2SmartReplyAnswer.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowV2SmartReplyAnswer::OAIGoogleCloudDialogflowV2SmartReplyAnswer(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowV2SmartReplyAnswer::OAIGoogleCloudDialogflowV2SmartReplyAnswer() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowV2SmartReplyAnswer::~OAIGoogleCloudDialogflowV2SmartReplyAnswer() {}

void OAIGoogleCloudDialogflowV2SmartReplyAnswer::initializeModel() {

    m_answer_record_isSet = false;
    m_answer_record_isValid = false;

    m_confidence_isSet = false;
    m_confidence_isValid = false;

    m_reply_isSet = false;
    m_reply_isValid = false;
}

void OAIGoogleCloudDialogflowV2SmartReplyAnswer::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowV2SmartReplyAnswer::fromJsonObject(QJsonObject json) {

    m_answer_record_isValid = ::OpenAPI::fromJsonValue(m_answer_record, json[QString("answerRecord")]);
    m_answer_record_isSet = !json[QString("answerRecord")].isNull() && m_answer_record_isValid;

    m_confidence_isValid = ::OpenAPI::fromJsonValue(m_confidence, json[QString("confidence")]);
    m_confidence_isSet = !json[QString("confidence")].isNull() && m_confidence_isValid;

    m_reply_isValid = ::OpenAPI::fromJsonValue(m_reply, json[QString("reply")]);
    m_reply_isSet = !json[QString("reply")].isNull() && m_reply_isValid;
}

QString OAIGoogleCloudDialogflowV2SmartReplyAnswer::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowV2SmartReplyAnswer::asJsonObject() const {
    QJsonObject obj;
    if (m_answer_record_isSet) {
        obj.insert(QString("answerRecord"), ::OpenAPI::toJsonValue(m_answer_record));
    }
    if (m_confidence_isSet) {
        obj.insert(QString("confidence"), ::OpenAPI::toJsonValue(m_confidence));
    }
    if (m_reply_isSet) {
        obj.insert(QString("reply"), ::OpenAPI::toJsonValue(m_reply));
    }
    return obj;
}

QString OAIGoogleCloudDialogflowV2SmartReplyAnswer::getAnswerRecord() const {
    return m_answer_record;
}
void OAIGoogleCloudDialogflowV2SmartReplyAnswer::setAnswerRecord(const QString &answer_record) {
    m_answer_record = answer_record;
    m_answer_record_isSet = true;
}

bool OAIGoogleCloudDialogflowV2SmartReplyAnswer::is_answer_record_Set() const{
    return m_answer_record_isSet;
}

bool OAIGoogleCloudDialogflowV2SmartReplyAnswer::is_answer_record_Valid() const{
    return m_answer_record_isValid;
}

float OAIGoogleCloudDialogflowV2SmartReplyAnswer::getConfidence() const {
    return m_confidence;
}
void OAIGoogleCloudDialogflowV2SmartReplyAnswer::setConfidence(const float &confidence) {
    m_confidence = confidence;
    m_confidence_isSet = true;
}

bool OAIGoogleCloudDialogflowV2SmartReplyAnswer::is_confidence_Set() const{
    return m_confidence_isSet;
}

bool OAIGoogleCloudDialogflowV2SmartReplyAnswer::is_confidence_Valid() const{
    return m_confidence_isValid;
}

QString OAIGoogleCloudDialogflowV2SmartReplyAnswer::getReply() const {
    return m_reply;
}
void OAIGoogleCloudDialogflowV2SmartReplyAnswer::setReply(const QString &reply) {
    m_reply = reply;
    m_reply_isSet = true;
}

bool OAIGoogleCloudDialogflowV2SmartReplyAnswer::is_reply_Set() const{
    return m_reply_isSet;
}

bool OAIGoogleCloudDialogflowV2SmartReplyAnswer::is_reply_Valid() const{
    return m_reply_isValid;
}

bool OAIGoogleCloudDialogflowV2SmartReplyAnswer::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_answer_record_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_confidence_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reply_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowV2SmartReplyAnswer::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
