/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowCxV3FulfillIntentResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowCxV3FulfillIntentResponse::OAIGoogleCloudDialogflowCxV3FulfillIntentResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowCxV3FulfillIntentResponse::OAIGoogleCloudDialogflowCxV3FulfillIntentResponse() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowCxV3FulfillIntentResponse::~OAIGoogleCloudDialogflowCxV3FulfillIntentResponse() {}

void OAIGoogleCloudDialogflowCxV3FulfillIntentResponse::initializeModel() {

    m_output_audio_isSet = false;
    m_output_audio_isValid = false;

    m_output_audio_config_isSet = false;
    m_output_audio_config_isValid = false;

    m_query_result_isSet = false;
    m_query_result_isValid = false;

    m_response_id_isSet = false;
    m_response_id_isValid = false;
}

void OAIGoogleCloudDialogflowCxV3FulfillIntentResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowCxV3FulfillIntentResponse::fromJsonObject(QJsonObject json) {

    m_output_audio_isValid = ::OpenAPI::fromJsonValue(m_output_audio, json[QString("outputAudio")]);
    m_output_audio_isSet = !json[QString("outputAudio")].isNull() && m_output_audio_isValid;

    m_output_audio_config_isValid = ::OpenAPI::fromJsonValue(m_output_audio_config, json[QString("outputAudioConfig")]);
    m_output_audio_config_isSet = !json[QString("outputAudioConfig")].isNull() && m_output_audio_config_isValid;

    m_query_result_isValid = ::OpenAPI::fromJsonValue(m_query_result, json[QString("queryResult")]);
    m_query_result_isSet = !json[QString("queryResult")].isNull() && m_query_result_isValid;

    m_response_id_isValid = ::OpenAPI::fromJsonValue(m_response_id, json[QString("responseId")]);
    m_response_id_isSet = !json[QString("responseId")].isNull() && m_response_id_isValid;
}

QString OAIGoogleCloudDialogflowCxV3FulfillIntentResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowCxV3FulfillIntentResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_output_audio_isSet) {
        obj.insert(QString("outputAudio"), ::OpenAPI::toJsonValue(m_output_audio));
    }
    if (m_output_audio_config.isSet()) {
        obj.insert(QString("outputAudioConfig"), ::OpenAPI::toJsonValue(m_output_audio_config));
    }
    if (m_query_result.isSet()) {
        obj.insert(QString("queryResult"), ::OpenAPI::toJsonValue(m_query_result));
    }
    if (m_response_id_isSet) {
        obj.insert(QString("responseId"), ::OpenAPI::toJsonValue(m_response_id));
    }
    return obj;
}

QByteArray OAIGoogleCloudDialogflowCxV3FulfillIntentResponse::getOutputAudio() const {
    return m_output_audio;
}
void OAIGoogleCloudDialogflowCxV3FulfillIntentResponse::setOutputAudio(const QByteArray &output_audio) {
    m_output_audio = output_audio;
    m_output_audio_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3FulfillIntentResponse::is_output_audio_Set() const{
    return m_output_audio_isSet;
}

bool OAIGoogleCloudDialogflowCxV3FulfillIntentResponse::is_output_audio_Valid() const{
    return m_output_audio_isValid;
}

OAIGoogleCloudDialogflowCxV3OutputAudioConfig OAIGoogleCloudDialogflowCxV3FulfillIntentResponse::getOutputAudioConfig() const {
    return m_output_audio_config;
}
void OAIGoogleCloudDialogflowCxV3FulfillIntentResponse::setOutputAudioConfig(const OAIGoogleCloudDialogflowCxV3OutputAudioConfig &output_audio_config) {
    m_output_audio_config = output_audio_config;
    m_output_audio_config_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3FulfillIntentResponse::is_output_audio_config_Set() const{
    return m_output_audio_config_isSet;
}

bool OAIGoogleCloudDialogflowCxV3FulfillIntentResponse::is_output_audio_config_Valid() const{
    return m_output_audio_config_isValid;
}

OAIGoogleCloudDialogflowCxV3QueryResult OAIGoogleCloudDialogflowCxV3FulfillIntentResponse::getQueryResult() const {
    return m_query_result;
}
void OAIGoogleCloudDialogflowCxV3FulfillIntentResponse::setQueryResult(const OAIGoogleCloudDialogflowCxV3QueryResult &query_result) {
    m_query_result = query_result;
    m_query_result_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3FulfillIntentResponse::is_query_result_Set() const{
    return m_query_result_isSet;
}

bool OAIGoogleCloudDialogflowCxV3FulfillIntentResponse::is_query_result_Valid() const{
    return m_query_result_isValid;
}

QString OAIGoogleCloudDialogflowCxV3FulfillIntentResponse::getResponseId() const {
    return m_response_id;
}
void OAIGoogleCloudDialogflowCxV3FulfillIntentResponse::setResponseId(const QString &response_id) {
    m_response_id = response_id;
    m_response_id_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3FulfillIntentResponse::is_response_id_Set() const{
    return m_response_id_isSet;
}

bool OAIGoogleCloudDialogflowCxV3FulfillIntentResponse::is_response_id_Valid() const{
    return m_response_id_isValid;
}

bool OAIGoogleCloudDialogflowCxV3FulfillIntentResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_output_audio_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_output_audio_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_query_result.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_response_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowCxV3FulfillIntentResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
