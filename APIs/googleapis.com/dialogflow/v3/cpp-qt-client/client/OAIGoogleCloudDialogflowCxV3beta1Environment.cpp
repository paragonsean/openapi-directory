/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowCxV3beta1Environment.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowCxV3beta1Environment::OAIGoogleCloudDialogflowCxV3beta1Environment(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowCxV3beta1Environment::OAIGoogleCloudDialogflowCxV3beta1Environment() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowCxV3beta1Environment::~OAIGoogleCloudDialogflowCxV3beta1Environment() {}

void OAIGoogleCloudDialogflowCxV3beta1Environment::initializeModel() {

    m_description_isSet = false;
    m_description_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_test_cases_config_isSet = false;
    m_test_cases_config_isValid = false;

    m_update_time_isSet = false;
    m_update_time_isValid = false;

    m_version_configs_isSet = false;
    m_version_configs_isValid = false;

    m_webhook_config_isSet = false;
    m_webhook_config_isValid = false;
}

void OAIGoogleCloudDialogflowCxV3beta1Environment::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowCxV3beta1Environment::fromJsonObject(QJsonObject json) {

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_test_cases_config_isValid = ::OpenAPI::fromJsonValue(m_test_cases_config, json[QString("testCasesConfig")]);
    m_test_cases_config_isSet = !json[QString("testCasesConfig")].isNull() && m_test_cases_config_isValid;

    m_update_time_isValid = ::OpenAPI::fromJsonValue(m_update_time, json[QString("updateTime")]);
    m_update_time_isSet = !json[QString("updateTime")].isNull() && m_update_time_isValid;

    m_version_configs_isValid = ::OpenAPI::fromJsonValue(m_version_configs, json[QString("versionConfigs")]);
    m_version_configs_isSet = !json[QString("versionConfigs")].isNull() && m_version_configs_isValid;

    m_webhook_config_isValid = ::OpenAPI::fromJsonValue(m_webhook_config, json[QString("webhookConfig")]);
    m_webhook_config_isSet = !json[QString("webhookConfig")].isNull() && m_webhook_config_isValid;
}

QString OAIGoogleCloudDialogflowCxV3beta1Environment::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowCxV3beta1Environment::asJsonObject() const {
    QJsonObject obj;
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_test_cases_config.isSet()) {
        obj.insert(QString("testCasesConfig"), ::OpenAPI::toJsonValue(m_test_cases_config));
    }
    if (m_update_time_isSet) {
        obj.insert(QString("updateTime"), ::OpenAPI::toJsonValue(m_update_time));
    }
    if (m_version_configs.size() > 0) {
        obj.insert(QString("versionConfigs"), ::OpenAPI::toJsonValue(m_version_configs));
    }
    if (m_webhook_config.isSet()) {
        obj.insert(QString("webhookConfig"), ::OpenAPI::toJsonValue(m_webhook_config));
    }
    return obj;
}

QString OAIGoogleCloudDialogflowCxV3beta1Environment::getDescription() const {
    return m_description;
}
void OAIGoogleCloudDialogflowCxV3beta1Environment::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1Environment::is_description_Set() const{
    return m_description_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1Environment::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIGoogleCloudDialogflowCxV3beta1Environment::getDisplayName() const {
    return m_display_name;
}
void OAIGoogleCloudDialogflowCxV3beta1Environment::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1Environment::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1Environment::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QString OAIGoogleCloudDialogflowCxV3beta1Environment::getName() const {
    return m_name;
}
void OAIGoogleCloudDialogflowCxV3beta1Environment::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1Environment::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1Environment::is_name_Valid() const{
    return m_name_isValid;
}

OAIGoogleCloudDialogflowCxV3beta1EnvironmentTestCasesConfig OAIGoogleCloudDialogflowCxV3beta1Environment::getTestCasesConfig() const {
    return m_test_cases_config;
}
void OAIGoogleCloudDialogflowCxV3beta1Environment::setTestCasesConfig(const OAIGoogleCloudDialogflowCxV3beta1EnvironmentTestCasesConfig &test_cases_config) {
    m_test_cases_config = test_cases_config;
    m_test_cases_config_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1Environment::is_test_cases_config_Set() const{
    return m_test_cases_config_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1Environment::is_test_cases_config_Valid() const{
    return m_test_cases_config_isValid;
}

QString OAIGoogleCloudDialogflowCxV3beta1Environment::getUpdateTime() const {
    return m_update_time;
}
void OAIGoogleCloudDialogflowCxV3beta1Environment::setUpdateTime(const QString &update_time) {
    m_update_time = update_time;
    m_update_time_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1Environment::is_update_time_Set() const{
    return m_update_time_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1Environment::is_update_time_Valid() const{
    return m_update_time_isValid;
}

QList<OAIGoogleCloudDialogflowCxV3beta1EnvironmentVersionConfig> OAIGoogleCloudDialogflowCxV3beta1Environment::getVersionConfigs() const {
    return m_version_configs;
}
void OAIGoogleCloudDialogflowCxV3beta1Environment::setVersionConfigs(const QList<OAIGoogleCloudDialogflowCxV3beta1EnvironmentVersionConfig> &version_configs) {
    m_version_configs = version_configs;
    m_version_configs_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1Environment::is_version_configs_Set() const{
    return m_version_configs_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1Environment::is_version_configs_Valid() const{
    return m_version_configs_isValid;
}

OAIGoogleCloudDialogflowCxV3beta1EnvironmentWebhookConfig OAIGoogleCloudDialogflowCxV3beta1Environment::getWebhookConfig() const {
    return m_webhook_config;
}
void OAIGoogleCloudDialogflowCxV3beta1Environment::setWebhookConfig(const OAIGoogleCloudDialogflowCxV3beta1EnvironmentWebhookConfig &webhook_config) {
    m_webhook_config = webhook_config;
    m_webhook_config_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1Environment::is_webhook_config_Set() const{
    return m_webhook_config_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1Environment::is_webhook_config_Valid() const{
    return m_webhook_config_isValid;
}

bool OAIGoogleCloudDialogflowCxV3beta1Environment::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_test_cases_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_version_configs.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_webhook_config.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowCxV3beta1Environment::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
