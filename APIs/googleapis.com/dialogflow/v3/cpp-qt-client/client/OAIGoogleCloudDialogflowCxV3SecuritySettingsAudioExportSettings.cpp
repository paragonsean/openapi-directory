/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings::OAIGoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings::OAIGoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings::~OAIGoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings() {}

void OAIGoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings::initializeModel() {

    m_audio_export_pattern_isSet = false;
    m_audio_export_pattern_isValid = false;

    m_audio_format_isSet = false;
    m_audio_format_isValid = false;

    m_enable_audio_redaction_isSet = false;
    m_enable_audio_redaction_isValid = false;

    m_gcs_bucket_isSet = false;
    m_gcs_bucket_isValid = false;
}

void OAIGoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings::fromJsonObject(QJsonObject json) {

    m_audio_export_pattern_isValid = ::OpenAPI::fromJsonValue(m_audio_export_pattern, json[QString("audioExportPattern")]);
    m_audio_export_pattern_isSet = !json[QString("audioExportPattern")].isNull() && m_audio_export_pattern_isValid;

    m_audio_format_isValid = ::OpenAPI::fromJsonValue(m_audio_format, json[QString("audioFormat")]);
    m_audio_format_isSet = !json[QString("audioFormat")].isNull() && m_audio_format_isValid;

    m_enable_audio_redaction_isValid = ::OpenAPI::fromJsonValue(m_enable_audio_redaction, json[QString("enableAudioRedaction")]);
    m_enable_audio_redaction_isSet = !json[QString("enableAudioRedaction")].isNull() && m_enable_audio_redaction_isValid;

    m_gcs_bucket_isValid = ::OpenAPI::fromJsonValue(m_gcs_bucket, json[QString("gcsBucket")]);
    m_gcs_bucket_isSet = !json[QString("gcsBucket")].isNull() && m_gcs_bucket_isValid;
}

QString OAIGoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings::asJsonObject() const {
    QJsonObject obj;
    if (m_audio_export_pattern_isSet) {
        obj.insert(QString("audioExportPattern"), ::OpenAPI::toJsonValue(m_audio_export_pattern));
    }
    if (m_audio_format_isSet) {
        obj.insert(QString("audioFormat"), ::OpenAPI::toJsonValue(m_audio_format));
    }
    if (m_enable_audio_redaction_isSet) {
        obj.insert(QString("enableAudioRedaction"), ::OpenAPI::toJsonValue(m_enable_audio_redaction));
    }
    if (m_gcs_bucket_isSet) {
        obj.insert(QString("gcsBucket"), ::OpenAPI::toJsonValue(m_gcs_bucket));
    }
    return obj;
}

QString OAIGoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings::getAudioExportPattern() const {
    return m_audio_export_pattern;
}
void OAIGoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings::setAudioExportPattern(const QString &audio_export_pattern) {
    m_audio_export_pattern = audio_export_pattern;
    m_audio_export_pattern_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings::is_audio_export_pattern_Set() const{
    return m_audio_export_pattern_isSet;
}

bool OAIGoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings::is_audio_export_pattern_Valid() const{
    return m_audio_export_pattern_isValid;
}

QString OAIGoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings::getAudioFormat() const {
    return m_audio_format;
}
void OAIGoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings::setAudioFormat(const QString &audio_format) {
    m_audio_format = audio_format;
    m_audio_format_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings::is_audio_format_Set() const{
    return m_audio_format_isSet;
}

bool OAIGoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings::is_audio_format_Valid() const{
    return m_audio_format_isValid;
}

bool OAIGoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings::isEnableAudioRedaction() const {
    return m_enable_audio_redaction;
}
void OAIGoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings::setEnableAudioRedaction(const bool &enable_audio_redaction) {
    m_enable_audio_redaction = enable_audio_redaction;
    m_enable_audio_redaction_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings::is_enable_audio_redaction_Set() const{
    return m_enable_audio_redaction_isSet;
}

bool OAIGoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings::is_enable_audio_redaction_Valid() const{
    return m_enable_audio_redaction_isValid;
}

QString OAIGoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings::getGcsBucket() const {
    return m_gcs_bucket;
}
void OAIGoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings::setGcsBucket(const QString &gcs_bucket) {
    m_gcs_bucket = gcs_bucket;
    m_gcs_bucket_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings::is_gcs_bucket_Set() const{
    return m_gcs_bucket_isSet;
}

bool OAIGoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings::is_gcs_bucket_Valid() const{
    return m_gcs_bucket_isValid;
}

bool OAIGoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_audio_export_pattern_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_audio_format_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enable_audio_redaction_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gcs_bucket_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
