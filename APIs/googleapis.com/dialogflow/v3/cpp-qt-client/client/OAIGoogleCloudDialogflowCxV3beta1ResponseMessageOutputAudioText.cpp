/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowCxV3beta1ResponseMessageOutputAudioText.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowCxV3beta1ResponseMessageOutputAudioText::OAIGoogleCloudDialogflowCxV3beta1ResponseMessageOutputAudioText(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowCxV3beta1ResponseMessageOutputAudioText::OAIGoogleCloudDialogflowCxV3beta1ResponseMessageOutputAudioText() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowCxV3beta1ResponseMessageOutputAudioText::~OAIGoogleCloudDialogflowCxV3beta1ResponseMessageOutputAudioText() {}

void OAIGoogleCloudDialogflowCxV3beta1ResponseMessageOutputAudioText::initializeModel() {

    m_allow_playback_interruption_isSet = false;
    m_allow_playback_interruption_isValid = false;

    m_ssml_isSet = false;
    m_ssml_isValid = false;

    m_text_isSet = false;
    m_text_isValid = false;
}

void OAIGoogleCloudDialogflowCxV3beta1ResponseMessageOutputAudioText::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowCxV3beta1ResponseMessageOutputAudioText::fromJsonObject(QJsonObject json) {

    m_allow_playback_interruption_isValid = ::OpenAPI::fromJsonValue(m_allow_playback_interruption, json[QString("allowPlaybackInterruption")]);
    m_allow_playback_interruption_isSet = !json[QString("allowPlaybackInterruption")].isNull() && m_allow_playback_interruption_isValid;

    m_ssml_isValid = ::OpenAPI::fromJsonValue(m_ssml, json[QString("ssml")]);
    m_ssml_isSet = !json[QString("ssml")].isNull() && m_ssml_isValid;

    m_text_isValid = ::OpenAPI::fromJsonValue(m_text, json[QString("text")]);
    m_text_isSet = !json[QString("text")].isNull() && m_text_isValid;
}

QString OAIGoogleCloudDialogflowCxV3beta1ResponseMessageOutputAudioText::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowCxV3beta1ResponseMessageOutputAudioText::asJsonObject() const {
    QJsonObject obj;
    if (m_allow_playback_interruption_isSet) {
        obj.insert(QString("allowPlaybackInterruption"), ::OpenAPI::toJsonValue(m_allow_playback_interruption));
    }
    if (m_ssml_isSet) {
        obj.insert(QString("ssml"), ::OpenAPI::toJsonValue(m_ssml));
    }
    if (m_text_isSet) {
        obj.insert(QString("text"), ::OpenAPI::toJsonValue(m_text));
    }
    return obj;
}

bool OAIGoogleCloudDialogflowCxV3beta1ResponseMessageOutputAudioText::isAllowPlaybackInterruption() const {
    return m_allow_playback_interruption;
}
void OAIGoogleCloudDialogflowCxV3beta1ResponseMessageOutputAudioText::setAllowPlaybackInterruption(const bool &allow_playback_interruption) {
    m_allow_playback_interruption = allow_playback_interruption;
    m_allow_playback_interruption_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1ResponseMessageOutputAudioText::is_allow_playback_interruption_Set() const{
    return m_allow_playback_interruption_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1ResponseMessageOutputAudioText::is_allow_playback_interruption_Valid() const{
    return m_allow_playback_interruption_isValid;
}

QString OAIGoogleCloudDialogflowCxV3beta1ResponseMessageOutputAudioText::getSsml() const {
    return m_ssml;
}
void OAIGoogleCloudDialogflowCxV3beta1ResponseMessageOutputAudioText::setSsml(const QString &ssml) {
    m_ssml = ssml;
    m_ssml_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1ResponseMessageOutputAudioText::is_ssml_Set() const{
    return m_ssml_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1ResponseMessageOutputAudioText::is_ssml_Valid() const{
    return m_ssml_isValid;
}

QString OAIGoogleCloudDialogflowCxV3beta1ResponseMessageOutputAudioText::getText() const {
    return m_text;
}
void OAIGoogleCloudDialogflowCxV3beta1ResponseMessageOutputAudioText::setText(const QString &text) {
    m_text = text;
    m_text_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1ResponseMessageOutputAudioText::is_text_Set() const{
    return m_text_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1ResponseMessageOutputAudioText::is_text_Valid() const{
    return m_text_isValid;
}

bool OAIGoogleCloudDialogflowCxV3beta1ResponseMessageOutputAudioText::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_allow_playback_interruption_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ssml_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_text_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowCxV3beta1ResponseMessageOutputAudioText::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
