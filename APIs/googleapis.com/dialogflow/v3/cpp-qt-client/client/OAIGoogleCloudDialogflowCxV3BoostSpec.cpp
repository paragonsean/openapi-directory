/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowCxV3BoostSpec.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowCxV3BoostSpec::OAIGoogleCloudDialogflowCxV3BoostSpec(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowCxV3BoostSpec::OAIGoogleCloudDialogflowCxV3BoostSpec() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowCxV3BoostSpec::~OAIGoogleCloudDialogflowCxV3BoostSpec() {}

void OAIGoogleCloudDialogflowCxV3BoostSpec::initializeModel() {

    m_condition_boost_specs_isSet = false;
    m_condition_boost_specs_isValid = false;
}

void OAIGoogleCloudDialogflowCxV3BoostSpec::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowCxV3BoostSpec::fromJsonObject(QJsonObject json) {

    m_condition_boost_specs_isValid = ::OpenAPI::fromJsonValue(m_condition_boost_specs, json[QString("conditionBoostSpecs")]);
    m_condition_boost_specs_isSet = !json[QString("conditionBoostSpecs")].isNull() && m_condition_boost_specs_isValid;
}

QString OAIGoogleCloudDialogflowCxV3BoostSpec::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowCxV3BoostSpec::asJsonObject() const {
    QJsonObject obj;
    if (m_condition_boost_specs.size() > 0) {
        obj.insert(QString("conditionBoostSpecs"), ::OpenAPI::toJsonValue(m_condition_boost_specs));
    }
    return obj;
}

QList<OAIGoogleCloudDialogflowCxV3BoostSpecConditionBoostSpec> OAIGoogleCloudDialogflowCxV3BoostSpec::getConditionBoostSpecs() const {
    return m_condition_boost_specs;
}
void OAIGoogleCloudDialogflowCxV3BoostSpec::setConditionBoostSpecs(const QList<OAIGoogleCloudDialogflowCxV3BoostSpecConditionBoostSpec> &condition_boost_specs) {
    m_condition_boost_specs = condition_boost_specs;
    m_condition_boost_specs_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3BoostSpec::is_condition_boost_specs_Set() const{
    return m_condition_boost_specs_isSet;
}

bool OAIGoogleCloudDialogflowCxV3BoostSpec::is_condition_boost_specs_Valid() const{
    return m_condition_boost_specs_isValid;
}

bool OAIGoogleCloudDialogflowCxV3BoostSpec::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_condition_boost_specs.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowCxV3BoostSpec::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
