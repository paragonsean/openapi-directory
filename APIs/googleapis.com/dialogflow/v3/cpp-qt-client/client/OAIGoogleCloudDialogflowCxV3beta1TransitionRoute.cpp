/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowCxV3beta1TransitionRoute.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowCxV3beta1TransitionRoute::OAIGoogleCloudDialogflowCxV3beta1TransitionRoute(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowCxV3beta1TransitionRoute::OAIGoogleCloudDialogflowCxV3beta1TransitionRoute() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowCxV3beta1TransitionRoute::~OAIGoogleCloudDialogflowCxV3beta1TransitionRoute() {}

void OAIGoogleCloudDialogflowCxV3beta1TransitionRoute::initializeModel() {

    m_condition_isSet = false;
    m_condition_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_intent_isSet = false;
    m_intent_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_target_flow_isSet = false;
    m_target_flow_isValid = false;

    m_target_page_isSet = false;
    m_target_page_isValid = false;

    m_trigger_fulfillment_isSet = false;
    m_trigger_fulfillment_isValid = false;
}

void OAIGoogleCloudDialogflowCxV3beta1TransitionRoute::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowCxV3beta1TransitionRoute::fromJsonObject(QJsonObject json) {

    m_condition_isValid = ::OpenAPI::fromJsonValue(m_condition, json[QString("condition")]);
    m_condition_isSet = !json[QString("condition")].isNull() && m_condition_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_intent_isValid = ::OpenAPI::fromJsonValue(m_intent, json[QString("intent")]);
    m_intent_isSet = !json[QString("intent")].isNull() && m_intent_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_target_flow_isValid = ::OpenAPI::fromJsonValue(m_target_flow, json[QString("targetFlow")]);
    m_target_flow_isSet = !json[QString("targetFlow")].isNull() && m_target_flow_isValid;

    m_target_page_isValid = ::OpenAPI::fromJsonValue(m_target_page, json[QString("targetPage")]);
    m_target_page_isSet = !json[QString("targetPage")].isNull() && m_target_page_isValid;

    m_trigger_fulfillment_isValid = ::OpenAPI::fromJsonValue(m_trigger_fulfillment, json[QString("triggerFulfillment")]);
    m_trigger_fulfillment_isSet = !json[QString("triggerFulfillment")].isNull() && m_trigger_fulfillment_isValid;
}

QString OAIGoogleCloudDialogflowCxV3beta1TransitionRoute::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowCxV3beta1TransitionRoute::asJsonObject() const {
    QJsonObject obj;
    if (m_condition_isSet) {
        obj.insert(QString("condition"), ::OpenAPI::toJsonValue(m_condition));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_intent_isSet) {
        obj.insert(QString("intent"), ::OpenAPI::toJsonValue(m_intent));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_target_flow_isSet) {
        obj.insert(QString("targetFlow"), ::OpenAPI::toJsonValue(m_target_flow));
    }
    if (m_target_page_isSet) {
        obj.insert(QString("targetPage"), ::OpenAPI::toJsonValue(m_target_page));
    }
    if (m_trigger_fulfillment.isSet()) {
        obj.insert(QString("triggerFulfillment"), ::OpenAPI::toJsonValue(m_trigger_fulfillment));
    }
    return obj;
}

QString OAIGoogleCloudDialogflowCxV3beta1TransitionRoute::getCondition() const {
    return m_condition;
}
void OAIGoogleCloudDialogflowCxV3beta1TransitionRoute::setCondition(const QString &condition) {
    m_condition = condition;
    m_condition_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1TransitionRoute::is_condition_Set() const{
    return m_condition_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1TransitionRoute::is_condition_Valid() const{
    return m_condition_isValid;
}

QString OAIGoogleCloudDialogflowCxV3beta1TransitionRoute::getDescription() const {
    return m_description;
}
void OAIGoogleCloudDialogflowCxV3beta1TransitionRoute::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1TransitionRoute::is_description_Set() const{
    return m_description_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1TransitionRoute::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIGoogleCloudDialogflowCxV3beta1TransitionRoute::getIntent() const {
    return m_intent;
}
void OAIGoogleCloudDialogflowCxV3beta1TransitionRoute::setIntent(const QString &intent) {
    m_intent = intent;
    m_intent_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1TransitionRoute::is_intent_Set() const{
    return m_intent_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1TransitionRoute::is_intent_Valid() const{
    return m_intent_isValid;
}

QString OAIGoogleCloudDialogflowCxV3beta1TransitionRoute::getName() const {
    return m_name;
}
void OAIGoogleCloudDialogflowCxV3beta1TransitionRoute::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1TransitionRoute::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1TransitionRoute::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGoogleCloudDialogflowCxV3beta1TransitionRoute::getTargetFlow() const {
    return m_target_flow;
}
void OAIGoogleCloudDialogflowCxV3beta1TransitionRoute::setTargetFlow(const QString &target_flow) {
    m_target_flow = target_flow;
    m_target_flow_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1TransitionRoute::is_target_flow_Set() const{
    return m_target_flow_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1TransitionRoute::is_target_flow_Valid() const{
    return m_target_flow_isValid;
}

QString OAIGoogleCloudDialogflowCxV3beta1TransitionRoute::getTargetPage() const {
    return m_target_page;
}
void OAIGoogleCloudDialogflowCxV3beta1TransitionRoute::setTargetPage(const QString &target_page) {
    m_target_page = target_page;
    m_target_page_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1TransitionRoute::is_target_page_Set() const{
    return m_target_page_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1TransitionRoute::is_target_page_Valid() const{
    return m_target_page_isValid;
}

OAIGoogleCloudDialogflowCxV3beta1Fulfillment OAIGoogleCloudDialogflowCxV3beta1TransitionRoute::getTriggerFulfillment() const {
    return m_trigger_fulfillment;
}
void OAIGoogleCloudDialogflowCxV3beta1TransitionRoute::setTriggerFulfillment(const OAIGoogleCloudDialogflowCxV3beta1Fulfillment &trigger_fulfillment) {
    m_trigger_fulfillment = trigger_fulfillment;
    m_trigger_fulfillment_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1TransitionRoute::is_trigger_fulfillment_Set() const{
    return m_trigger_fulfillment_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1TransitionRoute::is_trigger_fulfillment_Valid() const{
    return m_trigger_fulfillment_isValid;
}

bool OAIGoogleCloudDialogflowCxV3beta1TransitionRoute::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_condition_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_intent_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_target_flow_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_target_page_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_trigger_fulfillment.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowCxV3beta1TransitionRoute::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
