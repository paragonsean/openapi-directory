/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowCxV3AdvancedSettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowCxV3AdvancedSettings::OAIGoogleCloudDialogflowCxV3AdvancedSettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowCxV3AdvancedSettings::OAIGoogleCloudDialogflowCxV3AdvancedSettings() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowCxV3AdvancedSettings::~OAIGoogleCloudDialogflowCxV3AdvancedSettings() {}

void OAIGoogleCloudDialogflowCxV3AdvancedSettings::initializeModel() {

    m_audio_export_gcs_destination_isSet = false;
    m_audio_export_gcs_destination_isValid = false;

    m_dtmf_settings_isSet = false;
    m_dtmf_settings_isValid = false;

    m_logging_settings_isSet = false;
    m_logging_settings_isValid = false;
}

void OAIGoogleCloudDialogflowCxV3AdvancedSettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowCxV3AdvancedSettings::fromJsonObject(QJsonObject json) {

    m_audio_export_gcs_destination_isValid = ::OpenAPI::fromJsonValue(m_audio_export_gcs_destination, json[QString("audioExportGcsDestination")]);
    m_audio_export_gcs_destination_isSet = !json[QString("audioExportGcsDestination")].isNull() && m_audio_export_gcs_destination_isValid;

    m_dtmf_settings_isValid = ::OpenAPI::fromJsonValue(m_dtmf_settings, json[QString("dtmfSettings")]);
    m_dtmf_settings_isSet = !json[QString("dtmfSettings")].isNull() && m_dtmf_settings_isValid;

    m_logging_settings_isValid = ::OpenAPI::fromJsonValue(m_logging_settings, json[QString("loggingSettings")]);
    m_logging_settings_isSet = !json[QString("loggingSettings")].isNull() && m_logging_settings_isValid;
}

QString OAIGoogleCloudDialogflowCxV3AdvancedSettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowCxV3AdvancedSettings::asJsonObject() const {
    QJsonObject obj;
    if (m_audio_export_gcs_destination.isSet()) {
        obj.insert(QString("audioExportGcsDestination"), ::OpenAPI::toJsonValue(m_audio_export_gcs_destination));
    }
    if (m_dtmf_settings.isSet()) {
        obj.insert(QString("dtmfSettings"), ::OpenAPI::toJsonValue(m_dtmf_settings));
    }
    if (m_logging_settings.isSet()) {
        obj.insert(QString("loggingSettings"), ::OpenAPI::toJsonValue(m_logging_settings));
    }
    return obj;
}

OAIGoogleCloudDialogflowCxV3GcsDestination OAIGoogleCloudDialogflowCxV3AdvancedSettings::getAudioExportGcsDestination() const {
    return m_audio_export_gcs_destination;
}
void OAIGoogleCloudDialogflowCxV3AdvancedSettings::setAudioExportGcsDestination(const OAIGoogleCloudDialogflowCxV3GcsDestination &audio_export_gcs_destination) {
    m_audio_export_gcs_destination = audio_export_gcs_destination;
    m_audio_export_gcs_destination_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3AdvancedSettings::is_audio_export_gcs_destination_Set() const{
    return m_audio_export_gcs_destination_isSet;
}

bool OAIGoogleCloudDialogflowCxV3AdvancedSettings::is_audio_export_gcs_destination_Valid() const{
    return m_audio_export_gcs_destination_isValid;
}

OAIGoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettings OAIGoogleCloudDialogflowCxV3AdvancedSettings::getDtmfSettings() const {
    return m_dtmf_settings;
}
void OAIGoogleCloudDialogflowCxV3AdvancedSettings::setDtmfSettings(const OAIGoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettings &dtmf_settings) {
    m_dtmf_settings = dtmf_settings;
    m_dtmf_settings_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3AdvancedSettings::is_dtmf_settings_Set() const{
    return m_dtmf_settings_isSet;
}

bool OAIGoogleCloudDialogflowCxV3AdvancedSettings::is_dtmf_settings_Valid() const{
    return m_dtmf_settings_isValid;
}

OAIGoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettings OAIGoogleCloudDialogflowCxV3AdvancedSettings::getLoggingSettings() const {
    return m_logging_settings;
}
void OAIGoogleCloudDialogflowCxV3AdvancedSettings::setLoggingSettings(const OAIGoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettings &logging_settings) {
    m_logging_settings = logging_settings;
    m_logging_settings_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3AdvancedSettings::is_logging_settings_Set() const{
    return m_logging_settings_isSet;
}

bool OAIGoogleCloudDialogflowCxV3AdvancedSettings::is_logging_settings_Valid() const{
    return m_logging_settings_isValid;
}

bool OAIGoogleCloudDialogflowCxV3AdvancedSettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_audio_export_gcs_destination.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_dtmf_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_logging_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowCxV3AdvancedSettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
