/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowCxV3beta1EventHandler.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowCxV3beta1EventHandler::OAIGoogleCloudDialogflowCxV3beta1EventHandler(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowCxV3beta1EventHandler::OAIGoogleCloudDialogflowCxV3beta1EventHandler() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowCxV3beta1EventHandler::~OAIGoogleCloudDialogflowCxV3beta1EventHandler() {}

void OAIGoogleCloudDialogflowCxV3beta1EventHandler::initializeModel() {

    m_event_isSet = false;
    m_event_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_target_flow_isSet = false;
    m_target_flow_isValid = false;

    m_target_page_isSet = false;
    m_target_page_isValid = false;

    m_trigger_fulfillment_isSet = false;
    m_trigger_fulfillment_isValid = false;
}

void OAIGoogleCloudDialogflowCxV3beta1EventHandler::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowCxV3beta1EventHandler::fromJsonObject(QJsonObject json) {

    m_event_isValid = ::OpenAPI::fromJsonValue(m_event, json[QString("event")]);
    m_event_isSet = !json[QString("event")].isNull() && m_event_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_target_flow_isValid = ::OpenAPI::fromJsonValue(m_target_flow, json[QString("targetFlow")]);
    m_target_flow_isSet = !json[QString("targetFlow")].isNull() && m_target_flow_isValid;

    m_target_page_isValid = ::OpenAPI::fromJsonValue(m_target_page, json[QString("targetPage")]);
    m_target_page_isSet = !json[QString("targetPage")].isNull() && m_target_page_isValid;

    m_trigger_fulfillment_isValid = ::OpenAPI::fromJsonValue(m_trigger_fulfillment, json[QString("triggerFulfillment")]);
    m_trigger_fulfillment_isSet = !json[QString("triggerFulfillment")].isNull() && m_trigger_fulfillment_isValid;
}

QString OAIGoogleCloudDialogflowCxV3beta1EventHandler::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowCxV3beta1EventHandler::asJsonObject() const {
    QJsonObject obj;
    if (m_event_isSet) {
        obj.insert(QString("event"), ::OpenAPI::toJsonValue(m_event));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_target_flow_isSet) {
        obj.insert(QString("targetFlow"), ::OpenAPI::toJsonValue(m_target_flow));
    }
    if (m_target_page_isSet) {
        obj.insert(QString("targetPage"), ::OpenAPI::toJsonValue(m_target_page));
    }
    if (m_trigger_fulfillment.isSet()) {
        obj.insert(QString("triggerFulfillment"), ::OpenAPI::toJsonValue(m_trigger_fulfillment));
    }
    return obj;
}

QString OAIGoogleCloudDialogflowCxV3beta1EventHandler::getEvent() const {
    return m_event;
}
void OAIGoogleCloudDialogflowCxV3beta1EventHandler::setEvent(const QString &event) {
    m_event = event;
    m_event_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1EventHandler::is_event_Set() const{
    return m_event_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1EventHandler::is_event_Valid() const{
    return m_event_isValid;
}

QString OAIGoogleCloudDialogflowCxV3beta1EventHandler::getName() const {
    return m_name;
}
void OAIGoogleCloudDialogflowCxV3beta1EventHandler::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1EventHandler::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1EventHandler::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGoogleCloudDialogflowCxV3beta1EventHandler::getTargetFlow() const {
    return m_target_flow;
}
void OAIGoogleCloudDialogflowCxV3beta1EventHandler::setTargetFlow(const QString &target_flow) {
    m_target_flow = target_flow;
    m_target_flow_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1EventHandler::is_target_flow_Set() const{
    return m_target_flow_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1EventHandler::is_target_flow_Valid() const{
    return m_target_flow_isValid;
}

QString OAIGoogleCloudDialogflowCxV3beta1EventHandler::getTargetPage() const {
    return m_target_page;
}
void OAIGoogleCloudDialogflowCxV3beta1EventHandler::setTargetPage(const QString &target_page) {
    m_target_page = target_page;
    m_target_page_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1EventHandler::is_target_page_Set() const{
    return m_target_page_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1EventHandler::is_target_page_Valid() const{
    return m_target_page_isValid;
}

OAIGoogleCloudDialogflowCxV3beta1Fulfillment OAIGoogleCloudDialogflowCxV3beta1EventHandler::getTriggerFulfillment() const {
    return m_trigger_fulfillment;
}
void OAIGoogleCloudDialogflowCxV3beta1EventHandler::setTriggerFulfillment(const OAIGoogleCloudDialogflowCxV3beta1Fulfillment &trigger_fulfillment) {
    m_trigger_fulfillment = trigger_fulfillment;
    m_trigger_fulfillment_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3beta1EventHandler::is_trigger_fulfillment_Set() const{
    return m_trigger_fulfillment_isSet;
}

bool OAIGoogleCloudDialogflowCxV3beta1EventHandler::is_trigger_fulfillment_Valid() const{
    return m_trigger_fulfillment_isValid;
}

bool OAIGoogleCloudDialogflowCxV3beta1EventHandler::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_event_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_target_flow_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_target_page_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_trigger_fulfillment.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowCxV3beta1EventHandler::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
