/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowCxV3FlowImportStrategy.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowCxV3FlowImportStrategy::OAIGoogleCloudDialogflowCxV3FlowImportStrategy(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowCxV3FlowImportStrategy::OAIGoogleCloudDialogflowCxV3FlowImportStrategy() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowCxV3FlowImportStrategy::~OAIGoogleCloudDialogflowCxV3FlowImportStrategy() {}

void OAIGoogleCloudDialogflowCxV3FlowImportStrategy::initializeModel() {

    m_global_import_strategy_isSet = false;
    m_global_import_strategy_isValid = false;
}

void OAIGoogleCloudDialogflowCxV3FlowImportStrategy::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowCxV3FlowImportStrategy::fromJsonObject(QJsonObject json) {

    m_global_import_strategy_isValid = ::OpenAPI::fromJsonValue(m_global_import_strategy, json[QString("globalImportStrategy")]);
    m_global_import_strategy_isSet = !json[QString("globalImportStrategy")].isNull() && m_global_import_strategy_isValid;
}

QString OAIGoogleCloudDialogflowCxV3FlowImportStrategy::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowCxV3FlowImportStrategy::asJsonObject() const {
    QJsonObject obj;
    if (m_global_import_strategy_isSet) {
        obj.insert(QString("globalImportStrategy"), ::OpenAPI::toJsonValue(m_global_import_strategy));
    }
    return obj;
}

QString OAIGoogleCloudDialogflowCxV3FlowImportStrategy::getGlobalImportStrategy() const {
    return m_global_import_strategy;
}
void OAIGoogleCloudDialogflowCxV3FlowImportStrategy::setGlobalImportStrategy(const QString &global_import_strategy) {
    m_global_import_strategy = global_import_strategy;
    m_global_import_strategy_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3FlowImportStrategy::is_global_import_strategy_Set() const{
    return m_global_import_strategy_isSet;
}

bool OAIGoogleCloudDialogflowCxV3FlowImportStrategy::is_global_import_strategy_Valid() const{
    return m_global_import_strategy_isValid;
}

bool OAIGoogleCloudDialogflowCxV3FlowImportStrategy::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_global_import_strategy_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowCxV3FlowImportStrategy::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
