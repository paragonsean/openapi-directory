/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowV2Intent.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowV2Intent::OAIGoogleCloudDialogflowV2Intent(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowV2Intent::OAIGoogleCloudDialogflowV2Intent() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowV2Intent::~OAIGoogleCloudDialogflowV2Intent() {}

void OAIGoogleCloudDialogflowV2Intent::initializeModel() {

    m_action_isSet = false;
    m_action_isValid = false;

    m_default_response_platforms_isSet = false;
    m_default_response_platforms_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_end_interaction_isSet = false;
    m_end_interaction_isValid = false;

    m_events_isSet = false;
    m_events_isValid = false;

    m_followup_intent_info_isSet = false;
    m_followup_intent_info_isValid = false;

    m_input_context_names_isSet = false;
    m_input_context_names_isValid = false;

    m_is_fallback_isSet = false;
    m_is_fallback_isValid = false;

    m_live_agent_handoff_isSet = false;
    m_live_agent_handoff_isValid = false;

    m_messages_isSet = false;
    m_messages_isValid = false;

    m_ml_disabled_isSet = false;
    m_ml_disabled_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_output_contexts_isSet = false;
    m_output_contexts_isValid = false;

    m_parameters_isSet = false;
    m_parameters_isValid = false;

    m_parent_followup_intent_name_isSet = false;
    m_parent_followup_intent_name_isValid = false;

    m_priority_isSet = false;
    m_priority_isValid = false;

    m_reset_contexts_isSet = false;
    m_reset_contexts_isValid = false;

    m_root_followup_intent_name_isSet = false;
    m_root_followup_intent_name_isValid = false;

    m_training_phrases_isSet = false;
    m_training_phrases_isValid = false;

    m_webhook_state_isSet = false;
    m_webhook_state_isValid = false;
}

void OAIGoogleCloudDialogflowV2Intent::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowV2Intent::fromJsonObject(QJsonObject json) {

    m_action_isValid = ::OpenAPI::fromJsonValue(m_action, json[QString("action")]);
    m_action_isSet = !json[QString("action")].isNull() && m_action_isValid;

    m_default_response_platforms_isValid = ::OpenAPI::fromJsonValue(m_default_response_platforms, json[QString("defaultResponsePlatforms")]);
    m_default_response_platforms_isSet = !json[QString("defaultResponsePlatforms")].isNull() && m_default_response_platforms_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_end_interaction_isValid = ::OpenAPI::fromJsonValue(m_end_interaction, json[QString("endInteraction")]);
    m_end_interaction_isSet = !json[QString("endInteraction")].isNull() && m_end_interaction_isValid;

    m_events_isValid = ::OpenAPI::fromJsonValue(m_events, json[QString("events")]);
    m_events_isSet = !json[QString("events")].isNull() && m_events_isValid;

    m_followup_intent_info_isValid = ::OpenAPI::fromJsonValue(m_followup_intent_info, json[QString("followupIntentInfo")]);
    m_followup_intent_info_isSet = !json[QString("followupIntentInfo")].isNull() && m_followup_intent_info_isValid;

    m_input_context_names_isValid = ::OpenAPI::fromJsonValue(m_input_context_names, json[QString("inputContextNames")]);
    m_input_context_names_isSet = !json[QString("inputContextNames")].isNull() && m_input_context_names_isValid;

    m_is_fallback_isValid = ::OpenAPI::fromJsonValue(m_is_fallback, json[QString("isFallback")]);
    m_is_fallback_isSet = !json[QString("isFallback")].isNull() && m_is_fallback_isValid;

    m_live_agent_handoff_isValid = ::OpenAPI::fromJsonValue(m_live_agent_handoff, json[QString("liveAgentHandoff")]);
    m_live_agent_handoff_isSet = !json[QString("liveAgentHandoff")].isNull() && m_live_agent_handoff_isValid;

    m_messages_isValid = ::OpenAPI::fromJsonValue(m_messages, json[QString("messages")]);
    m_messages_isSet = !json[QString("messages")].isNull() && m_messages_isValid;

    m_ml_disabled_isValid = ::OpenAPI::fromJsonValue(m_ml_disabled, json[QString("mlDisabled")]);
    m_ml_disabled_isSet = !json[QString("mlDisabled")].isNull() && m_ml_disabled_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_output_contexts_isValid = ::OpenAPI::fromJsonValue(m_output_contexts, json[QString("outputContexts")]);
    m_output_contexts_isSet = !json[QString("outputContexts")].isNull() && m_output_contexts_isValid;

    m_parameters_isValid = ::OpenAPI::fromJsonValue(m_parameters, json[QString("parameters")]);
    m_parameters_isSet = !json[QString("parameters")].isNull() && m_parameters_isValid;

    m_parent_followup_intent_name_isValid = ::OpenAPI::fromJsonValue(m_parent_followup_intent_name, json[QString("parentFollowupIntentName")]);
    m_parent_followup_intent_name_isSet = !json[QString("parentFollowupIntentName")].isNull() && m_parent_followup_intent_name_isValid;

    m_priority_isValid = ::OpenAPI::fromJsonValue(m_priority, json[QString("priority")]);
    m_priority_isSet = !json[QString("priority")].isNull() && m_priority_isValid;

    m_reset_contexts_isValid = ::OpenAPI::fromJsonValue(m_reset_contexts, json[QString("resetContexts")]);
    m_reset_contexts_isSet = !json[QString("resetContexts")].isNull() && m_reset_contexts_isValid;

    m_root_followup_intent_name_isValid = ::OpenAPI::fromJsonValue(m_root_followup_intent_name, json[QString("rootFollowupIntentName")]);
    m_root_followup_intent_name_isSet = !json[QString("rootFollowupIntentName")].isNull() && m_root_followup_intent_name_isValid;

    m_training_phrases_isValid = ::OpenAPI::fromJsonValue(m_training_phrases, json[QString("trainingPhrases")]);
    m_training_phrases_isSet = !json[QString("trainingPhrases")].isNull() && m_training_phrases_isValid;

    m_webhook_state_isValid = ::OpenAPI::fromJsonValue(m_webhook_state, json[QString("webhookState")]);
    m_webhook_state_isSet = !json[QString("webhookState")].isNull() && m_webhook_state_isValid;
}

QString OAIGoogleCloudDialogflowV2Intent::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowV2Intent::asJsonObject() const {
    QJsonObject obj;
    if (m_action_isSet) {
        obj.insert(QString("action"), ::OpenAPI::toJsonValue(m_action));
    }
    if (m_default_response_platforms.size() > 0) {
        obj.insert(QString("defaultResponsePlatforms"), ::OpenAPI::toJsonValue(m_default_response_platforms));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_end_interaction_isSet) {
        obj.insert(QString("endInteraction"), ::OpenAPI::toJsonValue(m_end_interaction));
    }
    if (m_events.size() > 0) {
        obj.insert(QString("events"), ::OpenAPI::toJsonValue(m_events));
    }
    if (m_followup_intent_info.size() > 0) {
        obj.insert(QString("followupIntentInfo"), ::OpenAPI::toJsonValue(m_followup_intent_info));
    }
    if (m_input_context_names.size() > 0) {
        obj.insert(QString("inputContextNames"), ::OpenAPI::toJsonValue(m_input_context_names));
    }
    if (m_is_fallback_isSet) {
        obj.insert(QString("isFallback"), ::OpenAPI::toJsonValue(m_is_fallback));
    }
    if (m_live_agent_handoff_isSet) {
        obj.insert(QString("liveAgentHandoff"), ::OpenAPI::toJsonValue(m_live_agent_handoff));
    }
    if (m_messages.size() > 0) {
        obj.insert(QString("messages"), ::OpenAPI::toJsonValue(m_messages));
    }
    if (m_ml_disabled_isSet) {
        obj.insert(QString("mlDisabled"), ::OpenAPI::toJsonValue(m_ml_disabled));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_output_contexts.size() > 0) {
        obj.insert(QString("outputContexts"), ::OpenAPI::toJsonValue(m_output_contexts));
    }
    if (m_parameters.size() > 0) {
        obj.insert(QString("parameters"), ::OpenAPI::toJsonValue(m_parameters));
    }
    if (m_parent_followup_intent_name_isSet) {
        obj.insert(QString("parentFollowupIntentName"), ::OpenAPI::toJsonValue(m_parent_followup_intent_name));
    }
    if (m_priority_isSet) {
        obj.insert(QString("priority"), ::OpenAPI::toJsonValue(m_priority));
    }
    if (m_reset_contexts_isSet) {
        obj.insert(QString("resetContexts"), ::OpenAPI::toJsonValue(m_reset_contexts));
    }
    if (m_root_followup_intent_name_isSet) {
        obj.insert(QString("rootFollowupIntentName"), ::OpenAPI::toJsonValue(m_root_followup_intent_name));
    }
    if (m_training_phrases.size() > 0) {
        obj.insert(QString("trainingPhrases"), ::OpenAPI::toJsonValue(m_training_phrases));
    }
    if (m_webhook_state_isSet) {
        obj.insert(QString("webhookState"), ::OpenAPI::toJsonValue(m_webhook_state));
    }
    return obj;
}

QString OAIGoogleCloudDialogflowV2Intent::getAction() const {
    return m_action;
}
void OAIGoogleCloudDialogflowV2Intent::setAction(const QString &action) {
    m_action = action;
    m_action_isSet = true;
}

bool OAIGoogleCloudDialogflowV2Intent::is_action_Set() const{
    return m_action_isSet;
}

bool OAIGoogleCloudDialogflowV2Intent::is_action_Valid() const{
    return m_action_isValid;
}

QList<QString> OAIGoogleCloudDialogflowV2Intent::getDefaultResponsePlatforms() const {
    return m_default_response_platforms;
}
void OAIGoogleCloudDialogflowV2Intent::setDefaultResponsePlatforms(const QList<QString> &default_response_platforms) {
    m_default_response_platforms = default_response_platforms;
    m_default_response_platforms_isSet = true;
}

bool OAIGoogleCloudDialogflowV2Intent::is_default_response_platforms_Set() const{
    return m_default_response_platforms_isSet;
}

bool OAIGoogleCloudDialogflowV2Intent::is_default_response_platforms_Valid() const{
    return m_default_response_platforms_isValid;
}

QString OAIGoogleCloudDialogflowV2Intent::getDisplayName() const {
    return m_display_name;
}
void OAIGoogleCloudDialogflowV2Intent::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGoogleCloudDialogflowV2Intent::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGoogleCloudDialogflowV2Intent::is_display_name_Valid() const{
    return m_display_name_isValid;
}

bool OAIGoogleCloudDialogflowV2Intent::isEndInteraction() const {
    return m_end_interaction;
}
void OAIGoogleCloudDialogflowV2Intent::setEndInteraction(const bool &end_interaction) {
    m_end_interaction = end_interaction;
    m_end_interaction_isSet = true;
}

bool OAIGoogleCloudDialogflowV2Intent::is_end_interaction_Set() const{
    return m_end_interaction_isSet;
}

bool OAIGoogleCloudDialogflowV2Intent::is_end_interaction_Valid() const{
    return m_end_interaction_isValid;
}

QList<QString> OAIGoogleCloudDialogflowV2Intent::getEvents() const {
    return m_events;
}
void OAIGoogleCloudDialogflowV2Intent::setEvents(const QList<QString> &events) {
    m_events = events;
    m_events_isSet = true;
}

bool OAIGoogleCloudDialogflowV2Intent::is_events_Set() const{
    return m_events_isSet;
}

bool OAIGoogleCloudDialogflowV2Intent::is_events_Valid() const{
    return m_events_isValid;
}

QList<OAIGoogleCloudDialogflowV2IntentFollowupIntentInfo> OAIGoogleCloudDialogflowV2Intent::getFollowupIntentInfo() const {
    return m_followup_intent_info;
}
void OAIGoogleCloudDialogflowV2Intent::setFollowupIntentInfo(const QList<OAIGoogleCloudDialogflowV2IntentFollowupIntentInfo> &followup_intent_info) {
    m_followup_intent_info = followup_intent_info;
    m_followup_intent_info_isSet = true;
}

bool OAIGoogleCloudDialogflowV2Intent::is_followup_intent_info_Set() const{
    return m_followup_intent_info_isSet;
}

bool OAIGoogleCloudDialogflowV2Intent::is_followup_intent_info_Valid() const{
    return m_followup_intent_info_isValid;
}

QList<QString> OAIGoogleCloudDialogflowV2Intent::getInputContextNames() const {
    return m_input_context_names;
}
void OAIGoogleCloudDialogflowV2Intent::setInputContextNames(const QList<QString> &input_context_names) {
    m_input_context_names = input_context_names;
    m_input_context_names_isSet = true;
}

bool OAIGoogleCloudDialogflowV2Intent::is_input_context_names_Set() const{
    return m_input_context_names_isSet;
}

bool OAIGoogleCloudDialogflowV2Intent::is_input_context_names_Valid() const{
    return m_input_context_names_isValid;
}

bool OAIGoogleCloudDialogflowV2Intent::isIsFallback() const {
    return m_is_fallback;
}
void OAIGoogleCloudDialogflowV2Intent::setIsFallback(const bool &is_fallback) {
    m_is_fallback = is_fallback;
    m_is_fallback_isSet = true;
}

bool OAIGoogleCloudDialogflowV2Intent::is_is_fallback_Set() const{
    return m_is_fallback_isSet;
}

bool OAIGoogleCloudDialogflowV2Intent::is_is_fallback_Valid() const{
    return m_is_fallback_isValid;
}

bool OAIGoogleCloudDialogflowV2Intent::isLiveAgentHandoff() const {
    return m_live_agent_handoff;
}
void OAIGoogleCloudDialogflowV2Intent::setLiveAgentHandoff(const bool &live_agent_handoff) {
    m_live_agent_handoff = live_agent_handoff;
    m_live_agent_handoff_isSet = true;
}

bool OAIGoogleCloudDialogflowV2Intent::is_live_agent_handoff_Set() const{
    return m_live_agent_handoff_isSet;
}

bool OAIGoogleCloudDialogflowV2Intent::is_live_agent_handoff_Valid() const{
    return m_live_agent_handoff_isValid;
}

QList<OAIGoogleCloudDialogflowV2IntentMessage> OAIGoogleCloudDialogflowV2Intent::getMessages() const {
    return m_messages;
}
void OAIGoogleCloudDialogflowV2Intent::setMessages(const QList<OAIGoogleCloudDialogflowV2IntentMessage> &messages) {
    m_messages = messages;
    m_messages_isSet = true;
}

bool OAIGoogleCloudDialogflowV2Intent::is_messages_Set() const{
    return m_messages_isSet;
}

bool OAIGoogleCloudDialogflowV2Intent::is_messages_Valid() const{
    return m_messages_isValid;
}

bool OAIGoogleCloudDialogflowV2Intent::isMlDisabled() const {
    return m_ml_disabled;
}
void OAIGoogleCloudDialogflowV2Intent::setMlDisabled(const bool &ml_disabled) {
    m_ml_disabled = ml_disabled;
    m_ml_disabled_isSet = true;
}

bool OAIGoogleCloudDialogflowV2Intent::is_ml_disabled_Set() const{
    return m_ml_disabled_isSet;
}

bool OAIGoogleCloudDialogflowV2Intent::is_ml_disabled_Valid() const{
    return m_ml_disabled_isValid;
}

QString OAIGoogleCloudDialogflowV2Intent::getName() const {
    return m_name;
}
void OAIGoogleCloudDialogflowV2Intent::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudDialogflowV2Intent::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudDialogflowV2Intent::is_name_Valid() const{
    return m_name_isValid;
}

QList<OAIGoogleCloudDialogflowV2Context> OAIGoogleCloudDialogflowV2Intent::getOutputContexts() const {
    return m_output_contexts;
}
void OAIGoogleCloudDialogflowV2Intent::setOutputContexts(const QList<OAIGoogleCloudDialogflowV2Context> &output_contexts) {
    m_output_contexts = output_contexts;
    m_output_contexts_isSet = true;
}

bool OAIGoogleCloudDialogflowV2Intent::is_output_contexts_Set() const{
    return m_output_contexts_isSet;
}

bool OAIGoogleCloudDialogflowV2Intent::is_output_contexts_Valid() const{
    return m_output_contexts_isValid;
}

QList<OAIGoogleCloudDialogflowV2IntentParameter> OAIGoogleCloudDialogflowV2Intent::getParameters() const {
    return m_parameters;
}
void OAIGoogleCloudDialogflowV2Intent::setParameters(const QList<OAIGoogleCloudDialogflowV2IntentParameter> &parameters) {
    m_parameters = parameters;
    m_parameters_isSet = true;
}

bool OAIGoogleCloudDialogflowV2Intent::is_parameters_Set() const{
    return m_parameters_isSet;
}

bool OAIGoogleCloudDialogflowV2Intent::is_parameters_Valid() const{
    return m_parameters_isValid;
}

QString OAIGoogleCloudDialogflowV2Intent::getParentFollowupIntentName() const {
    return m_parent_followup_intent_name;
}
void OAIGoogleCloudDialogflowV2Intent::setParentFollowupIntentName(const QString &parent_followup_intent_name) {
    m_parent_followup_intent_name = parent_followup_intent_name;
    m_parent_followup_intent_name_isSet = true;
}

bool OAIGoogleCloudDialogflowV2Intent::is_parent_followup_intent_name_Set() const{
    return m_parent_followup_intent_name_isSet;
}

bool OAIGoogleCloudDialogflowV2Intent::is_parent_followup_intent_name_Valid() const{
    return m_parent_followup_intent_name_isValid;
}

qint32 OAIGoogleCloudDialogflowV2Intent::getPriority() const {
    return m_priority;
}
void OAIGoogleCloudDialogflowV2Intent::setPriority(const qint32 &priority) {
    m_priority = priority;
    m_priority_isSet = true;
}

bool OAIGoogleCloudDialogflowV2Intent::is_priority_Set() const{
    return m_priority_isSet;
}

bool OAIGoogleCloudDialogflowV2Intent::is_priority_Valid() const{
    return m_priority_isValid;
}

bool OAIGoogleCloudDialogflowV2Intent::isResetContexts() const {
    return m_reset_contexts;
}
void OAIGoogleCloudDialogflowV2Intent::setResetContexts(const bool &reset_contexts) {
    m_reset_contexts = reset_contexts;
    m_reset_contexts_isSet = true;
}

bool OAIGoogleCloudDialogflowV2Intent::is_reset_contexts_Set() const{
    return m_reset_contexts_isSet;
}

bool OAIGoogleCloudDialogflowV2Intent::is_reset_contexts_Valid() const{
    return m_reset_contexts_isValid;
}

QString OAIGoogleCloudDialogflowV2Intent::getRootFollowupIntentName() const {
    return m_root_followup_intent_name;
}
void OAIGoogleCloudDialogflowV2Intent::setRootFollowupIntentName(const QString &root_followup_intent_name) {
    m_root_followup_intent_name = root_followup_intent_name;
    m_root_followup_intent_name_isSet = true;
}

bool OAIGoogleCloudDialogflowV2Intent::is_root_followup_intent_name_Set() const{
    return m_root_followup_intent_name_isSet;
}

bool OAIGoogleCloudDialogflowV2Intent::is_root_followup_intent_name_Valid() const{
    return m_root_followup_intent_name_isValid;
}

QList<OAIGoogleCloudDialogflowV2IntentTrainingPhrase> OAIGoogleCloudDialogflowV2Intent::getTrainingPhrases() const {
    return m_training_phrases;
}
void OAIGoogleCloudDialogflowV2Intent::setTrainingPhrases(const QList<OAIGoogleCloudDialogflowV2IntentTrainingPhrase> &training_phrases) {
    m_training_phrases = training_phrases;
    m_training_phrases_isSet = true;
}

bool OAIGoogleCloudDialogflowV2Intent::is_training_phrases_Set() const{
    return m_training_phrases_isSet;
}

bool OAIGoogleCloudDialogflowV2Intent::is_training_phrases_Valid() const{
    return m_training_phrases_isValid;
}

QString OAIGoogleCloudDialogflowV2Intent::getWebhookState() const {
    return m_webhook_state;
}
void OAIGoogleCloudDialogflowV2Intent::setWebhookState(const QString &webhook_state) {
    m_webhook_state = webhook_state;
    m_webhook_state_isSet = true;
}

bool OAIGoogleCloudDialogflowV2Intent::is_webhook_state_Set() const{
    return m_webhook_state_isSet;
}

bool OAIGoogleCloudDialogflowV2Intent::is_webhook_state_Valid() const{
    return m_webhook_state_isValid;
}

bool OAIGoogleCloudDialogflowV2Intent::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_action_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_default_response_platforms.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_interaction_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_events.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_followup_intent_info.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_input_context_names.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_fallback_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_live_agent_handoff_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_messages.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_ml_disabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_output_contexts.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_parameters.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_parent_followup_intent_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_priority_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reset_contexts_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_root_followup_intent_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_training_phrases.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_webhook_state_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowV2Intent::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
