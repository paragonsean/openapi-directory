/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowCxV3Flow.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowCxV3Flow::OAIGoogleCloudDialogflowCxV3Flow(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowCxV3Flow::OAIGoogleCloudDialogflowCxV3Flow() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowCxV3Flow::~OAIGoogleCloudDialogflowCxV3Flow() {}

void OAIGoogleCloudDialogflowCxV3Flow::initializeModel() {

    m_advanced_settings_isSet = false;
    m_advanced_settings_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_event_handlers_isSet = false;
    m_event_handlers_isValid = false;

    m_knowledge_connector_settings_isSet = false;
    m_knowledge_connector_settings_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_nlu_settings_isSet = false;
    m_nlu_settings_isValid = false;

    m_transition_route_groups_isSet = false;
    m_transition_route_groups_isValid = false;

    m_transition_routes_isSet = false;
    m_transition_routes_isValid = false;
}

void OAIGoogleCloudDialogflowCxV3Flow::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowCxV3Flow::fromJsonObject(QJsonObject json) {

    m_advanced_settings_isValid = ::OpenAPI::fromJsonValue(m_advanced_settings, json[QString("advancedSettings")]);
    m_advanced_settings_isSet = !json[QString("advancedSettings")].isNull() && m_advanced_settings_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_event_handlers_isValid = ::OpenAPI::fromJsonValue(m_event_handlers, json[QString("eventHandlers")]);
    m_event_handlers_isSet = !json[QString("eventHandlers")].isNull() && m_event_handlers_isValid;

    m_knowledge_connector_settings_isValid = ::OpenAPI::fromJsonValue(m_knowledge_connector_settings, json[QString("knowledgeConnectorSettings")]);
    m_knowledge_connector_settings_isSet = !json[QString("knowledgeConnectorSettings")].isNull() && m_knowledge_connector_settings_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_nlu_settings_isValid = ::OpenAPI::fromJsonValue(m_nlu_settings, json[QString("nluSettings")]);
    m_nlu_settings_isSet = !json[QString("nluSettings")].isNull() && m_nlu_settings_isValid;

    m_transition_route_groups_isValid = ::OpenAPI::fromJsonValue(m_transition_route_groups, json[QString("transitionRouteGroups")]);
    m_transition_route_groups_isSet = !json[QString("transitionRouteGroups")].isNull() && m_transition_route_groups_isValid;

    m_transition_routes_isValid = ::OpenAPI::fromJsonValue(m_transition_routes, json[QString("transitionRoutes")]);
    m_transition_routes_isSet = !json[QString("transitionRoutes")].isNull() && m_transition_routes_isValid;
}

QString OAIGoogleCloudDialogflowCxV3Flow::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowCxV3Flow::asJsonObject() const {
    QJsonObject obj;
    if (m_advanced_settings.isSet()) {
        obj.insert(QString("advancedSettings"), ::OpenAPI::toJsonValue(m_advanced_settings));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_event_handlers.size() > 0) {
        obj.insert(QString("eventHandlers"), ::OpenAPI::toJsonValue(m_event_handlers));
    }
    if (m_knowledge_connector_settings.isSet()) {
        obj.insert(QString("knowledgeConnectorSettings"), ::OpenAPI::toJsonValue(m_knowledge_connector_settings));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_nlu_settings.isSet()) {
        obj.insert(QString("nluSettings"), ::OpenAPI::toJsonValue(m_nlu_settings));
    }
    if (m_transition_route_groups.size() > 0) {
        obj.insert(QString("transitionRouteGroups"), ::OpenAPI::toJsonValue(m_transition_route_groups));
    }
    if (m_transition_routes.size() > 0) {
        obj.insert(QString("transitionRoutes"), ::OpenAPI::toJsonValue(m_transition_routes));
    }
    return obj;
}

OAIGoogleCloudDialogflowCxV3AdvancedSettings OAIGoogleCloudDialogflowCxV3Flow::getAdvancedSettings() const {
    return m_advanced_settings;
}
void OAIGoogleCloudDialogflowCxV3Flow::setAdvancedSettings(const OAIGoogleCloudDialogflowCxV3AdvancedSettings &advanced_settings) {
    m_advanced_settings = advanced_settings;
    m_advanced_settings_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3Flow::is_advanced_settings_Set() const{
    return m_advanced_settings_isSet;
}

bool OAIGoogleCloudDialogflowCxV3Flow::is_advanced_settings_Valid() const{
    return m_advanced_settings_isValid;
}

QString OAIGoogleCloudDialogflowCxV3Flow::getDescription() const {
    return m_description;
}
void OAIGoogleCloudDialogflowCxV3Flow::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3Flow::is_description_Set() const{
    return m_description_isSet;
}

bool OAIGoogleCloudDialogflowCxV3Flow::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIGoogleCloudDialogflowCxV3Flow::getDisplayName() const {
    return m_display_name;
}
void OAIGoogleCloudDialogflowCxV3Flow::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3Flow::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGoogleCloudDialogflowCxV3Flow::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QList<OAIGoogleCloudDialogflowCxV3EventHandler> OAIGoogleCloudDialogflowCxV3Flow::getEventHandlers() const {
    return m_event_handlers;
}
void OAIGoogleCloudDialogflowCxV3Flow::setEventHandlers(const QList<OAIGoogleCloudDialogflowCxV3EventHandler> &event_handlers) {
    m_event_handlers = event_handlers;
    m_event_handlers_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3Flow::is_event_handlers_Set() const{
    return m_event_handlers_isSet;
}

bool OAIGoogleCloudDialogflowCxV3Flow::is_event_handlers_Valid() const{
    return m_event_handlers_isValid;
}

OAIGoogleCloudDialogflowCxV3KnowledgeConnectorSettings OAIGoogleCloudDialogflowCxV3Flow::getKnowledgeConnectorSettings() const {
    return m_knowledge_connector_settings;
}
void OAIGoogleCloudDialogflowCxV3Flow::setKnowledgeConnectorSettings(const OAIGoogleCloudDialogflowCxV3KnowledgeConnectorSettings &knowledge_connector_settings) {
    m_knowledge_connector_settings = knowledge_connector_settings;
    m_knowledge_connector_settings_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3Flow::is_knowledge_connector_settings_Set() const{
    return m_knowledge_connector_settings_isSet;
}

bool OAIGoogleCloudDialogflowCxV3Flow::is_knowledge_connector_settings_Valid() const{
    return m_knowledge_connector_settings_isValid;
}

QString OAIGoogleCloudDialogflowCxV3Flow::getName() const {
    return m_name;
}
void OAIGoogleCloudDialogflowCxV3Flow::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3Flow::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudDialogflowCxV3Flow::is_name_Valid() const{
    return m_name_isValid;
}

OAIGoogleCloudDialogflowCxV3NluSettings OAIGoogleCloudDialogflowCxV3Flow::getNluSettings() const {
    return m_nlu_settings;
}
void OAIGoogleCloudDialogflowCxV3Flow::setNluSettings(const OAIGoogleCloudDialogflowCxV3NluSettings &nlu_settings) {
    m_nlu_settings = nlu_settings;
    m_nlu_settings_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3Flow::is_nlu_settings_Set() const{
    return m_nlu_settings_isSet;
}

bool OAIGoogleCloudDialogflowCxV3Flow::is_nlu_settings_Valid() const{
    return m_nlu_settings_isValid;
}

QList<QString> OAIGoogleCloudDialogflowCxV3Flow::getTransitionRouteGroups() const {
    return m_transition_route_groups;
}
void OAIGoogleCloudDialogflowCxV3Flow::setTransitionRouteGroups(const QList<QString> &transition_route_groups) {
    m_transition_route_groups = transition_route_groups;
    m_transition_route_groups_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3Flow::is_transition_route_groups_Set() const{
    return m_transition_route_groups_isSet;
}

bool OAIGoogleCloudDialogflowCxV3Flow::is_transition_route_groups_Valid() const{
    return m_transition_route_groups_isValid;
}

QList<OAIGoogleCloudDialogflowCxV3TransitionRoute> OAIGoogleCloudDialogflowCxV3Flow::getTransitionRoutes() const {
    return m_transition_routes;
}
void OAIGoogleCloudDialogflowCxV3Flow::setTransitionRoutes(const QList<OAIGoogleCloudDialogflowCxV3TransitionRoute> &transition_routes) {
    m_transition_routes = transition_routes;
    m_transition_routes_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3Flow::is_transition_routes_Set() const{
    return m_transition_routes_isSet;
}

bool OAIGoogleCloudDialogflowCxV3Flow::is_transition_routes_Valid() const{
    return m_transition_routes_isValid;
}

bool OAIGoogleCloudDialogflowCxV3Flow::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_advanced_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_event_handlers.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_knowledge_connector_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_nlu_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_transition_route_groups.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_transition_routes.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowCxV3Flow::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
