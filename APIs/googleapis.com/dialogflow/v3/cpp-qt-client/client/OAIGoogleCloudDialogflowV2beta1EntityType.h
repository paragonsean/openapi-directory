/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudDialogflowV2beta1EntityType.h
 *
 * Each intent parameter has a type, called the entity type, which dictates exactly how data from an end-user expression is extracted. Dialogflow provides predefined system entities that can match many common types of data. For example, there are system entities for matching dates, times, colors, email addresses, and so on. You can also create your own custom entities for matching custom data. For example, you could define a vegetable entity that can match the types of vegetables available for purchase with a grocery store agent. For more information, see the [Entity guide](https://cloud.google.com/dialogflow/docs/entities-overview).
 */

#ifndef OAIGoogleCloudDialogflowV2beta1EntityType_H
#define OAIGoogleCloudDialogflowV2beta1EntityType_H

#include <QJsonObject>

#include "OAIGoogleCloudDialogflowV2beta1EntityTypeEntity.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleCloudDialogflowV2beta1EntityTypeEntity;

class OAIGoogleCloudDialogflowV2beta1EntityType : public OAIObject {
public:
    OAIGoogleCloudDialogflowV2beta1EntityType();
    OAIGoogleCloudDialogflowV2beta1EntityType(QString json);
    ~OAIGoogleCloudDialogflowV2beta1EntityType() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAutoExpansionMode() const;
    void setAutoExpansionMode(const QString &auto_expansion_mode);
    bool is_auto_expansion_mode_Set() const;
    bool is_auto_expansion_mode_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    bool isEnableFuzzyExtraction() const;
    void setEnableFuzzyExtraction(const bool &enable_fuzzy_extraction);
    bool is_enable_fuzzy_extraction_Set() const;
    bool is_enable_fuzzy_extraction_Valid() const;

    QList<OAIGoogleCloudDialogflowV2beta1EntityTypeEntity> getEntities() const;
    void setEntities(const QList<OAIGoogleCloudDialogflowV2beta1EntityTypeEntity> &entities);
    bool is_entities_Set() const;
    bool is_entities_Valid() const;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_auto_expansion_mode;
    bool m_auto_expansion_mode_isSet;
    bool m_auto_expansion_mode_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    bool m_enable_fuzzy_extraction;
    bool m_enable_fuzzy_extraction_isSet;
    bool m_enable_fuzzy_extraction_isValid;

    QList<OAIGoogleCloudDialogflowV2beta1EntityTypeEntity> m_entities;
    bool m_entities_isSet;
    bool m_entities_isValid;

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudDialogflowV2beta1EntityType)

#endif // OAIGoogleCloudDialogflowV2beta1EntityType_H
