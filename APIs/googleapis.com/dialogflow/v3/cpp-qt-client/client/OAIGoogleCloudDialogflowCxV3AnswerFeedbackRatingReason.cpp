/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowCxV3AnswerFeedbackRatingReason.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowCxV3AnswerFeedbackRatingReason::OAIGoogleCloudDialogflowCxV3AnswerFeedbackRatingReason(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowCxV3AnswerFeedbackRatingReason::OAIGoogleCloudDialogflowCxV3AnswerFeedbackRatingReason() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowCxV3AnswerFeedbackRatingReason::~OAIGoogleCloudDialogflowCxV3AnswerFeedbackRatingReason() {}

void OAIGoogleCloudDialogflowCxV3AnswerFeedbackRatingReason::initializeModel() {

    m_feedback_isSet = false;
    m_feedback_isValid = false;

    m_reason_labels_isSet = false;
    m_reason_labels_isValid = false;
}

void OAIGoogleCloudDialogflowCxV3AnswerFeedbackRatingReason::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowCxV3AnswerFeedbackRatingReason::fromJsonObject(QJsonObject json) {

    m_feedback_isValid = ::OpenAPI::fromJsonValue(m_feedback, json[QString("feedback")]);
    m_feedback_isSet = !json[QString("feedback")].isNull() && m_feedback_isValid;

    m_reason_labels_isValid = ::OpenAPI::fromJsonValue(m_reason_labels, json[QString("reasonLabels")]);
    m_reason_labels_isSet = !json[QString("reasonLabels")].isNull() && m_reason_labels_isValid;
}

QString OAIGoogleCloudDialogflowCxV3AnswerFeedbackRatingReason::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowCxV3AnswerFeedbackRatingReason::asJsonObject() const {
    QJsonObject obj;
    if (m_feedback_isSet) {
        obj.insert(QString("feedback"), ::OpenAPI::toJsonValue(m_feedback));
    }
    if (m_reason_labels.size() > 0) {
        obj.insert(QString("reasonLabels"), ::OpenAPI::toJsonValue(m_reason_labels));
    }
    return obj;
}

QString OAIGoogleCloudDialogflowCxV3AnswerFeedbackRatingReason::getFeedback() const {
    return m_feedback;
}
void OAIGoogleCloudDialogflowCxV3AnswerFeedbackRatingReason::setFeedback(const QString &feedback) {
    m_feedback = feedback;
    m_feedback_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3AnswerFeedbackRatingReason::is_feedback_Set() const{
    return m_feedback_isSet;
}

bool OAIGoogleCloudDialogflowCxV3AnswerFeedbackRatingReason::is_feedback_Valid() const{
    return m_feedback_isValid;
}

QList<QString> OAIGoogleCloudDialogflowCxV3AnswerFeedbackRatingReason::getReasonLabels() const {
    return m_reason_labels;
}
void OAIGoogleCloudDialogflowCxV3AnswerFeedbackRatingReason::setReasonLabels(const QList<QString> &reason_labels) {
    m_reason_labels = reason_labels;
    m_reason_labels_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3AnswerFeedbackRatingReason::is_reason_labels_Set() const{
    return m_reason_labels_isSet;
}

bool OAIGoogleCloudDialogflowCxV3AnswerFeedbackRatingReason::is_reason_labels_Valid() const{
    return m_reason_labels_isValid;
}

bool OAIGoogleCloudDialogflowCxV3AnswerFeedbackRatingReason::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_feedback_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reason_labels.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowCxV3AnswerFeedbackRatingReason::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
