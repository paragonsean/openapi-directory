/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowCxV3Version.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowCxV3Version::OAIGoogleCloudDialogflowCxV3Version(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowCxV3Version::OAIGoogleCloudDialogflowCxV3Version() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowCxV3Version::~OAIGoogleCloudDialogflowCxV3Version() {}

void OAIGoogleCloudDialogflowCxV3Version::initializeModel() {

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_nlu_settings_isSet = false;
    m_nlu_settings_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;
}

void OAIGoogleCloudDialogflowCxV3Version::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowCxV3Version::fromJsonObject(QJsonObject json) {

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_nlu_settings_isValid = ::OpenAPI::fromJsonValue(m_nlu_settings, json[QString("nluSettings")]);
    m_nlu_settings_isSet = !json[QString("nluSettings")].isNull() && m_nlu_settings_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;
}

QString OAIGoogleCloudDialogflowCxV3Version::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowCxV3Version::asJsonObject() const {
    QJsonObject obj;
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_nlu_settings.isSet()) {
        obj.insert(QString("nluSettings"), ::OpenAPI::toJsonValue(m_nlu_settings));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    return obj;
}

QString OAIGoogleCloudDialogflowCxV3Version::getCreateTime() const {
    return m_create_time;
}
void OAIGoogleCloudDialogflowCxV3Version::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3Version::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIGoogleCloudDialogflowCxV3Version::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QString OAIGoogleCloudDialogflowCxV3Version::getDescription() const {
    return m_description;
}
void OAIGoogleCloudDialogflowCxV3Version::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3Version::is_description_Set() const{
    return m_description_isSet;
}

bool OAIGoogleCloudDialogflowCxV3Version::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIGoogleCloudDialogflowCxV3Version::getDisplayName() const {
    return m_display_name;
}
void OAIGoogleCloudDialogflowCxV3Version::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3Version::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGoogleCloudDialogflowCxV3Version::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QString OAIGoogleCloudDialogflowCxV3Version::getName() const {
    return m_name;
}
void OAIGoogleCloudDialogflowCxV3Version::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3Version::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudDialogflowCxV3Version::is_name_Valid() const{
    return m_name_isValid;
}

OAIGoogleCloudDialogflowCxV3NluSettings OAIGoogleCloudDialogflowCxV3Version::getNluSettings() const {
    return m_nlu_settings;
}
void OAIGoogleCloudDialogflowCxV3Version::setNluSettings(const OAIGoogleCloudDialogflowCxV3NluSettings &nlu_settings) {
    m_nlu_settings = nlu_settings;
    m_nlu_settings_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3Version::is_nlu_settings_Set() const{
    return m_nlu_settings_isSet;
}

bool OAIGoogleCloudDialogflowCxV3Version::is_nlu_settings_Valid() const{
    return m_nlu_settings_isValid;
}

QString OAIGoogleCloudDialogflowCxV3Version::getState() const {
    return m_state;
}
void OAIGoogleCloudDialogflowCxV3Version::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIGoogleCloudDialogflowCxV3Version::is_state_Set() const{
    return m_state_isSet;
}

bool OAIGoogleCloudDialogflowCxV3Version::is_state_Valid() const{
    return m_state_isValid;
}

bool OAIGoogleCloudDialogflowCxV3Version::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_nlu_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowCxV3Version::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
