/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDialogflowV2IntentMessage.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDialogflowV2IntentMessage::OAIGoogleCloudDialogflowV2IntentMessage(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDialogflowV2IntentMessage::OAIGoogleCloudDialogflowV2IntentMessage() {
    this->initializeModel();
}

OAIGoogleCloudDialogflowV2IntentMessage::~OAIGoogleCloudDialogflowV2IntentMessage() {}

void OAIGoogleCloudDialogflowV2IntentMessage::initializeModel() {

    m_basic_card_isSet = false;
    m_basic_card_isValid = false;

    m_browse_carousel_card_isSet = false;
    m_browse_carousel_card_isValid = false;

    m_card_isSet = false;
    m_card_isValid = false;

    m_carousel_select_isSet = false;
    m_carousel_select_isValid = false;

    m_image_isSet = false;
    m_image_isValid = false;

    m_link_out_suggestion_isSet = false;
    m_link_out_suggestion_isValid = false;

    m_list_select_isSet = false;
    m_list_select_isValid = false;

    m_media_content_isSet = false;
    m_media_content_isValid = false;

    m_payload_isSet = false;
    m_payload_isValid = false;

    m_platform_isSet = false;
    m_platform_isValid = false;

    m_quick_replies_isSet = false;
    m_quick_replies_isValid = false;

    m_simple_responses_isSet = false;
    m_simple_responses_isValid = false;

    m_suggestions_isSet = false;
    m_suggestions_isValid = false;

    m_table_card_isSet = false;
    m_table_card_isValid = false;

    m_text_isSet = false;
    m_text_isValid = false;
}

void OAIGoogleCloudDialogflowV2IntentMessage::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDialogflowV2IntentMessage::fromJsonObject(QJsonObject json) {

    m_basic_card_isValid = ::OpenAPI::fromJsonValue(m_basic_card, json[QString("basicCard")]);
    m_basic_card_isSet = !json[QString("basicCard")].isNull() && m_basic_card_isValid;

    m_browse_carousel_card_isValid = ::OpenAPI::fromJsonValue(m_browse_carousel_card, json[QString("browseCarouselCard")]);
    m_browse_carousel_card_isSet = !json[QString("browseCarouselCard")].isNull() && m_browse_carousel_card_isValid;

    m_card_isValid = ::OpenAPI::fromJsonValue(m_card, json[QString("card")]);
    m_card_isSet = !json[QString("card")].isNull() && m_card_isValid;

    m_carousel_select_isValid = ::OpenAPI::fromJsonValue(m_carousel_select, json[QString("carouselSelect")]);
    m_carousel_select_isSet = !json[QString("carouselSelect")].isNull() && m_carousel_select_isValid;

    m_image_isValid = ::OpenAPI::fromJsonValue(m_image, json[QString("image")]);
    m_image_isSet = !json[QString("image")].isNull() && m_image_isValid;

    m_link_out_suggestion_isValid = ::OpenAPI::fromJsonValue(m_link_out_suggestion, json[QString("linkOutSuggestion")]);
    m_link_out_suggestion_isSet = !json[QString("linkOutSuggestion")].isNull() && m_link_out_suggestion_isValid;

    m_list_select_isValid = ::OpenAPI::fromJsonValue(m_list_select, json[QString("listSelect")]);
    m_list_select_isSet = !json[QString("listSelect")].isNull() && m_list_select_isValid;

    m_media_content_isValid = ::OpenAPI::fromJsonValue(m_media_content, json[QString("mediaContent")]);
    m_media_content_isSet = !json[QString("mediaContent")].isNull() && m_media_content_isValid;

    m_payload_isValid = ::OpenAPI::fromJsonValue(m_payload, json[QString("payload")]);
    m_payload_isSet = !json[QString("payload")].isNull() && m_payload_isValid;

    m_platform_isValid = ::OpenAPI::fromJsonValue(m_platform, json[QString("platform")]);
    m_platform_isSet = !json[QString("platform")].isNull() && m_platform_isValid;

    m_quick_replies_isValid = ::OpenAPI::fromJsonValue(m_quick_replies, json[QString("quickReplies")]);
    m_quick_replies_isSet = !json[QString("quickReplies")].isNull() && m_quick_replies_isValid;

    m_simple_responses_isValid = ::OpenAPI::fromJsonValue(m_simple_responses, json[QString("simpleResponses")]);
    m_simple_responses_isSet = !json[QString("simpleResponses")].isNull() && m_simple_responses_isValid;

    m_suggestions_isValid = ::OpenAPI::fromJsonValue(m_suggestions, json[QString("suggestions")]);
    m_suggestions_isSet = !json[QString("suggestions")].isNull() && m_suggestions_isValid;

    m_table_card_isValid = ::OpenAPI::fromJsonValue(m_table_card, json[QString("tableCard")]);
    m_table_card_isSet = !json[QString("tableCard")].isNull() && m_table_card_isValid;

    m_text_isValid = ::OpenAPI::fromJsonValue(m_text, json[QString("text")]);
    m_text_isSet = !json[QString("text")].isNull() && m_text_isValid;
}

QString OAIGoogleCloudDialogflowV2IntentMessage::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDialogflowV2IntentMessage::asJsonObject() const {
    QJsonObject obj;
    if (m_basic_card.isSet()) {
        obj.insert(QString("basicCard"), ::OpenAPI::toJsonValue(m_basic_card));
    }
    if (m_browse_carousel_card.isSet()) {
        obj.insert(QString("browseCarouselCard"), ::OpenAPI::toJsonValue(m_browse_carousel_card));
    }
    if (m_card.isSet()) {
        obj.insert(QString("card"), ::OpenAPI::toJsonValue(m_card));
    }
    if (m_carousel_select.isSet()) {
        obj.insert(QString("carouselSelect"), ::OpenAPI::toJsonValue(m_carousel_select));
    }
    if (m_image.isSet()) {
        obj.insert(QString("image"), ::OpenAPI::toJsonValue(m_image));
    }
    if (m_link_out_suggestion.isSet()) {
        obj.insert(QString("linkOutSuggestion"), ::OpenAPI::toJsonValue(m_link_out_suggestion));
    }
    if (m_list_select.isSet()) {
        obj.insert(QString("listSelect"), ::OpenAPI::toJsonValue(m_list_select));
    }
    if (m_media_content.isSet()) {
        obj.insert(QString("mediaContent"), ::OpenAPI::toJsonValue(m_media_content));
    }
    if (m_payload.size() > 0) {
        obj.insert(QString("payload"), ::OpenAPI::toJsonValue(m_payload));
    }
    if (m_platform_isSet) {
        obj.insert(QString("platform"), ::OpenAPI::toJsonValue(m_platform));
    }
    if (m_quick_replies.isSet()) {
        obj.insert(QString("quickReplies"), ::OpenAPI::toJsonValue(m_quick_replies));
    }
    if (m_simple_responses.isSet()) {
        obj.insert(QString("simpleResponses"), ::OpenAPI::toJsonValue(m_simple_responses));
    }
    if (m_suggestions.isSet()) {
        obj.insert(QString("suggestions"), ::OpenAPI::toJsonValue(m_suggestions));
    }
    if (m_table_card.isSet()) {
        obj.insert(QString("tableCard"), ::OpenAPI::toJsonValue(m_table_card));
    }
    if (m_text.isSet()) {
        obj.insert(QString("text"), ::OpenAPI::toJsonValue(m_text));
    }
    return obj;
}

OAIGoogleCloudDialogflowV2IntentMessageBasicCard OAIGoogleCloudDialogflowV2IntentMessage::getBasicCard() const {
    return m_basic_card;
}
void OAIGoogleCloudDialogflowV2IntentMessage::setBasicCard(const OAIGoogleCloudDialogflowV2IntentMessageBasicCard &basic_card) {
    m_basic_card = basic_card;
    m_basic_card_isSet = true;
}

bool OAIGoogleCloudDialogflowV2IntentMessage::is_basic_card_Set() const{
    return m_basic_card_isSet;
}

bool OAIGoogleCloudDialogflowV2IntentMessage::is_basic_card_Valid() const{
    return m_basic_card_isValid;
}

OAIGoogleCloudDialogflowV2IntentMessageBrowseCarouselCard OAIGoogleCloudDialogflowV2IntentMessage::getBrowseCarouselCard() const {
    return m_browse_carousel_card;
}
void OAIGoogleCloudDialogflowV2IntentMessage::setBrowseCarouselCard(const OAIGoogleCloudDialogflowV2IntentMessageBrowseCarouselCard &browse_carousel_card) {
    m_browse_carousel_card = browse_carousel_card;
    m_browse_carousel_card_isSet = true;
}

bool OAIGoogleCloudDialogflowV2IntentMessage::is_browse_carousel_card_Set() const{
    return m_browse_carousel_card_isSet;
}

bool OAIGoogleCloudDialogflowV2IntentMessage::is_browse_carousel_card_Valid() const{
    return m_browse_carousel_card_isValid;
}

OAIGoogleCloudDialogflowV2IntentMessageCard OAIGoogleCloudDialogflowV2IntentMessage::getCard() const {
    return m_card;
}
void OAIGoogleCloudDialogflowV2IntentMessage::setCard(const OAIGoogleCloudDialogflowV2IntentMessageCard &card) {
    m_card = card;
    m_card_isSet = true;
}

bool OAIGoogleCloudDialogflowV2IntentMessage::is_card_Set() const{
    return m_card_isSet;
}

bool OAIGoogleCloudDialogflowV2IntentMessage::is_card_Valid() const{
    return m_card_isValid;
}

OAIGoogleCloudDialogflowV2IntentMessageCarouselSelect OAIGoogleCloudDialogflowV2IntentMessage::getCarouselSelect() const {
    return m_carousel_select;
}
void OAIGoogleCloudDialogflowV2IntentMessage::setCarouselSelect(const OAIGoogleCloudDialogflowV2IntentMessageCarouselSelect &carousel_select) {
    m_carousel_select = carousel_select;
    m_carousel_select_isSet = true;
}

bool OAIGoogleCloudDialogflowV2IntentMessage::is_carousel_select_Set() const{
    return m_carousel_select_isSet;
}

bool OAIGoogleCloudDialogflowV2IntentMessage::is_carousel_select_Valid() const{
    return m_carousel_select_isValid;
}

OAIGoogleCloudDialogflowV2IntentMessageImage OAIGoogleCloudDialogflowV2IntentMessage::getImage() const {
    return m_image;
}
void OAIGoogleCloudDialogflowV2IntentMessage::setImage(const OAIGoogleCloudDialogflowV2IntentMessageImage &image) {
    m_image = image;
    m_image_isSet = true;
}

bool OAIGoogleCloudDialogflowV2IntentMessage::is_image_Set() const{
    return m_image_isSet;
}

bool OAIGoogleCloudDialogflowV2IntentMessage::is_image_Valid() const{
    return m_image_isValid;
}

OAIGoogleCloudDialogflowV2IntentMessageLinkOutSuggestion OAIGoogleCloudDialogflowV2IntentMessage::getLinkOutSuggestion() const {
    return m_link_out_suggestion;
}
void OAIGoogleCloudDialogflowV2IntentMessage::setLinkOutSuggestion(const OAIGoogleCloudDialogflowV2IntentMessageLinkOutSuggestion &link_out_suggestion) {
    m_link_out_suggestion = link_out_suggestion;
    m_link_out_suggestion_isSet = true;
}

bool OAIGoogleCloudDialogflowV2IntentMessage::is_link_out_suggestion_Set() const{
    return m_link_out_suggestion_isSet;
}

bool OAIGoogleCloudDialogflowV2IntentMessage::is_link_out_suggestion_Valid() const{
    return m_link_out_suggestion_isValid;
}

OAIGoogleCloudDialogflowV2IntentMessageListSelect OAIGoogleCloudDialogflowV2IntentMessage::getListSelect() const {
    return m_list_select;
}
void OAIGoogleCloudDialogflowV2IntentMessage::setListSelect(const OAIGoogleCloudDialogflowV2IntentMessageListSelect &list_select) {
    m_list_select = list_select;
    m_list_select_isSet = true;
}

bool OAIGoogleCloudDialogflowV2IntentMessage::is_list_select_Set() const{
    return m_list_select_isSet;
}

bool OAIGoogleCloudDialogflowV2IntentMessage::is_list_select_Valid() const{
    return m_list_select_isValid;
}

OAIGoogleCloudDialogflowV2IntentMessageMediaContent OAIGoogleCloudDialogflowV2IntentMessage::getMediaContent() const {
    return m_media_content;
}
void OAIGoogleCloudDialogflowV2IntentMessage::setMediaContent(const OAIGoogleCloudDialogflowV2IntentMessageMediaContent &media_content) {
    m_media_content = media_content;
    m_media_content_isSet = true;
}

bool OAIGoogleCloudDialogflowV2IntentMessage::is_media_content_Set() const{
    return m_media_content_isSet;
}

bool OAIGoogleCloudDialogflowV2IntentMessage::is_media_content_Valid() const{
    return m_media_content_isValid;
}

QMap<QString, QJsonValue> OAIGoogleCloudDialogflowV2IntentMessage::getPayload() const {
    return m_payload;
}
void OAIGoogleCloudDialogflowV2IntentMessage::setPayload(const QMap<QString, QJsonValue> &payload) {
    m_payload = payload;
    m_payload_isSet = true;
}

bool OAIGoogleCloudDialogflowV2IntentMessage::is_payload_Set() const{
    return m_payload_isSet;
}

bool OAIGoogleCloudDialogflowV2IntentMessage::is_payload_Valid() const{
    return m_payload_isValid;
}

QString OAIGoogleCloudDialogflowV2IntentMessage::getPlatform() const {
    return m_platform;
}
void OAIGoogleCloudDialogflowV2IntentMessage::setPlatform(const QString &platform) {
    m_platform = platform;
    m_platform_isSet = true;
}

bool OAIGoogleCloudDialogflowV2IntentMessage::is_platform_Set() const{
    return m_platform_isSet;
}

bool OAIGoogleCloudDialogflowV2IntentMessage::is_platform_Valid() const{
    return m_platform_isValid;
}

OAIGoogleCloudDialogflowV2IntentMessageQuickReplies OAIGoogleCloudDialogflowV2IntentMessage::getQuickReplies() const {
    return m_quick_replies;
}
void OAIGoogleCloudDialogflowV2IntentMessage::setQuickReplies(const OAIGoogleCloudDialogflowV2IntentMessageQuickReplies &quick_replies) {
    m_quick_replies = quick_replies;
    m_quick_replies_isSet = true;
}

bool OAIGoogleCloudDialogflowV2IntentMessage::is_quick_replies_Set() const{
    return m_quick_replies_isSet;
}

bool OAIGoogleCloudDialogflowV2IntentMessage::is_quick_replies_Valid() const{
    return m_quick_replies_isValid;
}

OAIGoogleCloudDialogflowV2IntentMessageSimpleResponses OAIGoogleCloudDialogflowV2IntentMessage::getSimpleResponses() const {
    return m_simple_responses;
}
void OAIGoogleCloudDialogflowV2IntentMessage::setSimpleResponses(const OAIGoogleCloudDialogflowV2IntentMessageSimpleResponses &simple_responses) {
    m_simple_responses = simple_responses;
    m_simple_responses_isSet = true;
}

bool OAIGoogleCloudDialogflowV2IntentMessage::is_simple_responses_Set() const{
    return m_simple_responses_isSet;
}

bool OAIGoogleCloudDialogflowV2IntentMessage::is_simple_responses_Valid() const{
    return m_simple_responses_isValid;
}

OAIGoogleCloudDialogflowV2IntentMessageSuggestions OAIGoogleCloudDialogflowV2IntentMessage::getSuggestions() const {
    return m_suggestions;
}
void OAIGoogleCloudDialogflowV2IntentMessage::setSuggestions(const OAIGoogleCloudDialogflowV2IntentMessageSuggestions &suggestions) {
    m_suggestions = suggestions;
    m_suggestions_isSet = true;
}

bool OAIGoogleCloudDialogflowV2IntentMessage::is_suggestions_Set() const{
    return m_suggestions_isSet;
}

bool OAIGoogleCloudDialogflowV2IntentMessage::is_suggestions_Valid() const{
    return m_suggestions_isValid;
}

OAIGoogleCloudDialogflowV2IntentMessageTableCard OAIGoogleCloudDialogflowV2IntentMessage::getTableCard() const {
    return m_table_card;
}
void OAIGoogleCloudDialogflowV2IntentMessage::setTableCard(const OAIGoogleCloudDialogflowV2IntentMessageTableCard &table_card) {
    m_table_card = table_card;
    m_table_card_isSet = true;
}

bool OAIGoogleCloudDialogflowV2IntentMessage::is_table_card_Set() const{
    return m_table_card_isSet;
}

bool OAIGoogleCloudDialogflowV2IntentMessage::is_table_card_Valid() const{
    return m_table_card_isValid;
}

OAIGoogleCloudDialogflowV2IntentMessageText OAIGoogleCloudDialogflowV2IntentMessage::getText() const {
    return m_text;
}
void OAIGoogleCloudDialogflowV2IntentMessage::setText(const OAIGoogleCloudDialogflowV2IntentMessageText &text) {
    m_text = text;
    m_text_isSet = true;
}

bool OAIGoogleCloudDialogflowV2IntentMessage::is_text_Set() const{
    return m_text_isSet;
}

bool OAIGoogleCloudDialogflowV2IntentMessage::is_text_Valid() const{
    return m_text_isValid;
}

bool OAIGoogleCloudDialogflowV2IntentMessage::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_basic_card.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_browse_carousel_card.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_card.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_carousel_select.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_image.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_link_out_suggestion.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_list_select.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_media_content.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_payload.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_platform_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quick_replies.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_simple_responses.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_suggestions.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_table_card.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_text.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDialogflowV2IntentMessage::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
