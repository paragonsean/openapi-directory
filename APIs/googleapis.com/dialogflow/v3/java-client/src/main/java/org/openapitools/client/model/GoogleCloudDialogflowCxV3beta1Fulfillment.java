/*
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudDialogflowCxV3beta1AdvancedSettings;
import org.openapitools.client.model.GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCases;
import org.openapitools.client.model.GoogleCloudDialogflowCxV3beta1FulfillmentSetParameterAction;
import org.openapitools.client.model.GoogleCloudDialogflowCxV3beta1ResponseMessage;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A fulfillment can do one or more of the following actions at the same time: * Generate rich message responses. * Set parameter values. * Call the webhook. Fulfillments can be called at various stages in the Page or Form lifecycle. For example, when a DetectIntentRequest drives a session to enter a new page, the page&#39;s entry fulfillment can add a static response to the QueryResult in the returning DetectIntentResponse, call the webhook (for example, to load user data from a database), or both.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:47:42.852499-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDialogflowCxV3beta1Fulfillment {
  public static final String SERIALIZED_NAME_ADVANCED_SETTINGS = "advancedSettings";
  @SerializedName(SERIALIZED_NAME_ADVANCED_SETTINGS)
  private GoogleCloudDialogflowCxV3beta1AdvancedSettings advancedSettings;

  public static final String SERIALIZED_NAME_CONDITIONAL_CASES = "conditionalCases";
  @SerializedName(SERIALIZED_NAME_CONDITIONAL_CASES)
  private List<GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCases> conditionalCases = new ArrayList<>();

  public static final String SERIALIZED_NAME_ENABLE_GENERATIVE_FALLBACK = "enableGenerativeFallback";
  @SerializedName(SERIALIZED_NAME_ENABLE_GENERATIVE_FALLBACK)
  private Boolean enableGenerativeFallback;

  public static final String SERIALIZED_NAME_MESSAGES = "messages";
  @SerializedName(SERIALIZED_NAME_MESSAGES)
  private List<GoogleCloudDialogflowCxV3beta1ResponseMessage> messages = new ArrayList<>();

  public static final String SERIALIZED_NAME_RETURN_PARTIAL_RESPONSES = "returnPartialResponses";
  @SerializedName(SERIALIZED_NAME_RETURN_PARTIAL_RESPONSES)
  private Boolean returnPartialResponses;

  public static final String SERIALIZED_NAME_SET_PARAMETER_ACTIONS = "setParameterActions";
  @SerializedName(SERIALIZED_NAME_SET_PARAMETER_ACTIONS)
  private List<GoogleCloudDialogflowCxV3beta1FulfillmentSetParameterAction> setParameterActions = new ArrayList<>();

  public static final String SERIALIZED_NAME_TAG = "tag";
  @SerializedName(SERIALIZED_NAME_TAG)
  private String tag;

  public static final String SERIALIZED_NAME_WEBHOOK = "webhook";
  @SerializedName(SERIALIZED_NAME_WEBHOOK)
  private String webhook;

  public GoogleCloudDialogflowCxV3beta1Fulfillment() {
  }

  public GoogleCloudDialogflowCxV3beta1Fulfillment advancedSettings(GoogleCloudDialogflowCxV3beta1AdvancedSettings advancedSettings) {
    this.advancedSettings = advancedSettings;
    return this;
  }

  /**
   * Get advancedSettings
   * @return advancedSettings
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowCxV3beta1AdvancedSettings getAdvancedSettings() {
    return advancedSettings;
  }

  public void setAdvancedSettings(GoogleCloudDialogflowCxV3beta1AdvancedSettings advancedSettings) {
    this.advancedSettings = advancedSettings;
  }


  public GoogleCloudDialogflowCxV3beta1Fulfillment conditionalCases(List<GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCases> conditionalCases) {
    this.conditionalCases = conditionalCases;
    return this;
  }

  public GoogleCloudDialogflowCxV3beta1Fulfillment addConditionalCasesItem(GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCases conditionalCasesItem) {
    if (this.conditionalCases == null) {
      this.conditionalCases = new ArrayList<>();
    }
    this.conditionalCases.add(conditionalCasesItem);
    return this;
  }

  /**
   * Conditional cases for this fulfillment.
   * @return conditionalCases
   */
  @javax.annotation.Nullable
  public List<GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCases> getConditionalCases() {
    return conditionalCases;
  }

  public void setConditionalCases(List<GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCases> conditionalCases) {
    this.conditionalCases = conditionalCases;
  }


  public GoogleCloudDialogflowCxV3beta1Fulfillment enableGenerativeFallback(Boolean enableGenerativeFallback) {
    this.enableGenerativeFallback = enableGenerativeFallback;
    return this;
  }

  /**
   * If the flag is true, the agent will utilize LLM to generate a text response. If LLM generation fails, the defined responses in the fulfillment will be respected. This flag is only useful for fulfillments associated with no-match event handlers.
   * @return enableGenerativeFallback
   */
  @javax.annotation.Nullable
  public Boolean getEnableGenerativeFallback() {
    return enableGenerativeFallback;
  }

  public void setEnableGenerativeFallback(Boolean enableGenerativeFallback) {
    this.enableGenerativeFallback = enableGenerativeFallback;
  }


  public GoogleCloudDialogflowCxV3beta1Fulfillment messages(List<GoogleCloudDialogflowCxV3beta1ResponseMessage> messages) {
    this.messages = messages;
    return this;
  }

  public GoogleCloudDialogflowCxV3beta1Fulfillment addMessagesItem(GoogleCloudDialogflowCxV3beta1ResponseMessage messagesItem) {
    if (this.messages == null) {
      this.messages = new ArrayList<>();
    }
    this.messages.add(messagesItem);
    return this;
  }

  /**
   * The list of rich message responses to present to the user.
   * @return messages
   */
  @javax.annotation.Nullable
  public List<GoogleCloudDialogflowCxV3beta1ResponseMessage> getMessages() {
    return messages;
  }

  public void setMessages(List<GoogleCloudDialogflowCxV3beta1ResponseMessage> messages) {
    this.messages = messages;
  }


  public GoogleCloudDialogflowCxV3beta1Fulfillment returnPartialResponses(Boolean returnPartialResponses) {
    this.returnPartialResponses = returnPartialResponses;
    return this;
  }

  /**
   * Whether Dialogflow should return currently queued fulfillment response messages in streaming APIs. If a webhook is specified, it happens before Dialogflow invokes webhook. Warning: 1) This flag only affects streaming API. Responses are still queued and returned once in non-streaming API. 2) The flag can be enabled in any fulfillment but only the first 3 partial responses will be returned. You may only want to apply it to fulfillments that have slow webhooks.
   * @return returnPartialResponses
   */
  @javax.annotation.Nullable
  public Boolean getReturnPartialResponses() {
    return returnPartialResponses;
  }

  public void setReturnPartialResponses(Boolean returnPartialResponses) {
    this.returnPartialResponses = returnPartialResponses;
  }


  public GoogleCloudDialogflowCxV3beta1Fulfillment setParameterActions(List<GoogleCloudDialogflowCxV3beta1FulfillmentSetParameterAction> setParameterActions) {
    this.setParameterActions = setParameterActions;
    return this;
  }

  public GoogleCloudDialogflowCxV3beta1Fulfillment addSetParameterActionsItem(GoogleCloudDialogflowCxV3beta1FulfillmentSetParameterAction setParameterActionsItem) {
    if (this.setParameterActions == null) {
      this.setParameterActions = new ArrayList<>();
    }
    this.setParameterActions.add(setParameterActionsItem);
    return this;
  }

  /**
   * Set parameter values before executing the webhook.
   * @return setParameterActions
   */
  @javax.annotation.Nullable
  public List<GoogleCloudDialogflowCxV3beta1FulfillmentSetParameterAction> getSetParameterActions() {
    return setParameterActions;
  }

  public void setSetParameterActions(List<GoogleCloudDialogflowCxV3beta1FulfillmentSetParameterAction> setParameterActions) {
    this.setParameterActions = setParameterActions;
  }


  public GoogleCloudDialogflowCxV3beta1Fulfillment tag(String tag) {
    this.tag = tag;
    return this;
  }

  /**
   * The value of this field will be populated in the WebhookRequest &#x60;fulfillmentInfo.tag&#x60; field by Dialogflow when the associated webhook is called. The tag is typically used by the webhook service to identify which fulfillment is being called, but it could be used for other purposes. This field is required if &#x60;webhook&#x60; is specified.
   * @return tag
   */
  @javax.annotation.Nullable
  public String getTag() {
    return tag;
  }

  public void setTag(String tag) {
    this.tag = tag;
  }


  public GoogleCloudDialogflowCxV3beta1Fulfillment webhook(String webhook) {
    this.webhook = webhook;
    return this;
  }

  /**
   * The webhook to call. Format: &#x60;projects//locations//agents//webhooks/&#x60;.
   * @return webhook
   */
  @javax.annotation.Nullable
  public String getWebhook() {
    return webhook;
  }

  public void setWebhook(String webhook) {
    this.webhook = webhook;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDialogflowCxV3beta1Fulfillment googleCloudDialogflowCxV3beta1Fulfillment = (GoogleCloudDialogflowCxV3beta1Fulfillment) o;
    return Objects.equals(this.advancedSettings, googleCloudDialogflowCxV3beta1Fulfillment.advancedSettings) &&
        Objects.equals(this.conditionalCases, googleCloudDialogflowCxV3beta1Fulfillment.conditionalCases) &&
        Objects.equals(this.enableGenerativeFallback, googleCloudDialogflowCxV3beta1Fulfillment.enableGenerativeFallback) &&
        Objects.equals(this.messages, googleCloudDialogflowCxV3beta1Fulfillment.messages) &&
        Objects.equals(this.returnPartialResponses, googleCloudDialogflowCxV3beta1Fulfillment.returnPartialResponses) &&
        Objects.equals(this.setParameterActions, googleCloudDialogflowCxV3beta1Fulfillment.setParameterActions) &&
        Objects.equals(this.tag, googleCloudDialogflowCxV3beta1Fulfillment.tag) &&
        Objects.equals(this.webhook, googleCloudDialogflowCxV3beta1Fulfillment.webhook);
  }

  @Override
  public int hashCode() {
    return Objects.hash(advancedSettings, conditionalCases, enableGenerativeFallback, messages, returnPartialResponses, setParameterActions, tag, webhook);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDialogflowCxV3beta1Fulfillment {\n");
    sb.append("    advancedSettings: ").append(toIndentedString(advancedSettings)).append("\n");
    sb.append("    conditionalCases: ").append(toIndentedString(conditionalCases)).append("\n");
    sb.append("    enableGenerativeFallback: ").append(toIndentedString(enableGenerativeFallback)).append("\n");
    sb.append("    messages: ").append(toIndentedString(messages)).append("\n");
    sb.append("    returnPartialResponses: ").append(toIndentedString(returnPartialResponses)).append("\n");
    sb.append("    setParameterActions: ").append(toIndentedString(setParameterActions)).append("\n");
    sb.append("    tag: ").append(toIndentedString(tag)).append("\n");
    sb.append("    webhook: ").append(toIndentedString(webhook)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("advancedSettings");
    openapiFields.add("conditionalCases");
    openapiFields.add("enableGenerativeFallback");
    openapiFields.add("messages");
    openapiFields.add("returnPartialResponses");
    openapiFields.add("setParameterActions");
    openapiFields.add("tag");
    openapiFields.add("webhook");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDialogflowCxV3beta1Fulfillment
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDialogflowCxV3beta1Fulfillment.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDialogflowCxV3beta1Fulfillment is not found in the empty JSON string", GoogleCloudDialogflowCxV3beta1Fulfillment.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDialogflowCxV3beta1Fulfillment.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDialogflowCxV3beta1Fulfillment` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `advancedSettings`
      if (jsonObj.get("advancedSettings") != null && !jsonObj.get("advancedSettings").isJsonNull()) {
        GoogleCloudDialogflowCxV3beta1AdvancedSettings.validateJsonElement(jsonObj.get("advancedSettings"));
      }
      if (jsonObj.get("conditionalCases") != null && !jsonObj.get("conditionalCases").isJsonNull()) {
        JsonArray jsonArrayconditionalCases = jsonObj.getAsJsonArray("conditionalCases");
        if (jsonArrayconditionalCases != null) {
          // ensure the json data is an array
          if (!jsonObj.get("conditionalCases").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `conditionalCases` to be an array in the JSON string but got `%s`", jsonObj.get("conditionalCases").toString()));
          }

          // validate the optional field `conditionalCases` (array)
          for (int i = 0; i < jsonArrayconditionalCases.size(); i++) {
            GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCases.validateJsonElement(jsonArrayconditionalCases.get(i));
          };
        }
      }
      if (jsonObj.get("messages") != null && !jsonObj.get("messages").isJsonNull()) {
        JsonArray jsonArraymessages = jsonObj.getAsJsonArray("messages");
        if (jsonArraymessages != null) {
          // ensure the json data is an array
          if (!jsonObj.get("messages").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `messages` to be an array in the JSON string but got `%s`", jsonObj.get("messages").toString()));
          }

          // validate the optional field `messages` (array)
          for (int i = 0; i < jsonArraymessages.size(); i++) {
            GoogleCloudDialogflowCxV3beta1ResponseMessage.validateJsonElement(jsonArraymessages.get(i));
          };
        }
      }
      if (jsonObj.get("setParameterActions") != null && !jsonObj.get("setParameterActions").isJsonNull()) {
        JsonArray jsonArraysetParameterActions = jsonObj.getAsJsonArray("setParameterActions");
        if (jsonArraysetParameterActions != null) {
          // ensure the json data is an array
          if (!jsonObj.get("setParameterActions").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `setParameterActions` to be an array in the JSON string but got `%s`", jsonObj.get("setParameterActions").toString()));
          }

          // validate the optional field `setParameterActions` (array)
          for (int i = 0; i < jsonArraysetParameterActions.size(); i++) {
            GoogleCloudDialogflowCxV3beta1FulfillmentSetParameterAction.validateJsonElement(jsonArraysetParameterActions.get(i));
          };
        }
      }
      if ((jsonObj.get("tag") != null && !jsonObj.get("tag").isJsonNull()) && !jsonObj.get("tag").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tag` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tag").toString()));
      }
      if ((jsonObj.get("webhook") != null && !jsonObj.get("webhook").isJsonNull()) && !jsonObj.get("webhook").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `webhook` to be a primitive type in the JSON string but got `%s`", jsonObj.get("webhook").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDialogflowCxV3beta1Fulfillment.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDialogflowCxV3beta1Fulfillment' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDialogflowCxV3beta1Fulfillment> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDialogflowCxV3beta1Fulfillment.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDialogflowCxV3beta1Fulfillment>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDialogflowCxV3beta1Fulfillment value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDialogflowCxV3beta1Fulfillment read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDialogflowCxV3beta1Fulfillment given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDialogflowCxV3beta1Fulfillment
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDialogflowCxV3beta1Fulfillment
   */
  public static GoogleCloudDialogflowCxV3beta1Fulfillment fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDialogflowCxV3beta1Fulfillment.class);
  }

  /**
   * Convert an instance of GoogleCloudDialogflowCxV3beta1Fulfillment to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

