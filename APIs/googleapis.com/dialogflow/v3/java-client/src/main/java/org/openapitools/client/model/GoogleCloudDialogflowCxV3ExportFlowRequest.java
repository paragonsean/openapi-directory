/*
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The request message for Flows.ExportFlow.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:47:42.852499-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDialogflowCxV3ExportFlowRequest {
  public static final String SERIALIZED_NAME_FLOW_URI = "flowUri";
  @SerializedName(SERIALIZED_NAME_FLOW_URI)
  private String flowUri;

  public static final String SERIALIZED_NAME_INCLUDE_REFERENCED_FLOWS = "includeReferencedFlows";
  @SerializedName(SERIALIZED_NAME_INCLUDE_REFERENCED_FLOWS)
  private Boolean includeReferencedFlows;

  public GoogleCloudDialogflowCxV3ExportFlowRequest() {
  }

  public GoogleCloudDialogflowCxV3ExportFlowRequest flowUri(String flowUri) {
    this.flowUri = flowUri;
    return this;
  }

  /**
   * Optional. The [Google Cloud Storage](https://cloud.google.com/storage/docs/) URI to export the flow to. The format of this URI must be &#x60;gs:///&#x60;. If left unspecified, the serialized flow is returned inline. Dialogflow performs a write operation for the Cloud Storage object on the caller&#39;s behalf, so your request authentication must have write permissions for the object. For more information, see [Dialogflow access control](https://cloud.google.com/dialogflow/cx/docs/concept/access-control#storage).
   * @return flowUri
   */
  @javax.annotation.Nullable
  public String getFlowUri() {
    return flowUri;
  }

  public void setFlowUri(String flowUri) {
    this.flowUri = flowUri;
  }


  public GoogleCloudDialogflowCxV3ExportFlowRequest includeReferencedFlows(Boolean includeReferencedFlows) {
    this.includeReferencedFlows = includeReferencedFlows;
    return this;
  }

  /**
   * Optional. Whether to export flows referenced by the specified flow.
   * @return includeReferencedFlows
   */
  @javax.annotation.Nullable
  public Boolean getIncludeReferencedFlows() {
    return includeReferencedFlows;
  }

  public void setIncludeReferencedFlows(Boolean includeReferencedFlows) {
    this.includeReferencedFlows = includeReferencedFlows;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDialogflowCxV3ExportFlowRequest googleCloudDialogflowCxV3ExportFlowRequest = (GoogleCloudDialogflowCxV3ExportFlowRequest) o;
    return Objects.equals(this.flowUri, googleCloudDialogflowCxV3ExportFlowRequest.flowUri) &&
        Objects.equals(this.includeReferencedFlows, googleCloudDialogflowCxV3ExportFlowRequest.includeReferencedFlows);
  }

  @Override
  public int hashCode() {
    return Objects.hash(flowUri, includeReferencedFlows);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDialogflowCxV3ExportFlowRequest {\n");
    sb.append("    flowUri: ").append(toIndentedString(flowUri)).append("\n");
    sb.append("    includeReferencedFlows: ").append(toIndentedString(includeReferencedFlows)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("flowUri");
    openapiFields.add("includeReferencedFlows");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDialogflowCxV3ExportFlowRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDialogflowCxV3ExportFlowRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDialogflowCxV3ExportFlowRequest is not found in the empty JSON string", GoogleCloudDialogflowCxV3ExportFlowRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDialogflowCxV3ExportFlowRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDialogflowCxV3ExportFlowRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("flowUri") != null && !jsonObj.get("flowUri").isJsonNull()) && !jsonObj.get("flowUri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `flowUri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("flowUri").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDialogflowCxV3ExportFlowRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDialogflowCxV3ExportFlowRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDialogflowCxV3ExportFlowRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDialogflowCxV3ExportFlowRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDialogflowCxV3ExportFlowRequest>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDialogflowCxV3ExportFlowRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDialogflowCxV3ExportFlowRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDialogflowCxV3ExportFlowRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDialogflowCxV3ExportFlowRequest
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDialogflowCxV3ExportFlowRequest
   */
  public static GoogleCloudDialogflowCxV3ExportFlowRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDialogflowCxV3ExportFlowRequest.class);
  }

  /**
   * Convert an instance of GoogleCloudDialogflowCxV3ExportFlowRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

