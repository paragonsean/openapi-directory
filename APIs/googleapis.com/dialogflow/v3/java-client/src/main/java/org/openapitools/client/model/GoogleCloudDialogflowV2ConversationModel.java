/*
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudDialogflowV2ArticleSuggestionModelMetadata;
import org.openapitools.client.model.GoogleCloudDialogflowV2InputDataset;
import org.openapitools.client.model.GoogleCloudDialogflowV2SmartReplyModelMetadata;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents a conversation model.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:47:42.852499-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDialogflowV2ConversationModel {
  public static final String SERIALIZED_NAME_ARTICLE_SUGGESTION_MODEL_METADATA = "articleSuggestionModelMetadata";
  @SerializedName(SERIALIZED_NAME_ARTICLE_SUGGESTION_MODEL_METADATA)
  private GoogleCloudDialogflowV2ArticleSuggestionModelMetadata articleSuggestionModelMetadata;

  public static final String SERIALIZED_NAME_CREATE_TIME = "createTime";
  @SerializedName(SERIALIZED_NAME_CREATE_TIME)
  private String createTime;

  public static final String SERIALIZED_NAME_DATASETS = "datasets";
  @SerializedName(SERIALIZED_NAME_DATASETS)
  private List<GoogleCloudDialogflowV2InputDataset> datasets = new ArrayList<>();

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_LANGUAGE_CODE = "languageCode";
  @SerializedName(SERIALIZED_NAME_LANGUAGE_CODE)
  private String languageCode;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_SMART_REPLY_MODEL_METADATA = "smartReplyModelMetadata";
  @SerializedName(SERIALIZED_NAME_SMART_REPLY_MODEL_METADATA)
  private GoogleCloudDialogflowV2SmartReplyModelMetadata smartReplyModelMetadata;

  /**
   * Output only. State of the model. A model can only serve prediction requests after it gets deployed.
   */
  @JsonAdapter(StateEnum.Adapter.class)
  public enum StateEnum {
    STATE_UNSPECIFIED("STATE_UNSPECIFIED"),
    
    CREATING("CREATING"),
    
    UNDEPLOYED("UNDEPLOYED"),
    
    DEPLOYING("DEPLOYING"),
    
    DEPLOYED("DEPLOYED"),
    
    UNDEPLOYING("UNDEPLOYING"),
    
    DELETING("DELETING"),
    
    FAILED("FAILED"),
    
    PENDING("PENDING");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StateEnum fromValue(String value) {
      for (StateEnum b : StateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StateEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StateEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      StateEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private StateEnum state;

  public GoogleCloudDialogflowV2ConversationModel() {
  }

  public GoogleCloudDialogflowV2ConversationModel(
     String createTime, 
     StateEnum state
  ) {
    this();
    this.createTime = createTime;
    this.state = state;
  }

  public GoogleCloudDialogflowV2ConversationModel articleSuggestionModelMetadata(GoogleCloudDialogflowV2ArticleSuggestionModelMetadata articleSuggestionModelMetadata) {
    this.articleSuggestionModelMetadata = articleSuggestionModelMetadata;
    return this;
  }

  /**
   * Get articleSuggestionModelMetadata
   * @return articleSuggestionModelMetadata
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowV2ArticleSuggestionModelMetadata getArticleSuggestionModelMetadata() {
    return articleSuggestionModelMetadata;
  }

  public void setArticleSuggestionModelMetadata(GoogleCloudDialogflowV2ArticleSuggestionModelMetadata articleSuggestionModelMetadata) {
    this.articleSuggestionModelMetadata = articleSuggestionModelMetadata;
  }


  /**
   * Output only. Creation time of this model.
   * @return createTime
   */
  @javax.annotation.Nullable
  public String getCreateTime() {
    return createTime;
  }



  public GoogleCloudDialogflowV2ConversationModel datasets(List<GoogleCloudDialogflowV2InputDataset> datasets) {
    this.datasets = datasets;
    return this;
  }

  public GoogleCloudDialogflowV2ConversationModel addDatasetsItem(GoogleCloudDialogflowV2InputDataset datasetsItem) {
    if (this.datasets == null) {
      this.datasets = new ArrayList<>();
    }
    this.datasets.add(datasetsItem);
    return this;
  }

  /**
   * Required. Datasets used to create model.
   * @return datasets
   */
  @javax.annotation.Nullable
  public List<GoogleCloudDialogflowV2InputDataset> getDatasets() {
    return datasets;
  }

  public void setDatasets(List<GoogleCloudDialogflowV2InputDataset> datasets) {
    this.datasets = datasets;
  }


  public GoogleCloudDialogflowV2ConversationModel displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Required. The display name of the model. At most 64 bytes long.
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public GoogleCloudDialogflowV2ConversationModel languageCode(String languageCode) {
    this.languageCode = languageCode;
    return this;
  }

  /**
   * Language code for the conversation model. If not specified, the language is en-US. Language at ConversationModel should be set for all non en-us languages. This should be a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: \&quot;en-US\&quot;.
   * @return languageCode
   */
  @javax.annotation.Nullable
  public String getLanguageCode() {
    return languageCode;
  }

  public void setLanguageCode(String languageCode) {
    this.languageCode = languageCode;
  }


  public GoogleCloudDialogflowV2ConversationModel name(String name) {
    this.name = name;
    return this;
  }

  /**
   * ConversationModel resource name. Format: &#x60;projects//conversationModels/&#x60;
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public GoogleCloudDialogflowV2ConversationModel smartReplyModelMetadata(GoogleCloudDialogflowV2SmartReplyModelMetadata smartReplyModelMetadata) {
    this.smartReplyModelMetadata = smartReplyModelMetadata;
    return this;
  }

  /**
   * Get smartReplyModelMetadata
   * @return smartReplyModelMetadata
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowV2SmartReplyModelMetadata getSmartReplyModelMetadata() {
    return smartReplyModelMetadata;
  }

  public void setSmartReplyModelMetadata(GoogleCloudDialogflowV2SmartReplyModelMetadata smartReplyModelMetadata) {
    this.smartReplyModelMetadata = smartReplyModelMetadata;
  }


  /**
   * Output only. State of the model. A model can only serve prediction requests after it gets deployed.
   * @return state
   */
  @javax.annotation.Nullable
  public StateEnum getState() {
    return state;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDialogflowV2ConversationModel googleCloudDialogflowV2ConversationModel = (GoogleCloudDialogflowV2ConversationModel) o;
    return Objects.equals(this.articleSuggestionModelMetadata, googleCloudDialogflowV2ConversationModel.articleSuggestionModelMetadata) &&
        Objects.equals(this.createTime, googleCloudDialogflowV2ConversationModel.createTime) &&
        Objects.equals(this.datasets, googleCloudDialogflowV2ConversationModel.datasets) &&
        Objects.equals(this.displayName, googleCloudDialogflowV2ConversationModel.displayName) &&
        Objects.equals(this.languageCode, googleCloudDialogflowV2ConversationModel.languageCode) &&
        Objects.equals(this.name, googleCloudDialogflowV2ConversationModel.name) &&
        Objects.equals(this.smartReplyModelMetadata, googleCloudDialogflowV2ConversationModel.smartReplyModelMetadata) &&
        Objects.equals(this.state, googleCloudDialogflowV2ConversationModel.state);
  }

  @Override
  public int hashCode() {
    return Objects.hash(articleSuggestionModelMetadata, createTime, datasets, displayName, languageCode, name, smartReplyModelMetadata, state);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDialogflowV2ConversationModel {\n");
    sb.append("    articleSuggestionModelMetadata: ").append(toIndentedString(articleSuggestionModelMetadata)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    datasets: ").append(toIndentedString(datasets)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    languageCode: ").append(toIndentedString(languageCode)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    smartReplyModelMetadata: ").append(toIndentedString(smartReplyModelMetadata)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("articleSuggestionModelMetadata");
    openapiFields.add("createTime");
    openapiFields.add("datasets");
    openapiFields.add("displayName");
    openapiFields.add("languageCode");
    openapiFields.add("name");
    openapiFields.add("smartReplyModelMetadata");
    openapiFields.add("state");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDialogflowV2ConversationModel
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDialogflowV2ConversationModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDialogflowV2ConversationModel is not found in the empty JSON string", GoogleCloudDialogflowV2ConversationModel.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDialogflowV2ConversationModel.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDialogflowV2ConversationModel` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `articleSuggestionModelMetadata`
      if (jsonObj.get("articleSuggestionModelMetadata") != null && !jsonObj.get("articleSuggestionModelMetadata").isJsonNull()) {
        GoogleCloudDialogflowV2ArticleSuggestionModelMetadata.validateJsonElement(jsonObj.get("articleSuggestionModelMetadata"));
      }
      if ((jsonObj.get("createTime") != null && !jsonObj.get("createTime").isJsonNull()) && !jsonObj.get("createTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createTime").toString()));
      }
      if (jsonObj.get("datasets") != null && !jsonObj.get("datasets").isJsonNull()) {
        JsonArray jsonArraydatasets = jsonObj.getAsJsonArray("datasets");
        if (jsonArraydatasets != null) {
          // ensure the json data is an array
          if (!jsonObj.get("datasets").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `datasets` to be an array in the JSON string but got `%s`", jsonObj.get("datasets").toString()));
          }

          // validate the optional field `datasets` (array)
          for (int i = 0; i < jsonArraydatasets.size(); i++) {
            GoogleCloudDialogflowV2InputDataset.validateJsonElement(jsonArraydatasets.get(i));
          };
        }
      }
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      if ((jsonObj.get("languageCode") != null && !jsonObj.get("languageCode").isJsonNull()) && !jsonObj.get("languageCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `languageCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("languageCode").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // validate the optional field `smartReplyModelMetadata`
      if (jsonObj.get("smartReplyModelMetadata") != null && !jsonObj.get("smartReplyModelMetadata").isJsonNull()) {
        GoogleCloudDialogflowV2SmartReplyModelMetadata.validateJsonElement(jsonObj.get("smartReplyModelMetadata"));
      }
      if ((jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) && !jsonObj.get("state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state").toString()));
      }
      // validate the optional field `state`
      if (jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) {
        StateEnum.validateJsonElement(jsonObj.get("state"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDialogflowV2ConversationModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDialogflowV2ConversationModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDialogflowV2ConversationModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDialogflowV2ConversationModel.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDialogflowV2ConversationModel>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDialogflowV2ConversationModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDialogflowV2ConversationModel read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDialogflowV2ConversationModel given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDialogflowV2ConversationModel
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDialogflowV2ConversationModel
   */
  public static GoogleCloudDialogflowV2ConversationModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDialogflowV2ConversationModel.class);
  }

  /**
   * Convert an instance of GoogleCloudDialogflowV2ConversationModel to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

