/*
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents an intent parameter.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:47:42.852499-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDialogflowCxV3beta1IntentParameter {
  public static final String SERIALIZED_NAME_ENTITY_TYPE = "entityType";
  @SerializedName(SERIALIZED_NAME_ENTITY_TYPE)
  private String entityType;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_IS_LIST = "isList";
  @SerializedName(SERIALIZED_NAME_IS_LIST)
  private Boolean isList;

  public static final String SERIALIZED_NAME_REDACT = "redact";
  @SerializedName(SERIALIZED_NAME_REDACT)
  private Boolean redact;

  public GoogleCloudDialogflowCxV3beta1IntentParameter() {
  }

  public GoogleCloudDialogflowCxV3beta1IntentParameter entityType(String entityType) {
    this.entityType = entityType;
    return this;
  }

  /**
   * Required. The entity type of the parameter. Format: &#x60;projects/-/locations/-/agents/-/entityTypes/&#x60; for system entity types (for example, &#x60;projects/-/locations/-/agents/-/entityTypes/sys.date&#x60;), or &#x60;projects//locations//agents//entityTypes/&#x60; for developer entity types.
   * @return entityType
   */
  @javax.annotation.Nullable
  public String getEntityType() {
    return entityType;
  }

  public void setEntityType(String entityType) {
    this.entityType = entityType;
  }


  public GoogleCloudDialogflowCxV3beta1IntentParameter id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Required. The unique identifier of the parameter. This field is used by training phrases to annotate their parts.
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public GoogleCloudDialogflowCxV3beta1IntentParameter isList(Boolean isList) {
    this.isList = isList;
    return this;
  }

  /**
   * Indicates whether the parameter represents a list of values.
   * @return isList
   */
  @javax.annotation.Nullable
  public Boolean getIsList() {
    return isList;
  }

  public void setIsList(Boolean isList) {
    this.isList = isList;
  }


  public GoogleCloudDialogflowCxV3beta1IntentParameter redact(Boolean redact) {
    this.redact = redact;
    return this;
  }

  /**
   * Indicates whether the parameter content should be redacted in log. If redaction is enabled, the parameter content will be replaced by parameter name during logging. Note: the parameter content is subject to redaction if either parameter level redaction or entity type level redaction is enabled.
   * @return redact
   */
  @javax.annotation.Nullable
  public Boolean getRedact() {
    return redact;
  }

  public void setRedact(Boolean redact) {
    this.redact = redact;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDialogflowCxV3beta1IntentParameter googleCloudDialogflowCxV3beta1IntentParameter = (GoogleCloudDialogflowCxV3beta1IntentParameter) o;
    return Objects.equals(this.entityType, googleCloudDialogflowCxV3beta1IntentParameter.entityType) &&
        Objects.equals(this.id, googleCloudDialogflowCxV3beta1IntentParameter.id) &&
        Objects.equals(this.isList, googleCloudDialogflowCxV3beta1IntentParameter.isList) &&
        Objects.equals(this.redact, googleCloudDialogflowCxV3beta1IntentParameter.redact);
  }

  @Override
  public int hashCode() {
    return Objects.hash(entityType, id, isList, redact);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDialogflowCxV3beta1IntentParameter {\n");
    sb.append("    entityType: ").append(toIndentedString(entityType)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    isList: ").append(toIndentedString(isList)).append("\n");
    sb.append("    redact: ").append(toIndentedString(redact)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("entityType");
    openapiFields.add("id");
    openapiFields.add("isList");
    openapiFields.add("redact");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDialogflowCxV3beta1IntentParameter
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDialogflowCxV3beta1IntentParameter.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDialogflowCxV3beta1IntentParameter is not found in the empty JSON string", GoogleCloudDialogflowCxV3beta1IntentParameter.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDialogflowCxV3beta1IntentParameter.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDialogflowCxV3beta1IntentParameter` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("entityType") != null && !jsonObj.get("entityType").isJsonNull()) && !jsonObj.get("entityType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `entityType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("entityType").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDialogflowCxV3beta1IntentParameter.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDialogflowCxV3beta1IntentParameter' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDialogflowCxV3beta1IntentParameter> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDialogflowCxV3beta1IntentParameter.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDialogflowCxV3beta1IntentParameter>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDialogflowCxV3beta1IntentParameter value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDialogflowCxV3beta1IntentParameter read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDialogflowCxV3beta1IntentParameter given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDialogflowCxV3beta1IntentParameter
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDialogflowCxV3beta1IntentParameter
   */
  public static GoogleCloudDialogflowCxV3beta1IntentParameter fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDialogflowCxV3beta1IntentParameter.class);
  }

  /**
   * Convert an instance of GoogleCloudDialogflowCxV3beta1IntentParameter to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

