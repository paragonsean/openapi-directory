/*
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.GoogleCloudDialogflowCxV3AdvancedSettings;
import org.openapitools.client.model.GoogleCloudDialogflowCxV3DtmfInput;
import org.openapitools.client.model.GoogleCloudDialogflowCxV3Intent;
import org.openapitools.client.model.GoogleCloudDialogflowCxV3Match;
import org.openapitools.client.model.GoogleCloudDialogflowCxV3Page;
import org.openapitools.client.model.GoogleCloudDialogflowCxV3ResponseMessage;
import org.openapitools.client.model.GoogleCloudDialogflowCxV3SentimentAnalysisResult;
import org.openapitools.client.model.GoogleRpcStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents the result of a conversational query.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:47:42.852499-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDialogflowCxV3QueryResult {
  public static final String SERIALIZED_NAME_ADVANCED_SETTINGS = "advancedSettings";
  @SerializedName(SERIALIZED_NAME_ADVANCED_SETTINGS)
  private GoogleCloudDialogflowCxV3AdvancedSettings advancedSettings;

  public static final String SERIALIZED_NAME_ALLOW_ANSWER_FEEDBACK = "allowAnswerFeedback";
  @SerializedName(SERIALIZED_NAME_ALLOW_ANSWER_FEEDBACK)
  private Boolean allowAnswerFeedback;

  public static final String SERIALIZED_NAME_CURRENT_PAGE = "currentPage";
  @SerializedName(SERIALIZED_NAME_CURRENT_PAGE)
  private GoogleCloudDialogflowCxV3Page currentPage;

  public static final String SERIALIZED_NAME_DIAGNOSTIC_INFO = "diagnosticInfo";
  @SerializedName(SERIALIZED_NAME_DIAGNOSTIC_INFO)
  private Map<String, Object> diagnosticInfo = new HashMap<>();

  public static final String SERIALIZED_NAME_DTMF = "dtmf";
  @SerializedName(SERIALIZED_NAME_DTMF)
  private GoogleCloudDialogflowCxV3DtmfInput dtmf;

  public static final String SERIALIZED_NAME_INTENT = "intent";
  @SerializedName(SERIALIZED_NAME_INTENT)
  private GoogleCloudDialogflowCxV3Intent intent;

  public static final String SERIALIZED_NAME_INTENT_DETECTION_CONFIDENCE = "intentDetectionConfidence";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_INTENT_DETECTION_CONFIDENCE)
  private Float intentDetectionConfidence;

  public static final String SERIALIZED_NAME_LANGUAGE_CODE = "languageCode";
  @SerializedName(SERIALIZED_NAME_LANGUAGE_CODE)
  private String languageCode;

  public static final String SERIALIZED_NAME_MATCH = "match";
  @SerializedName(SERIALIZED_NAME_MATCH)
  private GoogleCloudDialogflowCxV3Match match;

  public static final String SERIALIZED_NAME_PARAMETERS = "parameters";
  @SerializedName(SERIALIZED_NAME_PARAMETERS)
  private Map<String, Object> parameters = new HashMap<>();

  public static final String SERIALIZED_NAME_RESPONSE_MESSAGES = "responseMessages";
  @SerializedName(SERIALIZED_NAME_RESPONSE_MESSAGES)
  private List<GoogleCloudDialogflowCxV3ResponseMessage> responseMessages = new ArrayList<>();

  public static final String SERIALIZED_NAME_SENTIMENT_ANALYSIS_RESULT = "sentimentAnalysisResult";
  @SerializedName(SERIALIZED_NAME_SENTIMENT_ANALYSIS_RESULT)
  private GoogleCloudDialogflowCxV3SentimentAnalysisResult sentimentAnalysisResult;

  public static final String SERIALIZED_NAME_TEXT = "text";
  @SerializedName(SERIALIZED_NAME_TEXT)
  private String text;

  public static final String SERIALIZED_NAME_TRANSCRIPT = "transcript";
  @SerializedName(SERIALIZED_NAME_TRANSCRIPT)
  private String transcript;

  public static final String SERIALIZED_NAME_TRIGGER_EVENT = "triggerEvent";
  @SerializedName(SERIALIZED_NAME_TRIGGER_EVENT)
  private String triggerEvent;

  public static final String SERIALIZED_NAME_TRIGGER_INTENT = "triggerIntent";
  @SerializedName(SERIALIZED_NAME_TRIGGER_INTENT)
  private String triggerIntent;

  public static final String SERIALIZED_NAME_WEBHOOK_PAYLOADS = "webhookPayloads";
  @SerializedName(SERIALIZED_NAME_WEBHOOK_PAYLOADS)
  private List<Map<String, Object>> webhookPayloads = new ArrayList<>();

  public static final String SERIALIZED_NAME_WEBHOOK_STATUSES = "webhookStatuses";
  @SerializedName(SERIALIZED_NAME_WEBHOOK_STATUSES)
  private List<GoogleRpcStatus> webhookStatuses = new ArrayList<>();

  public GoogleCloudDialogflowCxV3QueryResult() {
  }

  public GoogleCloudDialogflowCxV3QueryResult advancedSettings(GoogleCloudDialogflowCxV3AdvancedSettings advancedSettings) {
    this.advancedSettings = advancedSettings;
    return this;
  }

  /**
   * Get advancedSettings
   * @return advancedSettings
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowCxV3AdvancedSettings getAdvancedSettings() {
    return advancedSettings;
  }

  public void setAdvancedSettings(GoogleCloudDialogflowCxV3AdvancedSettings advancedSettings) {
    this.advancedSettings = advancedSettings;
  }


  public GoogleCloudDialogflowCxV3QueryResult allowAnswerFeedback(Boolean allowAnswerFeedback) {
    this.allowAnswerFeedback = allowAnswerFeedback;
    return this;
  }

  /**
   * Indicates whether the Thumbs up/Thumbs down rating controls are need to be shown for the response in the Dialogflow Messenger widget.
   * @return allowAnswerFeedback
   */
  @javax.annotation.Nullable
  public Boolean getAllowAnswerFeedback() {
    return allowAnswerFeedback;
  }

  public void setAllowAnswerFeedback(Boolean allowAnswerFeedback) {
    this.allowAnswerFeedback = allowAnswerFeedback;
  }


  public GoogleCloudDialogflowCxV3QueryResult currentPage(GoogleCloudDialogflowCxV3Page currentPage) {
    this.currentPage = currentPage;
    return this;
  }

  /**
   * Get currentPage
   * @return currentPage
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowCxV3Page getCurrentPage() {
    return currentPage;
  }

  public void setCurrentPage(GoogleCloudDialogflowCxV3Page currentPage) {
    this.currentPage = currentPage;
  }


  public GoogleCloudDialogflowCxV3QueryResult diagnosticInfo(Map<String, Object> diagnosticInfo) {
    this.diagnosticInfo = diagnosticInfo;
    return this;
  }

  public GoogleCloudDialogflowCxV3QueryResult putDiagnosticInfoItem(String key, Object diagnosticInfoItem) {
    if (this.diagnosticInfo == null) {
      this.diagnosticInfo = new HashMap<>();
    }
    this.diagnosticInfo.put(key, diagnosticInfoItem);
    return this;
  }

  /**
   * The free-form diagnostic info. For example, this field could contain webhook call latency. The fields of this data can change without notice, so you should not write code that depends on its structure. One of the fields is called \&quot;Alternative Matched Intents\&quot;, which may aid with debugging. The following describes these intent results: - The list is empty if no intent was matched to end-user input. - Only intents that are referenced in the currently active flow are included. - The matched intent is included. - Other intents that could have matched end-user input, but did not match because they are referenced by intent routes that are out of [scope](https://cloud.google.com/dialogflow/cx/docs/concept/handler#scope), are included. - Other intents referenced by intent routes in scope that matched end-user input, but had a lower confidence score.
   * @return diagnosticInfo
   */
  @javax.annotation.Nullable
  public Map<String, Object> getDiagnosticInfo() {
    return diagnosticInfo;
  }

  public void setDiagnosticInfo(Map<String, Object> diagnosticInfo) {
    this.diagnosticInfo = diagnosticInfo;
  }


  public GoogleCloudDialogflowCxV3QueryResult dtmf(GoogleCloudDialogflowCxV3DtmfInput dtmf) {
    this.dtmf = dtmf;
    return this;
  }

  /**
   * Get dtmf
   * @return dtmf
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowCxV3DtmfInput getDtmf() {
    return dtmf;
  }

  public void setDtmf(GoogleCloudDialogflowCxV3DtmfInput dtmf) {
    this.dtmf = dtmf;
  }


  public GoogleCloudDialogflowCxV3QueryResult intent(GoogleCloudDialogflowCxV3Intent intent) {
    this.intent = intent;
    return this;
  }

  /**
   * Get intent
   * @return intent
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowCxV3Intent getIntent() {
    return intent;
  }

  public void setIntent(GoogleCloudDialogflowCxV3Intent intent) {
    this.intent = intent;
  }


  @Deprecated
  public GoogleCloudDialogflowCxV3QueryResult intentDetectionConfidence(Float intentDetectionConfidence) {
    this.intentDetectionConfidence = intentDetectionConfidence;
    return this;
  }

  /**
   * The intent detection confidence. Values range from 0.0 (completely uncertain) to 1.0 (completely certain). This value is for informational purpose only and is only used to help match the best intent within the classification threshold. This value may change for the same end-user expression at any time due to a model retraining or change in implementation. This field is deprecated, please use QueryResult.match instead.
   * @return intentDetectionConfidence
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public Float getIntentDetectionConfidence() {
    return intentDetectionConfidence;
  }

  @Deprecated
  public void setIntentDetectionConfidence(Float intentDetectionConfidence) {
    this.intentDetectionConfidence = intentDetectionConfidence;
  }


  public GoogleCloudDialogflowCxV3QueryResult languageCode(String languageCode) {
    this.languageCode = languageCode;
    return this;
  }

  /**
   * The language that was triggered during intent detection. See [Language Support](https://cloud.google.com/dialogflow/cx/docs/reference/language) for a list of the currently supported language codes.
   * @return languageCode
   */
  @javax.annotation.Nullable
  public String getLanguageCode() {
    return languageCode;
  }

  public void setLanguageCode(String languageCode) {
    this.languageCode = languageCode;
  }


  public GoogleCloudDialogflowCxV3QueryResult match(GoogleCloudDialogflowCxV3Match match) {
    this.match = match;
    return this;
  }

  /**
   * Get match
   * @return match
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowCxV3Match getMatch() {
    return match;
  }

  public void setMatch(GoogleCloudDialogflowCxV3Match match) {
    this.match = match;
  }


  public GoogleCloudDialogflowCxV3QueryResult parameters(Map<String, Object> parameters) {
    this.parameters = parameters;
    return this;
  }

  public GoogleCloudDialogflowCxV3QueryResult putParametersItem(String key, Object parametersItem) {
    if (this.parameters == null) {
      this.parameters = new HashMap<>();
    }
    this.parameters.put(key, parametersItem);
    return this;
  }

  /**
   * The collected session parameters. Depending on your protocol or client library language, this is a map, associative array, symbol table, dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs: * MapKey type: string * MapKey value: parameter name * MapValue type: If parameter&#39;s entity type is a composite entity then use map, otherwise, depending on the parameter value type, it could be one of string, number, boolean, null, list or map. * MapValue value: If parameter&#39;s entity type is a composite entity then use map from composite entity property names to property values, otherwise, use parameter value.
   * @return parameters
   */
  @javax.annotation.Nullable
  public Map<String, Object> getParameters() {
    return parameters;
  }

  public void setParameters(Map<String, Object> parameters) {
    this.parameters = parameters;
  }


  public GoogleCloudDialogflowCxV3QueryResult responseMessages(List<GoogleCloudDialogflowCxV3ResponseMessage> responseMessages) {
    this.responseMessages = responseMessages;
    return this;
  }

  public GoogleCloudDialogflowCxV3QueryResult addResponseMessagesItem(GoogleCloudDialogflowCxV3ResponseMessage responseMessagesItem) {
    if (this.responseMessages == null) {
      this.responseMessages = new ArrayList<>();
    }
    this.responseMessages.add(responseMessagesItem);
    return this;
  }

  /**
   * The list of rich messages returned to the client. Responses vary from simple text messages to more sophisticated, structured payloads used to drive complex logic.
   * @return responseMessages
   */
  @javax.annotation.Nullable
  public List<GoogleCloudDialogflowCxV3ResponseMessage> getResponseMessages() {
    return responseMessages;
  }

  public void setResponseMessages(List<GoogleCloudDialogflowCxV3ResponseMessage> responseMessages) {
    this.responseMessages = responseMessages;
  }


  public GoogleCloudDialogflowCxV3QueryResult sentimentAnalysisResult(GoogleCloudDialogflowCxV3SentimentAnalysisResult sentimentAnalysisResult) {
    this.sentimentAnalysisResult = sentimentAnalysisResult;
    return this;
  }

  /**
   * Get sentimentAnalysisResult
   * @return sentimentAnalysisResult
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowCxV3SentimentAnalysisResult getSentimentAnalysisResult() {
    return sentimentAnalysisResult;
  }

  public void setSentimentAnalysisResult(GoogleCloudDialogflowCxV3SentimentAnalysisResult sentimentAnalysisResult) {
    this.sentimentAnalysisResult = sentimentAnalysisResult;
  }


  public GoogleCloudDialogflowCxV3QueryResult text(String text) {
    this.text = text;
    return this;
  }

  /**
   * If natural language text was provided as input, this field will contain a copy of the text.
   * @return text
   */
  @javax.annotation.Nullable
  public String getText() {
    return text;
  }

  public void setText(String text) {
    this.text = text;
  }


  public GoogleCloudDialogflowCxV3QueryResult transcript(String transcript) {
    this.transcript = transcript;
    return this;
  }

  /**
   * If natural language speech audio was provided as input, this field will contain the transcript for the audio.
   * @return transcript
   */
  @javax.annotation.Nullable
  public String getTranscript() {
    return transcript;
  }

  public void setTranscript(String transcript) {
    this.transcript = transcript;
  }


  public GoogleCloudDialogflowCxV3QueryResult triggerEvent(String triggerEvent) {
    this.triggerEvent = triggerEvent;
    return this;
  }

  /**
   * If an event was provided as input, this field will contain the name of the event.
   * @return triggerEvent
   */
  @javax.annotation.Nullable
  public String getTriggerEvent() {
    return triggerEvent;
  }

  public void setTriggerEvent(String triggerEvent) {
    this.triggerEvent = triggerEvent;
  }


  public GoogleCloudDialogflowCxV3QueryResult triggerIntent(String triggerIntent) {
    this.triggerIntent = triggerIntent;
    return this;
  }

  /**
   * If an intent was provided as input, this field will contain a copy of the intent identifier. Format: &#x60;projects//locations//agents//intents/&#x60;.
   * @return triggerIntent
   */
  @javax.annotation.Nullable
  public String getTriggerIntent() {
    return triggerIntent;
  }

  public void setTriggerIntent(String triggerIntent) {
    this.triggerIntent = triggerIntent;
  }


  public GoogleCloudDialogflowCxV3QueryResult webhookPayloads(List<Map<String, Object>> webhookPayloads) {
    this.webhookPayloads = webhookPayloads;
    return this;
  }

  public GoogleCloudDialogflowCxV3QueryResult addWebhookPayloadsItem(Map<String, Object> webhookPayloadsItem) {
    if (this.webhookPayloads == null) {
      this.webhookPayloads = new ArrayList<>();
    }
    this.webhookPayloads.add(webhookPayloadsItem);
    return this;
  }

  /**
   * The list of webhook payload in WebhookResponse.payload, in the order of call sequence. If some webhook call fails or doesn&#39;t return any payload, an empty &#x60;Struct&#x60; would be used instead.
   * @return webhookPayloads
   */
  @javax.annotation.Nullable
  public List<Map<String, Object>> getWebhookPayloads() {
    return webhookPayloads;
  }

  public void setWebhookPayloads(List<Map<String, Object>> webhookPayloads) {
    this.webhookPayloads = webhookPayloads;
  }


  public GoogleCloudDialogflowCxV3QueryResult webhookStatuses(List<GoogleRpcStatus> webhookStatuses) {
    this.webhookStatuses = webhookStatuses;
    return this;
  }

  public GoogleCloudDialogflowCxV3QueryResult addWebhookStatusesItem(GoogleRpcStatus webhookStatusesItem) {
    if (this.webhookStatuses == null) {
      this.webhookStatuses = new ArrayList<>();
    }
    this.webhookStatuses.add(webhookStatusesItem);
    return this;
  }

  /**
   * The list of webhook call status in the order of call sequence.
   * @return webhookStatuses
   */
  @javax.annotation.Nullable
  public List<GoogleRpcStatus> getWebhookStatuses() {
    return webhookStatuses;
  }

  public void setWebhookStatuses(List<GoogleRpcStatus> webhookStatuses) {
    this.webhookStatuses = webhookStatuses;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDialogflowCxV3QueryResult googleCloudDialogflowCxV3QueryResult = (GoogleCloudDialogflowCxV3QueryResult) o;
    return Objects.equals(this.advancedSettings, googleCloudDialogflowCxV3QueryResult.advancedSettings) &&
        Objects.equals(this.allowAnswerFeedback, googleCloudDialogflowCxV3QueryResult.allowAnswerFeedback) &&
        Objects.equals(this.currentPage, googleCloudDialogflowCxV3QueryResult.currentPage) &&
        Objects.equals(this.diagnosticInfo, googleCloudDialogflowCxV3QueryResult.diagnosticInfo) &&
        Objects.equals(this.dtmf, googleCloudDialogflowCxV3QueryResult.dtmf) &&
        Objects.equals(this.intent, googleCloudDialogflowCxV3QueryResult.intent) &&
        Objects.equals(this.intentDetectionConfidence, googleCloudDialogflowCxV3QueryResult.intentDetectionConfidence) &&
        Objects.equals(this.languageCode, googleCloudDialogflowCxV3QueryResult.languageCode) &&
        Objects.equals(this.match, googleCloudDialogflowCxV3QueryResult.match) &&
        Objects.equals(this.parameters, googleCloudDialogflowCxV3QueryResult.parameters) &&
        Objects.equals(this.responseMessages, googleCloudDialogflowCxV3QueryResult.responseMessages) &&
        Objects.equals(this.sentimentAnalysisResult, googleCloudDialogflowCxV3QueryResult.sentimentAnalysisResult) &&
        Objects.equals(this.text, googleCloudDialogflowCxV3QueryResult.text) &&
        Objects.equals(this.transcript, googleCloudDialogflowCxV3QueryResult.transcript) &&
        Objects.equals(this.triggerEvent, googleCloudDialogflowCxV3QueryResult.triggerEvent) &&
        Objects.equals(this.triggerIntent, googleCloudDialogflowCxV3QueryResult.triggerIntent) &&
        Objects.equals(this.webhookPayloads, googleCloudDialogflowCxV3QueryResult.webhookPayloads) &&
        Objects.equals(this.webhookStatuses, googleCloudDialogflowCxV3QueryResult.webhookStatuses);
  }

  @Override
  public int hashCode() {
    return Objects.hash(advancedSettings, allowAnswerFeedback, currentPage, diagnosticInfo, dtmf, intent, intentDetectionConfidence, languageCode, match, parameters, responseMessages, sentimentAnalysisResult, text, transcript, triggerEvent, triggerIntent, webhookPayloads, webhookStatuses);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDialogflowCxV3QueryResult {\n");
    sb.append("    advancedSettings: ").append(toIndentedString(advancedSettings)).append("\n");
    sb.append("    allowAnswerFeedback: ").append(toIndentedString(allowAnswerFeedback)).append("\n");
    sb.append("    currentPage: ").append(toIndentedString(currentPage)).append("\n");
    sb.append("    diagnosticInfo: ").append(toIndentedString(diagnosticInfo)).append("\n");
    sb.append("    dtmf: ").append(toIndentedString(dtmf)).append("\n");
    sb.append("    intent: ").append(toIndentedString(intent)).append("\n");
    sb.append("    intentDetectionConfidence: ").append(toIndentedString(intentDetectionConfidence)).append("\n");
    sb.append("    languageCode: ").append(toIndentedString(languageCode)).append("\n");
    sb.append("    match: ").append(toIndentedString(match)).append("\n");
    sb.append("    parameters: ").append(toIndentedString(parameters)).append("\n");
    sb.append("    responseMessages: ").append(toIndentedString(responseMessages)).append("\n");
    sb.append("    sentimentAnalysisResult: ").append(toIndentedString(sentimentAnalysisResult)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    transcript: ").append(toIndentedString(transcript)).append("\n");
    sb.append("    triggerEvent: ").append(toIndentedString(triggerEvent)).append("\n");
    sb.append("    triggerIntent: ").append(toIndentedString(triggerIntent)).append("\n");
    sb.append("    webhookPayloads: ").append(toIndentedString(webhookPayloads)).append("\n");
    sb.append("    webhookStatuses: ").append(toIndentedString(webhookStatuses)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("advancedSettings");
    openapiFields.add("allowAnswerFeedback");
    openapiFields.add("currentPage");
    openapiFields.add("diagnosticInfo");
    openapiFields.add("dtmf");
    openapiFields.add("intent");
    openapiFields.add("intentDetectionConfidence");
    openapiFields.add("languageCode");
    openapiFields.add("match");
    openapiFields.add("parameters");
    openapiFields.add("responseMessages");
    openapiFields.add("sentimentAnalysisResult");
    openapiFields.add("text");
    openapiFields.add("transcript");
    openapiFields.add("triggerEvent");
    openapiFields.add("triggerIntent");
    openapiFields.add("webhookPayloads");
    openapiFields.add("webhookStatuses");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDialogflowCxV3QueryResult
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDialogflowCxV3QueryResult.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDialogflowCxV3QueryResult is not found in the empty JSON string", GoogleCloudDialogflowCxV3QueryResult.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDialogflowCxV3QueryResult.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDialogflowCxV3QueryResult` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `advancedSettings`
      if (jsonObj.get("advancedSettings") != null && !jsonObj.get("advancedSettings").isJsonNull()) {
        GoogleCloudDialogflowCxV3AdvancedSettings.validateJsonElement(jsonObj.get("advancedSettings"));
      }
      // validate the optional field `currentPage`
      if (jsonObj.get("currentPage") != null && !jsonObj.get("currentPage").isJsonNull()) {
        GoogleCloudDialogflowCxV3Page.validateJsonElement(jsonObj.get("currentPage"));
      }
      // validate the optional field `dtmf`
      if (jsonObj.get("dtmf") != null && !jsonObj.get("dtmf").isJsonNull()) {
        GoogleCloudDialogflowCxV3DtmfInput.validateJsonElement(jsonObj.get("dtmf"));
      }
      // validate the optional field `intent`
      if (jsonObj.get("intent") != null && !jsonObj.get("intent").isJsonNull()) {
        GoogleCloudDialogflowCxV3Intent.validateJsonElement(jsonObj.get("intent"));
      }
      if ((jsonObj.get("languageCode") != null && !jsonObj.get("languageCode").isJsonNull()) && !jsonObj.get("languageCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `languageCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("languageCode").toString()));
      }
      // validate the optional field `match`
      if (jsonObj.get("match") != null && !jsonObj.get("match").isJsonNull()) {
        GoogleCloudDialogflowCxV3Match.validateJsonElement(jsonObj.get("match"));
      }
      if (jsonObj.get("responseMessages") != null && !jsonObj.get("responseMessages").isJsonNull()) {
        JsonArray jsonArrayresponseMessages = jsonObj.getAsJsonArray("responseMessages");
        if (jsonArrayresponseMessages != null) {
          // ensure the json data is an array
          if (!jsonObj.get("responseMessages").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `responseMessages` to be an array in the JSON string but got `%s`", jsonObj.get("responseMessages").toString()));
          }

          // validate the optional field `responseMessages` (array)
          for (int i = 0; i < jsonArrayresponseMessages.size(); i++) {
            GoogleCloudDialogflowCxV3ResponseMessage.validateJsonElement(jsonArrayresponseMessages.get(i));
          };
        }
      }
      // validate the optional field `sentimentAnalysisResult`
      if (jsonObj.get("sentimentAnalysisResult") != null && !jsonObj.get("sentimentAnalysisResult").isJsonNull()) {
        GoogleCloudDialogflowCxV3SentimentAnalysisResult.validateJsonElement(jsonObj.get("sentimentAnalysisResult"));
      }
      if ((jsonObj.get("text") != null && !jsonObj.get("text").isJsonNull()) && !jsonObj.get("text").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `text` to be a primitive type in the JSON string but got `%s`", jsonObj.get("text").toString()));
      }
      if ((jsonObj.get("transcript") != null && !jsonObj.get("transcript").isJsonNull()) && !jsonObj.get("transcript").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `transcript` to be a primitive type in the JSON string but got `%s`", jsonObj.get("transcript").toString()));
      }
      if ((jsonObj.get("triggerEvent") != null && !jsonObj.get("triggerEvent").isJsonNull()) && !jsonObj.get("triggerEvent").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `triggerEvent` to be a primitive type in the JSON string but got `%s`", jsonObj.get("triggerEvent").toString()));
      }
      if ((jsonObj.get("triggerIntent") != null && !jsonObj.get("triggerIntent").isJsonNull()) && !jsonObj.get("triggerIntent").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `triggerIntent` to be a primitive type in the JSON string but got `%s`", jsonObj.get("triggerIntent").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("webhookPayloads") != null && !jsonObj.get("webhookPayloads").isJsonNull() && !jsonObj.get("webhookPayloads").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `webhookPayloads` to be an array in the JSON string but got `%s`", jsonObj.get("webhookPayloads").toString()));
      }
      if (jsonObj.get("webhookStatuses") != null && !jsonObj.get("webhookStatuses").isJsonNull()) {
        JsonArray jsonArraywebhookStatuses = jsonObj.getAsJsonArray("webhookStatuses");
        if (jsonArraywebhookStatuses != null) {
          // ensure the json data is an array
          if (!jsonObj.get("webhookStatuses").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `webhookStatuses` to be an array in the JSON string but got `%s`", jsonObj.get("webhookStatuses").toString()));
          }

          // validate the optional field `webhookStatuses` (array)
          for (int i = 0; i < jsonArraywebhookStatuses.size(); i++) {
            GoogleRpcStatus.validateJsonElement(jsonArraywebhookStatuses.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDialogflowCxV3QueryResult.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDialogflowCxV3QueryResult' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDialogflowCxV3QueryResult> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDialogflowCxV3QueryResult.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDialogflowCxV3QueryResult>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDialogflowCxV3QueryResult value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDialogflowCxV3QueryResult read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDialogflowCxV3QueryResult given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDialogflowCxV3QueryResult
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDialogflowCxV3QueryResult
   */
  public static GoogleCloudDialogflowCxV3QueryResult fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDialogflowCxV3QueryResult.class);
  }

  /**
   * Convert an instance of GoogleCloudDialogflowCxV3QueryResult to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

