/*
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents article answer.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:47:42.852499-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDialogflowV2beta1ArticleAnswer {
  public static final String SERIALIZED_NAME_ANSWER_RECORD = "answerRecord";
  @SerializedName(SERIALIZED_NAME_ANSWER_RECORD)
  private String answerRecord;

  public static final String SERIALIZED_NAME_METADATA = "metadata";
  @SerializedName(SERIALIZED_NAME_METADATA)
  private Map<String, String> metadata = new HashMap<>();

  public static final String SERIALIZED_NAME_SNIPPETS = "snippets";
  @SerializedName(SERIALIZED_NAME_SNIPPETS)
  private List<String> snippets = new ArrayList<>();

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_URI = "uri";
  @SerializedName(SERIALIZED_NAME_URI)
  private String uri;

  public GoogleCloudDialogflowV2beta1ArticleAnswer() {
  }

  public GoogleCloudDialogflowV2beta1ArticleAnswer answerRecord(String answerRecord) {
    this.answerRecord = answerRecord;
    return this;
  }

  /**
   * The name of answer record, in the format of \&quot;projects//locations//answerRecords/\&quot;
   * @return answerRecord
   */
  @javax.annotation.Nullable
  public String getAnswerRecord() {
    return answerRecord;
  }

  public void setAnswerRecord(String answerRecord) {
    this.answerRecord = answerRecord;
  }


  public GoogleCloudDialogflowV2beta1ArticleAnswer metadata(Map<String, String> metadata) {
    this.metadata = metadata;
    return this;
  }

  public GoogleCloudDialogflowV2beta1ArticleAnswer putMetadataItem(String key, String metadataItem) {
    if (this.metadata == null) {
      this.metadata = new HashMap<>();
    }
    this.metadata.put(key, metadataItem);
    return this;
  }

  /**
   * A map that contains metadata about the answer and the document from which it originates.
   * @return metadata
   */
  @javax.annotation.Nullable
  public Map<String, String> getMetadata() {
    return metadata;
  }

  public void setMetadata(Map<String, String> metadata) {
    this.metadata = metadata;
  }


  public GoogleCloudDialogflowV2beta1ArticleAnswer snippets(List<String> snippets) {
    this.snippets = snippets;
    return this;
  }

  public GoogleCloudDialogflowV2beta1ArticleAnswer addSnippetsItem(String snippetsItem) {
    if (this.snippets == null) {
      this.snippets = new ArrayList<>();
    }
    this.snippets.add(snippetsItem);
    return this;
  }

  /**
   * Output only. Article snippets.
   * @return snippets
   */
  @javax.annotation.Nullable
  public List<String> getSnippets() {
    return snippets;
  }

  public void setSnippets(List<String> snippets) {
    this.snippets = snippets;
  }


  public GoogleCloudDialogflowV2beta1ArticleAnswer title(String title) {
    this.title = title;
    return this;
  }

  /**
   * The article title.
   * @return title
   */
  @javax.annotation.Nullable
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }


  public GoogleCloudDialogflowV2beta1ArticleAnswer uri(String uri) {
    this.uri = uri;
    return this;
  }

  /**
   * The article URI.
   * @return uri
   */
  @javax.annotation.Nullable
  public String getUri() {
    return uri;
  }

  public void setUri(String uri) {
    this.uri = uri;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDialogflowV2beta1ArticleAnswer googleCloudDialogflowV2beta1ArticleAnswer = (GoogleCloudDialogflowV2beta1ArticleAnswer) o;
    return Objects.equals(this.answerRecord, googleCloudDialogflowV2beta1ArticleAnswer.answerRecord) &&
        Objects.equals(this.metadata, googleCloudDialogflowV2beta1ArticleAnswer.metadata) &&
        Objects.equals(this.snippets, googleCloudDialogflowV2beta1ArticleAnswer.snippets) &&
        Objects.equals(this.title, googleCloudDialogflowV2beta1ArticleAnswer.title) &&
        Objects.equals(this.uri, googleCloudDialogflowV2beta1ArticleAnswer.uri);
  }

  @Override
  public int hashCode() {
    return Objects.hash(answerRecord, metadata, snippets, title, uri);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDialogflowV2beta1ArticleAnswer {\n");
    sb.append("    answerRecord: ").append(toIndentedString(answerRecord)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    snippets: ").append(toIndentedString(snippets)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    uri: ").append(toIndentedString(uri)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("answerRecord");
    openapiFields.add("metadata");
    openapiFields.add("snippets");
    openapiFields.add("title");
    openapiFields.add("uri");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDialogflowV2beta1ArticleAnswer
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDialogflowV2beta1ArticleAnswer.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDialogflowV2beta1ArticleAnswer is not found in the empty JSON string", GoogleCloudDialogflowV2beta1ArticleAnswer.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDialogflowV2beta1ArticleAnswer.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDialogflowV2beta1ArticleAnswer` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("answerRecord") != null && !jsonObj.get("answerRecord").isJsonNull()) && !jsonObj.get("answerRecord").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `answerRecord` to be a primitive type in the JSON string but got `%s`", jsonObj.get("answerRecord").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("snippets") != null && !jsonObj.get("snippets").isJsonNull() && !jsonObj.get("snippets").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `snippets` to be an array in the JSON string but got `%s`", jsonObj.get("snippets").toString()));
      }
      if ((jsonObj.get("title") != null && !jsonObj.get("title").isJsonNull()) && !jsonObj.get("title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("title").toString()));
      }
      if ((jsonObj.get("uri") != null && !jsonObj.get("uri").isJsonNull()) && !jsonObj.get("uri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `uri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("uri").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDialogflowV2beta1ArticleAnswer.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDialogflowV2beta1ArticleAnswer' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDialogflowV2beta1ArticleAnswer> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDialogflowV2beta1ArticleAnswer.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDialogflowV2beta1ArticleAnswer>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDialogflowV2beta1ArticleAnswer value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDialogflowV2beta1ArticleAnswer read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDialogflowV2beta1ArticleAnswer given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDialogflowV2beta1ArticleAnswer
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDialogflowV2beta1ArticleAnswer
   */
  public static GoogleCloudDialogflowV2beta1ArticleAnswer fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDialogflowV2beta1ArticleAnswer.class);
  }

  /**
   * Convert an instance of GoogleCloudDialogflowV2beta1ArticleAnswer to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

