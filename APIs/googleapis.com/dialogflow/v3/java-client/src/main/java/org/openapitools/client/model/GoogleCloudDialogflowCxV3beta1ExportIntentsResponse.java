/*
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudDialogflowCxV3beta1InlineDestination;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The response message for Intents.ExportIntents.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:47:42.852499-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDialogflowCxV3beta1ExportIntentsResponse {
  public static final String SERIALIZED_NAME_INTENTS_CONTENT = "intentsContent";
  @SerializedName(SERIALIZED_NAME_INTENTS_CONTENT)
  private GoogleCloudDialogflowCxV3beta1InlineDestination intentsContent;

  public static final String SERIALIZED_NAME_INTENTS_URI = "intentsUri";
  @SerializedName(SERIALIZED_NAME_INTENTS_URI)
  private String intentsUri;

  public GoogleCloudDialogflowCxV3beta1ExportIntentsResponse() {
  }

  public GoogleCloudDialogflowCxV3beta1ExportIntentsResponse intentsContent(GoogleCloudDialogflowCxV3beta1InlineDestination intentsContent) {
    this.intentsContent = intentsContent;
    return this;
  }

  /**
   * Get intentsContent
   * @return intentsContent
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowCxV3beta1InlineDestination getIntentsContent() {
    return intentsContent;
  }

  public void setIntentsContent(GoogleCloudDialogflowCxV3beta1InlineDestination intentsContent) {
    this.intentsContent = intentsContent;
  }


  public GoogleCloudDialogflowCxV3beta1ExportIntentsResponse intentsUri(String intentsUri) {
    this.intentsUri = intentsUri;
    return this;
  }

  /**
   * The URI to a file containing the exported intents. This field is populated only if &#x60;intents_uri&#x60; is specified in ExportIntentsRequest.
   * @return intentsUri
   */
  @javax.annotation.Nullable
  public String getIntentsUri() {
    return intentsUri;
  }

  public void setIntentsUri(String intentsUri) {
    this.intentsUri = intentsUri;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDialogflowCxV3beta1ExportIntentsResponse googleCloudDialogflowCxV3beta1ExportIntentsResponse = (GoogleCloudDialogflowCxV3beta1ExportIntentsResponse) o;
    return Objects.equals(this.intentsContent, googleCloudDialogflowCxV3beta1ExportIntentsResponse.intentsContent) &&
        Objects.equals(this.intentsUri, googleCloudDialogflowCxV3beta1ExportIntentsResponse.intentsUri);
  }

  @Override
  public int hashCode() {
    return Objects.hash(intentsContent, intentsUri);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDialogflowCxV3beta1ExportIntentsResponse {\n");
    sb.append("    intentsContent: ").append(toIndentedString(intentsContent)).append("\n");
    sb.append("    intentsUri: ").append(toIndentedString(intentsUri)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("intentsContent");
    openapiFields.add("intentsUri");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDialogflowCxV3beta1ExportIntentsResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDialogflowCxV3beta1ExportIntentsResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDialogflowCxV3beta1ExportIntentsResponse is not found in the empty JSON string", GoogleCloudDialogflowCxV3beta1ExportIntentsResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDialogflowCxV3beta1ExportIntentsResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDialogflowCxV3beta1ExportIntentsResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `intentsContent`
      if (jsonObj.get("intentsContent") != null && !jsonObj.get("intentsContent").isJsonNull()) {
        GoogleCloudDialogflowCxV3beta1InlineDestination.validateJsonElement(jsonObj.get("intentsContent"));
      }
      if ((jsonObj.get("intentsUri") != null && !jsonObj.get("intentsUri").isJsonNull()) && !jsonObj.get("intentsUri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `intentsUri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("intentsUri").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDialogflowCxV3beta1ExportIntentsResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDialogflowCxV3beta1ExportIntentsResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDialogflowCxV3beta1ExportIntentsResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDialogflowCxV3beta1ExportIntentsResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDialogflowCxV3beta1ExportIntentsResponse>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDialogflowCxV3beta1ExportIntentsResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDialogflowCxV3beta1ExportIntentsResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDialogflowCxV3beta1ExportIntentsResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDialogflowCxV3beta1ExportIntentsResponse
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDialogflowCxV3beta1ExportIntentsResponse
   */
  public static GoogleCloudDialogflowCxV3beta1ExportIntentsResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDialogflowCxV3beta1ExportIntentsResponse.class);
  }

  /**
   * Convert an instance of GoogleCloudDialogflowCxV3beta1ExportIntentsResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

