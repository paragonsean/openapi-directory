/*
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings;
import org.openapitools.client.model.GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettings;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents the settings related to security issues, such as data redaction and data retention. It may take hours for updates on the settings to propagate to all the related components and take effect.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:47:42.852499-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDialogflowCxV3SecuritySettings {
  public static final String SERIALIZED_NAME_AUDIO_EXPORT_SETTINGS = "audioExportSettings";
  @SerializedName(SERIALIZED_NAME_AUDIO_EXPORT_SETTINGS)
  private GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings audioExportSettings;

  public static final String SERIALIZED_NAME_DEIDENTIFY_TEMPLATE = "deidentifyTemplate";
  @SerializedName(SERIALIZED_NAME_DEIDENTIFY_TEMPLATE)
  private String deidentifyTemplate;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_INSIGHTS_EXPORT_SETTINGS = "insightsExportSettings";
  @SerializedName(SERIALIZED_NAME_INSIGHTS_EXPORT_SETTINGS)
  private GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettings insightsExportSettings;

  public static final String SERIALIZED_NAME_INSPECT_TEMPLATE = "inspectTemplate";
  @SerializedName(SERIALIZED_NAME_INSPECT_TEMPLATE)
  private String inspectTemplate;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  /**
   * Gets or Sets purgeDataTypes
   */
  @JsonAdapter(PurgeDataTypesEnum.Adapter.class)
  public enum PurgeDataTypesEnum {
    PURGE_DATA_TYPE_UNSPECIFIED("PURGE_DATA_TYPE_UNSPECIFIED"),
    
    DIALOGFLOW_HISTORY("DIALOGFLOW_HISTORY");

    private String value;

    PurgeDataTypesEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PurgeDataTypesEnum fromValue(String value) {
      for (PurgeDataTypesEnum b : PurgeDataTypesEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<PurgeDataTypesEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PurgeDataTypesEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PurgeDataTypesEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return PurgeDataTypesEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      PurgeDataTypesEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_PURGE_DATA_TYPES = "purgeDataTypes";
  @SerializedName(SERIALIZED_NAME_PURGE_DATA_TYPES)
  private List<PurgeDataTypesEnum> purgeDataTypes = new ArrayList<>();

  /**
   * Defines the data for which Dialogflow applies redaction. Dialogflow does not redact data that it does not have access to â€“ for example, Cloud logging.
   */
  @JsonAdapter(RedactionScopeEnum.Adapter.class)
  public enum RedactionScopeEnum {
    REDACTION_SCOPE_UNSPECIFIED("REDACTION_SCOPE_UNSPECIFIED"),
    
    REDACT_DISK_STORAGE("REDACT_DISK_STORAGE");

    private String value;

    RedactionScopeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static RedactionScopeEnum fromValue(String value) {
      for (RedactionScopeEnum b : RedactionScopeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<RedactionScopeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RedactionScopeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public RedactionScopeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return RedactionScopeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      RedactionScopeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_REDACTION_SCOPE = "redactionScope";
  @SerializedName(SERIALIZED_NAME_REDACTION_SCOPE)
  private RedactionScopeEnum redactionScope;

  /**
   * Strategy that defines how we do redaction.
   */
  @JsonAdapter(RedactionStrategyEnum.Adapter.class)
  public enum RedactionStrategyEnum {
    REDACTION_STRATEGY_UNSPECIFIED("REDACTION_STRATEGY_UNSPECIFIED"),
    
    REDACT_WITH_SERVICE("REDACT_WITH_SERVICE");

    private String value;

    RedactionStrategyEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static RedactionStrategyEnum fromValue(String value) {
      for (RedactionStrategyEnum b : RedactionStrategyEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<RedactionStrategyEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RedactionStrategyEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public RedactionStrategyEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return RedactionStrategyEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      RedactionStrategyEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_REDACTION_STRATEGY = "redactionStrategy";
  @SerializedName(SERIALIZED_NAME_REDACTION_STRATEGY)
  private RedactionStrategyEnum redactionStrategy;

  /**
   * Specifies the retention behavior defined by SecuritySettings.RetentionStrategy.
   */
  @JsonAdapter(RetentionStrategyEnum.Adapter.class)
  public enum RetentionStrategyEnum {
    RETENTION_STRATEGY_UNSPECIFIED("RETENTION_STRATEGY_UNSPECIFIED"),
    
    REMOVE_AFTER_CONVERSATION("REMOVE_AFTER_CONVERSATION");

    private String value;

    RetentionStrategyEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static RetentionStrategyEnum fromValue(String value) {
      for (RetentionStrategyEnum b : RetentionStrategyEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<RetentionStrategyEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RetentionStrategyEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public RetentionStrategyEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return RetentionStrategyEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      RetentionStrategyEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_RETENTION_STRATEGY = "retentionStrategy";
  @SerializedName(SERIALIZED_NAME_RETENTION_STRATEGY)
  private RetentionStrategyEnum retentionStrategy;

  public static final String SERIALIZED_NAME_RETENTION_WINDOW_DAYS = "retentionWindowDays";
  @SerializedName(SERIALIZED_NAME_RETENTION_WINDOW_DAYS)
  private Integer retentionWindowDays;

  public GoogleCloudDialogflowCxV3SecuritySettings() {
  }

  public GoogleCloudDialogflowCxV3SecuritySettings audioExportSettings(GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings audioExportSettings) {
    this.audioExportSettings = audioExportSettings;
    return this;
  }

  /**
   * Get audioExportSettings
   * @return audioExportSettings
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings getAudioExportSettings() {
    return audioExportSettings;
  }

  public void setAudioExportSettings(GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings audioExportSettings) {
    this.audioExportSettings = audioExportSettings;
  }


  public GoogleCloudDialogflowCxV3SecuritySettings deidentifyTemplate(String deidentifyTemplate) {
    this.deidentifyTemplate = deidentifyTemplate;
    return this;
  }

  /**
   * [DLP](https://cloud.google.com/dlp/docs) deidentify template name. Use this template to define de-identification configuration for the content. The &#x60;DLP De-identify Templates Reader&#x60; role is needed on the Dialogflow service identity service account (has the form &#x60;service-PROJECT_NUMBER@gcp-sa-dialogflow.iam.gserviceaccount.com&#x60;) for your agent&#39;s project. If empty, Dialogflow replaces sensitive info with &#x60;[redacted]&#x60; text. The template name will have one of the following formats: &#x60;projects//locations//deidentifyTemplates/&#x60; OR &#x60;organizations//locations//deidentifyTemplates/&#x60; Note: &#x60;deidentify_template&#x60; must be located in the same region as the &#x60;SecuritySettings&#x60;.
   * @return deidentifyTemplate
   */
  @javax.annotation.Nullable
  public String getDeidentifyTemplate() {
    return deidentifyTemplate;
  }

  public void setDeidentifyTemplate(String deidentifyTemplate) {
    this.deidentifyTemplate = deidentifyTemplate;
  }


  public GoogleCloudDialogflowCxV3SecuritySettings displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Required. The human-readable name of the security settings, unique within the location.
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public GoogleCloudDialogflowCxV3SecuritySettings insightsExportSettings(GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettings insightsExportSettings) {
    this.insightsExportSettings = insightsExportSettings;
    return this;
  }

  /**
   * Get insightsExportSettings
   * @return insightsExportSettings
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettings getInsightsExportSettings() {
    return insightsExportSettings;
  }

  public void setInsightsExportSettings(GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettings insightsExportSettings) {
    this.insightsExportSettings = insightsExportSettings;
  }


  public GoogleCloudDialogflowCxV3SecuritySettings inspectTemplate(String inspectTemplate) {
    this.inspectTemplate = inspectTemplate;
    return this;
  }

  /**
   * [DLP](https://cloud.google.com/dlp/docs) inspect template name. Use this template to define inspect base settings. The &#x60;DLP Inspect Templates Reader&#x60; role is needed on the Dialogflow service identity service account (has the form &#x60;service-PROJECT_NUMBER@gcp-sa-dialogflow.iam.gserviceaccount.com&#x60;) for your agent&#39;s project. If empty, we use the default DLP inspect config. The template name will have one of the following formats: &#x60;projects//locations//inspectTemplates/&#x60; OR &#x60;organizations//locations//inspectTemplates/&#x60; Note: &#x60;inspect_template&#x60; must be located in the same region as the &#x60;SecuritySettings&#x60;.
   * @return inspectTemplate
   */
  @javax.annotation.Nullable
  public String getInspectTemplate() {
    return inspectTemplate;
  }

  public void setInspectTemplate(String inspectTemplate) {
    this.inspectTemplate = inspectTemplate;
  }


  public GoogleCloudDialogflowCxV3SecuritySettings name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Resource name of the settings. Required for the SecuritySettingsService.UpdateSecuritySettings method. SecuritySettingsService.CreateSecuritySettings populates the name automatically. Format: &#x60;projects//locations//securitySettings/&#x60;.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public GoogleCloudDialogflowCxV3SecuritySettings purgeDataTypes(List<PurgeDataTypesEnum> purgeDataTypes) {
    this.purgeDataTypes = purgeDataTypes;
    return this;
  }

  public GoogleCloudDialogflowCxV3SecuritySettings addPurgeDataTypesItem(PurgeDataTypesEnum purgeDataTypesItem) {
    if (this.purgeDataTypes == null) {
      this.purgeDataTypes = new ArrayList<>();
    }
    this.purgeDataTypes.add(purgeDataTypesItem);
    return this;
  }

  /**
   * List of types of data to remove when retention settings triggers purge.
   * @return purgeDataTypes
   */
  @javax.annotation.Nullable
  public List<PurgeDataTypesEnum> getPurgeDataTypes() {
    return purgeDataTypes;
  }

  public void setPurgeDataTypes(List<PurgeDataTypesEnum> purgeDataTypes) {
    this.purgeDataTypes = purgeDataTypes;
  }


  public GoogleCloudDialogflowCxV3SecuritySettings redactionScope(RedactionScopeEnum redactionScope) {
    this.redactionScope = redactionScope;
    return this;
  }

  /**
   * Defines the data for which Dialogflow applies redaction. Dialogflow does not redact data that it does not have access to â€“ for example, Cloud logging.
   * @return redactionScope
   */
  @javax.annotation.Nullable
  public RedactionScopeEnum getRedactionScope() {
    return redactionScope;
  }

  public void setRedactionScope(RedactionScopeEnum redactionScope) {
    this.redactionScope = redactionScope;
  }


  public GoogleCloudDialogflowCxV3SecuritySettings redactionStrategy(RedactionStrategyEnum redactionStrategy) {
    this.redactionStrategy = redactionStrategy;
    return this;
  }

  /**
   * Strategy that defines how we do redaction.
   * @return redactionStrategy
   */
  @javax.annotation.Nullable
  public RedactionStrategyEnum getRedactionStrategy() {
    return redactionStrategy;
  }

  public void setRedactionStrategy(RedactionStrategyEnum redactionStrategy) {
    this.redactionStrategy = redactionStrategy;
  }


  public GoogleCloudDialogflowCxV3SecuritySettings retentionStrategy(RetentionStrategyEnum retentionStrategy) {
    this.retentionStrategy = retentionStrategy;
    return this;
  }

  /**
   * Specifies the retention behavior defined by SecuritySettings.RetentionStrategy.
   * @return retentionStrategy
   */
  @javax.annotation.Nullable
  public RetentionStrategyEnum getRetentionStrategy() {
    return retentionStrategy;
  }

  public void setRetentionStrategy(RetentionStrategyEnum retentionStrategy) {
    this.retentionStrategy = retentionStrategy;
  }


  public GoogleCloudDialogflowCxV3SecuritySettings retentionWindowDays(Integer retentionWindowDays) {
    this.retentionWindowDays = retentionWindowDays;
    return this;
  }

  /**
   * Retains the data for the specified number of days. User must set a value lower than Dialogflow&#39;s default 365d TTL (30 days for Agent Assist traffic), higher value will be ignored and use default. Setting a value higher than that has no effect. A missing value or setting to 0 also means we use default TTL.
   * @return retentionWindowDays
   */
  @javax.annotation.Nullable
  public Integer getRetentionWindowDays() {
    return retentionWindowDays;
  }

  public void setRetentionWindowDays(Integer retentionWindowDays) {
    this.retentionWindowDays = retentionWindowDays;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDialogflowCxV3SecuritySettings googleCloudDialogflowCxV3SecuritySettings = (GoogleCloudDialogflowCxV3SecuritySettings) o;
    return Objects.equals(this.audioExportSettings, googleCloudDialogflowCxV3SecuritySettings.audioExportSettings) &&
        Objects.equals(this.deidentifyTemplate, googleCloudDialogflowCxV3SecuritySettings.deidentifyTemplate) &&
        Objects.equals(this.displayName, googleCloudDialogflowCxV3SecuritySettings.displayName) &&
        Objects.equals(this.insightsExportSettings, googleCloudDialogflowCxV3SecuritySettings.insightsExportSettings) &&
        Objects.equals(this.inspectTemplate, googleCloudDialogflowCxV3SecuritySettings.inspectTemplate) &&
        Objects.equals(this.name, googleCloudDialogflowCxV3SecuritySettings.name) &&
        Objects.equals(this.purgeDataTypes, googleCloudDialogflowCxV3SecuritySettings.purgeDataTypes) &&
        Objects.equals(this.redactionScope, googleCloudDialogflowCxV3SecuritySettings.redactionScope) &&
        Objects.equals(this.redactionStrategy, googleCloudDialogflowCxV3SecuritySettings.redactionStrategy) &&
        Objects.equals(this.retentionStrategy, googleCloudDialogflowCxV3SecuritySettings.retentionStrategy) &&
        Objects.equals(this.retentionWindowDays, googleCloudDialogflowCxV3SecuritySettings.retentionWindowDays);
  }

  @Override
  public int hashCode() {
    return Objects.hash(audioExportSettings, deidentifyTemplate, displayName, insightsExportSettings, inspectTemplate, name, purgeDataTypes, redactionScope, redactionStrategy, retentionStrategy, retentionWindowDays);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDialogflowCxV3SecuritySettings {\n");
    sb.append("    audioExportSettings: ").append(toIndentedString(audioExportSettings)).append("\n");
    sb.append("    deidentifyTemplate: ").append(toIndentedString(deidentifyTemplate)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    insightsExportSettings: ").append(toIndentedString(insightsExportSettings)).append("\n");
    sb.append("    inspectTemplate: ").append(toIndentedString(inspectTemplate)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    purgeDataTypes: ").append(toIndentedString(purgeDataTypes)).append("\n");
    sb.append("    redactionScope: ").append(toIndentedString(redactionScope)).append("\n");
    sb.append("    redactionStrategy: ").append(toIndentedString(redactionStrategy)).append("\n");
    sb.append("    retentionStrategy: ").append(toIndentedString(retentionStrategy)).append("\n");
    sb.append("    retentionWindowDays: ").append(toIndentedString(retentionWindowDays)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("audioExportSettings");
    openapiFields.add("deidentifyTemplate");
    openapiFields.add("displayName");
    openapiFields.add("insightsExportSettings");
    openapiFields.add("inspectTemplate");
    openapiFields.add("name");
    openapiFields.add("purgeDataTypes");
    openapiFields.add("redactionScope");
    openapiFields.add("redactionStrategy");
    openapiFields.add("retentionStrategy");
    openapiFields.add("retentionWindowDays");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDialogflowCxV3SecuritySettings
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDialogflowCxV3SecuritySettings.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDialogflowCxV3SecuritySettings is not found in the empty JSON string", GoogleCloudDialogflowCxV3SecuritySettings.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDialogflowCxV3SecuritySettings.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDialogflowCxV3SecuritySettings` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `audioExportSettings`
      if (jsonObj.get("audioExportSettings") != null && !jsonObj.get("audioExportSettings").isJsonNull()) {
        GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings.validateJsonElement(jsonObj.get("audioExportSettings"));
      }
      if ((jsonObj.get("deidentifyTemplate") != null && !jsonObj.get("deidentifyTemplate").isJsonNull()) && !jsonObj.get("deidentifyTemplate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `deidentifyTemplate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("deidentifyTemplate").toString()));
      }
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      // validate the optional field `insightsExportSettings`
      if (jsonObj.get("insightsExportSettings") != null && !jsonObj.get("insightsExportSettings").isJsonNull()) {
        GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettings.validateJsonElement(jsonObj.get("insightsExportSettings"));
      }
      if ((jsonObj.get("inspectTemplate") != null && !jsonObj.get("inspectTemplate").isJsonNull()) && !jsonObj.get("inspectTemplate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `inspectTemplate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("inspectTemplate").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("purgeDataTypes") != null && !jsonObj.get("purgeDataTypes").isJsonNull() && !jsonObj.get("purgeDataTypes").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `purgeDataTypes` to be an array in the JSON string but got `%s`", jsonObj.get("purgeDataTypes").toString()));
      }
      if ((jsonObj.get("redactionScope") != null && !jsonObj.get("redactionScope").isJsonNull()) && !jsonObj.get("redactionScope").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `redactionScope` to be a primitive type in the JSON string but got `%s`", jsonObj.get("redactionScope").toString()));
      }
      // validate the optional field `redactionScope`
      if (jsonObj.get("redactionScope") != null && !jsonObj.get("redactionScope").isJsonNull()) {
        RedactionScopeEnum.validateJsonElement(jsonObj.get("redactionScope"));
      }
      if ((jsonObj.get("redactionStrategy") != null && !jsonObj.get("redactionStrategy").isJsonNull()) && !jsonObj.get("redactionStrategy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `redactionStrategy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("redactionStrategy").toString()));
      }
      // validate the optional field `redactionStrategy`
      if (jsonObj.get("redactionStrategy") != null && !jsonObj.get("redactionStrategy").isJsonNull()) {
        RedactionStrategyEnum.validateJsonElement(jsonObj.get("redactionStrategy"));
      }
      if ((jsonObj.get("retentionStrategy") != null && !jsonObj.get("retentionStrategy").isJsonNull()) && !jsonObj.get("retentionStrategy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `retentionStrategy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("retentionStrategy").toString()));
      }
      // validate the optional field `retentionStrategy`
      if (jsonObj.get("retentionStrategy") != null && !jsonObj.get("retentionStrategy").isJsonNull()) {
        RetentionStrategyEnum.validateJsonElement(jsonObj.get("retentionStrategy"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDialogflowCxV3SecuritySettings.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDialogflowCxV3SecuritySettings' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDialogflowCxV3SecuritySettings> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDialogflowCxV3SecuritySettings.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDialogflowCxV3SecuritySettings>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDialogflowCxV3SecuritySettings value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDialogflowCxV3SecuritySettings read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDialogflowCxV3SecuritySettings given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDialogflowCxV3SecuritySettings
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDialogflowCxV3SecuritySettings
   */
  public static GoogleCloudDialogflowCxV3SecuritySettings fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDialogflowCxV3SecuritySettings.class);
  }

  /**
   * Convert an instance of GoogleCloudDialogflowCxV3SecuritySettings to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

