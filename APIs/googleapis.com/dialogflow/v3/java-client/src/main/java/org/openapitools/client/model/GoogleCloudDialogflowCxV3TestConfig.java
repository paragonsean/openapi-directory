/*
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents configurations for a test case.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:47:42.852499-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDialogflowCxV3TestConfig {
  public static final String SERIALIZED_NAME_FLOW = "flow";
  @SerializedName(SERIALIZED_NAME_FLOW)
  private String flow;

  public static final String SERIALIZED_NAME_PAGE = "page";
  @SerializedName(SERIALIZED_NAME_PAGE)
  private String page;

  public static final String SERIALIZED_NAME_TRACKING_PARAMETERS = "trackingParameters";
  @SerializedName(SERIALIZED_NAME_TRACKING_PARAMETERS)
  private List<String> trackingParameters = new ArrayList<>();

  public GoogleCloudDialogflowCxV3TestConfig() {
  }

  public GoogleCloudDialogflowCxV3TestConfig flow(String flow) {
    this.flow = flow;
    return this;
  }

  /**
   * Flow name to start the test case with. Format: &#x60;projects//locations//agents//flows/&#x60;. Only one of &#x60;flow&#x60; and &#x60;page&#x60; should be set to indicate the starting point of the test case. If both are set, &#x60;page&#x60; takes precedence over &#x60;flow&#x60;. If neither is set, the test case will start with start page on the default start flow.
   * @return flow
   */
  @javax.annotation.Nullable
  public String getFlow() {
    return flow;
  }

  public void setFlow(String flow) {
    this.flow = flow;
  }


  public GoogleCloudDialogflowCxV3TestConfig page(String page) {
    this.page = page;
    return this;
  }

  /**
   * The page to start the test case with. Format: &#x60;projects//locations//agents//flows//pages/&#x60;. Only one of &#x60;flow&#x60; and &#x60;page&#x60; should be set to indicate the starting point of the test case. If both are set, &#x60;page&#x60; takes precedence over &#x60;flow&#x60;. If neither is set, the test case will start with start page on the default start flow.
   * @return page
   */
  @javax.annotation.Nullable
  public String getPage() {
    return page;
  }

  public void setPage(String page) {
    this.page = page;
  }


  public GoogleCloudDialogflowCxV3TestConfig trackingParameters(List<String> trackingParameters) {
    this.trackingParameters = trackingParameters;
    return this;
  }

  public GoogleCloudDialogflowCxV3TestConfig addTrackingParametersItem(String trackingParametersItem) {
    if (this.trackingParameters == null) {
      this.trackingParameters = new ArrayList<>();
    }
    this.trackingParameters.add(trackingParametersItem);
    return this;
  }

  /**
   * Session parameters to be compared when calculating differences.
   * @return trackingParameters
   */
  @javax.annotation.Nullable
  public List<String> getTrackingParameters() {
    return trackingParameters;
  }

  public void setTrackingParameters(List<String> trackingParameters) {
    this.trackingParameters = trackingParameters;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDialogflowCxV3TestConfig googleCloudDialogflowCxV3TestConfig = (GoogleCloudDialogflowCxV3TestConfig) o;
    return Objects.equals(this.flow, googleCloudDialogflowCxV3TestConfig.flow) &&
        Objects.equals(this.page, googleCloudDialogflowCxV3TestConfig.page) &&
        Objects.equals(this.trackingParameters, googleCloudDialogflowCxV3TestConfig.trackingParameters);
  }

  @Override
  public int hashCode() {
    return Objects.hash(flow, page, trackingParameters);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDialogflowCxV3TestConfig {\n");
    sb.append("    flow: ").append(toIndentedString(flow)).append("\n");
    sb.append("    page: ").append(toIndentedString(page)).append("\n");
    sb.append("    trackingParameters: ").append(toIndentedString(trackingParameters)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("flow");
    openapiFields.add("page");
    openapiFields.add("trackingParameters");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDialogflowCxV3TestConfig
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDialogflowCxV3TestConfig.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDialogflowCxV3TestConfig is not found in the empty JSON string", GoogleCloudDialogflowCxV3TestConfig.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDialogflowCxV3TestConfig.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDialogflowCxV3TestConfig` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("flow") != null && !jsonObj.get("flow").isJsonNull()) && !jsonObj.get("flow").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `flow` to be a primitive type in the JSON string but got `%s`", jsonObj.get("flow").toString()));
      }
      if ((jsonObj.get("page") != null && !jsonObj.get("page").isJsonNull()) && !jsonObj.get("page").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `page` to be a primitive type in the JSON string but got `%s`", jsonObj.get("page").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("trackingParameters") != null && !jsonObj.get("trackingParameters").isJsonNull() && !jsonObj.get("trackingParameters").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `trackingParameters` to be an array in the JSON string but got `%s`", jsonObj.get("trackingParameters").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDialogflowCxV3TestConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDialogflowCxV3TestConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDialogflowCxV3TestConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDialogflowCxV3TestConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDialogflowCxV3TestConfig>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDialogflowCxV3TestConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDialogflowCxV3TestConfig read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDialogflowCxV3TestConfig given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDialogflowCxV3TestConfig
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDialogflowCxV3TestConfig
   */
  public static GoogleCloudDialogflowCxV3TestConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDialogflowCxV3TestConfig.class);
  }

  /**
   * Convert an instance of GoogleCloudDialogflowCxV3TestConfig to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

