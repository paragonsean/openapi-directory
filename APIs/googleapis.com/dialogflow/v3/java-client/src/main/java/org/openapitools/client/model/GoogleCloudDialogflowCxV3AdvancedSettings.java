/*
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettings;
import org.openapitools.client.model.GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettings;
import org.openapitools.client.model.GoogleCloudDialogflowCxV3GcsDestination;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Hierarchical advanced settings for agent/flow/page/fulfillment/parameter. Settings exposed at lower level overrides the settings exposed at higher level. Overriding occurs at the sub-setting level. For example, the playback_interruption_settings at fulfillment level only overrides the playback_interruption_settings at the agent level, leaving other settings at the agent level unchanged. DTMF settings does not override each other. DTMF settings set at different levels define DTMF detections running in parallel. Hierarchy: Agent-&gt;Flow-&gt;Page-&gt;Fulfillment/Parameter.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:47:42.852499-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDialogflowCxV3AdvancedSettings {
  public static final String SERIALIZED_NAME_AUDIO_EXPORT_GCS_DESTINATION = "audioExportGcsDestination";
  @SerializedName(SERIALIZED_NAME_AUDIO_EXPORT_GCS_DESTINATION)
  private GoogleCloudDialogflowCxV3GcsDestination audioExportGcsDestination;

  public static final String SERIALIZED_NAME_DTMF_SETTINGS = "dtmfSettings";
  @SerializedName(SERIALIZED_NAME_DTMF_SETTINGS)
  private GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettings dtmfSettings;

  public static final String SERIALIZED_NAME_LOGGING_SETTINGS = "loggingSettings";
  @SerializedName(SERIALIZED_NAME_LOGGING_SETTINGS)
  private GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettings loggingSettings;

  public GoogleCloudDialogflowCxV3AdvancedSettings() {
  }

  public GoogleCloudDialogflowCxV3AdvancedSettings audioExportGcsDestination(GoogleCloudDialogflowCxV3GcsDestination audioExportGcsDestination) {
    this.audioExportGcsDestination = audioExportGcsDestination;
    return this;
  }

  /**
   * Get audioExportGcsDestination
   * @return audioExportGcsDestination
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowCxV3GcsDestination getAudioExportGcsDestination() {
    return audioExportGcsDestination;
  }

  public void setAudioExportGcsDestination(GoogleCloudDialogflowCxV3GcsDestination audioExportGcsDestination) {
    this.audioExportGcsDestination = audioExportGcsDestination;
  }


  public GoogleCloudDialogflowCxV3AdvancedSettings dtmfSettings(GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettings dtmfSettings) {
    this.dtmfSettings = dtmfSettings;
    return this;
  }

  /**
   * Get dtmfSettings
   * @return dtmfSettings
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettings getDtmfSettings() {
    return dtmfSettings;
  }

  public void setDtmfSettings(GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettings dtmfSettings) {
    this.dtmfSettings = dtmfSettings;
  }


  public GoogleCloudDialogflowCxV3AdvancedSettings loggingSettings(GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettings loggingSettings) {
    this.loggingSettings = loggingSettings;
    return this;
  }

  /**
   * Get loggingSettings
   * @return loggingSettings
   */
  @javax.annotation.Nullable
  public GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettings getLoggingSettings() {
    return loggingSettings;
  }

  public void setLoggingSettings(GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettings loggingSettings) {
    this.loggingSettings = loggingSettings;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDialogflowCxV3AdvancedSettings googleCloudDialogflowCxV3AdvancedSettings = (GoogleCloudDialogflowCxV3AdvancedSettings) o;
    return Objects.equals(this.audioExportGcsDestination, googleCloudDialogflowCxV3AdvancedSettings.audioExportGcsDestination) &&
        Objects.equals(this.dtmfSettings, googleCloudDialogflowCxV3AdvancedSettings.dtmfSettings) &&
        Objects.equals(this.loggingSettings, googleCloudDialogflowCxV3AdvancedSettings.loggingSettings);
  }

  @Override
  public int hashCode() {
    return Objects.hash(audioExportGcsDestination, dtmfSettings, loggingSettings);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDialogflowCxV3AdvancedSettings {\n");
    sb.append("    audioExportGcsDestination: ").append(toIndentedString(audioExportGcsDestination)).append("\n");
    sb.append("    dtmfSettings: ").append(toIndentedString(dtmfSettings)).append("\n");
    sb.append("    loggingSettings: ").append(toIndentedString(loggingSettings)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("audioExportGcsDestination");
    openapiFields.add("dtmfSettings");
    openapiFields.add("loggingSettings");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDialogflowCxV3AdvancedSettings
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDialogflowCxV3AdvancedSettings.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDialogflowCxV3AdvancedSettings is not found in the empty JSON string", GoogleCloudDialogflowCxV3AdvancedSettings.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDialogflowCxV3AdvancedSettings.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDialogflowCxV3AdvancedSettings` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `audioExportGcsDestination`
      if (jsonObj.get("audioExportGcsDestination") != null && !jsonObj.get("audioExportGcsDestination").isJsonNull()) {
        GoogleCloudDialogflowCxV3GcsDestination.validateJsonElement(jsonObj.get("audioExportGcsDestination"));
      }
      // validate the optional field `dtmfSettings`
      if (jsonObj.get("dtmfSettings") != null && !jsonObj.get("dtmfSettings").isJsonNull()) {
        GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettings.validateJsonElement(jsonObj.get("dtmfSettings"));
      }
      // validate the optional field `loggingSettings`
      if (jsonObj.get("loggingSettings") != null && !jsonObj.get("loggingSettings").isJsonNull()) {
        GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettings.validateJsonElement(jsonObj.get("loggingSettings"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDialogflowCxV3AdvancedSettings.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDialogflowCxV3AdvancedSettings' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDialogflowCxV3AdvancedSettings> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDialogflowCxV3AdvancedSettings.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDialogflowCxV3AdvancedSettings>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDialogflowCxV3AdvancedSettings value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDialogflowCxV3AdvancedSettings read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDialogflowCxV3AdvancedSettings given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDialogflowCxV3AdvancedSettings
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDialogflowCxV3AdvancedSettings
   */
  public static GoogleCloudDialogflowCxV3AdvancedSettings fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDialogflowCxV3AdvancedSettings.class);
  }

  /**
   * Convert an instance of GoogleCloudDialogflowCxV3AdvancedSettings to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

