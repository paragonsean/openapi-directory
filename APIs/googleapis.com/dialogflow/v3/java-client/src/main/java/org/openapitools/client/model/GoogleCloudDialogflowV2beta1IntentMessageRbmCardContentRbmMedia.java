/*
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Rich Business Messaging (RBM) Media displayed in Cards The following media-types are currently supported: Image Types * image/jpeg * image/jpg&#39; * image/gif * image/png Video Types * video/h263 * video/m4v * video/mp4 * video/mpeg * video/mpeg4 * video/webm
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:47:42.852499-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMedia {
  public static final String SERIALIZED_NAME_FILE_URI = "fileUri";
  @SerializedName(SERIALIZED_NAME_FILE_URI)
  private String fileUri;

  /**
   * Required for cards with vertical orientation. The height of the media within a rich card with a vertical layout. For a standalone card with horizontal layout, height is not customizable, and this field is ignored.
   */
  @JsonAdapter(HeightEnum.Adapter.class)
  public enum HeightEnum {
    HEIGHT_UNSPECIFIED("HEIGHT_UNSPECIFIED"),
    
    SHORT("SHORT"),
    
    MEDIUM("MEDIUM"),
    
    TALL("TALL");

    private String value;

    HeightEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static HeightEnum fromValue(String value) {
      for (HeightEnum b : HeightEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<HeightEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final HeightEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public HeightEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return HeightEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      HeightEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_HEIGHT = "height";
  @SerializedName(SERIALIZED_NAME_HEIGHT)
  private HeightEnum height;

  public static final String SERIALIZED_NAME_THUMBNAIL_URI = "thumbnailUri";
  @SerializedName(SERIALIZED_NAME_THUMBNAIL_URI)
  private String thumbnailUri;

  public GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMedia() {
  }

  public GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMedia fileUri(String fileUri) {
    this.fileUri = fileUri;
    return this;
  }

  /**
   * Required. Publicly reachable URI of the file. The RBM platform determines the MIME type of the file from the content-type field in the HTTP headers when the platform fetches the file. The content-type field must be present and accurate in the HTTP response from the URL.
   * @return fileUri
   */
  @javax.annotation.Nullable
  public String getFileUri() {
    return fileUri;
  }

  public void setFileUri(String fileUri) {
    this.fileUri = fileUri;
  }


  public GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMedia height(HeightEnum height) {
    this.height = height;
    return this;
  }

  /**
   * Required for cards with vertical orientation. The height of the media within a rich card with a vertical layout. For a standalone card with horizontal layout, height is not customizable, and this field is ignored.
   * @return height
   */
  @javax.annotation.Nullable
  public HeightEnum getHeight() {
    return height;
  }

  public void setHeight(HeightEnum height) {
    this.height = height;
  }


  public GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMedia thumbnailUri(String thumbnailUri) {
    this.thumbnailUri = thumbnailUri;
    return this;
  }

  /**
   * Optional. Publicly reachable URI of the thumbnail.If you don&#39;t provide a thumbnail URI, the RBM platform displays a blank placeholder thumbnail until the user&#39;s device downloads the file. Depending on the user&#39;s setting, the file may not download automatically and may require the user to tap a download button.
   * @return thumbnailUri
   */
  @javax.annotation.Nullable
  public String getThumbnailUri() {
    return thumbnailUri;
  }

  public void setThumbnailUri(String thumbnailUri) {
    this.thumbnailUri = thumbnailUri;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMedia googleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMedia = (GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMedia) o;
    return Objects.equals(this.fileUri, googleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMedia.fileUri) &&
        Objects.equals(this.height, googleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMedia.height) &&
        Objects.equals(this.thumbnailUri, googleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMedia.thumbnailUri);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fileUri, height, thumbnailUri);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMedia {\n");
    sb.append("    fileUri: ").append(toIndentedString(fileUri)).append("\n");
    sb.append("    height: ").append(toIndentedString(height)).append("\n");
    sb.append("    thumbnailUri: ").append(toIndentedString(thumbnailUri)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("fileUri");
    openapiFields.add("height");
    openapiFields.add("thumbnailUri");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMedia
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMedia.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMedia is not found in the empty JSON string", GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMedia.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMedia.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMedia` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("fileUri") != null && !jsonObj.get("fileUri").isJsonNull()) && !jsonObj.get("fileUri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fileUri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fileUri").toString()));
      }
      if ((jsonObj.get("height") != null && !jsonObj.get("height").isJsonNull()) && !jsonObj.get("height").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `height` to be a primitive type in the JSON string but got `%s`", jsonObj.get("height").toString()));
      }
      // validate the optional field `height`
      if (jsonObj.get("height") != null && !jsonObj.get("height").isJsonNull()) {
        HeightEnum.validateJsonElement(jsonObj.get("height"));
      }
      if ((jsonObj.get("thumbnailUri") != null && !jsonObj.get("thumbnailUri").isJsonNull()) && !jsonObj.get("thumbnailUri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `thumbnailUri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("thumbnailUri").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMedia.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMedia' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMedia> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMedia.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMedia>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMedia value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMedia read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMedia given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMedia
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMedia
   */
  public static GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMedia fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMedia.class);
  }

  /**
   * Convert an instance of GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMedia to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

