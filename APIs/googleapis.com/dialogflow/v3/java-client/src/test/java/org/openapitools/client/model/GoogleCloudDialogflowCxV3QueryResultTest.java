/*
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.GoogleCloudDialogflowCxV3AdvancedSettings;
import org.openapitools.client.model.GoogleCloudDialogflowCxV3DtmfInput;
import org.openapitools.client.model.GoogleCloudDialogflowCxV3Intent;
import org.openapitools.client.model.GoogleCloudDialogflowCxV3Match;
import org.openapitools.client.model.GoogleCloudDialogflowCxV3Page;
import org.openapitools.client.model.GoogleCloudDialogflowCxV3ResponseMessage;
import org.openapitools.client.model.GoogleCloudDialogflowCxV3SentimentAnalysisResult;
import org.openapitools.client.model.GoogleRpcStatus;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for GoogleCloudDialogflowCxV3QueryResult
 */
public class GoogleCloudDialogflowCxV3QueryResultTest {
    private final GoogleCloudDialogflowCxV3QueryResult model = new GoogleCloudDialogflowCxV3QueryResult();

    /**
     * Model tests for GoogleCloudDialogflowCxV3QueryResult
     */
    @Test
    public void testGoogleCloudDialogflowCxV3QueryResult() {
        // TODO: test GoogleCloudDialogflowCxV3QueryResult
    }

    /**
     * Test the property 'advancedSettings'
     */
    @Test
    public void advancedSettingsTest() {
        // TODO: test advancedSettings
    }

    /**
     * Test the property 'allowAnswerFeedback'
     */
    @Test
    public void allowAnswerFeedbackTest() {
        // TODO: test allowAnswerFeedback
    }

    /**
     * Test the property 'currentPage'
     */
    @Test
    public void currentPageTest() {
        // TODO: test currentPage
    }

    /**
     * Test the property 'diagnosticInfo'
     */
    @Test
    public void diagnosticInfoTest() {
        // TODO: test diagnosticInfo
    }

    /**
     * Test the property 'dtmf'
     */
    @Test
    public void dtmfTest() {
        // TODO: test dtmf
    }

    /**
     * Test the property 'intent'
     */
    @Test
    public void intentTest() {
        // TODO: test intent
    }

    /**
     * Test the property 'intentDetectionConfidence'
     */
    @Test
    public void intentDetectionConfidenceTest() {
        // TODO: test intentDetectionConfidence
    }

    /**
     * Test the property 'languageCode'
     */
    @Test
    public void languageCodeTest() {
        // TODO: test languageCode
    }

    /**
     * Test the property 'match'
     */
    @Test
    public void matchTest() {
        // TODO: test match
    }

    /**
     * Test the property 'parameters'
     */
    @Test
    public void parametersTest() {
        // TODO: test parameters
    }

    /**
     * Test the property 'responseMessages'
     */
    @Test
    public void responseMessagesTest() {
        // TODO: test responseMessages
    }

    /**
     * Test the property 'sentimentAnalysisResult'
     */
    @Test
    public void sentimentAnalysisResultTest() {
        // TODO: test sentimentAnalysisResult
    }

    /**
     * Test the property 'text'
     */
    @Test
    public void textTest() {
        // TODO: test text
    }

    /**
     * Test the property 'transcript'
     */
    @Test
    public void transcriptTest() {
        // TODO: test transcript
    }

    /**
     * Test the property 'triggerEvent'
     */
    @Test
    public void triggerEventTest() {
        // TODO: test triggerEvent
    }

    /**
     * Test the property 'triggerIntent'
     */
    @Test
    public void triggerIntentTest() {
        // TODO: test triggerIntent
    }

    /**
     * Test the property 'webhookPayloads'
     */
    @Test
    public void webhookPayloadsTest() {
        // TODO: test webhookPayloads
    }

    /**
     * Test the property 'webhookStatuses'
     */
    @Test
    public void webhookStatusesTest() {
        // TODO: test webhookStatuses
    }

}
