/*
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.GoogleCloudDialogflowCxV3SearchConfig;
import org.openapitools.client.model.GoogleCloudDialogflowCxV3SessionEntityType;
import org.openapitools.client.model.GoogleTypeLatLng;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for GoogleCloudDialogflowCxV3QueryParameters
 */
public class GoogleCloudDialogflowCxV3QueryParametersTest {
    private final GoogleCloudDialogflowCxV3QueryParameters model = new GoogleCloudDialogflowCxV3QueryParameters();

    /**
     * Model tests for GoogleCloudDialogflowCxV3QueryParameters
     */
    @Test
    public void testGoogleCloudDialogflowCxV3QueryParameters() {
        // TODO: test GoogleCloudDialogflowCxV3QueryParameters
    }

    /**
     * Test the property 'analyzeQueryTextSentiment'
     */
    @Test
    public void analyzeQueryTextSentimentTest() {
        // TODO: test analyzeQueryTextSentiment
    }

    /**
     * Test the property 'channel'
     */
    @Test
    public void channelTest() {
        // TODO: test channel
    }

    /**
     * Test the property 'currentPage'
     */
    @Test
    public void currentPageTest() {
        // TODO: test currentPage
    }

    /**
     * Test the property 'disableWebhook'
     */
    @Test
    public void disableWebhookTest() {
        // TODO: test disableWebhook
    }

    /**
     * Test the property 'endUserMetadata'
     */
    @Test
    public void endUserMetadataTest() {
        // TODO: test endUserMetadata
    }

    /**
     * Test the property 'flowVersions'
     */
    @Test
    public void flowVersionsTest() {
        // TODO: test flowVersions
    }

    /**
     * Test the property 'geoLocation'
     */
    @Test
    public void geoLocationTest() {
        // TODO: test geoLocation
    }

    /**
     * Test the property 'parameters'
     */
    @Test
    public void parametersTest() {
        // TODO: test parameters
    }

    /**
     * Test the property 'payload'
     */
    @Test
    public void payloadTest() {
        // TODO: test payload
    }

    /**
     * Test the property 'searchConfig'
     */
    @Test
    public void searchConfigTest() {
        // TODO: test searchConfig
    }

    /**
     * Test the property 'sessionEntityTypes'
     */
    @Test
    public void sessionEntityTypesTest() {
        // TODO: test sessionEntityTypes
    }

    /**
     * Test the property 'sessionTtl'
     */
    @Test
    public void sessionTtlTest() {
        // TODO: test sessionTtl
    }

    /**
     * Test the property 'timeZone'
     */
    @Test
    public void timeZoneTest() {
        // TODO: test timeZone
    }

    /**
     * Test the property 'webhookHeaders'
     */
    @Test
    public void webhookHeadersTest() {
        // TODO: test webhookHeaders
    }

}
