/*
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudDialogflowV2Context;
import org.openapitools.client.model.GoogleCloudDialogflowV2IntentFollowupIntentInfo;
import org.openapitools.client.model.GoogleCloudDialogflowV2IntentMessage;
import org.openapitools.client.model.GoogleCloudDialogflowV2IntentParameter;
import org.openapitools.client.model.GoogleCloudDialogflowV2IntentTrainingPhrase;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for GoogleCloudDialogflowV2Intent
 */
public class GoogleCloudDialogflowV2IntentTest {
    private final GoogleCloudDialogflowV2Intent model = new GoogleCloudDialogflowV2Intent();

    /**
     * Model tests for GoogleCloudDialogflowV2Intent
     */
    @Test
    public void testGoogleCloudDialogflowV2Intent() {
        // TODO: test GoogleCloudDialogflowV2Intent
    }

    /**
     * Test the property 'action'
     */
    @Test
    public void actionTest() {
        // TODO: test action
    }

    /**
     * Test the property 'defaultResponsePlatforms'
     */
    @Test
    public void defaultResponsePlatformsTest() {
        // TODO: test defaultResponsePlatforms
    }

    /**
     * Test the property 'displayName'
     */
    @Test
    public void displayNameTest() {
        // TODO: test displayName
    }

    /**
     * Test the property 'endInteraction'
     */
    @Test
    public void endInteractionTest() {
        // TODO: test endInteraction
    }

    /**
     * Test the property 'events'
     */
    @Test
    public void eventsTest() {
        // TODO: test events
    }

    /**
     * Test the property 'followupIntentInfo'
     */
    @Test
    public void followupIntentInfoTest() {
        // TODO: test followupIntentInfo
    }

    /**
     * Test the property 'inputContextNames'
     */
    @Test
    public void inputContextNamesTest() {
        // TODO: test inputContextNames
    }

    /**
     * Test the property 'isFallback'
     */
    @Test
    public void isFallbackTest() {
        // TODO: test isFallback
    }

    /**
     * Test the property 'liveAgentHandoff'
     */
    @Test
    public void liveAgentHandoffTest() {
        // TODO: test liveAgentHandoff
    }

    /**
     * Test the property 'messages'
     */
    @Test
    public void messagesTest() {
        // TODO: test messages
    }

    /**
     * Test the property 'mlDisabled'
     */
    @Test
    public void mlDisabledTest() {
        // TODO: test mlDisabled
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'outputContexts'
     */
    @Test
    public void outputContextsTest() {
        // TODO: test outputContexts
    }

    /**
     * Test the property 'parameters'
     */
    @Test
    public void parametersTest() {
        // TODO: test parameters
    }

    /**
     * Test the property 'parentFollowupIntentName'
     */
    @Test
    public void parentFollowupIntentNameTest() {
        // TODO: test parentFollowupIntentName
    }

    /**
     * Test the property 'priority'
     */
    @Test
    public void priorityTest() {
        // TODO: test priority
    }

    /**
     * Test the property 'resetContexts'
     */
    @Test
    public void resetContextsTest() {
        // TODO: test resetContexts
    }

    /**
     * Test the property 'rootFollowupIntentName'
     */
    @Test
    public void rootFollowupIntentNameTest() {
        // TODO: test rootFollowupIntentName
    }

    /**
     * Test the property 'trainingPhrases'
     */
    @Test
    public void trainingPhrasesTest() {
        // TODO: test trainingPhrases
    }

    /**
     * Test the property 'webhookState'
     */
    @Test
    public void webhookStateTest() {
        // TODO: test webhookState
    }

}
