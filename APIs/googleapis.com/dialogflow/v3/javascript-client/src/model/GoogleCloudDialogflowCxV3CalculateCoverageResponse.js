/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudDialogflowCxV3IntentCoverage from './GoogleCloudDialogflowCxV3IntentCoverage';
import GoogleCloudDialogflowCxV3TransitionCoverage from './GoogleCloudDialogflowCxV3TransitionCoverage';
import GoogleCloudDialogflowCxV3TransitionRouteGroupCoverage from './GoogleCloudDialogflowCxV3TransitionRouteGroupCoverage';

/**
 * The GoogleCloudDialogflowCxV3CalculateCoverageResponse model module.
 * @module model/GoogleCloudDialogflowCxV3CalculateCoverageResponse
 * @version v3
 */
class GoogleCloudDialogflowCxV3CalculateCoverageResponse {
    /**
     * Constructs a new <code>GoogleCloudDialogflowCxV3CalculateCoverageResponse</code>.
     * The response message for TestCases.CalculateCoverage.
     * @alias module:model/GoogleCloudDialogflowCxV3CalculateCoverageResponse
     */
    constructor() { 
        
        GoogleCloudDialogflowCxV3CalculateCoverageResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDialogflowCxV3CalculateCoverageResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDialogflowCxV3CalculateCoverageResponse} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDialogflowCxV3CalculateCoverageResponse} The populated <code>GoogleCloudDialogflowCxV3CalculateCoverageResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDialogflowCxV3CalculateCoverageResponse();

            if (data.hasOwnProperty('agent')) {
                obj['agent'] = ApiClient.convertToType(data['agent'], 'String');
            }
            if (data.hasOwnProperty('intentCoverage')) {
                obj['intentCoverage'] = GoogleCloudDialogflowCxV3IntentCoverage.constructFromObject(data['intentCoverage']);
            }
            if (data.hasOwnProperty('routeGroupCoverage')) {
                obj['routeGroupCoverage'] = GoogleCloudDialogflowCxV3TransitionRouteGroupCoverage.constructFromObject(data['routeGroupCoverage']);
            }
            if (data.hasOwnProperty('transitionCoverage')) {
                obj['transitionCoverage'] = GoogleCloudDialogflowCxV3TransitionCoverage.constructFromObject(data['transitionCoverage']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDialogflowCxV3CalculateCoverageResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDialogflowCxV3CalculateCoverageResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['agent'] && !(typeof data['agent'] === 'string' || data['agent'] instanceof String)) {
            throw new Error("Expected the field `agent` to be a primitive type in the JSON string but got " + data['agent']);
        }
        // validate the optional field `intentCoverage`
        if (data['intentCoverage']) { // data not null
          GoogleCloudDialogflowCxV3IntentCoverage.validateJSON(data['intentCoverage']);
        }
        // validate the optional field `routeGroupCoverage`
        if (data['routeGroupCoverage']) { // data not null
          GoogleCloudDialogflowCxV3TransitionRouteGroupCoverage.validateJSON(data['routeGroupCoverage']);
        }
        // validate the optional field `transitionCoverage`
        if (data['transitionCoverage']) { // data not null
          GoogleCloudDialogflowCxV3TransitionCoverage.validateJSON(data['transitionCoverage']);
        }

        return true;
    }


}



/**
 * The agent to calculate coverage for. Format: `projects//locations//agents/`.
 * @member {String} agent
 */
GoogleCloudDialogflowCxV3CalculateCoverageResponse.prototype['agent'] = undefined;

/**
 * @member {module:model/GoogleCloudDialogflowCxV3IntentCoverage} intentCoverage
 */
GoogleCloudDialogflowCxV3CalculateCoverageResponse.prototype['intentCoverage'] = undefined;

/**
 * @member {module:model/GoogleCloudDialogflowCxV3TransitionRouteGroupCoverage} routeGroupCoverage
 */
GoogleCloudDialogflowCxV3CalculateCoverageResponse.prototype['routeGroupCoverage'] = undefined;

/**
 * @member {module:model/GoogleCloudDialogflowCxV3TransitionCoverage} transitionCoverage
 */
GoogleCloudDialogflowCxV3CalculateCoverageResponse.prototype['transitionCoverage'] = undefined;






export default GoogleCloudDialogflowCxV3CalculateCoverageResponse;

