/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudDialogflowCxV3NluSettings from './GoogleCloudDialogflowCxV3NluSettings';

/**
 * The GoogleCloudDialogflowCxV3Version model module.
 * @module model/GoogleCloudDialogflowCxV3Version
 * @version v3
 */
class GoogleCloudDialogflowCxV3Version {
    /**
     * Constructs a new <code>GoogleCloudDialogflowCxV3Version</code>.
     * Represents a version of a flow.
     * @alias module:model/GoogleCloudDialogflowCxV3Version
     */
    constructor() { 
        
        GoogleCloudDialogflowCxV3Version.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDialogflowCxV3Version</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDialogflowCxV3Version} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDialogflowCxV3Version} The populated <code>GoogleCloudDialogflowCxV3Version</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDialogflowCxV3Version();

            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('nluSettings')) {
                obj['nluSettings'] = GoogleCloudDialogflowCxV3NluSettings.constructFromObject(data['nluSettings']);
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDialogflowCxV3Version</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDialogflowCxV3Version</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `nluSettings`
        if (data['nluSettings']) { // data not null
          GoogleCloudDialogflowCxV3NluSettings.validateJSON(data['nluSettings']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }

        return true;
    }


}



/**
 * Output only. Create time of the version.
 * @member {String} createTime
 */
GoogleCloudDialogflowCxV3Version.prototype['createTime'] = undefined;

/**
 * The description of the version. The maximum length is 500 characters. If exceeded, the request is rejected.
 * @member {String} description
 */
GoogleCloudDialogflowCxV3Version.prototype['description'] = undefined;

/**
 * Required. The human-readable name of the version. Limit of 64 characters.
 * @member {String} displayName
 */
GoogleCloudDialogflowCxV3Version.prototype['displayName'] = undefined;

/**
 * Format: projects//locations//agents//flows//versions/. Version ID is a self-increasing number generated by Dialogflow upon version creation.
 * @member {String} name
 */
GoogleCloudDialogflowCxV3Version.prototype['name'] = undefined;

/**
 * @member {module:model/GoogleCloudDialogflowCxV3NluSettings} nluSettings
 */
GoogleCloudDialogflowCxV3Version.prototype['nluSettings'] = undefined;

/**
 * Output only. The state of this version. This field is read-only and cannot be set by create and update methods.
 * @member {module:model/GoogleCloudDialogflowCxV3Version.StateEnum} state
 */
GoogleCloudDialogflowCxV3Version.prototype['state'] = undefined;





/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudDialogflowCxV3Version['StateEnum'] = {

    /**
     * value: "STATE_UNSPECIFIED"
     * @const
     */
    "STATE_UNSPECIFIED": "STATE_UNSPECIFIED",

    /**
     * value: "RUNNING"
     * @const
     */
    "RUNNING": "RUNNING",

    /**
     * value: "SUCCEEDED"
     * @const
     */
    "SUCCEEDED": "SUCCEEDED",

    /**
     * value: "FAILED"
     * @const
     */
    "FAILED": "FAILED"
};



export default GoogleCloudDialogflowCxV3Version;

