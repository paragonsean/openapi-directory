/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudDialogflowCxV3SynthesizeSpeechConfig from './GoogleCloudDialogflowCxV3SynthesizeSpeechConfig';

/**
 * The GoogleCloudDialogflowCxV3OutputAudioConfig model module.
 * @module model/GoogleCloudDialogflowCxV3OutputAudioConfig
 * @version v3
 */
class GoogleCloudDialogflowCxV3OutputAudioConfig {
    /**
     * Constructs a new <code>GoogleCloudDialogflowCxV3OutputAudioConfig</code>.
     * Instructs the speech synthesizer how to generate the output audio content.
     * @alias module:model/GoogleCloudDialogflowCxV3OutputAudioConfig
     */
    constructor() { 
        
        GoogleCloudDialogflowCxV3OutputAudioConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDialogflowCxV3OutputAudioConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDialogflowCxV3OutputAudioConfig} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDialogflowCxV3OutputAudioConfig} The populated <code>GoogleCloudDialogflowCxV3OutputAudioConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDialogflowCxV3OutputAudioConfig();

            if (data.hasOwnProperty('audioEncoding')) {
                obj['audioEncoding'] = ApiClient.convertToType(data['audioEncoding'], 'String');
            }
            if (data.hasOwnProperty('sampleRateHertz')) {
                obj['sampleRateHertz'] = ApiClient.convertToType(data['sampleRateHertz'], 'Number');
            }
            if (data.hasOwnProperty('synthesizeSpeechConfig')) {
                obj['synthesizeSpeechConfig'] = GoogleCloudDialogflowCxV3SynthesizeSpeechConfig.constructFromObject(data['synthesizeSpeechConfig']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDialogflowCxV3OutputAudioConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDialogflowCxV3OutputAudioConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['audioEncoding'] && !(typeof data['audioEncoding'] === 'string' || data['audioEncoding'] instanceof String)) {
            throw new Error("Expected the field `audioEncoding` to be a primitive type in the JSON string but got " + data['audioEncoding']);
        }
        // validate the optional field `synthesizeSpeechConfig`
        if (data['synthesizeSpeechConfig']) { // data not null
          GoogleCloudDialogflowCxV3SynthesizeSpeechConfig.validateJSON(data['synthesizeSpeechConfig']);
        }

        return true;
    }


}



/**
 * Required. Audio encoding of the synthesized audio content.
 * @member {module:model/GoogleCloudDialogflowCxV3OutputAudioConfig.AudioEncodingEnum} audioEncoding
 */
GoogleCloudDialogflowCxV3OutputAudioConfig.prototype['audioEncoding'] = undefined;

/**
 * Optional. The synthesis sample rate (in hertz) for this audio. If not provided, then the synthesizer will use the default sample rate based on the audio encoding. If this is different from the voice's natural sample rate, then the synthesizer will honor this request by converting to the desired sample rate (which might result in worse audio quality).
 * @member {Number} sampleRateHertz
 */
GoogleCloudDialogflowCxV3OutputAudioConfig.prototype['sampleRateHertz'] = undefined;

/**
 * @member {module:model/GoogleCloudDialogflowCxV3SynthesizeSpeechConfig} synthesizeSpeechConfig
 */
GoogleCloudDialogflowCxV3OutputAudioConfig.prototype['synthesizeSpeechConfig'] = undefined;





/**
 * Allowed values for the <code>audioEncoding</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudDialogflowCxV3OutputAudioConfig['AudioEncodingEnum'] = {

    /**
     * value: "OUTPUT_AUDIO_ENCODING_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "OUTPUT_AUDIO_ENCODING_UNSPECIFIED",

    /**
     * value: "OUTPUT_AUDIO_ENCODING_LINEAR_16"
     * @const
     */
    "LINEAR_16": "OUTPUT_AUDIO_ENCODING_LINEAR_16",

    /**
     * value: "OUTPUT_AUDIO_ENCODING_MP3"
     * @const
     */
    "MP3": "OUTPUT_AUDIO_ENCODING_MP3",

    /**
     * value: "OUTPUT_AUDIO_ENCODING_MP3_64_KBPS"
     * @const
     */
    "MP3_64_KBPS": "OUTPUT_AUDIO_ENCODING_MP3_64_KBPS",

    /**
     * value: "OUTPUT_AUDIO_ENCODING_OGG_OPUS"
     * @const
     */
    "OGG_OPUS": "OUTPUT_AUDIO_ENCODING_OGG_OPUS",

    /**
     * value: "OUTPUT_AUDIO_ENCODING_MULAW"
     * @const
     */
    "MULAW": "OUTPUT_AUDIO_ENCODING_MULAW"
};



export default GoogleCloudDialogflowCxV3OutputAudioConfig;

