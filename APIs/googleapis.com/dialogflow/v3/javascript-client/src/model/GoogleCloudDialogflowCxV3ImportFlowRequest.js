/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudDialogflowCxV3FlowImportStrategy from './GoogleCloudDialogflowCxV3FlowImportStrategy';

/**
 * The GoogleCloudDialogflowCxV3ImportFlowRequest model module.
 * @module model/GoogleCloudDialogflowCxV3ImportFlowRequest
 * @version v3
 */
class GoogleCloudDialogflowCxV3ImportFlowRequest {
    /**
     * Constructs a new <code>GoogleCloudDialogflowCxV3ImportFlowRequest</code>.
     * The request message for Flows.ImportFlow.
     * @alias module:model/GoogleCloudDialogflowCxV3ImportFlowRequest
     */
    constructor() { 
        
        GoogleCloudDialogflowCxV3ImportFlowRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDialogflowCxV3ImportFlowRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDialogflowCxV3ImportFlowRequest} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDialogflowCxV3ImportFlowRequest} The populated <code>GoogleCloudDialogflowCxV3ImportFlowRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDialogflowCxV3ImportFlowRequest();

            if (data.hasOwnProperty('flowContent')) {
                obj['flowContent'] = ApiClient.convertToType(data['flowContent'], 'Blob');
            }
            if (data.hasOwnProperty('flowImportStrategy')) {
                obj['flowImportStrategy'] = GoogleCloudDialogflowCxV3FlowImportStrategy.constructFromObject(data['flowImportStrategy']);
            }
            if (data.hasOwnProperty('flowUri')) {
                obj['flowUri'] = ApiClient.convertToType(data['flowUri'], 'String');
            }
            if (data.hasOwnProperty('importOption')) {
                obj['importOption'] = ApiClient.convertToType(data['importOption'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDialogflowCxV3ImportFlowRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDialogflowCxV3ImportFlowRequest</code>.
     */
    static validateJSON(data) {
        // validate the optional field `flowImportStrategy`
        if (data['flowImportStrategy']) { // data not null
          GoogleCloudDialogflowCxV3FlowImportStrategy.validateJSON(data['flowImportStrategy']);
        }
        // ensure the json data is a string
        if (data['flowUri'] && !(typeof data['flowUri'] === 'string' || data['flowUri'] instanceof String)) {
            throw new Error("Expected the field `flowUri` to be a primitive type in the JSON string but got " + data['flowUri']);
        }
        // ensure the json data is a string
        if (data['importOption'] && !(typeof data['importOption'] === 'string' || data['importOption'] instanceof String)) {
            throw new Error("Expected the field `importOption` to be a primitive type in the JSON string but got " + data['importOption']);
        }

        return true;
    }


}



/**
 * Uncompressed raw byte content for flow.
 * @member {Blob} flowContent
 */
GoogleCloudDialogflowCxV3ImportFlowRequest.prototype['flowContent'] = undefined;

/**
 * @member {module:model/GoogleCloudDialogflowCxV3FlowImportStrategy} flowImportStrategy
 */
GoogleCloudDialogflowCxV3ImportFlowRequest.prototype['flowImportStrategy'] = undefined;

/**
 * The [Google Cloud Storage](https://cloud.google.com/storage/docs/) URI to import flow from. The format of this URI must be `gs:///`. Dialogflow performs a read operation for the Cloud Storage object on the caller's behalf, so your request authentication must have read permissions for the object. For more information, see [Dialogflow access control](https://cloud.google.com/dialogflow/cx/docs/concept/access-control#storage).
 * @member {String} flowUri
 */
GoogleCloudDialogflowCxV3ImportFlowRequest.prototype['flowUri'] = undefined;

/**
 * Flow import mode. If not specified, `KEEP` is assumed.
 * @member {module:model/GoogleCloudDialogflowCxV3ImportFlowRequest.ImportOptionEnum} importOption
 */
GoogleCloudDialogflowCxV3ImportFlowRequest.prototype['importOption'] = undefined;





/**
 * Allowed values for the <code>importOption</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudDialogflowCxV3ImportFlowRequest['ImportOptionEnum'] = {

    /**
     * value: "IMPORT_OPTION_UNSPECIFIED"
     * @const
     */
    "IMPORT_OPTION_UNSPECIFIED": "IMPORT_OPTION_UNSPECIFIED",

    /**
     * value: "KEEP"
     * @const
     */
    "KEEP": "KEEP",

    /**
     * value: "FALLBACK"
     * @const
     */
    "FALLBACK": "FALLBACK"
};



export default GoogleCloudDialogflowCxV3ImportFlowRequest;

