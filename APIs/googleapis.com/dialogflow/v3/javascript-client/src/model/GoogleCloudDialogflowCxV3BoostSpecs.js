/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudDialogflowCxV3BoostSpec from './GoogleCloudDialogflowCxV3BoostSpec';

/**
 * The GoogleCloudDialogflowCxV3BoostSpecs model module.
 * @module model/GoogleCloudDialogflowCxV3BoostSpecs
 * @version v3
 */
class GoogleCloudDialogflowCxV3BoostSpecs {
    /**
     * Constructs a new <code>GoogleCloudDialogflowCxV3BoostSpecs</code>.
     * Boost specifications for data stores.
     * @alias module:model/GoogleCloudDialogflowCxV3BoostSpecs
     */
    constructor() { 
        
        GoogleCloudDialogflowCxV3BoostSpecs.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDialogflowCxV3BoostSpecs</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDialogflowCxV3BoostSpecs} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDialogflowCxV3BoostSpecs} The populated <code>GoogleCloudDialogflowCxV3BoostSpecs</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDialogflowCxV3BoostSpecs();

            if (data.hasOwnProperty('dataStores')) {
                obj['dataStores'] = ApiClient.convertToType(data['dataStores'], ['String']);
            }
            if (data.hasOwnProperty('spec')) {
                obj['spec'] = ApiClient.convertToType(data['spec'], [GoogleCloudDialogflowCxV3BoostSpec]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDialogflowCxV3BoostSpecs</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDialogflowCxV3BoostSpecs</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['dataStores'])) {
            throw new Error("Expected the field `dataStores` to be an array in the JSON data but got " + data['dataStores']);
        }
        if (data['spec']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['spec'])) {
                throw new Error("Expected the field `spec` to be an array in the JSON data but got " + data['spec']);
            }
            // validate the optional field `spec` (array)
            for (const item of data['spec']) {
                GoogleCloudDialogflowCxV3BoostSpec.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Optional. Data Stores where the boosting configuration is applied. The full names of the referenced data stores. Formats: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}` `projects/{project}/locations/{location}/dataStores/{data_store}`
 * @member {Array.<String>} dataStores
 */
GoogleCloudDialogflowCxV3BoostSpecs.prototype['dataStores'] = undefined;

/**
 * Optional. A list of boosting specifications.
 * @member {Array.<module:model/GoogleCloudDialogflowCxV3BoostSpec>} spec
 */
GoogleCloudDialogflowCxV3BoostSpecs.prototype['spec'] = undefined;






export default GoogleCloudDialogflowCxV3BoostSpecs;

