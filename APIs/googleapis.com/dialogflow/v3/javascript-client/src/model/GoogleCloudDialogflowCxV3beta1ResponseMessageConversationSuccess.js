/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudDialogflowCxV3beta1ResponseMessageConversationSuccess model module.
 * @module model/GoogleCloudDialogflowCxV3beta1ResponseMessageConversationSuccess
 * @version v3
 */
class GoogleCloudDialogflowCxV3beta1ResponseMessageConversationSuccess {
    /**
     * Constructs a new <code>GoogleCloudDialogflowCxV3beta1ResponseMessageConversationSuccess</code>.
     * Indicates that the conversation succeeded, i.e., the bot handled the issue that the customer talked to it about. Dialogflow only uses this to determine which conversations should be counted as successful and doesn&#39;t process the metadata in this message in any way. Note that Dialogflow also considers conversations that get to the conversation end page as successful even if they don&#39;t return ConversationSuccess. You may set this, for example: * In the entry_fulfillment of a Page if entering the page indicates that the conversation succeeded. * In a webhook response when you determine that you handled the customer issue.
     * @alias module:model/GoogleCloudDialogflowCxV3beta1ResponseMessageConversationSuccess
     */
    constructor() { 
        
        GoogleCloudDialogflowCxV3beta1ResponseMessageConversationSuccess.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDialogflowCxV3beta1ResponseMessageConversationSuccess</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDialogflowCxV3beta1ResponseMessageConversationSuccess} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDialogflowCxV3beta1ResponseMessageConversationSuccess} The populated <code>GoogleCloudDialogflowCxV3beta1ResponseMessageConversationSuccess</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDialogflowCxV3beta1ResponseMessageConversationSuccess();

            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ApiClient.convertToType(data['metadata'], {'String': Object});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDialogflowCxV3beta1ResponseMessageConversationSuccess</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDialogflowCxV3beta1ResponseMessageConversationSuccess</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * Custom metadata. Dialogflow doesn't impose any structure on this.
 * @member {Object.<String, Object>} metadata
 */
GoogleCloudDialogflowCxV3beta1ResponseMessageConversationSuccess.prototype['metadata'] = undefined;






export default GoogleCloudDialogflowCxV3beta1ResponseMessageConversationSuccess;

