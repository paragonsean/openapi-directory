/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudDialogflowCxV3Changelog model module.
 * @module model/GoogleCloudDialogflowCxV3Changelog
 * @version v3
 */
class GoogleCloudDialogflowCxV3Changelog {
    /**
     * Constructs a new <code>GoogleCloudDialogflowCxV3Changelog</code>.
     * Changelogs represents a change made to a given agent.
     * @alias module:model/GoogleCloudDialogflowCxV3Changelog
     */
    constructor() { 
        
        GoogleCloudDialogflowCxV3Changelog.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDialogflowCxV3Changelog</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDialogflowCxV3Changelog} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDialogflowCxV3Changelog} The populated <code>GoogleCloudDialogflowCxV3Changelog</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDialogflowCxV3Changelog();

            if (data.hasOwnProperty('action')) {
                obj['action'] = ApiClient.convertToType(data['action'], 'String');
            }
            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('languageCode')) {
                obj['languageCode'] = ApiClient.convertToType(data['languageCode'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('resource')) {
                obj['resource'] = ApiClient.convertToType(data['resource'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('userEmail')) {
                obj['userEmail'] = ApiClient.convertToType(data['userEmail'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDialogflowCxV3Changelog</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDialogflowCxV3Changelog</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['action'] && !(typeof data['action'] === 'string' || data['action'] instanceof String)) {
            throw new Error("Expected the field `action` to be a primitive type in the JSON string but got " + data['action']);
        }
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['languageCode'] && !(typeof data['languageCode'] === 'string' || data['languageCode'] instanceof String)) {
            throw new Error("Expected the field `languageCode` to be a primitive type in the JSON string but got " + data['languageCode']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['resource'] && !(typeof data['resource'] === 'string' || data['resource'] instanceof String)) {
            throw new Error("Expected the field `resource` to be a primitive type in the JSON string but got " + data['resource']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['userEmail'] && !(typeof data['userEmail'] === 'string' || data['userEmail'] instanceof String)) {
            throw new Error("Expected the field `userEmail` to be a primitive type in the JSON string but got " + data['userEmail']);
        }

        return true;
    }


}



/**
 * The action of the change.
 * @member {String} action
 */
GoogleCloudDialogflowCxV3Changelog.prototype['action'] = undefined;

/**
 * The timestamp of the change.
 * @member {String} createTime
 */
GoogleCloudDialogflowCxV3Changelog.prototype['createTime'] = undefined;

/**
 * The affected resource display name of the change.
 * @member {String} displayName
 */
GoogleCloudDialogflowCxV3Changelog.prototype['displayName'] = undefined;

/**
 * The affected language code of the change.
 * @member {String} languageCode
 */
GoogleCloudDialogflowCxV3Changelog.prototype['languageCode'] = undefined;

/**
 * The unique identifier of the changelog. Format: `projects//locations//agents//changelogs/`.
 * @member {String} name
 */
GoogleCloudDialogflowCxV3Changelog.prototype['name'] = undefined;

/**
 * The affected resource name of the change.
 * @member {String} resource
 */
GoogleCloudDialogflowCxV3Changelog.prototype['resource'] = undefined;

/**
 * The affected resource type.
 * @member {String} type
 */
GoogleCloudDialogflowCxV3Changelog.prototype['type'] = undefined;

/**
 * Email address of the authenticated user.
 * @member {String} userEmail
 */
GoogleCloudDialogflowCxV3Changelog.prototype['userEmail'] = undefined;






export default GoogleCloudDialogflowCxV3Changelog;

