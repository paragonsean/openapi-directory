/**
 * Dialogflow API
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudDialogflowCxV3DataStoreConnection model module.
 * @module model/GoogleCloudDialogflowCxV3DataStoreConnection
 * @version v3
 */
class GoogleCloudDialogflowCxV3DataStoreConnection {
    /**
     * Constructs a new <code>GoogleCloudDialogflowCxV3DataStoreConnection</code>.
     * A data store connection. It represents a data store in Discovery Engine and the type of the contents it contains.
     * @alias module:model/GoogleCloudDialogflowCxV3DataStoreConnection
     */
    constructor() { 
        
        GoogleCloudDialogflowCxV3DataStoreConnection.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDialogflowCxV3DataStoreConnection</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDialogflowCxV3DataStoreConnection} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDialogflowCxV3DataStoreConnection} The populated <code>GoogleCloudDialogflowCxV3DataStoreConnection</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDialogflowCxV3DataStoreConnection();

            if (data.hasOwnProperty('dataStore')) {
                obj['dataStore'] = ApiClient.convertToType(data['dataStore'], 'String');
            }
            if (data.hasOwnProperty('dataStoreType')) {
                obj['dataStoreType'] = ApiClient.convertToType(data['dataStoreType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDialogflowCxV3DataStoreConnection</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDialogflowCxV3DataStoreConnection</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['dataStore'] && !(typeof data['dataStore'] === 'string' || data['dataStore'] instanceof String)) {
            throw new Error("Expected the field `dataStore` to be a primitive type in the JSON string but got " + data['dataStore']);
        }
        // ensure the json data is a string
        if (data['dataStoreType'] && !(typeof data['dataStoreType'] === 'string' || data['dataStoreType'] instanceof String)) {
            throw new Error("Expected the field `dataStoreType` to be a primitive type in the JSON string but got " + data['dataStoreType']);
        }

        return true;
    }


}



/**
 * The full name of the referenced data store. Formats: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}` `projects/{project}/locations/{location}/dataStores/{data_store}`
 * @member {String} dataStore
 */
GoogleCloudDialogflowCxV3DataStoreConnection.prototype['dataStore'] = undefined;

/**
 * The type of the connected data store.
 * @member {module:model/GoogleCloudDialogflowCxV3DataStoreConnection.DataStoreTypeEnum} dataStoreType
 */
GoogleCloudDialogflowCxV3DataStoreConnection.prototype['dataStoreType'] = undefined;





/**
 * Allowed values for the <code>dataStoreType</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudDialogflowCxV3DataStoreConnection['DataStoreTypeEnum'] = {

    /**
     * value: "DATA_STORE_TYPE_UNSPECIFIED"
     * @const
     */
    "DATA_STORE_TYPE_UNSPECIFIED": "DATA_STORE_TYPE_UNSPECIFIED",

    /**
     * value: "PUBLIC_WEB"
     * @const
     */
    "PUBLIC_WEB": "PUBLIC_WEB",

    /**
     * value: "UNSTRUCTURED"
     * @const
     */
    "UNSTRUCTURED": "UNSTRUCTURED",

    /**
     * value: "STRUCTURED"
     * @const
     */
    "STRUCTURED": "STRUCTURED"
};



export default GoogleCloudDialogflowCxV3DataStoreConnection;

