/*
 * Ad Experience Report API
 * Views Ad Experience Report data, and gets a list of sites that have a significant number of annoying ads.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A site&#39;s Ad Experience Report summary on a single platform.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:38:50.298781-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class PlatformSummary {
  /**
   * The site&#39;s Ad Experience Report status on this platform.
   */
  @JsonAdapter(BetterAdsStatusEnum.Adapter.class)
  public enum BetterAdsStatusEnum {
    UNKNOWN("UNKNOWN"),
    
    PASSING("PASSING"),
    
    WARNING("WARNING"),
    
    FAILING("FAILING");

    private String value;

    BetterAdsStatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static BetterAdsStatusEnum fromValue(String value) {
      for (BetterAdsStatusEnum b : BetterAdsStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<BetterAdsStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final BetterAdsStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public BetterAdsStatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return BetterAdsStatusEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      BetterAdsStatusEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_BETTER_ADS_STATUS = "betterAdsStatus";
  @SerializedName(SERIALIZED_NAME_BETTER_ADS_STATUS)
  private BetterAdsStatusEnum betterAdsStatus;

  public static final String SERIALIZED_NAME_ENFORCEMENT_TIME = "enforcementTime";
  @SerializedName(SERIALIZED_NAME_ENFORCEMENT_TIME)
  private String enforcementTime;

  /**
   * The site&#39;s [enforcement status](https://support.google.com/webtools/answer/7308033) on this platform.
   */
  @JsonAdapter(FilterStatusEnum.Adapter.class)
  public enum FilterStatusEnum {
    UNKNOWN("UNKNOWN"),
    
    TRUE("true"),
    
    FALSE("false"),
    
    PAUSED("PAUSED"),
    
    PENDING("PENDING");

    private String value;

    FilterStatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static FilterStatusEnum fromValue(String value) {
      for (FilterStatusEnum b : FilterStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<FilterStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final FilterStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public FilterStatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return FilterStatusEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      FilterStatusEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_FILTER_STATUS = "filterStatus";
  @SerializedName(SERIALIZED_NAME_FILTER_STATUS)
  private FilterStatusEnum filterStatus;

  public static final String SERIALIZED_NAME_LAST_CHANGE_TIME = "lastChangeTime";
  @SerializedName(SERIALIZED_NAME_LAST_CHANGE_TIME)
  private String lastChangeTime;

  /**
   * Gets or Sets region
   */
  @JsonAdapter(RegionEnum.Adapter.class)
  public enum RegionEnum {
    UNKNOWN("REGION_UNKNOWN"),
    
    A("REGION_A"),
    
    B("REGION_B"),
    
    C("REGION_C");

    private String value;

    RegionEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static RegionEnum fromValue(String value) {
      for (RegionEnum b : RegionEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<RegionEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RegionEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public RegionEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return RegionEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      RegionEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_REGION = "region";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_REGION)
  private List<RegionEnum> region = new ArrayList<>();

  public static final String SERIALIZED_NAME_REPORT_URL = "reportUrl";
  @SerializedName(SERIALIZED_NAME_REPORT_URL)
  private String reportUrl;

  public static final String SERIALIZED_NAME_UNDER_REVIEW = "underReview";
  @SerializedName(SERIALIZED_NAME_UNDER_REVIEW)
  private Boolean underReview;

  public PlatformSummary() {
  }

  public PlatformSummary betterAdsStatus(BetterAdsStatusEnum betterAdsStatus) {
    this.betterAdsStatus = betterAdsStatus;
    return this;
  }

  /**
   * The site&#39;s Ad Experience Report status on this platform.
   * @return betterAdsStatus
   */
  @javax.annotation.Nullable
  public BetterAdsStatusEnum getBetterAdsStatus() {
    return betterAdsStatus;
  }

  public void setBetterAdsStatus(BetterAdsStatusEnum betterAdsStatus) {
    this.betterAdsStatus = betterAdsStatus;
  }


  public PlatformSummary enforcementTime(String enforcementTime) {
    this.enforcementTime = enforcementTime;
    return this;
  }

  /**
   * The time at which [enforcement](https://support.google.com/webtools/answer/7308033) against the site began or will begin on this platform. Not set when the filter_status is OFF.
   * @return enforcementTime
   */
  @javax.annotation.Nullable
  public String getEnforcementTime() {
    return enforcementTime;
  }

  public void setEnforcementTime(String enforcementTime) {
    this.enforcementTime = enforcementTime;
  }


  public PlatformSummary filterStatus(FilterStatusEnum filterStatus) {
    this.filterStatus = filterStatus;
    return this;
  }

  /**
   * The site&#39;s [enforcement status](https://support.google.com/webtools/answer/7308033) on this platform.
   * @return filterStatus
   */
  @javax.annotation.Nullable
  public FilterStatusEnum getFilterStatus() {
    return filterStatus;
  }

  public void setFilterStatus(FilterStatusEnum filterStatus) {
    this.filterStatus = filterStatus;
  }


  public PlatformSummary lastChangeTime(String lastChangeTime) {
    this.lastChangeTime = lastChangeTime;
    return this;
  }

  /**
   * The time at which the site&#39;s status last changed on this platform.
   * @return lastChangeTime
   */
  @javax.annotation.Nullable
  public String getLastChangeTime() {
    return lastChangeTime;
  }

  public void setLastChangeTime(String lastChangeTime) {
    this.lastChangeTime = lastChangeTime;
  }


  @Deprecated
  public PlatformSummary region(List<RegionEnum> region) {
    this.region = region;
    return this;
  }

  public PlatformSummary addRegionItem(RegionEnum regionItem) {
    if (this.region == null) {
      this.region = new ArrayList<>();
    }
    this.region.add(regionItem);
    return this;
  }

  /**
   * The site&#39;s regions on this platform. No longer populated, because there is no longer any semantic difference between sites in different regions.
   * @return region
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public List<RegionEnum> getRegion() {
    return region;
  }

  @Deprecated
  public void setRegion(List<RegionEnum> region) {
    this.region = region;
  }


  public PlatformSummary reportUrl(String reportUrl) {
    this.reportUrl = reportUrl;
    return this;
  }

  /**
   * A link to the full Ad Experience Report for the site on this platform.. Not set in ViolatingSitesResponse. Note that you must complete the [Search Console verification process](https://support.google.com/webmasters/answer/9008080) for the site before you can access the full report.
   * @return reportUrl
   */
  @javax.annotation.Nullable
  public String getReportUrl() {
    return reportUrl;
  }

  public void setReportUrl(String reportUrl) {
    this.reportUrl = reportUrl;
  }


  public PlatformSummary underReview(Boolean underReview) {
    this.underReview = underReview;
    return this;
  }

  /**
   * Whether the site is currently under review on this platform.
   * @return underReview
   */
  @javax.annotation.Nullable
  public Boolean getUnderReview() {
    return underReview;
  }

  public void setUnderReview(Boolean underReview) {
    this.underReview = underReview;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PlatformSummary platformSummary = (PlatformSummary) o;
    return Objects.equals(this.betterAdsStatus, platformSummary.betterAdsStatus) &&
        Objects.equals(this.enforcementTime, platformSummary.enforcementTime) &&
        Objects.equals(this.filterStatus, platformSummary.filterStatus) &&
        Objects.equals(this.lastChangeTime, platformSummary.lastChangeTime) &&
        Objects.equals(this.region, platformSummary.region) &&
        Objects.equals(this.reportUrl, platformSummary.reportUrl) &&
        Objects.equals(this.underReview, platformSummary.underReview);
  }

  @Override
  public int hashCode() {
    return Objects.hash(betterAdsStatus, enforcementTime, filterStatus, lastChangeTime, region, reportUrl, underReview);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PlatformSummary {\n");
    sb.append("    betterAdsStatus: ").append(toIndentedString(betterAdsStatus)).append("\n");
    sb.append("    enforcementTime: ").append(toIndentedString(enforcementTime)).append("\n");
    sb.append("    filterStatus: ").append(toIndentedString(filterStatus)).append("\n");
    sb.append("    lastChangeTime: ").append(toIndentedString(lastChangeTime)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    reportUrl: ").append(toIndentedString(reportUrl)).append("\n");
    sb.append("    underReview: ").append(toIndentedString(underReview)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("betterAdsStatus");
    openapiFields.add("enforcementTime");
    openapiFields.add("filterStatus");
    openapiFields.add("lastChangeTime");
    openapiFields.add("region");
    openapiFields.add("reportUrl");
    openapiFields.add("underReview");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PlatformSummary
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PlatformSummary.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PlatformSummary is not found in the empty JSON string", PlatformSummary.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PlatformSummary.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PlatformSummary` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("betterAdsStatus") != null && !jsonObj.get("betterAdsStatus").isJsonNull()) && !jsonObj.get("betterAdsStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `betterAdsStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("betterAdsStatus").toString()));
      }
      // validate the optional field `betterAdsStatus`
      if (jsonObj.get("betterAdsStatus") != null && !jsonObj.get("betterAdsStatus").isJsonNull()) {
        BetterAdsStatusEnum.validateJsonElement(jsonObj.get("betterAdsStatus"));
      }
      if ((jsonObj.get("enforcementTime") != null && !jsonObj.get("enforcementTime").isJsonNull()) && !jsonObj.get("enforcementTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `enforcementTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("enforcementTime").toString()));
      }
      if ((jsonObj.get("filterStatus") != null && !jsonObj.get("filterStatus").isJsonNull()) && !jsonObj.get("filterStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `filterStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("filterStatus").toString()));
      }
      // validate the optional field `filterStatus`
      if (jsonObj.get("filterStatus") != null && !jsonObj.get("filterStatus").isJsonNull()) {
        FilterStatusEnum.validateJsonElement(jsonObj.get("filterStatus"));
      }
      if ((jsonObj.get("lastChangeTime") != null && !jsonObj.get("lastChangeTime").isJsonNull()) && !jsonObj.get("lastChangeTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastChangeTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastChangeTime").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("region") != null && !jsonObj.get("region").isJsonNull() && !jsonObj.get("region").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `region` to be an array in the JSON string but got `%s`", jsonObj.get("region").toString()));
      }
      if ((jsonObj.get("reportUrl") != null && !jsonObj.get("reportUrl").isJsonNull()) && !jsonObj.get("reportUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `reportUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("reportUrl").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PlatformSummary.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PlatformSummary' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PlatformSummary> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PlatformSummary.class));

       return (TypeAdapter<T>) new TypeAdapter<PlatformSummary>() {
           @Override
           public void write(JsonWriter out, PlatformSummary value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PlatformSummary read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PlatformSummary given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PlatformSummary
   * @throws IOException if the JSON string is invalid with respect to PlatformSummary
   */
  public static PlatformSummary fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PlatformSummary.class);
  }

  /**
   * Convert an instance of PlatformSummary to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

