/**
 * Ad Experience Report API
 * Views Ad Experience Report data, and gets a list of sites that have a significant number of annoying ads.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PlatformSummary from './PlatformSummary';

/**
 * The SiteSummaryResponse model module.
 * @module model/SiteSummaryResponse
 * @version v1
 */
class SiteSummaryResponse {
    /**
     * Constructs a new <code>SiteSummaryResponse</code>.
     * Response message for GetSiteSummary.
     * @alias module:model/SiteSummaryResponse
     */
    constructor() { 
        
        SiteSummaryResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SiteSummaryResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SiteSummaryResponse} obj Optional instance to populate.
     * @return {module:model/SiteSummaryResponse} The populated <code>SiteSummaryResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SiteSummaryResponse();

            if (data.hasOwnProperty('desktopSummary')) {
                obj['desktopSummary'] = PlatformSummary.constructFromObject(data['desktopSummary']);
            }
            if (data.hasOwnProperty('mobileSummary')) {
                obj['mobileSummary'] = PlatformSummary.constructFromObject(data['mobileSummary']);
            }
            if (data.hasOwnProperty('reviewedSite')) {
                obj['reviewedSite'] = ApiClient.convertToType(data['reviewedSite'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SiteSummaryResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SiteSummaryResponse</code>.
     */
    static validateJSON(data) {
        // validate the optional field `desktopSummary`
        if (data['desktopSummary']) { // data not null
          PlatformSummary.validateJSON(data['desktopSummary']);
        }
        // validate the optional field `mobileSummary`
        if (data['mobileSummary']) { // data not null
          PlatformSummary.validateJSON(data['mobileSummary']);
        }
        // ensure the json data is a string
        if (data['reviewedSite'] && !(typeof data['reviewedSite'] === 'string' || data['reviewedSite'] instanceof String)) {
            throw new Error("Expected the field `reviewedSite` to be a primitive type in the JSON string but got " + data['reviewedSite']);
        }

        return true;
    }


}



/**
 * @member {module:model/PlatformSummary} desktopSummary
 */
SiteSummaryResponse.prototype['desktopSummary'] = undefined;

/**
 * @member {module:model/PlatformSummary} mobileSummary
 */
SiteSummaryResponse.prototype['mobileSummary'] = undefined;

/**
 * The name of the reviewed site, e.g. `google.com`.
 * @member {String} reviewedSite
 */
SiteSummaryResponse.prototype['reviewedSite'] = undefined;






export default SiteSummaryResponse;

