/**
 * Ad Exchange Buyer API II
 * Accesses the latest features for managing Authorized Buyers accounts, Real-Time Bidding configurations and auction metrics, and Marketplace programmatic deals.
 *
 * The version of the OpenAPI document: v2beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOperatingSystemTargeting.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOperatingSystemTargeting::OAIOperatingSystemTargeting(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOperatingSystemTargeting::OAIOperatingSystemTargeting() {
    this->initializeModel();
}

OAIOperatingSystemTargeting::~OAIOperatingSystemTargeting() {}

void OAIOperatingSystemTargeting::initializeModel() {

    m_operating_system_criteria_isSet = false;
    m_operating_system_criteria_isValid = false;

    m_operating_system_version_criteria_isSet = false;
    m_operating_system_version_criteria_isValid = false;
}

void OAIOperatingSystemTargeting::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOperatingSystemTargeting::fromJsonObject(QJsonObject json) {

    m_operating_system_criteria_isValid = ::OpenAPI::fromJsonValue(m_operating_system_criteria, json[QString("operatingSystemCriteria")]);
    m_operating_system_criteria_isSet = !json[QString("operatingSystemCriteria")].isNull() && m_operating_system_criteria_isValid;

    m_operating_system_version_criteria_isValid = ::OpenAPI::fromJsonValue(m_operating_system_version_criteria, json[QString("operatingSystemVersionCriteria")]);
    m_operating_system_version_criteria_isSet = !json[QString("operatingSystemVersionCriteria")].isNull() && m_operating_system_version_criteria_isValid;
}

QString OAIOperatingSystemTargeting::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOperatingSystemTargeting::asJsonObject() const {
    QJsonObject obj;
    if (m_operating_system_criteria.isSet()) {
        obj.insert(QString("operatingSystemCriteria"), ::OpenAPI::toJsonValue(m_operating_system_criteria));
    }
    if (m_operating_system_version_criteria.isSet()) {
        obj.insert(QString("operatingSystemVersionCriteria"), ::OpenAPI::toJsonValue(m_operating_system_version_criteria));
    }
    return obj;
}

OAICriteriaTargeting OAIOperatingSystemTargeting::getOperatingSystemCriteria() const {
    return m_operating_system_criteria;
}
void OAIOperatingSystemTargeting::setOperatingSystemCriteria(const OAICriteriaTargeting &operating_system_criteria) {
    m_operating_system_criteria = operating_system_criteria;
    m_operating_system_criteria_isSet = true;
}

bool OAIOperatingSystemTargeting::is_operating_system_criteria_Set() const{
    return m_operating_system_criteria_isSet;
}

bool OAIOperatingSystemTargeting::is_operating_system_criteria_Valid() const{
    return m_operating_system_criteria_isValid;
}

OAICriteriaTargeting OAIOperatingSystemTargeting::getOperatingSystemVersionCriteria() const {
    return m_operating_system_version_criteria;
}
void OAIOperatingSystemTargeting::setOperatingSystemVersionCriteria(const OAICriteriaTargeting &operating_system_version_criteria) {
    m_operating_system_version_criteria = operating_system_version_criteria;
    m_operating_system_version_criteria_isSet = true;
}

bool OAIOperatingSystemTargeting::is_operating_system_version_criteria_Set() const{
    return m_operating_system_version_criteria_isSet;
}

bool OAIOperatingSystemTargeting::is_operating_system_version_criteria_Valid() const{
    return m_operating_system_version_criteria_isValid;
}

bool OAIOperatingSystemTargeting::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_operating_system_criteria.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_operating_system_version_criteria.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOperatingSystemTargeting::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
