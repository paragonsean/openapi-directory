/**
 * Ad Exchange Buyer API II
 * Accesses the latest features for managing Authorized Buyers accounts, Real-Time Bidding configurations and auction metrics, and Marketplace programmatic deals.
 *
 * The version of the OpenAPI document: v2beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAcceptProposalRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAcceptProposalRequest::OAIAcceptProposalRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAcceptProposalRequest::OAIAcceptProposalRequest() {
    this->initializeModel();
}

OAIAcceptProposalRequest::~OAIAcceptProposalRequest() {}

void OAIAcceptProposalRequest::initializeModel() {

    m_proposal_revision_isSet = false;
    m_proposal_revision_isValid = false;
}

void OAIAcceptProposalRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAcceptProposalRequest::fromJsonObject(QJsonObject json) {

    m_proposal_revision_isValid = ::OpenAPI::fromJsonValue(m_proposal_revision, json[QString("proposalRevision")]);
    m_proposal_revision_isSet = !json[QString("proposalRevision")].isNull() && m_proposal_revision_isValid;
}

QString OAIAcceptProposalRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAcceptProposalRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_proposal_revision_isSet) {
        obj.insert(QString("proposalRevision"), ::OpenAPI::toJsonValue(m_proposal_revision));
    }
    return obj;
}

QString OAIAcceptProposalRequest::getProposalRevision() const {
    return m_proposal_revision;
}
void OAIAcceptProposalRequest::setProposalRevision(const QString &proposal_revision) {
    m_proposal_revision = proposal_revision;
    m_proposal_revision_isSet = true;
}

bool OAIAcceptProposalRequest::is_proposal_revision_Set() const{
    return m_proposal_revision_isSet;
}

bool OAIAcceptProposalRequest::is_proposal_revision_Valid() const{
    return m_proposal_revision_isValid;
}

bool OAIAcceptProposalRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_proposal_revision_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAcceptProposalRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
