/**
 * Ad Exchange Buyer API II
 * Accesses the latest features for managing Authorized Buyers accounts, Real-Time Bidding configurations and auction metrics, and Marketplace programmatic deals.
 *
 * The version of the OpenAPI document: v2beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBidMetricsRow.h
 *
 * The set of metrics that are measured in numbers of bids, representing how many bids with the specified dimension values were considered eligible at each stage of the bidding funnel;
 */

#ifndef OAIBidMetricsRow_H
#define OAIBidMetricsRow_H

#include <QJsonObject>

#include "OAIMetricValue.h"
#include "OAIRowDimensions.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMetricValue;
class OAIRowDimensions;

class OAIBidMetricsRow : public OAIObject {
public:
    OAIBidMetricsRow();
    OAIBidMetricsRow(QString json);
    ~OAIBidMetricsRow() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIMetricValue getBids() const;
    void setBids(const OAIMetricValue &bids);
    bool is_bids_Set() const;
    bool is_bids_Valid() const;

    OAIMetricValue getBidsInAuction() const;
    void setBidsInAuction(const OAIMetricValue &bids_in_auction);
    bool is_bids_in_auction_Set() const;
    bool is_bids_in_auction_Valid() const;

    OAIMetricValue getBilledImpressions() const;
    void setBilledImpressions(const OAIMetricValue &billed_impressions);
    bool is_billed_impressions_Set() const;
    bool is_billed_impressions_Valid() const;

    OAIMetricValue getImpressionsWon() const;
    void setImpressionsWon(const OAIMetricValue &impressions_won);
    bool is_impressions_won_Set() const;
    bool is_impressions_won_Valid() const;

    OAIMetricValue getMeasurableImpressions() const;
    void setMeasurableImpressions(const OAIMetricValue &measurable_impressions);
    bool is_measurable_impressions_Set() const;
    bool is_measurable_impressions_Valid() const;

    OAIMetricValue getReachedQueries() const;
    void setReachedQueries(const OAIMetricValue &reached_queries);
    bool is_reached_queries_Set() const;
    bool is_reached_queries_Valid() const;

    OAIRowDimensions getRowDimensions() const;
    void setRowDimensions(const OAIRowDimensions &row_dimensions);
    bool is_row_dimensions_Set() const;
    bool is_row_dimensions_Valid() const;

    OAIMetricValue getViewableImpressions() const;
    void setViewableImpressions(const OAIMetricValue &viewable_impressions);
    bool is_viewable_impressions_Set() const;
    bool is_viewable_impressions_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIMetricValue m_bids;
    bool m_bids_isSet;
    bool m_bids_isValid;

    OAIMetricValue m_bids_in_auction;
    bool m_bids_in_auction_isSet;
    bool m_bids_in_auction_isValid;

    OAIMetricValue m_billed_impressions;
    bool m_billed_impressions_isSet;
    bool m_billed_impressions_isValid;

    OAIMetricValue m_impressions_won;
    bool m_impressions_won_isSet;
    bool m_impressions_won_isValid;

    OAIMetricValue m_measurable_impressions;
    bool m_measurable_impressions_isSet;
    bool m_measurable_impressions_isValid;

    OAIMetricValue m_reached_queries;
    bool m_reached_queries_isSet;
    bool m_reached_queries_isValid;

    OAIRowDimensions m_row_dimensions;
    bool m_row_dimensions_isSet;
    bool m_row_dimensions_isValid;

    OAIMetricValue m_viewable_impressions;
    bool m_viewable_impressions_isSet;
    bool m_viewable_impressions_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBidMetricsRow)

#endif // OAIBidMetricsRow_H
