/**
 * Ad Exchange Buyer API II
 * Accesses the latest features for managing Authorized Buyers accounts, Real-Time Bidding configurations and auction metrics, and Marketplace programmatic deals.
 *
 * The version of the OpenAPI document: v2beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPublisherProfileMobileApplication.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPublisherProfileMobileApplication::OAIPublisherProfileMobileApplication(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPublisherProfileMobileApplication::OAIPublisherProfileMobileApplication() {
    this->initializeModel();
}

OAIPublisherProfileMobileApplication::~OAIPublisherProfileMobileApplication() {}

void OAIPublisherProfileMobileApplication::initializeModel() {

    m_app_store_isSet = false;
    m_app_store_isValid = false;

    m_external_app_id_isSet = false;
    m_external_app_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAIPublisherProfileMobileApplication::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPublisherProfileMobileApplication::fromJsonObject(QJsonObject json) {

    m_app_store_isValid = ::OpenAPI::fromJsonValue(m_app_store, json[QString("appStore")]);
    m_app_store_isSet = !json[QString("appStore")].isNull() && m_app_store_isValid;

    m_external_app_id_isValid = ::OpenAPI::fromJsonValue(m_external_app_id, json[QString("externalAppId")]);
    m_external_app_id_isSet = !json[QString("externalAppId")].isNull() && m_external_app_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;
}

QString OAIPublisherProfileMobileApplication::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPublisherProfileMobileApplication::asJsonObject() const {
    QJsonObject obj;
    if (m_app_store_isSet) {
        obj.insert(QString("appStore"), ::OpenAPI::toJsonValue(m_app_store));
    }
    if (m_external_app_id_isSet) {
        obj.insert(QString("externalAppId"), ::OpenAPI::toJsonValue(m_external_app_id));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

QString OAIPublisherProfileMobileApplication::getAppStore() const {
    return m_app_store;
}
void OAIPublisherProfileMobileApplication::setAppStore(const QString &app_store) {
    m_app_store = app_store;
    m_app_store_isSet = true;
}

bool OAIPublisherProfileMobileApplication::is_app_store_Set() const{
    return m_app_store_isSet;
}

bool OAIPublisherProfileMobileApplication::is_app_store_Valid() const{
    return m_app_store_isValid;
}

QString OAIPublisherProfileMobileApplication::getExternalAppId() const {
    return m_external_app_id;
}
void OAIPublisherProfileMobileApplication::setExternalAppId(const QString &external_app_id) {
    m_external_app_id = external_app_id;
    m_external_app_id_isSet = true;
}

bool OAIPublisherProfileMobileApplication::is_external_app_id_Set() const{
    return m_external_app_id_isSet;
}

bool OAIPublisherProfileMobileApplication::is_external_app_id_Valid() const{
    return m_external_app_id_isValid;
}

QString OAIPublisherProfileMobileApplication::getName() const {
    return m_name;
}
void OAIPublisherProfileMobileApplication::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIPublisherProfileMobileApplication::is_name_Set() const{
    return m_name_isSet;
}

bool OAIPublisherProfileMobileApplication::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIPublisherProfileMobileApplication::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_app_store_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_external_app_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPublisherProfileMobileApplication::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
