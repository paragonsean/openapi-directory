/**
 * Ad Exchange Buyer API II
 * Accesses the latest features for managing Authorized Buyers accounts, Real-Time Bidding configurations and auction metrics, and Marketplace programmatic deals.
 *
 * The version of the OpenAPI document: v2beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPricePerBuyer.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPricePerBuyer::OAIPricePerBuyer(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPricePerBuyer::OAIPricePerBuyer() {
    this->initializeModel();
}

OAIPricePerBuyer::~OAIPricePerBuyer() {}

void OAIPricePerBuyer::initializeModel() {

    m_advertiser_ids_isSet = false;
    m_advertiser_ids_isValid = false;

    m_buyer_isSet = false;
    m_buyer_isValid = false;

    m_price_isSet = false;
    m_price_isValid = false;
}

void OAIPricePerBuyer::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPricePerBuyer::fromJsonObject(QJsonObject json) {

    m_advertiser_ids_isValid = ::OpenAPI::fromJsonValue(m_advertiser_ids, json[QString("advertiserIds")]);
    m_advertiser_ids_isSet = !json[QString("advertiserIds")].isNull() && m_advertiser_ids_isValid;

    m_buyer_isValid = ::OpenAPI::fromJsonValue(m_buyer, json[QString("buyer")]);
    m_buyer_isSet = !json[QString("buyer")].isNull() && m_buyer_isValid;

    m_price_isValid = ::OpenAPI::fromJsonValue(m_price, json[QString("price")]);
    m_price_isSet = !json[QString("price")].isNull() && m_price_isValid;
}

QString OAIPricePerBuyer::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPricePerBuyer::asJsonObject() const {
    QJsonObject obj;
    if (m_advertiser_ids.size() > 0) {
        obj.insert(QString("advertiserIds"), ::OpenAPI::toJsonValue(m_advertiser_ids));
    }
    if (m_buyer.isSet()) {
        obj.insert(QString("buyer"), ::OpenAPI::toJsonValue(m_buyer));
    }
    if (m_price.isSet()) {
        obj.insert(QString("price"), ::OpenAPI::toJsonValue(m_price));
    }
    return obj;
}

QList<QString> OAIPricePerBuyer::getAdvertiserIds() const {
    return m_advertiser_ids;
}
void OAIPricePerBuyer::setAdvertiserIds(const QList<QString> &advertiser_ids) {
    m_advertiser_ids = advertiser_ids;
    m_advertiser_ids_isSet = true;
}

bool OAIPricePerBuyer::is_advertiser_ids_Set() const{
    return m_advertiser_ids_isSet;
}

bool OAIPricePerBuyer::is_advertiser_ids_Valid() const{
    return m_advertiser_ids_isValid;
}

OAIBuyer OAIPricePerBuyer::getBuyer() const {
    return m_buyer;
}
void OAIPricePerBuyer::setBuyer(const OAIBuyer &buyer) {
    m_buyer = buyer;
    m_buyer_isSet = true;
}

bool OAIPricePerBuyer::is_buyer_Set() const{
    return m_buyer_isSet;
}

bool OAIPricePerBuyer::is_buyer_Valid() const{
    return m_buyer_isValid;
}

OAIPrice OAIPricePerBuyer::getPrice() const {
    return m_price;
}
void OAIPricePerBuyer::setPrice(const OAIPrice &price) {
    m_price = price;
    m_price_isSet = true;
}

bool OAIPricePerBuyer::is_price_Set() const{
    return m_price_isSet;
}

bool OAIPricePerBuyer::is_price_Valid() const{
    return m_price_isValid;
}

bool OAIPricePerBuyer::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_advertiser_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_buyer.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_price.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPricePerBuyer::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
