/**
 * Ad Exchange Buyer API II
 * Accesses the latest features for managing Authorized Buyers accounts, Real-Time Bidding configurations and auction metrics, and Marketplace programmatic deals.
 *
 * The version of the OpenAPI document: v2beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFirstPartyMobileApplicationTargeting.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFirstPartyMobileApplicationTargeting::OAIFirstPartyMobileApplicationTargeting(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFirstPartyMobileApplicationTargeting::OAIFirstPartyMobileApplicationTargeting() {
    this->initializeModel();
}

OAIFirstPartyMobileApplicationTargeting::~OAIFirstPartyMobileApplicationTargeting() {}

void OAIFirstPartyMobileApplicationTargeting::initializeModel() {

    m_excluded_app_ids_isSet = false;
    m_excluded_app_ids_isValid = false;

    m_targeted_app_ids_isSet = false;
    m_targeted_app_ids_isValid = false;
}

void OAIFirstPartyMobileApplicationTargeting::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFirstPartyMobileApplicationTargeting::fromJsonObject(QJsonObject json) {

    m_excluded_app_ids_isValid = ::OpenAPI::fromJsonValue(m_excluded_app_ids, json[QString("excludedAppIds")]);
    m_excluded_app_ids_isSet = !json[QString("excludedAppIds")].isNull() && m_excluded_app_ids_isValid;

    m_targeted_app_ids_isValid = ::OpenAPI::fromJsonValue(m_targeted_app_ids, json[QString("targetedAppIds")]);
    m_targeted_app_ids_isSet = !json[QString("targetedAppIds")].isNull() && m_targeted_app_ids_isValid;
}

QString OAIFirstPartyMobileApplicationTargeting::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFirstPartyMobileApplicationTargeting::asJsonObject() const {
    QJsonObject obj;
    if (m_excluded_app_ids.size() > 0) {
        obj.insert(QString("excludedAppIds"), ::OpenAPI::toJsonValue(m_excluded_app_ids));
    }
    if (m_targeted_app_ids.size() > 0) {
        obj.insert(QString("targetedAppIds"), ::OpenAPI::toJsonValue(m_targeted_app_ids));
    }
    return obj;
}

QList<QString> OAIFirstPartyMobileApplicationTargeting::getExcludedAppIds() const {
    return m_excluded_app_ids;
}
void OAIFirstPartyMobileApplicationTargeting::setExcludedAppIds(const QList<QString> &excluded_app_ids) {
    m_excluded_app_ids = excluded_app_ids;
    m_excluded_app_ids_isSet = true;
}

bool OAIFirstPartyMobileApplicationTargeting::is_excluded_app_ids_Set() const{
    return m_excluded_app_ids_isSet;
}

bool OAIFirstPartyMobileApplicationTargeting::is_excluded_app_ids_Valid() const{
    return m_excluded_app_ids_isValid;
}

QList<QString> OAIFirstPartyMobileApplicationTargeting::getTargetedAppIds() const {
    return m_targeted_app_ids;
}
void OAIFirstPartyMobileApplicationTargeting::setTargetedAppIds(const QList<QString> &targeted_app_ids) {
    m_targeted_app_ids = targeted_app_ids;
    m_targeted_app_ids_isSet = true;
}

bool OAIFirstPartyMobileApplicationTargeting::is_targeted_app_ids_Set() const{
    return m_targeted_app_ids_isSet;
}

bool OAIFirstPartyMobileApplicationTargeting::is_targeted_app_ids_Valid() const{
    return m_targeted_app_ids_isValid;
}

bool OAIFirstPartyMobileApplicationTargeting::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_excluded_app_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_targeted_app_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFirstPartyMobileApplicationTargeting::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
