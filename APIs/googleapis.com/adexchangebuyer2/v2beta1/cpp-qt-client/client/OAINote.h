/**
 * Ad Exchange Buyer API II
 * Accesses the latest features for managing Authorized Buyers accounts, Real-Time Bidding configurations and auction metrics, and Marketplace programmatic deals.
 *
 * The version of the OpenAPI document: v2beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINote.h
 *
 * A proposal may be associated to several notes.
 */

#ifndef OAINote_H
#define OAINote_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAINote : public OAIObject {
public:
    OAINote();
    OAINote(QString json);
    ~OAINote() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCreateTime() const;
    void setCreateTime(const QString &create_time);
    bool is_create_time_Set() const;
    bool is_create_time_Valid() const;

    QString getCreatorRole() const;
    void setCreatorRole(const QString &creator_role);
    bool is_creator_role_Set() const;
    bool is_creator_role_Valid() const;

    QString getNote() const;
    void setNote(const QString &note);
    bool is_note_Set() const;
    bool is_note_Valid() const;

    QString getNoteId() const;
    void setNoteId(const QString &note_id);
    bool is_note_id_Set() const;
    bool is_note_id_Valid() const;

    QString getProposalRevision() const;
    void setProposalRevision(const QString &proposal_revision);
    bool is_proposal_revision_Set() const;
    bool is_proposal_revision_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_create_time;
    bool m_create_time_isSet;
    bool m_create_time_isValid;

    QString m_creator_role;
    bool m_creator_role_isSet;
    bool m_creator_role_isValid;

    QString m_note;
    bool m_note_isSet;
    bool m_note_isValid;

    QString m_note_id;
    bool m_note_id_isSet;
    bool m_note_id_isValid;

    QString m_proposal_revision;
    bool m_proposal_revision_isSet;
    bool m_proposal_revision_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINote)

#endif // OAINote_H
