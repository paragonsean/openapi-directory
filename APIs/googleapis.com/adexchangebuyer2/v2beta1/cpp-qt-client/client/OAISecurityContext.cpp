/**
 * Ad Exchange Buyer API II
 * Accesses the latest features for managing Authorized Buyers accounts, Real-Time Bidding configurations and auction metrics, and Marketplace programmatic deals.
 *
 * The version of the OpenAPI document: v2beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISecurityContext.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISecurityContext::OAISecurityContext(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISecurityContext::OAISecurityContext() {
    this->initializeModel();
}

OAISecurityContext::~OAISecurityContext() {}

void OAISecurityContext::initializeModel() {

    m_securities_isSet = false;
    m_securities_isValid = false;
}

void OAISecurityContext::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISecurityContext::fromJsonObject(QJsonObject json) {

    m_securities_isValid = ::OpenAPI::fromJsonValue(m_securities, json[QString("securities")]);
    m_securities_isSet = !json[QString("securities")].isNull() && m_securities_isValid;
}

QString OAISecurityContext::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISecurityContext::asJsonObject() const {
    QJsonObject obj;
    if (m_securities.size() > 0) {
        obj.insert(QString("securities"), ::OpenAPI::toJsonValue(m_securities));
    }
    return obj;
}

QList<QString> OAISecurityContext::getSecurities() const {
    return m_securities;
}
void OAISecurityContext::setSecurities(const QList<QString> &securities) {
    m_securities = securities;
    m_securities_isSet = true;
}

bool OAISecurityContext::is_securities_Set() const{
    return m_securities_isSet;
}

bool OAISecurityContext::is_securities_Valid() const{
    return m_securities_isValid;
}

bool OAISecurityContext::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_securities.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISecurityContext::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
