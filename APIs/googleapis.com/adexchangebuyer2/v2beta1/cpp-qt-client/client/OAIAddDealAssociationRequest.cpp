/**
 * Ad Exchange Buyer API II
 * Accesses the latest features for managing Authorized Buyers accounts, Real-Time Bidding configurations and auction metrics, and Marketplace programmatic deals.
 *
 * The version of the OpenAPI document: v2beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAddDealAssociationRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAddDealAssociationRequest::OAIAddDealAssociationRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAddDealAssociationRequest::OAIAddDealAssociationRequest() {
    this->initializeModel();
}

OAIAddDealAssociationRequest::~OAIAddDealAssociationRequest() {}

void OAIAddDealAssociationRequest::initializeModel() {

    m_association_isSet = false;
    m_association_isValid = false;
}

void OAIAddDealAssociationRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAddDealAssociationRequest::fromJsonObject(QJsonObject json) {

    m_association_isValid = ::OpenAPI::fromJsonValue(m_association, json[QString("association")]);
    m_association_isSet = !json[QString("association")].isNull() && m_association_isValid;
}

QString OAIAddDealAssociationRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAddDealAssociationRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_association.isSet()) {
        obj.insert(QString("association"), ::OpenAPI::toJsonValue(m_association));
    }
    return obj;
}

OAICreativeDealAssociation OAIAddDealAssociationRequest::getAssociation() const {
    return m_association;
}
void OAIAddDealAssociationRequest::setAssociation(const OAICreativeDealAssociation &association) {
    m_association = association;
    m_association_isSet = true;
}

bool OAIAddDealAssociationRequest::is_association_Set() const{
    return m_association_isSet;
}

bool OAIAddDealAssociationRequest::is_association_Valid() const{
    return m_association_isValid;
}

bool OAIAddDealAssociationRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_association.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAddDealAssociationRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
