/**
 * Ad Exchange Buyer API II
 * Accesses the latest features for managing Authorized Buyers accounts, Real-Time Bidding configurations and auction metrics, and Marketplace programmatic deals.
 *
 * The version of the OpenAPI document: v2beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIProposal.h
 *
 * Represents a proposal in the Marketplace. A proposal is the unit of negotiation between a seller and a buyer and contains deals which are served. Note: You can&#39;t update, create, or otherwise modify Private Auction deals through the API. Fields are updatable unless noted otherwise.
 */

#ifndef OAIProposal_H
#define OAIProposal_H

#include <QJsonObject>

#include "OAIBuyer.h"
#include "OAIContactInformation.h"
#include "OAIDeal.h"
#include "OAINote.h"
#include "OAIPrivateData.h"
#include "OAISeller.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBuyer;
class OAIContactInformation;
class OAIPrivateData;
class OAIDeal;
class OAINote;
class OAISeller;

class OAIProposal : public OAIObject {
public:
    OAIProposal();
    OAIProposal(QString json);
    ~OAIProposal() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIBuyer getBilledBuyer() const;
    void setBilledBuyer(const OAIBuyer &billed_buyer);
    bool is_billed_buyer_Set() const;
    bool is_billed_buyer_Valid() const;

    OAIBuyer getBuyer() const;
    void setBuyer(const OAIBuyer &buyer);
    bool is_buyer_Set() const;
    bool is_buyer_Valid() const;

    QList<OAIContactInformation> getBuyerContacts() const;
    void setBuyerContacts(const QList<OAIContactInformation> &buyer_contacts);
    bool is_buyer_contacts_Set() const;
    bool is_buyer_contacts_Valid() const;

    OAIPrivateData getBuyerPrivateData() const;
    void setBuyerPrivateData(const OAIPrivateData &buyer_private_data);
    bool is_buyer_private_data_Set() const;
    bool is_buyer_private_data_Valid() const;

    QList<OAIDeal> getDeals() const;
    void setDeals(const QList<OAIDeal> &deals);
    bool is_deals_Set() const;
    bool is_deals_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    bool isIsRenegotiating() const;
    void setIsRenegotiating(const bool &is_renegotiating);
    bool is_is_renegotiating_Set() const;
    bool is_is_renegotiating_Valid() const;

    Q_DECL_DEPRECATED bool isIsSetupComplete() const;
    Q_DECL_DEPRECATED void setIsSetupComplete(const bool &is_setup_complete);
    Q_DECL_DEPRECATED bool is_is_setup_complete_Set() const;
    Q_DECL_DEPRECATED bool is_is_setup_complete_Valid() const;

    QString getLastUpdaterOrCommentorRole() const;
    void setLastUpdaterOrCommentorRole(const QString &last_updater_or_commentor_role);
    bool is_last_updater_or_commentor_role_Set() const;
    bool is_last_updater_or_commentor_role_Valid() const;

    QList<OAINote> getNotes() const;
    void setNotes(const QList<OAINote> &notes);
    bool is_notes_Set() const;
    bool is_notes_Valid() const;

    QString getOriginatorRole() const;
    void setOriginatorRole(const QString &originator_role);
    bool is_originator_role_Set() const;
    bool is_originator_role_Valid() const;

    QString getPrivateAuctionId() const;
    void setPrivateAuctionId(const QString &private_auction_id);
    bool is_private_auction_id_Set() const;
    bool is_private_auction_id_Valid() const;

    QString getProposalId() const;
    void setProposalId(const QString &proposal_id);
    bool is_proposal_id_Set() const;
    bool is_proposal_id_Valid() const;

    QString getProposalRevision() const;
    void setProposalRevision(const QString &proposal_revision);
    bool is_proposal_revision_Set() const;
    bool is_proposal_revision_Valid() const;

    QString getProposalState() const;
    void setProposalState(const QString &proposal_state);
    bool is_proposal_state_Set() const;
    bool is_proposal_state_Valid() const;

    OAISeller getSeller() const;
    void setSeller(const OAISeller &seller);
    bool is_seller_Set() const;
    bool is_seller_Valid() const;

    QList<OAIContactInformation> getSellerContacts() const;
    void setSellerContacts(const QList<OAIContactInformation> &seller_contacts);
    bool is_seller_contacts_Set() const;
    bool is_seller_contacts_Valid() const;

    QString getTermsAndConditions() const;
    void setTermsAndConditions(const QString &terms_and_conditions);
    bool is_terms_and_conditions_Set() const;
    bool is_terms_and_conditions_Valid() const;

    QString getUpdateTime() const;
    void setUpdateTime(const QString &update_time);
    bool is_update_time_Set() const;
    bool is_update_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIBuyer m_billed_buyer;
    bool m_billed_buyer_isSet;
    bool m_billed_buyer_isValid;

    OAIBuyer m_buyer;
    bool m_buyer_isSet;
    bool m_buyer_isValid;

    QList<OAIContactInformation> m_buyer_contacts;
    bool m_buyer_contacts_isSet;
    bool m_buyer_contacts_isValid;

    OAIPrivateData m_buyer_private_data;
    bool m_buyer_private_data_isSet;
    bool m_buyer_private_data_isValid;

    QList<OAIDeal> m_deals;
    bool m_deals_isSet;
    bool m_deals_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    bool m_is_renegotiating;
    bool m_is_renegotiating_isSet;
    bool m_is_renegotiating_isValid;

    bool m_is_setup_complete;
    bool m_is_setup_complete_isSet;
    bool m_is_setup_complete_isValid;

    QString m_last_updater_or_commentor_role;
    bool m_last_updater_or_commentor_role_isSet;
    bool m_last_updater_or_commentor_role_isValid;

    QList<OAINote> m_notes;
    bool m_notes_isSet;
    bool m_notes_isValid;

    QString m_originator_role;
    bool m_originator_role_isSet;
    bool m_originator_role_isValid;

    QString m_private_auction_id;
    bool m_private_auction_id_isSet;
    bool m_private_auction_id_isValid;

    QString m_proposal_id;
    bool m_proposal_id_isSet;
    bool m_proposal_id_isValid;

    QString m_proposal_revision;
    bool m_proposal_revision_isSet;
    bool m_proposal_revision_isValid;

    QString m_proposal_state;
    bool m_proposal_state_isSet;
    bool m_proposal_state_isValid;

    OAISeller m_seller;
    bool m_seller_isSet;
    bool m_seller_isValid;

    QList<OAIContactInformation> m_seller_contacts;
    bool m_seller_contacts_isSet;
    bool m_seller_contacts_isValid;

    QString m_terms_and_conditions;
    bool m_terms_and_conditions_isSet;
    bool m_terms_and_conditions_isValid;

    QString m_update_time;
    bool m_update_time_isSet;
    bool m_update_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIProposal)

#endif // OAIProposal_H
