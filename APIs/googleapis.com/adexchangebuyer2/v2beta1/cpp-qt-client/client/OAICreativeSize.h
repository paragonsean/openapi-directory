/**
 * Ad Exchange Buyer API II
 * Accesses the latest features for managing Authorized Buyers accounts, Real-Time Bidding configurations and auction metrics, and Marketplace programmatic deals.
 *
 * The version of the OpenAPI document: v2beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreativeSize.h
 *
 * Specifies the size of the creative.
 */

#ifndef OAICreativeSize_H
#define OAICreativeSize_H

#include <QJsonObject>

#include "OAISize.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISize;

class OAICreativeSize : public OAIObject {
public:
    OAICreativeSize();
    OAICreativeSize(QString json);
    ~OAICreativeSize() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getAllowedFormats() const;
    void setAllowedFormats(const QList<QString> &allowed_formats);
    bool is_allowed_formats_Set() const;
    bool is_allowed_formats_Valid() const;

    QList<OAISize> getCompanionSizes() const;
    void setCompanionSizes(const QList<OAISize> &companion_sizes);
    bool is_companion_sizes_Set() const;
    bool is_companion_sizes_Valid() const;

    QString getCreativeSizeType() const;
    void setCreativeSizeType(const QString &creative_size_type);
    bool is_creative_size_type_Set() const;
    bool is_creative_size_type_Valid() const;

    QString getNativeTemplate() const;
    void setNativeTemplate(const QString &native_template);
    bool is_native_template_Set() const;
    bool is_native_template_Valid() const;

    OAISize getSize() const;
    void setSize(const OAISize &size);
    bool is_size_Set() const;
    bool is_size_Valid() const;

    QString getSkippableAdType() const;
    void setSkippableAdType(const QString &skippable_ad_type);
    bool is_skippable_ad_type_Set() const;
    bool is_skippable_ad_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_allowed_formats;
    bool m_allowed_formats_isSet;
    bool m_allowed_formats_isValid;

    QList<OAISize> m_companion_sizes;
    bool m_companion_sizes_isSet;
    bool m_companion_sizes_isValid;

    QString m_creative_size_type;
    bool m_creative_size_type_isSet;
    bool m_creative_size_type_isValid;

    QString m_native_template;
    bool m_native_template_isSet;
    bool m_native_template_isValid;

    OAISize m_size;
    bool m_size_isSet;
    bool m_size_isValid;

    QString m_skippable_ad_type;
    bool m_skippable_ad_type_isSet;
    bool m_skippable_ad_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreativeSize)

#endif // OAICreativeSize_H
