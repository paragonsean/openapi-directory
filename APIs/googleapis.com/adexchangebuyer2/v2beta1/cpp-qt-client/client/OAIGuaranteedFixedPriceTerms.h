/**
 * Ad Exchange Buyer API II
 * Accesses the latest features for managing Authorized Buyers accounts, Real-Time Bidding configurations and auction metrics, and Marketplace programmatic deals.
 *
 * The version of the OpenAPI document: v2beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGuaranteedFixedPriceTerms.h
 *
 * Terms for Programmatic Guaranteed Deals.
 */

#ifndef OAIGuaranteedFixedPriceTerms_H
#define OAIGuaranteedFixedPriceTerms_H

#include <QJsonObject>

#include "OAIPricePerBuyer.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPricePerBuyer;

class OAIGuaranteedFixedPriceTerms : public OAIObject {
public:
    OAIGuaranteedFixedPriceTerms();
    OAIGuaranteedFixedPriceTerms(QString json);
    ~OAIGuaranteedFixedPriceTerms() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIPricePerBuyer> getFixedPrices() const;
    void setFixedPrices(const QList<OAIPricePerBuyer> &fixed_prices);
    bool is_fixed_prices_Set() const;
    bool is_fixed_prices_Valid() const;

    QString getGuaranteedImpressions() const;
    void setGuaranteedImpressions(const QString &guaranteed_impressions);
    bool is_guaranteed_impressions_Set() const;
    bool is_guaranteed_impressions_Valid() const;

    QString getGuaranteedLooks() const;
    void setGuaranteedLooks(const QString &guaranteed_looks);
    bool is_guaranteed_looks_Set() const;
    bool is_guaranteed_looks_Valid() const;

    QString getImpressionCap() const;
    void setImpressionCap(const QString &impression_cap);
    bool is_impression_cap_Set() const;
    bool is_impression_cap_Valid() const;

    QString getMinimumDailyLooks() const;
    void setMinimumDailyLooks(const QString &minimum_daily_looks);
    bool is_minimum_daily_looks_Set() const;
    bool is_minimum_daily_looks_Valid() const;

    QString getPercentShareOfVoice() const;
    void setPercentShareOfVoice(const QString &percent_share_of_voice);
    bool is_percent_share_of_voice_Set() const;
    bool is_percent_share_of_voice_Valid() const;

    QString getReservationType() const;
    void setReservationType(const QString &reservation_type);
    bool is_reservation_type_Set() const;
    bool is_reservation_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIPricePerBuyer> m_fixed_prices;
    bool m_fixed_prices_isSet;
    bool m_fixed_prices_isValid;

    QString m_guaranteed_impressions;
    bool m_guaranteed_impressions_isSet;
    bool m_guaranteed_impressions_isValid;

    QString m_guaranteed_looks;
    bool m_guaranteed_looks_isSet;
    bool m_guaranteed_looks_isValid;

    QString m_impression_cap;
    bool m_impression_cap_isSet;
    bool m_impression_cap_isValid;

    QString m_minimum_daily_looks;
    bool m_minimum_daily_looks_isSet;
    bool m_minimum_daily_looks_isValid;

    QString m_percent_share_of_voice;
    bool m_percent_share_of_voice_isSet;
    bool m_percent_share_of_voice_isValid;

    QString m_reservation_type;
    bool m_reservation_type_isSet;
    bool m_reservation_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGuaranteedFixedPriceTerms)

#endif // OAIGuaranteedFixedPriceTerms_H
