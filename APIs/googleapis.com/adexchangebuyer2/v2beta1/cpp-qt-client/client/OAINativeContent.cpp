/**
 * Ad Exchange Buyer API II
 * Accesses the latest features for managing Authorized Buyers accounts, Real-Time Bidding configurations and auction metrics, and Marketplace programmatic deals.
 *
 * The version of the OpenAPI document: v2beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINativeContent.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINativeContent::OAINativeContent(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINativeContent::OAINativeContent() {
    this->initializeModel();
}

OAINativeContent::~OAINativeContent() {}

void OAINativeContent::initializeModel() {

    m_advertiser_name_isSet = false;
    m_advertiser_name_isValid = false;

    m_app_icon_isSet = false;
    m_app_icon_isValid = false;

    m_body_isSet = false;
    m_body_isValid = false;

    m_call_to_action_isSet = false;
    m_call_to_action_isValid = false;

    m_click_link_url_isSet = false;
    m_click_link_url_isValid = false;

    m_click_tracking_url_isSet = false;
    m_click_tracking_url_isValid = false;

    m_headline_isSet = false;
    m_headline_isValid = false;

    m_image_isSet = false;
    m_image_isValid = false;

    m_logo_isSet = false;
    m_logo_isValid = false;

    m_price_display_text_isSet = false;
    m_price_display_text_isValid = false;

    m_star_rating_isSet = false;
    m_star_rating_isValid = false;

    m_store_url_isSet = false;
    m_store_url_isValid = false;

    m_video_url_isSet = false;
    m_video_url_isValid = false;
}

void OAINativeContent::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAINativeContent::fromJsonObject(QJsonObject json) {

    m_advertiser_name_isValid = ::OpenAPI::fromJsonValue(m_advertiser_name, json[QString("advertiserName")]);
    m_advertiser_name_isSet = !json[QString("advertiserName")].isNull() && m_advertiser_name_isValid;

    m_app_icon_isValid = ::OpenAPI::fromJsonValue(m_app_icon, json[QString("appIcon")]);
    m_app_icon_isSet = !json[QString("appIcon")].isNull() && m_app_icon_isValid;

    m_body_isValid = ::OpenAPI::fromJsonValue(m_body, json[QString("body")]);
    m_body_isSet = !json[QString("body")].isNull() && m_body_isValid;

    m_call_to_action_isValid = ::OpenAPI::fromJsonValue(m_call_to_action, json[QString("callToAction")]);
    m_call_to_action_isSet = !json[QString("callToAction")].isNull() && m_call_to_action_isValid;

    m_click_link_url_isValid = ::OpenAPI::fromJsonValue(m_click_link_url, json[QString("clickLinkUrl")]);
    m_click_link_url_isSet = !json[QString("clickLinkUrl")].isNull() && m_click_link_url_isValid;

    m_click_tracking_url_isValid = ::OpenAPI::fromJsonValue(m_click_tracking_url, json[QString("clickTrackingUrl")]);
    m_click_tracking_url_isSet = !json[QString("clickTrackingUrl")].isNull() && m_click_tracking_url_isValid;

    m_headline_isValid = ::OpenAPI::fromJsonValue(m_headline, json[QString("headline")]);
    m_headline_isSet = !json[QString("headline")].isNull() && m_headline_isValid;

    m_image_isValid = ::OpenAPI::fromJsonValue(m_image, json[QString("image")]);
    m_image_isSet = !json[QString("image")].isNull() && m_image_isValid;

    m_logo_isValid = ::OpenAPI::fromJsonValue(m_logo, json[QString("logo")]);
    m_logo_isSet = !json[QString("logo")].isNull() && m_logo_isValid;

    m_price_display_text_isValid = ::OpenAPI::fromJsonValue(m_price_display_text, json[QString("priceDisplayText")]);
    m_price_display_text_isSet = !json[QString("priceDisplayText")].isNull() && m_price_display_text_isValid;

    m_star_rating_isValid = ::OpenAPI::fromJsonValue(m_star_rating, json[QString("starRating")]);
    m_star_rating_isSet = !json[QString("starRating")].isNull() && m_star_rating_isValid;

    m_store_url_isValid = ::OpenAPI::fromJsonValue(m_store_url, json[QString("storeUrl")]);
    m_store_url_isSet = !json[QString("storeUrl")].isNull() && m_store_url_isValid;

    m_video_url_isValid = ::OpenAPI::fromJsonValue(m_video_url, json[QString("videoUrl")]);
    m_video_url_isSet = !json[QString("videoUrl")].isNull() && m_video_url_isValid;
}

QString OAINativeContent::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAINativeContent::asJsonObject() const {
    QJsonObject obj;
    if (m_advertiser_name_isSet) {
        obj.insert(QString("advertiserName"), ::OpenAPI::toJsonValue(m_advertiser_name));
    }
    if (m_app_icon.isSet()) {
        obj.insert(QString("appIcon"), ::OpenAPI::toJsonValue(m_app_icon));
    }
    if (m_body_isSet) {
        obj.insert(QString("body"), ::OpenAPI::toJsonValue(m_body));
    }
    if (m_call_to_action_isSet) {
        obj.insert(QString("callToAction"), ::OpenAPI::toJsonValue(m_call_to_action));
    }
    if (m_click_link_url_isSet) {
        obj.insert(QString("clickLinkUrl"), ::OpenAPI::toJsonValue(m_click_link_url));
    }
    if (m_click_tracking_url_isSet) {
        obj.insert(QString("clickTrackingUrl"), ::OpenAPI::toJsonValue(m_click_tracking_url));
    }
    if (m_headline_isSet) {
        obj.insert(QString("headline"), ::OpenAPI::toJsonValue(m_headline));
    }
    if (m_image.isSet()) {
        obj.insert(QString("image"), ::OpenAPI::toJsonValue(m_image));
    }
    if (m_logo.isSet()) {
        obj.insert(QString("logo"), ::OpenAPI::toJsonValue(m_logo));
    }
    if (m_price_display_text_isSet) {
        obj.insert(QString("priceDisplayText"), ::OpenAPI::toJsonValue(m_price_display_text));
    }
    if (m_star_rating_isSet) {
        obj.insert(QString("starRating"), ::OpenAPI::toJsonValue(m_star_rating));
    }
    if (m_store_url_isSet) {
        obj.insert(QString("storeUrl"), ::OpenAPI::toJsonValue(m_store_url));
    }
    if (m_video_url_isSet) {
        obj.insert(QString("videoUrl"), ::OpenAPI::toJsonValue(m_video_url));
    }
    return obj;
}

QString OAINativeContent::getAdvertiserName() const {
    return m_advertiser_name;
}
void OAINativeContent::setAdvertiserName(const QString &advertiser_name) {
    m_advertiser_name = advertiser_name;
    m_advertiser_name_isSet = true;
}

bool OAINativeContent::is_advertiser_name_Set() const{
    return m_advertiser_name_isSet;
}

bool OAINativeContent::is_advertiser_name_Valid() const{
    return m_advertiser_name_isValid;
}

OAIImage OAINativeContent::getAppIcon() const {
    return m_app_icon;
}
void OAINativeContent::setAppIcon(const OAIImage &app_icon) {
    m_app_icon = app_icon;
    m_app_icon_isSet = true;
}

bool OAINativeContent::is_app_icon_Set() const{
    return m_app_icon_isSet;
}

bool OAINativeContent::is_app_icon_Valid() const{
    return m_app_icon_isValid;
}

QString OAINativeContent::getBody() const {
    return m_body;
}
void OAINativeContent::setBody(const QString &body) {
    m_body = body;
    m_body_isSet = true;
}

bool OAINativeContent::is_body_Set() const{
    return m_body_isSet;
}

bool OAINativeContent::is_body_Valid() const{
    return m_body_isValid;
}

QString OAINativeContent::getCallToAction() const {
    return m_call_to_action;
}
void OAINativeContent::setCallToAction(const QString &call_to_action) {
    m_call_to_action = call_to_action;
    m_call_to_action_isSet = true;
}

bool OAINativeContent::is_call_to_action_Set() const{
    return m_call_to_action_isSet;
}

bool OAINativeContent::is_call_to_action_Valid() const{
    return m_call_to_action_isValid;
}

QString OAINativeContent::getClickLinkUrl() const {
    return m_click_link_url;
}
void OAINativeContent::setClickLinkUrl(const QString &click_link_url) {
    m_click_link_url = click_link_url;
    m_click_link_url_isSet = true;
}

bool OAINativeContent::is_click_link_url_Set() const{
    return m_click_link_url_isSet;
}

bool OAINativeContent::is_click_link_url_Valid() const{
    return m_click_link_url_isValid;
}

QString OAINativeContent::getClickTrackingUrl() const {
    return m_click_tracking_url;
}
void OAINativeContent::setClickTrackingUrl(const QString &click_tracking_url) {
    m_click_tracking_url = click_tracking_url;
    m_click_tracking_url_isSet = true;
}

bool OAINativeContent::is_click_tracking_url_Set() const{
    return m_click_tracking_url_isSet;
}

bool OAINativeContent::is_click_tracking_url_Valid() const{
    return m_click_tracking_url_isValid;
}

QString OAINativeContent::getHeadline() const {
    return m_headline;
}
void OAINativeContent::setHeadline(const QString &headline) {
    m_headline = headline;
    m_headline_isSet = true;
}

bool OAINativeContent::is_headline_Set() const{
    return m_headline_isSet;
}

bool OAINativeContent::is_headline_Valid() const{
    return m_headline_isValid;
}

OAIImage OAINativeContent::getImage() const {
    return m_image;
}
void OAINativeContent::setImage(const OAIImage &image) {
    m_image = image;
    m_image_isSet = true;
}

bool OAINativeContent::is_image_Set() const{
    return m_image_isSet;
}

bool OAINativeContent::is_image_Valid() const{
    return m_image_isValid;
}

OAIImage OAINativeContent::getLogo() const {
    return m_logo;
}
void OAINativeContent::setLogo(const OAIImage &logo) {
    m_logo = logo;
    m_logo_isSet = true;
}

bool OAINativeContent::is_logo_Set() const{
    return m_logo_isSet;
}

bool OAINativeContent::is_logo_Valid() const{
    return m_logo_isValid;
}

QString OAINativeContent::getPriceDisplayText() const {
    return m_price_display_text;
}
void OAINativeContent::setPriceDisplayText(const QString &price_display_text) {
    m_price_display_text = price_display_text;
    m_price_display_text_isSet = true;
}

bool OAINativeContent::is_price_display_text_Set() const{
    return m_price_display_text_isSet;
}

bool OAINativeContent::is_price_display_text_Valid() const{
    return m_price_display_text_isValid;
}

double OAINativeContent::getStarRating() const {
    return m_star_rating;
}
void OAINativeContent::setStarRating(const double &star_rating) {
    m_star_rating = star_rating;
    m_star_rating_isSet = true;
}

bool OAINativeContent::is_star_rating_Set() const{
    return m_star_rating_isSet;
}

bool OAINativeContent::is_star_rating_Valid() const{
    return m_star_rating_isValid;
}

QString OAINativeContent::getStoreUrl() const {
    return m_store_url;
}
void OAINativeContent::setStoreUrl(const QString &store_url) {
    m_store_url = store_url;
    m_store_url_isSet = true;
}

bool OAINativeContent::is_store_url_Set() const{
    return m_store_url_isSet;
}

bool OAINativeContent::is_store_url_Valid() const{
    return m_store_url_isValid;
}

QString OAINativeContent::getVideoUrl() const {
    return m_video_url;
}
void OAINativeContent::setVideoUrl(const QString &video_url) {
    m_video_url = video_url;
    m_video_url_isSet = true;
}

bool OAINativeContent::is_video_url_Set() const{
    return m_video_url_isSet;
}

bool OAINativeContent::is_video_url_Valid() const{
    return m_video_url_isValid;
}

bool OAINativeContent::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_advertiser_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_app_icon.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_body_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_call_to_action_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_click_link_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_click_tracking_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_headline_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_image.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_logo.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_price_display_text_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_star_rating_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_store_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_video_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAINativeContent::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
