/**
 * Ad Exchange Buyer API II
 * Accesses the latest features for managing Authorized Buyers accounts, Real-Time Bidding configurations and auction metrics, and Marketplace programmatic deals.
 *
 * The version of the OpenAPI document: v2beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVideoContent.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVideoContent::OAIVideoContent(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVideoContent::OAIVideoContent() {
    this->initializeModel();
}

OAIVideoContent::~OAIVideoContent() {}

void OAIVideoContent::initializeModel() {

    m_video_url_isSet = false;
    m_video_url_isValid = false;

    m_video_vast_xml_isSet = false;
    m_video_vast_xml_isValid = false;
}

void OAIVideoContent::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIVideoContent::fromJsonObject(QJsonObject json) {

    m_video_url_isValid = ::OpenAPI::fromJsonValue(m_video_url, json[QString("videoUrl")]);
    m_video_url_isSet = !json[QString("videoUrl")].isNull() && m_video_url_isValid;

    m_video_vast_xml_isValid = ::OpenAPI::fromJsonValue(m_video_vast_xml, json[QString("videoVastXml")]);
    m_video_vast_xml_isSet = !json[QString("videoVastXml")].isNull() && m_video_vast_xml_isValid;
}

QString OAIVideoContent::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIVideoContent::asJsonObject() const {
    QJsonObject obj;
    if (m_video_url_isSet) {
        obj.insert(QString("videoUrl"), ::OpenAPI::toJsonValue(m_video_url));
    }
    if (m_video_vast_xml_isSet) {
        obj.insert(QString("videoVastXml"), ::OpenAPI::toJsonValue(m_video_vast_xml));
    }
    return obj;
}

QString OAIVideoContent::getVideoUrl() const {
    return m_video_url;
}
void OAIVideoContent::setVideoUrl(const QString &video_url) {
    m_video_url = video_url;
    m_video_url_isSet = true;
}

bool OAIVideoContent::is_video_url_Set() const{
    return m_video_url_isSet;
}

bool OAIVideoContent::is_video_url_Valid() const{
    return m_video_url_isValid;
}

QString OAIVideoContent::getVideoVastXml() const {
    return m_video_vast_xml;
}
void OAIVideoContent::setVideoVastXml(const QString &video_vast_xml) {
    m_video_vast_xml = video_vast_xml;
    m_video_vast_xml_isSet = true;
}

bool OAIVideoContent::is_video_vast_xml_Set() const{
    return m_video_vast_xml_isSet;
}

bool OAIVideoContent::is_video_vast_xml_Valid() const{
    return m_video_vast_xml_isValid;
}

bool OAIVideoContent::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_video_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_video_vast_xml_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIVideoContent::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
