# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.metric_value import MetricValue
from openapi_server.models.row_dimensions import RowDimensions
from openapi_server import util


class FilteredBidDetailRow(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bid_count: MetricValue=None, detail: str=None, detail_id: int=None, row_dimensions: RowDimensions=None):
        """FilteredBidDetailRow - a model defined in OpenAPI

        :param bid_count: The bid_count of this FilteredBidDetailRow.
        :param detail: The detail of this FilteredBidDetailRow.
        :param detail_id: The detail_id of this FilteredBidDetailRow.
        :param row_dimensions: The row_dimensions of this FilteredBidDetailRow.
        """
        self.openapi_types = {
            'bid_count': MetricValue,
            'detail': str,
            'detail_id': int,
            'row_dimensions': RowDimensions
        }

        self.attribute_map = {
            'bid_count': 'bidCount',
            'detail': 'detail',
            'detail_id': 'detailId',
            'row_dimensions': 'rowDimensions'
        }

        self._bid_count = bid_count
        self._detail = detail
        self._detail_id = detail_id
        self._row_dimensions = row_dimensions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FilteredBidDetailRow':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FilteredBidDetailRow of this FilteredBidDetailRow.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bid_count(self):
        """Gets the bid_count of this FilteredBidDetailRow.


        :return: The bid_count of this FilteredBidDetailRow.
        :rtype: MetricValue
        """
        return self._bid_count

    @bid_count.setter
    def bid_count(self, bid_count):
        """Sets the bid_count of this FilteredBidDetailRow.


        :param bid_count: The bid_count of this FilteredBidDetailRow.
        :type bid_count: MetricValue
        """

        self._bid_count = bid_count

    @property
    def detail(self):
        """Gets the detail of this FilteredBidDetailRow.

        The ID of the detail, can be numeric or text. The associated value can be looked up in the dictionary file corresponding to the DetailType in the response message.

        :return: The detail of this FilteredBidDetailRow.
        :rtype: str
        """
        return self._detail

    @detail.setter
    def detail(self, detail):
        """Sets the detail of this FilteredBidDetailRow.

        The ID of the detail, can be numeric or text. The associated value can be looked up in the dictionary file corresponding to the DetailType in the response message.

        :param detail: The detail of this FilteredBidDetailRow.
        :type detail: str
        """

        self._detail = detail

    @property
    def detail_id(self):
        """Gets the detail_id of this FilteredBidDetailRow.

        Note: this field will be deprecated, use \"detail\" field instead. When \"detail\" field represents an integer value, this field is populated as the same integer value \"detail\" field represents, otherwise this field will be 0. The ID of the detail. The associated value can be looked up in the dictionary file corresponding to the DetailType in the response message.

        :return: The detail_id of this FilteredBidDetailRow.
        :rtype: int
        """
        return self._detail_id

    @detail_id.setter
    def detail_id(self, detail_id):
        """Sets the detail_id of this FilteredBidDetailRow.

        Note: this field will be deprecated, use \"detail\" field instead. When \"detail\" field represents an integer value, this field is populated as the same integer value \"detail\" field represents, otherwise this field will be 0. The ID of the detail. The associated value can be looked up in the dictionary file corresponding to the DetailType in the response message.

        :param detail_id: The detail_id of this FilteredBidDetailRow.
        :type detail_id: int
        """

        self._detail_id = detail_id

    @property
    def row_dimensions(self):
        """Gets the row_dimensions of this FilteredBidDetailRow.


        :return: The row_dimensions of this FilteredBidDetailRow.
        :rtype: RowDimensions
        """
        return self._row_dimensions

    @row_dimensions.setter
    def row_dimensions(self, row_dimensions):
        """Sets the row_dimensions of this FilteredBidDetailRow.


        :param row_dimensions: The row_dimensions of this FilteredBidDetailRow.
        :type row_dimensions: RowDimensions
        """

        self._row_dimensions = row_dimensions
