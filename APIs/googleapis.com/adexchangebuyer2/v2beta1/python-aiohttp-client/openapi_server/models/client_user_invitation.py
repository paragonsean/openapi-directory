# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ClientUserInvitation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, client_account_id: str=None, email: str=None, invitation_id: str=None):
        """ClientUserInvitation - a model defined in OpenAPI

        :param client_account_id: The client_account_id of this ClientUserInvitation.
        :param email: The email of this ClientUserInvitation.
        :param invitation_id: The invitation_id of this ClientUserInvitation.
        """
        self.openapi_types = {
            'client_account_id': str,
            'email': str,
            'invitation_id': str
        }

        self.attribute_map = {
            'client_account_id': 'clientAccountId',
            'email': 'email',
            'invitation_id': 'invitationId'
        }

        self._client_account_id = client_account_id
        self._email = email
        self._invitation_id = invitation_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ClientUserInvitation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ClientUserInvitation of this ClientUserInvitation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def client_account_id(self):
        """Gets the client_account_id of this ClientUserInvitation.

        Numerical account ID of the client buyer that the invited user is associated with. The value of this field is ignored in create operations.

        :return: The client_account_id of this ClientUserInvitation.
        :rtype: str
        """
        return self._client_account_id

    @client_account_id.setter
    def client_account_id(self, client_account_id):
        """Sets the client_account_id of this ClientUserInvitation.

        Numerical account ID of the client buyer that the invited user is associated with. The value of this field is ignored in create operations.

        :param client_account_id: The client_account_id of this ClientUserInvitation.
        :type client_account_id: str
        """

        self._client_account_id = client_account_id

    @property
    def email(self):
        """Gets the email of this ClientUserInvitation.

        The email address to which the invitation is sent. Email addresses should be unique among all client users under each sponsor buyer.

        :return: The email of this ClientUserInvitation.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this ClientUserInvitation.

        The email address to which the invitation is sent. Email addresses should be unique among all client users under each sponsor buyer.

        :param email: The email of this ClientUserInvitation.
        :type email: str
        """

        self._email = email

    @property
    def invitation_id(self):
        """Gets the invitation_id of this ClientUserInvitation.

        The unique numerical ID of the invitation that is sent to the user. The value of this field is ignored in create operations.

        :return: The invitation_id of this ClientUserInvitation.
        :rtype: str
        """
        return self._invitation_id

    @invitation_id.setter
    def invitation_id(self, invitation_id):
        """Sets the invitation_id of this ClientUserInvitation.

        The unique numerical ID of the invitation that is sent to the user. The value of this field is ignored in create operations.

        :param invitation_id: The invitation_id of this ClientUserInvitation.
        :type invitation_id: str
        """

        self._invitation_id = invitation_id
