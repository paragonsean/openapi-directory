# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.targeting_value import TargetingValue
from openapi_server import util


class TargetingCriteria(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, exclusions: List[TargetingValue]=None, inclusions: List[TargetingValue]=None, key: str=None):
        """TargetingCriteria - a model defined in OpenAPI

        :param exclusions: The exclusions of this TargetingCriteria.
        :param inclusions: The inclusions of this TargetingCriteria.
        :param key: The key of this TargetingCriteria.
        """
        self.openapi_types = {
            'exclusions': List[TargetingValue],
            'inclusions': List[TargetingValue],
            'key': str
        }

        self.attribute_map = {
            'exclusions': 'exclusions',
            'inclusions': 'inclusions',
            'key': 'key'
        }

        self._exclusions = exclusions
        self._inclusions = inclusions
        self._key = key

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TargetingCriteria':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TargetingCriteria of this TargetingCriteria.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def exclusions(self):
        """Gets the exclusions of this TargetingCriteria.

        The list of values to exclude from targeting. Each value is AND'd together.

        :return: The exclusions of this TargetingCriteria.
        :rtype: List[TargetingValue]
        """
        return self._exclusions

    @exclusions.setter
    def exclusions(self, exclusions):
        """Sets the exclusions of this TargetingCriteria.

        The list of values to exclude from targeting. Each value is AND'd together.

        :param exclusions: The exclusions of this TargetingCriteria.
        :type exclusions: List[TargetingValue]
        """

        self._exclusions = exclusions

    @property
    def inclusions(self):
        """Gets the inclusions of this TargetingCriteria.

        The list of value to include as part of the targeting. Each value is OR'd together.

        :return: The inclusions of this TargetingCriteria.
        :rtype: List[TargetingValue]
        """
        return self._inclusions

    @inclusions.setter
    def inclusions(self, inclusions):
        """Sets the inclusions of this TargetingCriteria.

        The list of value to include as part of the targeting. Each value is OR'd together.

        :param inclusions: The inclusions of this TargetingCriteria.
        :type inclusions: List[TargetingValue]
        """

        self._inclusions = inclusions

    @property
    def key(self):
        """Gets the key of this TargetingCriteria.

        The key representing the shared targeting criterion. Targeting criteria defined by Google ad servers will begin with GOOG_. Third parties may define their own keys. A list of permissible keys along with the acceptable values will be provided as part of the external documentation.

        :return: The key of this TargetingCriteria.
        :rtype: str
        """
        return self._key

    @key.setter
    def key(self, key):
        """Sets the key of this TargetingCriteria.

        The key representing the shared targeting criterion. Targeting criteria defined by Google ad servers will begin with GOOG_. Third parties may define their own keys. A list of permissible keys along with the acceptable values will be provided as part of the external documentation.

        :param key: The key of this TargetingCriteria.
        :type key: str
        """

        self._key = key
