# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.creative_status_row import CreativeStatusRow
from openapi_server import util


class ListFilteredBidsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, creative_status_rows: List[CreativeStatusRow]=None, next_page_token: str=None):
        """ListFilteredBidsResponse - a model defined in OpenAPI

        :param creative_status_rows: The creative_status_rows of this ListFilteredBidsResponse.
        :param next_page_token: The next_page_token of this ListFilteredBidsResponse.
        """
        self.openapi_types = {
            'creative_status_rows': List[CreativeStatusRow],
            'next_page_token': str
        }

        self.attribute_map = {
            'creative_status_rows': 'creativeStatusRows',
            'next_page_token': 'nextPageToken'
        }

        self._creative_status_rows = creative_status_rows
        self._next_page_token = next_page_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListFilteredBidsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListFilteredBidsResponse of this ListFilteredBidsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def creative_status_rows(self):
        """Gets the creative_status_rows of this ListFilteredBidsResponse.

        List of rows, with counts of filtered bids aggregated by filtering reason (for example, creative status).

        :return: The creative_status_rows of this ListFilteredBidsResponse.
        :rtype: List[CreativeStatusRow]
        """
        return self._creative_status_rows

    @creative_status_rows.setter
    def creative_status_rows(self, creative_status_rows):
        """Sets the creative_status_rows of this ListFilteredBidsResponse.

        List of rows, with counts of filtered bids aggregated by filtering reason (for example, creative status).

        :param creative_status_rows: The creative_status_rows of this ListFilteredBidsResponse.
        :type creative_status_rows: List[CreativeStatusRow]
        """

        self._creative_status_rows = creative_status_rows

    @property
    def next_page_token(self):
        """Gets the next_page_token of this ListFilteredBidsResponse.

        A token to retrieve the next page of results. Pass this value in the ListFilteredBidsRequest.pageToken field in the subsequent call to the filteredBids.list method to retrieve the next page of results.

        :return: The next_page_token of this ListFilteredBidsResponse.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this ListFilteredBidsResponse.

        A token to retrieve the next page of results. Pass this value in the ListFilteredBidsRequest.pageToken field in the subsequent call to the filteredBids.list method to retrieve the next page of results.

        :param next_page_token: The next_page_token of this ListFilteredBidsResponse.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token
