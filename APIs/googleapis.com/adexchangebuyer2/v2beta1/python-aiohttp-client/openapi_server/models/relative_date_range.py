# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RelativeDateRange(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, duration_days: int=None, offset_days: int=None):
        """RelativeDateRange - a model defined in OpenAPI

        :param duration_days: The duration_days of this RelativeDateRange.
        :param offset_days: The offset_days of this RelativeDateRange.
        """
        self.openapi_types = {
            'duration_days': int,
            'offset_days': int
        }

        self.attribute_map = {
            'duration_days': 'durationDays',
            'offset_days': 'offsetDays'
        }

        self._duration_days = duration_days
        self._offset_days = offset_days

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RelativeDateRange':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RelativeDateRange of this RelativeDateRange.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def duration_days(self):
        """Gets the duration_days of this RelativeDateRange.

        The number of days in the requested date range, for example, for a range spanning today: 1. For a range spanning the last 7 days: 7.

        :return: The duration_days of this RelativeDateRange.
        :rtype: int
        """
        return self._duration_days

    @duration_days.setter
    def duration_days(self, duration_days):
        """Sets the duration_days of this RelativeDateRange.

        The number of days in the requested date range, for example, for a range spanning today: 1. For a range spanning the last 7 days: 7.

        :param duration_days: The duration_days of this RelativeDateRange.
        :type duration_days: int
        """

        self._duration_days = duration_days

    @property
    def offset_days(self):
        """Gets the offset_days of this RelativeDateRange.

        The end date of the filter set, specified as the number of days before today, for example, for a range where the last date is today: 0.

        :return: The offset_days of this RelativeDateRange.
        :rtype: int
        """
        return self._offset_days

    @offset_days.setter
    def offset_days(self, offset_days):
        """Sets the offset_days of this RelativeDateRange.

        The end date of the filter set, specified as the number of days before today, for example, for a range where the last date is today: 0.

        :param offset_days: The offset_days of this RelativeDateRange.
        :type offset_days: int
        """

        self._offset_days = offset_days
