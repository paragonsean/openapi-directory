# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.price_per_buyer import PricePerBuyer
from openapi_server import util


class NonGuaranteedFixedPriceTerms(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, fixed_prices: List[PricePerBuyer]=None):
        """NonGuaranteedFixedPriceTerms - a model defined in OpenAPI

        :param fixed_prices: The fixed_prices of this NonGuaranteedFixedPriceTerms.
        """
        self.openapi_types = {
            'fixed_prices': List[PricePerBuyer]
        }

        self.attribute_map = {
            'fixed_prices': 'fixedPrices'
        }

        self._fixed_prices = fixed_prices

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NonGuaranteedFixedPriceTerms':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NonGuaranteedFixedPriceTerms of this NonGuaranteedFixedPriceTerms.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def fixed_prices(self):
        """Gets the fixed_prices of this NonGuaranteedFixedPriceTerms.

        Fixed price for the specified buyer.

        :return: The fixed_prices of this NonGuaranteedFixedPriceTerms.
        :rtype: List[PricePerBuyer]
        """
        return self._fixed_prices

    @fixed_prices.setter
    def fixed_prices(self, fixed_prices):
        """Sets the fixed_prices of this NonGuaranteedFixedPriceTerms.

        Fixed price for the specified buyer.

        :param fixed_prices: The fixed_prices of this NonGuaranteedFixedPriceTerms.
        :type fixed_prices: List[PricePerBuyer]
        """

        self._fixed_prices = fixed_prices
