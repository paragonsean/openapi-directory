# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LocationContext(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, geo_criteria_ids: List[int]=None):
        """LocationContext - a model defined in OpenAPI

        :param geo_criteria_ids: The geo_criteria_ids of this LocationContext.
        """
        self.openapi_types = {
            'geo_criteria_ids': List[int]
        }

        self.attribute_map = {
            'geo_criteria_ids': 'geoCriteriaIds'
        }

        self._geo_criteria_ids = geo_criteria_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LocationContext':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LocationContext of this LocationContext.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def geo_criteria_ids(self):
        """Gets the geo_criteria_ids of this LocationContext.

        IDs representing the geo location for this context. Refer to the [geo-table.csv](https://storage.googleapis.com/adx-rtb-dictionaries/geo-table.csv) file for different geo criteria IDs.

        :return: The geo_criteria_ids of this LocationContext.
        :rtype: List[int]
        """
        return self._geo_criteria_ids

    @geo_criteria_ids.setter
    def geo_criteria_ids(self, geo_criteria_ids):
        """Sets the geo_criteria_ids of this LocationContext.

        IDs representing the geo location for this context. Refer to the [geo-table.csv](https://storage.googleapis.com/adx-rtb-dictionaries/geo-table.csv) file for different geo criteria IDs.

        :param geo_criteria_ids: The geo_criteria_ids of this LocationContext.
        :type geo_criteria_ids: List[int]
        """

        self._geo_criteria_ids = geo_criteria_ids
