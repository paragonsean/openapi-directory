# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.metric_value import MetricValue
from openapi_server.models.row_dimensions import RowDimensions
from openapi_server import util


class BidMetricsRow(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bids: MetricValue=None, bids_in_auction: MetricValue=None, billed_impressions: MetricValue=None, impressions_won: MetricValue=None, measurable_impressions: MetricValue=None, reached_queries: MetricValue=None, row_dimensions: RowDimensions=None, viewable_impressions: MetricValue=None):
        """BidMetricsRow - a model defined in OpenAPI

        :param bids: The bids of this BidMetricsRow.
        :param bids_in_auction: The bids_in_auction of this BidMetricsRow.
        :param billed_impressions: The billed_impressions of this BidMetricsRow.
        :param impressions_won: The impressions_won of this BidMetricsRow.
        :param measurable_impressions: The measurable_impressions of this BidMetricsRow.
        :param reached_queries: The reached_queries of this BidMetricsRow.
        :param row_dimensions: The row_dimensions of this BidMetricsRow.
        :param viewable_impressions: The viewable_impressions of this BidMetricsRow.
        """
        self.openapi_types = {
            'bids': MetricValue,
            'bids_in_auction': MetricValue,
            'billed_impressions': MetricValue,
            'impressions_won': MetricValue,
            'measurable_impressions': MetricValue,
            'reached_queries': MetricValue,
            'row_dimensions': RowDimensions,
            'viewable_impressions': MetricValue
        }

        self.attribute_map = {
            'bids': 'bids',
            'bids_in_auction': 'bidsInAuction',
            'billed_impressions': 'billedImpressions',
            'impressions_won': 'impressionsWon',
            'measurable_impressions': 'measurableImpressions',
            'reached_queries': 'reachedQueries',
            'row_dimensions': 'rowDimensions',
            'viewable_impressions': 'viewableImpressions'
        }

        self._bids = bids
        self._bids_in_auction = bids_in_auction
        self._billed_impressions = billed_impressions
        self._impressions_won = impressions_won
        self._measurable_impressions = measurable_impressions
        self._reached_queries = reached_queries
        self._row_dimensions = row_dimensions
        self._viewable_impressions = viewable_impressions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BidMetricsRow':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BidMetricsRow of this BidMetricsRow.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bids(self):
        """Gets the bids of this BidMetricsRow.


        :return: The bids of this BidMetricsRow.
        :rtype: MetricValue
        """
        return self._bids

    @bids.setter
    def bids(self, bids):
        """Sets the bids of this BidMetricsRow.


        :param bids: The bids of this BidMetricsRow.
        :type bids: MetricValue
        """

        self._bids = bids

    @property
    def bids_in_auction(self):
        """Gets the bids_in_auction of this BidMetricsRow.


        :return: The bids_in_auction of this BidMetricsRow.
        :rtype: MetricValue
        """
        return self._bids_in_auction

    @bids_in_auction.setter
    def bids_in_auction(self, bids_in_auction):
        """Sets the bids_in_auction of this BidMetricsRow.


        :param bids_in_auction: The bids_in_auction of this BidMetricsRow.
        :type bids_in_auction: MetricValue
        """

        self._bids_in_auction = bids_in_auction

    @property
    def billed_impressions(self):
        """Gets the billed_impressions of this BidMetricsRow.


        :return: The billed_impressions of this BidMetricsRow.
        :rtype: MetricValue
        """
        return self._billed_impressions

    @billed_impressions.setter
    def billed_impressions(self, billed_impressions):
        """Sets the billed_impressions of this BidMetricsRow.


        :param billed_impressions: The billed_impressions of this BidMetricsRow.
        :type billed_impressions: MetricValue
        """

        self._billed_impressions = billed_impressions

    @property
    def impressions_won(self):
        """Gets the impressions_won of this BidMetricsRow.


        :return: The impressions_won of this BidMetricsRow.
        :rtype: MetricValue
        """
        return self._impressions_won

    @impressions_won.setter
    def impressions_won(self, impressions_won):
        """Sets the impressions_won of this BidMetricsRow.


        :param impressions_won: The impressions_won of this BidMetricsRow.
        :type impressions_won: MetricValue
        """

        self._impressions_won = impressions_won

    @property
    def measurable_impressions(self):
        """Gets the measurable_impressions of this BidMetricsRow.


        :return: The measurable_impressions of this BidMetricsRow.
        :rtype: MetricValue
        """
        return self._measurable_impressions

    @measurable_impressions.setter
    def measurable_impressions(self, measurable_impressions):
        """Sets the measurable_impressions of this BidMetricsRow.


        :param measurable_impressions: The measurable_impressions of this BidMetricsRow.
        :type measurable_impressions: MetricValue
        """

        self._measurable_impressions = measurable_impressions

    @property
    def reached_queries(self):
        """Gets the reached_queries of this BidMetricsRow.


        :return: The reached_queries of this BidMetricsRow.
        :rtype: MetricValue
        """
        return self._reached_queries

    @reached_queries.setter
    def reached_queries(self, reached_queries):
        """Sets the reached_queries of this BidMetricsRow.


        :param reached_queries: The reached_queries of this BidMetricsRow.
        :type reached_queries: MetricValue
        """

        self._reached_queries = reached_queries

    @property
    def row_dimensions(self):
        """Gets the row_dimensions of this BidMetricsRow.


        :return: The row_dimensions of this BidMetricsRow.
        :rtype: RowDimensions
        """
        return self._row_dimensions

    @row_dimensions.setter
    def row_dimensions(self, row_dimensions):
        """Sets the row_dimensions of this BidMetricsRow.


        :param row_dimensions: The row_dimensions of this BidMetricsRow.
        :type row_dimensions: RowDimensions
        """

        self._row_dimensions = row_dimensions

    @property
    def viewable_impressions(self):
        """Gets the viewable_impressions of this BidMetricsRow.


        :return: The viewable_impressions of this BidMetricsRow.
        :rtype: MetricValue
        """
        return self._viewable_impressions

    @viewable_impressions.setter
    def viewable_impressions(self, viewable_impressions):
        """Sets the viewable_impressions of this BidMetricsRow.


        :param viewable_impressions: The viewable_impressions of this BidMetricsRow.
        :type viewable_impressions: MetricValue
        """

        self._viewable_impressions = viewable_impressions
