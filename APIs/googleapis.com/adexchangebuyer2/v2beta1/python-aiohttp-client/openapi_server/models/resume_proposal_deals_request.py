# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ResumeProposalDealsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, external_deal_ids: List[str]=None):
        """ResumeProposalDealsRequest - a model defined in OpenAPI

        :param external_deal_ids: The external_deal_ids of this ResumeProposalDealsRequest.
        """
        self.openapi_types = {
            'external_deal_ids': List[str]
        }

        self.attribute_map = {
            'external_deal_ids': 'externalDealIds'
        }

        self._external_deal_ids = external_deal_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ResumeProposalDealsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ResumeProposalDealsRequest of this ResumeProposalDealsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def external_deal_ids(self):
        """Gets the external_deal_ids of this ResumeProposalDealsRequest.

        The external_deal_id's of the deals to resume. If empty, all the deals in the proposal will be resumed.

        :return: The external_deal_ids of this ResumeProposalDealsRequest.
        :rtype: List[str]
        """
        return self._external_deal_ids

    @external_deal_ids.setter
    def external_deal_ids(self, external_deal_ids):
        """Sets the external_deal_ids of this ResumeProposalDealsRequest.

        The external_deal_id's of the deals to resume. If empty, all the deals in the proposal will be resumed.

        :param external_deal_ids: The external_deal_ids of this ResumeProposalDealsRequest.
        :type external_deal_ids: List[str]
        """

        self._external_deal_ids = external_deal_ids
