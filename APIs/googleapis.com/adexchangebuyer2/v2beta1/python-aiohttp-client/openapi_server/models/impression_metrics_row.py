# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.metric_value import MetricValue
from openapi_server.models.row_dimensions import RowDimensions
from openapi_server import util


class ImpressionMetricsRow(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, available_impressions: MetricValue=None, bid_requests: MetricValue=None, inventory_matches: MetricValue=None, responses_with_bids: MetricValue=None, row_dimensions: RowDimensions=None, successful_responses: MetricValue=None):
        """ImpressionMetricsRow - a model defined in OpenAPI

        :param available_impressions: The available_impressions of this ImpressionMetricsRow.
        :param bid_requests: The bid_requests of this ImpressionMetricsRow.
        :param inventory_matches: The inventory_matches of this ImpressionMetricsRow.
        :param responses_with_bids: The responses_with_bids of this ImpressionMetricsRow.
        :param row_dimensions: The row_dimensions of this ImpressionMetricsRow.
        :param successful_responses: The successful_responses of this ImpressionMetricsRow.
        """
        self.openapi_types = {
            'available_impressions': MetricValue,
            'bid_requests': MetricValue,
            'inventory_matches': MetricValue,
            'responses_with_bids': MetricValue,
            'row_dimensions': RowDimensions,
            'successful_responses': MetricValue
        }

        self.attribute_map = {
            'available_impressions': 'availableImpressions',
            'bid_requests': 'bidRequests',
            'inventory_matches': 'inventoryMatches',
            'responses_with_bids': 'responsesWithBids',
            'row_dimensions': 'rowDimensions',
            'successful_responses': 'successfulResponses'
        }

        self._available_impressions = available_impressions
        self._bid_requests = bid_requests
        self._inventory_matches = inventory_matches
        self._responses_with_bids = responses_with_bids
        self._row_dimensions = row_dimensions
        self._successful_responses = successful_responses

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ImpressionMetricsRow':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ImpressionMetricsRow of this ImpressionMetricsRow.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def available_impressions(self):
        """Gets the available_impressions of this ImpressionMetricsRow.


        :return: The available_impressions of this ImpressionMetricsRow.
        :rtype: MetricValue
        """
        return self._available_impressions

    @available_impressions.setter
    def available_impressions(self, available_impressions):
        """Sets the available_impressions of this ImpressionMetricsRow.


        :param available_impressions: The available_impressions of this ImpressionMetricsRow.
        :type available_impressions: MetricValue
        """

        self._available_impressions = available_impressions

    @property
    def bid_requests(self):
        """Gets the bid_requests of this ImpressionMetricsRow.


        :return: The bid_requests of this ImpressionMetricsRow.
        :rtype: MetricValue
        """
        return self._bid_requests

    @bid_requests.setter
    def bid_requests(self, bid_requests):
        """Sets the bid_requests of this ImpressionMetricsRow.


        :param bid_requests: The bid_requests of this ImpressionMetricsRow.
        :type bid_requests: MetricValue
        """

        self._bid_requests = bid_requests

    @property
    def inventory_matches(self):
        """Gets the inventory_matches of this ImpressionMetricsRow.


        :return: The inventory_matches of this ImpressionMetricsRow.
        :rtype: MetricValue
        """
        return self._inventory_matches

    @inventory_matches.setter
    def inventory_matches(self, inventory_matches):
        """Sets the inventory_matches of this ImpressionMetricsRow.


        :param inventory_matches: The inventory_matches of this ImpressionMetricsRow.
        :type inventory_matches: MetricValue
        """

        self._inventory_matches = inventory_matches

    @property
    def responses_with_bids(self):
        """Gets the responses_with_bids of this ImpressionMetricsRow.


        :return: The responses_with_bids of this ImpressionMetricsRow.
        :rtype: MetricValue
        """
        return self._responses_with_bids

    @responses_with_bids.setter
    def responses_with_bids(self, responses_with_bids):
        """Sets the responses_with_bids of this ImpressionMetricsRow.


        :param responses_with_bids: The responses_with_bids of this ImpressionMetricsRow.
        :type responses_with_bids: MetricValue
        """

        self._responses_with_bids = responses_with_bids

    @property
    def row_dimensions(self):
        """Gets the row_dimensions of this ImpressionMetricsRow.


        :return: The row_dimensions of this ImpressionMetricsRow.
        :rtype: RowDimensions
        """
        return self._row_dimensions

    @row_dimensions.setter
    def row_dimensions(self, row_dimensions):
        """Sets the row_dimensions of this ImpressionMetricsRow.


        :param row_dimensions: The row_dimensions of this ImpressionMetricsRow.
        :type row_dimensions: RowDimensions
        """

        self._row_dimensions = row_dimensions

    @property
    def successful_responses(self):
        """Gets the successful_responses of this ImpressionMetricsRow.


        :return: The successful_responses of this ImpressionMetricsRow.
        :rtype: MetricValue
        """
        return self._successful_responses

    @successful_responses.setter
    def successful_responses(self, successful_responses):
        """Sets the successful_responses of this ImpressionMetricsRow.


        :param successful_responses: The successful_responses of this ImpressionMetricsRow.
        :type successful_responses: MetricValue
        """

        self._successful_responses = successful_responses
