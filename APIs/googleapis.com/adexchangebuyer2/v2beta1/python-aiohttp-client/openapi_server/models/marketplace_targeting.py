# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.criteria_targeting import CriteriaTargeting
from openapi_server.models.inventory_size_targeting import InventorySizeTargeting
from openapi_server.models.placement_targeting import PlacementTargeting
from openapi_server.models.technology_targeting import TechnologyTargeting
from openapi_server.models.video_targeting import VideoTargeting
from openapi_server import util


class MarketplaceTargeting(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, geo_targeting: CriteriaTargeting=None, inventory_size_targeting: InventorySizeTargeting=None, placement_targeting: PlacementTargeting=None, technology_targeting: TechnologyTargeting=None, video_targeting: VideoTargeting=None):
        """MarketplaceTargeting - a model defined in OpenAPI

        :param geo_targeting: The geo_targeting of this MarketplaceTargeting.
        :param inventory_size_targeting: The inventory_size_targeting of this MarketplaceTargeting.
        :param placement_targeting: The placement_targeting of this MarketplaceTargeting.
        :param technology_targeting: The technology_targeting of this MarketplaceTargeting.
        :param video_targeting: The video_targeting of this MarketplaceTargeting.
        """
        self.openapi_types = {
            'geo_targeting': CriteriaTargeting,
            'inventory_size_targeting': InventorySizeTargeting,
            'placement_targeting': PlacementTargeting,
            'technology_targeting': TechnologyTargeting,
            'video_targeting': VideoTargeting
        }

        self.attribute_map = {
            'geo_targeting': 'geoTargeting',
            'inventory_size_targeting': 'inventorySizeTargeting',
            'placement_targeting': 'placementTargeting',
            'technology_targeting': 'technologyTargeting',
            'video_targeting': 'videoTargeting'
        }

        self._geo_targeting = geo_targeting
        self._inventory_size_targeting = inventory_size_targeting
        self._placement_targeting = placement_targeting
        self._technology_targeting = technology_targeting
        self._video_targeting = video_targeting

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MarketplaceTargeting':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MarketplaceTargeting of this MarketplaceTargeting.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def geo_targeting(self):
        """Gets the geo_targeting of this MarketplaceTargeting.


        :return: The geo_targeting of this MarketplaceTargeting.
        :rtype: CriteriaTargeting
        """
        return self._geo_targeting

    @geo_targeting.setter
    def geo_targeting(self, geo_targeting):
        """Sets the geo_targeting of this MarketplaceTargeting.


        :param geo_targeting: The geo_targeting of this MarketplaceTargeting.
        :type geo_targeting: CriteriaTargeting
        """

        self._geo_targeting = geo_targeting

    @property
    def inventory_size_targeting(self):
        """Gets the inventory_size_targeting of this MarketplaceTargeting.


        :return: The inventory_size_targeting of this MarketplaceTargeting.
        :rtype: InventorySizeTargeting
        """
        return self._inventory_size_targeting

    @inventory_size_targeting.setter
    def inventory_size_targeting(self, inventory_size_targeting):
        """Sets the inventory_size_targeting of this MarketplaceTargeting.


        :param inventory_size_targeting: The inventory_size_targeting of this MarketplaceTargeting.
        :type inventory_size_targeting: InventorySizeTargeting
        """

        self._inventory_size_targeting = inventory_size_targeting

    @property
    def placement_targeting(self):
        """Gets the placement_targeting of this MarketplaceTargeting.


        :return: The placement_targeting of this MarketplaceTargeting.
        :rtype: PlacementTargeting
        """
        return self._placement_targeting

    @placement_targeting.setter
    def placement_targeting(self, placement_targeting):
        """Sets the placement_targeting of this MarketplaceTargeting.


        :param placement_targeting: The placement_targeting of this MarketplaceTargeting.
        :type placement_targeting: PlacementTargeting
        """

        self._placement_targeting = placement_targeting

    @property
    def technology_targeting(self):
        """Gets the technology_targeting of this MarketplaceTargeting.


        :return: The technology_targeting of this MarketplaceTargeting.
        :rtype: TechnologyTargeting
        """
        return self._technology_targeting

    @technology_targeting.setter
    def technology_targeting(self, technology_targeting):
        """Sets the technology_targeting of this MarketplaceTargeting.


        :param technology_targeting: The technology_targeting of this MarketplaceTargeting.
        :type technology_targeting: TechnologyTargeting
        """

        self._technology_targeting = technology_targeting

    @property
    def video_targeting(self):
        """Gets the video_targeting of this MarketplaceTargeting.


        :return: The video_targeting of this MarketplaceTargeting.
        :rtype: VideoTargeting
        """
        return self._video_targeting

    @video_targeting.setter
    def video_targeting(self, video_targeting):
        """Sets the video_targeting of this MarketplaceTargeting.


        :param video_targeting: The video_targeting of this MarketplaceTargeting.
        :type video_targeting: VideoTargeting
        """

        self._video_targeting = video_targeting
