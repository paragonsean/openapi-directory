/**
 * Ad Exchange Buyer API II
 * Accesses the latest features for managing Authorized Buyers accounts, Real-Time Bidding configurations and auction metrics, and Marketplace programmatic deals.
 *
 * The version of the OpenAPI document: v2beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The VideoContent model module.
 * @module model/VideoContent
 * @version v2beta1
 */
class VideoContent {
    /**
     * Constructs a new <code>VideoContent</code>.
     * Video content for a creative.
     * @alias module:model/VideoContent
     */
    constructor() { 
        
        VideoContent.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VideoContent</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VideoContent} obj Optional instance to populate.
     * @return {module:model/VideoContent} The populated <code>VideoContent</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VideoContent();

            if (data.hasOwnProperty('videoUrl')) {
                obj['videoUrl'] = ApiClient.convertToType(data['videoUrl'], 'String');
            }
            if (data.hasOwnProperty('videoVastXml')) {
                obj['videoVastXml'] = ApiClient.convertToType(data['videoVastXml'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VideoContent</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VideoContent</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['videoUrl'] && !(typeof data['videoUrl'] === 'string' || data['videoUrl'] instanceof String)) {
            throw new Error("Expected the field `videoUrl` to be a primitive type in the JSON string but got " + data['videoUrl']);
        }
        // ensure the json data is a string
        if (data['videoVastXml'] && !(typeof data['videoVastXml'] === 'string' || data['videoVastXml'] instanceof String)) {
            throw new Error("Expected the field `videoVastXml` to be a primitive type in the JSON string but got " + data['videoVastXml']);
        }

        return true;
    }


}



/**
 * The URL to fetch a video ad.
 * @member {String} videoUrl
 */
VideoContent.prototype['videoUrl'] = undefined;

/**
 * The contents of a VAST document for a video ad. This document should conform to the VAST 2.0 or 3.0 standard.
 * @member {String} videoVastXml
 */
VideoContent.prototype['videoVastXml'] = undefined;






export default VideoContent;

