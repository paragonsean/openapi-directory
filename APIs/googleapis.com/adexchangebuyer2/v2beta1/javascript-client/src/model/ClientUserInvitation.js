/**
 * Ad Exchange Buyer API II
 * Accesses the latest features for managing Authorized Buyers accounts, Real-Time Bidding configurations and auction metrics, and Marketplace programmatic deals.
 *
 * The version of the OpenAPI document: v2beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ClientUserInvitation model module.
 * @module model/ClientUserInvitation
 * @version v2beta1
 */
class ClientUserInvitation {
    /**
     * Constructs a new <code>ClientUserInvitation</code>.
     * An invitation for a new client user to get access to the Authorized Buyers UI. All fields are required unless otherwise specified.
     * @alias module:model/ClientUserInvitation
     */
    constructor() { 
        
        ClientUserInvitation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ClientUserInvitation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ClientUserInvitation} obj Optional instance to populate.
     * @return {module:model/ClientUserInvitation} The populated <code>ClientUserInvitation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ClientUserInvitation();

            if (data.hasOwnProperty('clientAccountId')) {
                obj['clientAccountId'] = ApiClient.convertToType(data['clientAccountId'], 'String');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('invitationId')) {
                obj['invitationId'] = ApiClient.convertToType(data['invitationId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ClientUserInvitation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ClientUserInvitation</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['clientAccountId'] && !(typeof data['clientAccountId'] === 'string' || data['clientAccountId'] instanceof String)) {
            throw new Error("Expected the field `clientAccountId` to be a primitive type in the JSON string but got " + data['clientAccountId']);
        }
        // ensure the json data is a string
        if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
            throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
        }
        // ensure the json data is a string
        if (data['invitationId'] && !(typeof data['invitationId'] === 'string' || data['invitationId'] instanceof String)) {
            throw new Error("Expected the field `invitationId` to be a primitive type in the JSON string but got " + data['invitationId']);
        }

        return true;
    }


}



/**
 * Numerical account ID of the client buyer that the invited user is associated with. The value of this field is ignored in create operations.
 * @member {String} clientAccountId
 */
ClientUserInvitation.prototype['clientAccountId'] = undefined;

/**
 * The email address to which the invitation is sent. Email addresses should be unique among all client users under each sponsor buyer.
 * @member {String} email
 */
ClientUserInvitation.prototype['email'] = undefined;

/**
 * The unique numerical ID of the invitation that is sent to the user. The value of this field is ignored in create operations.
 * @member {String} invitationId
 */
ClientUserInvitation.prototype['invitationId'] = undefined;






export default ClientUserInvitation;

