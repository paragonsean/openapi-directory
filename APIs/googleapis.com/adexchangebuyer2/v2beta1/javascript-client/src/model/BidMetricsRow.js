/**
 * Ad Exchange Buyer API II
 * Accesses the latest features for managing Authorized Buyers accounts, Real-Time Bidding configurations and auction metrics, and Marketplace programmatic deals.
 *
 * The version of the OpenAPI document: v2beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MetricValue from './MetricValue';
import RowDimensions from './RowDimensions';

/**
 * The BidMetricsRow model module.
 * @module model/BidMetricsRow
 * @version v2beta1
 */
class BidMetricsRow {
    /**
     * Constructs a new <code>BidMetricsRow</code>.
     * The set of metrics that are measured in numbers of bids, representing how many bids with the specified dimension values were considered eligible at each stage of the bidding funnel;
     * @alias module:model/BidMetricsRow
     */
    constructor() { 
        
        BidMetricsRow.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BidMetricsRow</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BidMetricsRow} obj Optional instance to populate.
     * @return {module:model/BidMetricsRow} The populated <code>BidMetricsRow</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BidMetricsRow();

            if (data.hasOwnProperty('bids')) {
                obj['bids'] = MetricValue.constructFromObject(data['bids']);
            }
            if (data.hasOwnProperty('bidsInAuction')) {
                obj['bidsInAuction'] = MetricValue.constructFromObject(data['bidsInAuction']);
            }
            if (data.hasOwnProperty('billedImpressions')) {
                obj['billedImpressions'] = MetricValue.constructFromObject(data['billedImpressions']);
            }
            if (data.hasOwnProperty('impressionsWon')) {
                obj['impressionsWon'] = MetricValue.constructFromObject(data['impressionsWon']);
            }
            if (data.hasOwnProperty('measurableImpressions')) {
                obj['measurableImpressions'] = MetricValue.constructFromObject(data['measurableImpressions']);
            }
            if (data.hasOwnProperty('reachedQueries')) {
                obj['reachedQueries'] = MetricValue.constructFromObject(data['reachedQueries']);
            }
            if (data.hasOwnProperty('rowDimensions')) {
                obj['rowDimensions'] = RowDimensions.constructFromObject(data['rowDimensions']);
            }
            if (data.hasOwnProperty('viewableImpressions')) {
                obj['viewableImpressions'] = MetricValue.constructFromObject(data['viewableImpressions']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BidMetricsRow</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BidMetricsRow</code>.
     */
    static validateJSON(data) {
        // validate the optional field `bids`
        if (data['bids']) { // data not null
          MetricValue.validateJSON(data['bids']);
        }
        // validate the optional field `bidsInAuction`
        if (data['bidsInAuction']) { // data not null
          MetricValue.validateJSON(data['bidsInAuction']);
        }
        // validate the optional field `billedImpressions`
        if (data['billedImpressions']) { // data not null
          MetricValue.validateJSON(data['billedImpressions']);
        }
        // validate the optional field `impressionsWon`
        if (data['impressionsWon']) { // data not null
          MetricValue.validateJSON(data['impressionsWon']);
        }
        // validate the optional field `measurableImpressions`
        if (data['measurableImpressions']) { // data not null
          MetricValue.validateJSON(data['measurableImpressions']);
        }
        // validate the optional field `reachedQueries`
        if (data['reachedQueries']) { // data not null
          MetricValue.validateJSON(data['reachedQueries']);
        }
        // validate the optional field `rowDimensions`
        if (data['rowDimensions']) { // data not null
          RowDimensions.validateJSON(data['rowDimensions']);
        }
        // validate the optional field `viewableImpressions`
        if (data['viewableImpressions']) { // data not null
          MetricValue.validateJSON(data['viewableImpressions']);
        }

        return true;
    }


}



/**
 * @member {module:model/MetricValue} bids
 */
BidMetricsRow.prototype['bids'] = undefined;

/**
 * @member {module:model/MetricValue} bidsInAuction
 */
BidMetricsRow.prototype['bidsInAuction'] = undefined;

/**
 * @member {module:model/MetricValue} billedImpressions
 */
BidMetricsRow.prototype['billedImpressions'] = undefined;

/**
 * @member {module:model/MetricValue} impressionsWon
 */
BidMetricsRow.prototype['impressionsWon'] = undefined;

/**
 * @member {module:model/MetricValue} measurableImpressions
 */
BidMetricsRow.prototype['measurableImpressions'] = undefined;

/**
 * @member {module:model/MetricValue} reachedQueries
 */
BidMetricsRow.prototype['reachedQueries'] = undefined;

/**
 * @member {module:model/RowDimensions} rowDimensions
 */
BidMetricsRow.prototype['rowDimensions'] = undefined;

/**
 * @member {module:model/MetricValue} viewableImpressions
 */
BidMetricsRow.prototype['viewableImpressions'] = undefined;






export default BidMetricsRow;

