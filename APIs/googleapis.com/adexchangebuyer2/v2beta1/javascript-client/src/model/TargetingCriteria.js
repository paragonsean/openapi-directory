/**
 * Ad Exchange Buyer API II
 * Accesses the latest features for managing Authorized Buyers accounts, Real-Time Bidding configurations and auction metrics, and Marketplace programmatic deals.
 *
 * The version of the OpenAPI document: v2beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TargetingValue from './TargetingValue';

/**
 * The TargetingCriteria model module.
 * @module model/TargetingCriteria
 * @version v2beta1
 */
class TargetingCriteria {
    /**
     * Constructs a new <code>TargetingCriteria</code>.
     * Advertisers can target different attributes of an ad slot. For example, they can choose to show ads only if the user is in the U.S. Such targeting criteria can be specified as part of Shared Targeting.
     * @alias module:model/TargetingCriteria
     */
    constructor() { 
        
        TargetingCriteria.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TargetingCriteria</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TargetingCriteria} obj Optional instance to populate.
     * @return {module:model/TargetingCriteria} The populated <code>TargetingCriteria</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TargetingCriteria();

            if (data.hasOwnProperty('exclusions')) {
                obj['exclusions'] = ApiClient.convertToType(data['exclusions'], [TargetingValue]);
            }
            if (data.hasOwnProperty('inclusions')) {
                obj['inclusions'] = ApiClient.convertToType(data['inclusions'], [TargetingValue]);
            }
            if (data.hasOwnProperty('key')) {
                obj['key'] = ApiClient.convertToType(data['key'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TargetingCriteria</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TargetingCriteria</code>.
     */
    static validateJSON(data) {
        if (data['exclusions']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['exclusions'])) {
                throw new Error("Expected the field `exclusions` to be an array in the JSON data but got " + data['exclusions']);
            }
            // validate the optional field `exclusions` (array)
            for (const item of data['exclusions']) {
                TargetingValue.validateJSON(item);
            };
        }
        if (data['inclusions']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['inclusions'])) {
                throw new Error("Expected the field `inclusions` to be an array in the JSON data but got " + data['inclusions']);
            }
            // validate the optional field `inclusions` (array)
            for (const item of data['inclusions']) {
                TargetingValue.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['key'] && !(typeof data['key'] === 'string' || data['key'] instanceof String)) {
            throw new Error("Expected the field `key` to be a primitive type in the JSON string but got " + data['key']);
        }

        return true;
    }


}



/**
 * The list of values to exclude from targeting. Each value is AND'd together.
 * @member {Array.<module:model/TargetingValue>} exclusions
 */
TargetingCriteria.prototype['exclusions'] = undefined;

/**
 * The list of value to include as part of the targeting. Each value is OR'd together.
 * @member {Array.<module:model/TargetingValue>} inclusions
 */
TargetingCriteria.prototype['inclusions'] = undefined;

/**
 * The key representing the shared targeting criterion. Targeting criteria defined by Google ad servers will begin with GOOG_. Third parties may define their own keys. A list of permissible keys along with the acceptable values will be provided as part of the external documentation.
 * @member {String} key
 */
TargetingCriteria.prototype['key'] = undefined;






export default TargetingCriteria;

