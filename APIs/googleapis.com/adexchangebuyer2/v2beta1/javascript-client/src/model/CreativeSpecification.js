/**
 * Ad Exchange Buyer API II
 * Accesses the latest features for managing Authorized Buyers accounts, Real-Time Bidding configurations and auction metrics, and Marketplace programmatic deals.
 *
 * The version of the OpenAPI document: v2beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AdSize from './AdSize';

/**
 * The CreativeSpecification model module.
 * @module model/CreativeSpecification
 * @version v2beta1
 */
class CreativeSpecification {
    /**
     * Constructs a new <code>CreativeSpecification</code>.
     * Represents information for a creative that is associated with a Programmatic Guaranteed/Preferred Deal in Ad Manager.
     * @alias module:model/CreativeSpecification
     */
    constructor() { 
        
        CreativeSpecification.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreativeSpecification</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreativeSpecification} obj Optional instance to populate.
     * @return {module:model/CreativeSpecification} The populated <code>CreativeSpecification</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreativeSpecification();

            if (data.hasOwnProperty('creativeCompanionSizes')) {
                obj['creativeCompanionSizes'] = ApiClient.convertToType(data['creativeCompanionSizes'], [AdSize]);
            }
            if (data.hasOwnProperty('creativeSize')) {
                obj['creativeSize'] = AdSize.constructFromObject(data['creativeSize']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreativeSpecification</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreativeSpecification</code>.
     */
    static validateJSON(data) {
        if (data['creativeCompanionSizes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['creativeCompanionSizes'])) {
                throw new Error("Expected the field `creativeCompanionSizes` to be an array in the JSON data but got " + data['creativeCompanionSizes']);
            }
            // validate the optional field `creativeCompanionSizes` (array)
            for (const item of data['creativeCompanionSizes']) {
                AdSize.validateJSON(item);
            };
        }
        // validate the optional field `creativeSize`
        if (data['creativeSize']) { // data not null
          AdSize.validateJSON(data['creativeSize']);
        }

        return true;
    }


}



/**
 * Companion sizes may be filled in only when this is a video creative.
 * @member {Array.<module:model/AdSize>} creativeCompanionSizes
 */
CreativeSpecification.prototype['creativeCompanionSizes'] = undefined;

/**
 * @member {module:model/AdSize} creativeSize
 */
CreativeSpecification.prototype['creativeSize'] = undefined;






export default CreativeSpecification;

