/**
 * Ad Exchange Buyer API II
 * Accesses the latest features for managing Authorized Buyers accounts, Real-Time Bidding configurations and auction metrics, and Marketplace programmatic deals.
 *
 * The version of the OpenAPI document: v2beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AdTechnologyProviders from './AdTechnologyProviders';
import Correction from './Correction';
import HtmlContent from './HtmlContent';
import NativeContent from './NativeContent';
import ServingRestriction from './ServingRestriction';
import VideoContent from './VideoContent';

/**
 * The Creative model module.
 * @module model/Creative
 * @version v2beta1
 */
class Creative {
    /**
     * Constructs a new <code>Creative</code>.
     * A creative and its classification data.
     * @alias module:model/Creative
     */
    constructor() { 
        
        Creative.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Creative</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Creative} obj Optional instance to populate.
     * @return {module:model/Creative} The populated <code>Creative</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Creative();

            if (data.hasOwnProperty('accountId')) {
                obj['accountId'] = ApiClient.convertToType(data['accountId'], 'String');
            }
            if (data.hasOwnProperty('adChoicesDestinationUrl')) {
                obj['adChoicesDestinationUrl'] = ApiClient.convertToType(data['adChoicesDestinationUrl'], 'String');
            }
            if (data.hasOwnProperty('adTechnologyProviders')) {
                obj['adTechnologyProviders'] = AdTechnologyProviders.constructFromObject(data['adTechnologyProviders']);
            }
            if (data.hasOwnProperty('advertiserName')) {
                obj['advertiserName'] = ApiClient.convertToType(data['advertiserName'], 'String');
            }
            if (data.hasOwnProperty('agencyId')) {
                obj['agencyId'] = ApiClient.convertToType(data['agencyId'], 'String');
            }
            if (data.hasOwnProperty('apiUpdateTime')) {
                obj['apiUpdateTime'] = ApiClient.convertToType(data['apiUpdateTime'], 'String');
            }
            if (data.hasOwnProperty('attributes')) {
                obj['attributes'] = ApiClient.convertToType(data['attributes'], ['String']);
            }
            if (data.hasOwnProperty('clickThroughUrls')) {
                obj['clickThroughUrls'] = ApiClient.convertToType(data['clickThroughUrls'], ['String']);
            }
            if (data.hasOwnProperty('corrections')) {
                obj['corrections'] = ApiClient.convertToType(data['corrections'], [Correction]);
            }
            if (data.hasOwnProperty('creativeId')) {
                obj['creativeId'] = ApiClient.convertToType(data['creativeId'], 'String');
            }
            if (data.hasOwnProperty('dealsStatus')) {
                obj['dealsStatus'] = ApiClient.convertToType(data['dealsStatus'], 'String');
            }
            if (data.hasOwnProperty('declaredClickThroughUrls')) {
                obj['declaredClickThroughUrls'] = ApiClient.convertToType(data['declaredClickThroughUrls'], ['String']);
            }
            if (data.hasOwnProperty('detectedAdvertiserIds')) {
                obj['detectedAdvertiserIds'] = ApiClient.convertToType(data['detectedAdvertiserIds'], ['String']);
            }
            if (data.hasOwnProperty('detectedDomains')) {
                obj['detectedDomains'] = ApiClient.convertToType(data['detectedDomains'], ['String']);
            }
            if (data.hasOwnProperty('detectedLanguages')) {
                obj['detectedLanguages'] = ApiClient.convertToType(data['detectedLanguages'], ['String']);
            }
            if (data.hasOwnProperty('detectedProductCategories')) {
                obj['detectedProductCategories'] = ApiClient.convertToType(data['detectedProductCategories'], ['Number']);
            }
            if (data.hasOwnProperty('detectedSensitiveCategories')) {
                obj['detectedSensitiveCategories'] = ApiClient.convertToType(data['detectedSensitiveCategories'], ['Number']);
            }
            if (data.hasOwnProperty('html')) {
                obj['html'] = HtmlContent.constructFromObject(data['html']);
            }
            if (data.hasOwnProperty('impressionTrackingUrls')) {
                obj['impressionTrackingUrls'] = ApiClient.convertToType(data['impressionTrackingUrls'], ['String']);
            }
            if (data.hasOwnProperty('native')) {
                obj['native'] = NativeContent.constructFromObject(data['native']);
            }
            if (data.hasOwnProperty('openAuctionStatus')) {
                obj['openAuctionStatus'] = ApiClient.convertToType(data['openAuctionStatus'], 'String');
            }
            if (data.hasOwnProperty('restrictedCategories')) {
                obj['restrictedCategories'] = ApiClient.convertToType(data['restrictedCategories'], ['String']);
            }
            if (data.hasOwnProperty('servingRestrictions')) {
                obj['servingRestrictions'] = ApiClient.convertToType(data['servingRestrictions'], [ServingRestriction]);
            }
            if (data.hasOwnProperty('vendorIds')) {
                obj['vendorIds'] = ApiClient.convertToType(data['vendorIds'], ['Number']);
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'Number');
            }
            if (data.hasOwnProperty('video')) {
                obj['video'] = VideoContent.constructFromObject(data['video']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Creative</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Creative</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['accountId'] && !(typeof data['accountId'] === 'string' || data['accountId'] instanceof String)) {
            throw new Error("Expected the field `accountId` to be a primitive type in the JSON string but got " + data['accountId']);
        }
        // ensure the json data is a string
        if (data['adChoicesDestinationUrl'] && !(typeof data['adChoicesDestinationUrl'] === 'string' || data['adChoicesDestinationUrl'] instanceof String)) {
            throw new Error("Expected the field `adChoicesDestinationUrl` to be a primitive type in the JSON string but got " + data['adChoicesDestinationUrl']);
        }
        // validate the optional field `adTechnologyProviders`
        if (data['adTechnologyProviders']) { // data not null
          AdTechnologyProviders.validateJSON(data['adTechnologyProviders']);
        }
        // ensure the json data is a string
        if (data['advertiserName'] && !(typeof data['advertiserName'] === 'string' || data['advertiserName'] instanceof String)) {
            throw new Error("Expected the field `advertiserName` to be a primitive type in the JSON string but got " + data['advertiserName']);
        }
        // ensure the json data is a string
        if (data['agencyId'] && !(typeof data['agencyId'] === 'string' || data['agencyId'] instanceof String)) {
            throw new Error("Expected the field `agencyId` to be a primitive type in the JSON string but got " + data['agencyId']);
        }
        // ensure the json data is a string
        if (data['apiUpdateTime'] && !(typeof data['apiUpdateTime'] === 'string' || data['apiUpdateTime'] instanceof String)) {
            throw new Error("Expected the field `apiUpdateTime` to be a primitive type in the JSON string but got " + data['apiUpdateTime']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['attributes'])) {
            throw new Error("Expected the field `attributes` to be an array in the JSON data but got " + data['attributes']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['clickThroughUrls'])) {
            throw new Error("Expected the field `clickThroughUrls` to be an array in the JSON data but got " + data['clickThroughUrls']);
        }
        if (data['corrections']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['corrections'])) {
                throw new Error("Expected the field `corrections` to be an array in the JSON data but got " + data['corrections']);
            }
            // validate the optional field `corrections` (array)
            for (const item of data['corrections']) {
                Correction.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['creativeId'] && !(typeof data['creativeId'] === 'string' || data['creativeId'] instanceof String)) {
            throw new Error("Expected the field `creativeId` to be a primitive type in the JSON string but got " + data['creativeId']);
        }
        // ensure the json data is a string
        if (data['dealsStatus'] && !(typeof data['dealsStatus'] === 'string' || data['dealsStatus'] instanceof String)) {
            throw new Error("Expected the field `dealsStatus` to be a primitive type in the JSON string but got " + data['dealsStatus']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['declaredClickThroughUrls'])) {
            throw new Error("Expected the field `declaredClickThroughUrls` to be an array in the JSON data but got " + data['declaredClickThroughUrls']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['detectedAdvertiserIds'])) {
            throw new Error("Expected the field `detectedAdvertiserIds` to be an array in the JSON data but got " + data['detectedAdvertiserIds']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['detectedDomains'])) {
            throw new Error("Expected the field `detectedDomains` to be an array in the JSON data but got " + data['detectedDomains']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['detectedLanguages'])) {
            throw new Error("Expected the field `detectedLanguages` to be an array in the JSON data but got " + data['detectedLanguages']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['detectedProductCategories'])) {
            throw new Error("Expected the field `detectedProductCategories` to be an array in the JSON data but got " + data['detectedProductCategories']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['detectedSensitiveCategories'])) {
            throw new Error("Expected the field `detectedSensitiveCategories` to be an array in the JSON data but got " + data['detectedSensitiveCategories']);
        }
        // validate the optional field `html`
        if (data['html']) { // data not null
          HtmlContent.validateJSON(data['html']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['impressionTrackingUrls'])) {
            throw new Error("Expected the field `impressionTrackingUrls` to be an array in the JSON data but got " + data['impressionTrackingUrls']);
        }
        // validate the optional field `native`
        if (data['native']) { // data not null
          NativeContent.validateJSON(data['native']);
        }
        // ensure the json data is a string
        if (data['openAuctionStatus'] && !(typeof data['openAuctionStatus'] === 'string' || data['openAuctionStatus'] instanceof String)) {
            throw new Error("Expected the field `openAuctionStatus` to be a primitive type in the JSON string but got " + data['openAuctionStatus']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['restrictedCategories'])) {
            throw new Error("Expected the field `restrictedCategories` to be an array in the JSON data but got " + data['restrictedCategories']);
        }
        if (data['servingRestrictions']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['servingRestrictions'])) {
                throw new Error("Expected the field `servingRestrictions` to be an array in the JSON data but got " + data['servingRestrictions']);
            }
            // validate the optional field `servingRestrictions` (array)
            for (const item of data['servingRestrictions']) {
                ServingRestriction.validateJSON(item);
            };
        }
        // ensure the json data is an array
        if (!Array.isArray(data['vendorIds'])) {
            throw new Error("Expected the field `vendorIds` to be an array in the JSON data but got " + data['vendorIds']);
        }
        // validate the optional field `video`
        if (data['video']) { // data not null
          VideoContent.validateJSON(data['video']);
        }

        return true;
    }


}



/**
 * The account that this creative belongs to. Can be used to filter the response of the creatives.list method.
 * @member {String} accountId
 */
Creative.prototype['accountId'] = undefined;

/**
 * The link to AdChoices destination page.
 * @member {String} adChoicesDestinationUrl
 */
Creative.prototype['adChoicesDestinationUrl'] = undefined;

/**
 * @member {module:model/AdTechnologyProviders} adTechnologyProviders
 */
Creative.prototype['adTechnologyProviders'] = undefined;

/**
 * The name of the company being advertised in the creative.
 * @member {String} advertiserName
 */
Creative.prototype['advertiserName'] = undefined;

/**
 * The agency ID for this creative.
 * @member {String} agencyId
 */
Creative.prototype['agencyId'] = undefined;

/**
 * Output only. The last update timestamp of the creative through the API.
 * @member {String} apiUpdateTime
 */
Creative.prototype['apiUpdateTime'] = undefined;

/**
 * All attributes for the ads that may be shown from this creative. Can be used to filter the response of the creatives.list method.
 * @member {Array.<module:model/Creative.AttributesEnum>} attributes
 */
Creative.prototype['attributes'] = undefined;

/**
 * The set of destination URLs for the creative.
 * @member {Array.<String>} clickThroughUrls
 */
Creative.prototype['clickThroughUrls'] = undefined;

/**
 * Output only. Shows any corrections that were applied to this creative.
 * @member {Array.<module:model/Correction>} corrections
 */
Creative.prototype['corrections'] = undefined;

/**
 * The buyer-defined creative ID of this creative. Can be used to filter the response of the creatives.list method.
 * @member {String} creativeId
 */
Creative.prototype['creativeId'] = undefined;

/**
 * Output only. The top-level deals status of this creative. If disapproved, an entry for 'auctionType=DIRECT_DEALS' (or 'ALL') in serving_restrictions will also exist. Note that this may be nuanced with other contextual restrictions, in which case, it may be preferable to read from serving_restrictions directly. Can be used to filter the response of the creatives.list method.
 * @member {module:model/Creative.DealsStatusEnum} dealsStatus
 */
Creative.prototype['dealsStatus'] = undefined;

/**
 * The set of declared destination URLs for the creative.
 * @member {Array.<String>} declaredClickThroughUrls
 */
Creative.prototype['declaredClickThroughUrls'] = undefined;

/**
 * Output only. Detected advertiser IDs, if any.
 * @member {Array.<String>} detectedAdvertiserIds
 */
Creative.prototype['detectedAdvertiserIds'] = undefined;

/**
 * Output only. The detected domains for this creative.
 * @member {Array.<String>} detectedDomains
 */
Creative.prototype['detectedDomains'] = undefined;

/**
 * Output only. The detected languages for this creative. The order is arbitrary. The codes are 2 or 5 characters and are documented at https://developers.google.com/adwords/api/docs/appendix/languagecodes.
 * @member {Array.<String>} detectedLanguages
 */
Creative.prototype['detectedLanguages'] = undefined;

/**
 * Output only. Detected product categories, if any. See the ad-product-categories.txt file in the technical documentation for a list of IDs.
 * @member {Array.<Number>} detectedProductCategories
 */
Creative.prototype['detectedProductCategories'] = undefined;

/**
 * Output only. Detected sensitive categories, if any. See the ad-sensitive-categories.txt file in the technical documentation for a list of IDs. You should use these IDs along with the excluded-sensitive-category field in the bid request to filter your bids.
 * @member {Array.<Number>} detectedSensitiveCategories
 */
Creative.prototype['detectedSensitiveCategories'] = undefined;

/**
 * @member {module:model/HtmlContent} html
 */
Creative.prototype['html'] = undefined;

/**
 * The set of URLs to be called to record an impression.
 * @member {Array.<String>} impressionTrackingUrls
 */
Creative.prototype['impressionTrackingUrls'] = undefined;

/**
 * @member {module:model/NativeContent} native
 */
Creative.prototype['native'] = undefined;

/**
 * Output only. The top-level open auction status of this creative. If disapproved, an entry for 'auctionType = OPEN_AUCTION' (or 'ALL') in serving_restrictions will also exist. Note that this may be nuanced with other contextual restrictions, in which case, it may be preferable to read from serving_restrictions directly. Can be used to filter the response of the creatives.list method.
 * @member {module:model/Creative.OpenAuctionStatusEnum} openAuctionStatus
 */
Creative.prototype['openAuctionStatus'] = undefined;

/**
 * All restricted categories for the ads that may be shown from this creative.
 * @member {Array.<module:model/Creative.RestrictedCategoriesEnum>} restrictedCategories
 */
Creative.prototype['restrictedCategories'] = undefined;

/**
 * Output only. The granular status of this ad in specific contexts. A context here relates to where something ultimately serves (for example, a physical location, a platform, an HTTPS versus HTTP request, or the type of auction).
 * @member {Array.<module:model/ServingRestriction>} servingRestrictions
 */
Creative.prototype['servingRestrictions'] = undefined;

/**
 * All vendor IDs for the ads that may be shown from this creative. See https://storage.googleapis.com/adx-rtb-dictionaries/vendors.txt for possible values.
 * @member {Array.<Number>} vendorIds
 */
Creative.prototype['vendorIds'] = undefined;

/**
 * Output only. The version of this creative.
 * @member {Number} version
 */
Creative.prototype['version'] = undefined;

/**
 * @member {module:model/VideoContent} video
 */
Creative.prototype['video'] = undefined;





/**
 * Allowed values for the <code>attributes</code> property.
 * @enum {String}
 * @readonly
 */
Creative['AttributesEnum'] = {

    /**
     * value: "ATTRIBUTE_UNSPECIFIED"
     * @const
     */
    "ATTRIBUTE_UNSPECIFIED": "ATTRIBUTE_UNSPECIFIED",

    /**
     * value: "IMAGE_RICH_MEDIA"
     * @const
     */
    "IMAGE_RICH_MEDIA": "IMAGE_RICH_MEDIA",

    /**
     * value: "ADOBE_FLASH_FLV"
     * @const
     */
    "ADOBE_FLASH_FLV": "ADOBE_FLASH_FLV",

    /**
     * value: "IS_TAGGED"
     * @const
     */
    "IS_TAGGED": "IS_TAGGED",

    /**
     * value: "IS_COOKIE_TARGETED"
     * @const
     */
    "IS_COOKIE_TARGETED": "IS_COOKIE_TARGETED",

    /**
     * value: "IS_USER_INTEREST_TARGETED"
     * @const
     */
    "IS_USER_INTEREST_TARGETED": "IS_USER_INTEREST_TARGETED",

    /**
     * value: "EXPANDING_DIRECTION_NONE"
     * @const
     */
    "EXPANDING_DIRECTION_NONE": "EXPANDING_DIRECTION_NONE",

    /**
     * value: "EXPANDING_DIRECTION_UP"
     * @const
     */
    "EXPANDING_DIRECTION_UP": "EXPANDING_DIRECTION_UP",

    /**
     * value: "EXPANDING_DIRECTION_DOWN"
     * @const
     */
    "EXPANDING_DIRECTION_DOWN": "EXPANDING_DIRECTION_DOWN",

    /**
     * value: "EXPANDING_DIRECTION_LEFT"
     * @const
     */
    "EXPANDING_DIRECTION_LEFT": "EXPANDING_DIRECTION_LEFT",

    /**
     * value: "EXPANDING_DIRECTION_RIGHT"
     * @const
     */
    "EXPANDING_DIRECTION_RIGHT": "EXPANDING_DIRECTION_RIGHT",

    /**
     * value: "EXPANDING_DIRECTION_UP_LEFT"
     * @const
     */
    "EXPANDING_DIRECTION_UP_LEFT": "EXPANDING_DIRECTION_UP_LEFT",

    /**
     * value: "EXPANDING_DIRECTION_UP_RIGHT"
     * @const
     */
    "EXPANDING_DIRECTION_UP_RIGHT": "EXPANDING_DIRECTION_UP_RIGHT",

    /**
     * value: "EXPANDING_DIRECTION_DOWN_LEFT"
     * @const
     */
    "EXPANDING_DIRECTION_DOWN_LEFT": "EXPANDING_DIRECTION_DOWN_LEFT",

    /**
     * value: "EXPANDING_DIRECTION_DOWN_RIGHT"
     * @const
     */
    "EXPANDING_DIRECTION_DOWN_RIGHT": "EXPANDING_DIRECTION_DOWN_RIGHT",

    /**
     * value: "CREATIVE_TYPE_HTML"
     * @const
     */
    "CREATIVE_TYPE_HTML": "CREATIVE_TYPE_HTML",

    /**
     * value: "CREATIVE_TYPE_VAST_VIDEO"
     * @const
     */
    "CREATIVE_TYPE_VAST_VIDEO": "CREATIVE_TYPE_VAST_VIDEO",

    /**
     * value: "EXPANDING_DIRECTION_UP_OR_DOWN"
     * @const
     */
    "EXPANDING_DIRECTION_UP_OR_DOWN": "EXPANDING_DIRECTION_UP_OR_DOWN",

    /**
     * value: "EXPANDING_DIRECTION_LEFT_OR_RIGHT"
     * @const
     */
    "EXPANDING_DIRECTION_LEFT_OR_RIGHT": "EXPANDING_DIRECTION_LEFT_OR_RIGHT",

    /**
     * value: "EXPANDING_DIRECTION_ANY_DIAGONAL"
     * @const
     */
    "EXPANDING_DIRECTION_ANY_DIAGONAL": "EXPANDING_DIRECTION_ANY_DIAGONAL",

    /**
     * value: "EXPANDING_ACTION_ROLLOVER_TO_EXPAND"
     * @const
     */
    "EXPANDING_ACTION_ROLLOVER_TO_EXPAND": "EXPANDING_ACTION_ROLLOVER_TO_EXPAND",

    /**
     * value: "INSTREAM_VAST_VIDEO_TYPE_VPAID_FLASH"
     * @const
     */
    "INSTREAM_VAST_VIDEO_TYPE_VPAID_FLASH": "INSTREAM_VAST_VIDEO_TYPE_VPAID_FLASH",

    /**
     * value: "RICH_MEDIA_CAPABILITY_TYPE_MRAID"
     * @const
     */
    "RICH_MEDIA_CAPABILITY_TYPE_MRAID": "RICH_MEDIA_CAPABILITY_TYPE_MRAID",

    /**
     * value: "RICH_MEDIA_CAPABILITY_TYPE_FLASH"
     * @const
     */
    "RICH_MEDIA_CAPABILITY_TYPE_FLASH": "RICH_MEDIA_CAPABILITY_TYPE_FLASH",

    /**
     * value: "RICH_MEDIA_CAPABILITY_TYPE_HTML5"
     * @const
     */
    "RICH_MEDIA_CAPABILITY_TYPE_HTML5": "RICH_MEDIA_CAPABILITY_TYPE_HTML5",

    /**
     * value: "SKIPPABLE_INSTREAM_VIDEO"
     * @const
     */
    "SKIPPABLE_INSTREAM_VIDEO": "SKIPPABLE_INSTREAM_VIDEO",

    /**
     * value: "RICH_MEDIA_CAPABILITY_TYPE_SSL"
     * @const
     */
    "RICH_MEDIA_CAPABILITY_TYPE_SSL": "RICH_MEDIA_CAPABILITY_TYPE_SSL",

    /**
     * value: "RICH_MEDIA_CAPABILITY_TYPE_NON_SSL"
     * @const
     */
    "RICH_MEDIA_CAPABILITY_TYPE_NON_SSL": "RICH_MEDIA_CAPABILITY_TYPE_NON_SSL",

    /**
     * value: "RICH_MEDIA_CAPABILITY_TYPE_INTERSTITIAL"
     * @const
     */
    "RICH_MEDIA_CAPABILITY_TYPE_INTERSTITIAL": "RICH_MEDIA_CAPABILITY_TYPE_INTERSTITIAL",

    /**
     * value: "NON_SKIPPABLE_INSTREAM_VIDEO"
     * @const
     */
    "NON_SKIPPABLE_INSTREAM_VIDEO": "NON_SKIPPABLE_INSTREAM_VIDEO",

    /**
     * value: "NATIVE_ELIGIBILITY_ELIGIBLE"
     * @const
     */
    "NATIVE_ELIGIBILITY_ELIGIBLE": "NATIVE_ELIGIBILITY_ELIGIBLE",

    /**
     * value: "NON_VPAID"
     * @const
     */
    "NON_VPAID": "NON_VPAID",

    /**
     * value: "NATIVE_ELIGIBILITY_NOT_ELIGIBLE"
     * @const
     */
    "NATIVE_ELIGIBILITY_NOT_ELIGIBLE": "NATIVE_ELIGIBILITY_NOT_ELIGIBLE",

    /**
     * value: "ANY_INTERSTITIAL"
     * @const
     */
    "ANY_INTERSTITIAL": "ANY_INTERSTITIAL",

    /**
     * value: "NON_INTERSTITIAL"
     * @const
     */
    "NON_INTERSTITIAL": "NON_INTERSTITIAL",

    /**
     * value: "IN_BANNER_VIDEO"
     * @const
     */
    "IN_BANNER_VIDEO": "IN_BANNER_VIDEO",

    /**
     * value: "RENDERING_SIZELESS_ADX"
     * @const
     */
    "RENDERING_SIZELESS_ADX": "RENDERING_SIZELESS_ADX",

    /**
     * value: "OMSDK_1_0"
     * @const
     */
    "OMSDK_1_0": "OMSDK_1_0",

    /**
     * value: "RENDERING_PLAYABLE"
     * @const
     */
    "RENDERING_PLAYABLE": "RENDERING_PLAYABLE"
};


/**
 * Allowed values for the <code>dealsStatus</code> property.
 * @enum {String}
 * @readonly
 */
Creative['DealsStatusEnum'] = {

    /**
     * value: "STATUS_UNSPECIFIED"
     * @const
     */
    "STATUS_UNSPECIFIED": "STATUS_UNSPECIFIED",

    /**
     * value: "NOT_CHECKED"
     * @const
     */
    "NOT_CHECKED": "NOT_CHECKED",

    /**
     * value: "CONDITIONALLY_APPROVED"
     * @const
     */
    "CONDITIONALLY_APPROVED": "CONDITIONALLY_APPROVED",

    /**
     * value: "APPROVED"
     * @const
     */
    "APPROVED": "APPROVED",

    /**
     * value: "DISAPPROVED"
     * @const
     */
    "DISAPPROVED": "DISAPPROVED",

    /**
     * value: "PENDING_REVIEW"
     * @const
     */
    "PENDING_REVIEW": "PENDING_REVIEW",

    /**
     * value: "STATUS_TYPE_UNSPECIFIED"
     * @const
     */
    "STATUS_TYPE_UNSPECIFIED": "STATUS_TYPE_UNSPECIFIED"
};


/**
 * Allowed values for the <code>openAuctionStatus</code> property.
 * @enum {String}
 * @readonly
 */
Creative['OpenAuctionStatusEnum'] = {

    /**
     * value: "STATUS_UNSPECIFIED"
     * @const
     */
    "STATUS_UNSPECIFIED": "STATUS_UNSPECIFIED",

    /**
     * value: "NOT_CHECKED"
     * @const
     */
    "NOT_CHECKED": "NOT_CHECKED",

    /**
     * value: "CONDITIONALLY_APPROVED"
     * @const
     */
    "CONDITIONALLY_APPROVED": "CONDITIONALLY_APPROVED",

    /**
     * value: "APPROVED"
     * @const
     */
    "APPROVED": "APPROVED",

    /**
     * value: "DISAPPROVED"
     * @const
     */
    "DISAPPROVED": "DISAPPROVED",

    /**
     * value: "PENDING_REVIEW"
     * @const
     */
    "PENDING_REVIEW": "PENDING_REVIEW",

    /**
     * value: "STATUS_TYPE_UNSPECIFIED"
     * @const
     */
    "STATUS_TYPE_UNSPECIFIED": "STATUS_TYPE_UNSPECIFIED"
};


/**
 * Allowed values for the <code>restrictedCategories</code> property.
 * @enum {String}
 * @readonly
 */
Creative['RestrictedCategoriesEnum'] = {

    /**
     * value: "NO_RESTRICTED_CATEGORIES"
     * @const
     */
    "NO_RESTRICTED_CATEGORIES": "NO_RESTRICTED_CATEGORIES",

    /**
     * value: "ALCOHOL"
     * @const
     */
    "ALCOHOL": "ALCOHOL"
};



export default Creative;

