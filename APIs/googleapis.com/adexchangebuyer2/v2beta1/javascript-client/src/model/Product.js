/**
 * Ad Exchange Buyer API II
 * Accesses the latest features for managing Authorized Buyers accounts, Real-Time Bidding configurations and auction metrics, and Marketplace programmatic deals.
 *
 * The version of the OpenAPI document: v2beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ContactInformation from './ContactInformation';
import DealTerms from './DealTerms';
import Seller from './Seller';
import TargetingCriteria from './TargetingCriteria';

/**
 * The Product model module.
 * @module model/Product
 * @version v2beta1
 */
class Product {
    /**
     * Constructs a new <code>Product</code>.
     * A product is a segment of inventory that a seller wants to sell. It is associated with certain terms and targeting information which helps the buyer know more about the inventory.
     * @alias module:model/Product
     */
    constructor() { 
        
        Product.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Product</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Product} obj Optional instance to populate.
     * @return {module:model/Product} The populated <code>Product</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Product();

            if (data.hasOwnProperty('availableEndTime')) {
                obj['availableEndTime'] = ApiClient.convertToType(data['availableEndTime'], 'String');
            }
            if (data.hasOwnProperty('availableStartTime')) {
                obj['availableStartTime'] = ApiClient.convertToType(data['availableStartTime'], 'String');
            }
            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('creatorContacts')) {
                obj['creatorContacts'] = ApiClient.convertToType(data['creatorContacts'], [ContactInformation]);
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('hasCreatorSignedOff')) {
                obj['hasCreatorSignedOff'] = ApiClient.convertToType(data['hasCreatorSignedOff'], 'Boolean');
            }
            if (data.hasOwnProperty('productId')) {
                obj['productId'] = ApiClient.convertToType(data['productId'], 'String');
            }
            if (data.hasOwnProperty('productRevision')) {
                obj['productRevision'] = ApiClient.convertToType(data['productRevision'], 'String');
            }
            if (data.hasOwnProperty('publisherProfileId')) {
                obj['publisherProfileId'] = ApiClient.convertToType(data['publisherProfileId'], 'String');
            }
            if (data.hasOwnProperty('seller')) {
                obj['seller'] = Seller.constructFromObject(data['seller']);
            }
            if (data.hasOwnProperty('syndicationProduct')) {
                obj['syndicationProduct'] = ApiClient.convertToType(data['syndicationProduct'], 'String');
            }
            if (data.hasOwnProperty('targetingCriterion')) {
                obj['targetingCriterion'] = ApiClient.convertToType(data['targetingCriterion'], [TargetingCriteria]);
            }
            if (data.hasOwnProperty('terms')) {
                obj['terms'] = DealTerms.constructFromObject(data['terms']);
            }
            if (data.hasOwnProperty('updateTime')) {
                obj['updateTime'] = ApiClient.convertToType(data['updateTime'], 'String');
            }
            if (data.hasOwnProperty('webPropertyCode')) {
                obj['webPropertyCode'] = ApiClient.convertToType(data['webPropertyCode'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Product</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Product</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['availableEndTime'] && !(typeof data['availableEndTime'] === 'string' || data['availableEndTime'] instanceof String)) {
            throw new Error("Expected the field `availableEndTime` to be a primitive type in the JSON string but got " + data['availableEndTime']);
        }
        // ensure the json data is a string
        if (data['availableStartTime'] && !(typeof data['availableStartTime'] === 'string' || data['availableStartTime'] instanceof String)) {
            throw new Error("Expected the field `availableStartTime` to be a primitive type in the JSON string but got " + data['availableStartTime']);
        }
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        if (data['creatorContacts']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['creatorContacts'])) {
                throw new Error("Expected the field `creatorContacts` to be an array in the JSON data but got " + data['creatorContacts']);
            }
            // validate the optional field `creatorContacts` (array)
            for (const item of data['creatorContacts']) {
                ContactInformation.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['productId'] && !(typeof data['productId'] === 'string' || data['productId'] instanceof String)) {
            throw new Error("Expected the field `productId` to be a primitive type in the JSON string but got " + data['productId']);
        }
        // ensure the json data is a string
        if (data['productRevision'] && !(typeof data['productRevision'] === 'string' || data['productRevision'] instanceof String)) {
            throw new Error("Expected the field `productRevision` to be a primitive type in the JSON string but got " + data['productRevision']);
        }
        // ensure the json data is a string
        if (data['publisherProfileId'] && !(typeof data['publisherProfileId'] === 'string' || data['publisherProfileId'] instanceof String)) {
            throw new Error("Expected the field `publisherProfileId` to be a primitive type in the JSON string but got " + data['publisherProfileId']);
        }
        // validate the optional field `seller`
        if (data['seller']) { // data not null
          Seller.validateJSON(data['seller']);
        }
        // ensure the json data is a string
        if (data['syndicationProduct'] && !(typeof data['syndicationProduct'] === 'string' || data['syndicationProduct'] instanceof String)) {
            throw new Error("Expected the field `syndicationProduct` to be a primitive type in the JSON string but got " + data['syndicationProduct']);
        }
        if (data['targetingCriterion']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['targetingCriterion'])) {
                throw new Error("Expected the field `targetingCriterion` to be an array in the JSON data but got " + data['targetingCriterion']);
            }
            // validate the optional field `targetingCriterion` (array)
            for (const item of data['targetingCriterion']) {
                TargetingCriteria.validateJSON(item);
            };
        }
        // validate the optional field `terms`
        if (data['terms']) { // data not null
          DealTerms.validateJSON(data['terms']);
        }
        // ensure the json data is a string
        if (data['updateTime'] && !(typeof data['updateTime'] === 'string' || data['updateTime'] instanceof String)) {
            throw new Error("Expected the field `updateTime` to be a primitive type in the JSON string but got " + data['updateTime']);
        }
        // ensure the json data is a string
        if (data['webPropertyCode'] && !(typeof data['webPropertyCode'] === 'string' || data['webPropertyCode'] instanceof String)) {
            throw new Error("Expected the field `webPropertyCode` to be a primitive type in the JSON string but got " + data['webPropertyCode']);
        }

        return true;
    }


}



/**
 * The proposed end time for the deal. The field will be truncated to the order of seconds during serving.
 * @member {String} availableEndTime
 */
Product.prototype['availableEndTime'] = undefined;

/**
 * Inventory availability dates. The start time will be truncated to seconds during serving. Thus, a field specified as 3:23:34.456 (HH:mm:ss.SSS) will be truncated to 3:23:34 when serving.
 * @member {String} availableStartTime
 */
Product.prototype['availableStartTime'] = undefined;

/**
 * Creation time.
 * @member {String} createTime
 */
Product.prototype['createTime'] = undefined;

/**
 * Optional contact information for the creator of this product.
 * @member {Array.<module:model/ContactInformation>} creatorContacts
 */
Product.prototype['creatorContacts'] = undefined;

/**
 * The display name for this product as set by the seller.
 * @member {String} displayName
 */
Product.prototype['displayName'] = undefined;

/**
 * If the creator has already signed off on the product, then the buyer can finalize the deal by accepting the product as is. When copying to a proposal, if any of the terms are changed, then auto_finalize is automatically set to false.
 * @member {Boolean} hasCreatorSignedOff
 */
Product.prototype['hasCreatorSignedOff'] = undefined;

/**
 * The unique ID for the product.
 * @member {String} productId
 */
Product.prototype['productId'] = undefined;

/**
 * The revision number of the product (auto-assigned by Marketplace).
 * @member {String} productRevision
 */
Product.prototype['productRevision'] = undefined;

/**
 * An ID which can be used by the Publisher Profile API to get more information about the seller that created this product.
 * @member {String} publisherProfileId
 */
Product.prototype['publisherProfileId'] = undefined;

/**
 * @member {module:model/Seller} seller
 */
Product.prototype['seller'] = undefined;

/**
 * The syndication product associated with the deal.
 * @member {module:model/Product.SyndicationProductEnum} syndicationProduct
 */
Product.prototype['syndicationProduct'] = undefined;

/**
 * Targeting that is shared between the buyer and the seller. Each targeting criterion has a specified key and for each key there is a list of inclusion value or exclusion values.
 * @member {Array.<module:model/TargetingCriteria>} targetingCriterion
 */
Product.prototype['targetingCriterion'] = undefined;

/**
 * @member {module:model/DealTerms} terms
 */
Product.prototype['terms'] = undefined;

/**
 * Time of last update.
 * @member {String} updateTime
 */
Product.prototype['updateTime'] = undefined;

/**
 * The web-property code for the seller. This needs to be copied as is when adding a new deal to a proposal.
 * @member {String} webPropertyCode
 */
Product.prototype['webPropertyCode'] = undefined;





/**
 * Allowed values for the <code>syndicationProduct</code> property.
 * @enum {String}
 * @readonly
 */
Product['SyndicationProductEnum'] = {

    /**
     * value: "SYNDICATION_PRODUCT_UNSPECIFIED"
     * @const
     */
    "SYNDICATION_PRODUCT_UNSPECIFIED": "SYNDICATION_PRODUCT_UNSPECIFIED",

    /**
     * value: "CONTENT"
     * @const
     */
    "CONTENT": "CONTENT",

    /**
     * value: "MOBILE"
     * @const
     */
    "MOBILE": "MOBILE",

    /**
     * value: "VIDEO"
     * @const
     */
    "VIDEO": "VIDEO",

    /**
     * value: "GAMES"
     * @const
     */
    "GAMES": "GAMES"
};



export default Product;

