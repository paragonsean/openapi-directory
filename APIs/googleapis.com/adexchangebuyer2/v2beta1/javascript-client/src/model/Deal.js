/**
 * Ad Exchange Buyer API II
 * Accesses the latest features for managing Authorized Buyers accounts, Real-Time Bidding configurations and auction metrics, and Marketplace programmatic deals.
 *
 * The version of the OpenAPI document: v2beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ContactInformation from './ContactInformation';
import CreativeRestrictions from './CreativeRestrictions';
import DealServingMetadata from './DealServingMetadata';
import DealTerms from './DealTerms';
import DeliveryControl from './DeliveryControl';
import MarketplaceTargeting from './MarketplaceTargeting';
import PrivateData from './PrivateData';
import TargetingCriteria from './TargetingCriteria';

/**
 * The Deal model module.
 * @module model/Deal
 * @version v2beta1
 */
class Deal {
    /**
     * Constructs a new <code>Deal</code>.
     * A deal represents a segment of inventory for displaying ads on. A proposal can contain multiple deals. A deal contains the terms and targeting information that is used for serving.
     * @alias module:model/Deal
     */
    constructor() { 
        
        Deal.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Deal</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Deal} obj Optional instance to populate.
     * @return {module:model/Deal} The populated <code>Deal</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Deal();

            if (data.hasOwnProperty('availableEndTime')) {
                obj['availableEndTime'] = ApiClient.convertToType(data['availableEndTime'], 'String');
            }
            if (data.hasOwnProperty('availableStartTime')) {
                obj['availableStartTime'] = ApiClient.convertToType(data['availableStartTime'], 'String');
            }
            if (data.hasOwnProperty('buyerPrivateData')) {
                obj['buyerPrivateData'] = PrivateData.constructFromObject(data['buyerPrivateData']);
            }
            if (data.hasOwnProperty('createProductId')) {
                obj['createProductId'] = ApiClient.convertToType(data['createProductId'], 'String');
            }
            if (data.hasOwnProperty('createProductRevision')) {
                obj['createProductRevision'] = ApiClient.convertToType(data['createProductRevision'], 'String');
            }
            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('creativePreApprovalPolicy')) {
                obj['creativePreApprovalPolicy'] = ApiClient.convertToType(data['creativePreApprovalPolicy'], 'String');
            }
            if (data.hasOwnProperty('creativeRestrictions')) {
                obj['creativeRestrictions'] = CreativeRestrictions.constructFromObject(data['creativeRestrictions']);
            }
            if (data.hasOwnProperty('creativeSafeFrameCompatibility')) {
                obj['creativeSafeFrameCompatibility'] = ApiClient.convertToType(data['creativeSafeFrameCompatibility'], 'String');
            }
            if (data.hasOwnProperty('dealId')) {
                obj['dealId'] = ApiClient.convertToType(data['dealId'], 'String');
            }
            if (data.hasOwnProperty('dealServingMetadata')) {
                obj['dealServingMetadata'] = DealServingMetadata.constructFromObject(data['dealServingMetadata']);
            }
            if (data.hasOwnProperty('dealTerms')) {
                obj['dealTerms'] = DealTerms.constructFromObject(data['dealTerms']);
            }
            if (data.hasOwnProperty('deliveryControl')) {
                obj['deliveryControl'] = DeliveryControl.constructFromObject(data['deliveryControl']);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('externalDealId')) {
                obj['externalDealId'] = ApiClient.convertToType(data['externalDealId'], 'String');
            }
            if (data.hasOwnProperty('isSetupComplete')) {
                obj['isSetupComplete'] = ApiClient.convertToType(data['isSetupComplete'], 'Boolean');
            }
            if (data.hasOwnProperty('programmaticCreativeSource')) {
                obj['programmaticCreativeSource'] = ApiClient.convertToType(data['programmaticCreativeSource'], 'String');
            }
            if (data.hasOwnProperty('proposalId')) {
                obj['proposalId'] = ApiClient.convertToType(data['proposalId'], 'String');
            }
            if (data.hasOwnProperty('sellerContacts')) {
                obj['sellerContacts'] = ApiClient.convertToType(data['sellerContacts'], [ContactInformation]);
            }
            if (data.hasOwnProperty('syndicationProduct')) {
                obj['syndicationProduct'] = ApiClient.convertToType(data['syndicationProduct'], 'String');
            }
            if (data.hasOwnProperty('targeting')) {
                obj['targeting'] = MarketplaceTargeting.constructFromObject(data['targeting']);
            }
            if (data.hasOwnProperty('targetingCriterion')) {
                obj['targetingCriterion'] = ApiClient.convertToType(data['targetingCriterion'], [TargetingCriteria]);
            }
            if (data.hasOwnProperty('updateTime')) {
                obj['updateTime'] = ApiClient.convertToType(data['updateTime'], 'String');
            }
            if (data.hasOwnProperty('webPropertyCode')) {
                obj['webPropertyCode'] = ApiClient.convertToType(data['webPropertyCode'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Deal</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Deal</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['availableEndTime'] && !(typeof data['availableEndTime'] === 'string' || data['availableEndTime'] instanceof String)) {
            throw new Error("Expected the field `availableEndTime` to be a primitive type in the JSON string but got " + data['availableEndTime']);
        }
        // ensure the json data is a string
        if (data['availableStartTime'] && !(typeof data['availableStartTime'] === 'string' || data['availableStartTime'] instanceof String)) {
            throw new Error("Expected the field `availableStartTime` to be a primitive type in the JSON string but got " + data['availableStartTime']);
        }
        // validate the optional field `buyerPrivateData`
        if (data['buyerPrivateData']) { // data not null
          PrivateData.validateJSON(data['buyerPrivateData']);
        }
        // ensure the json data is a string
        if (data['createProductId'] && !(typeof data['createProductId'] === 'string' || data['createProductId'] instanceof String)) {
            throw new Error("Expected the field `createProductId` to be a primitive type in the JSON string but got " + data['createProductId']);
        }
        // ensure the json data is a string
        if (data['createProductRevision'] && !(typeof data['createProductRevision'] === 'string' || data['createProductRevision'] instanceof String)) {
            throw new Error("Expected the field `createProductRevision` to be a primitive type in the JSON string but got " + data['createProductRevision']);
        }
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // ensure the json data is a string
        if (data['creativePreApprovalPolicy'] && !(typeof data['creativePreApprovalPolicy'] === 'string' || data['creativePreApprovalPolicy'] instanceof String)) {
            throw new Error("Expected the field `creativePreApprovalPolicy` to be a primitive type in the JSON string but got " + data['creativePreApprovalPolicy']);
        }
        // validate the optional field `creativeRestrictions`
        if (data['creativeRestrictions']) { // data not null
          CreativeRestrictions.validateJSON(data['creativeRestrictions']);
        }
        // ensure the json data is a string
        if (data['creativeSafeFrameCompatibility'] && !(typeof data['creativeSafeFrameCompatibility'] === 'string' || data['creativeSafeFrameCompatibility'] instanceof String)) {
            throw new Error("Expected the field `creativeSafeFrameCompatibility` to be a primitive type in the JSON string but got " + data['creativeSafeFrameCompatibility']);
        }
        // ensure the json data is a string
        if (data['dealId'] && !(typeof data['dealId'] === 'string' || data['dealId'] instanceof String)) {
            throw new Error("Expected the field `dealId` to be a primitive type in the JSON string but got " + data['dealId']);
        }
        // validate the optional field `dealServingMetadata`
        if (data['dealServingMetadata']) { // data not null
          DealServingMetadata.validateJSON(data['dealServingMetadata']);
        }
        // validate the optional field `dealTerms`
        if (data['dealTerms']) { // data not null
          DealTerms.validateJSON(data['dealTerms']);
        }
        // validate the optional field `deliveryControl`
        if (data['deliveryControl']) { // data not null
          DeliveryControl.validateJSON(data['deliveryControl']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['externalDealId'] && !(typeof data['externalDealId'] === 'string' || data['externalDealId'] instanceof String)) {
            throw new Error("Expected the field `externalDealId` to be a primitive type in the JSON string but got " + data['externalDealId']);
        }
        // ensure the json data is a string
        if (data['programmaticCreativeSource'] && !(typeof data['programmaticCreativeSource'] === 'string' || data['programmaticCreativeSource'] instanceof String)) {
            throw new Error("Expected the field `programmaticCreativeSource` to be a primitive type in the JSON string but got " + data['programmaticCreativeSource']);
        }
        // ensure the json data is a string
        if (data['proposalId'] && !(typeof data['proposalId'] === 'string' || data['proposalId'] instanceof String)) {
            throw new Error("Expected the field `proposalId` to be a primitive type in the JSON string but got " + data['proposalId']);
        }
        if (data['sellerContacts']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['sellerContacts'])) {
                throw new Error("Expected the field `sellerContacts` to be an array in the JSON data but got " + data['sellerContacts']);
            }
            // validate the optional field `sellerContacts` (array)
            for (const item of data['sellerContacts']) {
                ContactInformation.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['syndicationProduct'] && !(typeof data['syndicationProduct'] === 'string' || data['syndicationProduct'] instanceof String)) {
            throw new Error("Expected the field `syndicationProduct` to be a primitive type in the JSON string but got " + data['syndicationProduct']);
        }
        // validate the optional field `targeting`
        if (data['targeting']) { // data not null
          MarketplaceTargeting.validateJSON(data['targeting']);
        }
        if (data['targetingCriterion']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['targetingCriterion'])) {
                throw new Error("Expected the field `targetingCriterion` to be an array in the JSON data but got " + data['targetingCriterion']);
            }
            // validate the optional field `targetingCriterion` (array)
            for (const item of data['targetingCriterion']) {
                TargetingCriteria.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['updateTime'] && !(typeof data['updateTime'] === 'string' || data['updateTime'] instanceof String)) {
            throw new Error("Expected the field `updateTime` to be a primitive type in the JSON string but got " + data['updateTime']);
        }
        // ensure the json data is a string
        if (data['webPropertyCode'] && !(typeof data['webPropertyCode'] === 'string' || data['webPropertyCode'] instanceof String)) {
            throw new Error("Expected the field `webPropertyCode` to be a primitive type in the JSON string but got " + data['webPropertyCode']);
        }

        return true;
    }


}



/**
 * Proposed flight end time of the deal. This will generally be stored in a granularity of a second. A value is not required for Private Auction deals or Preferred Deals.
 * @member {String} availableEndTime
 */
Deal.prototype['availableEndTime'] = undefined;

/**
 * Optional. Proposed flight start time of the deal. This will generally be stored in the granularity of one second since deal serving starts at seconds boundary. Any time specified with more granularity (for example, in milliseconds) will be truncated towards the start of time in seconds.
 * @member {String} availableStartTime
 */
Deal.prototype['availableStartTime'] = undefined;

/**
 * @member {module:model/PrivateData} buyerPrivateData
 */
Deal.prototype['buyerPrivateData'] = undefined;

/**
 * The product ID from which this deal was created. Note: This field may be set only when creating the resource. Modifying this field while updating the resource will result in an error.
 * @member {String} createProductId
 */
Deal.prototype['createProductId'] = undefined;

/**
 * Optional. Revision number of the product that the deal was created from. If present on create, and the server `product_revision` has advanced since the passed-in `create_product_revision`, an `ABORTED` error will be returned. Note: This field may be set only when creating the resource. Modifying this field while updating the resource will result in an error.
 * @member {String} createProductRevision
 */
Deal.prototype['createProductRevision'] = undefined;

/**
 * Output only. The time of the deal creation.
 * @member {String} createTime
 */
Deal.prototype['createTime'] = undefined;

/**
 * Output only. Specifies the creative pre-approval policy.
 * @member {module:model/Deal.CreativePreApprovalPolicyEnum} creativePreApprovalPolicy
 */
Deal.prototype['creativePreApprovalPolicy'] = undefined;

/**
 * @member {module:model/CreativeRestrictions} creativeRestrictions
 */
Deal.prototype['creativeRestrictions'] = undefined;

/**
 * Output only. Specifies whether the creative is safeFrame compatible.
 * @member {module:model/Deal.CreativeSafeFrameCompatibilityEnum} creativeSafeFrameCompatibility
 */
Deal.prototype['creativeSafeFrameCompatibility'] = undefined;

/**
 * Output only. A unique deal ID for the deal (server-assigned).
 * @member {String} dealId
 */
Deal.prototype['dealId'] = undefined;

/**
 * @member {module:model/DealServingMetadata} dealServingMetadata
 */
Deal.prototype['dealServingMetadata'] = undefined;

/**
 * @member {module:model/DealTerms} dealTerms
 */
Deal.prototype['dealTerms'] = undefined;

/**
 * @member {module:model/DeliveryControl} deliveryControl
 */
Deal.prototype['deliveryControl'] = undefined;

/**
 * Description for the deal terms.
 * @member {String} description
 */
Deal.prototype['description'] = undefined;

/**
 * The name of the deal.
 * @member {String} displayName
 */
Deal.prototype['displayName'] = undefined;

/**
 * Output only. The external deal ID assigned to this deal once the deal is finalized. This is the deal ID that shows up in serving/reporting etc.
 * @member {String} externalDealId
 */
Deal.prototype['externalDealId'] = undefined;

/**
 * Output only. True, if the buyside inventory setup is complete for this deal.
 * @member {Boolean} isSetupComplete
 */
Deal.prototype['isSetupComplete'] = undefined;

/**
 * Output only. Specifies the creative source for programmatic deals. PUBLISHER means creative is provided by seller and ADVERTISER means creative is provided by buyer.
 * @member {module:model/Deal.ProgrammaticCreativeSourceEnum} programmaticCreativeSource
 */
Deal.prototype['programmaticCreativeSource'] = undefined;

/**
 * Output only. ID of the proposal that this deal is part of.
 * @member {String} proposalId
 */
Deal.prototype['proposalId'] = undefined;

/**
 * Output only. Seller contact information for the deal.
 * @member {Array.<module:model/ContactInformation>} sellerContacts
 */
Deal.prototype['sellerContacts'] = undefined;

/**
 * The syndication product associated with the deal. Note: This field may be set only when creating the resource. Modifying this field while updating the resource will result in an error.
 * @member {module:model/Deal.SyndicationProductEnum} syndicationProduct
 */
Deal.prototype['syndicationProduct'] = undefined;

/**
 * @member {module:model/MarketplaceTargeting} targeting
 */
Deal.prototype['targeting'] = undefined;

/**
 * The shared targeting visible to buyers and sellers. Each shared targeting entity is AND'd together.
 * @member {Array.<module:model/TargetingCriteria>} targetingCriterion
 */
Deal.prototype['targetingCriterion'] = undefined;

/**
 * Output only. The time when the deal was last updated.
 * @member {String} updateTime
 */
Deal.prototype['updateTime'] = undefined;

/**
 * The web property code for the seller copied over from the product.
 * @member {String} webPropertyCode
 */
Deal.prototype['webPropertyCode'] = undefined;





/**
 * Allowed values for the <code>creativePreApprovalPolicy</code> property.
 * @enum {String}
 * @readonly
 */
Deal['CreativePreApprovalPolicyEnum'] = {

    /**
     * value: "CREATIVE_PRE_APPROVAL_POLICY_UNSPECIFIED"
     * @const
     */
    "CREATIVE_PRE_APPROVAL_POLICY_UNSPECIFIED": "CREATIVE_PRE_APPROVAL_POLICY_UNSPECIFIED",

    /**
     * value: "SELLER_PRE_APPROVAL_REQUIRED"
     * @const
     */
    "SELLER_PRE_APPROVAL_REQUIRED": "SELLER_PRE_APPROVAL_REQUIRED",

    /**
     * value: "SELLER_PRE_APPROVAL_NOT_REQUIRED"
     * @const
     */
    "SELLER_PRE_APPROVAL_NOT_REQUIRED": "SELLER_PRE_APPROVAL_NOT_REQUIRED"
};


/**
 * Allowed values for the <code>creativeSafeFrameCompatibility</code> property.
 * @enum {String}
 * @readonly
 */
Deal['CreativeSafeFrameCompatibilityEnum'] = {

    /**
     * value: "CREATIVE_SAFE_FRAME_COMPATIBILITY_UNSPECIFIED"
     * @const
     */
    "CREATIVE_SAFE_FRAME_COMPATIBILITY_UNSPECIFIED": "CREATIVE_SAFE_FRAME_COMPATIBILITY_UNSPECIFIED",

    /**
     * value: "COMPATIBLE"
     * @const
     */
    "COMPATIBLE": "COMPATIBLE",

    /**
     * value: "INCOMPATIBLE"
     * @const
     */
    "INCOMPATIBLE": "INCOMPATIBLE"
};


/**
 * Allowed values for the <code>programmaticCreativeSource</code> property.
 * @enum {String}
 * @readonly
 */
Deal['ProgrammaticCreativeSourceEnum'] = {

    /**
     * value: "PROGRAMMATIC_CREATIVE_SOURCE_UNSPECIFIED"
     * @const
     */
    "PROGRAMMATIC_CREATIVE_SOURCE_UNSPECIFIED": "PROGRAMMATIC_CREATIVE_SOURCE_UNSPECIFIED",

    /**
     * value: "ADVERTISER"
     * @const
     */
    "ADVERTISER": "ADVERTISER",

    /**
     * value: "PUBLISHER"
     * @const
     */
    "PUBLISHER": "PUBLISHER"
};


/**
 * Allowed values for the <code>syndicationProduct</code> property.
 * @enum {String}
 * @readonly
 */
Deal['SyndicationProductEnum'] = {

    /**
     * value: "SYNDICATION_PRODUCT_UNSPECIFIED"
     * @const
     */
    "SYNDICATION_PRODUCT_UNSPECIFIED": "SYNDICATION_PRODUCT_UNSPECIFIED",

    /**
     * value: "CONTENT"
     * @const
     */
    "CONTENT": "CONTENT",

    /**
     * value: "MOBILE"
     * @const
     */
    "MOBILE": "MOBILE",

    /**
     * value: "VIDEO"
     * @const
     */
    "VIDEO": "VIDEO",

    /**
     * value: "GAMES"
     * @const
     */
    "GAMES": "GAMES"
};



export default Deal;

