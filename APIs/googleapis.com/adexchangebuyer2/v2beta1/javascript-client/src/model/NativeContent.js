/**
 * Ad Exchange Buyer API II
 * Accesses the latest features for managing Authorized Buyers accounts, Real-Time Bidding configurations and auction metrics, and Marketplace programmatic deals.
 *
 * The version of the OpenAPI document: v2beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Image from './Image';

/**
 * The NativeContent model module.
 * @module model/NativeContent
 * @version v2beta1
 */
class NativeContent {
    /**
     * Constructs a new <code>NativeContent</code>.
     * Native content for a creative.
     * @alias module:model/NativeContent
     */
    constructor() { 
        
        NativeContent.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>NativeContent</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NativeContent} obj Optional instance to populate.
     * @return {module:model/NativeContent} The populated <code>NativeContent</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NativeContent();

            if (data.hasOwnProperty('advertiserName')) {
                obj['advertiserName'] = ApiClient.convertToType(data['advertiserName'], 'String');
            }
            if (data.hasOwnProperty('appIcon')) {
                obj['appIcon'] = Image.constructFromObject(data['appIcon']);
            }
            if (data.hasOwnProperty('body')) {
                obj['body'] = ApiClient.convertToType(data['body'], 'String');
            }
            if (data.hasOwnProperty('callToAction')) {
                obj['callToAction'] = ApiClient.convertToType(data['callToAction'], 'String');
            }
            if (data.hasOwnProperty('clickLinkUrl')) {
                obj['clickLinkUrl'] = ApiClient.convertToType(data['clickLinkUrl'], 'String');
            }
            if (data.hasOwnProperty('clickTrackingUrl')) {
                obj['clickTrackingUrl'] = ApiClient.convertToType(data['clickTrackingUrl'], 'String');
            }
            if (data.hasOwnProperty('headline')) {
                obj['headline'] = ApiClient.convertToType(data['headline'], 'String');
            }
            if (data.hasOwnProperty('image')) {
                obj['image'] = Image.constructFromObject(data['image']);
            }
            if (data.hasOwnProperty('logo')) {
                obj['logo'] = Image.constructFromObject(data['logo']);
            }
            if (data.hasOwnProperty('priceDisplayText')) {
                obj['priceDisplayText'] = ApiClient.convertToType(data['priceDisplayText'], 'String');
            }
            if (data.hasOwnProperty('starRating')) {
                obj['starRating'] = ApiClient.convertToType(data['starRating'], 'Number');
            }
            if (data.hasOwnProperty('storeUrl')) {
                obj['storeUrl'] = ApiClient.convertToType(data['storeUrl'], 'String');
            }
            if (data.hasOwnProperty('videoUrl')) {
                obj['videoUrl'] = ApiClient.convertToType(data['videoUrl'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NativeContent</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NativeContent</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['advertiserName'] && !(typeof data['advertiserName'] === 'string' || data['advertiserName'] instanceof String)) {
            throw new Error("Expected the field `advertiserName` to be a primitive type in the JSON string but got " + data['advertiserName']);
        }
        // validate the optional field `appIcon`
        if (data['appIcon']) { // data not null
          Image.validateJSON(data['appIcon']);
        }
        // ensure the json data is a string
        if (data['body'] && !(typeof data['body'] === 'string' || data['body'] instanceof String)) {
            throw new Error("Expected the field `body` to be a primitive type in the JSON string but got " + data['body']);
        }
        // ensure the json data is a string
        if (data['callToAction'] && !(typeof data['callToAction'] === 'string' || data['callToAction'] instanceof String)) {
            throw new Error("Expected the field `callToAction` to be a primitive type in the JSON string but got " + data['callToAction']);
        }
        // ensure the json data is a string
        if (data['clickLinkUrl'] && !(typeof data['clickLinkUrl'] === 'string' || data['clickLinkUrl'] instanceof String)) {
            throw new Error("Expected the field `clickLinkUrl` to be a primitive type in the JSON string but got " + data['clickLinkUrl']);
        }
        // ensure the json data is a string
        if (data['clickTrackingUrl'] && !(typeof data['clickTrackingUrl'] === 'string' || data['clickTrackingUrl'] instanceof String)) {
            throw new Error("Expected the field `clickTrackingUrl` to be a primitive type in the JSON string but got " + data['clickTrackingUrl']);
        }
        // ensure the json data is a string
        if (data['headline'] && !(typeof data['headline'] === 'string' || data['headline'] instanceof String)) {
            throw new Error("Expected the field `headline` to be a primitive type in the JSON string but got " + data['headline']);
        }
        // validate the optional field `image`
        if (data['image']) { // data not null
          Image.validateJSON(data['image']);
        }
        // validate the optional field `logo`
        if (data['logo']) { // data not null
          Image.validateJSON(data['logo']);
        }
        // ensure the json data is a string
        if (data['priceDisplayText'] && !(typeof data['priceDisplayText'] === 'string' || data['priceDisplayText'] instanceof String)) {
            throw new Error("Expected the field `priceDisplayText` to be a primitive type in the JSON string but got " + data['priceDisplayText']);
        }
        // ensure the json data is a string
        if (data['storeUrl'] && !(typeof data['storeUrl'] === 'string' || data['storeUrl'] instanceof String)) {
            throw new Error("Expected the field `storeUrl` to be a primitive type in the JSON string but got " + data['storeUrl']);
        }
        // ensure the json data is a string
        if (data['videoUrl'] && !(typeof data['videoUrl'] === 'string' || data['videoUrl'] instanceof String)) {
            throw new Error("Expected the field `videoUrl` to be a primitive type in the JSON string but got " + data['videoUrl']);
        }

        return true;
    }


}



/**
 * The name of the advertiser or sponsor, to be displayed in the ad creative.
 * @member {String} advertiserName
 */
NativeContent.prototype['advertiserName'] = undefined;

/**
 * @member {module:model/Image} appIcon
 */
NativeContent.prototype['appIcon'] = undefined;

/**
 * A long description of the ad.
 * @member {String} body
 */
NativeContent.prototype['body'] = undefined;

/**
 * A label for the button that the user is supposed to click.
 * @member {String} callToAction
 */
NativeContent.prototype['callToAction'] = undefined;

/**
 * The URL that the browser/SDK will load when the user clicks the ad.
 * @member {String} clickLinkUrl
 */
NativeContent.prototype['clickLinkUrl'] = undefined;

/**
 * The URL to use for click tracking.
 * @member {String} clickTrackingUrl
 */
NativeContent.prototype['clickTrackingUrl'] = undefined;

/**
 * A short title for the ad.
 * @member {String} headline
 */
NativeContent.prototype['headline'] = undefined;

/**
 * @member {module:model/Image} image
 */
NativeContent.prototype['image'] = undefined;

/**
 * @member {module:model/Image} logo
 */
NativeContent.prototype['logo'] = undefined;

/**
 * The price of the promoted app including currency info.
 * @member {String} priceDisplayText
 */
NativeContent.prototype['priceDisplayText'] = undefined;

/**
 * The app rating in the app store. Must be in the range [0-5].
 * @member {Number} starRating
 */
NativeContent.prototype['starRating'] = undefined;

/**
 * The URL to the app store to purchase/download the promoted app.
 * @member {String} storeUrl
 */
NativeContent.prototype['storeUrl'] = undefined;

/**
 * The URL to fetch a native video ad.
 * @member {String} videoUrl
 */
NativeContent.prototype['videoUrl'] = undefined;






export default NativeContent;

