/**
 * Ad Exchange Buyer API II
 * Accesses the latest features for managing Authorized Buyers accounts, Real-Time Bidding configurations and auction metrics, and Marketplace programmatic deals.
 *
 * The version of the OpenAPI document: v2beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PricePerBuyer from './PricePerBuyer';

/**
 * The GuaranteedFixedPriceTerms model module.
 * @module model/GuaranteedFixedPriceTerms
 * @version v2beta1
 */
class GuaranteedFixedPriceTerms {
    /**
     * Constructs a new <code>GuaranteedFixedPriceTerms</code>.
     * Terms for Programmatic Guaranteed Deals.
     * @alias module:model/GuaranteedFixedPriceTerms
     */
    constructor() { 
        
        GuaranteedFixedPriceTerms.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GuaranteedFixedPriceTerms</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GuaranteedFixedPriceTerms} obj Optional instance to populate.
     * @return {module:model/GuaranteedFixedPriceTerms} The populated <code>GuaranteedFixedPriceTerms</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GuaranteedFixedPriceTerms();

            if (data.hasOwnProperty('fixedPrices')) {
                obj['fixedPrices'] = ApiClient.convertToType(data['fixedPrices'], [PricePerBuyer]);
            }
            if (data.hasOwnProperty('guaranteedImpressions')) {
                obj['guaranteedImpressions'] = ApiClient.convertToType(data['guaranteedImpressions'], 'String');
            }
            if (data.hasOwnProperty('guaranteedLooks')) {
                obj['guaranteedLooks'] = ApiClient.convertToType(data['guaranteedLooks'], 'String');
            }
            if (data.hasOwnProperty('impressionCap')) {
                obj['impressionCap'] = ApiClient.convertToType(data['impressionCap'], 'String');
            }
            if (data.hasOwnProperty('minimumDailyLooks')) {
                obj['minimumDailyLooks'] = ApiClient.convertToType(data['minimumDailyLooks'], 'String');
            }
            if (data.hasOwnProperty('percentShareOfVoice')) {
                obj['percentShareOfVoice'] = ApiClient.convertToType(data['percentShareOfVoice'], 'String');
            }
            if (data.hasOwnProperty('reservationType')) {
                obj['reservationType'] = ApiClient.convertToType(data['reservationType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GuaranteedFixedPriceTerms</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GuaranteedFixedPriceTerms</code>.
     */
    static validateJSON(data) {
        if (data['fixedPrices']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['fixedPrices'])) {
                throw new Error("Expected the field `fixedPrices` to be an array in the JSON data but got " + data['fixedPrices']);
            }
            // validate the optional field `fixedPrices` (array)
            for (const item of data['fixedPrices']) {
                PricePerBuyer.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['guaranteedImpressions'] && !(typeof data['guaranteedImpressions'] === 'string' || data['guaranteedImpressions'] instanceof String)) {
            throw new Error("Expected the field `guaranteedImpressions` to be a primitive type in the JSON string but got " + data['guaranteedImpressions']);
        }
        // ensure the json data is a string
        if (data['guaranteedLooks'] && !(typeof data['guaranteedLooks'] === 'string' || data['guaranteedLooks'] instanceof String)) {
            throw new Error("Expected the field `guaranteedLooks` to be a primitive type in the JSON string but got " + data['guaranteedLooks']);
        }
        // ensure the json data is a string
        if (data['impressionCap'] && !(typeof data['impressionCap'] === 'string' || data['impressionCap'] instanceof String)) {
            throw new Error("Expected the field `impressionCap` to be a primitive type in the JSON string but got " + data['impressionCap']);
        }
        // ensure the json data is a string
        if (data['minimumDailyLooks'] && !(typeof data['minimumDailyLooks'] === 'string' || data['minimumDailyLooks'] instanceof String)) {
            throw new Error("Expected the field `minimumDailyLooks` to be a primitive type in the JSON string but got " + data['minimumDailyLooks']);
        }
        // ensure the json data is a string
        if (data['percentShareOfVoice'] && !(typeof data['percentShareOfVoice'] === 'string' || data['percentShareOfVoice'] instanceof String)) {
            throw new Error("Expected the field `percentShareOfVoice` to be a primitive type in the JSON string but got " + data['percentShareOfVoice']);
        }
        // ensure the json data is a string
        if (data['reservationType'] && !(typeof data['reservationType'] === 'string' || data['reservationType'] instanceof String)) {
            throw new Error("Expected the field `reservationType` to be a primitive type in the JSON string but got " + data['reservationType']);
        }

        return true;
    }


}



/**
 * Fixed price for the specified buyer.
 * @member {Array.<module:model/PricePerBuyer>} fixedPrices
 */
GuaranteedFixedPriceTerms.prototype['fixedPrices'] = undefined;

/**
 * Guaranteed impressions as a percentage. This is the percentage of guaranteed looks that the buyer is guaranteeing to buy.
 * @member {String} guaranteedImpressions
 */
GuaranteedFixedPriceTerms.prototype['guaranteedImpressions'] = undefined;

/**
 * Count of guaranteed looks. Required for deal, optional for product. For CPD deals, buyer changes to guaranteed_looks will be ignored.
 * @member {String} guaranteedLooks
 */
GuaranteedFixedPriceTerms.prototype['guaranteedLooks'] = undefined;

/**
 * The lifetime impression cap for CPM sponsorship deals. The deal will stop serving when the cap is reached.
 * @member {String} impressionCap
 */
GuaranteedFixedPriceTerms.prototype['impressionCap'] = undefined;

/**
 * Daily minimum looks for CPD deal types. For CPD deals, buyer should negotiate on this field instead of guaranteed_looks.
 * @member {String} minimumDailyLooks
 */
GuaranteedFixedPriceTerms.prototype['minimumDailyLooks'] = undefined;

/**
 * For sponsorship deals, this is the percentage of the seller's eligible impressions that the deal will serve until the cap is reached.
 * @member {String} percentShareOfVoice
 */
GuaranteedFixedPriceTerms.prototype['percentShareOfVoice'] = undefined;

/**
 * The reservation type for a Programmatic Guaranteed deal. This indicates whether the number of impressions is fixed, or a percent of available impressions. If not specified, the default reservation type is STANDARD.
 * @member {module:model/GuaranteedFixedPriceTerms.ReservationTypeEnum} reservationType
 */
GuaranteedFixedPriceTerms.prototype['reservationType'] = undefined;





/**
 * Allowed values for the <code>reservationType</code> property.
 * @enum {String}
 * @readonly
 */
GuaranteedFixedPriceTerms['ReservationTypeEnum'] = {

    /**
     * value: "RESERVATION_TYPE_UNSPECIFIED"
     * @const
     */
    "RESERVATION_TYPE_UNSPECIFIED": "RESERVATION_TYPE_UNSPECIFIED",

    /**
     * value: "STANDARD"
     * @const
     */
    "STANDARD": "STANDARD",

    /**
     * value: "SPONSORSHIP"
     * @const
     */
    "SPONSORSHIP": "SPONSORSHIP"
};



export default GuaranteedFixedPriceTerms;

