/**
 * Ad Exchange Buyer API II
 * Accesses the latest features for managing Authorized Buyers accounts, Real-Time Bidding configurations and auction metrics, and Marketplace programmatic deals.
 *
 * The version of the OpenAPI document: v2beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CriteriaTargeting from './CriteriaTargeting';
import InventorySizeTargeting from './InventorySizeTargeting';
import PlacementTargeting from './PlacementTargeting';
import TechnologyTargeting from './TechnologyTargeting';
import VideoTargeting from './VideoTargeting';

/**
 * The MarketplaceTargeting model module.
 * @module model/MarketplaceTargeting
 * @version v2beta1
 */
class MarketplaceTargeting {
    /**
     * Constructs a new <code>MarketplaceTargeting</code>.
     * Targeting represents different criteria that can be used by advertisers to target ad inventory. For example, they can choose to target ad requests only if the user is in the US. Multiple types of targeting are always applied as a logical AND, unless noted otherwise.
     * @alias module:model/MarketplaceTargeting
     */
    constructor() { 
        
        MarketplaceTargeting.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MarketplaceTargeting</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MarketplaceTargeting} obj Optional instance to populate.
     * @return {module:model/MarketplaceTargeting} The populated <code>MarketplaceTargeting</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MarketplaceTargeting();

            if (data.hasOwnProperty('geoTargeting')) {
                obj['geoTargeting'] = CriteriaTargeting.constructFromObject(data['geoTargeting']);
            }
            if (data.hasOwnProperty('inventorySizeTargeting')) {
                obj['inventorySizeTargeting'] = InventorySizeTargeting.constructFromObject(data['inventorySizeTargeting']);
            }
            if (data.hasOwnProperty('placementTargeting')) {
                obj['placementTargeting'] = PlacementTargeting.constructFromObject(data['placementTargeting']);
            }
            if (data.hasOwnProperty('technologyTargeting')) {
                obj['technologyTargeting'] = TechnologyTargeting.constructFromObject(data['technologyTargeting']);
            }
            if (data.hasOwnProperty('videoTargeting')) {
                obj['videoTargeting'] = VideoTargeting.constructFromObject(data['videoTargeting']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MarketplaceTargeting</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MarketplaceTargeting</code>.
     */
    static validateJSON(data) {
        // validate the optional field `geoTargeting`
        if (data['geoTargeting']) { // data not null
          CriteriaTargeting.validateJSON(data['geoTargeting']);
        }
        // validate the optional field `inventorySizeTargeting`
        if (data['inventorySizeTargeting']) { // data not null
          InventorySizeTargeting.validateJSON(data['inventorySizeTargeting']);
        }
        // validate the optional field `placementTargeting`
        if (data['placementTargeting']) { // data not null
          PlacementTargeting.validateJSON(data['placementTargeting']);
        }
        // validate the optional field `technologyTargeting`
        if (data['technologyTargeting']) { // data not null
          TechnologyTargeting.validateJSON(data['technologyTargeting']);
        }
        // validate the optional field `videoTargeting`
        if (data['videoTargeting']) { // data not null
          VideoTargeting.validateJSON(data['videoTargeting']);
        }

        return true;
    }


}



/**
 * @member {module:model/CriteriaTargeting} geoTargeting
 */
MarketplaceTargeting.prototype['geoTargeting'] = undefined;

/**
 * @member {module:model/InventorySizeTargeting} inventorySizeTargeting
 */
MarketplaceTargeting.prototype['inventorySizeTargeting'] = undefined;

/**
 * @member {module:model/PlacementTargeting} placementTargeting
 */
MarketplaceTargeting.prototype['placementTargeting'] = undefined;

/**
 * @member {module:model/TechnologyTargeting} technologyTargeting
 */
MarketplaceTargeting.prototype['technologyTargeting'] = undefined;

/**
 * @member {module:model/VideoTargeting} videoTargeting
 */
MarketplaceTargeting.prototype['videoTargeting'] = undefined;






export default MarketplaceTargeting;

