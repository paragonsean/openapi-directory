/**
 * Ad Exchange Buyer API II
 * Accesses the latest features for managing Authorized Buyers accounts, Real-Time Bidding configurations and auction metrics, and Marketplace programmatic deals.
 *
 * The version of the OpenAPI document: v2beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The FrequencyCap model module.
 * @module model/FrequencyCap
 * @version v2beta1
 */
class FrequencyCap {
    /**
     * Constructs a new <code>FrequencyCap</code>.
     * Frequency cap.
     * @alias module:model/FrequencyCap
     */
    constructor() { 
        
        FrequencyCap.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FrequencyCap</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FrequencyCap} obj Optional instance to populate.
     * @return {module:model/FrequencyCap} The populated <code>FrequencyCap</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FrequencyCap();

            if (data.hasOwnProperty('maxImpressions')) {
                obj['maxImpressions'] = ApiClient.convertToType(data['maxImpressions'], 'Number');
            }
            if (data.hasOwnProperty('numTimeUnits')) {
                obj['numTimeUnits'] = ApiClient.convertToType(data['numTimeUnits'], 'Number');
            }
            if (data.hasOwnProperty('timeUnitType')) {
                obj['timeUnitType'] = ApiClient.convertToType(data['timeUnitType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FrequencyCap</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FrequencyCap</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['timeUnitType'] && !(typeof data['timeUnitType'] === 'string' || data['timeUnitType'] instanceof String)) {
            throw new Error("Expected the field `timeUnitType` to be a primitive type in the JSON string but got " + data['timeUnitType']);
        }

        return true;
    }


}



/**
 * The maximum number of impressions that can be served to a user within the specified time period.
 * @member {Number} maxImpressions
 */
FrequencyCap.prototype['maxImpressions'] = undefined;

/**
 * The amount of time, in the units specified by time_unit_type. Defines the amount of time over which impressions per user are counted and capped.
 * @member {Number} numTimeUnits
 */
FrequencyCap.prototype['numTimeUnits'] = undefined;

/**
 * The time unit. Along with num_time_units defines the amount of time over which impressions per user are counted and capped.
 * @member {module:model/FrequencyCap.TimeUnitTypeEnum} timeUnitType
 */
FrequencyCap.prototype['timeUnitType'] = undefined;





/**
 * Allowed values for the <code>timeUnitType</code> property.
 * @enum {String}
 * @readonly
 */
FrequencyCap['TimeUnitTypeEnum'] = {

    /**
     * value: "TIME_UNIT_TYPE_UNSPECIFIED"
     * @const
     */
    "TIME_UNIT_TYPE_UNSPECIFIED": "TIME_UNIT_TYPE_UNSPECIFIED",

    /**
     * value: "MINUTE"
     * @const
     */
    "MINUTE": "MINUTE",

    /**
     * value: "HOUR"
     * @const
     */
    "HOUR": "HOUR",

    /**
     * value: "DAY"
     * @const
     */
    "DAY": "DAY",

    /**
     * value: "WEEK"
     * @const
     */
    "WEEK": "WEEK",

    /**
     * value: "MONTH"
     * @const
     */
    "MONTH": "MONTH",

    /**
     * value: "LIFETIME"
     * @const
     */
    "LIFETIME": "LIFETIME",

    /**
     * value: "POD"
     * @const
     */
    "POD": "POD",

    /**
     * value: "STREAM"
     * @const
     */
    "STREAM": "STREAM"
};



export default FrequencyCap;

