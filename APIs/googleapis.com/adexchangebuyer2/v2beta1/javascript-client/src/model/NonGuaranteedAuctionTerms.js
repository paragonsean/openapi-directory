/**
 * Ad Exchange Buyer API II
 * Accesses the latest features for managing Authorized Buyers accounts, Real-Time Bidding configurations and auction metrics, and Marketplace programmatic deals.
 *
 * The version of the OpenAPI document: v2beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PricePerBuyer from './PricePerBuyer';

/**
 * The NonGuaranteedAuctionTerms model module.
 * @module model/NonGuaranteedAuctionTerms
 * @version v2beta1
 */
class NonGuaranteedAuctionTerms {
    /**
     * Constructs a new <code>NonGuaranteedAuctionTerms</code>.
     * Terms for Private Auctions. Note that Private Auctions can be created only by the seller, but they can be returned in a get or list request.
     * @alias module:model/NonGuaranteedAuctionTerms
     */
    constructor() { 
        
        NonGuaranteedAuctionTerms.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>NonGuaranteedAuctionTerms</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NonGuaranteedAuctionTerms} obj Optional instance to populate.
     * @return {module:model/NonGuaranteedAuctionTerms} The populated <code>NonGuaranteedAuctionTerms</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NonGuaranteedAuctionTerms();

            if (data.hasOwnProperty('autoOptimizePrivateAuction')) {
                obj['autoOptimizePrivateAuction'] = ApiClient.convertToType(data['autoOptimizePrivateAuction'], 'Boolean');
            }
            if (data.hasOwnProperty('reservePricesPerBuyer')) {
                obj['reservePricesPerBuyer'] = ApiClient.convertToType(data['reservePricesPerBuyer'], [PricePerBuyer]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NonGuaranteedAuctionTerms</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NonGuaranteedAuctionTerms</code>.
     */
    static validateJSON(data) {
        if (data['reservePricesPerBuyer']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['reservePricesPerBuyer'])) {
                throw new Error("Expected the field `reservePricesPerBuyer` to be an array in the JSON data but got " + data['reservePricesPerBuyer']);
            }
            // validate the optional field `reservePricesPerBuyer` (array)
            for (const item of data['reservePricesPerBuyer']) {
                PricePerBuyer.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * True if open auction buyers are allowed to compete with invited buyers in this private auction.
 * @member {Boolean} autoOptimizePrivateAuction
 */
NonGuaranteedAuctionTerms.prototype['autoOptimizePrivateAuction'] = undefined;

/**
 * Reserve price for the specified buyer.
 * @member {Array.<module:model/PricePerBuyer>} reservePricesPerBuyer
 */
NonGuaranteedAuctionTerms.prototype['reservePricesPerBuyer'] = undefined;






export default NonGuaranteedAuctionTerms;

