/**
 * Ad Exchange Buyer API II
 * Accesses the latest features for managing Authorized Buyers accounts, Real-Time Bidding configurations and auction metrics, and Marketplace programmatic deals.
 *
 * The version of the OpenAPI document: v2beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PricePerBuyer from './PricePerBuyer';

/**
 * The NonGuaranteedFixedPriceTerms model module.
 * @module model/NonGuaranteedFixedPriceTerms
 * @version v2beta1
 */
class NonGuaranteedFixedPriceTerms {
    /**
     * Constructs a new <code>NonGuaranteedFixedPriceTerms</code>.
     * Terms for Preferred Deals.
     * @alias module:model/NonGuaranteedFixedPriceTerms
     */
    constructor() { 
        
        NonGuaranteedFixedPriceTerms.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>NonGuaranteedFixedPriceTerms</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NonGuaranteedFixedPriceTerms} obj Optional instance to populate.
     * @return {module:model/NonGuaranteedFixedPriceTerms} The populated <code>NonGuaranteedFixedPriceTerms</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NonGuaranteedFixedPriceTerms();

            if (data.hasOwnProperty('fixedPrices')) {
                obj['fixedPrices'] = ApiClient.convertToType(data['fixedPrices'], [PricePerBuyer]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NonGuaranteedFixedPriceTerms</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NonGuaranteedFixedPriceTerms</code>.
     */
    static validateJSON(data) {
        if (data['fixedPrices']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['fixedPrices'])) {
                throw new Error("Expected the field `fixedPrices` to be an array in the JSON data but got " + data['fixedPrices']);
            }
            // validate the optional field `fixedPrices` (array)
            for (const item of data['fixedPrices']) {
                PricePerBuyer.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Fixed price for the specified buyer.
 * @member {Array.<module:model/PricePerBuyer>} fixedPrices
 */
NonGuaranteedFixedPriceTerms.prototype['fixedPrices'] = undefined;






export default NonGuaranteedFixedPriceTerms;

