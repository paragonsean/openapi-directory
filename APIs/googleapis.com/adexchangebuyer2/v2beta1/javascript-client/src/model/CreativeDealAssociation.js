/**
 * Ad Exchange Buyer API II
 * Accesses the latest features for managing Authorized Buyers accounts, Real-Time Bidding configurations and auction metrics, and Marketplace programmatic deals.
 *
 * The version of the OpenAPI document: v2beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreativeDealAssociation model module.
 * @module model/CreativeDealAssociation
 * @version v2beta1
 */
class CreativeDealAssociation {
    /**
     * Constructs a new <code>CreativeDealAssociation</code>.
     * The association between a creative and a deal.
     * @alias module:model/CreativeDealAssociation
     */
    constructor() { 
        
        CreativeDealAssociation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreativeDealAssociation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreativeDealAssociation} obj Optional instance to populate.
     * @return {module:model/CreativeDealAssociation} The populated <code>CreativeDealAssociation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreativeDealAssociation();

            if (data.hasOwnProperty('accountId')) {
                obj['accountId'] = ApiClient.convertToType(data['accountId'], 'String');
            }
            if (data.hasOwnProperty('creativeId')) {
                obj['creativeId'] = ApiClient.convertToType(data['creativeId'], 'String');
            }
            if (data.hasOwnProperty('dealsId')) {
                obj['dealsId'] = ApiClient.convertToType(data['dealsId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreativeDealAssociation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreativeDealAssociation</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['accountId'] && !(typeof data['accountId'] === 'string' || data['accountId'] instanceof String)) {
            throw new Error("Expected the field `accountId` to be a primitive type in the JSON string but got " + data['accountId']);
        }
        // ensure the json data is a string
        if (data['creativeId'] && !(typeof data['creativeId'] === 'string' || data['creativeId'] instanceof String)) {
            throw new Error("Expected the field `creativeId` to be a primitive type in the JSON string but got " + data['creativeId']);
        }
        // ensure the json data is a string
        if (data['dealsId'] && !(typeof data['dealsId'] === 'string' || data['dealsId'] instanceof String)) {
            throw new Error("Expected the field `dealsId` to be a primitive type in the JSON string but got " + data['dealsId']);
        }

        return true;
    }


}



/**
 * The account the creative belongs to.
 * @member {String} accountId
 */
CreativeDealAssociation.prototype['accountId'] = undefined;

/**
 * The ID of the creative associated with the deal.
 * @member {String} creativeId
 */
CreativeDealAssociation.prototype['creativeId'] = undefined;

/**
 * The externalDealId for the deal associated with the creative.
 * @member {String} dealsId
 */
CreativeDealAssociation.prototype['dealsId'] = undefined;






export default CreativeDealAssociation;

