/**
 * Ad Exchange Buyer API II
 * Accesses the latest features for managing Authorized Buyers accounts, Real-Time Bidding configurations and auction metrics, and Marketplace programmatic deals.
 *
 * The version of the OpenAPI document: v2beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MetricValue from './MetricValue';
import RowDimensions from './RowDimensions';

/**
 * The FilteredBidDetailRow model module.
 * @module model/FilteredBidDetailRow
 * @version v2beta1
 */
class FilteredBidDetailRow {
    /**
     * Constructs a new <code>FilteredBidDetailRow</code>.
     * The number of filtered bids with the specified dimension values, among those filtered due to the requested filtering reason (for example, creative status), that have the specified detail.
     * @alias module:model/FilteredBidDetailRow
     */
    constructor() { 
        
        FilteredBidDetailRow.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FilteredBidDetailRow</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FilteredBidDetailRow} obj Optional instance to populate.
     * @return {module:model/FilteredBidDetailRow} The populated <code>FilteredBidDetailRow</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FilteredBidDetailRow();

            if (data.hasOwnProperty('bidCount')) {
                obj['bidCount'] = MetricValue.constructFromObject(data['bidCount']);
            }
            if (data.hasOwnProperty('detail')) {
                obj['detail'] = ApiClient.convertToType(data['detail'], 'String');
            }
            if (data.hasOwnProperty('detailId')) {
                obj['detailId'] = ApiClient.convertToType(data['detailId'], 'Number');
            }
            if (data.hasOwnProperty('rowDimensions')) {
                obj['rowDimensions'] = RowDimensions.constructFromObject(data['rowDimensions']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FilteredBidDetailRow</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FilteredBidDetailRow</code>.
     */
    static validateJSON(data) {
        // validate the optional field `bidCount`
        if (data['bidCount']) { // data not null
          MetricValue.validateJSON(data['bidCount']);
        }
        // ensure the json data is a string
        if (data['detail'] && !(typeof data['detail'] === 'string' || data['detail'] instanceof String)) {
            throw new Error("Expected the field `detail` to be a primitive type in the JSON string but got " + data['detail']);
        }
        // validate the optional field `rowDimensions`
        if (data['rowDimensions']) { // data not null
          RowDimensions.validateJSON(data['rowDimensions']);
        }

        return true;
    }


}



/**
 * @member {module:model/MetricValue} bidCount
 */
FilteredBidDetailRow.prototype['bidCount'] = undefined;

/**
 * The ID of the detail, can be numeric or text. The associated value can be looked up in the dictionary file corresponding to the DetailType in the response message.
 * @member {String} detail
 */
FilteredBidDetailRow.prototype['detail'] = undefined;

/**
 * Note: this field will be deprecated, use \"detail\" field instead. When \"detail\" field represents an integer value, this field is populated as the same integer value \"detail\" field represents, otherwise this field will be 0. The ID of the detail. The associated value can be looked up in the dictionary file corresponding to the DetailType in the response message.
 * @member {Number} detailId
 */
FilteredBidDetailRow.prototype['detailId'] = undefined;

/**
 * @member {module:model/RowDimensions} rowDimensions
 */
FilteredBidDetailRow.prototype['rowDimensions'] = undefined;






export default FilteredBidDetailRow;

