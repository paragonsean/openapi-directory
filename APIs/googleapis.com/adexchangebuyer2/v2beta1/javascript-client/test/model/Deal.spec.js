/**
 * Ad Exchange Buyer API II
 * Accesses the latest features for managing Authorized Buyers accounts, Real-Time Bidding configurations and auction metrics, and Marketplace programmatic deals.
 *
 * The version of the OpenAPI document: v2beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AdExchangeBuyerApiIi);
  }
}(this, function(expect, AdExchangeBuyerApiIi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AdExchangeBuyerApiIi.Deal();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Deal', function() {
    it('should create an instance of Deal', function() {
      // uncomment below and update the code to test Deal
      //var instance = new AdExchangeBuyerApiIi.Deal();
      //expect(instance).to.be.a(AdExchangeBuyerApiIi.Deal);
    });

    it('should have the property availableEndTime (base name: "availableEndTime")', function() {
      // uncomment below and update the code to test the property availableEndTime
      //var instance = new AdExchangeBuyerApiIi.Deal();
      //expect(instance).to.be();
    });

    it('should have the property availableStartTime (base name: "availableStartTime")', function() {
      // uncomment below and update the code to test the property availableStartTime
      //var instance = new AdExchangeBuyerApiIi.Deal();
      //expect(instance).to.be();
    });

    it('should have the property buyerPrivateData (base name: "buyerPrivateData")', function() {
      // uncomment below and update the code to test the property buyerPrivateData
      //var instance = new AdExchangeBuyerApiIi.Deal();
      //expect(instance).to.be();
    });

    it('should have the property createProductId (base name: "createProductId")', function() {
      // uncomment below and update the code to test the property createProductId
      //var instance = new AdExchangeBuyerApiIi.Deal();
      //expect(instance).to.be();
    });

    it('should have the property createProductRevision (base name: "createProductRevision")', function() {
      // uncomment below and update the code to test the property createProductRevision
      //var instance = new AdExchangeBuyerApiIi.Deal();
      //expect(instance).to.be();
    });

    it('should have the property createTime (base name: "createTime")', function() {
      // uncomment below and update the code to test the property createTime
      //var instance = new AdExchangeBuyerApiIi.Deal();
      //expect(instance).to.be();
    });

    it('should have the property creativePreApprovalPolicy (base name: "creativePreApprovalPolicy")', function() {
      // uncomment below and update the code to test the property creativePreApprovalPolicy
      //var instance = new AdExchangeBuyerApiIi.Deal();
      //expect(instance).to.be();
    });

    it('should have the property creativeRestrictions (base name: "creativeRestrictions")', function() {
      // uncomment below and update the code to test the property creativeRestrictions
      //var instance = new AdExchangeBuyerApiIi.Deal();
      //expect(instance).to.be();
    });

    it('should have the property creativeSafeFrameCompatibility (base name: "creativeSafeFrameCompatibility")', function() {
      // uncomment below and update the code to test the property creativeSafeFrameCompatibility
      //var instance = new AdExchangeBuyerApiIi.Deal();
      //expect(instance).to.be();
    });

    it('should have the property dealId (base name: "dealId")', function() {
      // uncomment below and update the code to test the property dealId
      //var instance = new AdExchangeBuyerApiIi.Deal();
      //expect(instance).to.be();
    });

    it('should have the property dealServingMetadata (base name: "dealServingMetadata")', function() {
      // uncomment below and update the code to test the property dealServingMetadata
      //var instance = new AdExchangeBuyerApiIi.Deal();
      //expect(instance).to.be();
    });

    it('should have the property dealTerms (base name: "dealTerms")', function() {
      // uncomment below and update the code to test the property dealTerms
      //var instance = new AdExchangeBuyerApiIi.Deal();
      //expect(instance).to.be();
    });

    it('should have the property deliveryControl (base name: "deliveryControl")', function() {
      // uncomment below and update the code to test the property deliveryControl
      //var instance = new AdExchangeBuyerApiIi.Deal();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new AdExchangeBuyerApiIi.Deal();
      //expect(instance).to.be();
    });

    it('should have the property displayName (base name: "displayName")', function() {
      // uncomment below and update the code to test the property displayName
      //var instance = new AdExchangeBuyerApiIi.Deal();
      //expect(instance).to.be();
    });

    it('should have the property externalDealId (base name: "externalDealId")', function() {
      // uncomment below and update the code to test the property externalDealId
      //var instance = new AdExchangeBuyerApiIi.Deal();
      //expect(instance).to.be();
    });

    it('should have the property isSetupComplete (base name: "isSetupComplete")', function() {
      // uncomment below and update the code to test the property isSetupComplete
      //var instance = new AdExchangeBuyerApiIi.Deal();
      //expect(instance).to.be();
    });

    it('should have the property programmaticCreativeSource (base name: "programmaticCreativeSource")', function() {
      // uncomment below and update the code to test the property programmaticCreativeSource
      //var instance = new AdExchangeBuyerApiIi.Deal();
      //expect(instance).to.be();
    });

    it('should have the property proposalId (base name: "proposalId")', function() {
      // uncomment below and update the code to test the property proposalId
      //var instance = new AdExchangeBuyerApiIi.Deal();
      //expect(instance).to.be();
    });

    it('should have the property sellerContacts (base name: "sellerContacts")', function() {
      // uncomment below and update the code to test the property sellerContacts
      //var instance = new AdExchangeBuyerApiIi.Deal();
      //expect(instance).to.be();
    });

    it('should have the property syndicationProduct (base name: "syndicationProduct")', function() {
      // uncomment below and update the code to test the property syndicationProduct
      //var instance = new AdExchangeBuyerApiIi.Deal();
      //expect(instance).to.be();
    });

    it('should have the property targeting (base name: "targeting")', function() {
      // uncomment below and update the code to test the property targeting
      //var instance = new AdExchangeBuyerApiIi.Deal();
      //expect(instance).to.be();
    });

    it('should have the property targetingCriterion (base name: "targetingCriterion")', function() {
      // uncomment below and update the code to test the property targetingCriterion
      //var instance = new AdExchangeBuyerApiIi.Deal();
      //expect(instance).to.be();
    });

    it('should have the property updateTime (base name: "updateTime")', function() {
      // uncomment below and update the code to test the property updateTime
      //var instance = new AdExchangeBuyerApiIi.Deal();
      //expect(instance).to.be();
    });

    it('should have the property webPropertyCode (base name: "webPropertyCode")', function() {
      // uncomment below and update the code to test the property webPropertyCode
      //var instance = new AdExchangeBuyerApiIi.Deal();
      //expect(instance).to.be();
    });

  });

}));
