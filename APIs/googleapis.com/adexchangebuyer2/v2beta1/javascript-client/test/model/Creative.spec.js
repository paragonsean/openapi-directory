/**
 * Ad Exchange Buyer API II
 * Accesses the latest features for managing Authorized Buyers accounts, Real-Time Bidding configurations and auction metrics, and Marketplace programmatic deals.
 *
 * The version of the OpenAPI document: v2beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AdExchangeBuyerApiIi);
  }
}(this, function(expect, AdExchangeBuyerApiIi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AdExchangeBuyerApiIi.Creative();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Creative', function() {
    it('should create an instance of Creative', function() {
      // uncomment below and update the code to test Creative
      //var instance = new AdExchangeBuyerApiIi.Creative();
      //expect(instance).to.be.a(AdExchangeBuyerApiIi.Creative);
    });

    it('should have the property accountId (base name: "accountId")', function() {
      // uncomment below and update the code to test the property accountId
      //var instance = new AdExchangeBuyerApiIi.Creative();
      //expect(instance).to.be();
    });

    it('should have the property adChoicesDestinationUrl (base name: "adChoicesDestinationUrl")', function() {
      // uncomment below and update the code to test the property adChoicesDestinationUrl
      //var instance = new AdExchangeBuyerApiIi.Creative();
      //expect(instance).to.be();
    });

    it('should have the property adTechnologyProviders (base name: "adTechnologyProviders")', function() {
      // uncomment below and update the code to test the property adTechnologyProviders
      //var instance = new AdExchangeBuyerApiIi.Creative();
      //expect(instance).to.be();
    });

    it('should have the property advertiserName (base name: "advertiserName")', function() {
      // uncomment below and update the code to test the property advertiserName
      //var instance = new AdExchangeBuyerApiIi.Creative();
      //expect(instance).to.be();
    });

    it('should have the property agencyId (base name: "agencyId")', function() {
      // uncomment below and update the code to test the property agencyId
      //var instance = new AdExchangeBuyerApiIi.Creative();
      //expect(instance).to.be();
    });

    it('should have the property apiUpdateTime (base name: "apiUpdateTime")', function() {
      // uncomment below and update the code to test the property apiUpdateTime
      //var instance = new AdExchangeBuyerApiIi.Creative();
      //expect(instance).to.be();
    });

    it('should have the property attributes (base name: "attributes")', function() {
      // uncomment below and update the code to test the property attributes
      //var instance = new AdExchangeBuyerApiIi.Creative();
      //expect(instance).to.be();
    });

    it('should have the property clickThroughUrls (base name: "clickThroughUrls")', function() {
      // uncomment below and update the code to test the property clickThroughUrls
      //var instance = new AdExchangeBuyerApiIi.Creative();
      //expect(instance).to.be();
    });

    it('should have the property corrections (base name: "corrections")', function() {
      // uncomment below and update the code to test the property corrections
      //var instance = new AdExchangeBuyerApiIi.Creative();
      //expect(instance).to.be();
    });

    it('should have the property creativeId (base name: "creativeId")', function() {
      // uncomment below and update the code to test the property creativeId
      //var instance = new AdExchangeBuyerApiIi.Creative();
      //expect(instance).to.be();
    });

    it('should have the property dealsStatus (base name: "dealsStatus")', function() {
      // uncomment below and update the code to test the property dealsStatus
      //var instance = new AdExchangeBuyerApiIi.Creative();
      //expect(instance).to.be();
    });

    it('should have the property declaredClickThroughUrls (base name: "declaredClickThroughUrls")', function() {
      // uncomment below and update the code to test the property declaredClickThroughUrls
      //var instance = new AdExchangeBuyerApiIi.Creative();
      //expect(instance).to.be();
    });

    it('should have the property detectedAdvertiserIds (base name: "detectedAdvertiserIds")', function() {
      // uncomment below and update the code to test the property detectedAdvertiserIds
      //var instance = new AdExchangeBuyerApiIi.Creative();
      //expect(instance).to.be();
    });

    it('should have the property detectedDomains (base name: "detectedDomains")', function() {
      // uncomment below and update the code to test the property detectedDomains
      //var instance = new AdExchangeBuyerApiIi.Creative();
      //expect(instance).to.be();
    });

    it('should have the property detectedLanguages (base name: "detectedLanguages")', function() {
      // uncomment below and update the code to test the property detectedLanguages
      //var instance = new AdExchangeBuyerApiIi.Creative();
      //expect(instance).to.be();
    });

    it('should have the property detectedProductCategories (base name: "detectedProductCategories")', function() {
      // uncomment below and update the code to test the property detectedProductCategories
      //var instance = new AdExchangeBuyerApiIi.Creative();
      //expect(instance).to.be();
    });

    it('should have the property detectedSensitiveCategories (base name: "detectedSensitiveCategories")', function() {
      // uncomment below and update the code to test the property detectedSensitiveCategories
      //var instance = new AdExchangeBuyerApiIi.Creative();
      //expect(instance).to.be();
    });

    it('should have the property html (base name: "html")', function() {
      // uncomment below and update the code to test the property html
      //var instance = new AdExchangeBuyerApiIi.Creative();
      //expect(instance).to.be();
    });

    it('should have the property impressionTrackingUrls (base name: "impressionTrackingUrls")', function() {
      // uncomment below and update the code to test the property impressionTrackingUrls
      //var instance = new AdExchangeBuyerApiIi.Creative();
      //expect(instance).to.be();
    });

    it('should have the property _native (base name: "native")', function() {
      // uncomment below and update the code to test the property _native
      //var instance = new AdExchangeBuyerApiIi.Creative();
      //expect(instance).to.be();
    });

    it('should have the property openAuctionStatus (base name: "openAuctionStatus")', function() {
      // uncomment below and update the code to test the property openAuctionStatus
      //var instance = new AdExchangeBuyerApiIi.Creative();
      //expect(instance).to.be();
    });

    it('should have the property restrictedCategories (base name: "restrictedCategories")', function() {
      // uncomment below and update the code to test the property restrictedCategories
      //var instance = new AdExchangeBuyerApiIi.Creative();
      //expect(instance).to.be();
    });

    it('should have the property servingRestrictions (base name: "servingRestrictions")', function() {
      // uncomment below and update the code to test the property servingRestrictions
      //var instance = new AdExchangeBuyerApiIi.Creative();
      //expect(instance).to.be();
    });

    it('should have the property vendorIds (base name: "vendorIds")', function() {
      // uncomment below and update the code to test the property vendorIds
      //var instance = new AdExchangeBuyerApiIi.Creative();
      //expect(instance).to.be();
    });

    it('should have the property version (base name: "version")', function() {
      // uncomment below and update the code to test the property version
      //var instance = new AdExchangeBuyerApiIi.Creative();
      //expect(instance).to.be();
    });

    it('should have the property video (base name: "video")', function() {
      // uncomment below and update the code to test the property video
      //var instance = new AdExchangeBuyerApiIi.Creative();
      //expect(instance).to.be();
    });

  });

}));
