/**
 * Ad Exchange Buyer API II
 * Accesses the latest features for managing Authorized Buyers accounts, Real-Time Bidding configurations and auction metrics, and Marketplace programmatic deals.
 *
 * The version of the OpenAPI document: v2beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AdExchangeBuyerApiIi);
  }
}(this, function(expect, AdExchangeBuyerApiIi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AdExchangeBuyerApiIi.PublisherProfile();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PublisherProfile', function() {
    it('should create an instance of PublisherProfile', function() {
      // uncomment below and update the code to test PublisherProfile
      //var instance = new AdExchangeBuyerApiIi.PublisherProfile();
      //expect(instance).to.be.a(AdExchangeBuyerApiIi.PublisherProfile);
    });

    it('should have the property audienceDescription (base name: "audienceDescription")', function() {
      // uncomment below and update the code to test the property audienceDescription
      //var instance = new AdExchangeBuyerApiIi.PublisherProfile();
      //expect(instance).to.be();
    });

    it('should have the property buyerPitchStatement (base name: "buyerPitchStatement")', function() {
      // uncomment below and update the code to test the property buyerPitchStatement
      //var instance = new AdExchangeBuyerApiIi.PublisherProfile();
      //expect(instance).to.be();
    });

    it('should have the property directDealsContact (base name: "directDealsContact")', function() {
      // uncomment below and update the code to test the property directDealsContact
      //var instance = new AdExchangeBuyerApiIi.PublisherProfile();
      //expect(instance).to.be();
    });

    it('should have the property displayName (base name: "displayName")', function() {
      // uncomment below and update the code to test the property displayName
      //var instance = new AdExchangeBuyerApiIi.PublisherProfile();
      //expect(instance).to.be();
    });

    it('should have the property domains (base name: "domains")', function() {
      // uncomment below and update the code to test the property domains
      //var instance = new AdExchangeBuyerApiIi.PublisherProfile();
      //expect(instance).to.be();
    });

    it('should have the property googlePlusUrl (base name: "googlePlusUrl")', function() {
      // uncomment below and update the code to test the property googlePlusUrl
      //var instance = new AdExchangeBuyerApiIi.PublisherProfile();
      //expect(instance).to.be();
    });

    it('should have the property isParent (base name: "isParent")', function() {
      // uncomment below and update the code to test the property isParent
      //var instance = new AdExchangeBuyerApiIi.PublisherProfile();
      //expect(instance).to.be();
    });

    it('should have the property logoUrl (base name: "logoUrl")', function() {
      // uncomment below and update the code to test the property logoUrl
      //var instance = new AdExchangeBuyerApiIi.PublisherProfile();
      //expect(instance).to.be();
    });

    it('should have the property mediaKitUrl (base name: "mediaKitUrl")', function() {
      // uncomment below and update the code to test the property mediaKitUrl
      //var instance = new AdExchangeBuyerApiIi.PublisherProfile();
      //expect(instance).to.be();
    });

    it('should have the property mobileApps (base name: "mobileApps")', function() {
      // uncomment below and update the code to test the property mobileApps
      //var instance = new AdExchangeBuyerApiIi.PublisherProfile();
      //expect(instance).to.be();
    });

    it('should have the property overview (base name: "overview")', function() {
      // uncomment below and update the code to test the property overview
      //var instance = new AdExchangeBuyerApiIi.PublisherProfile();
      //expect(instance).to.be();
    });

    it('should have the property programmaticDealsContact (base name: "programmaticDealsContact")', function() {
      // uncomment below and update the code to test the property programmaticDealsContact
      //var instance = new AdExchangeBuyerApiIi.PublisherProfile();
      //expect(instance).to.be();
    });

    it('should have the property publisherProfileId (base name: "publisherProfileId")', function() {
      // uncomment below and update the code to test the property publisherProfileId
      //var instance = new AdExchangeBuyerApiIi.PublisherProfile();
      //expect(instance).to.be();
    });

    it('should have the property rateCardInfoUrl (base name: "rateCardInfoUrl")', function() {
      // uncomment below and update the code to test the property rateCardInfoUrl
      //var instance = new AdExchangeBuyerApiIi.PublisherProfile();
      //expect(instance).to.be();
    });

    it('should have the property samplePageUrl (base name: "samplePageUrl")', function() {
      // uncomment below and update the code to test the property samplePageUrl
      //var instance = new AdExchangeBuyerApiIi.PublisherProfile();
      //expect(instance).to.be();
    });

    it('should have the property seller (base name: "seller")', function() {
      // uncomment below and update the code to test the property seller
      //var instance = new AdExchangeBuyerApiIi.PublisherProfile();
      //expect(instance).to.be();
    });

    it('should have the property topHeadlines (base name: "topHeadlines")', function() {
      // uncomment below and update the code to test the property topHeadlines
      //var instance = new AdExchangeBuyerApiIi.PublisherProfile();
      //expect(instance).to.be();
    });

  });

}));
