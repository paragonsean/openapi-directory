/**
 * Ad Exchange Buyer API II
 * Accesses the latest features for managing Authorized Buyers accounts, Real-Time Bidding configurations and auction metrics, and Marketplace programmatic deals.
 *
 * The version of the OpenAPI document: v2beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AdExchangeBuyerApiIi);
  }
}(this, function(expect, AdExchangeBuyerApiIi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AdExchangeBuyerApiIi.BuyersApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('BuyersApi', function() {
    describe('adexchangebuyer2BuyersFilterSetsBidMetricsList', function() {
      it('should call adexchangebuyer2BuyersFilterSetsBidMetricsList successfully', function(done) {
        //uncomment below and update the code to test adexchangebuyer2BuyersFilterSetsBidMetricsList
        //instance.adexchangebuyer2BuyersFilterSetsBidMetricsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adexchangebuyer2BuyersFilterSetsBidResponseErrorsList', function() {
      it('should call adexchangebuyer2BuyersFilterSetsBidResponseErrorsList successfully', function(done) {
        //uncomment below and update the code to test adexchangebuyer2BuyersFilterSetsBidResponseErrorsList
        //instance.adexchangebuyer2BuyersFilterSetsBidResponseErrorsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adexchangebuyer2BuyersFilterSetsBidResponsesWithoutBidsList', function() {
      it('should call adexchangebuyer2BuyersFilterSetsBidResponsesWithoutBidsList successfully', function(done) {
        //uncomment below and update the code to test adexchangebuyer2BuyersFilterSetsBidResponsesWithoutBidsList
        //instance.adexchangebuyer2BuyersFilterSetsBidResponsesWithoutBidsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adexchangebuyer2BuyersFilterSetsCreate', function() {
      it('should call adexchangebuyer2BuyersFilterSetsCreate successfully', function(done) {
        //uncomment below and update the code to test adexchangebuyer2BuyersFilterSetsCreate
        //instance.adexchangebuyer2BuyersFilterSetsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adexchangebuyer2BuyersFilterSetsDelete', function() {
      it('should call adexchangebuyer2BuyersFilterSetsDelete successfully', function(done) {
        //uncomment below and update the code to test adexchangebuyer2BuyersFilterSetsDelete
        //instance.adexchangebuyer2BuyersFilterSetsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adexchangebuyer2BuyersFilterSetsFilteredBidRequestsList', function() {
      it('should call adexchangebuyer2BuyersFilterSetsFilteredBidRequestsList successfully', function(done) {
        //uncomment below and update the code to test adexchangebuyer2BuyersFilterSetsFilteredBidRequestsList
        //instance.adexchangebuyer2BuyersFilterSetsFilteredBidRequestsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adexchangebuyer2BuyersFilterSetsFilteredBidsCreativesList', function() {
      it('should call adexchangebuyer2BuyersFilterSetsFilteredBidsCreativesList successfully', function(done) {
        //uncomment below and update the code to test adexchangebuyer2BuyersFilterSetsFilteredBidsCreativesList
        //instance.adexchangebuyer2BuyersFilterSetsFilteredBidsCreativesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adexchangebuyer2BuyersFilterSetsFilteredBidsDetailsList', function() {
      it('should call adexchangebuyer2BuyersFilterSetsFilteredBidsDetailsList successfully', function(done) {
        //uncomment below and update the code to test adexchangebuyer2BuyersFilterSetsFilteredBidsDetailsList
        //instance.adexchangebuyer2BuyersFilterSetsFilteredBidsDetailsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adexchangebuyer2BuyersFilterSetsFilteredBidsList', function() {
      it('should call adexchangebuyer2BuyersFilterSetsFilteredBidsList successfully', function(done) {
        //uncomment below and update the code to test adexchangebuyer2BuyersFilterSetsFilteredBidsList
        //instance.adexchangebuyer2BuyersFilterSetsFilteredBidsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adexchangebuyer2BuyersFilterSetsGet', function() {
      it('should call adexchangebuyer2BuyersFilterSetsGet successfully', function(done) {
        //uncomment below and update the code to test adexchangebuyer2BuyersFilterSetsGet
        //instance.adexchangebuyer2BuyersFilterSetsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adexchangebuyer2BuyersFilterSetsImpressionMetricsList', function() {
      it('should call adexchangebuyer2BuyersFilterSetsImpressionMetricsList successfully', function(done) {
        //uncomment below and update the code to test adexchangebuyer2BuyersFilterSetsImpressionMetricsList
        //instance.adexchangebuyer2BuyersFilterSetsImpressionMetricsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adexchangebuyer2BuyersFilterSetsList', function() {
      it('should call adexchangebuyer2BuyersFilterSetsList successfully', function(done) {
        //uncomment below and update the code to test adexchangebuyer2BuyersFilterSetsList
        //instance.adexchangebuyer2BuyersFilterSetsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adexchangebuyer2BuyersFilterSetsLosingBidsList', function() {
      it('should call adexchangebuyer2BuyersFilterSetsLosingBidsList successfully', function(done) {
        //uncomment below and update the code to test adexchangebuyer2BuyersFilterSetsLosingBidsList
        //instance.adexchangebuyer2BuyersFilterSetsLosingBidsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adexchangebuyer2BuyersFilterSetsNonBillableWinningBidsList', function() {
      it('should call adexchangebuyer2BuyersFilterSetsNonBillableWinningBidsList successfully', function(done) {
        //uncomment below and update the code to test adexchangebuyer2BuyersFilterSetsNonBillableWinningBidsList
        //instance.adexchangebuyer2BuyersFilterSetsNonBillableWinningBidsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
