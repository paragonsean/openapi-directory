/*
 * Ad Exchange Buyer API II
 * Accesses the latest features for managing Authorized Buyers accounts, Real-Time Bidding configurations and auction metrics, and Marketplace programmatic deals.
 *
 * The version of the OpenAPI document: v2beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents a list of targeted and excluded mobile application IDs that publishers own. Mobile application IDs are from App Store and Google Play Store. Android App ID, for example, com.google.android.apps.maps, can be found in Google Play Store URL. iOS App ID (which is a number) can be found at the end of iTunes store URL. First party mobile applications is either included or excluded.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:43:01.871396-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class FirstPartyMobileApplicationTargeting {
  public static final String SERIALIZED_NAME_EXCLUDED_APP_IDS = "excludedAppIds";
  @SerializedName(SERIALIZED_NAME_EXCLUDED_APP_IDS)
  private List<String> excludedAppIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_TARGETED_APP_IDS = "targetedAppIds";
  @SerializedName(SERIALIZED_NAME_TARGETED_APP_IDS)
  private List<String> targetedAppIds = new ArrayList<>();

  public FirstPartyMobileApplicationTargeting() {
  }

  public FirstPartyMobileApplicationTargeting excludedAppIds(List<String> excludedAppIds) {
    this.excludedAppIds = excludedAppIds;
    return this;
  }

  public FirstPartyMobileApplicationTargeting addExcludedAppIdsItem(String excludedAppIdsItem) {
    if (this.excludedAppIds == null) {
      this.excludedAppIds = new ArrayList<>();
    }
    this.excludedAppIds.add(excludedAppIdsItem);
    return this;
  }

  /**
   * A list of application IDs to be excluded.
   * @return excludedAppIds
   */
  @javax.annotation.Nullable
  public List<String> getExcludedAppIds() {
    return excludedAppIds;
  }

  public void setExcludedAppIds(List<String> excludedAppIds) {
    this.excludedAppIds = excludedAppIds;
  }


  public FirstPartyMobileApplicationTargeting targetedAppIds(List<String> targetedAppIds) {
    this.targetedAppIds = targetedAppIds;
    return this;
  }

  public FirstPartyMobileApplicationTargeting addTargetedAppIdsItem(String targetedAppIdsItem) {
    if (this.targetedAppIds == null) {
      this.targetedAppIds = new ArrayList<>();
    }
    this.targetedAppIds.add(targetedAppIdsItem);
    return this;
  }

  /**
   * A list of application IDs to be included.
   * @return targetedAppIds
   */
  @javax.annotation.Nullable
  public List<String> getTargetedAppIds() {
    return targetedAppIds;
  }

  public void setTargetedAppIds(List<String> targetedAppIds) {
    this.targetedAppIds = targetedAppIds;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FirstPartyMobileApplicationTargeting firstPartyMobileApplicationTargeting = (FirstPartyMobileApplicationTargeting) o;
    return Objects.equals(this.excludedAppIds, firstPartyMobileApplicationTargeting.excludedAppIds) &&
        Objects.equals(this.targetedAppIds, firstPartyMobileApplicationTargeting.targetedAppIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(excludedAppIds, targetedAppIds);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FirstPartyMobileApplicationTargeting {\n");
    sb.append("    excludedAppIds: ").append(toIndentedString(excludedAppIds)).append("\n");
    sb.append("    targetedAppIds: ").append(toIndentedString(targetedAppIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("excludedAppIds");
    openapiFields.add("targetedAppIds");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to FirstPartyMobileApplicationTargeting
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!FirstPartyMobileApplicationTargeting.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in FirstPartyMobileApplicationTargeting is not found in the empty JSON string", FirstPartyMobileApplicationTargeting.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!FirstPartyMobileApplicationTargeting.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `FirstPartyMobileApplicationTargeting` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("excludedAppIds") != null && !jsonObj.get("excludedAppIds").isJsonNull() && !jsonObj.get("excludedAppIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `excludedAppIds` to be an array in the JSON string but got `%s`", jsonObj.get("excludedAppIds").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("targetedAppIds") != null && !jsonObj.get("targetedAppIds").isJsonNull() && !jsonObj.get("targetedAppIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `targetedAppIds` to be an array in the JSON string but got `%s`", jsonObj.get("targetedAppIds").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!FirstPartyMobileApplicationTargeting.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'FirstPartyMobileApplicationTargeting' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<FirstPartyMobileApplicationTargeting> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(FirstPartyMobileApplicationTargeting.class));

       return (TypeAdapter<T>) new TypeAdapter<FirstPartyMobileApplicationTargeting>() {
           @Override
           public void write(JsonWriter out, FirstPartyMobileApplicationTargeting value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public FirstPartyMobileApplicationTargeting read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of FirstPartyMobileApplicationTargeting given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of FirstPartyMobileApplicationTargeting
   * @throws IOException if the JSON string is invalid with respect to FirstPartyMobileApplicationTargeting
   */
  public static FirstPartyMobileApplicationTargeting fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, FirstPartyMobileApplicationTargeting.class);
  }

  /**
   * Convert an instance of FirstPartyMobileApplicationTargeting to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

