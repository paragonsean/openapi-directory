/**
 * Perspective Comment Analyzer API
 * The Perspective Comment Analyzer API provides information about the potential impact of a comment on a conversation (e.g. it can provide a score for the \"toxicity\" of a comment). Users can leverage the \"SuggestCommentScore\" method to submit corrections to improve Perspective over time. Users can set the \"doNotStore\" flag to ensure that all submitted comments are automatically deleted after scores are returned.
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Score from './Score';

/**
 * The SpanScore model module.
 * @module model/SpanScore
 * @version v1alpha1
 */
class SpanScore {
    /**
     * Constructs a new <code>SpanScore</code>.
     * This is a single score for a given span of text.
     * @alias module:model/SpanScore
     */
    constructor() { 
        
        SpanScore.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SpanScore</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SpanScore} obj Optional instance to populate.
     * @return {module:model/SpanScore} The populated <code>SpanScore</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SpanScore();

            if (data.hasOwnProperty('begin')) {
                obj['begin'] = ApiClient.convertToType(data['begin'], 'Number');
            }
            if (data.hasOwnProperty('end')) {
                obj['end'] = ApiClient.convertToType(data['end'], 'Number');
            }
            if (data.hasOwnProperty('score')) {
                obj['score'] = Score.constructFromObject(data['score']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SpanScore</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SpanScore</code>.
     */
    static validateJSON(data) {
        // validate the optional field `score`
        if (data['score']) { // data not null
          Score.validateJSON(data['score']);
        }

        return true;
    }


}



/**
 * \"begin\" and \"end\" describe the span of the original text that the attribute score applies to. The values are the UTF-16 codepoint range. \"end\" is exclusive. For example, with the text \"Hi there\", the begin/end pair (0,2) describes the text \"Hi\". If \"begin\" and \"end\" are unset, the score applies to the full text.
 * @member {Number} begin
 */
SpanScore.prototype['begin'] = undefined;

/**
 * @member {Number} end
 */
SpanScore.prototype['end'] = undefined;

/**
 * @member {module:model/Score} score
 */
SpanScore.prototype['score'] = undefined;






export default SpanScore;

