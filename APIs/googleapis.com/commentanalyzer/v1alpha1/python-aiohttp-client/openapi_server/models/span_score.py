# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.score import Score
from openapi_server import util


class SpanScore(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, begin: int=None, end: int=None, score: Score=None):
        """SpanScore - a model defined in OpenAPI

        :param begin: The begin of this SpanScore.
        :param end: The end of this SpanScore.
        :param score: The score of this SpanScore.
        """
        self.openapi_types = {
            'begin': int,
            'end': int,
            'score': Score
        }

        self.attribute_map = {
            'begin': 'begin',
            'end': 'end',
            'score': 'score'
        }

        self._begin = begin
        self._end = end
        self._score = score

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SpanScore':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SpanScore of this SpanScore.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def begin(self):
        """Gets the begin of this SpanScore.

        \"begin\" and \"end\" describe the span of the original text that the attribute score applies to. The values are the UTF-16 codepoint range. \"end\" is exclusive. For example, with the text \"Hi there\", the begin/end pair (0,2) describes the text \"Hi\". If \"begin\" and \"end\" are unset, the score applies to the full text.

        :return: The begin of this SpanScore.
        :rtype: int
        """
        return self._begin

    @begin.setter
    def begin(self, begin):
        """Sets the begin of this SpanScore.

        \"begin\" and \"end\" describe the span of the original text that the attribute score applies to. The values are the UTF-16 codepoint range. \"end\" is exclusive. For example, with the text \"Hi there\", the begin/end pair (0,2) describes the text \"Hi\". If \"begin\" and \"end\" are unset, the score applies to the full text.

        :param begin: The begin of this SpanScore.
        :type begin: int
        """

        self._begin = begin

    @property
    def end(self):
        """Gets the end of this SpanScore.


        :return: The end of this SpanScore.
        :rtype: int
        """
        return self._end

    @end.setter
    def end(self, end):
        """Sets the end of this SpanScore.


        :param end: The end of this SpanScore.
        :type end: int
        """

        self._end = end

    @property
    def score(self):
        """Gets the score of this SpanScore.


        :return: The score of this SpanScore.
        :rtype: Score
        """
        return self._score

    @score.setter
    def score(self, score):
        """Sets the score of this SpanScore.


        :param score: The score of this SpanScore.
        :type score: Score
        """

        self._score = score
