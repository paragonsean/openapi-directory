# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SuggestCommentScoreResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, client_token: str=None, detected_languages: List[str]=None, requested_languages: List[str]=None):
        """SuggestCommentScoreResponse - a model defined in OpenAPI

        :param client_token: The client_token of this SuggestCommentScoreResponse.
        :param detected_languages: The detected_languages of this SuggestCommentScoreResponse.
        :param requested_languages: The requested_languages of this SuggestCommentScoreResponse.
        """
        self.openapi_types = {
            'client_token': str,
            'detected_languages': List[str],
            'requested_languages': List[str]
        }

        self.attribute_map = {
            'client_token': 'clientToken',
            'detected_languages': 'detectedLanguages',
            'requested_languages': 'requestedLanguages'
        }

        self._client_token = client_token
        self._detected_languages = detected_languages
        self._requested_languages = requested_languages

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SuggestCommentScoreResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SuggestCommentScoreResponse of this SuggestCommentScoreResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def client_token(self):
        """Gets the client_token of this SuggestCommentScoreResponse.

        Same token from the original SuggestCommentScoreRequest.

        :return: The client_token of this SuggestCommentScoreResponse.
        :rtype: str
        """
        return self._client_token

    @client_token.setter
    def client_token(self, client_token):
        """Sets the client_token of this SuggestCommentScoreResponse.

        Same token from the original SuggestCommentScoreRequest.

        :param client_token: The client_token of this SuggestCommentScoreResponse.
        :type client_token: str
        """

        self._client_token = client_token

    @property
    def detected_languages(self):
        """Gets the detected_languages of this SuggestCommentScoreResponse.

        The list of languages detected from the comment text.

        :return: The detected_languages of this SuggestCommentScoreResponse.
        :rtype: List[str]
        """
        return self._detected_languages

    @detected_languages.setter
    def detected_languages(self, detected_languages):
        """Sets the detected_languages of this SuggestCommentScoreResponse.

        The list of languages detected from the comment text.

        :param detected_languages: The detected_languages of this SuggestCommentScoreResponse.
        :type detected_languages: List[str]
        """

        self._detected_languages = detected_languages

    @property
    def requested_languages(self):
        """Gets the requested_languages of this SuggestCommentScoreResponse.

        The list of languages provided in the request.

        :return: The requested_languages of this SuggestCommentScoreResponse.
        :rtype: List[str]
        """
        return self._requested_languages

    @requested_languages.setter
    def requested_languages(self, requested_languages):
        """Sets the requested_languages of this SuggestCommentScoreResponse.

        The list of languages provided in the request.

        :param requested_languages: The requested_languages of this SuggestCommentScoreResponse.
        :type requested_languages: List[str]
        """

        self._requested_languages = requested_languages
