/**
 * Perspective Comment Analyzer API
 * The Perspective Comment Analyzer API provides information about the potential impact of a comment on a conversation (e.g. it can provide a score for the \"toxicity\" of a comment). Users can leverage the \"SuggestCommentScore\" method to submit corrections to improve Perspective over time. Users can set the \"doNotStore\" flag to ensure that all submitted comments are automatically deleted after scores are returned.
 *
 * The version of the OpenAPI document: v1alpha1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIArticleAndParentComment.h
 *
 * A type of context specific to a comment left on a single-threaded comment message board, where comments are either a top level comment or the child of a top level comment.
 */

#ifndef OAIArticleAndParentComment_H
#define OAIArticleAndParentComment_H

#include <QJsonObject>

#include "OAITextEntry.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITextEntry;

class OAIArticleAndParentComment : public OAIObject {
public:
    OAIArticleAndParentComment();
    OAIArticleAndParentComment(QString json);
    ~OAIArticleAndParentComment() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAITextEntry getArticle() const;
    void setArticle(const OAITextEntry &article);
    bool is_article_Set() const;
    bool is_article_Valid() const;

    OAITextEntry getParentComment() const;
    void setParentComment(const OAITextEntry &parent_comment);
    bool is_parent_comment_Set() const;
    bool is_parent_comment_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAITextEntry m_article;
    bool m_article_isSet;
    bool m_article_isValid;

    OAITextEntry m_parent_comment;
    bool m_parent_comment_isSet;
    bool m_parent_comment_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIArticleAndParentComment)

#endif // OAIArticleAndParentComment_H
