/**
 * Cloud Vision API
 * Integrates Google Vision features, including image labeling, face, logo, and landmark detection, optical character recognition (OCR), and detection of explicit content, into applications.
 *
 * The version of the OpenAPI document: v1p2beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LatLng from './LatLng';

/**
 * The GoogleCloudVisionV1p2beta1LatLongRect model module.
 * @module model/GoogleCloudVisionV1p2beta1LatLongRect
 * @version v1p2beta1
 */
class GoogleCloudVisionV1p2beta1LatLongRect {
    /**
     * Constructs a new <code>GoogleCloudVisionV1p2beta1LatLongRect</code>.
     * Rectangle determined by min and max &#x60;LatLng&#x60; pairs.
     * @alias module:model/GoogleCloudVisionV1p2beta1LatLongRect
     */
    constructor() { 
        
        GoogleCloudVisionV1p2beta1LatLongRect.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudVisionV1p2beta1LatLongRect</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudVisionV1p2beta1LatLongRect} obj Optional instance to populate.
     * @return {module:model/GoogleCloudVisionV1p2beta1LatLongRect} The populated <code>GoogleCloudVisionV1p2beta1LatLongRect</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudVisionV1p2beta1LatLongRect();

            if (data.hasOwnProperty('maxLatLng')) {
                obj['maxLatLng'] = LatLng.constructFromObject(data['maxLatLng']);
            }
            if (data.hasOwnProperty('minLatLng')) {
                obj['minLatLng'] = LatLng.constructFromObject(data['minLatLng']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudVisionV1p2beta1LatLongRect</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudVisionV1p2beta1LatLongRect</code>.
     */
    static validateJSON(data) {
        // validate the optional field `maxLatLng`
        if (data['maxLatLng']) { // data not null
          LatLng.validateJSON(data['maxLatLng']);
        }
        // validate the optional field `minLatLng`
        if (data['minLatLng']) { // data not null
          LatLng.validateJSON(data['minLatLng']);
        }

        return true;
    }


}



/**
 * @member {module:model/LatLng} maxLatLng
 */
GoogleCloudVisionV1p2beta1LatLongRect.prototype['maxLatLng'] = undefined;

/**
 * @member {module:model/LatLng} minLatLng
 */
GoogleCloudVisionV1p2beta1LatLongRect.prototype['minLatLng'] = undefined;






export default GoogleCloudVisionV1p2beta1LatLongRect;

