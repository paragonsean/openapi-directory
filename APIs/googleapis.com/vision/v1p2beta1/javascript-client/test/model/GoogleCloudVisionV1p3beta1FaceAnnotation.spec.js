/**
 * Cloud Vision API
 * Integrates Google Vision features, including image labeling, face, logo, and landmark detection, optical character recognition (OCR), and detection of explicit content, into applications.
 *
 * The version of the OpenAPI document: v1p2beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CloudVisionApi);
  }
}(this, function(expect, CloudVisionApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CloudVisionApi.GoogleCloudVisionV1p3beta1FaceAnnotation();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GoogleCloudVisionV1p3beta1FaceAnnotation', function() {
    it('should create an instance of GoogleCloudVisionV1p3beta1FaceAnnotation', function() {
      // uncomment below and update the code to test GoogleCloudVisionV1p3beta1FaceAnnotation
      //var instance = new CloudVisionApi.GoogleCloudVisionV1p3beta1FaceAnnotation();
      //expect(instance).to.be.a(CloudVisionApi.GoogleCloudVisionV1p3beta1FaceAnnotation);
    });

    it('should have the property angerLikelihood (base name: "angerLikelihood")', function() {
      // uncomment below and update the code to test the property angerLikelihood
      //var instance = new CloudVisionApi.GoogleCloudVisionV1p3beta1FaceAnnotation();
      //expect(instance).to.be();
    });

    it('should have the property blurredLikelihood (base name: "blurredLikelihood")', function() {
      // uncomment below and update the code to test the property blurredLikelihood
      //var instance = new CloudVisionApi.GoogleCloudVisionV1p3beta1FaceAnnotation();
      //expect(instance).to.be();
    });

    it('should have the property boundingPoly (base name: "boundingPoly")', function() {
      // uncomment below and update the code to test the property boundingPoly
      //var instance = new CloudVisionApi.GoogleCloudVisionV1p3beta1FaceAnnotation();
      //expect(instance).to.be();
    });

    it('should have the property detectionConfidence (base name: "detectionConfidence")', function() {
      // uncomment below and update the code to test the property detectionConfidence
      //var instance = new CloudVisionApi.GoogleCloudVisionV1p3beta1FaceAnnotation();
      //expect(instance).to.be();
    });

    it('should have the property fdBoundingPoly (base name: "fdBoundingPoly")', function() {
      // uncomment below and update the code to test the property fdBoundingPoly
      //var instance = new CloudVisionApi.GoogleCloudVisionV1p3beta1FaceAnnotation();
      //expect(instance).to.be();
    });

    it('should have the property headwearLikelihood (base name: "headwearLikelihood")', function() {
      // uncomment below and update the code to test the property headwearLikelihood
      //var instance = new CloudVisionApi.GoogleCloudVisionV1p3beta1FaceAnnotation();
      //expect(instance).to.be();
    });

    it('should have the property joyLikelihood (base name: "joyLikelihood")', function() {
      // uncomment below and update the code to test the property joyLikelihood
      //var instance = new CloudVisionApi.GoogleCloudVisionV1p3beta1FaceAnnotation();
      //expect(instance).to.be();
    });

    it('should have the property landmarkingConfidence (base name: "landmarkingConfidence")', function() {
      // uncomment below and update the code to test the property landmarkingConfidence
      //var instance = new CloudVisionApi.GoogleCloudVisionV1p3beta1FaceAnnotation();
      //expect(instance).to.be();
    });

    it('should have the property landmarks (base name: "landmarks")', function() {
      // uncomment below and update the code to test the property landmarks
      //var instance = new CloudVisionApi.GoogleCloudVisionV1p3beta1FaceAnnotation();
      //expect(instance).to.be();
    });

    it('should have the property panAngle (base name: "panAngle")', function() {
      // uncomment below and update the code to test the property panAngle
      //var instance = new CloudVisionApi.GoogleCloudVisionV1p3beta1FaceAnnotation();
      //expect(instance).to.be();
    });

    it('should have the property rollAngle (base name: "rollAngle")', function() {
      // uncomment below and update the code to test the property rollAngle
      //var instance = new CloudVisionApi.GoogleCloudVisionV1p3beta1FaceAnnotation();
      //expect(instance).to.be();
    });

    it('should have the property sorrowLikelihood (base name: "sorrowLikelihood")', function() {
      // uncomment below and update the code to test the property sorrowLikelihood
      //var instance = new CloudVisionApi.GoogleCloudVisionV1p3beta1FaceAnnotation();
      //expect(instance).to.be();
    });

    it('should have the property surpriseLikelihood (base name: "surpriseLikelihood")', function() {
      // uncomment below and update the code to test the property surpriseLikelihood
      //var instance = new CloudVisionApi.GoogleCloudVisionV1p3beta1FaceAnnotation();
      //expect(instance).to.be();
    });

    it('should have the property tiltAngle (base name: "tiltAngle")', function() {
      // uncomment below and update the code to test the property tiltAngle
      //var instance = new CloudVisionApi.GoogleCloudVisionV1p3beta1FaceAnnotation();
      //expect(instance).to.be();
    });

    it('should have the property underExposedLikelihood (base name: "underExposedLikelihood")', function() {
      // uncomment below and update the code to test the property underExposedLikelihood
      //var instance = new CloudVisionApi.GoogleCloudVisionV1p3beta1FaceAnnotation();
      //expect(instance).to.be();
    });

  });

}));
