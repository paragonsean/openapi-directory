/**
 * Cloud Vision API
 * Integrates Google Vision features, including image labeling, face, logo, and landmark detection, optical character recognition (OCR), and detection of explicit content, into applications.
 *
 * The version of the OpenAPI document: v1p2beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudVisionV1p2beta1AsyncAnnotateFileRequest.h
 *
 * An offline file annotation request.
 */

#ifndef OAIGoogleCloudVisionV1p2beta1AsyncAnnotateFileRequest_H
#define OAIGoogleCloudVisionV1p2beta1AsyncAnnotateFileRequest_H

#include <QJsonObject>

#include "OAIGoogleCloudVisionV1p2beta1Feature.h"
#include "OAIGoogleCloudVisionV1p2beta1ImageContext.h"
#include "OAIGoogleCloudVisionV1p2beta1InputConfig.h"
#include "OAIGoogleCloudVisionV1p2beta1OutputConfig.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleCloudVisionV1p2beta1Feature;
class OAIGoogleCloudVisionV1p2beta1ImageContext;
class OAIGoogleCloudVisionV1p2beta1InputConfig;
class OAIGoogleCloudVisionV1p2beta1OutputConfig;

class OAIGoogleCloudVisionV1p2beta1AsyncAnnotateFileRequest : public OAIObject {
public:
    OAIGoogleCloudVisionV1p2beta1AsyncAnnotateFileRequest();
    OAIGoogleCloudVisionV1p2beta1AsyncAnnotateFileRequest(QString json);
    ~OAIGoogleCloudVisionV1p2beta1AsyncAnnotateFileRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIGoogleCloudVisionV1p2beta1Feature> getFeatures() const;
    void setFeatures(const QList<OAIGoogleCloudVisionV1p2beta1Feature> &features);
    bool is_features_Set() const;
    bool is_features_Valid() const;

    OAIGoogleCloudVisionV1p2beta1ImageContext getImageContext() const;
    void setImageContext(const OAIGoogleCloudVisionV1p2beta1ImageContext &image_context);
    bool is_image_context_Set() const;
    bool is_image_context_Valid() const;

    OAIGoogleCloudVisionV1p2beta1InputConfig getInputConfig() const;
    void setInputConfig(const OAIGoogleCloudVisionV1p2beta1InputConfig &input_config);
    bool is_input_config_Set() const;
    bool is_input_config_Valid() const;

    OAIGoogleCloudVisionV1p2beta1OutputConfig getOutputConfig() const;
    void setOutputConfig(const OAIGoogleCloudVisionV1p2beta1OutputConfig &output_config);
    bool is_output_config_Set() const;
    bool is_output_config_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIGoogleCloudVisionV1p2beta1Feature> m_features;
    bool m_features_isSet;
    bool m_features_isValid;

    OAIGoogleCloudVisionV1p2beta1ImageContext m_image_context;
    bool m_image_context_isSet;
    bool m_image_context_isValid;

    OAIGoogleCloudVisionV1p2beta1InputConfig m_input_config;
    bool m_input_config_isSet;
    bool m_input_config_isValid;

    OAIGoogleCloudVisionV1p2beta1OutputConfig m_output_config;
    bool m_output_config_isSet;
    bool m_output_config_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudVisionV1p2beta1AsyncAnnotateFileRequest)

#endif // OAIGoogleCloudVisionV1p2beta1AsyncAnnotateFileRequest_H
