/**
 * Cloud Vision API
 * Integrates Google Vision features, including image labeling, face, logo, and landmark detection, optical character recognition (OCR), and detection of explicit content, into applications.
 *
 * The version of the OpenAPI document: v1p2beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudVisionV1p2beta1FaceAnnotation.h
 *
 * A face annotation object contains the results of face detection.
 */

#ifndef OAIGoogleCloudVisionV1p2beta1FaceAnnotation_H
#define OAIGoogleCloudVisionV1p2beta1FaceAnnotation_H

#include <QJsonObject>

#include "OAIGoogleCloudVisionV1p2beta1BoundingPoly.h"
#include "OAIGoogleCloudVisionV1p2beta1FaceAnnotationLandmark.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleCloudVisionV1p2beta1BoundingPoly;
class OAIGoogleCloudVisionV1p2beta1FaceAnnotationLandmark;

class OAIGoogleCloudVisionV1p2beta1FaceAnnotation : public OAIObject {
public:
    OAIGoogleCloudVisionV1p2beta1FaceAnnotation();
    OAIGoogleCloudVisionV1p2beta1FaceAnnotation(QString json);
    ~OAIGoogleCloudVisionV1p2beta1FaceAnnotation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAngerLikelihood() const;
    void setAngerLikelihood(const QString &anger_likelihood);
    bool is_anger_likelihood_Set() const;
    bool is_anger_likelihood_Valid() const;

    QString getBlurredLikelihood() const;
    void setBlurredLikelihood(const QString &blurred_likelihood);
    bool is_blurred_likelihood_Set() const;
    bool is_blurred_likelihood_Valid() const;

    OAIGoogleCloudVisionV1p2beta1BoundingPoly getBoundingPoly() const;
    void setBoundingPoly(const OAIGoogleCloudVisionV1p2beta1BoundingPoly &bounding_poly);
    bool is_bounding_poly_Set() const;
    bool is_bounding_poly_Valid() const;

    float getDetectionConfidence() const;
    void setDetectionConfidence(const float &detection_confidence);
    bool is_detection_confidence_Set() const;
    bool is_detection_confidence_Valid() const;

    OAIGoogleCloudVisionV1p2beta1BoundingPoly getFdBoundingPoly() const;
    void setFdBoundingPoly(const OAIGoogleCloudVisionV1p2beta1BoundingPoly &fd_bounding_poly);
    bool is_fd_bounding_poly_Set() const;
    bool is_fd_bounding_poly_Valid() const;

    QString getHeadwearLikelihood() const;
    void setHeadwearLikelihood(const QString &headwear_likelihood);
    bool is_headwear_likelihood_Set() const;
    bool is_headwear_likelihood_Valid() const;

    QString getJoyLikelihood() const;
    void setJoyLikelihood(const QString &joy_likelihood);
    bool is_joy_likelihood_Set() const;
    bool is_joy_likelihood_Valid() const;

    float getLandmarkingConfidence() const;
    void setLandmarkingConfidence(const float &landmarking_confidence);
    bool is_landmarking_confidence_Set() const;
    bool is_landmarking_confidence_Valid() const;

    QList<OAIGoogleCloudVisionV1p2beta1FaceAnnotationLandmark> getLandmarks() const;
    void setLandmarks(const QList<OAIGoogleCloudVisionV1p2beta1FaceAnnotationLandmark> &landmarks);
    bool is_landmarks_Set() const;
    bool is_landmarks_Valid() const;

    float getPanAngle() const;
    void setPanAngle(const float &pan_angle);
    bool is_pan_angle_Set() const;
    bool is_pan_angle_Valid() const;

    float getRollAngle() const;
    void setRollAngle(const float &roll_angle);
    bool is_roll_angle_Set() const;
    bool is_roll_angle_Valid() const;

    QString getSorrowLikelihood() const;
    void setSorrowLikelihood(const QString &sorrow_likelihood);
    bool is_sorrow_likelihood_Set() const;
    bool is_sorrow_likelihood_Valid() const;

    QString getSurpriseLikelihood() const;
    void setSurpriseLikelihood(const QString &surprise_likelihood);
    bool is_surprise_likelihood_Set() const;
    bool is_surprise_likelihood_Valid() const;

    float getTiltAngle() const;
    void setTiltAngle(const float &tilt_angle);
    bool is_tilt_angle_Set() const;
    bool is_tilt_angle_Valid() const;

    QString getUnderExposedLikelihood() const;
    void setUnderExposedLikelihood(const QString &under_exposed_likelihood);
    bool is_under_exposed_likelihood_Set() const;
    bool is_under_exposed_likelihood_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_anger_likelihood;
    bool m_anger_likelihood_isSet;
    bool m_anger_likelihood_isValid;

    QString m_blurred_likelihood;
    bool m_blurred_likelihood_isSet;
    bool m_blurred_likelihood_isValid;

    OAIGoogleCloudVisionV1p2beta1BoundingPoly m_bounding_poly;
    bool m_bounding_poly_isSet;
    bool m_bounding_poly_isValid;

    float m_detection_confidence;
    bool m_detection_confidence_isSet;
    bool m_detection_confidence_isValid;

    OAIGoogleCloudVisionV1p2beta1BoundingPoly m_fd_bounding_poly;
    bool m_fd_bounding_poly_isSet;
    bool m_fd_bounding_poly_isValid;

    QString m_headwear_likelihood;
    bool m_headwear_likelihood_isSet;
    bool m_headwear_likelihood_isValid;

    QString m_joy_likelihood;
    bool m_joy_likelihood_isSet;
    bool m_joy_likelihood_isValid;

    float m_landmarking_confidence;
    bool m_landmarking_confidence_isSet;
    bool m_landmarking_confidence_isValid;

    QList<OAIGoogleCloudVisionV1p2beta1FaceAnnotationLandmark> m_landmarks;
    bool m_landmarks_isSet;
    bool m_landmarks_isValid;

    float m_pan_angle;
    bool m_pan_angle_isSet;
    bool m_pan_angle_isValid;

    float m_roll_angle;
    bool m_roll_angle_isSet;
    bool m_roll_angle_isValid;

    QString m_sorrow_likelihood;
    bool m_sorrow_likelihood_isSet;
    bool m_sorrow_likelihood_isValid;

    QString m_surprise_likelihood;
    bool m_surprise_likelihood_isSet;
    bool m_surprise_likelihood_isValid;

    float m_tilt_angle;
    bool m_tilt_angle_isSet;
    bool m_tilt_angle_isValid;

    QString m_under_exposed_likelihood;
    bool m_under_exposed_likelihood_isSet;
    bool m_under_exposed_likelihood_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudVisionV1p2beta1FaceAnnotation)

#endif // OAIGoogleCloudVisionV1p2beta1FaceAnnotation_H
