/**
 * Cloud Vision API
 * Integrates Google Vision features, including image labeling, face, logo, and landmark detection, optical character recognition (OCR), and detection of explicit content, into applications.
 *
 * The version of the OpenAPI document: v1p2beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudVisionV1p3beta1WebDetectionWebPage.h
 *
 * Metadata for web pages.
 */

#ifndef OAIGoogleCloudVisionV1p3beta1WebDetectionWebPage_H
#define OAIGoogleCloudVisionV1p3beta1WebDetectionWebPage_H

#include <QJsonObject>

#include "OAIGoogleCloudVisionV1p3beta1WebDetectionWebImage.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleCloudVisionV1p3beta1WebDetectionWebImage;

class OAIGoogleCloudVisionV1p3beta1WebDetectionWebPage : public OAIObject {
public:
    OAIGoogleCloudVisionV1p3beta1WebDetectionWebPage();
    OAIGoogleCloudVisionV1p3beta1WebDetectionWebPage(QString json);
    ~OAIGoogleCloudVisionV1p3beta1WebDetectionWebPage() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIGoogleCloudVisionV1p3beta1WebDetectionWebImage> getFullMatchingImages() const;
    void setFullMatchingImages(const QList<OAIGoogleCloudVisionV1p3beta1WebDetectionWebImage> &full_matching_images);
    bool is_full_matching_images_Set() const;
    bool is_full_matching_images_Valid() const;

    QString getPageTitle() const;
    void setPageTitle(const QString &page_title);
    bool is_page_title_Set() const;
    bool is_page_title_Valid() const;

    QList<OAIGoogleCloudVisionV1p3beta1WebDetectionWebImage> getPartialMatchingImages() const;
    void setPartialMatchingImages(const QList<OAIGoogleCloudVisionV1p3beta1WebDetectionWebImage> &partial_matching_images);
    bool is_partial_matching_images_Set() const;
    bool is_partial_matching_images_Valid() const;

    float getScore() const;
    void setScore(const float &score);
    bool is_score_Set() const;
    bool is_score_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIGoogleCloudVisionV1p3beta1WebDetectionWebImage> m_full_matching_images;
    bool m_full_matching_images_isSet;
    bool m_full_matching_images_isValid;

    QString m_page_title;
    bool m_page_title_isSet;
    bool m_page_title_isValid;

    QList<OAIGoogleCloudVisionV1p3beta1WebDetectionWebImage> m_partial_matching_images;
    bool m_partial_matching_images_isSet;
    bool m_partial_matching_images_isValid;

    float m_score;
    bool m_score_isSet;
    bool m_score_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudVisionV1p3beta1WebDetectionWebPage)

#endif // OAIGoogleCloudVisionV1p3beta1WebDetectionWebPage_H
