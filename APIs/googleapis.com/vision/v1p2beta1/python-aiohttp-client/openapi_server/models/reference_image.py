# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.bounding_poly import BoundingPoly
from openapi_server import util


class ReferenceImage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bounding_polys: List[BoundingPoly]=None, name: str=None, uri: str=None):
        """ReferenceImage - a model defined in OpenAPI

        :param bounding_polys: The bounding_polys of this ReferenceImage.
        :param name: The name of this ReferenceImage.
        :param uri: The uri of this ReferenceImage.
        """
        self.openapi_types = {
            'bounding_polys': List[BoundingPoly],
            'name': str,
            'uri': str
        }

        self.attribute_map = {
            'bounding_polys': 'boundingPolys',
            'name': 'name',
            'uri': 'uri'
        }

        self._bounding_polys = bounding_polys
        self._name = name
        self._uri = uri

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReferenceImage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReferenceImage of this ReferenceImage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bounding_polys(self):
        """Gets the bounding_polys of this ReferenceImage.

        Optional. Bounding polygons around the areas of interest in the reference image. If this field is empty, the system will try to detect regions of interest. At most 10 bounding polygons will be used. The provided shape is converted into a non-rotated rectangle. Once converted, the small edge of the rectangle must be greater than or equal to 300 pixels. The aspect ratio must be 1:4 or less (i.e. 1:3 is ok; 1:5 is not).

        :return: The bounding_polys of this ReferenceImage.
        :rtype: List[BoundingPoly]
        """
        return self._bounding_polys

    @bounding_polys.setter
    def bounding_polys(self, bounding_polys):
        """Sets the bounding_polys of this ReferenceImage.

        Optional. Bounding polygons around the areas of interest in the reference image. If this field is empty, the system will try to detect regions of interest. At most 10 bounding polygons will be used. The provided shape is converted into a non-rotated rectangle. Once converted, the small edge of the rectangle must be greater than or equal to 300 pixels. The aspect ratio must be 1:4 or less (i.e. 1:3 is ok; 1:5 is not).

        :param bounding_polys: The bounding_polys of this ReferenceImage.
        :type bounding_polys: List[BoundingPoly]
        """

        self._bounding_polys = bounding_polys

    @property
    def name(self):
        """Gets the name of this ReferenceImage.

        The resource name of the reference image. Format is: `projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID/referenceImages/IMAGE_ID`. This field is ignored when creating a reference image.

        :return: The name of this ReferenceImage.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ReferenceImage.

        The resource name of the reference image. Format is: `projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID/referenceImages/IMAGE_ID`. This field is ignored when creating a reference image.

        :param name: The name of this ReferenceImage.
        :type name: str
        """

        self._name = name

    @property
    def uri(self):
        """Gets the uri of this ReferenceImage.

        Required. The Google Cloud Storage URI of the reference image. The URI must start with `gs://`.

        :return: The uri of this ReferenceImage.
        :rtype: str
        """
        return self._uri

    @uri.setter
    def uri(self, uri):
        """Sets the uri of this ReferenceImage.

        Required. The Google Cloud Storage URI of the reference image. The URI must start with `gs://`.

        :param uri: The uri of this ReferenceImage.
        :type uri: str
        """

        self._uri = uri
