# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_vision_v1p3beta1_reference_image import GoogleCloudVisionV1p3beta1ReferenceImage
from openapi_server.models.status import Status
from openapi_server import util


class GoogleCloudVisionV1p3beta1ImportProductSetsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, reference_images: List[GoogleCloudVisionV1p3beta1ReferenceImage]=None, statuses: List[Status]=None):
        """GoogleCloudVisionV1p3beta1ImportProductSetsResponse - a model defined in OpenAPI

        :param reference_images: The reference_images of this GoogleCloudVisionV1p3beta1ImportProductSetsResponse.
        :param statuses: The statuses of this GoogleCloudVisionV1p3beta1ImportProductSetsResponse.
        """
        self.openapi_types = {
            'reference_images': List[GoogleCloudVisionV1p3beta1ReferenceImage],
            'statuses': List[Status]
        }

        self.attribute_map = {
            'reference_images': 'referenceImages',
            'statuses': 'statuses'
        }

        self._reference_images = reference_images
        self._statuses = statuses

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudVisionV1p3beta1ImportProductSetsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudVisionV1p3beta1ImportProductSetsResponse of this GoogleCloudVisionV1p3beta1ImportProductSetsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def reference_images(self):
        """Gets the reference_images of this GoogleCloudVisionV1p3beta1ImportProductSetsResponse.

        The list of reference_images that are imported successfully.

        :return: The reference_images of this GoogleCloudVisionV1p3beta1ImportProductSetsResponse.
        :rtype: List[GoogleCloudVisionV1p3beta1ReferenceImage]
        """
        return self._reference_images

    @reference_images.setter
    def reference_images(self, reference_images):
        """Sets the reference_images of this GoogleCloudVisionV1p3beta1ImportProductSetsResponse.

        The list of reference_images that are imported successfully.

        :param reference_images: The reference_images of this GoogleCloudVisionV1p3beta1ImportProductSetsResponse.
        :type reference_images: List[GoogleCloudVisionV1p3beta1ReferenceImage]
        """

        self._reference_images = reference_images

    @property
    def statuses(self):
        """Gets the statuses of this GoogleCloudVisionV1p3beta1ImportProductSetsResponse.

        The rpc status for each ImportProductSet request, including both successes and errors. The number of statuses here matches the number of lines in the csv file, and statuses[i] stores the success or failure status of processing the i-th line of the csv, starting from line 0.

        :return: The statuses of this GoogleCloudVisionV1p3beta1ImportProductSetsResponse.
        :rtype: List[Status]
        """
        return self._statuses

    @statuses.setter
    def statuses(self, statuses):
        """Sets the statuses of this GoogleCloudVisionV1p3beta1ImportProductSetsResponse.

        The rpc status for each ImportProductSet request, including both successes and errors. The number of statuses here matches the number of lines in the csv file, and statuses[i] stores the success or failure status of processing the i-th line of the csv, starting from line 0.

        :param statuses: The statuses of this GoogleCloudVisionV1p3beta1ImportProductSetsResponse.
        :type statuses: List[Status]
        """

        self._statuses = statuses
