# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.color_info import ColorInfo
from openapi_server import util


class DominantColorsAnnotation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, colors: List[ColorInfo]=None):
        """DominantColorsAnnotation - a model defined in OpenAPI

        :param colors: The colors of this DominantColorsAnnotation.
        """
        self.openapi_types = {
            'colors': List[ColorInfo]
        }

        self.attribute_map = {
            'colors': 'colors'
        }

        self._colors = colors

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DominantColorsAnnotation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DominantColorsAnnotation of this DominantColorsAnnotation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def colors(self):
        """Gets the colors of this DominantColorsAnnotation.

        RGB color values with their score and pixel fraction.

        :return: The colors of this DominantColorsAnnotation.
        :rtype: List[ColorInfo]
        """
        return self._colors

    @colors.setter
    def colors(self, colors):
        """Sets the colors of this DominantColorsAnnotation.

        RGB color values with their score and pixel fraction.

        :param colors: The colors of this DominantColorsAnnotation.
        :type colors: List[ColorInfo]
        """

        self._colors = colors
