# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.annotate_image_response import AnnotateImageResponse
from openapi_server.models.input_config import InputConfig
from openapi_server.models.status import Status
from openapi_server import util


class AnnotateFileResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, error: Status=None, input_config: InputConfig=None, responses: List[AnnotateImageResponse]=None, total_pages: int=None):
        """AnnotateFileResponse - a model defined in OpenAPI

        :param error: The error of this AnnotateFileResponse.
        :param input_config: The input_config of this AnnotateFileResponse.
        :param responses: The responses of this AnnotateFileResponse.
        :param total_pages: The total_pages of this AnnotateFileResponse.
        """
        self.openapi_types = {
            'error': Status,
            'input_config': InputConfig,
            'responses': List[AnnotateImageResponse],
            'total_pages': int
        }

        self.attribute_map = {
            'error': 'error',
            'input_config': 'inputConfig',
            'responses': 'responses',
            'total_pages': 'totalPages'
        }

        self._error = error
        self._input_config = input_config
        self._responses = responses
        self._total_pages = total_pages

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AnnotateFileResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AnnotateFileResponse of this AnnotateFileResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def error(self):
        """Gets the error of this AnnotateFileResponse.


        :return: The error of this AnnotateFileResponse.
        :rtype: Status
        """
        return self._error

    @error.setter
    def error(self, error):
        """Sets the error of this AnnotateFileResponse.


        :param error: The error of this AnnotateFileResponse.
        :type error: Status
        """

        self._error = error

    @property
    def input_config(self):
        """Gets the input_config of this AnnotateFileResponse.


        :return: The input_config of this AnnotateFileResponse.
        :rtype: InputConfig
        """
        return self._input_config

    @input_config.setter
    def input_config(self, input_config):
        """Sets the input_config of this AnnotateFileResponse.


        :param input_config: The input_config of this AnnotateFileResponse.
        :type input_config: InputConfig
        """

        self._input_config = input_config

    @property
    def responses(self):
        """Gets the responses of this AnnotateFileResponse.

        Individual responses to images found within the file. This field will be empty if the `error` field is set.

        :return: The responses of this AnnotateFileResponse.
        :rtype: List[AnnotateImageResponse]
        """
        return self._responses

    @responses.setter
    def responses(self, responses):
        """Sets the responses of this AnnotateFileResponse.

        Individual responses to images found within the file. This field will be empty if the `error` field is set.

        :param responses: The responses of this AnnotateFileResponse.
        :type responses: List[AnnotateImageResponse]
        """

        self._responses = responses

    @property
    def total_pages(self):
        """Gets the total_pages of this AnnotateFileResponse.

        This field gives the total number of pages in the file.

        :return: The total_pages of this AnnotateFileResponse.
        :rtype: int
        """
        return self._total_pages

    @total_pages.setter
    def total_pages(self, total_pages):
        """Sets the total_pages of this AnnotateFileResponse.

        This field gives the total number of pages in the file.

        :param total_pages: The total_pages of this AnnotateFileResponse.
        :type total_pages: int
        """

        self._total_pages = total_pages
