# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudVisionV1p2beta1CropHintsParams(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, aspect_ratios: List[float]=None):
        """GoogleCloudVisionV1p2beta1CropHintsParams - a model defined in OpenAPI

        :param aspect_ratios: The aspect_ratios of this GoogleCloudVisionV1p2beta1CropHintsParams.
        """
        self.openapi_types = {
            'aspect_ratios': List[float]
        }

        self.attribute_map = {
            'aspect_ratios': 'aspectRatios'
        }

        self._aspect_ratios = aspect_ratios

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudVisionV1p2beta1CropHintsParams':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudVisionV1p2beta1CropHintsParams of this GoogleCloudVisionV1p2beta1CropHintsParams.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def aspect_ratios(self):
        """Gets the aspect_ratios of this GoogleCloudVisionV1p2beta1CropHintsParams.

        Aspect ratios in floats, representing the ratio of the width to the height of the image. For example, if the desired aspect ratio is 4/3, the corresponding float value should be 1.33333. If not specified, the best possible crop is returned. The number of provided aspect ratios is limited to a maximum of 16; any aspect ratios provided after the 16th are ignored.

        :return: The aspect_ratios of this GoogleCloudVisionV1p2beta1CropHintsParams.
        :rtype: List[float]
        """
        return self._aspect_ratios

    @aspect_ratios.setter
    def aspect_ratios(self, aspect_ratios):
        """Sets the aspect_ratios of this GoogleCloudVisionV1p2beta1CropHintsParams.

        Aspect ratios in floats, representing the ratio of the width to the height of the image. For example, if the desired aspect ratio is 4/3, the corresponding float value should be 1.33333. If not specified, the best possible crop is returned. The number of provided aspect ratios is limited to a maximum of 16; any aspect ratios provided after the 16th are ignored.

        :param aspect_ratios: The aspect_ratios of this GoogleCloudVisionV1p2beta1CropHintsParams.
        :type aspect_ratios: List[float]
        """

        self._aspect_ratios = aspect_ratios
