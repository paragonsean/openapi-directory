# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_vision_v1p4beta1_bounding_poly import GoogleCloudVisionV1p4beta1BoundingPoly
from openapi_server.models.google_cloud_vision_v1p4beta1_location_info import GoogleCloudVisionV1p4beta1LocationInfo
from openapi_server.models.google_cloud_vision_v1p4beta1_property import GoogleCloudVisionV1p4beta1Property
from openapi_server import util


class GoogleCloudVisionV1p4beta1EntityAnnotation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bounding_poly: GoogleCloudVisionV1p4beta1BoundingPoly=None, confidence: float=None, description: str=None, locale: str=None, locations: List[GoogleCloudVisionV1p4beta1LocationInfo]=None, mid: str=None, properties: List[GoogleCloudVisionV1p4beta1Property]=None, score: float=None, topicality: float=None):
        """GoogleCloudVisionV1p4beta1EntityAnnotation - a model defined in OpenAPI

        :param bounding_poly: The bounding_poly of this GoogleCloudVisionV1p4beta1EntityAnnotation.
        :param confidence: The confidence of this GoogleCloudVisionV1p4beta1EntityAnnotation.
        :param description: The description of this GoogleCloudVisionV1p4beta1EntityAnnotation.
        :param locale: The locale of this GoogleCloudVisionV1p4beta1EntityAnnotation.
        :param locations: The locations of this GoogleCloudVisionV1p4beta1EntityAnnotation.
        :param mid: The mid of this GoogleCloudVisionV1p4beta1EntityAnnotation.
        :param properties: The properties of this GoogleCloudVisionV1p4beta1EntityAnnotation.
        :param score: The score of this GoogleCloudVisionV1p4beta1EntityAnnotation.
        :param topicality: The topicality of this GoogleCloudVisionV1p4beta1EntityAnnotation.
        """
        self.openapi_types = {
            'bounding_poly': GoogleCloudVisionV1p4beta1BoundingPoly,
            'confidence': float,
            'description': str,
            'locale': str,
            'locations': List[GoogleCloudVisionV1p4beta1LocationInfo],
            'mid': str,
            'properties': List[GoogleCloudVisionV1p4beta1Property],
            'score': float,
            'topicality': float
        }

        self.attribute_map = {
            'bounding_poly': 'boundingPoly',
            'confidence': 'confidence',
            'description': 'description',
            'locale': 'locale',
            'locations': 'locations',
            'mid': 'mid',
            'properties': 'properties',
            'score': 'score',
            'topicality': 'topicality'
        }

        self._bounding_poly = bounding_poly
        self._confidence = confidence
        self._description = description
        self._locale = locale
        self._locations = locations
        self._mid = mid
        self._properties = properties
        self._score = score
        self._topicality = topicality

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudVisionV1p4beta1EntityAnnotation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudVisionV1p4beta1EntityAnnotation of this GoogleCloudVisionV1p4beta1EntityAnnotation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bounding_poly(self):
        """Gets the bounding_poly of this GoogleCloudVisionV1p4beta1EntityAnnotation.


        :return: The bounding_poly of this GoogleCloudVisionV1p4beta1EntityAnnotation.
        :rtype: GoogleCloudVisionV1p4beta1BoundingPoly
        """
        return self._bounding_poly

    @bounding_poly.setter
    def bounding_poly(self, bounding_poly):
        """Sets the bounding_poly of this GoogleCloudVisionV1p4beta1EntityAnnotation.


        :param bounding_poly: The bounding_poly of this GoogleCloudVisionV1p4beta1EntityAnnotation.
        :type bounding_poly: GoogleCloudVisionV1p4beta1BoundingPoly
        """

        self._bounding_poly = bounding_poly

    @property
    def confidence(self):
        """Gets the confidence of this GoogleCloudVisionV1p4beta1EntityAnnotation.

        **Deprecated. Use `score` instead.** The accuracy of the entity detection in an image. For example, for an image in which the \"Eiffel Tower\" entity is detected, this field represents the confidence that there is a tower in the query image. Range [0, 1].

        :return: The confidence of this GoogleCloudVisionV1p4beta1EntityAnnotation.
        :rtype: float
        """
        return self._confidence

    @confidence.setter
    def confidence(self, confidence):
        """Sets the confidence of this GoogleCloudVisionV1p4beta1EntityAnnotation.

        **Deprecated. Use `score` instead.** The accuracy of the entity detection in an image. For example, for an image in which the \"Eiffel Tower\" entity is detected, this field represents the confidence that there is a tower in the query image. Range [0, 1].

        :param confidence: The confidence of this GoogleCloudVisionV1p4beta1EntityAnnotation.
        :type confidence: float
        """

        self._confidence = confidence

    @property
    def description(self):
        """Gets the description of this GoogleCloudVisionV1p4beta1EntityAnnotation.

        Entity textual description, expressed in its `locale` language.

        :return: The description of this GoogleCloudVisionV1p4beta1EntityAnnotation.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GoogleCloudVisionV1p4beta1EntityAnnotation.

        Entity textual description, expressed in its `locale` language.

        :param description: The description of this GoogleCloudVisionV1p4beta1EntityAnnotation.
        :type description: str
        """

        self._description = description

    @property
    def locale(self):
        """Gets the locale of this GoogleCloudVisionV1p4beta1EntityAnnotation.

        The language code for the locale in which the entity textual `description` is expressed.

        :return: The locale of this GoogleCloudVisionV1p4beta1EntityAnnotation.
        :rtype: str
        """
        return self._locale

    @locale.setter
    def locale(self, locale):
        """Sets the locale of this GoogleCloudVisionV1p4beta1EntityAnnotation.

        The language code for the locale in which the entity textual `description` is expressed.

        :param locale: The locale of this GoogleCloudVisionV1p4beta1EntityAnnotation.
        :type locale: str
        """

        self._locale = locale

    @property
    def locations(self):
        """Gets the locations of this GoogleCloudVisionV1p4beta1EntityAnnotation.

        The location information for the detected entity. Multiple `LocationInfo` elements can be present because one location may indicate the location of the scene in the image, and another location may indicate the location of the place where the image was taken. Location information is usually present for landmarks.

        :return: The locations of this GoogleCloudVisionV1p4beta1EntityAnnotation.
        :rtype: List[GoogleCloudVisionV1p4beta1LocationInfo]
        """
        return self._locations

    @locations.setter
    def locations(self, locations):
        """Sets the locations of this GoogleCloudVisionV1p4beta1EntityAnnotation.

        The location information for the detected entity. Multiple `LocationInfo` elements can be present because one location may indicate the location of the scene in the image, and another location may indicate the location of the place where the image was taken. Location information is usually present for landmarks.

        :param locations: The locations of this GoogleCloudVisionV1p4beta1EntityAnnotation.
        :type locations: List[GoogleCloudVisionV1p4beta1LocationInfo]
        """

        self._locations = locations

    @property
    def mid(self):
        """Gets the mid of this GoogleCloudVisionV1p4beta1EntityAnnotation.

        Opaque entity ID. Some IDs may be available in [Google Knowledge Graph Search API](https://developers.google.com/knowledge-graph/).

        :return: The mid of this GoogleCloudVisionV1p4beta1EntityAnnotation.
        :rtype: str
        """
        return self._mid

    @mid.setter
    def mid(self, mid):
        """Sets the mid of this GoogleCloudVisionV1p4beta1EntityAnnotation.

        Opaque entity ID. Some IDs may be available in [Google Knowledge Graph Search API](https://developers.google.com/knowledge-graph/).

        :param mid: The mid of this GoogleCloudVisionV1p4beta1EntityAnnotation.
        :type mid: str
        """

        self._mid = mid

    @property
    def properties(self):
        """Gets the properties of this GoogleCloudVisionV1p4beta1EntityAnnotation.

        Some entities may have optional user-supplied `Property` (name/value) fields, such a score or string that qualifies the entity.

        :return: The properties of this GoogleCloudVisionV1p4beta1EntityAnnotation.
        :rtype: List[GoogleCloudVisionV1p4beta1Property]
        """
        return self._properties

    @properties.setter
    def properties(self, properties):
        """Sets the properties of this GoogleCloudVisionV1p4beta1EntityAnnotation.

        Some entities may have optional user-supplied `Property` (name/value) fields, such a score or string that qualifies the entity.

        :param properties: The properties of this GoogleCloudVisionV1p4beta1EntityAnnotation.
        :type properties: List[GoogleCloudVisionV1p4beta1Property]
        """

        self._properties = properties

    @property
    def score(self):
        """Gets the score of this GoogleCloudVisionV1p4beta1EntityAnnotation.

        Overall score of the result. Range [0, 1].

        :return: The score of this GoogleCloudVisionV1p4beta1EntityAnnotation.
        :rtype: float
        """
        return self._score

    @score.setter
    def score(self, score):
        """Sets the score of this GoogleCloudVisionV1p4beta1EntityAnnotation.

        Overall score of the result. Range [0, 1].

        :param score: The score of this GoogleCloudVisionV1p4beta1EntityAnnotation.
        :type score: float
        """

        self._score = score

    @property
    def topicality(self):
        """Gets the topicality of this GoogleCloudVisionV1p4beta1EntityAnnotation.

        The relevancy of the ICA (Image Content Annotation) label to the image. For example, the relevancy of \"tower\" is likely higher to an image containing the detected \"Eiffel Tower\" than to an image containing a detected distant towering building, even though the confidence that there is a tower in each image may be the same. Range [0, 1].

        :return: The topicality of this GoogleCloudVisionV1p4beta1EntityAnnotation.
        :rtype: float
        """
        return self._topicality

    @topicality.setter
    def topicality(self, topicality):
        """Sets the topicality of this GoogleCloudVisionV1p4beta1EntityAnnotation.

        The relevancy of the ICA (Image Content Annotation) label to the image. For example, the relevancy of \"tower\" is likely higher to an image containing the detected \"Eiffel Tower\" than to an image containing a detected distant towering building, even though the confidence that there is a tower in each image may be the same. Range [0, 1].

        :param topicality: The topicality of this GoogleCloudVisionV1p4beta1EntityAnnotation.
        :type topicality: float
        """

        self._topicality = topicality
