/**
 * Cloud Vision API
 * Integrates Google Vision features, including image labeling, face, logo, and landmark detection, optical character recognition (OCR), and detection of explicit content, into applications.
 *
 * The version of the OpenAPI document: v1p1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudVisionV1p3beta1WebDetectionWebLabel model module.
 * @module model/GoogleCloudVisionV1p3beta1WebDetectionWebLabel
 * @version v1p1beta1
 */
class GoogleCloudVisionV1p3beta1WebDetectionWebLabel {
    /**
     * Constructs a new <code>GoogleCloudVisionV1p3beta1WebDetectionWebLabel</code>.
     * Label to provide extra metadata for the web detection.
     * @alias module:model/GoogleCloudVisionV1p3beta1WebDetectionWebLabel
     */
    constructor() { 
        
        GoogleCloudVisionV1p3beta1WebDetectionWebLabel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudVisionV1p3beta1WebDetectionWebLabel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudVisionV1p3beta1WebDetectionWebLabel} obj Optional instance to populate.
     * @return {module:model/GoogleCloudVisionV1p3beta1WebDetectionWebLabel} The populated <code>GoogleCloudVisionV1p3beta1WebDetectionWebLabel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudVisionV1p3beta1WebDetectionWebLabel();

            if (data.hasOwnProperty('label')) {
                obj['label'] = ApiClient.convertToType(data['label'], 'String');
            }
            if (data.hasOwnProperty('languageCode')) {
                obj['languageCode'] = ApiClient.convertToType(data['languageCode'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudVisionV1p3beta1WebDetectionWebLabel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudVisionV1p3beta1WebDetectionWebLabel</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['label'] && !(typeof data['label'] === 'string' || data['label'] instanceof String)) {
            throw new Error("Expected the field `label` to be a primitive type in the JSON string but got " + data['label']);
        }
        // ensure the json data is a string
        if (data['languageCode'] && !(typeof data['languageCode'] === 'string' || data['languageCode'] instanceof String)) {
            throw new Error("Expected the field `languageCode` to be a primitive type in the JSON string but got " + data['languageCode']);
        }

        return true;
    }


}



/**
 * Label for extra metadata.
 * @member {String} label
 */
GoogleCloudVisionV1p3beta1WebDetectionWebLabel.prototype['label'] = undefined;

/**
 * The BCP-47 language code for `label`, such as \"en-US\" or \"sr-Latn\". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
 * @member {String} languageCode
 */
GoogleCloudVisionV1p3beta1WebDetectionWebLabel.prototype['languageCode'] = undefined;






export default GoogleCloudVisionV1p3beta1WebDetectionWebLabel;

