/**
 * Cloud Vision API
 * Integrates Google Vision features, including image labeling, face, logo, and landmark detection, optical character recognition (OCR), and detection of explicit content, into applications.
 *
 * The version of the OpenAPI document: v1p1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudVisionV1p1beta1ProductSearchResultsGroupedResult from './GoogleCloudVisionV1p1beta1ProductSearchResultsGroupedResult';
import GoogleCloudVisionV1p1beta1ProductSearchResultsResult from './GoogleCloudVisionV1p1beta1ProductSearchResultsResult';

/**
 * The GoogleCloudVisionV1p1beta1ProductSearchResults model module.
 * @module model/GoogleCloudVisionV1p1beta1ProductSearchResults
 * @version v1p1beta1
 */
class GoogleCloudVisionV1p1beta1ProductSearchResults {
    /**
     * Constructs a new <code>GoogleCloudVisionV1p1beta1ProductSearchResults</code>.
     * Results for a product search request.
     * @alias module:model/GoogleCloudVisionV1p1beta1ProductSearchResults
     */
    constructor() { 
        
        GoogleCloudVisionV1p1beta1ProductSearchResults.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudVisionV1p1beta1ProductSearchResults</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudVisionV1p1beta1ProductSearchResults} obj Optional instance to populate.
     * @return {module:model/GoogleCloudVisionV1p1beta1ProductSearchResults} The populated <code>GoogleCloudVisionV1p1beta1ProductSearchResults</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudVisionV1p1beta1ProductSearchResults();

            if (data.hasOwnProperty('indexTime')) {
                obj['indexTime'] = ApiClient.convertToType(data['indexTime'], 'String');
            }
            if (data.hasOwnProperty('productGroupedResults')) {
                obj['productGroupedResults'] = ApiClient.convertToType(data['productGroupedResults'], [GoogleCloudVisionV1p1beta1ProductSearchResultsGroupedResult]);
            }
            if (data.hasOwnProperty('results')) {
                obj['results'] = ApiClient.convertToType(data['results'], [GoogleCloudVisionV1p1beta1ProductSearchResultsResult]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudVisionV1p1beta1ProductSearchResults</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudVisionV1p1beta1ProductSearchResults</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['indexTime'] && !(typeof data['indexTime'] === 'string' || data['indexTime'] instanceof String)) {
            throw new Error("Expected the field `indexTime` to be a primitive type in the JSON string but got " + data['indexTime']);
        }
        if (data['productGroupedResults']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['productGroupedResults'])) {
                throw new Error("Expected the field `productGroupedResults` to be an array in the JSON data but got " + data['productGroupedResults']);
            }
            // validate the optional field `productGroupedResults` (array)
            for (const item of data['productGroupedResults']) {
                GoogleCloudVisionV1p1beta1ProductSearchResultsGroupedResult.validateJSON(item);
            };
        }
        if (data['results']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['results'])) {
                throw new Error("Expected the field `results` to be an array in the JSON data but got " + data['results']);
            }
            // validate the optional field `results` (array)
            for (const item of data['results']) {
                GoogleCloudVisionV1p1beta1ProductSearchResultsResult.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Timestamp of the index which provided these results. Products added to the product set and products removed from the product set after this time are not reflected in the current results.
 * @member {String} indexTime
 */
GoogleCloudVisionV1p1beta1ProductSearchResults.prototype['indexTime'] = undefined;

/**
 * List of results grouped by products detected in the query image. Each entry corresponds to one bounding polygon in the query image, and contains the matching products specific to that region. There may be duplicate product matches in the union of all the per-product results.
 * @member {Array.<module:model/GoogleCloudVisionV1p1beta1ProductSearchResultsGroupedResult>} productGroupedResults
 */
GoogleCloudVisionV1p1beta1ProductSearchResults.prototype['productGroupedResults'] = undefined;

/**
 * List of results, one for each product match.
 * @member {Array.<module:model/GoogleCloudVisionV1p1beta1ProductSearchResultsResult>} results
 */
GoogleCloudVisionV1p1beta1ProductSearchResults.prototype['results'] = undefined;






export default GoogleCloudVisionV1p1beta1ProductSearchResults;

