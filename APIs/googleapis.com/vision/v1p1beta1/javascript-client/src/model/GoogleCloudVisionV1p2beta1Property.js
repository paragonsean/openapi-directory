/**
 * Cloud Vision API
 * Integrates Google Vision features, including image labeling, face, logo, and landmark detection, optical character recognition (OCR), and detection of explicit content, into applications.
 *
 * The version of the OpenAPI document: v1p1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudVisionV1p2beta1Property model module.
 * @module model/GoogleCloudVisionV1p2beta1Property
 * @version v1p1beta1
 */
class GoogleCloudVisionV1p2beta1Property {
    /**
     * Constructs a new <code>GoogleCloudVisionV1p2beta1Property</code>.
     * A &#x60;Property&#x60; consists of a user-supplied name/value pair.
     * @alias module:model/GoogleCloudVisionV1p2beta1Property
     */
    constructor() { 
        
        GoogleCloudVisionV1p2beta1Property.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudVisionV1p2beta1Property</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudVisionV1p2beta1Property} obj Optional instance to populate.
     * @return {module:model/GoogleCloudVisionV1p2beta1Property} The populated <code>GoogleCloudVisionV1p2beta1Property</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudVisionV1p2beta1Property();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('uint64Value')) {
                obj['uint64Value'] = ApiClient.convertToType(data['uint64Value'], 'String');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudVisionV1p2beta1Property</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudVisionV1p2beta1Property</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['uint64Value'] && !(typeof data['uint64Value'] === 'string' || data['uint64Value'] instanceof String)) {
            throw new Error("Expected the field `uint64Value` to be a primitive type in the JSON string but got " + data['uint64Value']);
        }
        // ensure the json data is a string
        if (data['value'] && !(typeof data['value'] === 'string' || data['value'] instanceof String)) {
            throw new Error("Expected the field `value` to be a primitive type in the JSON string but got " + data['value']);
        }

        return true;
    }


}



/**
 * Name of the property.
 * @member {String} name
 */
GoogleCloudVisionV1p2beta1Property.prototype['name'] = undefined;

/**
 * Value of numeric properties.
 * @member {String} uint64Value
 */
GoogleCloudVisionV1p2beta1Property.prototype['uint64Value'] = undefined;

/**
 * Value of the property.
 * @member {String} value
 */
GoogleCloudVisionV1p2beta1Property.prototype['value'] = undefined;






export default GoogleCloudVisionV1p2beta1Property;

