/**
 * Cloud Vision API
 * Integrates Google Vision features, including image labeling, face, logo, and landmark detection, optical character recognition (OCR), and detection of explicit content, into applications.
 *
 * The version of the OpenAPI document: v1p1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudVisionV1p3beta1BatchOperationMetadata model module.
 * @module model/GoogleCloudVisionV1p3beta1BatchOperationMetadata
 * @version v1p1beta1
 */
class GoogleCloudVisionV1p3beta1BatchOperationMetadata {
    /**
     * Constructs a new <code>GoogleCloudVisionV1p3beta1BatchOperationMetadata</code>.
     * Metadata for the batch operations such as the current state. This is included in the &#x60;metadata&#x60; field of the &#x60;Operation&#x60; returned by the &#x60;GetOperation&#x60; call of the &#x60;google::longrunning::Operations&#x60; service.
     * @alias module:model/GoogleCloudVisionV1p3beta1BatchOperationMetadata
     */
    constructor() { 
        
        GoogleCloudVisionV1p3beta1BatchOperationMetadata.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudVisionV1p3beta1BatchOperationMetadata</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudVisionV1p3beta1BatchOperationMetadata} obj Optional instance to populate.
     * @return {module:model/GoogleCloudVisionV1p3beta1BatchOperationMetadata} The populated <code>GoogleCloudVisionV1p3beta1BatchOperationMetadata</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudVisionV1p3beta1BatchOperationMetadata();

            if (data.hasOwnProperty('endTime')) {
                obj['endTime'] = ApiClient.convertToType(data['endTime'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('submitTime')) {
                obj['submitTime'] = ApiClient.convertToType(data['submitTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudVisionV1p3beta1BatchOperationMetadata</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudVisionV1p3beta1BatchOperationMetadata</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['endTime'] && !(typeof data['endTime'] === 'string' || data['endTime'] instanceof String)) {
            throw new Error("Expected the field `endTime` to be a primitive type in the JSON string but got " + data['endTime']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // ensure the json data is a string
        if (data['submitTime'] && !(typeof data['submitTime'] === 'string' || data['submitTime'] instanceof String)) {
            throw new Error("Expected the field `submitTime` to be a primitive type in the JSON string but got " + data['submitTime']);
        }

        return true;
    }


}



/**
 * The time when the batch request is finished and google.longrunning.Operation.done is set to true.
 * @member {String} endTime
 */
GoogleCloudVisionV1p3beta1BatchOperationMetadata.prototype['endTime'] = undefined;

/**
 * The current state of the batch operation.
 * @member {module:model/GoogleCloudVisionV1p3beta1BatchOperationMetadata.StateEnum} state
 */
GoogleCloudVisionV1p3beta1BatchOperationMetadata.prototype['state'] = undefined;

/**
 * The time when the batch request was submitted to the server.
 * @member {String} submitTime
 */
GoogleCloudVisionV1p3beta1BatchOperationMetadata.prototype['submitTime'] = undefined;





/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudVisionV1p3beta1BatchOperationMetadata['StateEnum'] = {

    /**
     * value: "STATE_UNSPECIFIED"
     * @const
     */
    "STATE_UNSPECIFIED": "STATE_UNSPECIFIED",

    /**
     * value: "PROCESSING"
     * @const
     */
    "PROCESSING": "PROCESSING",

    /**
     * value: "SUCCESSFUL"
     * @const
     */
    "SUCCESSFUL": "SUCCESSFUL",

    /**
     * value: "FAILED"
     * @const
     */
    "FAILED": "FAILED",

    /**
     * value: "CANCELLED"
     * @const
     */
    "CANCELLED": "CANCELLED"
};



export default GoogleCloudVisionV1p3beta1BatchOperationMetadata;

