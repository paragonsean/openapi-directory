/**
 * Cloud Vision API
 * Integrates Google Vision features, including image labeling, face, logo, and landmark detection, optical character recognition (OCR), and detection of explicit content, into applications.
 *
 * The version of the OpenAPI document: v1p1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudVisionV1p1beta1CropHintsParams model module.
 * @module model/GoogleCloudVisionV1p1beta1CropHintsParams
 * @version v1p1beta1
 */
class GoogleCloudVisionV1p1beta1CropHintsParams {
    /**
     * Constructs a new <code>GoogleCloudVisionV1p1beta1CropHintsParams</code>.
     * Parameters for crop hints annotation request.
     * @alias module:model/GoogleCloudVisionV1p1beta1CropHintsParams
     */
    constructor() { 
        
        GoogleCloudVisionV1p1beta1CropHintsParams.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudVisionV1p1beta1CropHintsParams</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudVisionV1p1beta1CropHintsParams} obj Optional instance to populate.
     * @return {module:model/GoogleCloudVisionV1p1beta1CropHintsParams} The populated <code>GoogleCloudVisionV1p1beta1CropHintsParams</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudVisionV1p1beta1CropHintsParams();

            if (data.hasOwnProperty('aspectRatios')) {
                obj['aspectRatios'] = ApiClient.convertToType(data['aspectRatios'], ['Number']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudVisionV1p1beta1CropHintsParams</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudVisionV1p1beta1CropHintsParams</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['aspectRatios'])) {
            throw new Error("Expected the field `aspectRatios` to be an array in the JSON data but got " + data['aspectRatios']);
        }

        return true;
    }


}



/**
 * Aspect ratios in floats, representing the ratio of the width to the height of the image. For example, if the desired aspect ratio is 4/3, the corresponding float value should be 1.33333. If not specified, the best possible crop is returned. The number of provided aspect ratios is limited to a maximum of 16; any aspect ratios provided after the 16th are ignored.
 * @member {Array.<Number>} aspectRatios
 */
GoogleCloudVisionV1p1beta1CropHintsParams.prototype['aspectRatios'] = undefined;






export default GoogleCloudVisionV1p1beta1CropHintsParams;

