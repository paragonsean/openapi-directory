/**
 * Cloud Vision API
 * Integrates Google Vision features, including image labeling, face, logo, and landmark detection, optical character recognition (OCR), and detection of explicit content, into applications.
 *
 * The version of the OpenAPI document: v1p1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BoundingPoly from './BoundingPoly';
import Symbol from './Symbol';
import TextProperty from './TextProperty';

/**
 * The Word model module.
 * @module model/Word
 * @version v1p1beta1
 */
class Word {
    /**
     * Constructs a new <code>Word</code>.
     * A word representation.
     * @alias module:model/Word
     */
    constructor() { 
        
        Word.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Word</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Word} obj Optional instance to populate.
     * @return {module:model/Word} The populated <code>Word</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Word();

            if (data.hasOwnProperty('boundingBox')) {
                obj['boundingBox'] = BoundingPoly.constructFromObject(data['boundingBox']);
            }
            if (data.hasOwnProperty('confidence')) {
                obj['confidence'] = ApiClient.convertToType(data['confidence'], 'Number');
            }
            if (data.hasOwnProperty('property')) {
                obj['property'] = TextProperty.constructFromObject(data['property']);
            }
            if (data.hasOwnProperty('symbols')) {
                obj['symbols'] = ApiClient.convertToType(data['symbols'], [Symbol]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Word</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Word</code>.
     */
    static validateJSON(data) {
        // validate the optional field `boundingBox`
        if (data['boundingBox']) { // data not null
          BoundingPoly.validateJSON(data['boundingBox']);
        }
        // validate the optional field `property`
        if (data['property']) { // data not null
          TextProperty.validateJSON(data['property']);
        }
        if (data['symbols']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['symbols'])) {
                throw new Error("Expected the field `symbols` to be an array in the JSON data but got " + data['symbols']);
            }
            // validate the optional field `symbols` (array)
            for (const item of data['symbols']) {
                Symbol.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {module:model/BoundingPoly} boundingBox
 */
Word.prototype['boundingBox'] = undefined;

/**
 * Confidence of the OCR results for the word. Range [0, 1].
 * @member {Number} confidence
 */
Word.prototype['confidence'] = undefined;

/**
 * @member {module:model/TextProperty} property
 */
Word.prototype['property'] = undefined;

/**
 * List of symbols in the word. The order of the symbols follows the natural reading order.
 * @member {Array.<module:model/Symbol>} symbols
 */
Word.prototype['symbols'] = undefined;






export default Word;

