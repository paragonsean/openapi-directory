/**
 * Cloud Vision API
 * Integrates Google Vision features, including image labeling, face, logo, and landmark detection, optical character recognition (OCR), and detection of explicit content, into applications.
 *
 * The version of the OpenAPI document: v1p1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudVisionV1p3beta1GcsDestination from './GoogleCloudVisionV1p3beta1GcsDestination';

/**
 * The GoogleCloudVisionV1p3beta1OutputConfig model module.
 * @module model/GoogleCloudVisionV1p3beta1OutputConfig
 * @version v1p1beta1
 */
class GoogleCloudVisionV1p3beta1OutputConfig {
    /**
     * Constructs a new <code>GoogleCloudVisionV1p3beta1OutputConfig</code>.
     * The desired output location and metadata.
     * @alias module:model/GoogleCloudVisionV1p3beta1OutputConfig
     */
    constructor() { 
        
        GoogleCloudVisionV1p3beta1OutputConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudVisionV1p3beta1OutputConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudVisionV1p3beta1OutputConfig} obj Optional instance to populate.
     * @return {module:model/GoogleCloudVisionV1p3beta1OutputConfig} The populated <code>GoogleCloudVisionV1p3beta1OutputConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudVisionV1p3beta1OutputConfig();

            if (data.hasOwnProperty('batchSize')) {
                obj['batchSize'] = ApiClient.convertToType(data['batchSize'], 'Number');
            }
            if (data.hasOwnProperty('gcsDestination')) {
                obj['gcsDestination'] = GoogleCloudVisionV1p3beta1GcsDestination.constructFromObject(data['gcsDestination']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudVisionV1p3beta1OutputConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudVisionV1p3beta1OutputConfig</code>.
     */
    static validateJSON(data) {
        // validate the optional field `gcsDestination`
        if (data['gcsDestination']) { // data not null
          GoogleCloudVisionV1p3beta1GcsDestination.validateJSON(data['gcsDestination']);
        }

        return true;
    }


}



/**
 * The max number of response protos to put into each output JSON file on Google Cloud Storage. The valid range is [1, 100]. If not specified, the default value is 20. For example, for one pdf file with 100 pages, 100 response protos will be generated. If `batch_size` = 20, then 5 json files each containing 20 response protos will be written under the prefix `gcs_destination`.`uri`. Currently, batch_size only applies to GcsDestination, with potential future support for other output configurations.
 * @member {Number} batchSize
 */
GoogleCloudVisionV1p3beta1OutputConfig.prototype['batchSize'] = undefined;

/**
 * @member {module:model/GoogleCloudVisionV1p3beta1GcsDestination} gcsDestination
 */
GoogleCloudVisionV1p3beta1OutputConfig.prototype['gcsDestination'] = undefined;






export default GoogleCloudVisionV1p3beta1OutputConfig;

