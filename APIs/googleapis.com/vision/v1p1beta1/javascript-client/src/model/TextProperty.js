/**
 * Cloud Vision API
 * Integrates Google Vision features, including image labeling, face, logo, and landmark detection, optical character recognition (OCR), and detection of explicit content, into applications.
 *
 * The version of the OpenAPI document: v1p1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DetectedBreak from './DetectedBreak';
import DetectedLanguage from './DetectedLanguage';

/**
 * The TextProperty model module.
 * @module model/TextProperty
 * @version v1p1beta1
 */
class TextProperty {
    /**
     * Constructs a new <code>TextProperty</code>.
     * Additional information detected on the structural component.
     * @alias module:model/TextProperty
     */
    constructor() { 
        
        TextProperty.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TextProperty</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TextProperty} obj Optional instance to populate.
     * @return {module:model/TextProperty} The populated <code>TextProperty</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TextProperty();

            if (data.hasOwnProperty('detectedBreak')) {
                obj['detectedBreak'] = DetectedBreak.constructFromObject(data['detectedBreak']);
            }
            if (data.hasOwnProperty('detectedLanguages')) {
                obj['detectedLanguages'] = ApiClient.convertToType(data['detectedLanguages'], [DetectedLanguage]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TextProperty</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TextProperty</code>.
     */
    static validateJSON(data) {
        // validate the optional field `detectedBreak`
        if (data['detectedBreak']) { // data not null
          DetectedBreak.validateJSON(data['detectedBreak']);
        }
        if (data['detectedLanguages']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['detectedLanguages'])) {
                throw new Error("Expected the field `detectedLanguages` to be an array in the JSON data but got " + data['detectedLanguages']);
            }
            // validate the optional field `detectedLanguages` (array)
            for (const item of data['detectedLanguages']) {
                DetectedLanguage.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {module:model/DetectedBreak} detectedBreak
 */
TextProperty.prototype['detectedBreak'] = undefined;

/**
 * A list of detected languages together with confidence.
 * @member {Array.<module:model/DetectedLanguage>} detectedLanguages
 */
TextProperty.prototype['detectedLanguages'] = undefined;






export default TextProperty;

