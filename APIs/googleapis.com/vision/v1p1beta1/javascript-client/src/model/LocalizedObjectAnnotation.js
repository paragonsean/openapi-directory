/**
 * Cloud Vision API
 * Integrates Google Vision features, including image labeling, face, logo, and landmark detection, optical character recognition (OCR), and detection of explicit content, into applications.
 *
 * The version of the OpenAPI document: v1p1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BoundingPoly from './BoundingPoly';

/**
 * The LocalizedObjectAnnotation model module.
 * @module model/LocalizedObjectAnnotation
 * @version v1p1beta1
 */
class LocalizedObjectAnnotation {
    /**
     * Constructs a new <code>LocalizedObjectAnnotation</code>.
     * Set of detected objects with bounding boxes.
     * @alias module:model/LocalizedObjectAnnotation
     */
    constructor() { 
        
        LocalizedObjectAnnotation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LocalizedObjectAnnotation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LocalizedObjectAnnotation} obj Optional instance to populate.
     * @return {module:model/LocalizedObjectAnnotation} The populated <code>LocalizedObjectAnnotation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LocalizedObjectAnnotation();

            if (data.hasOwnProperty('boundingPoly')) {
                obj['boundingPoly'] = BoundingPoly.constructFromObject(data['boundingPoly']);
            }
            if (data.hasOwnProperty('languageCode')) {
                obj['languageCode'] = ApiClient.convertToType(data['languageCode'], 'String');
            }
            if (data.hasOwnProperty('mid')) {
                obj['mid'] = ApiClient.convertToType(data['mid'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('score')) {
                obj['score'] = ApiClient.convertToType(data['score'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LocalizedObjectAnnotation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LocalizedObjectAnnotation</code>.
     */
    static validateJSON(data) {
        // validate the optional field `boundingPoly`
        if (data['boundingPoly']) { // data not null
          BoundingPoly.validateJSON(data['boundingPoly']);
        }
        // ensure the json data is a string
        if (data['languageCode'] && !(typeof data['languageCode'] === 'string' || data['languageCode'] instanceof String)) {
            throw new Error("Expected the field `languageCode` to be a primitive type in the JSON string but got " + data['languageCode']);
        }
        // ensure the json data is a string
        if (data['mid'] && !(typeof data['mid'] === 'string' || data['mid'] instanceof String)) {
            throw new Error("Expected the field `mid` to be a primitive type in the JSON string but got " + data['mid']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}



/**
 * @member {module:model/BoundingPoly} boundingPoly
 */
LocalizedObjectAnnotation.prototype['boundingPoly'] = undefined;

/**
 * The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
 * @member {String} languageCode
 */
LocalizedObjectAnnotation.prototype['languageCode'] = undefined;

/**
 * Object ID that should align with EntityAnnotation mid.
 * @member {String} mid
 */
LocalizedObjectAnnotation.prototype['mid'] = undefined;

/**
 * Object name, expressed in its `language_code` language.
 * @member {String} name
 */
LocalizedObjectAnnotation.prototype['name'] = undefined;

/**
 * Score of the result. Range [0, 1].
 * @member {Number} score
 */
LocalizedObjectAnnotation.prototype['score'] = undefined;






export default LocalizedObjectAnnotation;

