# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_vision_v1p4beta1_crop_hint import GoogleCloudVisionV1p4beta1CropHint
from openapi_server import util


class GoogleCloudVisionV1p4beta1CropHintsAnnotation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, crop_hints: List[GoogleCloudVisionV1p4beta1CropHint]=None):
        """GoogleCloudVisionV1p4beta1CropHintsAnnotation - a model defined in OpenAPI

        :param crop_hints: The crop_hints of this GoogleCloudVisionV1p4beta1CropHintsAnnotation.
        """
        self.openapi_types = {
            'crop_hints': List[GoogleCloudVisionV1p4beta1CropHint]
        }

        self.attribute_map = {
            'crop_hints': 'cropHints'
        }

        self._crop_hints = crop_hints

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudVisionV1p4beta1CropHintsAnnotation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudVisionV1p4beta1CropHintsAnnotation of this GoogleCloudVisionV1p4beta1CropHintsAnnotation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def crop_hints(self):
        """Gets the crop_hints of this GoogleCloudVisionV1p4beta1CropHintsAnnotation.

        Crop hint results.

        :return: The crop_hints of this GoogleCloudVisionV1p4beta1CropHintsAnnotation.
        :rtype: List[GoogleCloudVisionV1p4beta1CropHint]
        """
        return self._crop_hints

    @crop_hints.setter
    def crop_hints(self, crop_hints):
        """Sets the crop_hints of this GoogleCloudVisionV1p4beta1CropHintsAnnotation.

        Crop hint results.

        :param crop_hints: The crop_hints of this GoogleCloudVisionV1p4beta1CropHintsAnnotation.
        :type crop_hints: List[GoogleCloudVisionV1p4beta1CropHint]
        """

        self._crop_hints = crop_hints
