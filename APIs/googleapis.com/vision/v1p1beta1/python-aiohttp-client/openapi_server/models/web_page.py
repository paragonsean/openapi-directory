# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.web_image import WebImage
from openapi_server import util


class WebPage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, full_matching_images: List[WebImage]=None, page_title: str=None, partial_matching_images: List[WebImage]=None, score: float=None, url: str=None):
        """WebPage - a model defined in OpenAPI

        :param full_matching_images: The full_matching_images of this WebPage.
        :param page_title: The page_title of this WebPage.
        :param partial_matching_images: The partial_matching_images of this WebPage.
        :param score: The score of this WebPage.
        :param url: The url of this WebPage.
        """
        self.openapi_types = {
            'full_matching_images': List[WebImage],
            'page_title': str,
            'partial_matching_images': List[WebImage],
            'score': float,
            'url': str
        }

        self.attribute_map = {
            'full_matching_images': 'fullMatchingImages',
            'page_title': 'pageTitle',
            'partial_matching_images': 'partialMatchingImages',
            'score': 'score',
            'url': 'url'
        }

        self._full_matching_images = full_matching_images
        self._page_title = page_title
        self._partial_matching_images = partial_matching_images
        self._score = score
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WebPage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The WebPage of this WebPage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def full_matching_images(self):
        """Gets the full_matching_images of this WebPage.

        Fully matching images on the page. Can include resized copies of the query image.

        :return: The full_matching_images of this WebPage.
        :rtype: List[WebImage]
        """
        return self._full_matching_images

    @full_matching_images.setter
    def full_matching_images(self, full_matching_images):
        """Sets the full_matching_images of this WebPage.

        Fully matching images on the page. Can include resized copies of the query image.

        :param full_matching_images: The full_matching_images of this WebPage.
        :type full_matching_images: List[WebImage]
        """

        self._full_matching_images = full_matching_images

    @property
    def page_title(self):
        """Gets the page_title of this WebPage.

        Title for the web page, may contain HTML markups.

        :return: The page_title of this WebPage.
        :rtype: str
        """
        return self._page_title

    @page_title.setter
    def page_title(self, page_title):
        """Sets the page_title of this WebPage.

        Title for the web page, may contain HTML markups.

        :param page_title: The page_title of this WebPage.
        :type page_title: str
        """

        self._page_title = page_title

    @property
    def partial_matching_images(self):
        """Gets the partial_matching_images of this WebPage.

        Partial matching images on the page. Those images are similar enough to share some key-point features. For example an original image will likely have partial matching for its crops.

        :return: The partial_matching_images of this WebPage.
        :rtype: List[WebImage]
        """
        return self._partial_matching_images

    @partial_matching_images.setter
    def partial_matching_images(self, partial_matching_images):
        """Sets the partial_matching_images of this WebPage.

        Partial matching images on the page. Those images are similar enough to share some key-point features. For example an original image will likely have partial matching for its crops.

        :param partial_matching_images: The partial_matching_images of this WebPage.
        :type partial_matching_images: List[WebImage]
        """

        self._partial_matching_images = partial_matching_images

    @property
    def score(self):
        """Gets the score of this WebPage.

        (Deprecated) Overall relevancy score for the web page.

        :return: The score of this WebPage.
        :rtype: float
        """
        return self._score

    @score.setter
    def score(self, score):
        """Sets the score of this WebPage.

        (Deprecated) Overall relevancy score for the web page.

        :param score: The score of this WebPage.
        :type score: float
        """

        self._score = score

    @property
    def url(self):
        """Gets the url of this WebPage.

        The result web page URL.

        :return: The url of this WebPage.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this WebPage.

        The result web page URL.

        :param url: The url of this WebPage.
        :type url: str
        """

        self._url = url
