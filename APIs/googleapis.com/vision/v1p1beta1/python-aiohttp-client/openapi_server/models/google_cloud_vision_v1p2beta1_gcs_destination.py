# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudVisionV1p2beta1GcsDestination(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, uri: str=None):
        """GoogleCloudVisionV1p2beta1GcsDestination - a model defined in OpenAPI

        :param uri: The uri of this GoogleCloudVisionV1p2beta1GcsDestination.
        """
        self.openapi_types = {
            'uri': str
        }

        self.attribute_map = {
            'uri': 'uri'
        }

        self._uri = uri

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudVisionV1p2beta1GcsDestination':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudVisionV1p2beta1GcsDestination of this GoogleCloudVisionV1p2beta1GcsDestination.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def uri(self):
        """Gets the uri of this GoogleCloudVisionV1p2beta1GcsDestination.

        Google Cloud Storage URI prefix where the results will be stored. Results will be in JSON format and preceded by its corresponding input URI prefix. This field can either represent a gcs file prefix or gcs directory. In either case, the uri should be unique because in order to get all of the output files, you will need to do a wildcard gcs search on the uri prefix you provide. Examples: * File Prefix: gs://bucket-name/here/filenameprefix The output files will be created in gs://bucket-name/here/ and the names of the output files will begin with \"filenameprefix\". * Directory Prefix: gs://bucket-name/some/location/ The output files will be created in gs://bucket-name/some/location/ and the names of the output files could be anything because there was no filename prefix specified. If multiple outputs, each response is still AnnotateFileResponse, each of which contains some subset of the full list of AnnotateImageResponse. Multiple outputs can happen if, for example, the output JSON is too large and overflows into multiple sharded files.

        :return: The uri of this GoogleCloudVisionV1p2beta1GcsDestination.
        :rtype: str
        """
        return self._uri

    @uri.setter
    def uri(self, uri):
        """Sets the uri of this GoogleCloudVisionV1p2beta1GcsDestination.

        Google Cloud Storage URI prefix where the results will be stored. Results will be in JSON format and preceded by its corresponding input URI prefix. This field can either represent a gcs file prefix or gcs directory. In either case, the uri should be unique because in order to get all of the output files, you will need to do a wildcard gcs search on the uri prefix you provide. Examples: * File Prefix: gs://bucket-name/here/filenameprefix The output files will be created in gs://bucket-name/here/ and the names of the output files will begin with \"filenameprefix\". * Directory Prefix: gs://bucket-name/some/location/ The output files will be created in gs://bucket-name/some/location/ and the names of the output files could be anything because there was no filename prefix specified. If multiple outputs, each response is still AnnotateFileResponse, each of which contains some subset of the full list of AnnotateImageResponse. Multiple outputs can happen if, for example, the output JSON is too large and overflows into multiple sharded files.

        :param uri: The uri of this GoogleCloudVisionV1p2beta1GcsDestination.
        :type uri: str
        """

        self._uri = uri
