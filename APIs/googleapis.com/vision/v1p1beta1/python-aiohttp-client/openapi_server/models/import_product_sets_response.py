# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.reference_image import ReferenceImage
from openapi_server.models.status import Status
from openapi_server import util


class ImportProductSetsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, reference_images: List[ReferenceImage]=None, statuses: List[Status]=None):
        """ImportProductSetsResponse - a model defined in OpenAPI

        :param reference_images: The reference_images of this ImportProductSetsResponse.
        :param statuses: The statuses of this ImportProductSetsResponse.
        """
        self.openapi_types = {
            'reference_images': List[ReferenceImage],
            'statuses': List[Status]
        }

        self.attribute_map = {
            'reference_images': 'referenceImages',
            'statuses': 'statuses'
        }

        self._reference_images = reference_images
        self._statuses = statuses

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ImportProductSetsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ImportProductSetsResponse of this ImportProductSetsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def reference_images(self):
        """Gets the reference_images of this ImportProductSetsResponse.

        The list of reference_images that are imported successfully.

        :return: The reference_images of this ImportProductSetsResponse.
        :rtype: List[ReferenceImage]
        """
        return self._reference_images

    @reference_images.setter
    def reference_images(self, reference_images):
        """Sets the reference_images of this ImportProductSetsResponse.

        The list of reference_images that are imported successfully.

        :param reference_images: The reference_images of this ImportProductSetsResponse.
        :type reference_images: List[ReferenceImage]
        """

        self._reference_images = reference_images

    @property
    def statuses(self):
        """Gets the statuses of this ImportProductSetsResponse.

        The rpc status for each ImportProductSet request, including both successes and errors. The number of statuses here matches the number of lines in the csv file, and statuses[i] stores the success or failure status of processing the i-th line of the csv, starting from line 0.

        :return: The statuses of this ImportProductSetsResponse.
        :rtype: List[Status]
        """
        return self._statuses

    @statuses.setter
    def statuses(self, statuses):
        """Sets the statuses of this ImportProductSetsResponse.

        The rpc status for each ImportProductSet request, including both successes and errors. The number of statuses here matches the number of lines in the csv file, and statuses[i] stores the success or failure status of processing the i-th line of the csv, starting from line 0.

        :param statuses: The statuses of this ImportProductSetsResponse.
        :type statuses: List[Status]
        """

        self._statuses = statuses
