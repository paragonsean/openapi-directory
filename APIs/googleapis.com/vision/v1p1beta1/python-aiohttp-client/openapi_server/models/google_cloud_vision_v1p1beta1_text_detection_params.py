# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudVisionV1p1beta1TextDetectionParams(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, advanced_ocr_options: List[str]=None, enable_text_detection_confidence_score: bool=None):
        """GoogleCloudVisionV1p1beta1TextDetectionParams - a model defined in OpenAPI

        :param advanced_ocr_options: The advanced_ocr_options of this GoogleCloudVisionV1p1beta1TextDetectionParams.
        :param enable_text_detection_confidence_score: The enable_text_detection_confidence_score of this GoogleCloudVisionV1p1beta1TextDetectionParams.
        """
        self.openapi_types = {
            'advanced_ocr_options': List[str],
            'enable_text_detection_confidence_score': bool
        }

        self.attribute_map = {
            'advanced_ocr_options': 'advancedOcrOptions',
            'enable_text_detection_confidence_score': 'enableTextDetectionConfidenceScore'
        }

        self._advanced_ocr_options = advanced_ocr_options
        self._enable_text_detection_confidence_score = enable_text_detection_confidence_score

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudVisionV1p1beta1TextDetectionParams':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudVisionV1p1beta1TextDetectionParams of this GoogleCloudVisionV1p1beta1TextDetectionParams.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def advanced_ocr_options(self):
        """Gets the advanced_ocr_options of this GoogleCloudVisionV1p1beta1TextDetectionParams.

        A list of advanced OCR options to further fine-tune OCR behavior. Current valid values are: - `legacy_layout`: a heuristics layout detection algorithm, which serves as an alternative to the current ML-based layout detection algorithm. Customers can choose the best suitable layout algorithm based on their situation.

        :return: The advanced_ocr_options of this GoogleCloudVisionV1p1beta1TextDetectionParams.
        :rtype: List[str]
        """
        return self._advanced_ocr_options

    @advanced_ocr_options.setter
    def advanced_ocr_options(self, advanced_ocr_options):
        """Sets the advanced_ocr_options of this GoogleCloudVisionV1p1beta1TextDetectionParams.

        A list of advanced OCR options to further fine-tune OCR behavior. Current valid values are: - `legacy_layout`: a heuristics layout detection algorithm, which serves as an alternative to the current ML-based layout detection algorithm. Customers can choose the best suitable layout algorithm based on their situation.

        :param advanced_ocr_options: The advanced_ocr_options of this GoogleCloudVisionV1p1beta1TextDetectionParams.
        :type advanced_ocr_options: List[str]
        """

        self._advanced_ocr_options = advanced_ocr_options

    @property
    def enable_text_detection_confidence_score(self):
        """Gets the enable_text_detection_confidence_score of this GoogleCloudVisionV1p1beta1TextDetectionParams.

        By default, Cloud Vision API only includes confidence score for DOCUMENT_TEXT_DETECTION result. Set the flag to true to include confidence score for TEXT_DETECTION as well.

        :return: The enable_text_detection_confidence_score of this GoogleCloudVisionV1p1beta1TextDetectionParams.
        :rtype: bool
        """
        return self._enable_text_detection_confidence_score

    @enable_text_detection_confidence_score.setter
    def enable_text_detection_confidence_score(self, enable_text_detection_confidence_score):
        """Sets the enable_text_detection_confidence_score of this GoogleCloudVisionV1p1beta1TextDetectionParams.

        By default, Cloud Vision API only includes confidence score for DOCUMENT_TEXT_DETECTION result. Set the flag to true to include confidence score for TEXT_DETECTION as well.

        :param enable_text_detection_confidence_score: The enable_text_detection_confidence_score of this GoogleCloudVisionV1p1beta1TextDetectionParams.
        :type enable_text_detection_confidence_score: bool
        """

        self._enable_text_detection_confidence_score = enable_text_detection_confidence_score
