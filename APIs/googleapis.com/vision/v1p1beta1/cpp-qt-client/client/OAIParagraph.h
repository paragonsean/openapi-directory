/**
 * Cloud Vision API
 * Integrates Google Vision features, including image labeling, face, logo, and landmark detection, optical character recognition (OCR), and detection of explicit content, into applications.
 *
 * The version of the OpenAPI document: v1p1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIParagraph.h
 *
 * Structural unit of text representing a number of words in certain order.
 */

#ifndef OAIParagraph_H
#define OAIParagraph_H

#include <QJsonObject>

#include "OAIBoundingPoly.h"
#include "OAITextProperty.h"
#include "OAIWord.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBoundingPoly;
class OAITextProperty;
class OAIWord;

class OAIParagraph : public OAIObject {
public:
    OAIParagraph();
    OAIParagraph(QString json);
    ~OAIParagraph() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIBoundingPoly getBoundingBox() const;
    void setBoundingBox(const OAIBoundingPoly &bounding_box);
    bool is_bounding_box_Set() const;
    bool is_bounding_box_Valid() const;

    float getConfidence() const;
    void setConfidence(const float &confidence);
    bool is_confidence_Set() const;
    bool is_confidence_Valid() const;

    OAITextProperty getProperty() const;
    void setProperty(const OAITextProperty &property);
    bool is_property_Set() const;
    bool is_property_Valid() const;

    QList<OAIWord> getWords() const;
    void setWords(const QList<OAIWord> &words);
    bool is_words_Set() const;
    bool is_words_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIBoundingPoly m_bounding_box;
    bool m_bounding_box_isSet;
    bool m_bounding_box_isValid;

    float m_confidence;
    bool m_confidence_isSet;
    bool m_confidence_isValid;

    OAITextProperty m_property;
    bool m_property_isSet;
    bool m_property_isValid;

    QList<OAIWord> m_words;
    bool m_words_isSet;
    bool m_words_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIParagraph)

#endif // OAIParagraph_H
