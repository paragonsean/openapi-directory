/**
 * Cloud Vision API
 * Integrates Google Vision features, including image labeling, face, logo, and landmark detection, optical character recognition (OCR), and detection of explicit content, into applications.
 *
 * The version of the OpenAPI document: v1p1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudVisionV1p1beta1Page.h
 *
 * Detected page from OCR.
 */

#ifndef OAIGoogleCloudVisionV1p1beta1Page_H
#define OAIGoogleCloudVisionV1p1beta1Page_H

#include <QJsonObject>

#include "OAIGoogleCloudVisionV1p1beta1Block.h"
#include "OAIGoogleCloudVisionV1p1beta1TextAnnotationTextProperty.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleCloudVisionV1p1beta1Block;
class OAIGoogleCloudVisionV1p1beta1TextAnnotationTextProperty;

class OAIGoogleCloudVisionV1p1beta1Page : public OAIObject {
public:
    OAIGoogleCloudVisionV1p1beta1Page();
    OAIGoogleCloudVisionV1p1beta1Page(QString json);
    ~OAIGoogleCloudVisionV1p1beta1Page() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIGoogleCloudVisionV1p1beta1Block> getBlocks() const;
    void setBlocks(const QList<OAIGoogleCloudVisionV1p1beta1Block> &blocks);
    bool is_blocks_Set() const;
    bool is_blocks_Valid() const;

    float getConfidence() const;
    void setConfidence(const float &confidence);
    bool is_confidence_Set() const;
    bool is_confidence_Valid() const;

    qint32 getHeight() const;
    void setHeight(const qint32 &height);
    bool is_height_Set() const;
    bool is_height_Valid() const;

    OAIGoogleCloudVisionV1p1beta1TextAnnotationTextProperty getProperty() const;
    void setProperty(const OAIGoogleCloudVisionV1p1beta1TextAnnotationTextProperty &property);
    bool is_property_Set() const;
    bool is_property_Valid() const;

    qint32 getWidth() const;
    void setWidth(const qint32 &width);
    bool is_width_Set() const;
    bool is_width_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIGoogleCloudVisionV1p1beta1Block> m_blocks;
    bool m_blocks_isSet;
    bool m_blocks_isValid;

    float m_confidence;
    bool m_confidence_isSet;
    bool m_confidence_isValid;

    qint32 m_height;
    bool m_height_isSet;
    bool m_height_isValid;

    OAIGoogleCloudVisionV1p1beta1TextAnnotationTextProperty m_property;
    bool m_property_isSet;
    bool m_property_isValid;

    qint32 m_width;
    bool m_width_isSet;
    bool m_width_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudVisionV1p1beta1Page)

#endif // OAIGoogleCloudVisionV1p1beta1Page_H
