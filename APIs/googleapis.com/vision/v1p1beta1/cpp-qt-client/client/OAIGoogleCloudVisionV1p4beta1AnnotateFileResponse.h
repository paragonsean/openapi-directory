/**
 * Cloud Vision API
 * Integrates Google Vision features, including image labeling, face, logo, and landmark detection, optical character recognition (OCR), and detection of explicit content, into applications.
 *
 * The version of the OpenAPI document: v1p1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudVisionV1p4beta1AnnotateFileResponse.h
 *
 * Response to a single file annotation request. A file may contain one or more images, which individually have their own responses.
 */

#ifndef OAIGoogleCloudVisionV1p4beta1AnnotateFileResponse_H
#define OAIGoogleCloudVisionV1p4beta1AnnotateFileResponse_H

#include <QJsonObject>

#include "OAIGoogleCloudVisionV1p4beta1AnnotateImageResponse.h"
#include "OAIGoogleCloudVisionV1p4beta1InputConfig.h"
#include "OAIStatus.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIStatus;
class OAIGoogleCloudVisionV1p4beta1InputConfig;
class OAIGoogleCloudVisionV1p4beta1AnnotateImageResponse;

class OAIGoogleCloudVisionV1p4beta1AnnotateFileResponse : public OAIObject {
public:
    OAIGoogleCloudVisionV1p4beta1AnnotateFileResponse();
    OAIGoogleCloudVisionV1p4beta1AnnotateFileResponse(QString json);
    ~OAIGoogleCloudVisionV1p4beta1AnnotateFileResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIStatus getError() const;
    void setError(const OAIStatus &error);
    bool is_error_Set() const;
    bool is_error_Valid() const;

    OAIGoogleCloudVisionV1p4beta1InputConfig getInputConfig() const;
    void setInputConfig(const OAIGoogleCloudVisionV1p4beta1InputConfig &input_config);
    bool is_input_config_Set() const;
    bool is_input_config_Valid() const;

    QList<OAIGoogleCloudVisionV1p4beta1AnnotateImageResponse> getResponses() const;
    void setResponses(const QList<OAIGoogleCloudVisionV1p4beta1AnnotateImageResponse> &responses);
    bool is_responses_Set() const;
    bool is_responses_Valid() const;

    qint32 getTotalPages() const;
    void setTotalPages(const qint32 &total_pages);
    bool is_total_pages_Set() const;
    bool is_total_pages_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIStatus m_error;
    bool m_error_isSet;
    bool m_error_isValid;

    OAIGoogleCloudVisionV1p4beta1InputConfig m_input_config;
    bool m_input_config_isSet;
    bool m_input_config_isValid;

    QList<OAIGoogleCloudVisionV1p4beta1AnnotateImageResponse> m_responses;
    bool m_responses_isSet;
    bool m_responses_isValid;

    qint32 m_total_pages;
    bool m_total_pages_isSet;
    bool m_total_pages_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudVisionV1p4beta1AnnotateFileResponse)

#endif // OAIGoogleCloudVisionV1p4beta1AnnotateFileResponse_H
