/**
 * Cloud Vision API
 * Integrates Google Vision features, including image labeling, face, logo, and landmark detection, optical character recognition (OCR), and detection of explicit content, into applications.
 *
 * The version of the OpenAPI document: v1p1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudVisionV1p2beta1Symbol.h
 *
 * A single symbol representation.
 */

#ifndef OAIGoogleCloudVisionV1p2beta1Symbol_H
#define OAIGoogleCloudVisionV1p2beta1Symbol_H

#include <QJsonObject>

#include "OAIGoogleCloudVisionV1p2beta1BoundingPoly.h"
#include "OAIGoogleCloudVisionV1p2beta1TextAnnotationTextProperty.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleCloudVisionV1p2beta1BoundingPoly;
class OAIGoogleCloudVisionV1p2beta1TextAnnotationTextProperty;

class OAIGoogleCloudVisionV1p2beta1Symbol : public OAIObject {
public:
    OAIGoogleCloudVisionV1p2beta1Symbol();
    OAIGoogleCloudVisionV1p2beta1Symbol(QString json);
    ~OAIGoogleCloudVisionV1p2beta1Symbol() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGoogleCloudVisionV1p2beta1BoundingPoly getBoundingBox() const;
    void setBoundingBox(const OAIGoogleCloudVisionV1p2beta1BoundingPoly &bounding_box);
    bool is_bounding_box_Set() const;
    bool is_bounding_box_Valid() const;

    float getConfidence() const;
    void setConfidence(const float &confidence);
    bool is_confidence_Set() const;
    bool is_confidence_Valid() const;

    OAIGoogleCloudVisionV1p2beta1TextAnnotationTextProperty getProperty() const;
    void setProperty(const OAIGoogleCloudVisionV1p2beta1TextAnnotationTextProperty &property);
    bool is_property_Set() const;
    bool is_property_Valid() const;

    QString getText() const;
    void setText(const QString &text);
    bool is_text_Set() const;
    bool is_text_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGoogleCloudVisionV1p2beta1BoundingPoly m_bounding_box;
    bool m_bounding_box_isSet;
    bool m_bounding_box_isValid;

    float m_confidence;
    bool m_confidence_isSet;
    bool m_confidence_isValid;

    OAIGoogleCloudVisionV1p2beta1TextAnnotationTextProperty m_property;
    bool m_property_isSet;
    bool m_property_isValid;

    QString m_text;
    bool m_text_isSet;
    bool m_text_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudVisionV1p2beta1Symbol)

#endif // OAIGoogleCloudVisionV1p2beta1Symbol_H
