/**
 * Cloud Vision API
 * Integrates Google Vision features, including image labeling, face, logo, and landmark detection, optical character recognition (OCR), and detection of explicit content, into applications.
 *
 * The version of the OpenAPI document: v1p1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudVisionV1p1beta1TextAnnotationTextProperty.h
 *
 * Additional information detected on the structural component.
 */

#ifndef OAIGoogleCloudVisionV1p1beta1TextAnnotationTextProperty_H
#define OAIGoogleCloudVisionV1p1beta1TextAnnotationTextProperty_H

#include <QJsonObject>

#include "OAIGoogleCloudVisionV1p1beta1TextAnnotationDetectedBreak.h"
#include "OAIGoogleCloudVisionV1p1beta1TextAnnotationDetectedLanguage.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleCloudVisionV1p1beta1TextAnnotationDetectedBreak;
class OAIGoogleCloudVisionV1p1beta1TextAnnotationDetectedLanguage;

class OAIGoogleCloudVisionV1p1beta1TextAnnotationTextProperty : public OAIObject {
public:
    OAIGoogleCloudVisionV1p1beta1TextAnnotationTextProperty();
    OAIGoogleCloudVisionV1p1beta1TextAnnotationTextProperty(QString json);
    ~OAIGoogleCloudVisionV1p1beta1TextAnnotationTextProperty() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGoogleCloudVisionV1p1beta1TextAnnotationDetectedBreak getDetectedBreak() const;
    void setDetectedBreak(const OAIGoogleCloudVisionV1p1beta1TextAnnotationDetectedBreak &detected_break);
    bool is_detected_break_Set() const;
    bool is_detected_break_Valid() const;

    QList<OAIGoogleCloudVisionV1p1beta1TextAnnotationDetectedLanguage> getDetectedLanguages() const;
    void setDetectedLanguages(const QList<OAIGoogleCloudVisionV1p1beta1TextAnnotationDetectedLanguage> &detected_languages);
    bool is_detected_languages_Set() const;
    bool is_detected_languages_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGoogleCloudVisionV1p1beta1TextAnnotationDetectedBreak m_detected_break;
    bool m_detected_break_isSet;
    bool m_detected_break_isValid;

    QList<OAIGoogleCloudVisionV1p1beta1TextAnnotationDetectedLanguage> m_detected_languages;
    bool m_detected_languages_isSet;
    bool m_detected_languages_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudVisionV1p1beta1TextAnnotationTextProperty)

#endif // OAIGoogleCloudVisionV1p1beta1TextAnnotationTextProperty_H
