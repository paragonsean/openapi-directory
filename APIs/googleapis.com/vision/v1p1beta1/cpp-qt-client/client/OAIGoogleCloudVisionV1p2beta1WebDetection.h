/**
 * Cloud Vision API
 * Integrates Google Vision features, including image labeling, face, logo, and landmark detection, optical character recognition (OCR), and detection of explicit content, into applications.
 *
 * The version of the OpenAPI document: v1p1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudVisionV1p2beta1WebDetection.h
 *
 * Relevant information for the image from the Internet.
 */

#ifndef OAIGoogleCloudVisionV1p2beta1WebDetection_H
#define OAIGoogleCloudVisionV1p2beta1WebDetection_H

#include <QJsonObject>

#include "OAIGoogleCloudVisionV1p2beta1WebDetectionWebEntity.h"
#include "OAIGoogleCloudVisionV1p2beta1WebDetectionWebImage.h"
#include "OAIGoogleCloudVisionV1p2beta1WebDetectionWebLabel.h"
#include "OAIGoogleCloudVisionV1p2beta1WebDetectionWebPage.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleCloudVisionV1p2beta1WebDetectionWebLabel;
class OAIGoogleCloudVisionV1p2beta1WebDetectionWebImage;
class OAIGoogleCloudVisionV1p2beta1WebDetectionWebPage;
class OAIGoogleCloudVisionV1p2beta1WebDetectionWebEntity;

class OAIGoogleCloudVisionV1p2beta1WebDetection : public OAIObject {
public:
    OAIGoogleCloudVisionV1p2beta1WebDetection();
    OAIGoogleCloudVisionV1p2beta1WebDetection(QString json);
    ~OAIGoogleCloudVisionV1p2beta1WebDetection() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIGoogleCloudVisionV1p2beta1WebDetectionWebLabel> getBestGuessLabels() const;
    void setBestGuessLabels(const QList<OAIGoogleCloudVisionV1p2beta1WebDetectionWebLabel> &best_guess_labels);
    bool is_best_guess_labels_Set() const;
    bool is_best_guess_labels_Valid() const;

    QList<OAIGoogleCloudVisionV1p2beta1WebDetectionWebImage> getFullMatchingImages() const;
    void setFullMatchingImages(const QList<OAIGoogleCloudVisionV1p2beta1WebDetectionWebImage> &full_matching_images);
    bool is_full_matching_images_Set() const;
    bool is_full_matching_images_Valid() const;

    QList<OAIGoogleCloudVisionV1p2beta1WebDetectionWebPage> getPagesWithMatchingImages() const;
    void setPagesWithMatchingImages(const QList<OAIGoogleCloudVisionV1p2beta1WebDetectionWebPage> &pages_with_matching_images);
    bool is_pages_with_matching_images_Set() const;
    bool is_pages_with_matching_images_Valid() const;

    QList<OAIGoogleCloudVisionV1p2beta1WebDetectionWebImage> getPartialMatchingImages() const;
    void setPartialMatchingImages(const QList<OAIGoogleCloudVisionV1p2beta1WebDetectionWebImage> &partial_matching_images);
    bool is_partial_matching_images_Set() const;
    bool is_partial_matching_images_Valid() const;

    QList<OAIGoogleCloudVisionV1p2beta1WebDetectionWebImage> getVisuallySimilarImages() const;
    void setVisuallySimilarImages(const QList<OAIGoogleCloudVisionV1p2beta1WebDetectionWebImage> &visually_similar_images);
    bool is_visually_similar_images_Set() const;
    bool is_visually_similar_images_Valid() const;

    QList<OAIGoogleCloudVisionV1p2beta1WebDetectionWebEntity> getWebEntities() const;
    void setWebEntities(const QList<OAIGoogleCloudVisionV1p2beta1WebDetectionWebEntity> &web_entities);
    bool is_web_entities_Set() const;
    bool is_web_entities_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIGoogleCloudVisionV1p2beta1WebDetectionWebLabel> m_best_guess_labels;
    bool m_best_guess_labels_isSet;
    bool m_best_guess_labels_isValid;

    QList<OAIGoogleCloudVisionV1p2beta1WebDetectionWebImage> m_full_matching_images;
    bool m_full_matching_images_isSet;
    bool m_full_matching_images_isValid;

    QList<OAIGoogleCloudVisionV1p2beta1WebDetectionWebPage> m_pages_with_matching_images;
    bool m_pages_with_matching_images_isSet;
    bool m_pages_with_matching_images_isValid;

    QList<OAIGoogleCloudVisionV1p2beta1WebDetectionWebImage> m_partial_matching_images;
    bool m_partial_matching_images_isSet;
    bool m_partial_matching_images_isValid;

    QList<OAIGoogleCloudVisionV1p2beta1WebDetectionWebImage> m_visually_similar_images;
    bool m_visually_similar_images_isSet;
    bool m_visually_similar_images_isValid;

    QList<OAIGoogleCloudVisionV1p2beta1WebDetectionWebEntity> m_web_entities;
    bool m_web_entities_isSet;
    bool m_web_entities_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudVisionV1p2beta1WebDetection)

#endif // OAIGoogleCloudVisionV1p2beta1WebDetection_H
