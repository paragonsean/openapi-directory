/**
 * Cloud Vision API
 * Integrates Google Vision features, including image labeling, face, logo, and landmark detection, optical character recognition (OCR), and detection of explicit content, into applications.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudVisionV1p2beta1Word.h
 *
 * A word representation.
 */

#ifndef OAIGoogleCloudVisionV1p2beta1Word_H
#define OAIGoogleCloudVisionV1p2beta1Word_H

#include <QJsonObject>

#include "OAIGoogleCloudVisionV1p2beta1BoundingPoly.h"
#include "OAIGoogleCloudVisionV1p2beta1Symbol.h"
#include "OAIGoogleCloudVisionV1p2beta1TextAnnotationTextProperty.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleCloudVisionV1p2beta1BoundingPoly;
class OAIGoogleCloudVisionV1p2beta1TextAnnotationTextProperty;
class OAIGoogleCloudVisionV1p2beta1Symbol;

class OAIGoogleCloudVisionV1p2beta1Word : public OAIObject {
public:
    OAIGoogleCloudVisionV1p2beta1Word();
    OAIGoogleCloudVisionV1p2beta1Word(QString json);
    ~OAIGoogleCloudVisionV1p2beta1Word() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGoogleCloudVisionV1p2beta1BoundingPoly getBoundingBox() const;
    void setBoundingBox(const OAIGoogleCloudVisionV1p2beta1BoundingPoly &bounding_box);
    bool is_bounding_box_Set() const;
    bool is_bounding_box_Valid() const;

    float getConfidence() const;
    void setConfidence(const float &confidence);
    bool is_confidence_Set() const;
    bool is_confidence_Valid() const;

    OAIGoogleCloudVisionV1p2beta1TextAnnotationTextProperty getProperty() const;
    void setProperty(const OAIGoogleCloudVisionV1p2beta1TextAnnotationTextProperty &property);
    bool is_property_Set() const;
    bool is_property_Valid() const;

    QList<OAIGoogleCloudVisionV1p2beta1Symbol> getSymbols() const;
    void setSymbols(const QList<OAIGoogleCloudVisionV1p2beta1Symbol> &symbols);
    bool is_symbols_Set() const;
    bool is_symbols_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGoogleCloudVisionV1p2beta1BoundingPoly m_bounding_box;
    bool m_bounding_box_isSet;
    bool m_bounding_box_isValid;

    float m_confidence;
    bool m_confidence_isSet;
    bool m_confidence_isValid;

    OAIGoogleCloudVisionV1p2beta1TextAnnotationTextProperty m_property;
    bool m_property_isSet;
    bool m_property_isValid;

    QList<OAIGoogleCloudVisionV1p2beta1Symbol> m_symbols;
    bool m_symbols_isSet;
    bool m_symbols_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudVisionV1p2beta1Word)

#endif // OAIGoogleCloudVisionV1p2beta1Word_H
