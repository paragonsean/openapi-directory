/**
 * Cloud Vision API
 * Integrates Google Vision features, including image labeling, face, logo, and landmark detection, optical character recognition (OCR), and detection of explicit content, into applications.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIListReferenceImagesResponse.h
 *
 * Response message for the &#x60;ListReferenceImages&#x60; method.
 */

#ifndef OAIListReferenceImagesResponse_H
#define OAIListReferenceImagesResponse_H

#include <QJsonObject>

#include "OAIReferenceImage.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIReferenceImage;

class OAIListReferenceImagesResponse : public OAIObject {
public:
    OAIListReferenceImagesResponse();
    OAIListReferenceImagesResponse(QString json);
    ~OAIListReferenceImagesResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getNextPageToken() const;
    void setNextPageToken(const QString &next_page_token);
    bool is_next_page_token_Set() const;
    bool is_next_page_token_Valid() const;

    qint32 getPageSize() const;
    void setPageSize(const qint32 &page_size);
    bool is_page_size_Set() const;
    bool is_page_size_Valid() const;

    QList<OAIReferenceImage> getReferenceImages() const;
    void setReferenceImages(const QList<OAIReferenceImage> &reference_images);
    bool is_reference_images_Set() const;
    bool is_reference_images_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_next_page_token;
    bool m_next_page_token_isSet;
    bool m_next_page_token_isValid;

    qint32 m_page_size;
    bool m_page_size_isSet;
    bool m_page_size_isValid;

    QList<OAIReferenceImage> m_reference_images;
    bool m_reference_images_isSet;
    bool m_reference_images_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIListReferenceImagesResponse)

#endif // OAIListReferenceImagesResponse_H
