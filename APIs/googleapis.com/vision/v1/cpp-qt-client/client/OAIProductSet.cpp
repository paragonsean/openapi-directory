/**
 * Cloud Vision API
 * Integrates Google Vision features, including image labeling, face, logo, and landmark detection, optical character recognition (OCR), and detection of explicit content, into applications.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProductSet.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProductSet::OAIProductSet(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProductSet::OAIProductSet() {
    this->initializeModel();
}

OAIProductSet::~OAIProductSet() {}

void OAIProductSet::initializeModel() {

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_index_error_isSet = false;
    m_index_error_isValid = false;

    m_index_time_isSet = false;
    m_index_time_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAIProductSet::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProductSet::fromJsonObject(QJsonObject json) {

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_index_error_isValid = ::OpenAPI::fromJsonValue(m_index_error, json[QString("indexError")]);
    m_index_error_isSet = !json[QString("indexError")].isNull() && m_index_error_isValid;

    m_index_time_isValid = ::OpenAPI::fromJsonValue(m_index_time, json[QString("indexTime")]);
    m_index_time_isSet = !json[QString("indexTime")].isNull() && m_index_time_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;
}

QString OAIProductSet::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProductSet::asJsonObject() const {
    QJsonObject obj;
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_index_error.isSet()) {
        obj.insert(QString("indexError"), ::OpenAPI::toJsonValue(m_index_error));
    }
    if (m_index_time_isSet) {
        obj.insert(QString("indexTime"), ::OpenAPI::toJsonValue(m_index_time));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

QString OAIProductSet::getDisplayName() const {
    return m_display_name;
}
void OAIProductSet::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIProductSet::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIProductSet::is_display_name_Valid() const{
    return m_display_name_isValid;
}

OAIStatus OAIProductSet::getIndexError() const {
    return m_index_error;
}
void OAIProductSet::setIndexError(const OAIStatus &index_error) {
    m_index_error = index_error;
    m_index_error_isSet = true;
}

bool OAIProductSet::is_index_error_Set() const{
    return m_index_error_isSet;
}

bool OAIProductSet::is_index_error_Valid() const{
    return m_index_error_isValid;
}

QString OAIProductSet::getIndexTime() const {
    return m_index_time;
}
void OAIProductSet::setIndexTime(const QString &index_time) {
    m_index_time = index_time;
    m_index_time_isSet = true;
}

bool OAIProductSet::is_index_time_Set() const{
    return m_index_time_isSet;
}

bool OAIProductSet::is_index_time_Valid() const{
    return m_index_time_isValid;
}

QString OAIProductSet::getName() const {
    return m_name;
}
void OAIProductSet::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIProductSet::is_name_Set() const{
    return m_name_isSet;
}

bool OAIProductSet::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIProductSet::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_index_error.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_index_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProductSet::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
