/**
 * Cloud Vision API
 * Integrates Google Vision features, including image labeling, face, logo, and landmark detection, optical character recognition (OCR), and detection of explicit content, into applications.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAnnotateFileRequest.h
 *
 * A request to annotate one single file, e.g. a PDF, TIFF or GIF file.
 */

#ifndef OAIAnnotateFileRequest_H
#define OAIAnnotateFileRequest_H

#include <QJsonObject>

#include "OAIFeature.h"
#include "OAIImageContext.h"
#include "OAIInputConfig.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIFeature;
class OAIImageContext;
class OAIInputConfig;

class OAIAnnotateFileRequest : public OAIObject {
public:
    OAIAnnotateFileRequest();
    OAIAnnotateFileRequest(QString json);
    ~OAIAnnotateFileRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIFeature> getFeatures() const;
    void setFeatures(const QList<OAIFeature> &features);
    bool is_features_Set() const;
    bool is_features_Valid() const;

    OAIImageContext getImageContext() const;
    void setImageContext(const OAIImageContext &image_context);
    bool is_image_context_Set() const;
    bool is_image_context_Valid() const;

    OAIInputConfig getInputConfig() const;
    void setInputConfig(const OAIInputConfig &input_config);
    bool is_input_config_Set() const;
    bool is_input_config_Valid() const;

    QList<qint32> getPages() const;
    void setPages(const QList<qint32> &pages);
    bool is_pages_Set() const;
    bool is_pages_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIFeature> m_features;
    bool m_features_isSet;
    bool m_features_isValid;

    OAIImageContext m_image_context;
    bool m_image_context_isSet;
    bool m_image_context_isValid;

    OAIInputConfig m_input_config;
    bool m_input_config_isSet;
    bool m_input_config_isValid;

    QList<qint32> m_pages;
    bool m_pages_isSet;
    bool m_pages_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAnnotateFileRequest)

#endif // OAIAnnotateFileRequest_H
