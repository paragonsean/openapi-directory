/**
 * Cloud Vision API
 * Integrates Google Vision features, including image labeling, face, logo, and landmark detection, optical character recognition (OCR), and detection of explicit content, into applications.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBatchAnnotateImagesResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBatchAnnotateImagesResponse::OAIBatchAnnotateImagesResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBatchAnnotateImagesResponse::OAIBatchAnnotateImagesResponse() {
    this->initializeModel();
}

OAIBatchAnnotateImagesResponse::~OAIBatchAnnotateImagesResponse() {}

void OAIBatchAnnotateImagesResponse::initializeModel() {

    m_responses_isSet = false;
    m_responses_isValid = false;
}

void OAIBatchAnnotateImagesResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBatchAnnotateImagesResponse::fromJsonObject(QJsonObject json) {

    m_responses_isValid = ::OpenAPI::fromJsonValue(m_responses, json[QString("responses")]);
    m_responses_isSet = !json[QString("responses")].isNull() && m_responses_isValid;
}

QString OAIBatchAnnotateImagesResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBatchAnnotateImagesResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_responses.size() > 0) {
        obj.insert(QString("responses"), ::OpenAPI::toJsonValue(m_responses));
    }
    return obj;
}

QList<OAIAnnotateImageResponse> OAIBatchAnnotateImagesResponse::getResponses() const {
    return m_responses;
}
void OAIBatchAnnotateImagesResponse::setResponses(const QList<OAIAnnotateImageResponse> &responses) {
    m_responses = responses;
    m_responses_isSet = true;
}

bool OAIBatchAnnotateImagesResponse::is_responses_Set() const{
    return m_responses_isSet;
}

bool OAIBatchAnnotateImagesResponse::is_responses_Valid() const{
    return m_responses_isValid;
}

bool OAIBatchAnnotateImagesResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_responses.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBatchAnnotateImagesResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
