/**
 * Cloud Vision API
 * Integrates Google Vision features, including image labeling, face, logo, and landmark detection, optical character recognition (OCR), and detection of explicit content, into applications.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudVisionV1p2beta1AsyncAnnotateFileResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudVisionV1p2beta1AsyncAnnotateFileResponse::OAIGoogleCloudVisionV1p2beta1AsyncAnnotateFileResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudVisionV1p2beta1AsyncAnnotateFileResponse::OAIGoogleCloudVisionV1p2beta1AsyncAnnotateFileResponse() {
    this->initializeModel();
}

OAIGoogleCloudVisionV1p2beta1AsyncAnnotateFileResponse::~OAIGoogleCloudVisionV1p2beta1AsyncAnnotateFileResponse() {}

void OAIGoogleCloudVisionV1p2beta1AsyncAnnotateFileResponse::initializeModel() {

    m_output_config_isSet = false;
    m_output_config_isValid = false;
}

void OAIGoogleCloudVisionV1p2beta1AsyncAnnotateFileResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudVisionV1p2beta1AsyncAnnotateFileResponse::fromJsonObject(QJsonObject json) {

    m_output_config_isValid = ::OpenAPI::fromJsonValue(m_output_config, json[QString("outputConfig")]);
    m_output_config_isSet = !json[QString("outputConfig")].isNull() && m_output_config_isValid;
}

QString OAIGoogleCloudVisionV1p2beta1AsyncAnnotateFileResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudVisionV1p2beta1AsyncAnnotateFileResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_output_config.isSet()) {
        obj.insert(QString("outputConfig"), ::OpenAPI::toJsonValue(m_output_config));
    }
    return obj;
}

OAIGoogleCloudVisionV1p2beta1OutputConfig OAIGoogleCloudVisionV1p2beta1AsyncAnnotateFileResponse::getOutputConfig() const {
    return m_output_config;
}
void OAIGoogleCloudVisionV1p2beta1AsyncAnnotateFileResponse::setOutputConfig(const OAIGoogleCloudVisionV1p2beta1OutputConfig &output_config) {
    m_output_config = output_config;
    m_output_config_isSet = true;
}

bool OAIGoogleCloudVisionV1p2beta1AsyncAnnotateFileResponse::is_output_config_Set() const{
    return m_output_config_isSet;
}

bool OAIGoogleCloudVisionV1p2beta1AsyncAnnotateFileResponse::is_output_config_Valid() const{
    return m_output_config_isValid;
}

bool OAIGoogleCloudVisionV1p2beta1AsyncAnnotateFileResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_output_config.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudVisionV1p2beta1AsyncAnnotateFileResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
