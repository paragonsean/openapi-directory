/**
 * Cloud Vision API
 * Integrates Google Vision features, including image labeling, face, logo, and landmark detection, optical character recognition (OCR), and detection of explicit content, into applications.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Status from './Status';

/**
 * The ProductSet model module.
 * @module model/ProductSet
 * @version v1
 */
class ProductSet {
    /**
     * Constructs a new <code>ProductSet</code>.
     * A ProductSet contains Products. A ProductSet can contain a maximum of 1 million reference images. If the limit is exceeded, periodic indexing will fail.
     * @alias module:model/ProductSet
     */
    constructor() { 
        
        ProductSet.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ProductSet</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProductSet} obj Optional instance to populate.
     * @return {module:model/ProductSet} The populated <code>ProductSet</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProductSet();

            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('indexError')) {
                obj['indexError'] = Status.constructFromObject(data['indexError']);
            }
            if (data.hasOwnProperty('indexTime')) {
                obj['indexTime'] = ApiClient.convertToType(data['indexTime'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProductSet</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProductSet</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // validate the optional field `indexError`
        if (data['indexError']) { // data not null
          Status.validateJSON(data['indexError']);
        }
        // ensure the json data is a string
        if (data['indexTime'] && !(typeof data['indexTime'] === 'string' || data['indexTime'] instanceof String)) {
            throw new Error("Expected the field `indexTime` to be a primitive type in the JSON string but got " + data['indexTime']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}



/**
 * The user-provided name for this ProductSet. Must not be empty. Must be at most 4096 characters long.
 * @member {String} displayName
 */
ProductSet.prototype['displayName'] = undefined;

/**
 * @member {module:model/Status} indexError
 */
ProductSet.prototype['indexError'] = undefined;

/**
 * Output only. The time at which this ProductSet was last indexed. Query results will reflect all updates before this time. If this ProductSet has never been indexed, this timestamp is the default value \"1970-01-01T00:00:00Z\". This field is ignored when creating a ProductSet.
 * @member {String} indexTime
 */
ProductSet.prototype['indexTime'] = undefined;

/**
 * The resource name of the ProductSet. Format is: `projects/PROJECT_ID/locations/LOC_ID/productSets/PRODUCT_SET_ID`. This field is ignored when creating a ProductSet.
 * @member {String} name
 */
ProductSet.prototype['name'] = undefined;






export default ProductSet;

