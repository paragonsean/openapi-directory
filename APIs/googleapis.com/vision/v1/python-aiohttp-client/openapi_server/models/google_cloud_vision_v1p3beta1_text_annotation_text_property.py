# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_vision_v1p3beta1_text_annotation_detected_break import GoogleCloudVisionV1p3beta1TextAnnotationDetectedBreak
from openapi_server.models.google_cloud_vision_v1p3beta1_text_annotation_detected_language import GoogleCloudVisionV1p3beta1TextAnnotationDetectedLanguage
from openapi_server import util


class GoogleCloudVisionV1p3beta1TextAnnotationTextProperty(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, detected_break: GoogleCloudVisionV1p3beta1TextAnnotationDetectedBreak=None, detected_languages: List[GoogleCloudVisionV1p3beta1TextAnnotationDetectedLanguage]=None):
        """GoogleCloudVisionV1p3beta1TextAnnotationTextProperty - a model defined in OpenAPI

        :param detected_break: The detected_break of this GoogleCloudVisionV1p3beta1TextAnnotationTextProperty.
        :param detected_languages: The detected_languages of this GoogleCloudVisionV1p3beta1TextAnnotationTextProperty.
        """
        self.openapi_types = {
            'detected_break': GoogleCloudVisionV1p3beta1TextAnnotationDetectedBreak,
            'detected_languages': List[GoogleCloudVisionV1p3beta1TextAnnotationDetectedLanguage]
        }

        self.attribute_map = {
            'detected_break': 'detectedBreak',
            'detected_languages': 'detectedLanguages'
        }

        self._detected_break = detected_break
        self._detected_languages = detected_languages

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudVisionV1p3beta1TextAnnotationTextProperty':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudVisionV1p3beta1TextAnnotationTextProperty of this GoogleCloudVisionV1p3beta1TextAnnotationTextProperty.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def detected_break(self):
        """Gets the detected_break of this GoogleCloudVisionV1p3beta1TextAnnotationTextProperty.


        :return: The detected_break of this GoogleCloudVisionV1p3beta1TextAnnotationTextProperty.
        :rtype: GoogleCloudVisionV1p3beta1TextAnnotationDetectedBreak
        """
        return self._detected_break

    @detected_break.setter
    def detected_break(self, detected_break):
        """Sets the detected_break of this GoogleCloudVisionV1p3beta1TextAnnotationTextProperty.


        :param detected_break: The detected_break of this GoogleCloudVisionV1p3beta1TextAnnotationTextProperty.
        :type detected_break: GoogleCloudVisionV1p3beta1TextAnnotationDetectedBreak
        """

        self._detected_break = detected_break

    @property
    def detected_languages(self):
        """Gets the detected_languages of this GoogleCloudVisionV1p3beta1TextAnnotationTextProperty.

        A list of detected languages together with confidence.

        :return: The detected_languages of this GoogleCloudVisionV1p3beta1TextAnnotationTextProperty.
        :rtype: List[GoogleCloudVisionV1p3beta1TextAnnotationDetectedLanguage]
        """
        return self._detected_languages

    @detected_languages.setter
    def detected_languages(self, detected_languages):
        """Sets the detected_languages of this GoogleCloudVisionV1p3beta1TextAnnotationTextProperty.

        A list of detected languages together with confidence.

        :param detected_languages: The detected_languages of this GoogleCloudVisionV1p3beta1TextAnnotationTextProperty.
        :type detected_languages: List[GoogleCloudVisionV1p3beta1TextAnnotationDetectedLanguage]
        """

        self._detected_languages = detected_languages
