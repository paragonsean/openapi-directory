# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.feature import Feature
from openapi_server.models.image import Image
from openapi_server.models.image_context import ImageContext
from openapi_server import util


class AnnotateImageRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, features: List[Feature]=None, image: Image=None, image_context: ImageContext=None):
        """AnnotateImageRequest - a model defined in OpenAPI

        :param features: The features of this AnnotateImageRequest.
        :param image: The image of this AnnotateImageRequest.
        :param image_context: The image_context of this AnnotateImageRequest.
        """
        self.openapi_types = {
            'features': List[Feature],
            'image': Image,
            'image_context': ImageContext
        }

        self.attribute_map = {
            'features': 'features',
            'image': 'image',
            'image_context': 'imageContext'
        }

        self._features = features
        self._image = image
        self._image_context = image_context

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AnnotateImageRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AnnotateImageRequest of this AnnotateImageRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def features(self):
        """Gets the features of this AnnotateImageRequest.

        Requested features.

        :return: The features of this AnnotateImageRequest.
        :rtype: List[Feature]
        """
        return self._features

    @features.setter
    def features(self, features):
        """Sets the features of this AnnotateImageRequest.

        Requested features.

        :param features: The features of this AnnotateImageRequest.
        :type features: List[Feature]
        """

        self._features = features

    @property
    def image(self):
        """Gets the image of this AnnotateImageRequest.


        :return: The image of this AnnotateImageRequest.
        :rtype: Image
        """
        return self._image

    @image.setter
    def image(self, image):
        """Sets the image of this AnnotateImageRequest.


        :param image: The image of this AnnotateImageRequest.
        :type image: Image
        """

        self._image = image

    @property
    def image_context(self):
        """Gets the image_context of this AnnotateImageRequest.


        :return: The image_context of this AnnotateImageRequest.
        :rtype: ImageContext
        """
        return self._image_context

    @image_context.setter
    def image_context(self, image_context):
        """Sets the image_context of this AnnotateImageRequest.


        :param image_context: The image_context of this AnnotateImageRequest.
        :type image_context: ImageContext
        """

        self._image_context = image_context
