# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AddProductToProductSetRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, product: str=None):
        """AddProductToProductSetRequest - a model defined in OpenAPI

        :param product: The product of this AddProductToProductSetRequest.
        """
        self.openapi_types = {
            'product': str
        }

        self.attribute_map = {
            'product': 'product'
        }

        self._product = product

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AddProductToProductSetRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AddProductToProductSetRequest of this AddProductToProductSetRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def product(self):
        """Gets the product of this AddProductToProductSetRequest.

        Required. The resource name for the Product to be added to this ProductSet. Format is: `projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID`

        :return: The product of this AddProductToProductSetRequest.
        :rtype: str
        """
        return self._product

    @product.setter
    def product(self, product):
        """Sets the product of this AddProductToProductSetRequest.

        Required. The resource name for the Product to be added to this ProductSet. Format is: `projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID`

        :param product: The product of this AddProductToProductSetRequest.
        :type product: str
        """

        self._product = product
