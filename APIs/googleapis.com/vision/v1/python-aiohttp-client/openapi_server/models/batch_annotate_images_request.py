# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.annotate_image_request import AnnotateImageRequest
from openapi_server import util


class BatchAnnotateImagesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, labels: Dict[str, str]=None, parent: str=None, requests: List[AnnotateImageRequest]=None):
        """BatchAnnotateImagesRequest - a model defined in OpenAPI

        :param labels: The labels of this BatchAnnotateImagesRequest.
        :param parent: The parent of this BatchAnnotateImagesRequest.
        :param requests: The requests of this BatchAnnotateImagesRequest.
        """
        self.openapi_types = {
            'labels': Dict[str, str],
            'parent': str,
            'requests': List[AnnotateImageRequest]
        }

        self.attribute_map = {
            'labels': 'labels',
            'parent': 'parent',
            'requests': 'requests'
        }

        self._labels = labels
        self._parent = parent
        self._requests = requests

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BatchAnnotateImagesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BatchAnnotateImagesRequest of this BatchAnnotateImagesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def labels(self):
        """Gets the labels of this BatchAnnotateImagesRequest.

        Optional. The labels with user-defined metadata for the request. Label keys and values can be no longer than 63 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. Label values are optional. Label keys must start with a letter.

        :return: The labels of this BatchAnnotateImagesRequest.
        :rtype: Dict[str, str]
        """
        return self._labels

    @labels.setter
    def labels(self, labels):
        """Sets the labels of this BatchAnnotateImagesRequest.

        Optional. The labels with user-defined metadata for the request. Label keys and values can be no longer than 63 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. Label values are optional. Label keys must start with a letter.

        :param labels: The labels of this BatchAnnotateImagesRequest.
        :type labels: Dict[str, str]
        """

        self._labels = labels

    @property
    def parent(self):
        """Gets the parent of this BatchAnnotateImagesRequest.

        Optional. Target project and location to make a call. Format: `projects/{project-id}/locations/{location-id}`. If no parent is specified, a region will be chosen automatically. Supported location-ids: `us`: USA country only, `asia`: East asia areas, like Japan, Taiwan, `eu`: The European Union. Example: `projects/project-A/locations/eu`.

        :return: The parent of this BatchAnnotateImagesRequest.
        :rtype: str
        """
        return self._parent

    @parent.setter
    def parent(self, parent):
        """Sets the parent of this BatchAnnotateImagesRequest.

        Optional. Target project and location to make a call. Format: `projects/{project-id}/locations/{location-id}`. If no parent is specified, a region will be chosen automatically. Supported location-ids: `us`: USA country only, `asia`: East asia areas, like Japan, Taiwan, `eu`: The European Union. Example: `projects/project-A/locations/eu`.

        :param parent: The parent of this BatchAnnotateImagesRequest.
        :type parent: str
        """

        self._parent = parent

    @property
    def requests(self):
        """Gets the requests of this BatchAnnotateImagesRequest.

        Required. Individual image annotation requests for this batch.

        :return: The requests of this BatchAnnotateImagesRequest.
        :rtype: List[AnnotateImageRequest]
        """
        return self._requests

    @requests.setter
    def requests(self, requests):
        """Sets the requests of this BatchAnnotateImagesRequest.

        Required. Individual image annotation requests for this batch.

        :param requests: The requests of this BatchAnnotateImagesRequest.
        :type requests: List[AnnotateImageRequest]
        """

        self._requests = requests
