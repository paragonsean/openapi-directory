# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.crop_hints_params import CropHintsParams
from openapi_server.models.lat_long_rect import LatLongRect
from openapi_server.models.product_search_params import ProductSearchParams
from openapi_server.models.text_detection_params import TextDetectionParams
from openapi_server.models.web_detection_params import WebDetectionParams
from openapi_server import util


class ImageContext(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, crop_hints_params: CropHintsParams=None, language_hints: List[str]=None, lat_long_rect: LatLongRect=None, product_search_params: ProductSearchParams=None, text_detection_params: TextDetectionParams=None, web_detection_params: WebDetectionParams=None):
        """ImageContext - a model defined in OpenAPI

        :param crop_hints_params: The crop_hints_params of this ImageContext.
        :param language_hints: The language_hints of this ImageContext.
        :param lat_long_rect: The lat_long_rect of this ImageContext.
        :param product_search_params: The product_search_params of this ImageContext.
        :param text_detection_params: The text_detection_params of this ImageContext.
        :param web_detection_params: The web_detection_params of this ImageContext.
        """
        self.openapi_types = {
            'crop_hints_params': CropHintsParams,
            'language_hints': List[str],
            'lat_long_rect': LatLongRect,
            'product_search_params': ProductSearchParams,
            'text_detection_params': TextDetectionParams,
            'web_detection_params': WebDetectionParams
        }

        self.attribute_map = {
            'crop_hints_params': 'cropHintsParams',
            'language_hints': 'languageHints',
            'lat_long_rect': 'latLongRect',
            'product_search_params': 'productSearchParams',
            'text_detection_params': 'textDetectionParams',
            'web_detection_params': 'webDetectionParams'
        }

        self._crop_hints_params = crop_hints_params
        self._language_hints = language_hints
        self._lat_long_rect = lat_long_rect
        self._product_search_params = product_search_params
        self._text_detection_params = text_detection_params
        self._web_detection_params = web_detection_params

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ImageContext':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ImageContext of this ImageContext.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def crop_hints_params(self):
        """Gets the crop_hints_params of this ImageContext.


        :return: The crop_hints_params of this ImageContext.
        :rtype: CropHintsParams
        """
        return self._crop_hints_params

    @crop_hints_params.setter
    def crop_hints_params(self, crop_hints_params):
        """Sets the crop_hints_params of this ImageContext.


        :param crop_hints_params: The crop_hints_params of this ImageContext.
        :type crop_hints_params: CropHintsParams
        """

        self._crop_hints_params = crop_hints_params

    @property
    def language_hints(self):
        """Gets the language_hints of this ImageContext.

        List of languages to use for TEXT_DETECTION. In most cases, an empty value yields the best results since it enables automatic language detection. For languages based on the Latin alphabet, setting `language_hints` is not needed. In rare cases, when the language of the text in the image is known, setting a hint will help get better results (although it will be a significant hindrance if the hint is wrong). Text detection returns an error if one or more of the specified languages is not one of the [supported languages](https://cloud.google.com/vision/docs/languages).

        :return: The language_hints of this ImageContext.
        :rtype: List[str]
        """
        return self._language_hints

    @language_hints.setter
    def language_hints(self, language_hints):
        """Sets the language_hints of this ImageContext.

        List of languages to use for TEXT_DETECTION. In most cases, an empty value yields the best results since it enables automatic language detection. For languages based on the Latin alphabet, setting `language_hints` is not needed. In rare cases, when the language of the text in the image is known, setting a hint will help get better results (although it will be a significant hindrance if the hint is wrong). Text detection returns an error if one or more of the specified languages is not one of the [supported languages](https://cloud.google.com/vision/docs/languages).

        :param language_hints: The language_hints of this ImageContext.
        :type language_hints: List[str]
        """

        self._language_hints = language_hints

    @property
    def lat_long_rect(self):
        """Gets the lat_long_rect of this ImageContext.


        :return: The lat_long_rect of this ImageContext.
        :rtype: LatLongRect
        """
        return self._lat_long_rect

    @lat_long_rect.setter
    def lat_long_rect(self, lat_long_rect):
        """Sets the lat_long_rect of this ImageContext.


        :param lat_long_rect: The lat_long_rect of this ImageContext.
        :type lat_long_rect: LatLongRect
        """

        self._lat_long_rect = lat_long_rect

    @property
    def product_search_params(self):
        """Gets the product_search_params of this ImageContext.


        :return: The product_search_params of this ImageContext.
        :rtype: ProductSearchParams
        """
        return self._product_search_params

    @product_search_params.setter
    def product_search_params(self, product_search_params):
        """Sets the product_search_params of this ImageContext.


        :param product_search_params: The product_search_params of this ImageContext.
        :type product_search_params: ProductSearchParams
        """

        self._product_search_params = product_search_params

    @property
    def text_detection_params(self):
        """Gets the text_detection_params of this ImageContext.


        :return: The text_detection_params of this ImageContext.
        :rtype: TextDetectionParams
        """
        return self._text_detection_params

    @text_detection_params.setter
    def text_detection_params(self, text_detection_params):
        """Sets the text_detection_params of this ImageContext.


        :param text_detection_params: The text_detection_params of this ImageContext.
        :type text_detection_params: TextDetectionParams
        """

        self._text_detection_params = text_detection_params

    @property
    def web_detection_params(self):
        """Gets the web_detection_params of this ImageContext.


        :return: The web_detection_params of this ImageContext.
        :rtype: WebDetectionParams
        """
        return self._web_detection_params

    @web_detection_params.setter
    def web_detection_params(self, web_detection_params):
        """Sets the web_detection_params of this ImageContext.


        :param web_detection_params: The web_detection_params of this ImageContext.
        :type web_detection_params: WebDetectionParams
        """

        self._web_detection_params = web_detection_params
