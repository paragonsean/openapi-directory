# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class WebDetectionParams(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, include_geo_results: bool=None):
        """WebDetectionParams - a model defined in OpenAPI

        :param include_geo_results: The include_geo_results of this WebDetectionParams.
        """
        self.openapi_types = {
            'include_geo_results': bool
        }

        self.attribute_map = {
            'include_geo_results': 'includeGeoResults'
        }

        self._include_geo_results = include_geo_results

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WebDetectionParams':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The WebDetectionParams of this WebDetectionParams.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def include_geo_results(self):
        """Gets the include_geo_results of this WebDetectionParams.

        This field has no effect on results.

        :return: The include_geo_results of this WebDetectionParams.
        :rtype: bool
        """
        return self._include_geo_results

    @include_geo_results.setter
    def include_geo_results(self, include_geo_results):
        """Sets the include_geo_results of this WebDetectionParams.

        This field has no effect on results.

        :param include_geo_results: The include_geo_results of this WebDetectionParams.
        :type include_geo_results: bool
        """

        self._include_geo_results = include_geo_results
