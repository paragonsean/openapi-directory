/**
 * Network Services API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EndpointMatcher from './EndpointMatcher';
import TrafficPortSelector from './TrafficPortSelector';

/**
 * The EndpointPolicy model module.
 * @module model/EndpointPolicy
 * @version v1
 */
class EndpointPolicy {
    /**
     * Constructs a new <code>EndpointPolicy</code>.
     * EndpointPolicy is a resource that helps apply desired configuration on the endpoints that match specific criteria. For example, this resource can be used to apply \&quot;authentication config\&quot; an all endpoints that serve on port 8080.
     * @alias module:model/EndpointPolicy
     */
    constructor() { 
        
        EndpointPolicy.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EndpointPolicy</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EndpointPolicy} obj Optional instance to populate.
     * @return {module:model/EndpointPolicy} The populated <code>EndpointPolicy</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EndpointPolicy();

            if (data.hasOwnProperty('authorizationPolicy')) {
                obj['authorizationPolicy'] = ApiClient.convertToType(data['authorizationPolicy'], 'String');
            }
            if (data.hasOwnProperty('clientTlsPolicy')) {
                obj['clientTlsPolicy'] = ApiClient.convertToType(data['clientTlsPolicy'], 'String');
            }
            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('endpointMatcher')) {
                obj['endpointMatcher'] = EndpointMatcher.constructFromObject(data['endpointMatcher']);
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ApiClient.convertToType(data['labels'], {'String': 'String'});
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('serverTlsPolicy')) {
                obj['serverTlsPolicy'] = ApiClient.convertToType(data['serverTlsPolicy'], 'String');
            }
            if (data.hasOwnProperty('trafficPortSelector')) {
                obj['trafficPortSelector'] = TrafficPortSelector.constructFromObject(data['trafficPortSelector']);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('updateTime')) {
                obj['updateTime'] = ApiClient.convertToType(data['updateTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EndpointPolicy</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EndpointPolicy</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['authorizationPolicy'] && !(typeof data['authorizationPolicy'] === 'string' || data['authorizationPolicy'] instanceof String)) {
            throw new Error("Expected the field `authorizationPolicy` to be a primitive type in the JSON string but got " + data['authorizationPolicy']);
        }
        // ensure the json data is a string
        if (data['clientTlsPolicy'] && !(typeof data['clientTlsPolicy'] === 'string' || data['clientTlsPolicy'] instanceof String)) {
            throw new Error("Expected the field `clientTlsPolicy` to be a primitive type in the JSON string but got " + data['clientTlsPolicy']);
        }
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // validate the optional field `endpointMatcher`
        if (data['endpointMatcher']) { // data not null
          EndpointMatcher.validateJSON(data['endpointMatcher']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['serverTlsPolicy'] && !(typeof data['serverTlsPolicy'] === 'string' || data['serverTlsPolicy'] instanceof String)) {
            throw new Error("Expected the field `serverTlsPolicy` to be a primitive type in the JSON string but got " + data['serverTlsPolicy']);
        }
        // validate the optional field `trafficPortSelector`
        if (data['trafficPortSelector']) { // data not null
          TrafficPortSelector.validateJSON(data['trafficPortSelector']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['updateTime'] && !(typeof data['updateTime'] === 'string' || data['updateTime'] instanceof String)) {
            throw new Error("Expected the field `updateTime` to be a primitive type in the JSON string but got " + data['updateTime']);
        }

        return true;
    }


}



/**
 * Optional. This field specifies the URL of AuthorizationPolicy resource that applies authorization policies to the inbound traffic at the matched endpoints. Refer to Authorization. If this field is not specified, authorization is disabled(no authz checks) for this endpoint.
 * @member {String} authorizationPolicy
 */
EndpointPolicy.prototype['authorizationPolicy'] = undefined;

/**
 * Optional. A URL referring to a ClientTlsPolicy resource. ClientTlsPolicy can be set to specify the authentication for traffic from the proxy to the actual endpoints. More specifically, it is applied to the outgoing traffic from the proxy to the endpoint. This is typically used for sidecar model where the proxy identifies itself as endpoint to the control plane, with the connection between sidecar and endpoint requiring authentication. If this field is not set, authentication is disabled(open). Applicable only when EndpointPolicyType is SIDECAR_PROXY.
 * @member {String} clientTlsPolicy
 */
EndpointPolicy.prototype['clientTlsPolicy'] = undefined;

/**
 * Output only. The timestamp when the resource was created.
 * @member {String} createTime
 */
EndpointPolicy.prototype['createTime'] = undefined;

/**
 * Optional. A free-text description of the resource. Max length 1024 characters.
 * @member {String} description
 */
EndpointPolicy.prototype['description'] = undefined;

/**
 * @member {module:model/EndpointMatcher} endpointMatcher
 */
EndpointPolicy.prototype['endpointMatcher'] = undefined;

/**
 * Optional. Set of label tags associated with the EndpointPolicy resource.
 * @member {Object.<String, String>} labels
 */
EndpointPolicy.prototype['labels'] = undefined;

/**
 * Required. Name of the EndpointPolicy resource. It matches pattern `projects/{project}/locations/global/endpointPolicies/{endpoint_policy}`.
 * @member {String} name
 */
EndpointPolicy.prototype['name'] = undefined;

/**
 * Optional. A URL referring to ServerTlsPolicy resource. ServerTlsPolicy is used to determine the authentication policy to be applied to terminate the inbound traffic at the identified backends. If this field is not set, authentication is disabled(open) for this endpoint.
 * @member {String} serverTlsPolicy
 */
EndpointPolicy.prototype['serverTlsPolicy'] = undefined;

/**
 * @member {module:model/TrafficPortSelector} trafficPortSelector
 */
EndpointPolicy.prototype['trafficPortSelector'] = undefined;

/**
 * Required. The type of endpoint policy. This is primarily used to validate the configuration.
 * @member {module:model/EndpointPolicy.TypeEnum} type
 */
EndpointPolicy.prototype['type'] = undefined;

/**
 * Output only. The timestamp when the resource was updated.
 * @member {String} updateTime
 */
EndpointPolicy.prototype['updateTime'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
EndpointPolicy['TypeEnum'] = {

    /**
     * value: "ENDPOINT_POLICY_TYPE_UNSPECIFIED"
     * @const
     */
    "ENDPOINT_POLICY_TYPE_UNSPECIFIED": "ENDPOINT_POLICY_TYPE_UNSPECIFIED",

    /**
     * value: "SIDECAR_PROXY"
     * @const
     */
    "SIDECAR_PROXY": "SIDECAR_PROXY",

    /**
     * value: "GRPC_SERVER"
     * @const
     */
    "GRPC_SERVER": "GRPC_SERVER"
};



export default EndpointPolicy;

