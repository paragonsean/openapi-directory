/**
 * Network Services API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TlsRouteRouteMatch model module.
 * @module model/TlsRouteRouteMatch
 * @version v1
 */
class TlsRouteRouteMatch {
    /**
     * Constructs a new <code>TlsRouteRouteMatch</code>.
     * RouteMatch defines the predicate used to match requests to a given action. Multiple match types are \&quot;AND\&quot;ed for evaluation. If no routeMatch field is specified, this rule will unconditionally match traffic.
     * @alias module:model/TlsRouteRouteMatch
     */
    constructor() { 
        
        TlsRouteRouteMatch.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TlsRouteRouteMatch</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TlsRouteRouteMatch} obj Optional instance to populate.
     * @return {module:model/TlsRouteRouteMatch} The populated <code>TlsRouteRouteMatch</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TlsRouteRouteMatch();

            if (data.hasOwnProperty('alpn')) {
                obj['alpn'] = ApiClient.convertToType(data['alpn'], ['String']);
            }
            if (data.hasOwnProperty('sniHost')) {
                obj['sniHost'] = ApiClient.convertToType(data['sniHost'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TlsRouteRouteMatch</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TlsRouteRouteMatch</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['alpn'])) {
            throw new Error("Expected the field `alpn` to be an array in the JSON data but got " + data['alpn']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['sniHost'])) {
            throw new Error("Expected the field `sniHost` to be an array in the JSON data but got " + data['sniHost']);
        }

        return true;
    }


}



/**
 * Optional. ALPN (Application-Layer Protocol Negotiation) to match against. Examples: \"http/1.1\", \"h2\". At least one of sni_host and alpn is required. Up to 5 alpns across all matches can be set.
 * @member {Array.<String>} alpn
 */
TlsRouteRouteMatch.prototype['alpn'] = undefined;

/**
 * Optional. SNI (server name indicator) to match against. SNI will be matched against all wildcard domains, i.e. `www.example.com` will be first matched against `www.example.com`, then `*.example.com`, then `*.com.` Partial wildcards are not supported, and values like *w.example.com are invalid. At least one of sni_host and alpn is required. Up to 5 sni hosts across all matches can be set.
 * @member {Array.<String>} sniHost
 */
TlsRouteRouteMatch.prototype['sniHost'] = undefined;






export default TlsRouteRouteMatch;

