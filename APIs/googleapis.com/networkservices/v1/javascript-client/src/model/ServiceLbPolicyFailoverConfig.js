/**
 * Network Services API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ServiceLbPolicyFailoverConfig model module.
 * @module model/ServiceLbPolicyFailoverConfig
 * @version v1
 */
class ServiceLbPolicyFailoverConfig {
    /**
     * Constructs a new <code>ServiceLbPolicyFailoverConfig</code>.
     * Option to specify health based failover behavior. This is not related to Network load balancer FailoverPolicy.
     * @alias module:model/ServiceLbPolicyFailoverConfig
     */
    constructor() { 
        
        ServiceLbPolicyFailoverConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ServiceLbPolicyFailoverConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ServiceLbPolicyFailoverConfig} obj Optional instance to populate.
     * @return {module:model/ServiceLbPolicyFailoverConfig} The populated <code>ServiceLbPolicyFailoverConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ServiceLbPolicyFailoverConfig();

            if (data.hasOwnProperty('failoverHealthThreshold')) {
                obj['failoverHealthThreshold'] = ApiClient.convertToType(data['failoverHealthThreshold'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ServiceLbPolicyFailoverConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ServiceLbPolicyFailoverConfig</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * Optional. The percentage threshold that a load balancer will begin to send traffic to failover backends. If the percentage of endpoints in a MIG/NEG is smaller than this value, traffic would be sent to failover backends if possible. This field should be set to a value between 1 and 99. The default value is 50 for Global external HTTP(S) load balancer (classic) and Proxyless service mesh, and 70 for others.
 * @member {Number} failoverHealthThreshold
 */
ServiceLbPolicyFailoverConfig.prototype['failoverHealthThreshold'] = undefined;






export default ServiceLbPolicyFailoverConfig;

