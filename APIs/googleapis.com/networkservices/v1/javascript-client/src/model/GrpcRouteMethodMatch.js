/**
 * Network Services API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GrpcRouteMethodMatch model module.
 * @module model/GrpcRouteMethodMatch
 * @version v1
 */
class GrpcRouteMethodMatch {
    /**
     * Constructs a new <code>GrpcRouteMethodMatch</code>.
     * Specifies a match against a method.
     * @alias module:model/GrpcRouteMethodMatch
     */
    constructor() { 
        
        GrpcRouteMethodMatch.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GrpcRouteMethodMatch</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GrpcRouteMethodMatch} obj Optional instance to populate.
     * @return {module:model/GrpcRouteMethodMatch} The populated <code>GrpcRouteMethodMatch</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GrpcRouteMethodMatch();

            if (data.hasOwnProperty('caseSensitive')) {
                obj['caseSensitive'] = ApiClient.convertToType(data['caseSensitive'], 'Boolean');
            }
            if (data.hasOwnProperty('grpcMethod')) {
                obj['grpcMethod'] = ApiClient.convertToType(data['grpcMethod'], 'String');
            }
            if (data.hasOwnProperty('grpcService')) {
                obj['grpcService'] = ApiClient.convertToType(data['grpcService'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GrpcRouteMethodMatch</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GrpcRouteMethodMatch</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['grpcMethod'] && !(typeof data['grpcMethod'] === 'string' || data['grpcMethod'] instanceof String)) {
            throw new Error("Expected the field `grpcMethod` to be a primitive type in the JSON string but got " + data['grpcMethod']);
        }
        // ensure the json data is a string
        if (data['grpcService'] && !(typeof data['grpcService'] === 'string' || data['grpcService'] instanceof String)) {
            throw new Error("Expected the field `grpcService` to be a primitive type in the JSON string but got " + data['grpcService']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * Optional. Specifies that matches are case sensitive. The default value is true. case_sensitive must not be used with a type of REGULAR_EXPRESSION.
 * @member {Boolean} caseSensitive
 */
GrpcRouteMethodMatch.prototype['caseSensitive'] = undefined;

/**
 * Required. Name of the method to match against. If unspecified, will match all methods.
 * @member {String} grpcMethod
 */
GrpcRouteMethodMatch.prototype['grpcMethod'] = undefined;

/**
 * Required. Name of the service to match against. If unspecified, will match all services.
 * @member {String} grpcService
 */
GrpcRouteMethodMatch.prototype['grpcService'] = undefined;

/**
 * Optional. Specifies how to match against the name. If not specified, a default value of \"EXACT\" is used.
 * @member {module:model/GrpcRouteMethodMatch.TypeEnum} type
 */
GrpcRouteMethodMatch.prototype['type'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
GrpcRouteMethodMatch['TypeEnum'] = {

    /**
     * value: "TYPE_UNSPECIFIED"
     * @const
     */
    "TYPE_UNSPECIFIED": "TYPE_UNSPECIFIED",

    /**
     * value: "EXACT"
     * @const
     */
    "EXACT": "EXACT",

    /**
     * value: "REGULAR_EXPRESSION"
     * @const
     */
    "REGULAR_EXPRESSION": "REGULAR_EXPRESSION"
};



export default GrpcRouteMethodMatch;

