/**
 * Network Services API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import HttpRouteRouteAction from './HttpRouteRouteAction';
import HttpRouteRouteMatch from './HttpRouteRouteMatch';

/**
 * The HttpRouteRouteRule model module.
 * @module model/HttpRouteRouteRule
 * @version v1
 */
class HttpRouteRouteRule {
    /**
     * Constructs a new <code>HttpRouteRouteRule</code>.
     * Specifies how to match traffic and how to route traffic when traffic is matched.
     * @alias module:model/HttpRouteRouteRule
     */
    constructor() { 
        
        HttpRouteRouteRule.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>HttpRouteRouteRule</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HttpRouteRouteRule} obj Optional instance to populate.
     * @return {module:model/HttpRouteRouteRule} The populated <code>HttpRouteRouteRule</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HttpRouteRouteRule();

            if (data.hasOwnProperty('action')) {
                obj['action'] = HttpRouteRouteAction.constructFromObject(data['action']);
            }
            if (data.hasOwnProperty('matches')) {
                obj['matches'] = ApiClient.convertToType(data['matches'], [HttpRouteRouteMatch]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>HttpRouteRouteRule</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>HttpRouteRouteRule</code>.
     */
    static validateJSON(data) {
        // validate the optional field `action`
        if (data['action']) { // data not null
          HttpRouteRouteAction.validateJSON(data['action']);
        }
        if (data['matches']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['matches'])) {
                throw new Error("Expected the field `matches` to be an array in the JSON data but got " + data['matches']);
            }
            // validate the optional field `matches` (array)
            for (const item of data['matches']) {
                HttpRouteRouteMatch.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {module:model/HttpRouteRouteAction} action
 */
HttpRouteRouteRule.prototype['action'] = undefined;

/**
 * A list of matches define conditions used for matching the rule against incoming HTTP requests. Each match is independent, i.e. this rule will be matched if ANY one of the matches is satisfied. If no matches field is specified, this rule will unconditionally match traffic. If a default rule is desired to be configured, add a rule with no matches specified to the end of the rules list.
 * @member {Array.<module:model/HttpRouteRouteMatch>} matches
 */
HttpRouteRouteRule.prototype['matches'] = undefined;






export default HttpRouteRouteRule;

