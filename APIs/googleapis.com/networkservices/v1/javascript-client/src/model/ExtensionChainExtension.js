/**
 * Network Services API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ExtensionChainExtension model module.
 * @module model/ExtensionChainExtension
 * @version v1
 */
class ExtensionChainExtension {
    /**
     * Constructs a new <code>ExtensionChainExtension</code>.
     * A single extension in the chain to execute for the matching request.
     * @alias module:model/ExtensionChainExtension
     */
    constructor() { 
        
        ExtensionChainExtension.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ExtensionChainExtension</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ExtensionChainExtension} obj Optional instance to populate.
     * @return {module:model/ExtensionChainExtension} The populated <code>ExtensionChainExtension</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ExtensionChainExtension();

            if (data.hasOwnProperty('authority')) {
                obj['authority'] = ApiClient.convertToType(data['authority'], 'String');
            }
            if (data.hasOwnProperty('failOpen')) {
                obj['failOpen'] = ApiClient.convertToType(data['failOpen'], 'Boolean');
            }
            if (data.hasOwnProperty('forwardHeaders')) {
                obj['forwardHeaders'] = ApiClient.convertToType(data['forwardHeaders'], ['String']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('service')) {
                obj['service'] = ApiClient.convertToType(data['service'], 'String');
            }
            if (data.hasOwnProperty('supportedEvents')) {
                obj['supportedEvents'] = ApiClient.convertToType(data['supportedEvents'], ['String']);
            }
            if (data.hasOwnProperty('timeout')) {
                obj['timeout'] = ApiClient.convertToType(data['timeout'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ExtensionChainExtension</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ExtensionChainExtension</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['authority'] && !(typeof data['authority'] === 'string' || data['authority'] instanceof String)) {
            throw new Error("Expected the field `authority` to be a primitive type in the JSON string but got " + data['authority']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['forwardHeaders'])) {
            throw new Error("Expected the field `forwardHeaders` to be an array in the JSON data but got " + data['forwardHeaders']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['service'] && !(typeof data['service'] === 'string' || data['service'] instanceof String)) {
            throw new Error("Expected the field `service` to be a primitive type in the JSON string but got " + data['service']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['supportedEvents'])) {
            throw new Error("Expected the field `supportedEvents` to be an array in the JSON data but got " + data['supportedEvents']);
        }
        // ensure the json data is a string
        if (data['timeout'] && !(typeof data['timeout'] === 'string' || data['timeout'] instanceof String)) {
            throw new Error("Expected the field `timeout` to be a primitive type in the JSON string but got " + data['timeout']);
        }

        return true;
    }


}



/**
 * Optional. The `:authority` header in the gRPC request sent from Envoy to the extension service. Required for Callout extensions.
 * @member {String} authority
 */
ExtensionChainExtension.prototype['authority'] = undefined;

/**
 * Optional. Determines how the proxy behaves if the call to the extension fails or times out. When set to `TRUE`, request or response processing continues without error. Any subsequent extensions in the extension chain are also executed. When set to `FALSE` or the default setting of `FALSE` is used, one of the following happens: * If response headers have not been delivered to the downstream client, a generic 500 error is returned to the client. The error response can be tailored by configuring a custom error response in the load balancer. * If response headers have been delivered, then the HTTP stream to the downstream client is reset.
 * @member {Boolean} failOpen
 */
ExtensionChainExtension.prototype['failOpen'] = undefined;

/**
 * Optional. List of the HTTP headers to forward to the extension (from the client or backend). If omitted, all headers are sent. Each element is a string indicating the header name.
 * @member {Array.<String>} forwardHeaders
 */
ExtensionChainExtension.prototype['forwardHeaders'] = undefined;

/**
 * Required. The name for this extension. The name is logged as part of the HTTP request logs. The name must conform with RFC-1034, is restricted to lower-cased letters, numbers and hyphens, and can have a maximum length of 63 characters. Additionally, the first character must be a letter and the last a letter or a number.
 * @member {String} name
 */
ExtensionChainExtension.prototype['name'] = undefined;

/**
 * Required. The reference to the service that runs the extension. Currently only callout extensions are supported here. To configure a callout extension, `service` must be a fully-qualified reference to a [backend service](https://cloud.google.com/compute/docs/reference/rest/v1/backendServices) in the format: `https://www.googleapis.com/compute/v1/projects/{project}/regions/{region}/backendServices/{backendService}` or `https://www.googleapis.com/compute/v1/projects/{project}/global/backendServices/{backendService}`.
 * @member {String} service
 */
ExtensionChainExtension.prototype['service'] = undefined;

/**
 * Optional. A set of events during request or response processing for which this extension is called. This field is required for the `LbTrafficExtension` resource. It's not relevant for the `LbRouteExtension` resource.
 * @member {Array.<module:model/ExtensionChainExtension.SupportedEventsEnum>} supportedEvents
 */
ExtensionChainExtension.prototype['supportedEvents'] = undefined;

/**
 * Optional. Specifies the timeout for each individual message on the stream. The timeout must be between 10-1000 milliseconds. Required for Callout extensions.
 * @member {String} timeout
 */
ExtensionChainExtension.prototype['timeout'] = undefined;





/**
 * Allowed values for the <code>supportedEvents</code> property.
 * @enum {String}
 * @readonly
 */
ExtensionChainExtension['SupportedEventsEnum'] = {

    /**
     * value: "EVENT_TYPE_UNSPECIFIED"
     * @const
     */
    "EVENT_TYPE_UNSPECIFIED": "EVENT_TYPE_UNSPECIFIED",

    /**
     * value: "REQUEST_HEADERS"
     * @const
     */
    "REQUEST_HEADERS": "REQUEST_HEADERS",

    /**
     * value: "REQUEST_BODY"
     * @const
     */
    "REQUEST_BODY": "REQUEST_BODY",

    /**
     * value: "RESPONSE_HEADERS"
     * @const
     */
    "RESPONSE_HEADERS": "RESPONSE_HEADERS",

    /**
     * value: "RESPONSE_BODY"
     * @const
     */
    "RESPONSE_BODY": "RESPONSE_BODY",

    /**
     * value: "REQUEST_TRAILERS"
     * @const
     */
    "REQUEST_TRAILERS": "REQUEST_TRAILERS",

    /**
     * value: "RESPONSE_TRAILERS"
     * @const
     */
    "RESPONSE_TRAILERS": "RESPONSE_TRAILERS"
};



export default ExtensionChainExtension;

