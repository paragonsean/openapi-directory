/**
 * Network Services API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.NetworkServicesApi);
  }
}(this, function(expect, NetworkServicesApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new NetworkServicesApi.ProjectsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ProjectsApi', function() {
    describe('networkservicesProjectsLocationsEndpointPoliciesCreate', function() {
      it('should call networkservicesProjectsLocationsEndpointPoliciesCreate successfully', function(done) {
        //uncomment below and update the code to test networkservicesProjectsLocationsEndpointPoliciesCreate
        //instance.networkservicesProjectsLocationsEndpointPoliciesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('networkservicesProjectsLocationsEndpointPoliciesList', function() {
      it('should call networkservicesProjectsLocationsEndpointPoliciesList successfully', function(done) {
        //uncomment below and update the code to test networkservicesProjectsLocationsEndpointPoliciesList
        //instance.networkservicesProjectsLocationsEndpointPoliciesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('networkservicesProjectsLocationsGatewaysCreate', function() {
      it('should call networkservicesProjectsLocationsGatewaysCreate successfully', function(done) {
        //uncomment below and update the code to test networkservicesProjectsLocationsGatewaysCreate
        //instance.networkservicesProjectsLocationsGatewaysCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('networkservicesProjectsLocationsGatewaysList', function() {
      it('should call networkservicesProjectsLocationsGatewaysList successfully', function(done) {
        //uncomment below and update the code to test networkservicesProjectsLocationsGatewaysList
        //instance.networkservicesProjectsLocationsGatewaysList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('networkservicesProjectsLocationsGrpcRoutesCreate', function() {
      it('should call networkservicesProjectsLocationsGrpcRoutesCreate successfully', function(done) {
        //uncomment below and update the code to test networkservicesProjectsLocationsGrpcRoutesCreate
        //instance.networkservicesProjectsLocationsGrpcRoutesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('networkservicesProjectsLocationsGrpcRoutesList', function() {
      it('should call networkservicesProjectsLocationsGrpcRoutesList successfully', function(done) {
        //uncomment below and update the code to test networkservicesProjectsLocationsGrpcRoutesList
        //instance.networkservicesProjectsLocationsGrpcRoutesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('networkservicesProjectsLocationsHttpRoutesCreate', function() {
      it('should call networkservicesProjectsLocationsHttpRoutesCreate successfully', function(done) {
        //uncomment below and update the code to test networkservicesProjectsLocationsHttpRoutesCreate
        //instance.networkservicesProjectsLocationsHttpRoutesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('networkservicesProjectsLocationsHttpRoutesList', function() {
      it('should call networkservicesProjectsLocationsHttpRoutesList successfully', function(done) {
        //uncomment below and update the code to test networkservicesProjectsLocationsHttpRoutesList
        //instance.networkservicesProjectsLocationsHttpRoutesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('networkservicesProjectsLocationsLbRouteExtensionsCreate', function() {
      it('should call networkservicesProjectsLocationsLbRouteExtensionsCreate successfully', function(done) {
        //uncomment below and update the code to test networkservicesProjectsLocationsLbRouteExtensionsCreate
        //instance.networkservicesProjectsLocationsLbRouteExtensionsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('networkservicesProjectsLocationsLbRouteExtensionsList', function() {
      it('should call networkservicesProjectsLocationsLbRouteExtensionsList successfully', function(done) {
        //uncomment below and update the code to test networkservicesProjectsLocationsLbRouteExtensionsList
        //instance.networkservicesProjectsLocationsLbRouteExtensionsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('networkservicesProjectsLocationsLbTrafficExtensionsCreate', function() {
      it('should call networkservicesProjectsLocationsLbTrafficExtensionsCreate successfully', function(done) {
        //uncomment below and update the code to test networkservicesProjectsLocationsLbTrafficExtensionsCreate
        //instance.networkservicesProjectsLocationsLbTrafficExtensionsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('networkservicesProjectsLocationsLbTrafficExtensionsList', function() {
      it('should call networkservicesProjectsLocationsLbTrafficExtensionsList successfully', function(done) {
        //uncomment below and update the code to test networkservicesProjectsLocationsLbTrafficExtensionsList
        //instance.networkservicesProjectsLocationsLbTrafficExtensionsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('networkservicesProjectsLocationsList', function() {
      it('should call networkservicesProjectsLocationsList successfully', function(done) {
        //uncomment below and update the code to test networkservicesProjectsLocationsList
        //instance.networkservicesProjectsLocationsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('networkservicesProjectsLocationsMeshesCreate', function() {
      it('should call networkservicesProjectsLocationsMeshesCreate successfully', function(done) {
        //uncomment below and update the code to test networkservicesProjectsLocationsMeshesCreate
        //instance.networkservicesProjectsLocationsMeshesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('networkservicesProjectsLocationsMeshesList', function() {
      it('should call networkservicesProjectsLocationsMeshesList successfully', function(done) {
        //uncomment below and update the code to test networkservicesProjectsLocationsMeshesList
        //instance.networkservicesProjectsLocationsMeshesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('networkservicesProjectsLocationsOperationsCancel', function() {
      it('should call networkservicesProjectsLocationsOperationsCancel successfully', function(done) {
        //uncomment below and update the code to test networkservicesProjectsLocationsOperationsCancel
        //instance.networkservicesProjectsLocationsOperationsCancel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('networkservicesProjectsLocationsOperationsList', function() {
      it('should call networkservicesProjectsLocationsOperationsList successfully', function(done) {
        //uncomment below and update the code to test networkservicesProjectsLocationsOperationsList
        //instance.networkservicesProjectsLocationsOperationsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('networkservicesProjectsLocationsServiceBindingsCreate', function() {
      it('should call networkservicesProjectsLocationsServiceBindingsCreate successfully', function(done) {
        //uncomment below and update the code to test networkservicesProjectsLocationsServiceBindingsCreate
        //instance.networkservicesProjectsLocationsServiceBindingsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('networkservicesProjectsLocationsServiceBindingsList', function() {
      it('should call networkservicesProjectsLocationsServiceBindingsList successfully', function(done) {
        //uncomment below and update the code to test networkservicesProjectsLocationsServiceBindingsList
        //instance.networkservicesProjectsLocationsServiceBindingsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('networkservicesProjectsLocationsServiceLbPoliciesCreate', function() {
      it('should call networkservicesProjectsLocationsServiceLbPoliciesCreate successfully', function(done) {
        //uncomment below and update the code to test networkservicesProjectsLocationsServiceLbPoliciesCreate
        //instance.networkservicesProjectsLocationsServiceLbPoliciesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('networkservicesProjectsLocationsServiceLbPoliciesGetIamPolicy', function() {
      it('should call networkservicesProjectsLocationsServiceLbPoliciesGetIamPolicy successfully', function(done) {
        //uncomment below and update the code to test networkservicesProjectsLocationsServiceLbPoliciesGetIamPolicy
        //instance.networkservicesProjectsLocationsServiceLbPoliciesGetIamPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('networkservicesProjectsLocationsServiceLbPoliciesList', function() {
      it('should call networkservicesProjectsLocationsServiceLbPoliciesList successfully', function(done) {
        //uncomment below and update the code to test networkservicesProjectsLocationsServiceLbPoliciesList
        //instance.networkservicesProjectsLocationsServiceLbPoliciesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('networkservicesProjectsLocationsServiceLbPoliciesSetIamPolicy', function() {
      it('should call networkservicesProjectsLocationsServiceLbPoliciesSetIamPolicy successfully', function(done) {
        //uncomment below and update the code to test networkservicesProjectsLocationsServiceLbPoliciesSetIamPolicy
        //instance.networkservicesProjectsLocationsServiceLbPoliciesSetIamPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('networkservicesProjectsLocationsServiceLbPoliciesTestIamPermissions', function() {
      it('should call networkservicesProjectsLocationsServiceLbPoliciesTestIamPermissions successfully', function(done) {
        //uncomment below and update the code to test networkservicesProjectsLocationsServiceLbPoliciesTestIamPermissions
        //instance.networkservicesProjectsLocationsServiceLbPoliciesTestIamPermissions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('networkservicesProjectsLocationsTcpRoutesCreate', function() {
      it('should call networkservicesProjectsLocationsTcpRoutesCreate successfully', function(done) {
        //uncomment below and update the code to test networkservicesProjectsLocationsTcpRoutesCreate
        //instance.networkservicesProjectsLocationsTcpRoutesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('networkservicesProjectsLocationsTcpRoutesList', function() {
      it('should call networkservicesProjectsLocationsTcpRoutesList successfully', function(done) {
        //uncomment below and update the code to test networkservicesProjectsLocationsTcpRoutesList
        //instance.networkservicesProjectsLocationsTcpRoutesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('networkservicesProjectsLocationsTlsRoutesCreate', function() {
      it('should call networkservicesProjectsLocationsTlsRoutesCreate successfully', function(done) {
        //uncomment below and update the code to test networkservicesProjectsLocationsTlsRoutesCreate
        //instance.networkservicesProjectsLocationsTlsRoutesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('networkservicesProjectsLocationsTlsRoutesDelete', function() {
      it('should call networkservicesProjectsLocationsTlsRoutesDelete successfully', function(done) {
        //uncomment below and update the code to test networkservicesProjectsLocationsTlsRoutesDelete
        //instance.networkservicesProjectsLocationsTlsRoutesDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('networkservicesProjectsLocationsTlsRoutesGet', function() {
      it('should call networkservicesProjectsLocationsTlsRoutesGet successfully', function(done) {
        //uncomment below and update the code to test networkservicesProjectsLocationsTlsRoutesGet
        //instance.networkservicesProjectsLocationsTlsRoutesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('networkservicesProjectsLocationsTlsRoutesList', function() {
      it('should call networkservicesProjectsLocationsTlsRoutesList successfully', function(done) {
        //uncomment below and update the code to test networkservicesProjectsLocationsTlsRoutesList
        //instance.networkservicesProjectsLocationsTlsRoutesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('networkservicesProjectsLocationsTlsRoutesPatch', function() {
      it('should call networkservicesProjectsLocationsTlsRoutesPatch successfully', function(done) {
        //uncomment below and update the code to test networkservicesProjectsLocationsTlsRoutesPatch
        //instance.networkservicesProjectsLocationsTlsRoutesPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
