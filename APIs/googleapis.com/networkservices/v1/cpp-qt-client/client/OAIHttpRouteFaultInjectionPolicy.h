/**
 * Network Services API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIHttpRouteFaultInjectionPolicy.h
 *
 * The specification for fault injection introduced into traffic to test the resiliency of clients to destination service failure. As part of fault injection, when clients send requests to a destination, delays can be introduced by client proxy on a percentage of requests before sending those requests to the destination service. Similarly requests can be aborted by client proxy for a percentage of requests.
 */

#ifndef OAIHttpRouteFaultInjectionPolicy_H
#define OAIHttpRouteFaultInjectionPolicy_H

#include <QJsonObject>

#include "OAIHttpRouteFaultInjectionPolicyAbort.h"
#include "OAIHttpRouteFaultInjectionPolicyDelay.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIHttpRouteFaultInjectionPolicyAbort;
class OAIHttpRouteFaultInjectionPolicyDelay;

class OAIHttpRouteFaultInjectionPolicy : public OAIObject {
public:
    OAIHttpRouteFaultInjectionPolicy();
    OAIHttpRouteFaultInjectionPolicy(QString json);
    ~OAIHttpRouteFaultInjectionPolicy() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIHttpRouteFaultInjectionPolicyAbort getAbort() const;
    void setAbort(const OAIHttpRouteFaultInjectionPolicyAbort &abort);
    bool is_abort_Set() const;
    bool is_abort_Valid() const;

    OAIHttpRouteFaultInjectionPolicyDelay getDelay() const;
    void setDelay(const OAIHttpRouteFaultInjectionPolicyDelay &delay);
    bool is_delay_Set() const;
    bool is_delay_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIHttpRouteFaultInjectionPolicyAbort m_abort;
    bool m_abort_isSet;
    bool m_abort_isValid;

    OAIHttpRouteFaultInjectionPolicyDelay m_delay;
    bool m_delay_isSet;
    bool m_delay_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIHttpRouteFaultInjectionPolicy)

#endif // OAIHttpRouteFaultInjectionPolicy_H
