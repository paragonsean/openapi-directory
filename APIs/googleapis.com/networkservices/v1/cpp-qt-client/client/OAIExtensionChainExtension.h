/**
 * Network Services API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIExtensionChainExtension.h
 *
 * A single extension in the chain to execute for the matching request.
 */

#ifndef OAIExtensionChainExtension_H
#define OAIExtensionChainExtension_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIExtensionChainExtension : public OAIObject {
public:
    OAIExtensionChainExtension();
    OAIExtensionChainExtension(QString json);
    ~OAIExtensionChainExtension() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAuthority() const;
    void setAuthority(const QString &authority);
    bool is_authority_Set() const;
    bool is_authority_Valid() const;

    bool isFailOpen() const;
    void setFailOpen(const bool &fail_open);
    bool is_fail_open_Set() const;
    bool is_fail_open_Valid() const;

    QList<QString> getForwardHeaders() const;
    void setForwardHeaders(const QList<QString> &forward_headers);
    bool is_forward_headers_Set() const;
    bool is_forward_headers_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getService() const;
    void setService(const QString &service);
    bool is_service_Set() const;
    bool is_service_Valid() const;

    QList<QString> getSupportedEvents() const;
    void setSupportedEvents(const QList<QString> &supported_events);
    bool is_supported_events_Set() const;
    bool is_supported_events_Valid() const;

    QString getTimeout() const;
    void setTimeout(const QString &timeout);
    bool is_timeout_Set() const;
    bool is_timeout_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_authority;
    bool m_authority_isSet;
    bool m_authority_isValid;

    bool m_fail_open;
    bool m_fail_open_isSet;
    bool m_fail_open_isValid;

    QList<QString> m_forward_headers;
    bool m_forward_headers_isSet;
    bool m_forward_headers_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_service;
    bool m_service_isSet;
    bool m_service_isValid;

    QList<QString> m_supported_events;
    bool m_supported_events_isSet;
    bool m_supported_events_isValid;

    QString m_timeout;
    bool m_timeout_isSet;
    bool m_timeout_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIExtensionChainExtension)

#endif // OAIExtensionChainExtension_H
