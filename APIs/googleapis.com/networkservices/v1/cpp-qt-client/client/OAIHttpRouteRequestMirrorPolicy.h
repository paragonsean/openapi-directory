/**
 * Network Services API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIHttpRouteRequestMirrorPolicy.h
 *
 * Specifies the policy on how requests are shadowed to a separate mirrored destination service. The proxy does not wait for responses from the shadow service. Prior to sending traffic to the shadow service, the host/authority header is suffixed with -shadow.
 */

#ifndef OAIHttpRouteRequestMirrorPolicy_H
#define OAIHttpRouteRequestMirrorPolicy_H

#include <QJsonObject>

#include "OAIHttpRouteDestination.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIHttpRouteDestination;

class OAIHttpRouteRequestMirrorPolicy : public OAIObject {
public:
    OAIHttpRouteRequestMirrorPolicy();
    OAIHttpRouteRequestMirrorPolicy(QString json);
    ~OAIHttpRouteRequestMirrorPolicy() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIHttpRouteDestination getDestination() const;
    void setDestination(const OAIHttpRouteDestination &destination);
    bool is_destination_Set() const;
    bool is_destination_Valid() const;

    float getMirrorPercent() const;
    void setMirrorPercent(const float &mirror_percent);
    bool is_mirror_percent_Set() const;
    bool is_mirror_percent_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIHttpRouteDestination m_destination;
    bool m_destination_isSet;
    bool m_destination_isValid;

    float m_mirror_percent;
    bool m_mirror_percent_isSet;
    bool m_mirror_percent_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIHttpRouteRequestMirrorPolicy)

#endif // OAIHttpRouteRequestMirrorPolicy_H
