/**
 * Network Services API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIHttpRouteCorsPolicy.h
 *
 * The Specification for allowing client side cross-origin requests.
 */

#ifndef OAIHttpRouteCorsPolicy_H
#define OAIHttpRouteCorsPolicy_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIHttpRouteCorsPolicy : public OAIObject {
public:
    OAIHttpRouteCorsPolicy();
    OAIHttpRouteCorsPolicy(QString json);
    ~OAIHttpRouteCorsPolicy() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAllowCredentials() const;
    void setAllowCredentials(const bool &allow_credentials);
    bool is_allow_credentials_Set() const;
    bool is_allow_credentials_Valid() const;

    QList<QString> getAllowHeaders() const;
    void setAllowHeaders(const QList<QString> &allow_headers);
    bool is_allow_headers_Set() const;
    bool is_allow_headers_Valid() const;

    QList<QString> getAllowMethods() const;
    void setAllowMethods(const QList<QString> &allow_methods);
    bool is_allow_methods_Set() const;
    bool is_allow_methods_Valid() const;

    QList<QString> getAllowOriginRegexes() const;
    void setAllowOriginRegexes(const QList<QString> &allow_origin_regexes);
    bool is_allow_origin_regexes_Set() const;
    bool is_allow_origin_regexes_Valid() const;

    QList<QString> getAllowOrigins() const;
    void setAllowOrigins(const QList<QString> &allow_origins);
    bool is_allow_origins_Set() const;
    bool is_allow_origins_Valid() const;

    bool isDisabled() const;
    void setDisabled(const bool &disabled);
    bool is_disabled_Set() const;
    bool is_disabled_Valid() const;

    QList<QString> getExposeHeaders() const;
    void setExposeHeaders(const QList<QString> &expose_headers);
    bool is_expose_headers_Set() const;
    bool is_expose_headers_Valid() const;

    QString getMaxAge() const;
    void setMaxAge(const QString &max_age);
    bool is_max_age_Set() const;
    bool is_max_age_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_allow_credentials;
    bool m_allow_credentials_isSet;
    bool m_allow_credentials_isValid;

    QList<QString> m_allow_headers;
    bool m_allow_headers_isSet;
    bool m_allow_headers_isValid;

    QList<QString> m_allow_methods;
    bool m_allow_methods_isSet;
    bool m_allow_methods_isValid;

    QList<QString> m_allow_origin_regexes;
    bool m_allow_origin_regexes_isSet;
    bool m_allow_origin_regexes_isValid;

    QList<QString> m_allow_origins;
    bool m_allow_origins_isSet;
    bool m_allow_origins_isValid;

    bool m_disabled;
    bool m_disabled_isSet;
    bool m_disabled_isValid;

    QList<QString> m_expose_headers;
    bool m_expose_headers_isSet;
    bool m_expose_headers_isValid;

    QString m_max_age;
    bool m_max_age_isSet;
    bool m_max_age_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIHttpRouteCorsPolicy)

#endif // OAIHttpRouteCorsPolicy_H
