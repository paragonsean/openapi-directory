/**
 * Network Services API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIHttpRouteHeaderMatch.h
 *
 * Specifies how to select a route rule based on HTTP request headers.
 */

#ifndef OAIHttpRouteHeaderMatch_H
#define OAIHttpRouteHeaderMatch_H

#include <QJsonObject>

#include "OAIHttpRouteHeaderMatchIntegerRange.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIHttpRouteHeaderMatchIntegerRange;

class OAIHttpRouteHeaderMatch : public OAIObject {
public:
    OAIHttpRouteHeaderMatch();
    OAIHttpRouteHeaderMatch(QString json);
    ~OAIHttpRouteHeaderMatch() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getExactMatch() const;
    void setExactMatch(const QString &exact_match);
    bool is_exact_match_Set() const;
    bool is_exact_match_Valid() const;

    QString getHeader() const;
    void setHeader(const QString &header);
    bool is_header_Set() const;
    bool is_header_Valid() const;

    bool isInvertMatch() const;
    void setInvertMatch(const bool &invert_match);
    bool is_invert_match_Set() const;
    bool is_invert_match_Valid() const;

    QString getPrefixMatch() const;
    void setPrefixMatch(const QString &prefix_match);
    bool is_prefix_match_Set() const;
    bool is_prefix_match_Valid() const;

    bool isPresentMatch() const;
    void setPresentMatch(const bool &present_match);
    bool is_present_match_Set() const;
    bool is_present_match_Valid() const;

    OAIHttpRouteHeaderMatchIntegerRange getRangeMatch() const;
    void setRangeMatch(const OAIHttpRouteHeaderMatchIntegerRange &range_match);
    bool is_range_match_Set() const;
    bool is_range_match_Valid() const;

    QString getRegexMatch() const;
    void setRegexMatch(const QString &regex_match);
    bool is_regex_match_Set() const;
    bool is_regex_match_Valid() const;

    QString getSuffixMatch() const;
    void setSuffixMatch(const QString &suffix_match);
    bool is_suffix_match_Set() const;
    bool is_suffix_match_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_exact_match;
    bool m_exact_match_isSet;
    bool m_exact_match_isValid;

    QString m_header;
    bool m_header_isSet;
    bool m_header_isValid;

    bool m_invert_match;
    bool m_invert_match_isSet;
    bool m_invert_match_isValid;

    QString m_prefix_match;
    bool m_prefix_match_isSet;
    bool m_prefix_match_isValid;

    bool m_present_match;
    bool m_present_match_isSet;
    bool m_present_match_isValid;

    OAIHttpRouteHeaderMatchIntegerRange m_range_match;
    bool m_range_match_isSet;
    bool m_range_match_isValid;

    QString m_regex_match;
    bool m_regex_match_isSet;
    bool m_regex_match_isValid;

    QString m_suffix_match;
    bool m_suffix_match_isSet;
    bool m_suffix_match_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIHttpRouteHeaderMatch)

#endif // OAIHttpRouteHeaderMatch_H
