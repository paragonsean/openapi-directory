# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class HttpRouteHeaderModifier(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, add: Dict[str, str]=None, remove: List[str]=None, set: Dict[str, str]=None):
        """HttpRouteHeaderModifier - a model defined in OpenAPI

        :param add: The add of this HttpRouteHeaderModifier.
        :param remove: The remove of this HttpRouteHeaderModifier.
        :param set: The set of this HttpRouteHeaderModifier.
        """
        self.openapi_types = {
            'add': Dict[str, str],
            'remove': List[str],
            'set': Dict[str, str]
        }

        self.attribute_map = {
            'add': 'add',
            'remove': 'remove',
            'set': 'set'
        }

        self._add = add
        self._remove = remove
        self._set = set

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HttpRouteHeaderModifier':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HttpRouteHeaderModifier of this HttpRouteHeaderModifier.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def add(self):
        """Gets the add of this HttpRouteHeaderModifier.

        Add the headers with given map where key is the name of the header, value is the value of the header.

        :return: The add of this HttpRouteHeaderModifier.
        :rtype: Dict[str, str]
        """
        return self._add

    @add.setter
    def add(self, add):
        """Sets the add of this HttpRouteHeaderModifier.

        Add the headers with given map where key is the name of the header, value is the value of the header.

        :param add: The add of this HttpRouteHeaderModifier.
        :type add: Dict[str, str]
        """

        self._add = add

    @property
    def remove(self):
        """Gets the remove of this HttpRouteHeaderModifier.

        Remove headers (matching by header names) specified in the list.

        :return: The remove of this HttpRouteHeaderModifier.
        :rtype: List[str]
        """
        return self._remove

    @remove.setter
    def remove(self, remove):
        """Sets the remove of this HttpRouteHeaderModifier.

        Remove headers (matching by header names) specified in the list.

        :param remove: The remove of this HttpRouteHeaderModifier.
        :type remove: List[str]
        """

        self._remove = remove

    @property
    def set(self):
        """Gets the set of this HttpRouteHeaderModifier.

        Completely overwrite/replace the headers with given map where key is the name of the header, value is the value of the header.

        :return: The set of this HttpRouteHeaderModifier.
        :rtype: Dict[str, str]
        """
        return self._set

    @set.setter
    def set(self, set):
        """Sets the set of this HttpRouteHeaderModifier.

        Completely overwrite/replace the headers with given map where key is the name of the header, value is the value of the header.

        :param set: The set of this HttpRouteHeaderModifier.
        :type set: Dict[str, str]
        """

        self._set = set
