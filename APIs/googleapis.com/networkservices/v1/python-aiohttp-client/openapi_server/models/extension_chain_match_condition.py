# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ExtensionChainMatchCondition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cel_expression: str=None):
        """ExtensionChainMatchCondition - a model defined in OpenAPI

        :param cel_expression: The cel_expression of this ExtensionChainMatchCondition.
        """
        self.openapi_types = {
            'cel_expression': str
        }

        self.attribute_map = {
            'cel_expression': 'celExpression'
        }

        self._cel_expression = cel_expression

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExtensionChainMatchCondition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ExtensionChainMatchCondition of this ExtensionChainMatchCondition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cel_expression(self):
        """Gets the cel_expression of this ExtensionChainMatchCondition.

        Required. A Common Expression Language (CEL) expression that is used to match requests for which the extension chain is executed. For more information, see [CEL matcher language reference](/service-extensions/docs/cel-matcher-language-reference).

        :return: The cel_expression of this ExtensionChainMatchCondition.
        :rtype: str
        """
        return self._cel_expression

    @cel_expression.setter
    def cel_expression(self, cel_expression):
        """Sets the cel_expression of this ExtensionChainMatchCondition.

        Required. A Common Expression Language (CEL) expression that is used to match requests for which the extension chain is executed. For more information, see [CEL matcher language reference](/service-extensions/docs/cel-matcher-language-reference).

        :param cel_expression: The cel_expression of this ExtensionChainMatchCondition.
        :type cel_expression: str
        """

        self._cel_expression = cel_expression
