# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.grpc_route_header_match import GrpcRouteHeaderMatch
from openapi_server.models.grpc_route_method_match import GrpcRouteMethodMatch
from openapi_server import util


class GrpcRouteRouteMatch(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, headers: List[GrpcRouteHeaderMatch]=None, method: GrpcRouteMethodMatch=None):
        """GrpcRouteRouteMatch - a model defined in OpenAPI

        :param headers: The headers of this GrpcRouteRouteMatch.
        :param method: The method of this GrpcRouteRouteMatch.
        """
        self.openapi_types = {
            'headers': List[GrpcRouteHeaderMatch],
            'method': GrpcRouteMethodMatch
        }

        self.attribute_map = {
            'headers': 'headers',
            'method': 'method'
        }

        self._headers = headers
        self._method = method

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GrpcRouteRouteMatch':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GrpcRouteRouteMatch of this GrpcRouteRouteMatch.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def headers(self):
        """Gets the headers of this GrpcRouteRouteMatch.

        Optional. Specifies a collection of headers to match.

        :return: The headers of this GrpcRouteRouteMatch.
        :rtype: List[GrpcRouteHeaderMatch]
        """
        return self._headers

    @headers.setter
    def headers(self, headers):
        """Sets the headers of this GrpcRouteRouteMatch.

        Optional. Specifies a collection of headers to match.

        :param headers: The headers of this GrpcRouteRouteMatch.
        :type headers: List[GrpcRouteHeaderMatch]
        """

        self._headers = headers

    @property
    def method(self):
        """Gets the method of this GrpcRouteRouteMatch.


        :return: The method of this GrpcRouteRouteMatch.
        :rtype: GrpcRouteMethodMatch
        """
        return self._method

    @method.setter
    def method(self, method):
        """Sets the method of this GrpcRouteRouteMatch.


        :param method: The method of this GrpcRouteRouteMatch.
        :type method: GrpcRouteMethodMatch
        """

        self._method = method
