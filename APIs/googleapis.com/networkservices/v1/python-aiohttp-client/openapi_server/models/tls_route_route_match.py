# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TlsRouteRouteMatch(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, alpn: List[str]=None, sni_host: List[str]=None):
        """TlsRouteRouteMatch - a model defined in OpenAPI

        :param alpn: The alpn of this TlsRouteRouteMatch.
        :param sni_host: The sni_host of this TlsRouteRouteMatch.
        """
        self.openapi_types = {
            'alpn': List[str],
            'sni_host': List[str]
        }

        self.attribute_map = {
            'alpn': 'alpn',
            'sni_host': 'sniHost'
        }

        self._alpn = alpn
        self._sni_host = sni_host

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TlsRouteRouteMatch':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TlsRouteRouteMatch of this TlsRouteRouteMatch.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def alpn(self):
        """Gets the alpn of this TlsRouteRouteMatch.

        Optional. ALPN (Application-Layer Protocol Negotiation) to match against. Examples: \"http/1.1\", \"h2\". At least one of sni_host and alpn is required. Up to 5 alpns across all matches can be set.

        :return: The alpn of this TlsRouteRouteMatch.
        :rtype: List[str]
        """
        return self._alpn

    @alpn.setter
    def alpn(self, alpn):
        """Sets the alpn of this TlsRouteRouteMatch.

        Optional. ALPN (Application-Layer Protocol Negotiation) to match against. Examples: \"http/1.1\", \"h2\". At least one of sni_host and alpn is required. Up to 5 alpns across all matches can be set.

        :param alpn: The alpn of this TlsRouteRouteMatch.
        :type alpn: List[str]
        """

        self._alpn = alpn

    @property
    def sni_host(self):
        """Gets the sni_host of this TlsRouteRouteMatch.

        Optional. SNI (server name indicator) to match against. SNI will be matched against all wildcard domains, i.e. `www.example.com` will be first matched against `www.example.com`, then `*.example.com`, then `*.com.` Partial wildcards are not supported, and values like *w.example.com are invalid. At least one of sni_host and alpn is required. Up to 5 sni hosts across all matches can be set.

        :return: The sni_host of this TlsRouteRouteMatch.
        :rtype: List[str]
        """
        return self._sni_host

    @sni_host.setter
    def sni_host(self, sni_host):
        """Sets the sni_host of this TlsRouteRouteMatch.

        Optional. SNI (server name indicator) to match against. SNI will be matched against all wildcard domains, i.e. `www.example.com` will be first matched against `www.example.com`, then `*.example.com`, then `*.com.` Partial wildcards are not supported, and values like *w.example.com are invalid. At least one of sni_host and alpn is required. Up to 5 sni hosts across all matches can be set.

        :param sni_host: The sni_host of this TlsRouteRouteMatch.
        :type sni_host: List[str]
        """

        self._sni_host = sni_host
