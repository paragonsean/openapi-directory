# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ServiceBinding(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, create_time: str=None, description: str=None, labels: Dict[str, str]=None, name: str=None, service: str=None, service_id: str=None, update_time: str=None):
        """ServiceBinding - a model defined in OpenAPI

        :param create_time: The create_time of this ServiceBinding.
        :param description: The description of this ServiceBinding.
        :param labels: The labels of this ServiceBinding.
        :param name: The name of this ServiceBinding.
        :param service: The service of this ServiceBinding.
        :param service_id: The service_id of this ServiceBinding.
        :param update_time: The update_time of this ServiceBinding.
        """
        self.openapi_types = {
            'create_time': str,
            'description': str,
            'labels': Dict[str, str],
            'name': str,
            'service': str,
            'service_id': str,
            'update_time': str
        }

        self.attribute_map = {
            'create_time': 'createTime',
            'description': 'description',
            'labels': 'labels',
            'name': 'name',
            'service': 'service',
            'service_id': 'serviceId',
            'update_time': 'updateTime'
        }

        self._create_time = create_time
        self._description = description
        self._labels = labels
        self._name = name
        self._service = service
        self._service_id = service_id
        self._update_time = update_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ServiceBinding':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ServiceBinding of this ServiceBinding.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def create_time(self):
        """Gets the create_time of this ServiceBinding.

        Output only. The timestamp when the resource was created.

        :return: The create_time of this ServiceBinding.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this ServiceBinding.

        Output only. The timestamp when the resource was created.

        :param create_time: The create_time of this ServiceBinding.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def description(self):
        """Gets the description of this ServiceBinding.

        Optional. A free-text description of the resource. Max length 1024 characters.

        :return: The description of this ServiceBinding.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ServiceBinding.

        Optional. A free-text description of the resource. Max length 1024 characters.

        :param description: The description of this ServiceBinding.
        :type description: str
        """

        self._description = description

    @property
    def labels(self):
        """Gets the labels of this ServiceBinding.

        Optional. Set of label tags associated with the ServiceBinding resource.

        :return: The labels of this ServiceBinding.
        :rtype: Dict[str, str]
        """
        return self._labels

    @labels.setter
    def labels(self, labels):
        """Sets the labels of this ServiceBinding.

        Optional. Set of label tags associated with the ServiceBinding resource.

        :param labels: The labels of this ServiceBinding.
        :type labels: Dict[str, str]
        """

        self._labels = labels

    @property
    def name(self):
        """Gets the name of this ServiceBinding.

        Required. Name of the ServiceBinding resource. It matches pattern `projects/*/locations/global/serviceBindings/service_binding_name`.

        :return: The name of this ServiceBinding.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ServiceBinding.

        Required. Name of the ServiceBinding resource. It matches pattern `projects/*/locations/global/serviceBindings/service_binding_name`.

        :param name: The name of this ServiceBinding.
        :type name: str
        """

        self._name = name

    @property
    def service(self):
        """Gets the service of this ServiceBinding.

        Required. The full Service Directory Service name of the format projects/*/locations/*/namespaces/*/services/*

        :return: The service of this ServiceBinding.
        :rtype: str
        """
        return self._service

    @service.setter
    def service(self, service):
        """Sets the service of this ServiceBinding.

        Required. The full Service Directory Service name of the format projects/*/locations/*/namespaces/*/services/*

        :param service: The service of this ServiceBinding.
        :type service: str
        """

        self._service = service

    @property
    def service_id(self):
        """Gets the service_id of this ServiceBinding.

        Output only. The unique identifier of the Service Directory Service against which the Service Binding resource is validated. This is populated when the Service Binding resource is used in another resource (like Backend Service). This is of the UUID4 format.

        :return: The service_id of this ServiceBinding.
        :rtype: str
        """
        return self._service_id

    @service_id.setter
    def service_id(self, service_id):
        """Sets the service_id of this ServiceBinding.

        Output only. The unique identifier of the Service Directory Service against which the Service Binding resource is validated. This is populated when the Service Binding resource is used in another resource (like Backend Service). This is of the UUID4 format.

        :param service_id: The service_id of this ServiceBinding.
        :type service_id: str
        """

        self._service_id = service_id

    @property
    def update_time(self):
        """Gets the update_time of this ServiceBinding.

        Output only. The timestamp when the resource was updated.

        :return: The update_time of this ServiceBinding.
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this ServiceBinding.

        Output only. The timestamp when the resource was updated.

        :param update_time: The update_time of this ServiceBinding.
        :type update_time: str
        """

        self._update_time = update_time
