# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.http_route_fault_injection_policy_abort import HttpRouteFaultInjectionPolicyAbort
from openapi_server.models.http_route_fault_injection_policy_delay import HttpRouteFaultInjectionPolicyDelay
from openapi_server import util


class HttpRouteFaultInjectionPolicy(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, abort: HttpRouteFaultInjectionPolicyAbort=None, delay: HttpRouteFaultInjectionPolicyDelay=None):
        """HttpRouteFaultInjectionPolicy - a model defined in OpenAPI

        :param abort: The abort of this HttpRouteFaultInjectionPolicy.
        :param delay: The delay of this HttpRouteFaultInjectionPolicy.
        """
        self.openapi_types = {
            'abort': HttpRouteFaultInjectionPolicyAbort,
            'delay': HttpRouteFaultInjectionPolicyDelay
        }

        self.attribute_map = {
            'abort': 'abort',
            'delay': 'delay'
        }

        self._abort = abort
        self._delay = delay

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HttpRouteFaultInjectionPolicy':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HttpRouteFaultInjectionPolicy of this HttpRouteFaultInjectionPolicy.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def abort(self):
        """Gets the abort of this HttpRouteFaultInjectionPolicy.


        :return: The abort of this HttpRouteFaultInjectionPolicy.
        :rtype: HttpRouteFaultInjectionPolicyAbort
        """
        return self._abort

    @abort.setter
    def abort(self, abort):
        """Sets the abort of this HttpRouteFaultInjectionPolicy.


        :param abort: The abort of this HttpRouteFaultInjectionPolicy.
        :type abort: HttpRouteFaultInjectionPolicyAbort
        """

        self._abort = abort

    @property
    def delay(self):
        """Gets the delay of this HttpRouteFaultInjectionPolicy.


        :return: The delay of this HttpRouteFaultInjectionPolicy.
        :rtype: HttpRouteFaultInjectionPolicyDelay
        """
        return self._delay

    @delay.setter
    def delay(self, delay):
        """Sets the delay of this HttpRouteFaultInjectionPolicy.


        :param delay: The delay of this HttpRouteFaultInjectionPolicy.
        :type delay: HttpRouteFaultInjectionPolicyDelay
        """

        self._delay = delay
