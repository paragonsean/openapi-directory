# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.extension_chain_extension import ExtensionChainExtension
from openapi_server.models.extension_chain_match_condition import ExtensionChainMatchCondition
from openapi_server import util


class ExtensionChain(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, extensions: List[ExtensionChainExtension]=None, match_condition: ExtensionChainMatchCondition=None, name: str=None):
        """ExtensionChain - a model defined in OpenAPI

        :param extensions: The extensions of this ExtensionChain.
        :param match_condition: The match_condition of this ExtensionChain.
        :param name: The name of this ExtensionChain.
        """
        self.openapi_types = {
            'extensions': List[ExtensionChainExtension],
            'match_condition': ExtensionChainMatchCondition,
            'name': str
        }

        self.attribute_map = {
            'extensions': 'extensions',
            'match_condition': 'matchCondition',
            'name': 'name'
        }

        self._extensions = extensions
        self._match_condition = match_condition
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExtensionChain':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ExtensionChain of this ExtensionChain.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def extensions(self):
        """Gets the extensions of this ExtensionChain.

        Required. A set of extensions to execute for the matching request. At least one extension is required. Up to 3 extensions can be defined for each extension chain for `LbTrafficExtension` resource. `LbRouteExtension` chains are limited to 1 extension per extension chain.

        :return: The extensions of this ExtensionChain.
        :rtype: List[ExtensionChainExtension]
        """
        return self._extensions

    @extensions.setter
    def extensions(self, extensions):
        """Sets the extensions of this ExtensionChain.

        Required. A set of extensions to execute for the matching request. At least one extension is required. Up to 3 extensions can be defined for each extension chain for `LbTrafficExtension` resource. `LbRouteExtension` chains are limited to 1 extension per extension chain.

        :param extensions: The extensions of this ExtensionChain.
        :type extensions: List[ExtensionChainExtension]
        """

        self._extensions = extensions

    @property
    def match_condition(self):
        """Gets the match_condition of this ExtensionChain.


        :return: The match_condition of this ExtensionChain.
        :rtype: ExtensionChainMatchCondition
        """
        return self._match_condition

    @match_condition.setter
    def match_condition(self, match_condition):
        """Sets the match_condition of this ExtensionChain.


        :param match_condition: The match_condition of this ExtensionChain.
        :type match_condition: ExtensionChainMatchCondition
        """

        self._match_condition = match_condition

    @property
    def name(self):
        """Gets the name of this ExtensionChain.

        Required. The name for this extension chain. The name is logged as part of the HTTP request logs. The name must conform with RFC-1034, is restricted to lower-cased letters, numbers and hyphens, and can have a maximum length of 63 characters. Additionally, the first character must be a letter and the last a letter or a number.

        :return: The name of this ExtensionChain.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ExtensionChain.

        Required. The name for this extension chain. The name is logged as part of the HTTP request logs. The name must conform with RFC-1034, is restricted to lower-cased letters, numbers and hyphens, and can have a maximum length of 63 characters. Additionally, the first character must be a letter and the last a letter or a number.

        :param name: The name of this ExtensionChain.
        :type name: str
        """

        self._name = name
