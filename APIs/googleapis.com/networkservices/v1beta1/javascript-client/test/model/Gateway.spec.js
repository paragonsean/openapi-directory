/**
 * Network Services API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.NetworkServicesApi);
  }
}(this, function(expect, NetworkServicesApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new NetworkServicesApi.Gateway();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Gateway', function() {
    it('should create an instance of Gateway', function() {
      // uncomment below and update the code to test Gateway
      //var instance = new NetworkServicesApi.Gateway();
      //expect(instance).to.be.a(NetworkServicesApi.Gateway);
    });

    it('should have the property addresses (base name: "addresses")', function() {
      // uncomment below and update the code to test the property addresses
      //var instance = new NetworkServicesApi.Gateway();
      //expect(instance).to.be();
    });

    it('should have the property certificateUrls (base name: "certificateUrls")', function() {
      // uncomment below and update the code to test the property certificateUrls
      //var instance = new NetworkServicesApi.Gateway();
      //expect(instance).to.be();
    });

    it('should have the property createTime (base name: "createTime")', function() {
      // uncomment below and update the code to test the property createTime
      //var instance = new NetworkServicesApi.Gateway();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new NetworkServicesApi.Gateway();
      //expect(instance).to.be();
    });

    it('should have the property envoyHeaders (base name: "envoyHeaders")', function() {
      // uncomment below and update the code to test the property envoyHeaders
      //var instance = new NetworkServicesApi.Gateway();
      //expect(instance).to.be();
    });

    it('should have the property gatewaySecurityPolicy (base name: "gatewaySecurityPolicy")', function() {
      // uncomment below and update the code to test the property gatewaySecurityPolicy
      //var instance = new NetworkServicesApi.Gateway();
      //expect(instance).to.be();
    });

    it('should have the property ipVersion (base name: "ipVersion")', function() {
      // uncomment below and update the code to test the property ipVersion
      //var instance = new NetworkServicesApi.Gateway();
      //expect(instance).to.be();
    });

    it('should have the property labels (base name: "labels")', function() {
      // uncomment below and update the code to test the property labels
      //var instance = new NetworkServicesApi.Gateway();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new NetworkServicesApi.Gateway();
      //expect(instance).to.be();
    });

    it('should have the property network (base name: "network")', function() {
      // uncomment below and update the code to test the property network
      //var instance = new NetworkServicesApi.Gateway();
      //expect(instance).to.be();
    });

    it('should have the property ports (base name: "ports")', function() {
      // uncomment below and update the code to test the property ports
      //var instance = new NetworkServicesApi.Gateway();
      //expect(instance).to.be();
    });

    it('should have the property scope (base name: "scope")', function() {
      // uncomment below and update the code to test the property scope
      //var instance = new NetworkServicesApi.Gateway();
      //expect(instance).to.be();
    });

    it('should have the property selfLink (base name: "selfLink")', function() {
      // uncomment below and update the code to test the property selfLink
      //var instance = new NetworkServicesApi.Gateway();
      //expect(instance).to.be();
    });

    it('should have the property serverTlsPolicy (base name: "serverTlsPolicy")', function() {
      // uncomment below and update the code to test the property serverTlsPolicy
      //var instance = new NetworkServicesApi.Gateway();
      //expect(instance).to.be();
    });

    it('should have the property subnetwork (base name: "subnetwork")', function() {
      // uncomment below and update the code to test the property subnetwork
      //var instance = new NetworkServicesApi.Gateway();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new NetworkServicesApi.Gateway();
      //expect(instance).to.be();
    });

    it('should have the property updateTime (base name: "updateTime")', function() {
      // uncomment below and update the code to test the property updateTime
      //var instance = new NetworkServicesApi.Gateway();
      //expect(instance).to.be();
    });

  });

}));
