/**
 * Network Services API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The HttpRouteStatefulSessionAffinityPolicy model module.
 * @module model/HttpRouteStatefulSessionAffinityPolicy
 * @version v1beta1
 */
class HttpRouteStatefulSessionAffinityPolicy {
    /**
     * Constructs a new <code>HttpRouteStatefulSessionAffinityPolicy</code>.
     * The specification for cookie-based stateful session affinity where the date plane supplies a “session cookie” with the name \&quot;GSSA\&quot; which encodes a specific destination host and each request containing that cookie will be directed to that host as long as the destination host remains up and healthy. The gRPC proxyless mesh library or sidecar proxy will manage the session cookie but the client application code is responsible for copying the cookie from each RPC in the session to the next.
     * @alias module:model/HttpRouteStatefulSessionAffinityPolicy
     */
    constructor() { 
        
        HttpRouteStatefulSessionAffinityPolicy.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>HttpRouteStatefulSessionAffinityPolicy</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HttpRouteStatefulSessionAffinityPolicy} obj Optional instance to populate.
     * @return {module:model/HttpRouteStatefulSessionAffinityPolicy} The populated <code>HttpRouteStatefulSessionAffinityPolicy</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HttpRouteStatefulSessionAffinityPolicy();

            if (data.hasOwnProperty('cookieTtl')) {
                obj['cookieTtl'] = ApiClient.convertToType(data['cookieTtl'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>HttpRouteStatefulSessionAffinityPolicy</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>HttpRouteStatefulSessionAffinityPolicy</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['cookieTtl'] && !(typeof data['cookieTtl'] === 'string' || data['cookieTtl'] instanceof String)) {
            throw new Error("Expected the field `cookieTtl` to be a primitive type in the JSON string but got " + data['cookieTtl']);
        }

        return true;
    }


}



/**
 * Required. The cookie TTL value for the Set-Cookie header generated by the data plane. The lifetime of the cookie may be set to a value from 1 to 86400 seconds (24 hours) inclusive.
 * @member {String} cookieTtl
 */
HttpRouteStatefulSessionAffinityPolicy.prototype['cookieTtl'] = undefined;






export default HttpRouteStatefulSessionAffinityPolicy;

