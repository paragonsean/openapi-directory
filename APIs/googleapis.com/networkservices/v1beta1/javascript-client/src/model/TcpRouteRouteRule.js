/**
 * Network Services API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TcpRouteRouteAction from './TcpRouteRouteAction';
import TcpRouteRouteMatch from './TcpRouteRouteMatch';

/**
 * The TcpRouteRouteRule model module.
 * @module model/TcpRouteRouteRule
 * @version v1beta1
 */
class TcpRouteRouteRule {
    /**
     * Constructs a new <code>TcpRouteRouteRule</code>.
     * Specifies how to match traffic and how to route traffic when traffic is matched.
     * @alias module:model/TcpRouteRouteRule
     */
    constructor() { 
        
        TcpRouteRouteRule.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TcpRouteRouteRule</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TcpRouteRouteRule} obj Optional instance to populate.
     * @return {module:model/TcpRouteRouteRule} The populated <code>TcpRouteRouteRule</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TcpRouteRouteRule();

            if (data.hasOwnProperty('action')) {
                obj['action'] = TcpRouteRouteAction.constructFromObject(data['action']);
            }
            if (data.hasOwnProperty('matches')) {
                obj['matches'] = ApiClient.convertToType(data['matches'], [TcpRouteRouteMatch]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TcpRouteRouteRule</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TcpRouteRouteRule</code>.
     */
    static validateJSON(data) {
        // validate the optional field `action`
        if (data['action']) { // data not null
          TcpRouteRouteAction.validateJSON(data['action']);
        }
        if (data['matches']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['matches'])) {
                throw new Error("Expected the field `matches` to be an array in the JSON data but got " + data['matches']);
            }
            // validate the optional field `matches` (array)
            for (const item of data['matches']) {
                TcpRouteRouteMatch.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {module:model/TcpRouteRouteAction} action
 */
TcpRouteRouteRule.prototype['action'] = undefined;

/**
 * Optional. RouteMatch defines the predicate used to match requests to a given action. Multiple match types are \"OR\"ed for evaluation. If no routeMatch field is specified, this rule will unconditionally match traffic.
 * @member {Array.<module:model/TcpRouteRouteMatch>} matches
 */
TcpRouteRouteRule.prototype['matches'] = undefined;






export default TcpRouteRouteRule;

