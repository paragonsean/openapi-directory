/**
 * Network Services API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GrpcRouteDestination from './GrpcRouteDestination';
import GrpcRouteFaultInjectionPolicy from './GrpcRouteFaultInjectionPolicy';
import GrpcRouteRetryPolicy from './GrpcRouteRetryPolicy';
import GrpcRouteStatefulSessionAffinityPolicy from './GrpcRouteStatefulSessionAffinityPolicy';

/**
 * The GrpcRouteRouteAction model module.
 * @module model/GrpcRouteRouteAction
 * @version v1beta1
 */
class GrpcRouteRouteAction {
    /**
     * Constructs a new <code>GrpcRouteRouteAction</code>.
     * Specifies how to route matched traffic.
     * @alias module:model/GrpcRouteRouteAction
     */
    constructor() { 
        
        GrpcRouteRouteAction.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GrpcRouteRouteAction</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GrpcRouteRouteAction} obj Optional instance to populate.
     * @return {module:model/GrpcRouteRouteAction} The populated <code>GrpcRouteRouteAction</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GrpcRouteRouteAction();

            if (data.hasOwnProperty('destinations')) {
                obj['destinations'] = ApiClient.convertToType(data['destinations'], [GrpcRouteDestination]);
            }
            if (data.hasOwnProperty('faultInjectionPolicy')) {
                obj['faultInjectionPolicy'] = GrpcRouteFaultInjectionPolicy.constructFromObject(data['faultInjectionPolicy']);
            }
            if (data.hasOwnProperty('idleTimeout')) {
                obj['idleTimeout'] = ApiClient.convertToType(data['idleTimeout'], 'String');
            }
            if (data.hasOwnProperty('retryPolicy')) {
                obj['retryPolicy'] = GrpcRouteRetryPolicy.constructFromObject(data['retryPolicy']);
            }
            if (data.hasOwnProperty('statefulSessionAffinity')) {
                obj['statefulSessionAffinity'] = GrpcRouteStatefulSessionAffinityPolicy.constructFromObject(data['statefulSessionAffinity']);
            }
            if (data.hasOwnProperty('timeout')) {
                obj['timeout'] = ApiClient.convertToType(data['timeout'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GrpcRouteRouteAction</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GrpcRouteRouteAction</code>.
     */
    static validateJSON(data) {
        if (data['destinations']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['destinations'])) {
                throw new Error("Expected the field `destinations` to be an array in the JSON data but got " + data['destinations']);
            }
            // validate the optional field `destinations` (array)
            for (const item of data['destinations']) {
                GrpcRouteDestination.validateJSON(item);
            };
        }
        // validate the optional field `faultInjectionPolicy`
        if (data['faultInjectionPolicy']) { // data not null
          GrpcRouteFaultInjectionPolicy.validateJSON(data['faultInjectionPolicy']);
        }
        // ensure the json data is a string
        if (data['idleTimeout'] && !(typeof data['idleTimeout'] === 'string' || data['idleTimeout'] instanceof String)) {
            throw new Error("Expected the field `idleTimeout` to be a primitive type in the JSON string but got " + data['idleTimeout']);
        }
        // validate the optional field `retryPolicy`
        if (data['retryPolicy']) { // data not null
          GrpcRouteRetryPolicy.validateJSON(data['retryPolicy']);
        }
        // validate the optional field `statefulSessionAffinity`
        if (data['statefulSessionAffinity']) { // data not null
          GrpcRouteStatefulSessionAffinityPolicy.validateJSON(data['statefulSessionAffinity']);
        }
        // ensure the json data is a string
        if (data['timeout'] && !(typeof data['timeout'] === 'string' || data['timeout'] instanceof String)) {
            throw new Error("Expected the field `timeout` to be a primitive type in the JSON string but got " + data['timeout']);
        }

        return true;
    }


}



/**
 * Optional. The destination services to which traffic should be forwarded. If multiple destinations are specified, traffic will be split between Backend Service(s) according to the weight field of these destinations.
 * @member {Array.<module:model/GrpcRouteDestination>} destinations
 */
GrpcRouteRouteAction.prototype['destinations'] = undefined;

/**
 * @member {module:model/GrpcRouteFaultInjectionPolicy} faultInjectionPolicy
 */
GrpcRouteRouteAction.prototype['faultInjectionPolicy'] = undefined;

/**
 * Optional. Specifies the idle timeout for the selected route. The idle timeout is defined as the period in which there are no bytes sent or received on either the upstream or downstream connection. If not set, the default idle timeout is 1 hour. If set to 0s, the timeout will be disabled.
 * @member {String} idleTimeout
 */
GrpcRouteRouteAction.prototype['idleTimeout'] = undefined;

/**
 * @member {module:model/GrpcRouteRetryPolicy} retryPolicy
 */
GrpcRouteRouteAction.prototype['retryPolicy'] = undefined;

/**
 * @member {module:model/GrpcRouteStatefulSessionAffinityPolicy} statefulSessionAffinity
 */
GrpcRouteRouteAction.prototype['statefulSessionAffinity'] = undefined;

/**
 * Optional. Specifies the timeout for selected route. Timeout is computed from the time the request has been fully processed (i.e. end of stream) up until the response has been completely processed. Timeout includes all retries.
 * @member {String} timeout
 */
GrpcRouteRouteAction.prototype['timeout'] = undefined;






export default GrpcRouteRouteAction;

