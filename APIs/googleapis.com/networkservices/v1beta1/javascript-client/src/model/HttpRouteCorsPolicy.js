/**
 * Network Services API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The HttpRouteCorsPolicy model module.
 * @module model/HttpRouteCorsPolicy
 * @version v1beta1
 */
class HttpRouteCorsPolicy {
    /**
     * Constructs a new <code>HttpRouteCorsPolicy</code>.
     * The Specification for allowing client side cross-origin requests.
     * @alias module:model/HttpRouteCorsPolicy
     */
    constructor() { 
        
        HttpRouteCorsPolicy.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>HttpRouteCorsPolicy</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HttpRouteCorsPolicy} obj Optional instance to populate.
     * @return {module:model/HttpRouteCorsPolicy} The populated <code>HttpRouteCorsPolicy</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HttpRouteCorsPolicy();

            if (data.hasOwnProperty('allowCredentials')) {
                obj['allowCredentials'] = ApiClient.convertToType(data['allowCredentials'], 'Boolean');
            }
            if (data.hasOwnProperty('allowHeaders')) {
                obj['allowHeaders'] = ApiClient.convertToType(data['allowHeaders'], ['String']);
            }
            if (data.hasOwnProperty('allowMethods')) {
                obj['allowMethods'] = ApiClient.convertToType(data['allowMethods'], ['String']);
            }
            if (data.hasOwnProperty('allowOriginRegexes')) {
                obj['allowOriginRegexes'] = ApiClient.convertToType(data['allowOriginRegexes'], ['String']);
            }
            if (data.hasOwnProperty('allowOrigins')) {
                obj['allowOrigins'] = ApiClient.convertToType(data['allowOrigins'], ['String']);
            }
            if (data.hasOwnProperty('disabled')) {
                obj['disabled'] = ApiClient.convertToType(data['disabled'], 'Boolean');
            }
            if (data.hasOwnProperty('exposeHeaders')) {
                obj['exposeHeaders'] = ApiClient.convertToType(data['exposeHeaders'], ['String']);
            }
            if (data.hasOwnProperty('maxAge')) {
                obj['maxAge'] = ApiClient.convertToType(data['maxAge'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>HttpRouteCorsPolicy</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>HttpRouteCorsPolicy</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['allowHeaders'])) {
            throw new Error("Expected the field `allowHeaders` to be an array in the JSON data but got " + data['allowHeaders']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['allowMethods'])) {
            throw new Error("Expected the field `allowMethods` to be an array in the JSON data but got " + data['allowMethods']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['allowOriginRegexes'])) {
            throw new Error("Expected the field `allowOriginRegexes` to be an array in the JSON data but got " + data['allowOriginRegexes']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['allowOrigins'])) {
            throw new Error("Expected the field `allowOrigins` to be an array in the JSON data but got " + data['allowOrigins']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['exposeHeaders'])) {
            throw new Error("Expected the field `exposeHeaders` to be an array in the JSON data but got " + data['exposeHeaders']);
        }
        // ensure the json data is a string
        if (data['maxAge'] && !(typeof data['maxAge'] === 'string' || data['maxAge'] instanceof String)) {
            throw new Error("Expected the field `maxAge` to be a primitive type in the JSON string but got " + data['maxAge']);
        }

        return true;
    }


}



/**
 * In response to a preflight request, setting this to true indicates that the actual request can include user credentials. This translates to the Access-Control-Allow-Credentials header. Default value is false.
 * @member {Boolean} allowCredentials
 */
HttpRouteCorsPolicy.prototype['allowCredentials'] = undefined;

/**
 * Specifies the content for Access-Control-Allow-Headers header.
 * @member {Array.<String>} allowHeaders
 */
HttpRouteCorsPolicy.prototype['allowHeaders'] = undefined;

/**
 * Specifies the content for Access-Control-Allow-Methods header.
 * @member {Array.<String>} allowMethods
 */
HttpRouteCorsPolicy.prototype['allowMethods'] = undefined;

/**
 * Specifies the regular expression patterns that match allowed origins. For regular expression grammar, please see https://github.com/google/re2/wiki/Syntax.
 * @member {Array.<String>} allowOriginRegexes
 */
HttpRouteCorsPolicy.prototype['allowOriginRegexes'] = undefined;

/**
 * Specifies the list of origins that will be allowed to do CORS requests. An origin is allowed if it matches either an item in allow_origins or an item in allow_origin_regexes.
 * @member {Array.<String>} allowOrigins
 */
HttpRouteCorsPolicy.prototype['allowOrigins'] = undefined;

/**
 * If true, the CORS policy is disabled. The default value is false, which indicates that the CORS policy is in effect.
 * @member {Boolean} disabled
 */
HttpRouteCorsPolicy.prototype['disabled'] = undefined;

/**
 * Specifies the content for Access-Control-Expose-Headers header.
 * @member {Array.<String>} exposeHeaders
 */
HttpRouteCorsPolicy.prototype['exposeHeaders'] = undefined;

/**
 * Specifies how long result of a preflight request can be cached in seconds. This translates to the Access-Control-Max-Age header.
 * @member {String} maxAge
 */
HttpRouteCorsPolicy.prototype['maxAge'] = undefined;






export default HttpRouteCorsPolicy;

