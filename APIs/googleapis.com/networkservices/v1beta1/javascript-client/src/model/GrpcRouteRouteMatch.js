/**
 * Network Services API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GrpcRouteHeaderMatch from './GrpcRouteHeaderMatch';
import GrpcRouteMethodMatch from './GrpcRouteMethodMatch';

/**
 * The GrpcRouteRouteMatch model module.
 * @module model/GrpcRouteRouteMatch
 * @version v1beta1
 */
class GrpcRouteRouteMatch {
    /**
     * Constructs a new <code>GrpcRouteRouteMatch</code>.
     * Criteria for matching traffic. A RouteMatch will be considered to match when all supplied fields match.
     * @alias module:model/GrpcRouteRouteMatch
     */
    constructor() { 
        
        GrpcRouteRouteMatch.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GrpcRouteRouteMatch</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GrpcRouteRouteMatch} obj Optional instance to populate.
     * @return {module:model/GrpcRouteRouteMatch} The populated <code>GrpcRouteRouteMatch</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GrpcRouteRouteMatch();

            if (data.hasOwnProperty('headers')) {
                obj['headers'] = ApiClient.convertToType(data['headers'], [GrpcRouteHeaderMatch]);
            }
            if (data.hasOwnProperty('method')) {
                obj['method'] = GrpcRouteMethodMatch.constructFromObject(data['method']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GrpcRouteRouteMatch</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GrpcRouteRouteMatch</code>.
     */
    static validateJSON(data) {
        if (data['headers']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['headers'])) {
                throw new Error("Expected the field `headers` to be an array in the JSON data but got " + data['headers']);
            }
            // validate the optional field `headers` (array)
            for (const item of data['headers']) {
                GrpcRouteHeaderMatch.validateJSON(item);
            };
        }
        // validate the optional field `method`
        if (data['method']) { // data not null
          GrpcRouteMethodMatch.validateJSON(data['method']);
        }

        return true;
    }


}



/**
 * Optional. Specifies a collection of headers to match.
 * @member {Array.<module:model/GrpcRouteHeaderMatch>} headers
 */
GrpcRouteRouteMatch.prototype['headers'] = undefined;

/**
 * @member {module:model/GrpcRouteMethodMatch} method
 */
GrpcRouteRouteMatch.prototype['method'] = undefined;






export default GrpcRouteRouteMatch;

