/**
 * Network Services API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GrpcRouteDestination model module.
 * @module model/GrpcRouteDestination
 * @version v1beta1
 */
class GrpcRouteDestination {
    /**
     * Constructs a new <code>GrpcRouteDestination</code>.
     * The destination to which traffic will be routed.
     * @alias module:model/GrpcRouteDestination
     */
    constructor() { 
        
        GrpcRouteDestination.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GrpcRouteDestination</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GrpcRouteDestination} obj Optional instance to populate.
     * @return {module:model/GrpcRouteDestination} The populated <code>GrpcRouteDestination</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GrpcRouteDestination();

            if (data.hasOwnProperty('serviceName')) {
                obj['serviceName'] = ApiClient.convertToType(data['serviceName'], 'String');
            }
            if (data.hasOwnProperty('weight')) {
                obj['weight'] = ApiClient.convertToType(data['weight'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GrpcRouteDestination</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GrpcRouteDestination</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['serviceName'] && !(typeof data['serviceName'] === 'string' || data['serviceName'] instanceof String)) {
            throw new Error("Expected the field `serviceName` to be a primitive type in the JSON string but got " + data['serviceName']);
        }

        return true;
    }


}



/**
 * Required. The URL of a destination service to which to route traffic. Must refer to either a BackendService or ServiceDirectoryService.
 * @member {String} serviceName
 */
GrpcRouteDestination.prototype['serviceName'] = undefined;

/**
 * Optional. Specifies the proportion of requests forwarded to the backend referenced by the serviceName field. This is computed as: - weight/Sum(weights in this destination list). For non-zero values, there may be some epsilon from the exact proportion defined here depending on the precision an implementation supports. If only one serviceName is specified and it has a weight greater than 0, 100% of the traffic is forwarded to that backend. If weights are specified for any one service name, they need to be specified for all of them. If weights are unspecified for all services, then, traffic is distributed in equal proportions to all of them.
 * @member {Number} weight
 */
GrpcRouteDestination.prototype['weight'] = undefined;






export default GrpcRouteDestination;

