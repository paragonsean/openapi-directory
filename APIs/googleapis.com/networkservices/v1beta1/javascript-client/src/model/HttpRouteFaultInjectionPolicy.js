/**
 * Network Services API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import HttpRouteFaultInjectionPolicyAbort from './HttpRouteFaultInjectionPolicyAbort';
import HttpRouteFaultInjectionPolicyDelay from './HttpRouteFaultInjectionPolicyDelay';

/**
 * The HttpRouteFaultInjectionPolicy model module.
 * @module model/HttpRouteFaultInjectionPolicy
 * @version v1beta1
 */
class HttpRouteFaultInjectionPolicy {
    /**
     * Constructs a new <code>HttpRouteFaultInjectionPolicy</code>.
     * The specification for fault injection introduced into traffic to test the resiliency of clients to destination service failure. As part of fault injection, when clients send requests to a destination, delays can be introduced by client proxy on a percentage of requests before sending those requests to the destination service. Similarly requests can be aborted by client proxy for a percentage of requests.
     * @alias module:model/HttpRouteFaultInjectionPolicy
     */
    constructor() { 
        
        HttpRouteFaultInjectionPolicy.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>HttpRouteFaultInjectionPolicy</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HttpRouteFaultInjectionPolicy} obj Optional instance to populate.
     * @return {module:model/HttpRouteFaultInjectionPolicy} The populated <code>HttpRouteFaultInjectionPolicy</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HttpRouteFaultInjectionPolicy();

            if (data.hasOwnProperty('abort')) {
                obj['abort'] = HttpRouteFaultInjectionPolicyAbort.constructFromObject(data['abort']);
            }
            if (data.hasOwnProperty('delay')) {
                obj['delay'] = HttpRouteFaultInjectionPolicyDelay.constructFromObject(data['delay']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>HttpRouteFaultInjectionPolicy</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>HttpRouteFaultInjectionPolicy</code>.
     */
    static validateJSON(data) {
        // validate the optional field `abort`
        if (data['abort']) { // data not null
          HttpRouteFaultInjectionPolicyAbort.validateJSON(data['abort']);
        }
        // validate the optional field `delay`
        if (data['delay']) { // data not null
          HttpRouteFaultInjectionPolicyDelay.validateJSON(data['delay']);
        }

        return true;
    }


}



/**
 * @member {module:model/HttpRouteFaultInjectionPolicyAbort} abort
 */
HttpRouteFaultInjectionPolicy.prototype['abort'] = undefined;

/**
 * @member {module:model/HttpRouteFaultInjectionPolicyDelay} delay
 */
HttpRouteFaultInjectionPolicy.prototype['delay'] = undefined;






export default HttpRouteFaultInjectionPolicy;

