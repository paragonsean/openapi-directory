/**
 * Network Services API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGrpcRouteRouteRule.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGrpcRouteRouteRule::OAIGrpcRouteRouteRule(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGrpcRouteRouteRule::OAIGrpcRouteRouteRule() {
    this->initializeModel();
}

OAIGrpcRouteRouteRule::~OAIGrpcRouteRouteRule() {}

void OAIGrpcRouteRouteRule::initializeModel() {

    m_action_isSet = false;
    m_action_isValid = false;

    m_matches_isSet = false;
    m_matches_isValid = false;
}

void OAIGrpcRouteRouteRule::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGrpcRouteRouteRule::fromJsonObject(QJsonObject json) {

    m_action_isValid = ::OpenAPI::fromJsonValue(m_action, json[QString("action")]);
    m_action_isSet = !json[QString("action")].isNull() && m_action_isValid;

    m_matches_isValid = ::OpenAPI::fromJsonValue(m_matches, json[QString("matches")]);
    m_matches_isSet = !json[QString("matches")].isNull() && m_matches_isValid;
}

QString OAIGrpcRouteRouteRule::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGrpcRouteRouteRule::asJsonObject() const {
    QJsonObject obj;
    if (m_action.isSet()) {
        obj.insert(QString("action"), ::OpenAPI::toJsonValue(m_action));
    }
    if (m_matches.size() > 0) {
        obj.insert(QString("matches"), ::OpenAPI::toJsonValue(m_matches));
    }
    return obj;
}

OAIGrpcRouteRouteAction OAIGrpcRouteRouteRule::getAction() const {
    return m_action;
}
void OAIGrpcRouteRouteRule::setAction(const OAIGrpcRouteRouteAction &action) {
    m_action = action;
    m_action_isSet = true;
}

bool OAIGrpcRouteRouteRule::is_action_Set() const{
    return m_action_isSet;
}

bool OAIGrpcRouteRouteRule::is_action_Valid() const{
    return m_action_isValid;
}

QList<OAIGrpcRouteRouteMatch> OAIGrpcRouteRouteRule::getMatches() const {
    return m_matches;
}
void OAIGrpcRouteRouteRule::setMatches(const QList<OAIGrpcRouteRouteMatch> &matches) {
    m_matches = matches;
    m_matches_isSet = true;
}

bool OAIGrpcRouteRouteRule::is_matches_Set() const{
    return m_matches_isSet;
}

bool OAIGrpcRouteRouteRule::is_matches_Valid() const{
    return m_matches_isValid;
}

bool OAIGrpcRouteRouteRule::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_action.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_matches.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGrpcRouteRouteRule::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
