/**
 * Network Services API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILbTrafficExtension.h
 *
 * &#x60;LbTrafficExtension&#x60; is a resource that lets the extension service modify the headers and payloads of both requests and responses without impacting the choice of backend services or any other security policies associated with the backend service.
 */

#ifndef OAILbTrafficExtension_H
#define OAILbTrafficExtension_H

#include <QJsonObject>

#include "OAIExtensionChain.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIExtensionChain;

class OAILbTrafficExtension : public OAIObject {
public:
    OAILbTrafficExtension();
    OAILbTrafficExtension(QString json);
    ~OAILbTrafficExtension() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCreateTime() const;
    void setCreateTime(const QString &create_time);
    bool is_create_time_Set() const;
    bool is_create_time_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QList<OAIExtensionChain> getExtensionChains() const;
    void setExtensionChains(const QList<OAIExtensionChain> &extension_chains);
    bool is_extension_chains_Set() const;
    bool is_extension_chains_Valid() const;

    QList<QString> getForwardingRules() const;
    void setForwardingRules(const QList<QString> &forwarding_rules);
    bool is_forwarding_rules_Set() const;
    bool is_forwarding_rules_Valid() const;

    QMap<QString, QString> getLabels() const;
    void setLabels(const QMap<QString, QString> &labels);
    bool is_labels_Set() const;
    bool is_labels_Valid() const;

    QString getLoadBalancingScheme() const;
    void setLoadBalancingScheme(const QString &load_balancing_scheme);
    bool is_load_balancing_scheme_Set() const;
    bool is_load_balancing_scheme_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getUpdateTime() const;
    void setUpdateTime(const QString &update_time);
    bool is_update_time_Set() const;
    bool is_update_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_create_time;
    bool m_create_time_isSet;
    bool m_create_time_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QList<OAIExtensionChain> m_extension_chains;
    bool m_extension_chains_isSet;
    bool m_extension_chains_isValid;

    QList<QString> m_forwarding_rules;
    bool m_forwarding_rules_isSet;
    bool m_forwarding_rules_isValid;

    QMap<QString, QString> m_labels;
    bool m_labels_isSet;
    bool m_labels_isValid;

    QString m_load_balancing_scheme;
    bool m_load_balancing_scheme_isSet;
    bool m_load_balancing_scheme_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_update_time;
    bool m_update_time_isSet;
    bool m_update_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILbTrafficExtension)

#endif // OAILbTrafficExtension_H
