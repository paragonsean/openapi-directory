/**
 * Network Services API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGrpcRouteDestination.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGrpcRouteDestination::OAIGrpcRouteDestination(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGrpcRouteDestination::OAIGrpcRouteDestination() {
    this->initializeModel();
}

OAIGrpcRouteDestination::~OAIGrpcRouteDestination() {}

void OAIGrpcRouteDestination::initializeModel() {

    m_service_name_isSet = false;
    m_service_name_isValid = false;

    m_weight_isSet = false;
    m_weight_isValid = false;
}

void OAIGrpcRouteDestination::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGrpcRouteDestination::fromJsonObject(QJsonObject json) {

    m_service_name_isValid = ::OpenAPI::fromJsonValue(m_service_name, json[QString("serviceName")]);
    m_service_name_isSet = !json[QString("serviceName")].isNull() && m_service_name_isValid;

    m_weight_isValid = ::OpenAPI::fromJsonValue(m_weight, json[QString("weight")]);
    m_weight_isSet = !json[QString("weight")].isNull() && m_weight_isValid;
}

QString OAIGrpcRouteDestination::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGrpcRouteDestination::asJsonObject() const {
    QJsonObject obj;
    if (m_service_name_isSet) {
        obj.insert(QString("serviceName"), ::OpenAPI::toJsonValue(m_service_name));
    }
    if (m_weight_isSet) {
        obj.insert(QString("weight"), ::OpenAPI::toJsonValue(m_weight));
    }
    return obj;
}

QString OAIGrpcRouteDestination::getServiceName() const {
    return m_service_name;
}
void OAIGrpcRouteDestination::setServiceName(const QString &service_name) {
    m_service_name = service_name;
    m_service_name_isSet = true;
}

bool OAIGrpcRouteDestination::is_service_name_Set() const{
    return m_service_name_isSet;
}

bool OAIGrpcRouteDestination::is_service_name_Valid() const{
    return m_service_name_isValid;
}

qint32 OAIGrpcRouteDestination::getWeight() const {
    return m_weight;
}
void OAIGrpcRouteDestination::setWeight(const qint32 &weight) {
    m_weight = weight;
    m_weight_isSet = true;
}

bool OAIGrpcRouteDestination::is_weight_Set() const{
    return m_weight_isSet;
}

bool OAIGrpcRouteDestination::is_weight_Valid() const{
    return m_weight_isValid;
}

bool OAIGrpcRouteDestination::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_service_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_weight_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGrpcRouteDestination::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
