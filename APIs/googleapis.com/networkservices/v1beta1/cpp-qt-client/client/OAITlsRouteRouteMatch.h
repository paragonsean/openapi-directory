/**
 * Network Services API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITlsRouteRouteMatch.h
 *
 * RouteMatch defines the predicate used to match requests to a given action. Multiple match types are \&quot;AND\&quot;ed for evaluation. If no routeMatch field is specified, this rule will unconditionally match traffic.
 */

#ifndef OAITlsRouteRouteMatch_H
#define OAITlsRouteRouteMatch_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITlsRouteRouteMatch : public OAIObject {
public:
    OAITlsRouteRouteMatch();
    OAITlsRouteRouteMatch(QString json);
    ~OAITlsRouteRouteMatch() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getAlpn() const;
    void setAlpn(const QList<QString> &alpn);
    bool is_alpn_Set() const;
    bool is_alpn_Valid() const;

    QList<QString> getSniHost() const;
    void setSniHost(const QList<QString> &sni_host);
    bool is_sni_host_Set() const;
    bool is_sni_host_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_alpn;
    bool m_alpn_isSet;
    bool m_alpn_isValid;

    QList<QString> m_sni_host;
    bool m_sni_host_isSet;
    bool m_sni_host_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITlsRouteRouteMatch)

#endif // OAITlsRouteRouteMatch_H
