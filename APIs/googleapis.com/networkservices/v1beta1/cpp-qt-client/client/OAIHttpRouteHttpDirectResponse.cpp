/**
 * Network Services API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIHttpRouteHttpDirectResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIHttpRouteHttpDirectResponse::OAIHttpRouteHttpDirectResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIHttpRouteHttpDirectResponse::OAIHttpRouteHttpDirectResponse() {
    this->initializeModel();
}

OAIHttpRouteHttpDirectResponse::~OAIHttpRouteHttpDirectResponse() {}

void OAIHttpRouteHttpDirectResponse::initializeModel() {

    m_bytes_body_isSet = false;
    m_bytes_body_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_string_body_isSet = false;
    m_string_body_isValid = false;
}

void OAIHttpRouteHttpDirectResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIHttpRouteHttpDirectResponse::fromJsonObject(QJsonObject json) {

    m_bytes_body_isValid = ::OpenAPI::fromJsonValue(m_bytes_body, json[QString("bytesBody")]);
    m_bytes_body_isSet = !json[QString("bytesBody")].isNull() && m_bytes_body_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_string_body_isValid = ::OpenAPI::fromJsonValue(m_string_body, json[QString("stringBody")]);
    m_string_body_isSet = !json[QString("stringBody")].isNull() && m_string_body_isValid;
}

QString OAIHttpRouteHttpDirectResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIHttpRouteHttpDirectResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_bytes_body_isSet) {
        obj.insert(QString("bytesBody"), ::OpenAPI::toJsonValue(m_bytes_body));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_string_body_isSet) {
        obj.insert(QString("stringBody"), ::OpenAPI::toJsonValue(m_string_body));
    }
    return obj;
}

QByteArray OAIHttpRouteHttpDirectResponse::getBytesBody() const {
    return m_bytes_body;
}
void OAIHttpRouteHttpDirectResponse::setBytesBody(const QByteArray &bytes_body) {
    m_bytes_body = bytes_body;
    m_bytes_body_isSet = true;
}

bool OAIHttpRouteHttpDirectResponse::is_bytes_body_Set() const{
    return m_bytes_body_isSet;
}

bool OAIHttpRouteHttpDirectResponse::is_bytes_body_Valid() const{
    return m_bytes_body_isValid;
}

qint32 OAIHttpRouteHttpDirectResponse::getStatus() const {
    return m_status;
}
void OAIHttpRouteHttpDirectResponse::setStatus(const qint32 &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIHttpRouteHttpDirectResponse::is_status_Set() const{
    return m_status_isSet;
}

bool OAIHttpRouteHttpDirectResponse::is_status_Valid() const{
    return m_status_isValid;
}

QString OAIHttpRouteHttpDirectResponse::getStringBody() const {
    return m_string_body;
}
void OAIHttpRouteHttpDirectResponse::setStringBody(const QString &string_body) {
    m_string_body = string_body;
    m_string_body_isSet = true;
}

bool OAIHttpRouteHttpDirectResponse::is_string_body_Set() const{
    return m_string_body_isSet;
}

bool OAIHttpRouteHttpDirectResponse::is_string_body_Valid() const{
    return m_string_body_isValid;
}

bool OAIHttpRouteHttpDirectResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bytes_body_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_string_body_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIHttpRouteHttpDirectResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
