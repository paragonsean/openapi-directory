/**
 * Network Services API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGrpcRouteRetryPolicy.h
 *
 * The specifications for retries.
 */

#ifndef OAIGrpcRouteRetryPolicy_H
#define OAIGrpcRouteRetryPolicy_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGrpcRouteRetryPolicy : public OAIObject {
public:
    OAIGrpcRouteRetryPolicy();
    OAIGrpcRouteRetryPolicy(QString json);
    ~OAIGrpcRouteRetryPolicy() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getNumRetries() const;
    void setNumRetries(const qint32 &num_retries);
    bool is_num_retries_Set() const;
    bool is_num_retries_Valid() const;

    QList<QString> getRetryConditions() const;
    void setRetryConditions(const QList<QString> &retry_conditions);
    bool is_retry_conditions_Set() const;
    bool is_retry_conditions_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_num_retries;
    bool m_num_retries_isSet;
    bool m_num_retries_isValid;

    QList<QString> m_retry_conditions;
    bool m_retry_conditions_isSet;
    bool m_retry_conditions_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGrpcRouteRetryPolicy)

#endif // OAIGrpcRouteRetryPolicy_H
