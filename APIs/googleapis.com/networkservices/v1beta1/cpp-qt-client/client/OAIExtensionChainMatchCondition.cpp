/**
 * Network Services API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIExtensionChainMatchCondition.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIExtensionChainMatchCondition::OAIExtensionChainMatchCondition(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIExtensionChainMatchCondition::OAIExtensionChainMatchCondition() {
    this->initializeModel();
}

OAIExtensionChainMatchCondition::~OAIExtensionChainMatchCondition() {}

void OAIExtensionChainMatchCondition::initializeModel() {

    m_cel_expression_isSet = false;
    m_cel_expression_isValid = false;
}

void OAIExtensionChainMatchCondition::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIExtensionChainMatchCondition::fromJsonObject(QJsonObject json) {

    m_cel_expression_isValid = ::OpenAPI::fromJsonValue(m_cel_expression, json[QString("celExpression")]);
    m_cel_expression_isSet = !json[QString("celExpression")].isNull() && m_cel_expression_isValid;
}

QString OAIExtensionChainMatchCondition::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIExtensionChainMatchCondition::asJsonObject() const {
    QJsonObject obj;
    if (m_cel_expression_isSet) {
        obj.insert(QString("celExpression"), ::OpenAPI::toJsonValue(m_cel_expression));
    }
    return obj;
}

QString OAIExtensionChainMatchCondition::getCelExpression() const {
    return m_cel_expression;
}
void OAIExtensionChainMatchCondition::setCelExpression(const QString &cel_expression) {
    m_cel_expression = cel_expression;
    m_cel_expression_isSet = true;
}

bool OAIExtensionChainMatchCondition::is_cel_expression_Set() const{
    return m_cel_expression_isSet;
}

bool OAIExtensionChainMatchCondition::is_cel_expression_Valid() const{
    return m_cel_expression_isValid;
}

bool OAIExtensionChainMatchCondition::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cel_expression_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIExtensionChainMatchCondition::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
