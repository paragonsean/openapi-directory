# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.grpc_route_fault_injection_policy_abort import GrpcRouteFaultInjectionPolicyAbort
from openapi_server.models.grpc_route_fault_injection_policy_delay import GrpcRouteFaultInjectionPolicyDelay
from openapi_server import util


class GrpcRouteFaultInjectionPolicy(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, abort: GrpcRouteFaultInjectionPolicyAbort=None, delay: GrpcRouteFaultInjectionPolicyDelay=None):
        """GrpcRouteFaultInjectionPolicy - a model defined in OpenAPI

        :param abort: The abort of this GrpcRouteFaultInjectionPolicy.
        :param delay: The delay of this GrpcRouteFaultInjectionPolicy.
        """
        self.openapi_types = {
            'abort': GrpcRouteFaultInjectionPolicyAbort,
            'delay': GrpcRouteFaultInjectionPolicyDelay
        }

        self.attribute_map = {
            'abort': 'abort',
            'delay': 'delay'
        }

        self._abort = abort
        self._delay = delay

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GrpcRouteFaultInjectionPolicy':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GrpcRouteFaultInjectionPolicy of this GrpcRouteFaultInjectionPolicy.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def abort(self):
        """Gets the abort of this GrpcRouteFaultInjectionPolicy.


        :return: The abort of this GrpcRouteFaultInjectionPolicy.
        :rtype: GrpcRouteFaultInjectionPolicyAbort
        """
        return self._abort

    @abort.setter
    def abort(self, abort):
        """Sets the abort of this GrpcRouteFaultInjectionPolicy.


        :param abort: The abort of this GrpcRouteFaultInjectionPolicy.
        :type abort: GrpcRouteFaultInjectionPolicyAbort
        """

        self._abort = abort

    @property
    def delay(self):
        """Gets the delay of this GrpcRouteFaultInjectionPolicy.


        :return: The delay of this GrpcRouteFaultInjectionPolicy.
        :rtype: GrpcRouteFaultInjectionPolicyDelay
        """
        return self._delay

    @delay.setter
    def delay(self, delay):
        """Sets the delay of this GrpcRouteFaultInjectionPolicy.


        :param delay: The delay of this GrpcRouteFaultInjectionPolicy.
        :type delay: GrpcRouteFaultInjectionPolicyDelay
        """

        self._delay = delay
