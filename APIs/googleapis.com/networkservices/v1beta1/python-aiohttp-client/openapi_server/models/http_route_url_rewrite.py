# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class HttpRouteURLRewrite(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, host_rewrite: str=None, path_prefix_rewrite: str=None):
        """HttpRouteURLRewrite - a model defined in OpenAPI

        :param host_rewrite: The host_rewrite of this HttpRouteURLRewrite.
        :param path_prefix_rewrite: The path_prefix_rewrite of this HttpRouteURLRewrite.
        """
        self.openapi_types = {
            'host_rewrite': str,
            'path_prefix_rewrite': str
        }

        self.attribute_map = {
            'host_rewrite': 'hostRewrite',
            'path_prefix_rewrite': 'pathPrefixRewrite'
        }

        self._host_rewrite = host_rewrite
        self._path_prefix_rewrite = path_prefix_rewrite

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HttpRouteURLRewrite':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HttpRouteURLRewrite of this HttpRouteURLRewrite.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def host_rewrite(self):
        """Gets the host_rewrite of this HttpRouteURLRewrite.

        Prior to forwarding the request to the selected destination, the requests host header is replaced by this value.

        :return: The host_rewrite of this HttpRouteURLRewrite.
        :rtype: str
        """
        return self._host_rewrite

    @host_rewrite.setter
    def host_rewrite(self, host_rewrite):
        """Sets the host_rewrite of this HttpRouteURLRewrite.

        Prior to forwarding the request to the selected destination, the requests host header is replaced by this value.

        :param host_rewrite: The host_rewrite of this HttpRouteURLRewrite.
        :type host_rewrite: str
        """

        self._host_rewrite = host_rewrite

    @property
    def path_prefix_rewrite(self):
        """Gets the path_prefix_rewrite of this HttpRouteURLRewrite.

        Prior to forwarding the request to the selected destination, the matching portion of the requests path is replaced by this value.

        :return: The path_prefix_rewrite of this HttpRouteURLRewrite.
        :rtype: str
        """
        return self._path_prefix_rewrite

    @path_prefix_rewrite.setter
    def path_prefix_rewrite(self, path_prefix_rewrite):
        """Sets the path_prefix_rewrite of this HttpRouteURLRewrite.

        Prior to forwarding the request to the selected destination, the matching portion of the requests path is replaced by this value.

        :param path_prefix_rewrite: The path_prefix_rewrite of this HttpRouteURLRewrite.
        :type path_prefix_rewrite: str
        """

        self._path_prefix_rewrite = path_prefix_rewrite
