# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.tls_route_route_destination import TlsRouteRouteDestination
from openapi_server import util


class TlsRouteRouteAction(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, destinations: List[TlsRouteRouteDestination]=None, idle_timeout: str=None):
        """TlsRouteRouteAction - a model defined in OpenAPI

        :param destinations: The destinations of this TlsRouteRouteAction.
        :param idle_timeout: The idle_timeout of this TlsRouteRouteAction.
        """
        self.openapi_types = {
            'destinations': List[TlsRouteRouteDestination],
            'idle_timeout': str
        }

        self.attribute_map = {
            'destinations': 'destinations',
            'idle_timeout': 'idleTimeout'
        }

        self._destinations = destinations
        self._idle_timeout = idle_timeout

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TlsRouteRouteAction':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TlsRouteRouteAction of this TlsRouteRouteAction.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def destinations(self):
        """Gets the destinations of this TlsRouteRouteAction.

        Required. The destination services to which traffic should be forwarded. At least one destination service is required.

        :return: The destinations of this TlsRouteRouteAction.
        :rtype: List[TlsRouteRouteDestination]
        """
        return self._destinations

    @destinations.setter
    def destinations(self, destinations):
        """Sets the destinations of this TlsRouteRouteAction.

        Required. The destination services to which traffic should be forwarded. At least one destination service is required.

        :param destinations: The destinations of this TlsRouteRouteAction.
        :type destinations: List[TlsRouteRouteDestination]
        """

        self._destinations = destinations

    @property
    def idle_timeout(self):
        """Gets the idle_timeout of this TlsRouteRouteAction.

        Optional. Specifies the idle timeout for the selected route. The idle timeout is defined as the period in which there are no bytes sent or received on either the upstream or downstream connection. If not set, the default idle timeout is 1 hour. If set to 0s, the timeout will be disabled.

        :return: The idle_timeout of this TlsRouteRouteAction.
        :rtype: str
        """
        return self._idle_timeout

    @idle_timeout.setter
    def idle_timeout(self, idle_timeout):
        """Sets the idle_timeout of this TlsRouteRouteAction.

        Optional. Specifies the idle timeout for the selected route. The idle timeout is defined as the period in which there are no bytes sent or received on either the upstream or downstream connection. If not set, the default idle timeout is 1 hour. If set to 0s, the timeout will be disabled.

        :param idle_timeout: The idle_timeout of this TlsRouteRouteAction.
        :type idle_timeout: str
        """

        self._idle_timeout = idle_timeout
