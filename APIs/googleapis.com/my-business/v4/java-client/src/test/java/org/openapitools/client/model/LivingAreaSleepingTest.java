/*
 * Google My Business API
 * The Google My Business API provides an interface for managing business location information on Google.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for LivingAreaSleeping
 */
public class LivingAreaSleepingTest {
    private final LivingAreaSleeping model = new LivingAreaSleeping();

    /**
     * Model tests for LivingAreaSleeping
     */
    @Test
    public void testLivingAreaSleeping() {
        // TODO: test LivingAreaSleeping
    }

    /**
     * Test the property 'bedsCount'
     */
    @Test
    public void bedsCountTest() {
        // TODO: test bedsCount
    }

    /**
     * Test the property 'bedsCountException'
     */
    @Test
    public void bedsCountExceptionTest() {
        // TODO: test bedsCountException
    }

    /**
     * Test the property 'bunkBedsCount'
     */
    @Test
    public void bunkBedsCountTest() {
        // TODO: test bunkBedsCount
    }

    /**
     * Test the property 'bunkBedsCountException'
     */
    @Test
    public void bunkBedsCountExceptionTest() {
        // TODO: test bunkBedsCountException
    }

    /**
     * Test the property 'cribsCount'
     */
    @Test
    public void cribsCountTest() {
        // TODO: test cribsCount
    }

    /**
     * Test the property 'cribsCountException'
     */
    @Test
    public void cribsCountExceptionTest() {
        // TODO: test cribsCountException
    }

    /**
     * Test the property 'doubleBedsCount'
     */
    @Test
    public void doubleBedsCountTest() {
        // TODO: test doubleBedsCount
    }

    /**
     * Test the property 'doubleBedsCountException'
     */
    @Test
    public void doubleBedsCountExceptionTest() {
        // TODO: test doubleBedsCountException
    }

    /**
     * Test the property 'featherPillows'
     */
    @Test
    public void featherPillowsTest() {
        // TODO: test featherPillows
    }

    /**
     * Test the property 'featherPillowsException'
     */
    @Test
    public void featherPillowsExceptionTest() {
        // TODO: test featherPillowsException
    }

    /**
     * Test the property 'hypoallergenicBedding'
     */
    @Test
    public void hypoallergenicBeddingTest() {
        // TODO: test hypoallergenicBedding
    }

    /**
     * Test the property 'hypoallergenicBeddingException'
     */
    @Test
    public void hypoallergenicBeddingExceptionTest() {
        // TODO: test hypoallergenicBeddingException
    }

    /**
     * Test the property 'kingBedsCount'
     */
    @Test
    public void kingBedsCountTest() {
        // TODO: test kingBedsCount
    }

    /**
     * Test the property 'kingBedsCountException'
     */
    @Test
    public void kingBedsCountExceptionTest() {
        // TODO: test kingBedsCountException
    }

    /**
     * Test the property 'memoryFoamPillows'
     */
    @Test
    public void memoryFoamPillowsTest() {
        // TODO: test memoryFoamPillows
    }

    /**
     * Test the property 'memoryFoamPillowsException'
     */
    @Test
    public void memoryFoamPillowsExceptionTest() {
        // TODO: test memoryFoamPillowsException
    }

    /**
     * Test the property 'otherBedsCount'
     */
    @Test
    public void otherBedsCountTest() {
        // TODO: test otherBedsCount
    }

    /**
     * Test the property 'otherBedsCountException'
     */
    @Test
    public void otherBedsCountExceptionTest() {
        // TODO: test otherBedsCountException
    }

    /**
     * Test the property 'queenBedsCount'
     */
    @Test
    public void queenBedsCountTest() {
        // TODO: test queenBedsCount
    }

    /**
     * Test the property 'queenBedsCountException'
     */
    @Test
    public void queenBedsCountExceptionTest() {
        // TODO: test queenBedsCountException
    }

    /**
     * Test the property 'rollAwayBedsCount'
     */
    @Test
    public void rollAwayBedsCountTest() {
        // TODO: test rollAwayBedsCount
    }

    /**
     * Test the property 'rollAwayBedsCountException'
     */
    @Test
    public void rollAwayBedsCountExceptionTest() {
        // TODO: test rollAwayBedsCountException
    }

    /**
     * Test the property 'singleOrTwinBedsCount'
     */
    @Test
    public void singleOrTwinBedsCountTest() {
        // TODO: test singleOrTwinBedsCount
    }

    /**
     * Test the property 'singleOrTwinBedsCountException'
     */
    @Test
    public void singleOrTwinBedsCountExceptionTest() {
        // TODO: test singleOrTwinBedsCountException
    }

    /**
     * Test the property 'sofaBedsCount'
     */
    @Test
    public void sofaBedsCountTest() {
        // TODO: test sofaBedsCount
    }

    /**
     * Test the property 'sofaBedsCountException'
     */
    @Test
    public void sofaBedsCountExceptionTest() {
        // TODO: test sofaBedsCountException
    }

    /**
     * Test the property 'syntheticPillows'
     */
    @Test
    public void syntheticPillowsTest() {
        // TODO: test syntheticPillows
    }

    /**
     * Test the property 'syntheticPillowsException'
     */
    @Test
    public void syntheticPillowsExceptionTest() {
        // TODO: test syntheticPillowsException
    }

}
