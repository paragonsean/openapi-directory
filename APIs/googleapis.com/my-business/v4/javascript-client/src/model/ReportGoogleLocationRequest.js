/**
 * Google My Business API
 * The Google My Business API provides an interface for managing business location information on Google.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ReportGoogleLocationRequest model module.
 * @module model/ReportGoogleLocationRequest
 * @version v4
 */
class ReportGoogleLocationRequest {
    /**
     * Constructs a new <code>ReportGoogleLocationRequest</code>.
     * Request message for reporting a GoogleLocation.
     * @alias module:model/ReportGoogleLocationRequest
     */
    constructor() { 
        
        ReportGoogleLocationRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ReportGoogleLocationRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReportGoogleLocationRequest} obj Optional instance to populate.
     * @return {module:model/ReportGoogleLocationRequest} The populated <code>ReportGoogleLocationRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReportGoogleLocationRequest();

            if (data.hasOwnProperty('locationGroupName')) {
                obj['locationGroupName'] = ApiClient.convertToType(data['locationGroupName'], 'String');
            }
            if (data.hasOwnProperty('reportReasonBadLocation')) {
                obj['reportReasonBadLocation'] = ApiClient.convertToType(data['reportReasonBadLocation'], 'String');
            }
            if (data.hasOwnProperty('reportReasonBadRecommendation')) {
                obj['reportReasonBadRecommendation'] = ApiClient.convertToType(data['reportReasonBadRecommendation'], 'String');
            }
            if (data.hasOwnProperty('reportReasonElaboration')) {
                obj['reportReasonElaboration'] = ApiClient.convertToType(data['reportReasonElaboration'], 'String');
            }
            if (data.hasOwnProperty('reportReasonLanguageCode')) {
                obj['reportReasonLanguageCode'] = ApiClient.convertToType(data['reportReasonLanguageCode'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReportGoogleLocationRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReportGoogleLocationRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['locationGroupName'] && !(typeof data['locationGroupName'] === 'string' || data['locationGroupName'] instanceof String)) {
            throw new Error("Expected the field `locationGroupName` to be a primitive type in the JSON string but got " + data['locationGroupName']);
        }
        // ensure the json data is a string
        if (data['reportReasonBadLocation'] && !(typeof data['reportReasonBadLocation'] === 'string' || data['reportReasonBadLocation'] instanceof String)) {
            throw new Error("Expected the field `reportReasonBadLocation` to be a primitive type in the JSON string but got " + data['reportReasonBadLocation']);
        }
        // ensure the json data is a string
        if (data['reportReasonBadRecommendation'] && !(typeof data['reportReasonBadRecommendation'] === 'string' || data['reportReasonBadRecommendation'] instanceof String)) {
            throw new Error("Expected the field `reportReasonBadRecommendation` to be a primitive type in the JSON string but got " + data['reportReasonBadRecommendation']);
        }
        // ensure the json data is a string
        if (data['reportReasonElaboration'] && !(typeof data['reportReasonElaboration'] === 'string' || data['reportReasonElaboration'] instanceof String)) {
            throw new Error("Expected the field `reportReasonElaboration` to be a primitive type in the JSON string but got " + data['reportReasonElaboration']);
        }
        // ensure the json data is a string
        if (data['reportReasonLanguageCode'] && !(typeof data['reportReasonLanguageCode'] === 'string' || data['reportReasonLanguageCode'] instanceof String)) {
            throw new Error("Expected the field `reportReasonLanguageCode` to be a primitive type in the JSON string but got " + data['reportReasonLanguageCode']);
        }

        return true;
    }


}



/**
 * Optional. The resource name of the location group that this Google Location is being reported for, in the format `accounts/{account_id}`.
 * @member {String} locationGroupName
 */
ReportGoogleLocationRequest.prototype['locationGroupName'] = undefined;

/**
 * The reason for which the user is reporting this location when the issue is with the location itself.
 * @member {module:model/ReportGoogleLocationRequest.ReportReasonBadLocationEnum} reportReasonBadLocation
 */
ReportGoogleLocationRequest.prototype['reportReasonBadLocation'] = undefined;

/**
 * The reason for which the user is reporting this location when the issue is with the recommendation. This report is useful if the location has been recommended to the Business Profile account.
 * @member {module:model/ReportGoogleLocationRequest.ReportReasonBadRecommendationEnum} reportReasonBadRecommendation
 */
ReportGoogleLocationRequest.prototype['reportReasonBadRecommendation'] = undefined;

/**
 * Optional. A text entry for elaborating on the reason for which the user is reporting this location. The maximum length is 512 characters.
 * @member {String} reportReasonElaboration
 */
ReportGoogleLocationRequest.prototype['reportReasonElaboration'] = undefined;

/**
 * Optional. The BCP 47 code of language used in `report_reason_elaboration`.
 * @member {String} reportReasonLanguageCode
 */
ReportGoogleLocationRequest.prototype['reportReasonLanguageCode'] = undefined;





/**
 * Allowed values for the <code>reportReasonBadLocation</code> property.
 * @enum {String}
 * @readonly
 */
ReportGoogleLocationRequest['ReportReasonBadLocationEnum'] = {

    /**
     * value: "BAD_LOCATION_REASON_UNSPECIFIED"
     * @const
     */
    "BAD_LOCATION_REASON_UNSPECIFIED": "BAD_LOCATION_REASON_UNSPECIFIED",

    /**
     * value: "NOT_A_LOCATION"
     * @const
     */
    "NOT_A_LOCATION": "NOT_A_LOCATION",

    /**
     * value: "PERMANENTLY_CLOSED"
     * @const
     */
    "PERMANENTLY_CLOSED": "PERMANENTLY_CLOSED",

    /**
     * value: "DOES_NOT_EXIST"
     * @const
     */
    "DOES_NOT_EXIST": "DOES_NOT_EXIST",

    /**
     * value: "SPAM"
     * @const
     */
    "SPAM": "SPAM",

    /**
     * value: "NOT_A_BUSINESS"
     * @const
     */
    "NOT_A_BUSINESS": "NOT_A_BUSINESS",

    /**
     * value: "MOVED"
     * @const
     */
    "MOVED": "MOVED",

    /**
     * value: "DUPLICATE"
     * @const
     */
    "DUPLICATE": "DUPLICATE"
};


/**
 * Allowed values for the <code>reportReasonBadRecommendation</code> property.
 * @enum {String}
 * @readonly
 */
ReportGoogleLocationRequest['ReportReasonBadRecommendationEnum'] = {

    /**
     * value: "BAD_RECOMMENDATION_REASON_UNSPECIFIED"
     * @const
     */
    "BAD_RECOMMENDATION_REASON_UNSPECIFIED": "BAD_RECOMMENDATION_REASON_UNSPECIFIED",

    /**
     * value: "NOT_A_STORE_FRONT"
     * @const
     */
    "NOT_A_STORE_FRONT": "NOT_A_STORE_FRONT",

    /**
     * value: "NOT_PART_OF_SUGGESTED_CHAIN"
     * @const
     */
    "NOT_PART_OF_SUGGESTED_CHAIN": "NOT_PART_OF_SUGGESTED_CHAIN",

    /**
     * value: "IRRELEVANT"
     * @const
     */
    "IRRELEVANT": "IRRELEVANT"
};



export default ReportGoogleLocationRequest;

