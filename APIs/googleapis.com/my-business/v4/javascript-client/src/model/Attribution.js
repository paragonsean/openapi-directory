/**
 * Google My Business API
 * The Google My Business API provides an interface for managing business location information on Google.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Attribution model module.
 * @module model/Attribution
 * @version v4
 */
class Attribution {
    /**
     * Constructs a new <code>Attribution</code>.
     * Attribution information for customer media items, such as the contributor&#39;s name and profile picture.
     * @alias module:model/Attribution
     */
    constructor() { 
        
        Attribution.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Attribution</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Attribution} obj Optional instance to populate.
     * @return {module:model/Attribution} The populated <code>Attribution</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Attribution();

            if (data.hasOwnProperty('profileName')) {
                obj['profileName'] = ApiClient.convertToType(data['profileName'], 'String');
            }
            if (data.hasOwnProperty('profilePhotoUrl')) {
                obj['profilePhotoUrl'] = ApiClient.convertToType(data['profilePhotoUrl'], 'String');
            }
            if (data.hasOwnProperty('profileUrl')) {
                obj['profileUrl'] = ApiClient.convertToType(data['profileUrl'], 'String');
            }
            if (data.hasOwnProperty('takedownUrl')) {
                obj['takedownUrl'] = ApiClient.convertToType(data['takedownUrl'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Attribution</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Attribution</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['profileName'] && !(typeof data['profileName'] === 'string' || data['profileName'] instanceof String)) {
            throw new Error("Expected the field `profileName` to be a primitive type in the JSON string but got " + data['profileName']);
        }
        // ensure the json data is a string
        if (data['profilePhotoUrl'] && !(typeof data['profilePhotoUrl'] === 'string' || data['profilePhotoUrl'] instanceof String)) {
            throw new Error("Expected the field `profilePhotoUrl` to be a primitive type in the JSON string but got " + data['profilePhotoUrl']);
        }
        // ensure the json data is a string
        if (data['profileUrl'] && !(typeof data['profileUrl'] === 'string' || data['profileUrl'] instanceof String)) {
            throw new Error("Expected the field `profileUrl` to be a primitive type in the JSON string but got " + data['profileUrl']);
        }
        // ensure the json data is a string
        if (data['takedownUrl'] && !(typeof data['takedownUrl'] === 'string' || data['takedownUrl'] instanceof String)) {
            throw new Error("Expected the field `takedownUrl` to be a primitive type in the JSON string but got " + data['takedownUrl']);
        }

        return true;
    }


}



/**
 * The user name to attribute the media item to.
 * @member {String} profileName
 */
Attribution.prototype['profileName'] = undefined;

/**
 * URL of the attributed user's profile photo thumbnail.
 * @member {String} profilePhotoUrl
 */
Attribution.prototype['profilePhotoUrl'] = undefined;

/**
 * The URL of the attributed user's Google Maps profile page.
 * @member {String} profileUrl
 */
Attribution.prototype['profileUrl'] = undefined;

/**
 * The URL of the takedown page, where the media item can be reported if it is inappropriate.
 * @member {String} takedownUrl
 */
Attribution.prototype['takedownUrl'] = undefined;






export default Attribution;

