/**
 * Google My Business API
 * The Google My Business API provides an interface for managing business location information on Google.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LatLng from './LatLng';

/**
 * The RegionCount model module.
 * @module model/RegionCount
 * @version v4
 */
class RegionCount {
    /**
     * Constructs a new <code>RegionCount</code>.
     * A region with its associated request count.
     * @alias module:model/RegionCount
     */
    constructor() { 
        
        RegionCount.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RegionCount</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RegionCount} obj Optional instance to populate.
     * @return {module:model/RegionCount} The populated <code>RegionCount</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RegionCount();

            if (data.hasOwnProperty('count')) {
                obj['count'] = ApiClient.convertToType(data['count'], 'String');
            }
            if (data.hasOwnProperty('label')) {
                obj['label'] = ApiClient.convertToType(data['label'], 'String');
            }
            if (data.hasOwnProperty('latlng')) {
                obj['latlng'] = LatLng.constructFromObject(data['latlng']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RegionCount</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RegionCount</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['count'] && !(typeof data['count'] === 'string' || data['count'] instanceof String)) {
            throw new Error("Expected the field `count` to be a primitive type in the JSON string but got " + data['count']);
        }
        // ensure the json data is a string
        if (data['label'] && !(typeof data['label'] === 'string' || data['label'] instanceof String)) {
            throw new Error("Expected the field `label` to be a primitive type in the JSON string but got " + data['label']);
        }
        // validate the optional field `latlng`
        if (data['latlng']) { // data not null
          LatLng.validateJSON(data['latlng']);
        }

        return true;
    }


}



/**
 * Number of driving-direction requests from this region.
 * @member {String} count
 */
RegionCount.prototype['count'] = undefined;

/**
 * Human-readable label for the region.
 * @member {String} label
 */
RegionCount.prototype['label'] = undefined;

/**
 * @member {module:model/LatLng} latlng
 */
RegionCount.prototype['latlng'] = undefined;






export default RegionCount;

