/**
 * Google My Business API
 * The Google My Business API provides an interface for managing business location information on Google.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Notifications model module.
 * @module model/Notifications
 * @version v4
 */
class Notifications {
    /**
     * Constructs a new <code>Notifications</code>.
     * A Google Cloud Pub/Sub topic where notifications can be published when a location is updated or has a new review. There will be only one notification settings resource per-account.
     * @alias module:model/Notifications
     */
    constructor() { 
        
        Notifications.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Notifications</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Notifications} obj Optional instance to populate.
     * @return {module:model/Notifications} The populated <code>Notifications</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Notifications();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('notificationTypes')) {
                obj['notificationTypes'] = ApiClient.convertToType(data['notificationTypes'], ['String']);
            }
            if (data.hasOwnProperty('topicName')) {
                obj['topicName'] = ApiClient.convertToType(data['topicName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Notifications</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Notifications</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['notificationTypes'])) {
            throw new Error("Expected the field `notificationTypes` to be an array in the JSON data but got " + data['notificationTypes']);
        }
        // ensure the json data is a string
        if (data['topicName'] && !(typeof data['topicName'] === 'string' || data['topicName'] instanceof String)) {
            throw new Error("Expected the field `topicName` to be a primitive type in the JSON string but got " + data['topicName']);
        }

        return true;
    }


}



/**
 * Output only. The notifications resource name.
 * @member {String} name
 */
Notifications.prototype['name'] = undefined;

/**
 * The types of notifications that will be sent to the Cloud Pub/Sub topic. At least one must be specified. To stop receiving notifications entirely, use DeleteNotifications.
 * @member {Array.<module:model/Notifications.NotificationTypesEnum>} notificationTypes
 */
Notifications.prototype['notificationTypes'] = undefined;

/**
 * The Google Cloud Pub/Sub topic that will receive notifications when locations managed by this account are updated. If unset, no notifications will be posted. The account mybusiness-api-pubsub@system.gserviceaccount.com must have at least Publish permissions on the Cloud Pub/Sub topic.
 * @member {String} topicName
 */
Notifications.prototype['topicName'] = undefined;





/**
 * Allowed values for the <code>notificationTypes</code> property.
 * @enum {String}
 * @readonly
 */
Notifications['NotificationTypesEnum'] = {

    /**
     * value: "NOTIFICATION_TYPE_UNSPECIFIED"
     * @const
     */
    "NOTIFICATION_TYPE_UNSPECIFIED": "NOTIFICATION_TYPE_UNSPECIFIED",

    /**
     * value: "GOOGLE_UPDATE"
     * @const
     */
    "GOOGLE_UPDATE": "GOOGLE_UPDATE",

    /**
     * value: "NEW_REVIEW"
     * @const
     */
    "NEW_REVIEW": "NEW_REVIEW",

    /**
     * value: "UPDATED_REVIEW"
     * @const
     */
    "UPDATED_REVIEW": "UPDATED_REVIEW",

    /**
     * value: "NEW_CUSTOMER_MEDIA"
     * @const
     */
    "NEW_CUSTOMER_MEDIA": "NEW_CUSTOMER_MEDIA",

    /**
     * value: "NEW_QUESTION"
     * @const
     */
    "NEW_QUESTION": "NEW_QUESTION",

    /**
     * value: "UPDATED_QUESTION"
     * @const
     */
    "UPDATED_QUESTION": "UPDATED_QUESTION",

    /**
     * value: "NEW_ANSWER"
     * @const
     */
    "NEW_ANSWER": "NEW_ANSWER",

    /**
     * value: "UPDATED_ANSWER"
     * @const
     */
    "UPDATED_ANSWER": "UPDATED_ANSWER",

    /**
     * value: "UPDATED_LOCATION_STATE"
     * @const
     */
    "UPDATED_LOCATION_STATE": "UPDATED_LOCATION_STATE"
};



export default Notifications;

