/**
 * Google My Business API
 * The Google My Business API provides an interface for managing business location information on Google.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MetricValue from './MetricValue';

/**
 * The LocationMetrics model module.
 * @module model/LocationMetrics
 * @version v4
 */
class LocationMetrics {
    /**
     * Constructs a new <code>LocationMetrics</code>.
     * A series of Metrics and BreakdownMetrics associated with a Location over some time range.
     * @alias module:model/LocationMetrics
     */
    constructor() { 
        
        LocationMetrics.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LocationMetrics</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LocationMetrics} obj Optional instance to populate.
     * @return {module:model/LocationMetrics} The populated <code>LocationMetrics</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LocationMetrics();

            if (data.hasOwnProperty('locationName')) {
                obj['locationName'] = ApiClient.convertToType(data['locationName'], 'String');
            }
            if (data.hasOwnProperty('metricValues')) {
                obj['metricValues'] = ApiClient.convertToType(data['metricValues'], [MetricValue]);
            }
            if (data.hasOwnProperty('timeZone')) {
                obj['timeZone'] = ApiClient.convertToType(data['timeZone'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LocationMetrics</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LocationMetrics</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['locationName'] && !(typeof data['locationName'] === 'string' || data['locationName'] instanceof String)) {
            throw new Error("Expected the field `locationName` to be a primitive type in the JSON string but got " + data['locationName']);
        }
        if (data['metricValues']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['metricValues'])) {
                throw new Error("Expected the field `metricValues` to be an array in the JSON data but got " + data['metricValues']);
            }
            // validate the optional field `metricValues` (array)
            for (const item of data['metricValues']) {
                MetricValue.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['timeZone'] && !(typeof data['timeZone'] === 'string' || data['timeZone'] instanceof String)) {
            throw new Error("Expected the field `timeZone` to be a primitive type in the JSON string but got " + data['timeZone']);
        }

        return true;
    }


}



/**
 * The location resource name these values belong to.
 * @member {String} locationName
 */
LocationMetrics.prototype['locationName'] = undefined;

/**
 * A list of values for the requested metrics.
 * @member {Array.<module:model/MetricValue>} metricValues
 */
LocationMetrics.prototype['metricValues'] = undefined;

/**
 * IANA timezone for the location.
 * @member {String} timeZone
 */
LocationMetrics.prototype['timeZone'] = undefined;






export default LocationMetrics;

