/**
 * Google My Business API
 * The Google My Business API provides an interface for managing business location information on Google.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AddressInput from './AddressInput';
import EmailInput from './EmailInput';
import PhoneInput from './PhoneInput';
import ServiceBusinessContext from './ServiceBusinessContext';

/**
 * The VerifyLocationRequest model module.
 * @module model/VerifyLocationRequest
 * @version v4
 */
class VerifyLocationRequest {
    /**
     * Constructs a new <code>VerifyLocationRequest</code>.
     * Request message for Verifications.VerifyLocation.
     * @alias module:model/VerifyLocationRequest
     */
    constructor() { 
        
        VerifyLocationRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VerifyLocationRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VerifyLocationRequest} obj Optional instance to populate.
     * @return {module:model/VerifyLocationRequest} The populated <code>VerifyLocationRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VerifyLocationRequest();

            if (data.hasOwnProperty('addressInput')) {
                obj['addressInput'] = AddressInput.constructFromObject(data['addressInput']);
            }
            if (data.hasOwnProperty('context')) {
                obj['context'] = ServiceBusinessContext.constructFromObject(data['context']);
            }
            if (data.hasOwnProperty('emailInput')) {
                obj['emailInput'] = EmailInput.constructFromObject(data['emailInput']);
            }
            if (data.hasOwnProperty('languageCode')) {
                obj['languageCode'] = ApiClient.convertToType(data['languageCode'], 'String');
            }
            if (data.hasOwnProperty('method')) {
                obj['method'] = ApiClient.convertToType(data['method'], 'String');
            }
            if (data.hasOwnProperty('phoneInput')) {
                obj['phoneInput'] = PhoneInput.constructFromObject(data['phoneInput']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VerifyLocationRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VerifyLocationRequest</code>.
     */
    static validateJSON(data) {
        // validate the optional field `addressInput`
        if (data['addressInput']) { // data not null
          AddressInput.validateJSON(data['addressInput']);
        }
        // validate the optional field `context`
        if (data['context']) { // data not null
          ServiceBusinessContext.validateJSON(data['context']);
        }
        // validate the optional field `emailInput`
        if (data['emailInput']) { // data not null
          EmailInput.validateJSON(data['emailInput']);
        }
        // ensure the json data is a string
        if (data['languageCode'] && !(typeof data['languageCode'] === 'string' || data['languageCode'] instanceof String)) {
            throw new Error("Expected the field `languageCode` to be a primitive type in the JSON string but got " + data['languageCode']);
        }
        // ensure the json data is a string
        if (data['method'] && !(typeof data['method'] === 'string' || data['method'] instanceof String)) {
            throw new Error("Expected the field `method` to be a primitive type in the JSON string but got " + data['method']);
        }
        // validate the optional field `phoneInput`
        if (data['phoneInput']) { // data not null
          PhoneInput.validateJSON(data['phoneInput']);
        }

        return true;
    }


}



/**
 * @member {module:model/AddressInput} addressInput
 */
VerifyLocationRequest.prototype['addressInput'] = undefined;

/**
 * @member {module:model/ServiceBusinessContext} context
 */
VerifyLocationRequest.prototype['context'] = undefined;

/**
 * @member {module:model/EmailInput} emailInput
 */
VerifyLocationRequest.prototype['emailInput'] = undefined;

/**
 * The BCP 47 language code representing the language that is to be used for the verification process.
 * @member {String} languageCode
 */
VerifyLocationRequest.prototype['languageCode'] = undefined;

/**
 * Verification method.
 * @member {module:model/VerifyLocationRequest.MethodEnum} method
 */
VerifyLocationRequest.prototype['method'] = undefined;

/**
 * @member {module:model/PhoneInput} phoneInput
 */
VerifyLocationRequest.prototype['phoneInput'] = undefined;





/**
 * Allowed values for the <code>method</code> property.
 * @enum {String}
 * @readonly
 */
VerifyLocationRequest['MethodEnum'] = {

    /**
     * value: "VERIFICATION_METHOD_UNSPECIFIED"
     * @const
     */
    "VERIFICATION_METHOD_UNSPECIFIED": "VERIFICATION_METHOD_UNSPECIFIED",

    /**
     * value: "ADDRESS"
     * @const
     */
    "ADDRESS": "ADDRESS",

    /**
     * value: "EMAIL"
     * @const
     */
    "EMAIL": "EMAIL",

    /**
     * value: "PHONE_CALL"
     * @const
     */
    "PHONE_CALL": "PHONE_CALL",

    /**
     * value: "SMS"
     * @const
     */
    "SMS": "SMS",

    /**
     * value: "AUTO"
     * @const
     */
    "AUTO": "AUTO"
};



export default VerifyLocationRequest;

