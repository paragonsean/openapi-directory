/**
 * Google My Business API
 * The Google My Business API provides an interface for managing business location information on Google.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The LivingAreaAccessibility model module.
 * @module model/LivingAreaAccessibility
 * @version v4
 */
class LivingAreaAccessibility {
    /**
     * Constructs a new <code>LivingAreaAccessibility</code>.
     * Accessibility features of the living area.
     * @alias module:model/LivingAreaAccessibility
     */
    constructor() { 
        
        LivingAreaAccessibility.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LivingAreaAccessibility</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LivingAreaAccessibility} obj Optional instance to populate.
     * @return {module:model/LivingAreaAccessibility} The populated <code>LivingAreaAccessibility</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LivingAreaAccessibility();

            if (data.hasOwnProperty('adaCompliantUnit')) {
                obj['adaCompliantUnit'] = ApiClient.convertToType(data['adaCompliantUnit'], 'Boolean');
            }
            if (data.hasOwnProperty('adaCompliantUnitException')) {
                obj['adaCompliantUnitException'] = ApiClient.convertToType(data['adaCompliantUnitException'], 'String');
            }
            if (data.hasOwnProperty('hearingAccessibleDoorbell')) {
                obj['hearingAccessibleDoorbell'] = ApiClient.convertToType(data['hearingAccessibleDoorbell'], 'Boolean');
            }
            if (data.hasOwnProperty('hearingAccessibleDoorbellException')) {
                obj['hearingAccessibleDoorbellException'] = ApiClient.convertToType(data['hearingAccessibleDoorbellException'], 'String');
            }
            if (data.hasOwnProperty('hearingAccessibleFireAlarm')) {
                obj['hearingAccessibleFireAlarm'] = ApiClient.convertToType(data['hearingAccessibleFireAlarm'], 'Boolean');
            }
            if (data.hasOwnProperty('hearingAccessibleFireAlarmException')) {
                obj['hearingAccessibleFireAlarmException'] = ApiClient.convertToType(data['hearingAccessibleFireAlarmException'], 'String');
            }
            if (data.hasOwnProperty('hearingAccessibleUnit')) {
                obj['hearingAccessibleUnit'] = ApiClient.convertToType(data['hearingAccessibleUnit'], 'Boolean');
            }
            if (data.hasOwnProperty('hearingAccessibleUnitException')) {
                obj['hearingAccessibleUnitException'] = ApiClient.convertToType(data['hearingAccessibleUnitException'], 'String');
            }
            if (data.hasOwnProperty('mobilityAccessibleBathtub')) {
                obj['mobilityAccessibleBathtub'] = ApiClient.convertToType(data['mobilityAccessibleBathtub'], 'Boolean');
            }
            if (data.hasOwnProperty('mobilityAccessibleBathtubException')) {
                obj['mobilityAccessibleBathtubException'] = ApiClient.convertToType(data['mobilityAccessibleBathtubException'], 'String');
            }
            if (data.hasOwnProperty('mobilityAccessibleShower')) {
                obj['mobilityAccessibleShower'] = ApiClient.convertToType(data['mobilityAccessibleShower'], 'Boolean');
            }
            if (data.hasOwnProperty('mobilityAccessibleShowerException')) {
                obj['mobilityAccessibleShowerException'] = ApiClient.convertToType(data['mobilityAccessibleShowerException'], 'String');
            }
            if (data.hasOwnProperty('mobilityAccessibleToilet')) {
                obj['mobilityAccessibleToilet'] = ApiClient.convertToType(data['mobilityAccessibleToilet'], 'Boolean');
            }
            if (data.hasOwnProperty('mobilityAccessibleToiletException')) {
                obj['mobilityAccessibleToiletException'] = ApiClient.convertToType(data['mobilityAccessibleToiletException'], 'String');
            }
            if (data.hasOwnProperty('mobilityAccessibleUnit')) {
                obj['mobilityAccessibleUnit'] = ApiClient.convertToType(data['mobilityAccessibleUnit'], 'Boolean');
            }
            if (data.hasOwnProperty('mobilityAccessibleUnitException')) {
                obj['mobilityAccessibleUnitException'] = ApiClient.convertToType(data['mobilityAccessibleUnitException'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LivingAreaAccessibility</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LivingAreaAccessibility</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['adaCompliantUnitException'] && !(typeof data['adaCompliantUnitException'] === 'string' || data['adaCompliantUnitException'] instanceof String)) {
            throw new Error("Expected the field `adaCompliantUnitException` to be a primitive type in the JSON string but got " + data['adaCompliantUnitException']);
        }
        // ensure the json data is a string
        if (data['hearingAccessibleDoorbellException'] && !(typeof data['hearingAccessibleDoorbellException'] === 'string' || data['hearingAccessibleDoorbellException'] instanceof String)) {
            throw new Error("Expected the field `hearingAccessibleDoorbellException` to be a primitive type in the JSON string but got " + data['hearingAccessibleDoorbellException']);
        }
        // ensure the json data is a string
        if (data['hearingAccessibleFireAlarmException'] && !(typeof data['hearingAccessibleFireAlarmException'] === 'string' || data['hearingAccessibleFireAlarmException'] instanceof String)) {
            throw new Error("Expected the field `hearingAccessibleFireAlarmException` to be a primitive type in the JSON string but got " + data['hearingAccessibleFireAlarmException']);
        }
        // ensure the json data is a string
        if (data['hearingAccessibleUnitException'] && !(typeof data['hearingAccessibleUnitException'] === 'string' || data['hearingAccessibleUnitException'] instanceof String)) {
            throw new Error("Expected the field `hearingAccessibleUnitException` to be a primitive type in the JSON string but got " + data['hearingAccessibleUnitException']);
        }
        // ensure the json data is a string
        if (data['mobilityAccessibleBathtubException'] && !(typeof data['mobilityAccessibleBathtubException'] === 'string' || data['mobilityAccessibleBathtubException'] instanceof String)) {
            throw new Error("Expected the field `mobilityAccessibleBathtubException` to be a primitive type in the JSON string but got " + data['mobilityAccessibleBathtubException']);
        }
        // ensure the json data is a string
        if (data['mobilityAccessibleShowerException'] && !(typeof data['mobilityAccessibleShowerException'] === 'string' || data['mobilityAccessibleShowerException'] instanceof String)) {
            throw new Error("Expected the field `mobilityAccessibleShowerException` to be a primitive type in the JSON string but got " + data['mobilityAccessibleShowerException']);
        }
        // ensure the json data is a string
        if (data['mobilityAccessibleToiletException'] && !(typeof data['mobilityAccessibleToiletException'] === 'string' || data['mobilityAccessibleToiletException'] instanceof String)) {
            throw new Error("Expected the field `mobilityAccessibleToiletException` to be a primitive type in the JSON string but got " + data['mobilityAccessibleToiletException']);
        }
        // ensure the json data is a string
        if (data['mobilityAccessibleUnitException'] && !(typeof data['mobilityAccessibleUnitException'] === 'string' || data['mobilityAccessibleUnitException'] instanceof String)) {
            throw new Error("Expected the field `mobilityAccessibleUnitException` to be a primitive type in the JSON string but got " + data['mobilityAccessibleUnitException']);
        }

        return true;
    }


}



/**
 * ADA compliant unit. A guestroom designed to accommodate the physical challenges of a guest with mobility and/or auditory and/or visual issues, as determined by legislative policy. Usually features enlarged doorways, roll-in showers with seats, bathroom grab bars, and communication equipment for the hearing and sight challenged.
 * @member {Boolean} adaCompliantUnit
 */
LivingAreaAccessibility.prototype['adaCompliantUnit'] = undefined;

/**
 * ADA compliant unit exception.
 * @member {module:model/LivingAreaAccessibility.AdaCompliantUnitExceptionEnum} adaCompliantUnitException
 */
LivingAreaAccessibility.prototype['adaCompliantUnitException'] = undefined;

/**
 * Hearing-accessible doorbell. A visual indicator(s) of a knock or ring at the door.
 * @member {Boolean} hearingAccessibleDoorbell
 */
LivingAreaAccessibility.prototype['hearingAccessibleDoorbell'] = undefined;

/**
 * Hearing-accessible doorbell exception.
 * @member {module:model/LivingAreaAccessibility.HearingAccessibleDoorbellExceptionEnum} hearingAccessibleDoorbellException
 */
LivingAreaAccessibility.prototype['hearingAccessibleDoorbellException'] = undefined;

/**
 * Hearing-accessible fire alarm. A device that gives warning of a fire through flashing lights.
 * @member {Boolean} hearingAccessibleFireAlarm
 */
LivingAreaAccessibility.prototype['hearingAccessibleFireAlarm'] = undefined;

/**
 * Hearing-accessible fire alarm exception.
 * @member {module:model/LivingAreaAccessibility.HearingAccessibleFireAlarmExceptionEnum} hearingAccessibleFireAlarmException
 */
LivingAreaAccessibility.prototype['hearingAccessibleFireAlarmException'] = undefined;

/**
 * Hearing-accessible unit. A guestroom designed to accommodate the physical challenges of a guest with auditory issues.
 * @member {Boolean} hearingAccessibleUnit
 */
LivingAreaAccessibility.prototype['hearingAccessibleUnit'] = undefined;

/**
 * Hearing-accessible unit exception.
 * @member {module:model/LivingAreaAccessibility.HearingAccessibleUnitExceptionEnum} hearingAccessibleUnitException
 */
LivingAreaAccessibility.prototype['hearingAccessibleUnitException'] = undefined;

/**
 * Mobility-accessible bathtub. A bathtub that accomodates the physically challenged with additional railings or hand grips, a transfer seat or lift, and/or a door to enable walking into the tub.
 * @member {Boolean} mobilityAccessibleBathtub
 */
LivingAreaAccessibility.prototype['mobilityAccessibleBathtub'] = undefined;

/**
 * Mobility-accessible bathtub exception.
 * @member {module:model/LivingAreaAccessibility.MobilityAccessibleBathtubExceptionEnum} mobilityAccessibleBathtubException
 */
LivingAreaAccessibility.prototype['mobilityAccessibleBathtubException'] = undefined;

/**
 * Mobility-accessible shower. A shower with an enlarged door or access point to accommodate a wheelchair or a waterproof seat for the physically challenged.
 * @member {Boolean} mobilityAccessibleShower
 */
LivingAreaAccessibility.prototype['mobilityAccessibleShower'] = undefined;

/**
 * Mobility-accessible shower exception.
 * @member {module:model/LivingAreaAccessibility.MobilityAccessibleShowerExceptionEnum} mobilityAccessibleShowerException
 */
LivingAreaAccessibility.prototype['mobilityAccessibleShowerException'] = undefined;

/**
 * Mobility-accessible toilet. A toilet with a higher seat, grab bars, and/or a larger area around it to accommodate the physically challenged.
 * @member {Boolean} mobilityAccessibleToilet
 */
LivingAreaAccessibility.prototype['mobilityAccessibleToilet'] = undefined;

/**
 * Mobility-accessible toilet exception.
 * @member {module:model/LivingAreaAccessibility.MobilityAccessibleToiletExceptionEnum} mobilityAccessibleToiletException
 */
LivingAreaAccessibility.prototype['mobilityAccessibleToiletException'] = undefined;

/**
 * Mobility-accessible unit. A guestroom designed to accommodate the physical challenges of a guest with mobility and/or auditory and/or visual issues. Usually features enlarged doorways, roll-in showers with seats, bathroom grab bars, and communication equipment for the hearing and sight challenged.
 * @member {Boolean} mobilityAccessibleUnit
 */
LivingAreaAccessibility.prototype['mobilityAccessibleUnit'] = undefined;

/**
 * Mobility-accessible unit exception.
 * @member {module:model/LivingAreaAccessibility.MobilityAccessibleUnitExceptionEnum} mobilityAccessibleUnitException
 */
LivingAreaAccessibility.prototype['mobilityAccessibleUnitException'] = undefined;





/**
 * Allowed values for the <code>adaCompliantUnitException</code> property.
 * @enum {String}
 * @readonly
 */
LivingAreaAccessibility['AdaCompliantUnitExceptionEnum'] = {

    /**
     * value: "EXCEPTION_UNSPECIFIED"
     * @const
     */
    "EXCEPTION_UNSPECIFIED": "EXCEPTION_UNSPECIFIED",

    /**
     * value: "UNDER_CONSTRUCTION"
     * @const
     */
    "UNDER_CONSTRUCTION": "UNDER_CONSTRUCTION",

    /**
     * value: "DEPENDENT_ON_SEASON"
     * @const
     */
    "DEPENDENT_ON_SEASON": "DEPENDENT_ON_SEASON",

    /**
     * value: "DEPENDENT_ON_DAY_OF_WEEK"
     * @const
     */
    "DEPENDENT_ON_DAY_OF_WEEK": "DEPENDENT_ON_DAY_OF_WEEK"
};


/**
 * Allowed values for the <code>hearingAccessibleDoorbellException</code> property.
 * @enum {String}
 * @readonly
 */
LivingAreaAccessibility['HearingAccessibleDoorbellExceptionEnum'] = {

    /**
     * value: "EXCEPTION_UNSPECIFIED"
     * @const
     */
    "EXCEPTION_UNSPECIFIED": "EXCEPTION_UNSPECIFIED",

    /**
     * value: "UNDER_CONSTRUCTION"
     * @const
     */
    "UNDER_CONSTRUCTION": "UNDER_CONSTRUCTION",

    /**
     * value: "DEPENDENT_ON_SEASON"
     * @const
     */
    "DEPENDENT_ON_SEASON": "DEPENDENT_ON_SEASON",

    /**
     * value: "DEPENDENT_ON_DAY_OF_WEEK"
     * @const
     */
    "DEPENDENT_ON_DAY_OF_WEEK": "DEPENDENT_ON_DAY_OF_WEEK"
};


/**
 * Allowed values for the <code>hearingAccessibleFireAlarmException</code> property.
 * @enum {String}
 * @readonly
 */
LivingAreaAccessibility['HearingAccessibleFireAlarmExceptionEnum'] = {

    /**
     * value: "EXCEPTION_UNSPECIFIED"
     * @const
     */
    "EXCEPTION_UNSPECIFIED": "EXCEPTION_UNSPECIFIED",

    /**
     * value: "UNDER_CONSTRUCTION"
     * @const
     */
    "UNDER_CONSTRUCTION": "UNDER_CONSTRUCTION",

    /**
     * value: "DEPENDENT_ON_SEASON"
     * @const
     */
    "DEPENDENT_ON_SEASON": "DEPENDENT_ON_SEASON",

    /**
     * value: "DEPENDENT_ON_DAY_OF_WEEK"
     * @const
     */
    "DEPENDENT_ON_DAY_OF_WEEK": "DEPENDENT_ON_DAY_OF_WEEK"
};


/**
 * Allowed values for the <code>hearingAccessibleUnitException</code> property.
 * @enum {String}
 * @readonly
 */
LivingAreaAccessibility['HearingAccessibleUnitExceptionEnum'] = {

    /**
     * value: "EXCEPTION_UNSPECIFIED"
     * @const
     */
    "EXCEPTION_UNSPECIFIED": "EXCEPTION_UNSPECIFIED",

    /**
     * value: "UNDER_CONSTRUCTION"
     * @const
     */
    "UNDER_CONSTRUCTION": "UNDER_CONSTRUCTION",

    /**
     * value: "DEPENDENT_ON_SEASON"
     * @const
     */
    "DEPENDENT_ON_SEASON": "DEPENDENT_ON_SEASON",

    /**
     * value: "DEPENDENT_ON_DAY_OF_WEEK"
     * @const
     */
    "DEPENDENT_ON_DAY_OF_WEEK": "DEPENDENT_ON_DAY_OF_WEEK"
};


/**
 * Allowed values for the <code>mobilityAccessibleBathtubException</code> property.
 * @enum {String}
 * @readonly
 */
LivingAreaAccessibility['MobilityAccessibleBathtubExceptionEnum'] = {

    /**
     * value: "EXCEPTION_UNSPECIFIED"
     * @const
     */
    "EXCEPTION_UNSPECIFIED": "EXCEPTION_UNSPECIFIED",

    /**
     * value: "UNDER_CONSTRUCTION"
     * @const
     */
    "UNDER_CONSTRUCTION": "UNDER_CONSTRUCTION",

    /**
     * value: "DEPENDENT_ON_SEASON"
     * @const
     */
    "DEPENDENT_ON_SEASON": "DEPENDENT_ON_SEASON",

    /**
     * value: "DEPENDENT_ON_DAY_OF_WEEK"
     * @const
     */
    "DEPENDENT_ON_DAY_OF_WEEK": "DEPENDENT_ON_DAY_OF_WEEK"
};


/**
 * Allowed values for the <code>mobilityAccessibleShowerException</code> property.
 * @enum {String}
 * @readonly
 */
LivingAreaAccessibility['MobilityAccessibleShowerExceptionEnum'] = {

    /**
     * value: "EXCEPTION_UNSPECIFIED"
     * @const
     */
    "EXCEPTION_UNSPECIFIED": "EXCEPTION_UNSPECIFIED",

    /**
     * value: "UNDER_CONSTRUCTION"
     * @const
     */
    "UNDER_CONSTRUCTION": "UNDER_CONSTRUCTION",

    /**
     * value: "DEPENDENT_ON_SEASON"
     * @const
     */
    "DEPENDENT_ON_SEASON": "DEPENDENT_ON_SEASON",

    /**
     * value: "DEPENDENT_ON_DAY_OF_WEEK"
     * @const
     */
    "DEPENDENT_ON_DAY_OF_WEEK": "DEPENDENT_ON_DAY_OF_WEEK"
};


/**
 * Allowed values for the <code>mobilityAccessibleToiletException</code> property.
 * @enum {String}
 * @readonly
 */
LivingAreaAccessibility['MobilityAccessibleToiletExceptionEnum'] = {

    /**
     * value: "EXCEPTION_UNSPECIFIED"
     * @const
     */
    "EXCEPTION_UNSPECIFIED": "EXCEPTION_UNSPECIFIED",

    /**
     * value: "UNDER_CONSTRUCTION"
     * @const
     */
    "UNDER_CONSTRUCTION": "UNDER_CONSTRUCTION",

    /**
     * value: "DEPENDENT_ON_SEASON"
     * @const
     */
    "DEPENDENT_ON_SEASON": "DEPENDENT_ON_SEASON",

    /**
     * value: "DEPENDENT_ON_DAY_OF_WEEK"
     * @const
     */
    "DEPENDENT_ON_DAY_OF_WEEK": "DEPENDENT_ON_DAY_OF_WEEK"
};


/**
 * Allowed values for the <code>mobilityAccessibleUnitException</code> property.
 * @enum {String}
 * @readonly
 */
LivingAreaAccessibility['MobilityAccessibleUnitExceptionEnum'] = {

    /**
     * value: "EXCEPTION_UNSPECIFIED"
     * @const
     */
    "EXCEPTION_UNSPECIFIED": "EXCEPTION_UNSPECIFIED",

    /**
     * value: "UNDER_CONSTRUCTION"
     * @const
     */
    "UNDER_CONSTRUCTION": "UNDER_CONSTRUCTION",

    /**
     * value: "DEPENDENT_ON_SEASON"
     * @const
     */
    "DEPENDENT_ON_SEASON": "DEPENDENT_ON_SEASON",

    /**
     * value: "DEPENDENT_ON_DAY_OF_WEEK"
     * @const
     */
    "DEPENDENT_ON_DAY_OF_WEEK": "DEPENDENT_ON_DAY_OF_WEEK"
};



export default LivingAreaAccessibility;

