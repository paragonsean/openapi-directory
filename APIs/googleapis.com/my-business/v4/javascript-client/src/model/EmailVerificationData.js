/**
 * Google My Business API
 * The Google My Business API provides an interface for managing business location information on Google.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The EmailVerificationData model module.
 * @module model/EmailVerificationData
 * @version v4
 */
class EmailVerificationData {
    /**
     * Constructs a new <code>EmailVerificationData</code>.
     * Display data for verifications through email.
     * @alias module:model/EmailVerificationData
     */
    constructor() { 
        
        EmailVerificationData.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EmailVerificationData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EmailVerificationData} obj Optional instance to populate.
     * @return {module:model/EmailVerificationData} The populated <code>EmailVerificationData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EmailVerificationData();

            if (data.hasOwnProperty('domainName')) {
                obj['domainName'] = ApiClient.convertToType(data['domainName'], 'String');
            }
            if (data.hasOwnProperty('isUserNameEditable')) {
                obj['isUserNameEditable'] = ApiClient.convertToType(data['isUserNameEditable'], 'Boolean');
            }
            if (data.hasOwnProperty('userName')) {
                obj['userName'] = ApiClient.convertToType(data['userName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EmailVerificationData</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EmailVerificationData</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['domainName'] && !(typeof data['domainName'] === 'string' || data['domainName'] instanceof String)) {
            throw new Error("Expected the field `domainName` to be a primitive type in the JSON string but got " + data['domainName']);
        }
        // ensure the json data is a string
        if (data['userName'] && !(typeof data['userName'] === 'string' || data['userName'] instanceof String)) {
            throw new Error("Expected the field `userName` to be a primitive type in the JSON string but got " + data['userName']);
        }

        return true;
    }


}



/**
 * Domain name in the email address. e.g. \"gmail.com\" in foo@gmail.com
 * @member {String} domainName
 */
EmailVerificationData.prototype['domainName'] = undefined;

/**
 * Whether client is allowed to provide a different user name.
 * @member {Boolean} isUserNameEditable
 */
EmailVerificationData.prototype['isUserNameEditable'] = undefined;

/**
 * User name in the email address. e.g. \"foo\" in foo@gmail.com
 * @member {String} userName
 */
EmailVerificationData.prototype['userName'] = undefined;






export default EmailVerificationData;

