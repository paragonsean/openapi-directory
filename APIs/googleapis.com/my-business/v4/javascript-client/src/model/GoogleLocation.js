/**
 * Google My Business API
 * The Google My Business API provides an interface for managing business location information on Google.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Location from './Location';

/**
 * The GoogleLocation model module.
 * @module model/GoogleLocation
 * @version v4
 */
class GoogleLocation {
    /**
     * Constructs a new <code>GoogleLocation</code>.
     * Represents a Location that is present on Google. This can be a location that has been claimed by the user, someone else, or could be unclaimed.
     * @alias module:model/GoogleLocation
     */
    constructor() { 
        
        GoogleLocation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleLocation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleLocation} obj Optional instance to populate.
     * @return {module:model/GoogleLocation} The populated <code>GoogleLocation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleLocation();

            if (data.hasOwnProperty('location')) {
                obj['location'] = Location.constructFromObject(data['location']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('requestAdminRightsUrl')) {
                obj['requestAdminRightsUrl'] = ApiClient.convertToType(data['requestAdminRightsUrl'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleLocation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleLocation</code>.
     */
    static validateJSON(data) {
        // validate the optional field `location`
        if (data['location']) { // data not null
          Location.validateJSON(data['location']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['requestAdminRightsUrl'] && !(typeof data['requestAdminRightsUrl'] === 'string' || data['requestAdminRightsUrl'] instanceof String)) {
            throw new Error("Expected the field `requestAdminRightsUrl` to be a primitive type in the JSON string but got " + data['requestAdminRightsUrl']);
        }

        return true;
    }


}



/**
 * @member {module:model/Location} location
 */
GoogleLocation.prototype['location'] = undefined;

/**
 * Resource name of this GoogleLocation, in the format `googleLocations/{googleLocationId}`.
 * @member {String} name
 */
GoogleLocation.prototype['name'] = undefined;

/**
 * A URL that will redirect the user to the request admin rights UI. This field is only present if the location has already been claimed by any user, including the current user.
 * @member {String} requestAdminRightsUrl
 */
GoogleLocation.prototype['requestAdminRightsUrl'] = undefined;






export default GoogleLocation;

