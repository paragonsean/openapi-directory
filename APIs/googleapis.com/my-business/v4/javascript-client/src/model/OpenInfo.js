/**
 * Google My Business API
 * The Google My Business API provides an interface for managing business location information on Google.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ModelDate from './ModelDate';

/**
 * The OpenInfo model module.
 * @module model/OpenInfo
 * @version v4
 */
class OpenInfo {
    /**
     * Constructs a new <code>OpenInfo</code>.
     * Information related to the opening state of the business.
     * @alias module:model/OpenInfo
     */
    constructor() { 
        
        OpenInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OpenInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OpenInfo} obj Optional instance to populate.
     * @return {module:model/OpenInfo} The populated <code>OpenInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OpenInfo();

            if (data.hasOwnProperty('canReopen')) {
                obj['canReopen'] = ApiClient.convertToType(data['canReopen'], 'Boolean');
            }
            if (data.hasOwnProperty('openingDate')) {
                obj['openingDate'] = ModelDate.constructFromObject(data['openingDate']);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OpenInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OpenInfo</code>.
     */
    static validateJSON(data) {
        // validate the optional field `openingDate`
        if (data['openingDate']) { // data not null
          ModelDate.validateJSON(data['openingDate']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}



/**
 * Output only. Indicates whether this business is eligible for re-open.
 * @member {Boolean} canReopen
 */
OpenInfo.prototype['canReopen'] = undefined;

/**
 * @member {module:model/ModelDate} openingDate
 */
OpenInfo.prototype['openingDate'] = undefined;

/**
 * Indicates whether or not the Location is currently open for business. All locations are open by default, unless updated to be closed.
 * @member {module:model/OpenInfo.StatusEnum} status
 */
OpenInfo.prototype['status'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
OpenInfo['StatusEnum'] = {

    /**
     * value: "OPEN_FOR_BUSINESS_UNSPECIFIED"
     * @const
     */
    "OPEN_FOR_BUSINESS_UNSPECIFIED": "OPEN_FOR_BUSINESS_UNSPECIFIED",

    /**
     * value: "OPEN"
     * @const
     */
    "OPEN": "OPEN",

    /**
     * value: "CLOSED_PERMANENTLY"
     * @const
     */
    "CLOSED_PERMANENTLY": "CLOSED_PERMANENTLY",

    /**
     * value: "CLOSED_TEMPORARILY"
     * @const
     */
    "CLOSED_TEMPORARILY": "CLOSED_TEMPORARILY"
};



export default OpenInfo;

