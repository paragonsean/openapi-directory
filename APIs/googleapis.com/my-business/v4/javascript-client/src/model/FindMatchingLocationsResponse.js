/**
 * Google My Business API
 * The Google My Business API provides an interface for managing business location information on Google.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MatchedLocation from './MatchedLocation';

/**
 * The FindMatchingLocationsResponse model module.
 * @module model/FindMatchingLocationsResponse
 * @version v4
 */
class FindMatchingLocationsResponse {
    /**
     * Constructs a new <code>FindMatchingLocationsResponse</code>.
     * Response message for Locations.FindMatchingLocations.
     * @alias module:model/FindMatchingLocationsResponse
     */
    constructor() { 
        
        FindMatchingLocationsResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FindMatchingLocationsResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FindMatchingLocationsResponse} obj Optional instance to populate.
     * @return {module:model/FindMatchingLocationsResponse} The populated <code>FindMatchingLocationsResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FindMatchingLocationsResponse();

            if (data.hasOwnProperty('matchTime')) {
                obj['matchTime'] = ApiClient.convertToType(data['matchTime'], 'String');
            }
            if (data.hasOwnProperty('matchedLocations')) {
                obj['matchedLocations'] = ApiClient.convertToType(data['matchedLocations'], [MatchedLocation]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FindMatchingLocationsResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FindMatchingLocationsResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['matchTime'] && !(typeof data['matchTime'] === 'string' || data['matchTime'] instanceof String)) {
            throw new Error("Expected the field `matchTime` to be a primitive type in the JSON string but got " + data['matchTime']);
        }
        if (data['matchedLocations']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['matchedLocations'])) {
                throw new Error("Expected the field `matchedLocations` to be an array in the JSON data but got " + data['matchedLocations']);
            }
            // validate the optional field `matchedLocations` (array)
            for (const item of data['matchedLocations']) {
                MatchedLocation.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * When the matching algorithm was last executed for this location.
 * @member {String} matchTime
 */
FindMatchingLocationsResponse.prototype['matchTime'] = undefined;

/**
 * A collection of locations that are potential matches to the specified location, listed in order from best to least match. If there is an exact match, it will be in the first position.
 * @member {Array.<module:model/MatchedLocation>} matchedLocations
 */
FindMatchingLocationsResponse.prototype['matchedLocations'] = undefined;






export default FindMatchingLocationsResponse;

