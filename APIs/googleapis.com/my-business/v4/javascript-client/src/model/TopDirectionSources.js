/**
 * Google My Business API
 * The Google My Business API provides an interface for managing business location information on Google.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RegionCount from './RegionCount';

/**
 * The TopDirectionSources model module.
 * @module model/TopDirectionSources
 * @version v4
 */
class TopDirectionSources {
    /**
     * Constructs a new <code>TopDirectionSources</code>.
     * Top regions where driving-direction requests originated from.
     * @alias module:model/TopDirectionSources
     */
    constructor() { 
        
        TopDirectionSources.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TopDirectionSources</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TopDirectionSources} obj Optional instance to populate.
     * @return {module:model/TopDirectionSources} The populated <code>TopDirectionSources</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TopDirectionSources();

            if (data.hasOwnProperty('dayCount')) {
                obj['dayCount'] = ApiClient.convertToType(data['dayCount'], 'Number');
            }
            if (data.hasOwnProperty('regionCounts')) {
                obj['regionCounts'] = ApiClient.convertToType(data['regionCounts'], [RegionCount]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TopDirectionSources</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TopDirectionSources</code>.
     */
    static validateJSON(data) {
        if (data['regionCounts']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['regionCounts'])) {
                throw new Error("Expected the field `regionCounts` to be an array in the JSON data but got " + data['regionCounts']);
            }
            // validate the optional field `regionCounts` (array)
            for (const item of data['regionCounts']) {
                RegionCount.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The number of days data is aggregated over.
 * @member {Number} dayCount
 */
TopDirectionSources.prototype['dayCount'] = undefined;

/**
 * Regions sorted in descending order by count.
 * @member {Array.<module:model/RegionCount>} regionCounts
 */
TopDirectionSources.prototype['regionCounts'] = undefined;






export default TopDirectionSources;

