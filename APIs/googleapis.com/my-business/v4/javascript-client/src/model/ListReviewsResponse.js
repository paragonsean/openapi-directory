/**
 * Google My Business API
 * The Google My Business API provides an interface for managing business location information on Google.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Review from './Review';

/**
 * The ListReviewsResponse model module.
 * @module model/ListReviewsResponse
 * @version v4
 */
class ListReviewsResponse {
    /**
     * Constructs a new <code>ListReviewsResponse</code>.
     * Response message for Reviews.ListReviews.
     * @alias module:model/ListReviewsResponse
     */
    constructor() { 
        
        ListReviewsResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ListReviewsResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ListReviewsResponse} obj Optional instance to populate.
     * @return {module:model/ListReviewsResponse} The populated <code>ListReviewsResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ListReviewsResponse();

            if (data.hasOwnProperty('averageRating')) {
                obj['averageRating'] = ApiClient.convertToType(data['averageRating'], 'Number');
            }
            if (data.hasOwnProperty('nextPageToken')) {
                obj['nextPageToken'] = ApiClient.convertToType(data['nextPageToken'], 'String');
            }
            if (data.hasOwnProperty('reviews')) {
                obj['reviews'] = ApiClient.convertToType(data['reviews'], [Review]);
            }
            if (data.hasOwnProperty('totalReviewCount')) {
                obj['totalReviewCount'] = ApiClient.convertToType(data['totalReviewCount'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ListReviewsResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ListReviewsResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['nextPageToken'] && !(typeof data['nextPageToken'] === 'string' || data['nextPageToken'] instanceof String)) {
            throw new Error("Expected the field `nextPageToken` to be a primitive type in the JSON string but got " + data['nextPageToken']);
        }
        if (data['reviews']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['reviews'])) {
                throw new Error("Expected the field `reviews` to be an array in the JSON data but got " + data['reviews']);
            }
            // validate the optional field `reviews` (array)
            for (const item of data['reviews']) {
                Review.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The average star rating of all reviews for this location on a scale of 1 to 5, where 5 is the highest rating.
 * @member {Number} averageRating
 */
ListReviewsResponse.prototype['averageRating'] = undefined;

/**
 * If the number of reviews exceeded the requested page size, this field is populated with a token to fetch the next page of reviews on a subsequent call to ListReviews. If there are no more reviews, this field is not present in the response.
 * @member {String} nextPageToken
 */
ListReviewsResponse.prototype['nextPageToken'] = undefined;

/**
 * The reviews.
 * @member {Array.<module:model/Review>} reviews
 */
ListReviewsResponse.prototype['reviews'] = undefined;

/**
 * The total number of reviews for this location.
 * @member {Number} totalReviewCount
 */
ListReviewsResponse.prototype['totalReviewCount'] = undefined;






export default ListReviewsResponse;

