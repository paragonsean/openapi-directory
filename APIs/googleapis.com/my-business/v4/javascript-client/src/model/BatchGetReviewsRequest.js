/**
 * Google My Business API
 * The Google My Business API provides an interface for managing business location information on Google.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BatchGetReviewsRequest model module.
 * @module model/BatchGetReviewsRequest
 * @version v4
 */
class BatchGetReviewsRequest {
    /**
     * Constructs a new <code>BatchGetReviewsRequest</code>.
     * Request message for Reviews.BatchGetReviews.
     * @alias module:model/BatchGetReviewsRequest
     */
    constructor() { 
        
        BatchGetReviewsRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BatchGetReviewsRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BatchGetReviewsRequest} obj Optional instance to populate.
     * @return {module:model/BatchGetReviewsRequest} The populated <code>BatchGetReviewsRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BatchGetReviewsRequest();

            if (data.hasOwnProperty('ignoreRatingOnlyReviews')) {
                obj['ignoreRatingOnlyReviews'] = ApiClient.convertToType(data['ignoreRatingOnlyReviews'], 'Boolean');
            }
            if (data.hasOwnProperty('locationNames')) {
                obj['locationNames'] = ApiClient.convertToType(data['locationNames'], ['String']);
            }
            if (data.hasOwnProperty('orderBy')) {
                obj['orderBy'] = ApiClient.convertToType(data['orderBy'], 'String');
            }
            if (data.hasOwnProperty('pageSize')) {
                obj['pageSize'] = ApiClient.convertToType(data['pageSize'], 'Number');
            }
            if (data.hasOwnProperty('pageToken')) {
                obj['pageToken'] = ApiClient.convertToType(data['pageToken'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BatchGetReviewsRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BatchGetReviewsRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['locationNames'])) {
            throw new Error("Expected the field `locationNames` to be an array in the JSON data but got " + data['locationNames']);
        }
        // ensure the json data is a string
        if (data['orderBy'] && !(typeof data['orderBy'] === 'string' || data['orderBy'] instanceof String)) {
            throw new Error("Expected the field `orderBy` to be a primitive type in the JSON string but got " + data['orderBy']);
        }
        // ensure the json data is a string
        if (data['pageToken'] && !(typeof data['pageToken'] === 'string' || data['pageToken'] instanceof String)) {
            throw new Error("Expected the field `pageToken` to be a primitive type in the JSON string but got " + data['pageToken']);
        }

        return true;
    }


}



/**
 * Whether to ignore rating-only reviews.
 * @member {Boolean} ignoreRatingOnlyReviews
 */
BatchGetReviewsRequest.prototype['ignoreRatingOnlyReviews'] = undefined;

/**
 * A collection of locations to fetch reviews for, specified by their names.
 * @member {Array.<String>} locationNames
 */
BatchGetReviewsRequest.prototype['locationNames'] = undefined;

/**
 * Optional. Specifies the field to sort reviews by. If unspecified, the order of reviews returned will default to `update_time desc`. Valid orders to sort by are `rating`, `rating desc` and `update_time desc`. `rating` will return reviews in ascending order. `update_time`(i.e. ascending order) is not supported.
 * @member {String} orderBy
 */
BatchGetReviewsRequest.prototype['orderBy'] = undefined;

/**
 * How many reviews to fetch per page. The default value is 200.
 * @member {Number} pageSize
 */
BatchGetReviewsRequest.prototype['pageSize'] = undefined;

/**
 * If specified, it fetches the next page of reviews.
 * @member {String} pageToken
 */
BatchGetReviewsRequest.prototype['pageToken'] = undefined;






export default BatchGetReviewsRequest;

