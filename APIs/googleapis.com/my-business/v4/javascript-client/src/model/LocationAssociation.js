/**
 * Google My Business API
 * The Google My Business API provides an interface for managing business location information on Google.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The LocationAssociation model module.
 * @module model/LocationAssociation
 * @version v4
 */
class LocationAssociation {
    /**
     * Constructs a new <code>LocationAssociation</code>.
     * How the media item is associated with its location.
     * @alias module:model/LocationAssociation
     */
    constructor() { 
        
        LocationAssociation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LocationAssociation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LocationAssociation} obj Optional instance to populate.
     * @return {module:model/LocationAssociation} The populated <code>LocationAssociation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LocationAssociation();

            if (data.hasOwnProperty('category')) {
                obj['category'] = ApiClient.convertToType(data['category'], 'String');
            }
            if (data.hasOwnProperty('priceListItemId')) {
                obj['priceListItemId'] = ApiClient.convertToType(data['priceListItemId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LocationAssociation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LocationAssociation</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['category'] && !(typeof data['category'] === 'string' || data['category'] instanceof String)) {
            throw new Error("Expected the field `category` to be a primitive type in the JSON string but got " + data['category']);
        }
        // ensure the json data is a string
        if (data['priceListItemId'] && !(typeof data['priceListItemId'] === 'string' || data['priceListItemId'] instanceof String)) {
            throw new Error("Expected the field `priceListItemId` to be a primitive type in the JSON string but got " + data['priceListItemId']);
        }

        return true;
    }


}



/**
 * The category that this location photo belongs to.
 * @member {module:model/LocationAssociation.CategoryEnum} category
 */
LocationAssociation.prototype['category'] = undefined;

/**
 * The ID of a price list item that this location photo is associated with.
 * @member {String} priceListItemId
 */
LocationAssociation.prototype['priceListItemId'] = undefined;





/**
 * Allowed values for the <code>category</code> property.
 * @enum {String}
 * @readonly
 */
LocationAssociation['CategoryEnum'] = {

    /**
     * value: "CATEGORY_UNSPECIFIED"
     * @const
     */
    "CATEGORY_UNSPECIFIED": "CATEGORY_UNSPECIFIED",

    /**
     * value: "COVER"
     * @const
     */
    "COVER": "COVER",

    /**
     * value: "PROFILE"
     * @const
     */
    "PROFILE": "PROFILE",

    /**
     * value: "LOGO"
     * @const
     */
    "LOGO": "LOGO",

    /**
     * value: "EXTERIOR"
     * @const
     */
    "EXTERIOR": "EXTERIOR",

    /**
     * value: "INTERIOR"
     * @const
     */
    "INTERIOR": "INTERIOR",

    /**
     * value: "PRODUCT"
     * @const
     */
    "PRODUCT": "PRODUCT",

    /**
     * value: "AT_WORK"
     * @const
     */
    "AT_WORK": "AT_WORK",

    /**
     * value: "FOOD_AND_DRINK"
     * @const
     */
    "FOOD_AND_DRINK": "FOOD_AND_DRINK",

    /**
     * value: "MENU"
     * @const
     */
    "MENU": "MENU",

    /**
     * value: "COMMON_AREA"
     * @const
     */
    "COMMON_AREA": "COMMON_AREA",

    /**
     * value: "ROOMS"
     * @const
     */
    "ROOMS": "ROOMS",

    /**
     * value: "TEAMS"
     * @const
     */
    "TEAMS": "TEAMS",

    /**
     * value: "ADDITIONAL"
     * @const
     */
    "ADDITIONAL": "ADDITIONAL"
};



export default LocationAssociation;

