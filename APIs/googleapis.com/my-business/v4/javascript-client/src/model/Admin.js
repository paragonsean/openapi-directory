/**
 * Google My Business API
 * The Google My Business API provides an interface for managing business location information on Google.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Admin model module.
 * @module model/Admin
 * @version v4
 */
class Admin {
    /**
     * Constructs a new <code>Admin</code>.
     * An administrator of an Account or a Location.
     * @alias module:model/Admin
     */
    constructor() { 
        
        Admin.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Admin</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Admin} obj Optional instance to populate.
     * @return {module:model/Admin} The populated <code>Admin</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Admin();

            if (data.hasOwnProperty('adminName')) {
                obj['adminName'] = ApiClient.convertToType(data['adminName'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('pendingInvitation')) {
                obj['pendingInvitation'] = ApiClient.convertToType(data['pendingInvitation'], 'Boolean');
            }
            if (data.hasOwnProperty('role')) {
                obj['role'] = ApiClient.convertToType(data['role'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Admin</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Admin</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['adminName'] && !(typeof data['adminName'] === 'string' || data['adminName'] instanceof String)) {
            throw new Error("Expected the field `adminName` to be a primitive type in the JSON string but got " + data['adminName']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['role'] && !(typeof data['role'] === 'string' || data['role'] instanceof String)) {
            throw new Error("Expected the field `role` to be a primitive type in the JSON string but got " + data['role']);
        }

        return true;
    }


}



/**
 * The name of the admin. When making the initial invitation, this is the invitee's email address. On `GET` calls, the user's email address is returned if the invitation is still pending. Otherwise, it contains the user's first and last names.
 * @member {String} adminName
 */
Admin.prototype['adminName'] = undefined;

/**
 * The resource name. For account admins, this is in the form: `accounts/{account_id}/admins/{admin_id}` For location admins, this is in the form: `accounts/{account_id}/locations/{location_id}/admins/{admin_id}`
 * @member {String} name
 */
Admin.prototype['name'] = undefined;

/**
 * Output only. Indicates whether this admin has a pending invitation for the specified resource.
 * @member {Boolean} pendingInvitation
 */
Admin.prototype['pendingInvitation'] = undefined;

/**
 * Specifies the AdminRole that this admin uses with the specified Account or Location resource.
 * @member {module:model/Admin.RoleEnum} role
 */
Admin.prototype['role'] = undefined;





/**
 * Allowed values for the <code>role</code> property.
 * @enum {String}
 * @readonly
 */
Admin['RoleEnum'] = {

    /**
     * value: "ADMIN_ROLE_UNSPECIFIED"
     * @const
     */
    "ADMIN_ROLE_UNSPECIFIED": "ADMIN_ROLE_UNSPECIFIED",

    /**
     * value: "OWNER"
     * @const
     */
    "OWNER": "OWNER",

    /**
     * value: "CO_OWNER"
     * @const
     */
    "CO_OWNER": "CO_OWNER",

    /**
     * value: "MANAGER"
     * @const
     */
    "MANAGER": "MANAGER",

    /**
     * value: "COMMUNITY_MANAGER"
     * @const
     */
    "COMMUNITY_MANAGER": "COMMUNITY_MANAGER"
};



export default Admin;

