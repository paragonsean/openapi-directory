/**
 * Google My Business API
 * The Google My Business API provides an interface for managing business location information on Google.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Business model module.
 * @module model/Business
 * @version v4
 */
class Business {
    /**
     * Constructs a new <code>Business</code>.
     * Features of the property of specific interest to the business traveler.
     * @alias module:model/Business
     */
    constructor() { 
        
        Business.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Business</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Business} obj Optional instance to populate.
     * @return {module:model/Business} The populated <code>Business</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Business();

            if (data.hasOwnProperty('businessCenter')) {
                obj['businessCenter'] = ApiClient.convertToType(data['businessCenter'], 'Boolean');
            }
            if (data.hasOwnProperty('businessCenterException')) {
                obj['businessCenterException'] = ApiClient.convertToType(data['businessCenterException'], 'String');
            }
            if (data.hasOwnProperty('meetingRooms')) {
                obj['meetingRooms'] = ApiClient.convertToType(data['meetingRooms'], 'Boolean');
            }
            if (data.hasOwnProperty('meetingRoomsCount')) {
                obj['meetingRoomsCount'] = ApiClient.convertToType(data['meetingRoomsCount'], 'Number');
            }
            if (data.hasOwnProperty('meetingRoomsCountException')) {
                obj['meetingRoomsCountException'] = ApiClient.convertToType(data['meetingRoomsCountException'], 'String');
            }
            if (data.hasOwnProperty('meetingRoomsException')) {
                obj['meetingRoomsException'] = ApiClient.convertToType(data['meetingRoomsException'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Business</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Business</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['businessCenterException'] && !(typeof data['businessCenterException'] === 'string' || data['businessCenterException'] instanceof String)) {
            throw new Error("Expected the field `businessCenterException` to be a primitive type in the JSON string but got " + data['businessCenterException']);
        }
        // ensure the json data is a string
        if (data['meetingRoomsCountException'] && !(typeof data['meetingRoomsCountException'] === 'string' || data['meetingRoomsCountException'] instanceof String)) {
            throw new Error("Expected the field `meetingRoomsCountException` to be a primitive type in the JSON string but got " + data['meetingRoomsCountException']);
        }
        // ensure the json data is a string
        if (data['meetingRoomsException'] && !(typeof data['meetingRoomsException'] === 'string' || data['meetingRoomsException'] instanceof String)) {
            throw new Error("Expected the field `meetingRoomsException` to be a primitive type in the JSON string but got " + data['meetingRoomsException']);
        }

        return true;
    }


}



/**
 * Business center. A designated room at the hotel with one or more desks and equipped with guest-use computers, printers, fax machines and/or photocopiers. May or may not be open 24/7. May or may not require a key to access. Not a meeting room or conference room.
 * @member {Boolean} businessCenter
 */
Business.prototype['businessCenter'] = undefined;

/**
 * Business center exception.
 * @member {module:model/Business.BusinessCenterExceptionEnum} businessCenterException
 */
Business.prototype['businessCenterException'] = undefined;

/**
 * Meeting rooms. Rooms at the hotel designated for business-related gatherings. Rooms are usually equipped with tables or desks, office chairs and audio/visual facilities to allow for presentations and conference calls. Also known as conference rooms.
 * @member {Boolean} meetingRooms
 */
Business.prototype['meetingRooms'] = undefined;

/**
 * Meeting rooms count. The number of meeting rooms at the property.
 * @member {Number} meetingRoomsCount
 */
Business.prototype['meetingRoomsCount'] = undefined;

/**
 * Meeting rooms count exception.
 * @member {module:model/Business.MeetingRoomsCountExceptionEnum} meetingRoomsCountException
 */
Business.prototype['meetingRoomsCountException'] = undefined;

/**
 * Meeting rooms exception.
 * @member {module:model/Business.MeetingRoomsExceptionEnum} meetingRoomsException
 */
Business.prototype['meetingRoomsException'] = undefined;





/**
 * Allowed values for the <code>businessCenterException</code> property.
 * @enum {String}
 * @readonly
 */
Business['BusinessCenterExceptionEnum'] = {

    /**
     * value: "EXCEPTION_UNSPECIFIED"
     * @const
     */
    "EXCEPTION_UNSPECIFIED": "EXCEPTION_UNSPECIFIED",

    /**
     * value: "UNDER_CONSTRUCTION"
     * @const
     */
    "UNDER_CONSTRUCTION": "UNDER_CONSTRUCTION",

    /**
     * value: "DEPENDENT_ON_SEASON"
     * @const
     */
    "DEPENDENT_ON_SEASON": "DEPENDENT_ON_SEASON",

    /**
     * value: "DEPENDENT_ON_DAY_OF_WEEK"
     * @const
     */
    "DEPENDENT_ON_DAY_OF_WEEK": "DEPENDENT_ON_DAY_OF_WEEK"
};


/**
 * Allowed values for the <code>meetingRoomsCountException</code> property.
 * @enum {String}
 * @readonly
 */
Business['MeetingRoomsCountExceptionEnum'] = {

    /**
     * value: "EXCEPTION_UNSPECIFIED"
     * @const
     */
    "EXCEPTION_UNSPECIFIED": "EXCEPTION_UNSPECIFIED",

    /**
     * value: "UNDER_CONSTRUCTION"
     * @const
     */
    "UNDER_CONSTRUCTION": "UNDER_CONSTRUCTION",

    /**
     * value: "DEPENDENT_ON_SEASON"
     * @const
     */
    "DEPENDENT_ON_SEASON": "DEPENDENT_ON_SEASON",

    /**
     * value: "DEPENDENT_ON_DAY_OF_WEEK"
     * @const
     */
    "DEPENDENT_ON_DAY_OF_WEEK": "DEPENDENT_ON_DAY_OF_WEEK"
};


/**
 * Allowed values for the <code>meetingRoomsException</code> property.
 * @enum {String}
 * @readonly
 */
Business['MeetingRoomsExceptionEnum'] = {

    /**
     * value: "EXCEPTION_UNSPECIFIED"
     * @const
     */
    "EXCEPTION_UNSPECIFIED": "EXCEPTION_UNSPECIFIED",

    /**
     * value: "UNDER_CONSTRUCTION"
     * @const
     */
    "UNDER_CONSTRUCTION": "UNDER_CONSTRUCTION",

    /**
     * value: "DEPENDENT_ON_SEASON"
     * @const
     */
    "DEPENDENT_ON_SEASON": "DEPENDENT_ON_SEASON",

    /**
     * value: "DEPENDENT_ON_DAY_OF_WEEK"
     * @const
     */
    "DEPENDENT_ON_DAY_OF_WEEK": "DEPENDENT_ON_DAY_OF_WEEK"
};



export default Business;

