/**
 * Google My Business API
 * The Google My Business API provides an interface for managing business location information on Google.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Duplicate model module.
 * @module model/Duplicate
 * @version v4
 */
class Duplicate {
    /**
     * Constructs a new <code>Duplicate</code>.
     * Information about the location that this location duplicates.
     * @alias module:model/Duplicate
     */
    constructor() { 
        
        Duplicate.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Duplicate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Duplicate} obj Optional instance to populate.
     * @return {module:model/Duplicate} The populated <code>Duplicate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Duplicate();

            if (data.hasOwnProperty('access')) {
                obj['access'] = ApiClient.convertToType(data['access'], 'String');
            }
            if (data.hasOwnProperty('locationName')) {
                obj['locationName'] = ApiClient.convertToType(data['locationName'], 'String');
            }
            if (data.hasOwnProperty('placeId')) {
                obj['placeId'] = ApiClient.convertToType(data['placeId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Duplicate</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Duplicate</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['access'] && !(typeof data['access'] === 'string' || data['access'] instanceof String)) {
            throw new Error("Expected the field `access` to be a primitive type in the JSON string but got " + data['access']);
        }
        // ensure the json data is a string
        if (data['locationName'] && !(typeof data['locationName'] === 'string' || data['locationName'] instanceof String)) {
            throw new Error("Expected the field `locationName` to be a primitive type in the JSON string but got " + data['locationName']);
        }
        // ensure the json data is a string
        if (data['placeId'] && !(typeof data['placeId'] === 'string' || data['placeId'] instanceof String)) {
            throw new Error("Expected the field `placeId` to be a primitive type in the JSON string but got " + data['placeId']);
        }

        return true;
    }


}



/**
 * Indicates whether the user has access to the location it duplicates.
 * @member {module:model/Duplicate.AccessEnum} access
 */
Duplicate.prototype['access'] = undefined;

/**
 * The resource name of the location that this duplicates. Only populated if the authenticated user has access rights to that location and that location is not deleted.
 * @member {String} locationName
 */
Duplicate.prototype['locationName'] = undefined;

/**
 * The place ID of the location that this duplicates.
 * @member {String} placeId
 */
Duplicate.prototype['placeId'] = undefined;





/**
 * Allowed values for the <code>access</code> property.
 * @enum {String}
 * @readonly
 */
Duplicate['AccessEnum'] = {

    /**
     * value: "ACCESS_UNSPECIFIED"
     * @const
     */
    "ACCESS_UNSPECIFIED": "ACCESS_UNSPECIFIED",

    /**
     * value: "ACCESS_UNKNOWN"
     * @const
     */
    "ACCESS_UNKNOWN": "ACCESS_UNKNOWN",

    /**
     * value: "ALLOWED"
     * @const
     */
    "ALLOWED": "ALLOWED",

    /**
     * value: "INSUFFICIENT"
     * @const
     */
    "INSUFFICIENT": "INSUFFICIENT"
};



export default Duplicate;

