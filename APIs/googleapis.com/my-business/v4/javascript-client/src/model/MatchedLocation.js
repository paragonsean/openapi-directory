/**
 * Google My Business API
 * The Google My Business API provides an interface for managing business location information on Google.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Location from './Location';

/**
 * The MatchedLocation model module.
 * @module model/MatchedLocation
 * @version v4
 */
class MatchedLocation {
    /**
     * Constructs a new <code>MatchedLocation</code>.
     * Represents a possible match to a location.
     * @alias module:model/MatchedLocation
     */
    constructor() { 
        
        MatchedLocation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MatchedLocation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MatchedLocation} obj Optional instance to populate.
     * @return {module:model/MatchedLocation} The populated <code>MatchedLocation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MatchedLocation();

            if (data.hasOwnProperty('isExactMatch')) {
                obj['isExactMatch'] = ApiClient.convertToType(data['isExactMatch'], 'Boolean');
            }
            if (data.hasOwnProperty('location')) {
                obj['location'] = Location.constructFromObject(data['location']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MatchedLocation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MatchedLocation</code>.
     */
    static validateJSON(data) {
        // validate the optional field `location`
        if (data['location']) { // data not null
          Location.validateJSON(data['location']);
        }

        return true;
    }


}



/**
 * Is this an exact match?
 * @member {Boolean} isExactMatch
 */
MatchedLocation.prototype['isExactMatch'] = undefined;

/**
 * @member {module:model/Location} location
 */
MatchedLocation.prototype['location'] = undefined;






export default MatchedLocation;

