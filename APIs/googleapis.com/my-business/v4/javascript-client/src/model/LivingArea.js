/**
 * Google My Business API
 * The Google My Business API provides an interface for managing business location information on Google.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LivingAreaAccessibility from './LivingAreaAccessibility';
import LivingAreaEating from './LivingAreaEating';
import LivingAreaFeatures from './LivingAreaFeatures';
import LivingAreaLayout from './LivingAreaLayout';
import LivingAreaSleeping from './LivingAreaSleeping';

/**
 * The LivingArea model module.
 * @module model/LivingArea
 * @version v4
 */
class LivingArea {
    /**
     * Constructs a new <code>LivingArea</code>.
     * An individual room, such as kitchen, bathroom, bedroom, within a bookable guest unit.
     * @alias module:model/LivingArea
     */
    constructor() { 
        
        LivingArea.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LivingArea</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LivingArea} obj Optional instance to populate.
     * @return {module:model/LivingArea} The populated <code>LivingArea</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LivingArea();

            if (data.hasOwnProperty('accessibility')) {
                obj['accessibility'] = LivingAreaAccessibility.constructFromObject(data['accessibility']);
            }
            if (data.hasOwnProperty('eating')) {
                obj['eating'] = LivingAreaEating.constructFromObject(data['eating']);
            }
            if (data.hasOwnProperty('features')) {
                obj['features'] = LivingAreaFeatures.constructFromObject(data['features']);
            }
            if (data.hasOwnProperty('layout')) {
                obj['layout'] = LivingAreaLayout.constructFromObject(data['layout']);
            }
            if (data.hasOwnProperty('sleeping')) {
                obj['sleeping'] = LivingAreaSleeping.constructFromObject(data['sleeping']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LivingArea</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LivingArea</code>.
     */
    static validateJSON(data) {
        // validate the optional field `accessibility`
        if (data['accessibility']) { // data not null
          LivingAreaAccessibility.validateJSON(data['accessibility']);
        }
        // validate the optional field `eating`
        if (data['eating']) { // data not null
          LivingAreaEating.validateJSON(data['eating']);
        }
        // validate the optional field `features`
        if (data['features']) { // data not null
          LivingAreaFeatures.validateJSON(data['features']);
        }
        // validate the optional field `layout`
        if (data['layout']) { // data not null
          LivingAreaLayout.validateJSON(data['layout']);
        }
        // validate the optional field `sleeping`
        if (data['sleeping']) { // data not null
          LivingAreaSleeping.validateJSON(data['sleeping']);
        }

        return true;
    }


}



/**
 * @member {module:model/LivingAreaAccessibility} accessibility
 */
LivingArea.prototype['accessibility'] = undefined;

/**
 * @member {module:model/LivingAreaEating} eating
 */
LivingArea.prototype['eating'] = undefined;

/**
 * @member {module:model/LivingAreaFeatures} features
 */
LivingArea.prototype['features'] = undefined;

/**
 * @member {module:model/LivingAreaLayout} layout
 */
LivingArea.prototype['layout'] = undefined;

/**
 * @member {module:model/LivingAreaSleeping} sleeping
 */
LivingArea.prototype['sleeping'] = undefined;






export default LivingArea;

