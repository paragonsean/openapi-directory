/**
 * Google My Business API
 * The Google My Business API provides an interface for managing business location information on Google.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Duplicate from './Duplicate';

/**
 * The Metadata model module.
 * @module model/Metadata
 * @version v4
 */
class Metadata {
    /**
     * Constructs a new <code>Metadata</code>.
     * Additional non-user-editable information about the location.
     * @alias module:model/Metadata
     */
    constructor() { 
        
        Metadata.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Metadata</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Metadata} obj Optional instance to populate.
     * @return {module:model/Metadata} The populated <code>Metadata</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Metadata();

            if (data.hasOwnProperty('duplicate')) {
                obj['duplicate'] = Duplicate.constructFromObject(data['duplicate']);
            }
            if (data.hasOwnProperty('mapsUrl')) {
                obj['mapsUrl'] = ApiClient.convertToType(data['mapsUrl'], 'String');
            }
            if (data.hasOwnProperty('newReviewUrl')) {
                obj['newReviewUrl'] = ApiClient.convertToType(data['newReviewUrl'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Metadata</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Metadata</code>.
     */
    static validateJSON(data) {
        // validate the optional field `duplicate`
        if (data['duplicate']) { // data not null
          Duplicate.validateJSON(data['duplicate']);
        }
        // ensure the json data is a string
        if (data['mapsUrl'] && !(typeof data['mapsUrl'] === 'string' || data['mapsUrl'] instanceof String)) {
            throw new Error("Expected the field `mapsUrl` to be a primitive type in the JSON string but got " + data['mapsUrl']);
        }
        // ensure the json data is a string
        if (data['newReviewUrl'] && !(typeof data['newReviewUrl'] === 'string' || data['newReviewUrl'] instanceof String)) {
            throw new Error("Expected the field `newReviewUrl` to be a primitive type in the JSON string but got " + data['newReviewUrl']);
        }

        return true;
    }


}



/**
 * @member {module:model/Duplicate} duplicate
 */
Metadata.prototype['duplicate'] = undefined;

/**
 * A link to the location on Maps.
 * @member {String} mapsUrl
 */
Metadata.prototype['mapsUrl'] = undefined;

/**
 * A link to the page on Google Search where a customer can leave a review for the location.
 * @member {String} newReviewUrl
 */
Metadata.prototype['newReviewUrl'] = undefined;






export default Metadata;

