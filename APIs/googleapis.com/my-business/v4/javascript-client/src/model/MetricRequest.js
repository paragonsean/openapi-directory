/**
 * Google My Business API
 * The Google My Business API provides an interface for managing business location information on Google.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MetricRequest model module.
 * @module model/MetricRequest
 * @version v4
 */
class MetricRequest {
    /**
     * Constructs a new <code>MetricRequest</code>.
     * A request to return values for one metric and the options for how those values should be returned.
     * @alias module:model/MetricRequest
     */
    constructor() { 
        
        MetricRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MetricRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MetricRequest} obj Optional instance to populate.
     * @return {module:model/MetricRequest} The populated <code>MetricRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MetricRequest();

            if (data.hasOwnProperty('metric')) {
                obj['metric'] = ApiClient.convertToType(data['metric'], 'String');
            }
            if (data.hasOwnProperty('options')) {
                obj['options'] = ApiClient.convertToType(data['options'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MetricRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MetricRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['metric'] && !(typeof data['metric'] === 'string' || data['metric'] instanceof String)) {
            throw new Error("Expected the field `metric` to be a primitive type in the JSON string but got " + data['metric']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['options'])) {
            throw new Error("Expected the field `options` to be an array in the JSON data but got " + data['options']);
        }

        return true;
    }


}



/**
 * The requested metric.
 * @member {module:model/MetricRequest.MetricEnum} metric
 */
MetricRequest.prototype['metric'] = undefined;

/**
 * How the values should appear when returned.
 * @member {Array.<module:model/MetricRequest.OptionsEnum>} options
 */
MetricRequest.prototype['options'] = undefined;





/**
 * Allowed values for the <code>metric</code> property.
 * @enum {String}
 * @readonly
 */
MetricRequest['MetricEnum'] = {

    /**
     * value: "METRIC_UNSPECIFIED"
     * @const
     */
    "METRIC_UNSPECIFIED": "METRIC_UNSPECIFIED",

    /**
     * value: "ALL"
     * @const
     */
    "ALL": "ALL",

    /**
     * value: "QUERIES_DIRECT"
     * @const
     */
    "QUERIES_DIRECT": "QUERIES_DIRECT",

    /**
     * value: "QUERIES_INDIRECT"
     * @const
     */
    "QUERIES_INDIRECT": "QUERIES_INDIRECT",

    /**
     * value: "QUERIES_CHAIN"
     * @const
     */
    "QUERIES_CHAIN": "QUERIES_CHAIN",

    /**
     * value: "VIEWS_MAPS"
     * @const
     */
    "VIEWS_MAPS": "VIEWS_MAPS",

    /**
     * value: "VIEWS_SEARCH"
     * @const
     */
    "VIEWS_SEARCH": "VIEWS_SEARCH",

    /**
     * value: "ACTIONS_WEBSITE"
     * @const
     */
    "ACTIONS_WEBSITE": "ACTIONS_WEBSITE",

    /**
     * value: "ACTIONS_PHONE"
     * @const
     */
    "ACTIONS_PHONE": "ACTIONS_PHONE",

    /**
     * value: "ACTIONS_DRIVING_DIRECTIONS"
     * @const
     */
    "ACTIONS_DRIVING_DIRECTIONS": "ACTIONS_DRIVING_DIRECTIONS",

    /**
     * value: "PHOTOS_VIEWS_MERCHANT"
     * @const
     */
    "PHOTOS_VIEWS_MERCHANT": "PHOTOS_VIEWS_MERCHANT",

    /**
     * value: "PHOTOS_VIEWS_CUSTOMERS"
     * @const
     */
    "PHOTOS_VIEWS_CUSTOMERS": "PHOTOS_VIEWS_CUSTOMERS",

    /**
     * value: "PHOTOS_COUNT_MERCHANT"
     * @const
     */
    "PHOTOS_COUNT_MERCHANT": "PHOTOS_COUNT_MERCHANT",

    /**
     * value: "PHOTOS_COUNT_CUSTOMERS"
     * @const
     */
    "PHOTOS_COUNT_CUSTOMERS": "PHOTOS_COUNT_CUSTOMERS",

    /**
     * value: "LOCAL_POST_VIEWS_SEARCH"
     * @const
     */
    "LOCAL_POST_VIEWS_SEARCH": "LOCAL_POST_VIEWS_SEARCH",

    /**
     * value: "LOCAL_POST_ACTIONS_CALL_TO_ACTION"
     * @const
     */
    "LOCAL_POST_ACTIONS_CALL_TO_ACTION": "LOCAL_POST_ACTIONS_CALL_TO_ACTION"
};


/**
 * Allowed values for the <code>options</code> property.
 * @enum {String}
 * @readonly
 */
MetricRequest['OptionsEnum'] = {

    /**
     * value: "METRIC_OPTION_UNSPECIFIED"
     * @const
     */
    "METRIC_OPTION_UNSPECIFIED": "METRIC_OPTION_UNSPECIFIED",

    /**
     * value: "AGGREGATED_TOTAL"
     * @const
     */
    "AGGREGATED_TOTAL": "AGGREGATED_TOTAL",

    /**
     * value: "AGGREGATED_DAILY"
     * @const
     */
    "AGGREGATED_DAILY": "AGGREGATED_DAILY",

    /**
     * value: "BREAKDOWN_DAY_OF_WEEK"
     * @const
     */
    "BREAKDOWN_DAY_OF_WEEK": "BREAKDOWN_DAY_OF_WEEK",

    /**
     * value: "BREAKDOWN_HOUR_OF_DAY"
     * @const
     */
    "BREAKDOWN_HOUR_OF_DAY": "BREAKDOWN_HOUR_OF_DAY"
};



export default MetricRequest;

