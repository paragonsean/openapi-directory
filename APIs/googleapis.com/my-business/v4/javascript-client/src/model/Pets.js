/**
 * Google My Business API
 * The Google My Business API provides an interface for managing business location information on Google.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Pets model module.
 * @module model/Pets
 * @version v4
 */
class Pets {
    /**
     * Constructs a new <code>Pets</code>.
     * Policies regarding guest-owned animals.
     * @alias module:model/Pets
     */
    constructor() { 
        
        Pets.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Pets</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Pets} obj Optional instance to populate.
     * @return {module:model/Pets} The populated <code>Pets</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Pets();

            if (data.hasOwnProperty('catsAllowed')) {
                obj['catsAllowed'] = ApiClient.convertToType(data['catsAllowed'], 'Boolean');
            }
            if (data.hasOwnProperty('catsAllowedException')) {
                obj['catsAllowedException'] = ApiClient.convertToType(data['catsAllowedException'], 'String');
            }
            if (data.hasOwnProperty('dogsAllowed')) {
                obj['dogsAllowed'] = ApiClient.convertToType(data['dogsAllowed'], 'Boolean');
            }
            if (data.hasOwnProperty('dogsAllowedException')) {
                obj['dogsAllowedException'] = ApiClient.convertToType(data['dogsAllowedException'], 'String');
            }
            if (data.hasOwnProperty('petsAllowed')) {
                obj['petsAllowed'] = ApiClient.convertToType(data['petsAllowed'], 'Boolean');
            }
            if (data.hasOwnProperty('petsAllowedException')) {
                obj['petsAllowedException'] = ApiClient.convertToType(data['petsAllowedException'], 'String');
            }
            if (data.hasOwnProperty('petsAllowedFree')) {
                obj['petsAllowedFree'] = ApiClient.convertToType(data['petsAllowedFree'], 'Boolean');
            }
            if (data.hasOwnProperty('petsAllowedFreeException')) {
                obj['petsAllowedFreeException'] = ApiClient.convertToType(data['petsAllowedFreeException'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Pets</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Pets</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['catsAllowedException'] && !(typeof data['catsAllowedException'] === 'string' || data['catsAllowedException'] instanceof String)) {
            throw new Error("Expected the field `catsAllowedException` to be a primitive type in the JSON string but got " + data['catsAllowedException']);
        }
        // ensure the json data is a string
        if (data['dogsAllowedException'] && !(typeof data['dogsAllowedException'] === 'string' || data['dogsAllowedException'] instanceof String)) {
            throw new Error("Expected the field `dogsAllowedException` to be a primitive type in the JSON string but got " + data['dogsAllowedException']);
        }
        // ensure the json data is a string
        if (data['petsAllowedException'] && !(typeof data['petsAllowedException'] === 'string' || data['petsAllowedException'] instanceof String)) {
            throw new Error("Expected the field `petsAllowedException` to be a primitive type in the JSON string but got " + data['petsAllowedException']);
        }
        // ensure the json data is a string
        if (data['petsAllowedFreeException'] && !(typeof data['petsAllowedFreeException'] === 'string' || data['petsAllowedFreeException'] instanceof String)) {
            throw new Error("Expected the field `petsAllowedFreeException` to be a primitive type in the JSON string but got " + data['petsAllowedFreeException']);
        }

        return true;
    }


}



/**
 * Cats allowed. Domesticated felines are permitted at the property and allowed to stay in the guest room of their owner. May or may not require a fee.
 * @member {Boolean} catsAllowed
 */
Pets.prototype['catsAllowed'] = undefined;

/**
 * Cats allowed exception.
 * @member {module:model/Pets.CatsAllowedExceptionEnum} catsAllowedException
 */
Pets.prototype['catsAllowedException'] = undefined;

/**
 * Dogs allowed. Domesticated canines are permitted at the property and allowed to stay in the guest room of their owner. May or may not require a fee.
 * @member {Boolean} dogsAllowed
 */
Pets.prototype['dogsAllowed'] = undefined;

/**
 * Dogs allowed exception.
 * @member {module:model/Pets.DogsAllowedExceptionEnum} dogsAllowedException
 */
Pets.prototype['dogsAllowedException'] = undefined;

/**
 * Pets allowed. Household animals are allowed at the property and in the specific guest room of their owner. May or may not include dogs, cats, reptiles and/or fish. May or may not require a fee. Service animals are not considered to be pets, so not governed by this policy.
 * @member {Boolean} petsAllowed
 */
Pets.prototype['petsAllowed'] = undefined;

/**
 * Pets allowed exception.
 * @member {module:model/Pets.PetsAllowedExceptionEnum} petsAllowedException
 */
Pets.prototype['petsAllowedException'] = undefined;

/**
 * Pets allowed free. Household animals are allowed at the property and in the specific guest room of their owner for free. May or may not include dogs, cats, reptiles, and/or fish.
 * @member {Boolean} petsAllowedFree
 */
Pets.prototype['petsAllowedFree'] = undefined;

/**
 * Pets allowed free exception.
 * @member {module:model/Pets.PetsAllowedFreeExceptionEnum} petsAllowedFreeException
 */
Pets.prototype['petsAllowedFreeException'] = undefined;





/**
 * Allowed values for the <code>catsAllowedException</code> property.
 * @enum {String}
 * @readonly
 */
Pets['CatsAllowedExceptionEnum'] = {

    /**
     * value: "EXCEPTION_UNSPECIFIED"
     * @const
     */
    "EXCEPTION_UNSPECIFIED": "EXCEPTION_UNSPECIFIED",

    /**
     * value: "UNDER_CONSTRUCTION"
     * @const
     */
    "UNDER_CONSTRUCTION": "UNDER_CONSTRUCTION",

    /**
     * value: "DEPENDENT_ON_SEASON"
     * @const
     */
    "DEPENDENT_ON_SEASON": "DEPENDENT_ON_SEASON",

    /**
     * value: "DEPENDENT_ON_DAY_OF_WEEK"
     * @const
     */
    "DEPENDENT_ON_DAY_OF_WEEK": "DEPENDENT_ON_DAY_OF_WEEK"
};


/**
 * Allowed values for the <code>dogsAllowedException</code> property.
 * @enum {String}
 * @readonly
 */
Pets['DogsAllowedExceptionEnum'] = {

    /**
     * value: "EXCEPTION_UNSPECIFIED"
     * @const
     */
    "EXCEPTION_UNSPECIFIED": "EXCEPTION_UNSPECIFIED",

    /**
     * value: "UNDER_CONSTRUCTION"
     * @const
     */
    "UNDER_CONSTRUCTION": "UNDER_CONSTRUCTION",

    /**
     * value: "DEPENDENT_ON_SEASON"
     * @const
     */
    "DEPENDENT_ON_SEASON": "DEPENDENT_ON_SEASON",

    /**
     * value: "DEPENDENT_ON_DAY_OF_WEEK"
     * @const
     */
    "DEPENDENT_ON_DAY_OF_WEEK": "DEPENDENT_ON_DAY_OF_WEEK"
};


/**
 * Allowed values for the <code>petsAllowedException</code> property.
 * @enum {String}
 * @readonly
 */
Pets['PetsAllowedExceptionEnum'] = {

    /**
     * value: "EXCEPTION_UNSPECIFIED"
     * @const
     */
    "EXCEPTION_UNSPECIFIED": "EXCEPTION_UNSPECIFIED",

    /**
     * value: "UNDER_CONSTRUCTION"
     * @const
     */
    "UNDER_CONSTRUCTION": "UNDER_CONSTRUCTION",

    /**
     * value: "DEPENDENT_ON_SEASON"
     * @const
     */
    "DEPENDENT_ON_SEASON": "DEPENDENT_ON_SEASON",

    /**
     * value: "DEPENDENT_ON_DAY_OF_WEEK"
     * @const
     */
    "DEPENDENT_ON_DAY_OF_WEEK": "DEPENDENT_ON_DAY_OF_WEEK"
};


/**
 * Allowed values for the <code>petsAllowedFreeException</code> property.
 * @enum {String}
 * @readonly
 */
Pets['PetsAllowedFreeExceptionEnum'] = {

    /**
     * value: "EXCEPTION_UNSPECIFIED"
     * @const
     */
    "EXCEPTION_UNSPECIFIED": "EXCEPTION_UNSPECIFIED",

    /**
     * value: "UNDER_CONSTRUCTION"
     * @const
     */
    "UNDER_CONSTRUCTION": "UNDER_CONSTRUCTION",

    /**
     * value: "DEPENDENT_ON_SEASON"
     * @const
     */
    "DEPENDENT_ON_SEASON": "DEPENDENT_ON_SEASON",

    /**
     * value: "DEPENDENT_ON_DAY_OF_WEEK"
     * @const
     */
    "DEPENDENT_ON_DAY_OF_WEEK": "DEPENDENT_ON_DAY_OF_WEEK"
};



export default Pets;

