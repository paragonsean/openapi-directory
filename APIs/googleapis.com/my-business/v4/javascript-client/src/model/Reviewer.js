/**
 * Google My Business API
 * The Google My Business API provides an interface for managing business location information on Google.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Reviewer model module.
 * @module model/Reviewer
 * @version v4
 */
class Reviewer {
    /**
     * Constructs a new <code>Reviewer</code>.
     * Represents the author of the review.
     * @alias module:model/Reviewer
     */
    constructor() { 
        
        Reviewer.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Reviewer</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Reviewer} obj Optional instance to populate.
     * @return {module:model/Reviewer} The populated <code>Reviewer</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Reviewer();

            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('isAnonymous')) {
                obj['isAnonymous'] = ApiClient.convertToType(data['isAnonymous'], 'Boolean');
            }
            if (data.hasOwnProperty('profilePhotoUrl')) {
                obj['profilePhotoUrl'] = ApiClient.convertToType(data['profilePhotoUrl'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Reviewer</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Reviewer</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['profilePhotoUrl'] && !(typeof data['profilePhotoUrl'] === 'string' || data['profilePhotoUrl'] instanceof String)) {
            throw new Error("Expected the field `profilePhotoUrl` to be a primitive type in the JSON string but got " + data['profilePhotoUrl']);
        }

        return true;
    }


}



/**
 * The name of the reviewer. Only populated with the reviewer's real name if `is_anonymous` is false.
 * @member {String} displayName
 */
Reviewer.prototype['displayName'] = undefined;

/**
 * Indicates whether the reviewer has opted to remain anonymous.
 * @member {Boolean} isAnonymous
 */
Reviewer.prototype['isAnonymous'] = undefined;

/**
 * The profile photo link of the reviewer. Only populated if `is_anonymous` is false.
 * @member {String} profilePhotoUrl
 */
Reviewer.prototype['profilePhotoUrl'] = undefined;






export default Reviewer;

