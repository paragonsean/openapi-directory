/**
 * Google My Business API
 * The Google My Business API provides an interface for managing business location information on Google.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MenuLabel from './MenuLabel';

/**
 * The PortionSize model module.
 * @module model/PortionSize
 * @version v4
 */
class PortionSize {
    /**
     * Constructs a new <code>PortionSize</code>.
     * Serving portion size of a food dish.
     * @alias module:model/PortionSize
     */
    constructor() { 
        
        PortionSize.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PortionSize</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PortionSize} obj Optional instance to populate.
     * @return {module:model/PortionSize} The populated <code>PortionSize</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PortionSize();

            if (data.hasOwnProperty('quantity')) {
                obj['quantity'] = ApiClient.convertToType(data['quantity'], 'Number');
            }
            if (data.hasOwnProperty('unit')) {
                obj['unit'] = ApiClient.convertToType(data['unit'], [MenuLabel]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PortionSize</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PortionSize</code>.
     */
    static validateJSON(data) {
        if (data['unit']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['unit'])) {
                throw new Error("Expected the field `unit` to be an array in the JSON data but got " + data['unit']);
            }
            // validate the optional field `unit` (array)
            for (const item of data['unit']) {
                MenuLabel.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Required. Number of the portion.
 * @member {Number} quantity
 */
PortionSize.prototype['quantity'] = undefined;

/**
 * Required. The repeated name_info field is for the unit in multiple languages.
 * @member {Array.<module:model/MenuLabel>} unit
 */
PortionSize.prototype['unit'] = undefined;






export default PortionSize;

