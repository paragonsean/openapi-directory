/**
 * Google My Business API
 * The Google My Business API provides an interface for managing business location information on Google.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIReportLocationInsightsRequest.h
 *
 * Request message for Insights.ReportLocationInsights.
 */

#ifndef OAIReportLocationInsightsRequest_H
#define OAIReportLocationInsightsRequest_H

#include <QJsonObject>

#include "OAIBasicMetricsRequest.h"
#include "OAIDrivingDirectionMetricsRequest.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBasicMetricsRequest;
class OAIDrivingDirectionMetricsRequest;

class OAIReportLocationInsightsRequest : public OAIObject {
public:
    OAIReportLocationInsightsRequest();
    OAIReportLocationInsightsRequest(QString json);
    ~OAIReportLocationInsightsRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIBasicMetricsRequest getBasicRequest() const;
    void setBasicRequest(const OAIBasicMetricsRequest &basic_request);
    bool is_basic_request_Set() const;
    bool is_basic_request_Valid() const;

    OAIDrivingDirectionMetricsRequest getDrivingDirectionsRequest() const;
    void setDrivingDirectionsRequest(const OAIDrivingDirectionMetricsRequest &driving_directions_request);
    bool is_driving_directions_request_Set() const;
    bool is_driving_directions_request_Valid() const;

    QList<QString> getLocationNames() const;
    void setLocationNames(const QList<QString> &location_names);
    bool is_location_names_Set() const;
    bool is_location_names_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIBasicMetricsRequest m_basic_request;
    bool m_basic_request_isSet;
    bool m_basic_request_isValid;

    OAIDrivingDirectionMetricsRequest m_driving_directions_request;
    bool m_driving_directions_request_isSet;
    bool m_driving_directions_request_isValid;

    QList<QString> m_location_names;
    bool m_location_names_isSet;
    bool m_location_names_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIReportLocationInsightsRequest)

#endif // OAIReportLocationInsightsRequest_H
