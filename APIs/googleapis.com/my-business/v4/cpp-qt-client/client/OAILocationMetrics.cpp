/**
 * Google My Business API
 * The Google My Business API provides an interface for managing business location information on Google.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILocationMetrics.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILocationMetrics::OAILocationMetrics(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILocationMetrics::OAILocationMetrics() {
    this->initializeModel();
}

OAILocationMetrics::~OAILocationMetrics() {}

void OAILocationMetrics::initializeModel() {

    m_location_name_isSet = false;
    m_location_name_isValid = false;

    m_metric_values_isSet = false;
    m_metric_values_isValid = false;

    m_time_zone_isSet = false;
    m_time_zone_isValid = false;
}

void OAILocationMetrics::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILocationMetrics::fromJsonObject(QJsonObject json) {

    m_location_name_isValid = ::OpenAPI::fromJsonValue(m_location_name, json[QString("locationName")]);
    m_location_name_isSet = !json[QString("locationName")].isNull() && m_location_name_isValid;

    m_metric_values_isValid = ::OpenAPI::fromJsonValue(m_metric_values, json[QString("metricValues")]);
    m_metric_values_isSet = !json[QString("metricValues")].isNull() && m_metric_values_isValid;

    m_time_zone_isValid = ::OpenAPI::fromJsonValue(m_time_zone, json[QString("timeZone")]);
    m_time_zone_isSet = !json[QString("timeZone")].isNull() && m_time_zone_isValid;
}

QString OAILocationMetrics::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILocationMetrics::asJsonObject() const {
    QJsonObject obj;
    if (m_location_name_isSet) {
        obj.insert(QString("locationName"), ::OpenAPI::toJsonValue(m_location_name));
    }
    if (m_metric_values.size() > 0) {
        obj.insert(QString("metricValues"), ::OpenAPI::toJsonValue(m_metric_values));
    }
    if (m_time_zone_isSet) {
        obj.insert(QString("timeZone"), ::OpenAPI::toJsonValue(m_time_zone));
    }
    return obj;
}

QString OAILocationMetrics::getLocationName() const {
    return m_location_name;
}
void OAILocationMetrics::setLocationName(const QString &location_name) {
    m_location_name = location_name;
    m_location_name_isSet = true;
}

bool OAILocationMetrics::is_location_name_Set() const{
    return m_location_name_isSet;
}

bool OAILocationMetrics::is_location_name_Valid() const{
    return m_location_name_isValid;
}

QList<OAIMetricValue> OAILocationMetrics::getMetricValues() const {
    return m_metric_values;
}
void OAILocationMetrics::setMetricValues(const QList<OAIMetricValue> &metric_values) {
    m_metric_values = metric_values;
    m_metric_values_isSet = true;
}

bool OAILocationMetrics::is_metric_values_Set() const{
    return m_metric_values_isSet;
}

bool OAILocationMetrics::is_metric_values_Valid() const{
    return m_metric_values_isValid;
}

QString OAILocationMetrics::getTimeZone() const {
    return m_time_zone;
}
void OAILocationMetrics::setTimeZone(const QString &time_zone) {
    m_time_zone = time_zone;
    m_time_zone_isSet = true;
}

bool OAILocationMetrics::is_time_zone_Set() const{
    return m_time_zone_isSet;
}

bool OAILocationMetrics::is_time_zone_Valid() const{
    return m_time_zone_isValid;
}

bool OAILocationMetrics::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_location_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_metric_values.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_time_zone_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILocationMetrics::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
