/**
 * Google My Business API
 * The Google My Business API provides an interface for managing business location information on Google.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetGoogleUpdatedLodgingResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetGoogleUpdatedLodgingResponse::OAIGetGoogleUpdatedLodgingResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetGoogleUpdatedLodgingResponse::OAIGetGoogleUpdatedLodgingResponse() {
    this->initializeModel();
}

OAIGetGoogleUpdatedLodgingResponse::~OAIGetGoogleUpdatedLodgingResponse() {}

void OAIGetGoogleUpdatedLodgingResponse::initializeModel() {

    m_diff_mask_isSet = false;
    m_diff_mask_isValid = false;

    m_lodging_isSet = false;
    m_lodging_isValid = false;
}

void OAIGetGoogleUpdatedLodgingResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetGoogleUpdatedLodgingResponse::fromJsonObject(QJsonObject json) {

    m_diff_mask_isValid = ::OpenAPI::fromJsonValue(m_diff_mask, json[QString("diffMask")]);
    m_diff_mask_isSet = !json[QString("diffMask")].isNull() && m_diff_mask_isValid;

    m_lodging_isValid = ::OpenAPI::fromJsonValue(m_lodging, json[QString("lodging")]);
    m_lodging_isSet = !json[QString("lodging")].isNull() && m_lodging_isValid;
}

QString OAIGetGoogleUpdatedLodgingResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetGoogleUpdatedLodgingResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_diff_mask_isSet) {
        obj.insert(QString("diffMask"), ::OpenAPI::toJsonValue(m_diff_mask));
    }
    if (m_lodging.isSet()) {
        obj.insert(QString("lodging"), ::OpenAPI::toJsonValue(m_lodging));
    }
    return obj;
}

QString OAIGetGoogleUpdatedLodgingResponse::getDiffMask() const {
    return m_diff_mask;
}
void OAIGetGoogleUpdatedLodgingResponse::setDiffMask(const QString &diff_mask) {
    m_diff_mask = diff_mask;
    m_diff_mask_isSet = true;
}

bool OAIGetGoogleUpdatedLodgingResponse::is_diff_mask_Set() const{
    return m_diff_mask_isSet;
}

bool OAIGetGoogleUpdatedLodgingResponse::is_diff_mask_Valid() const{
    return m_diff_mask_isValid;
}

OAILodging OAIGetGoogleUpdatedLodgingResponse::getLodging() const {
    return m_lodging;
}
void OAIGetGoogleUpdatedLodgingResponse::setLodging(const OAILodging &lodging) {
    m_lodging = lodging;
    m_lodging_isSet = true;
}

bool OAIGetGoogleUpdatedLodgingResponse::is_lodging_Set() const{
    return m_lodging_isSet;
}

bool OAIGetGoogleUpdatedLodgingResponse::is_lodging_Valid() const{
    return m_lodging_isValid;
}

bool OAIGetGoogleUpdatedLodgingResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_diff_mask_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_lodging.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetGoogleUpdatedLodgingResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
