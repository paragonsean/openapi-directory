/**
 * Google My Business API
 * The Google My Business API provides an interface for managing business location information on Google.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVerification.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVerification::OAIVerification(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVerification::OAIVerification() {
    this->initializeModel();
}

OAIVerification::~OAIVerification() {}

void OAIVerification::initializeModel() {

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_method_isSet = false;
    m_method_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;
}

void OAIVerification::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIVerification::fromJsonObject(QJsonObject json) {

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_method_isValid = ::OpenAPI::fromJsonValue(m_method, json[QString("method")]);
    m_method_isSet = !json[QString("method")].isNull() && m_method_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;
}

QString OAIVerification::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIVerification::asJsonObject() const {
    QJsonObject obj;
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_method_isSet) {
        obj.insert(QString("method"), ::OpenAPI::toJsonValue(m_method));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    return obj;
}

QString OAIVerification::getCreateTime() const {
    return m_create_time;
}
void OAIVerification::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIVerification::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIVerification::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QString OAIVerification::getMethod() const {
    return m_method;
}
void OAIVerification::setMethod(const QString &method) {
    m_method = method;
    m_method_isSet = true;
}

bool OAIVerification::is_method_Set() const{
    return m_method_isSet;
}

bool OAIVerification::is_method_Valid() const{
    return m_method_isValid;
}

QString OAIVerification::getName() const {
    return m_name;
}
void OAIVerification::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIVerification::is_name_Set() const{
    return m_name_isSet;
}

bool OAIVerification::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIVerification::getState() const {
    return m_state;
}
void OAIVerification::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIVerification::is_state_Set() const{
    return m_state_isSet;
}

bool OAIVerification::is_state_Valid() const{
    return m_state_isValid;
}

bool OAIVerification::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_method_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIVerification::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
