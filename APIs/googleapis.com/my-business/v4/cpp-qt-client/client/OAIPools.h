/**
 * Google My Business API
 * The Google My Business API provides an interface for managing business location information on Google.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPools.h
 *
 * Swimming pool or recreational water facilities available at the hotel.
 */

#ifndef OAIPools_H
#define OAIPools_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPools : public OAIObject {
public:
    OAIPools();
    OAIPools(QString json);
    ~OAIPools() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAdultPool() const;
    void setAdultPool(const bool &adult_pool);
    bool is_adult_pool_Set() const;
    bool is_adult_pool_Valid() const;

    QString getAdultPoolException() const;
    void setAdultPoolException(const QString &adult_pool_exception);
    bool is_adult_pool_exception_Set() const;
    bool is_adult_pool_exception_Valid() const;

    bool isHotTub() const;
    void setHotTub(const bool &hot_tub);
    bool is_hot_tub_Set() const;
    bool is_hot_tub_Valid() const;

    QString getHotTubException() const;
    void setHotTubException(const QString &hot_tub_exception);
    bool is_hot_tub_exception_Set() const;
    bool is_hot_tub_exception_Valid() const;

    bool isIndoorPool() const;
    void setIndoorPool(const bool &indoor_pool);
    bool is_indoor_pool_Set() const;
    bool is_indoor_pool_Valid() const;

    QString getIndoorPoolException() const;
    void setIndoorPoolException(const QString &indoor_pool_exception);
    bool is_indoor_pool_exception_Set() const;
    bool is_indoor_pool_exception_Valid() const;

    qint32 getIndoorPoolsCount() const;
    void setIndoorPoolsCount(const qint32 &indoor_pools_count);
    bool is_indoor_pools_count_Set() const;
    bool is_indoor_pools_count_Valid() const;

    QString getIndoorPoolsCountException() const;
    void setIndoorPoolsCountException(const QString &indoor_pools_count_exception);
    bool is_indoor_pools_count_exception_Set() const;
    bool is_indoor_pools_count_exception_Valid() const;

    bool isLazyRiver() const;
    void setLazyRiver(const bool &lazy_river);
    bool is_lazy_river_Set() const;
    bool is_lazy_river_Valid() const;

    QString getLazyRiverException() const;
    void setLazyRiverException(const QString &lazy_river_exception);
    bool is_lazy_river_exception_Set() const;
    bool is_lazy_river_exception_Valid() const;

    bool isLifeguard() const;
    void setLifeguard(const bool &lifeguard);
    bool is_lifeguard_Set() const;
    bool is_lifeguard_Valid() const;

    QString getLifeguardException() const;
    void setLifeguardException(const QString &lifeguard_exception);
    bool is_lifeguard_exception_Set() const;
    bool is_lifeguard_exception_Valid() const;

    bool isOutdoorPool() const;
    void setOutdoorPool(const bool &outdoor_pool);
    bool is_outdoor_pool_Set() const;
    bool is_outdoor_pool_Valid() const;

    QString getOutdoorPoolException() const;
    void setOutdoorPoolException(const QString &outdoor_pool_exception);
    bool is_outdoor_pool_exception_Set() const;
    bool is_outdoor_pool_exception_Valid() const;

    qint32 getOutdoorPoolsCount() const;
    void setOutdoorPoolsCount(const qint32 &outdoor_pools_count);
    bool is_outdoor_pools_count_Set() const;
    bool is_outdoor_pools_count_Valid() const;

    QString getOutdoorPoolsCountException() const;
    void setOutdoorPoolsCountException(const QString &outdoor_pools_count_exception);
    bool is_outdoor_pools_count_exception_Set() const;
    bool is_outdoor_pools_count_exception_Valid() const;

    bool isPool() const;
    void setPool(const bool &pool);
    bool is_pool_Set() const;
    bool is_pool_Valid() const;

    QString getPoolException() const;
    void setPoolException(const QString &pool_exception);
    bool is_pool_exception_Set() const;
    bool is_pool_exception_Valid() const;

    qint32 getPoolsCount() const;
    void setPoolsCount(const qint32 &pools_count);
    bool is_pools_count_Set() const;
    bool is_pools_count_Valid() const;

    QString getPoolsCountException() const;
    void setPoolsCountException(const QString &pools_count_exception);
    bool is_pools_count_exception_Set() const;
    bool is_pools_count_exception_Valid() const;

    bool isWadingPool() const;
    void setWadingPool(const bool &wading_pool);
    bool is_wading_pool_Set() const;
    bool is_wading_pool_Valid() const;

    QString getWadingPoolException() const;
    void setWadingPoolException(const QString &wading_pool_exception);
    bool is_wading_pool_exception_Set() const;
    bool is_wading_pool_exception_Valid() const;

    bool isWaterPark() const;
    void setWaterPark(const bool &water_park);
    bool is_water_park_Set() const;
    bool is_water_park_Valid() const;

    QString getWaterParkException() const;
    void setWaterParkException(const QString &water_park_exception);
    bool is_water_park_exception_Set() const;
    bool is_water_park_exception_Valid() const;

    bool isWaterslide() const;
    void setWaterslide(const bool &waterslide);
    bool is_waterslide_Set() const;
    bool is_waterslide_Valid() const;

    QString getWaterslideException() const;
    void setWaterslideException(const QString &waterslide_exception);
    bool is_waterslide_exception_Set() const;
    bool is_waterslide_exception_Valid() const;

    bool isWavePool() const;
    void setWavePool(const bool &wave_pool);
    bool is_wave_pool_Set() const;
    bool is_wave_pool_Valid() const;

    QString getWavePoolException() const;
    void setWavePoolException(const QString &wave_pool_exception);
    bool is_wave_pool_exception_Set() const;
    bool is_wave_pool_exception_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_adult_pool;
    bool m_adult_pool_isSet;
    bool m_adult_pool_isValid;

    QString m_adult_pool_exception;
    bool m_adult_pool_exception_isSet;
    bool m_adult_pool_exception_isValid;

    bool m_hot_tub;
    bool m_hot_tub_isSet;
    bool m_hot_tub_isValid;

    QString m_hot_tub_exception;
    bool m_hot_tub_exception_isSet;
    bool m_hot_tub_exception_isValid;

    bool m_indoor_pool;
    bool m_indoor_pool_isSet;
    bool m_indoor_pool_isValid;

    QString m_indoor_pool_exception;
    bool m_indoor_pool_exception_isSet;
    bool m_indoor_pool_exception_isValid;

    qint32 m_indoor_pools_count;
    bool m_indoor_pools_count_isSet;
    bool m_indoor_pools_count_isValid;

    QString m_indoor_pools_count_exception;
    bool m_indoor_pools_count_exception_isSet;
    bool m_indoor_pools_count_exception_isValid;

    bool m_lazy_river;
    bool m_lazy_river_isSet;
    bool m_lazy_river_isValid;

    QString m_lazy_river_exception;
    bool m_lazy_river_exception_isSet;
    bool m_lazy_river_exception_isValid;

    bool m_lifeguard;
    bool m_lifeguard_isSet;
    bool m_lifeguard_isValid;

    QString m_lifeguard_exception;
    bool m_lifeguard_exception_isSet;
    bool m_lifeguard_exception_isValid;

    bool m_outdoor_pool;
    bool m_outdoor_pool_isSet;
    bool m_outdoor_pool_isValid;

    QString m_outdoor_pool_exception;
    bool m_outdoor_pool_exception_isSet;
    bool m_outdoor_pool_exception_isValid;

    qint32 m_outdoor_pools_count;
    bool m_outdoor_pools_count_isSet;
    bool m_outdoor_pools_count_isValid;

    QString m_outdoor_pools_count_exception;
    bool m_outdoor_pools_count_exception_isSet;
    bool m_outdoor_pools_count_exception_isValid;

    bool m_pool;
    bool m_pool_isSet;
    bool m_pool_isValid;

    QString m_pool_exception;
    bool m_pool_exception_isSet;
    bool m_pool_exception_isValid;

    qint32 m_pools_count;
    bool m_pools_count_isSet;
    bool m_pools_count_isValid;

    QString m_pools_count_exception;
    bool m_pools_count_exception_isSet;
    bool m_pools_count_exception_isValid;

    bool m_wading_pool;
    bool m_wading_pool_isSet;
    bool m_wading_pool_isValid;

    QString m_wading_pool_exception;
    bool m_wading_pool_exception_isSet;
    bool m_wading_pool_exception_isValid;

    bool m_water_park;
    bool m_water_park_isSet;
    bool m_water_park_isValid;

    QString m_water_park_exception;
    bool m_water_park_exception_isSet;
    bool m_water_park_exception_isValid;

    bool m_waterslide;
    bool m_waterslide_isSet;
    bool m_waterslide_isValid;

    QString m_waterslide_exception;
    bool m_waterslide_exception_isSet;
    bool m_waterslide_exception_isValid;

    bool m_wave_pool;
    bool m_wave_pool_isSet;
    bool m_wave_pool_isValid;

    QString m_wave_pool_exception;
    bool m_wave_pool_exception_isSet;
    bool m_wave_pool_exception_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPools)

#endif // OAIPools_H
