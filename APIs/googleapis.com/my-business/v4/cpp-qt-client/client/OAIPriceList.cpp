/**
 * Google My Business API
 * The Google My Business API provides an interface for managing business location information on Google.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPriceList.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPriceList::OAIPriceList(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPriceList::OAIPriceList() {
    this->initializeModel();
}

OAIPriceList::~OAIPriceList() {}

void OAIPriceList::initializeModel() {

    m_labels_isSet = false;
    m_labels_isValid = false;

    m_price_list_id_isSet = false;
    m_price_list_id_isValid = false;

    m_sections_isSet = false;
    m_sections_isValid = false;

    m_source_url_isSet = false;
    m_source_url_isValid = false;
}

void OAIPriceList::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPriceList::fromJsonObject(QJsonObject json) {

    m_labels_isValid = ::OpenAPI::fromJsonValue(m_labels, json[QString("labels")]);
    m_labels_isSet = !json[QString("labels")].isNull() && m_labels_isValid;

    m_price_list_id_isValid = ::OpenAPI::fromJsonValue(m_price_list_id, json[QString("priceListId")]);
    m_price_list_id_isSet = !json[QString("priceListId")].isNull() && m_price_list_id_isValid;

    m_sections_isValid = ::OpenAPI::fromJsonValue(m_sections, json[QString("sections")]);
    m_sections_isSet = !json[QString("sections")].isNull() && m_sections_isValid;

    m_source_url_isValid = ::OpenAPI::fromJsonValue(m_source_url, json[QString("sourceUrl")]);
    m_source_url_isSet = !json[QString("sourceUrl")].isNull() && m_source_url_isValid;
}

QString OAIPriceList::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPriceList::asJsonObject() const {
    QJsonObject obj;
    if (m_labels.size() > 0) {
        obj.insert(QString("labels"), ::OpenAPI::toJsonValue(m_labels));
    }
    if (m_price_list_id_isSet) {
        obj.insert(QString("priceListId"), ::OpenAPI::toJsonValue(m_price_list_id));
    }
    if (m_sections.size() > 0) {
        obj.insert(QString("sections"), ::OpenAPI::toJsonValue(m_sections));
    }
    if (m_source_url_isSet) {
        obj.insert(QString("sourceUrl"), ::OpenAPI::toJsonValue(m_source_url));
    }
    return obj;
}

QList<OAILabel> OAIPriceList::getLabels() const {
    return m_labels;
}
void OAIPriceList::setLabels(const QList<OAILabel> &labels) {
    m_labels = labels;
    m_labels_isSet = true;
}

bool OAIPriceList::is_labels_Set() const{
    return m_labels_isSet;
}

bool OAIPriceList::is_labels_Valid() const{
    return m_labels_isValid;
}

QString OAIPriceList::getPriceListId() const {
    return m_price_list_id;
}
void OAIPriceList::setPriceListId(const QString &price_list_id) {
    m_price_list_id = price_list_id;
    m_price_list_id_isSet = true;
}

bool OAIPriceList::is_price_list_id_Set() const{
    return m_price_list_id_isSet;
}

bool OAIPriceList::is_price_list_id_Valid() const{
    return m_price_list_id_isValid;
}

QList<OAISection> OAIPriceList::getSections() const {
    return m_sections;
}
void OAIPriceList::setSections(const QList<OAISection> &sections) {
    m_sections = sections;
    m_sections_isSet = true;
}

bool OAIPriceList::is_sections_Set() const{
    return m_sections_isSet;
}

bool OAIPriceList::is_sections_Valid() const{
    return m_sections_isValid;
}

QString OAIPriceList::getSourceUrl() const {
    return m_source_url;
}
void OAIPriceList::setSourceUrl(const QString &source_url) {
    m_source_url = source_url;
    m_source_url_isSet = true;
}

bool OAIPriceList::is_source_url_Set() const{
    return m_source_url_isSet;
}

bool OAIPriceList::is_source_url_Valid() const{
    return m_source_url_isValid;
}

bool OAIPriceList::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_labels.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_price_list_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sections.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPriceList::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
