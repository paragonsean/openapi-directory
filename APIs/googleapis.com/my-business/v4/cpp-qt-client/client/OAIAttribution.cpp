/**
 * Google My Business API
 * The Google My Business API provides an interface for managing business location information on Google.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAttribution.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAttribution::OAIAttribution(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAttribution::OAIAttribution() {
    this->initializeModel();
}

OAIAttribution::~OAIAttribution() {}

void OAIAttribution::initializeModel() {

    m_profile_name_isSet = false;
    m_profile_name_isValid = false;

    m_profile_photo_url_isSet = false;
    m_profile_photo_url_isValid = false;

    m_profile_url_isSet = false;
    m_profile_url_isValid = false;

    m_takedown_url_isSet = false;
    m_takedown_url_isValid = false;
}

void OAIAttribution::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAttribution::fromJsonObject(QJsonObject json) {

    m_profile_name_isValid = ::OpenAPI::fromJsonValue(m_profile_name, json[QString("profileName")]);
    m_profile_name_isSet = !json[QString("profileName")].isNull() && m_profile_name_isValid;

    m_profile_photo_url_isValid = ::OpenAPI::fromJsonValue(m_profile_photo_url, json[QString("profilePhotoUrl")]);
    m_profile_photo_url_isSet = !json[QString("profilePhotoUrl")].isNull() && m_profile_photo_url_isValid;

    m_profile_url_isValid = ::OpenAPI::fromJsonValue(m_profile_url, json[QString("profileUrl")]);
    m_profile_url_isSet = !json[QString("profileUrl")].isNull() && m_profile_url_isValid;

    m_takedown_url_isValid = ::OpenAPI::fromJsonValue(m_takedown_url, json[QString("takedownUrl")]);
    m_takedown_url_isSet = !json[QString("takedownUrl")].isNull() && m_takedown_url_isValid;
}

QString OAIAttribution::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAttribution::asJsonObject() const {
    QJsonObject obj;
    if (m_profile_name_isSet) {
        obj.insert(QString("profileName"), ::OpenAPI::toJsonValue(m_profile_name));
    }
    if (m_profile_photo_url_isSet) {
        obj.insert(QString("profilePhotoUrl"), ::OpenAPI::toJsonValue(m_profile_photo_url));
    }
    if (m_profile_url_isSet) {
        obj.insert(QString("profileUrl"), ::OpenAPI::toJsonValue(m_profile_url));
    }
    if (m_takedown_url_isSet) {
        obj.insert(QString("takedownUrl"), ::OpenAPI::toJsonValue(m_takedown_url));
    }
    return obj;
}

QString OAIAttribution::getProfileName() const {
    return m_profile_name;
}
void OAIAttribution::setProfileName(const QString &profile_name) {
    m_profile_name = profile_name;
    m_profile_name_isSet = true;
}

bool OAIAttribution::is_profile_name_Set() const{
    return m_profile_name_isSet;
}

bool OAIAttribution::is_profile_name_Valid() const{
    return m_profile_name_isValid;
}

QString OAIAttribution::getProfilePhotoUrl() const {
    return m_profile_photo_url;
}
void OAIAttribution::setProfilePhotoUrl(const QString &profile_photo_url) {
    m_profile_photo_url = profile_photo_url;
    m_profile_photo_url_isSet = true;
}

bool OAIAttribution::is_profile_photo_url_Set() const{
    return m_profile_photo_url_isSet;
}

bool OAIAttribution::is_profile_photo_url_Valid() const{
    return m_profile_photo_url_isValid;
}

QString OAIAttribution::getProfileUrl() const {
    return m_profile_url;
}
void OAIAttribution::setProfileUrl(const QString &profile_url) {
    m_profile_url = profile_url;
    m_profile_url_isSet = true;
}

bool OAIAttribution::is_profile_url_Set() const{
    return m_profile_url_isSet;
}

bool OAIAttribution::is_profile_url_Valid() const{
    return m_profile_url_isValid;
}

QString OAIAttribution::getTakedownUrl() const {
    return m_takedown_url;
}
void OAIAttribution::setTakedownUrl(const QString &takedown_url) {
    m_takedown_url = takedown_url;
    m_takedown_url_isSet = true;
}

bool OAIAttribution::is_takedown_url_Set() const{
    return m_takedown_url_isSet;
}

bool OAIAttribution::is_takedown_url_Valid() const{
    return m_takedown_url_isValid;
}

bool OAIAttribution::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_profile_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_profile_photo_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_profile_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_takedown_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAttribution::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
