/**
 * Google My Business API
 * The Google My Business API provides an interface for managing business location information on Google.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListReviewsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListReviewsResponse::OAIListReviewsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListReviewsResponse::OAIListReviewsResponse() {
    this->initializeModel();
}

OAIListReviewsResponse::~OAIListReviewsResponse() {}

void OAIListReviewsResponse::initializeModel() {

    m_average_rating_isSet = false;
    m_average_rating_isValid = false;

    m_next_page_token_isSet = false;
    m_next_page_token_isValid = false;

    m_reviews_isSet = false;
    m_reviews_isValid = false;

    m_total_review_count_isSet = false;
    m_total_review_count_isValid = false;
}

void OAIListReviewsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListReviewsResponse::fromJsonObject(QJsonObject json) {

    m_average_rating_isValid = ::OpenAPI::fromJsonValue(m_average_rating, json[QString("averageRating")]);
    m_average_rating_isSet = !json[QString("averageRating")].isNull() && m_average_rating_isValid;

    m_next_page_token_isValid = ::OpenAPI::fromJsonValue(m_next_page_token, json[QString("nextPageToken")]);
    m_next_page_token_isSet = !json[QString("nextPageToken")].isNull() && m_next_page_token_isValid;

    m_reviews_isValid = ::OpenAPI::fromJsonValue(m_reviews, json[QString("reviews")]);
    m_reviews_isSet = !json[QString("reviews")].isNull() && m_reviews_isValid;

    m_total_review_count_isValid = ::OpenAPI::fromJsonValue(m_total_review_count, json[QString("totalReviewCount")]);
    m_total_review_count_isSet = !json[QString("totalReviewCount")].isNull() && m_total_review_count_isValid;
}

QString OAIListReviewsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListReviewsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_average_rating_isSet) {
        obj.insert(QString("averageRating"), ::OpenAPI::toJsonValue(m_average_rating));
    }
    if (m_next_page_token_isSet) {
        obj.insert(QString("nextPageToken"), ::OpenAPI::toJsonValue(m_next_page_token));
    }
    if (m_reviews.size() > 0) {
        obj.insert(QString("reviews"), ::OpenAPI::toJsonValue(m_reviews));
    }
    if (m_total_review_count_isSet) {
        obj.insert(QString("totalReviewCount"), ::OpenAPI::toJsonValue(m_total_review_count));
    }
    return obj;
}

double OAIListReviewsResponse::getAverageRating() const {
    return m_average_rating;
}
void OAIListReviewsResponse::setAverageRating(const double &average_rating) {
    m_average_rating = average_rating;
    m_average_rating_isSet = true;
}

bool OAIListReviewsResponse::is_average_rating_Set() const{
    return m_average_rating_isSet;
}

bool OAIListReviewsResponse::is_average_rating_Valid() const{
    return m_average_rating_isValid;
}

QString OAIListReviewsResponse::getNextPageToken() const {
    return m_next_page_token;
}
void OAIListReviewsResponse::setNextPageToken(const QString &next_page_token) {
    m_next_page_token = next_page_token;
    m_next_page_token_isSet = true;
}

bool OAIListReviewsResponse::is_next_page_token_Set() const{
    return m_next_page_token_isSet;
}

bool OAIListReviewsResponse::is_next_page_token_Valid() const{
    return m_next_page_token_isValid;
}

QList<OAIReview> OAIListReviewsResponse::getReviews() const {
    return m_reviews;
}
void OAIListReviewsResponse::setReviews(const QList<OAIReview> &reviews) {
    m_reviews = reviews;
    m_reviews_isSet = true;
}

bool OAIListReviewsResponse::is_reviews_Set() const{
    return m_reviews_isSet;
}

bool OAIListReviewsResponse::is_reviews_Valid() const{
    return m_reviews_isValid;
}

qint32 OAIListReviewsResponse::getTotalReviewCount() const {
    return m_total_review_count;
}
void OAIListReviewsResponse::setTotalReviewCount(const qint32 &total_review_count) {
    m_total_review_count = total_review_count;
    m_total_review_count_isSet = true;
}

bool OAIListReviewsResponse::is_total_review_count_Set() const{
    return m_total_review_count_isSet;
}

bool OAIListReviewsResponse::is_total_review_count_Valid() const{
    return m_total_review_count_isValid;
}

bool OAIListReviewsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_average_rating_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_page_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reviews.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_review_count_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListReviewsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
