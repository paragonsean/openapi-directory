/**
 * Google My Business API
 * The Google My Business API provides an interface for managing business location information on Google.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPolicies.h
 *
 * Property rules that impact guests.
 */

#ifndef OAIPolicies_H
#define OAIPolicies_H

#include <QJsonObject>

#include "OAIPaymentOptions.h"
#include "OAITimeOfDay.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITimeOfDay;
class OAIPaymentOptions;

class OAIPolicies : public OAIObject {
public:
    OAIPolicies();
    OAIPolicies(QString json);
    ~OAIPolicies() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAllInclusiveAvailable() const;
    void setAllInclusiveAvailable(const bool &all_inclusive_available);
    bool is_all_inclusive_available_Set() const;
    bool is_all_inclusive_available_Valid() const;

    QString getAllInclusiveAvailableException() const;
    void setAllInclusiveAvailableException(const QString &all_inclusive_available_exception);
    bool is_all_inclusive_available_exception_Set() const;
    bool is_all_inclusive_available_exception_Valid() const;

    bool isAllInclusiveOnly() const;
    void setAllInclusiveOnly(const bool &all_inclusive_only);
    bool is_all_inclusive_only_Set() const;
    bool is_all_inclusive_only_Valid() const;

    QString getAllInclusiveOnlyException() const;
    void setAllInclusiveOnlyException(const QString &all_inclusive_only_exception);
    bool is_all_inclusive_only_exception_Set() const;
    bool is_all_inclusive_only_exception_Valid() const;

    OAITimeOfDay getCheckinTime() const;
    void setCheckinTime(const OAITimeOfDay &checkin_time);
    bool is_checkin_time_Set() const;
    bool is_checkin_time_Valid() const;

    QString getCheckinTimeException() const;
    void setCheckinTimeException(const QString &checkin_time_exception);
    bool is_checkin_time_exception_Set() const;
    bool is_checkin_time_exception_Valid() const;

    OAITimeOfDay getCheckoutTime() const;
    void setCheckoutTime(const OAITimeOfDay &checkout_time);
    bool is_checkout_time_Set() const;
    bool is_checkout_time_Valid() const;

    QString getCheckoutTimeException() const;
    void setCheckoutTimeException(const QString &checkout_time_exception);
    bool is_checkout_time_exception_Set() const;
    bool is_checkout_time_exception_Valid() const;

    bool isKidsStayFree() const;
    void setKidsStayFree(const bool &kids_stay_free);
    bool is_kids_stay_free_Set() const;
    bool is_kids_stay_free_Valid() const;

    QString getKidsStayFreeException() const;
    void setKidsStayFreeException(const QString &kids_stay_free_exception);
    bool is_kids_stay_free_exception_Set() const;
    bool is_kids_stay_free_exception_Valid() const;

    qint32 getMaxChildAge() const;
    void setMaxChildAge(const qint32 &max_child_age);
    bool is_max_child_age_Set() const;
    bool is_max_child_age_Valid() const;

    QString getMaxChildAgeException() const;
    void setMaxChildAgeException(const QString &max_child_age_exception);
    bool is_max_child_age_exception_Set() const;
    bool is_max_child_age_exception_Valid() const;

    qint32 getMaxKidsStayFreeCount() const;
    void setMaxKidsStayFreeCount(const qint32 &max_kids_stay_free_count);
    bool is_max_kids_stay_free_count_Set() const;
    bool is_max_kids_stay_free_count_Valid() const;

    QString getMaxKidsStayFreeCountException() const;
    void setMaxKidsStayFreeCountException(const QString &max_kids_stay_free_count_exception);
    bool is_max_kids_stay_free_count_exception_Set() const;
    bool is_max_kids_stay_free_count_exception_Valid() const;

    OAIPaymentOptions getPaymentOptions() const;
    void setPaymentOptions(const OAIPaymentOptions &payment_options);
    bool is_payment_options_Set() const;
    bool is_payment_options_Valid() const;

    bool isSmokeFreeProperty() const;
    void setSmokeFreeProperty(const bool &smoke_free_property);
    bool is_smoke_free_property_Set() const;
    bool is_smoke_free_property_Valid() const;

    QString getSmokeFreePropertyException() const;
    void setSmokeFreePropertyException(const QString &smoke_free_property_exception);
    bool is_smoke_free_property_exception_Set() const;
    bool is_smoke_free_property_exception_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_all_inclusive_available;
    bool m_all_inclusive_available_isSet;
    bool m_all_inclusive_available_isValid;

    QString m_all_inclusive_available_exception;
    bool m_all_inclusive_available_exception_isSet;
    bool m_all_inclusive_available_exception_isValid;

    bool m_all_inclusive_only;
    bool m_all_inclusive_only_isSet;
    bool m_all_inclusive_only_isValid;

    QString m_all_inclusive_only_exception;
    bool m_all_inclusive_only_exception_isSet;
    bool m_all_inclusive_only_exception_isValid;

    OAITimeOfDay m_checkin_time;
    bool m_checkin_time_isSet;
    bool m_checkin_time_isValid;

    QString m_checkin_time_exception;
    bool m_checkin_time_exception_isSet;
    bool m_checkin_time_exception_isValid;

    OAITimeOfDay m_checkout_time;
    bool m_checkout_time_isSet;
    bool m_checkout_time_isValid;

    QString m_checkout_time_exception;
    bool m_checkout_time_exception_isSet;
    bool m_checkout_time_exception_isValid;

    bool m_kids_stay_free;
    bool m_kids_stay_free_isSet;
    bool m_kids_stay_free_isValid;

    QString m_kids_stay_free_exception;
    bool m_kids_stay_free_exception_isSet;
    bool m_kids_stay_free_exception_isValid;

    qint32 m_max_child_age;
    bool m_max_child_age_isSet;
    bool m_max_child_age_isValid;

    QString m_max_child_age_exception;
    bool m_max_child_age_exception_isSet;
    bool m_max_child_age_exception_isValid;

    qint32 m_max_kids_stay_free_count;
    bool m_max_kids_stay_free_count_isSet;
    bool m_max_kids_stay_free_count_isValid;

    QString m_max_kids_stay_free_count_exception;
    bool m_max_kids_stay_free_count_exception_isSet;
    bool m_max_kids_stay_free_count_exception_isValid;

    OAIPaymentOptions m_payment_options;
    bool m_payment_options_isSet;
    bool m_payment_options_isValid;

    bool m_smoke_free_property;
    bool m_smoke_free_property_isSet;
    bool m_smoke_free_property_isValid;

    QString m_smoke_free_property_exception;
    bool m_smoke_free_property_exception_isSet;
    bool m_smoke_free_property_exception_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPolicies)

#endif // OAIPolicies_H
