/**
 * Google My Business API
 * The Google My Business API provides an interface for managing business location information on Google.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRegionCount.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRegionCount::OAIRegionCount(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRegionCount::OAIRegionCount() {
    this->initializeModel();
}

OAIRegionCount::~OAIRegionCount() {}

void OAIRegionCount::initializeModel() {

    m_count_isSet = false;
    m_count_isValid = false;

    m_label_isSet = false;
    m_label_isValid = false;

    m_latlng_isSet = false;
    m_latlng_isValid = false;
}

void OAIRegionCount::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRegionCount::fromJsonObject(QJsonObject json) {

    m_count_isValid = ::OpenAPI::fromJsonValue(m_count, json[QString("count")]);
    m_count_isSet = !json[QString("count")].isNull() && m_count_isValid;

    m_label_isValid = ::OpenAPI::fromJsonValue(m_label, json[QString("label")]);
    m_label_isSet = !json[QString("label")].isNull() && m_label_isValid;

    m_latlng_isValid = ::OpenAPI::fromJsonValue(m_latlng, json[QString("latlng")]);
    m_latlng_isSet = !json[QString("latlng")].isNull() && m_latlng_isValid;
}

QString OAIRegionCount::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRegionCount::asJsonObject() const {
    QJsonObject obj;
    if (m_count_isSet) {
        obj.insert(QString("count"), ::OpenAPI::toJsonValue(m_count));
    }
    if (m_label_isSet) {
        obj.insert(QString("label"), ::OpenAPI::toJsonValue(m_label));
    }
    if (m_latlng.isSet()) {
        obj.insert(QString("latlng"), ::OpenAPI::toJsonValue(m_latlng));
    }
    return obj;
}

QString OAIRegionCount::getCount() const {
    return m_count;
}
void OAIRegionCount::setCount(const QString &count) {
    m_count = count;
    m_count_isSet = true;
}

bool OAIRegionCount::is_count_Set() const{
    return m_count_isSet;
}

bool OAIRegionCount::is_count_Valid() const{
    return m_count_isValid;
}

QString OAIRegionCount::getLabel() const {
    return m_label;
}
void OAIRegionCount::setLabel(const QString &label) {
    m_label = label;
    m_label_isSet = true;
}

bool OAIRegionCount::is_label_Set() const{
    return m_label_isSet;
}

bool OAIRegionCount::is_label_Valid() const{
    return m_label_isValid;
}

OAILatLng OAIRegionCount::getLatlng() const {
    return m_latlng;
}
void OAIRegionCount::setLatlng(const OAILatLng &latlng) {
    m_latlng = latlng;
    m_latlng_isSet = true;
}

bool OAIRegionCount::is_latlng_Set() const{
    return m_latlng_isSet;
}

bool OAIRegionCount::is_latlng_Valid() const{
    return m_latlng_isValid;
}

bool OAIRegionCount::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_label_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_latlng.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRegionCount::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
