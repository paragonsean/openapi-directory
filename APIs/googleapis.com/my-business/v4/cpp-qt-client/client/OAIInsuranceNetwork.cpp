/**
 * Google My Business API
 * The Google My Business API provides an interface for managing business location information on Google.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInsuranceNetwork.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInsuranceNetwork::OAIInsuranceNetwork(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInsuranceNetwork::OAIInsuranceNetwork() {
    this->initializeModel();
}

OAIInsuranceNetwork::~OAIInsuranceNetwork() {}

void OAIInsuranceNetwork::initializeModel() {

    m_network_id_isSet = false;
    m_network_id_isValid = false;

    m_network_names_isSet = false;
    m_network_names_isValid = false;

    m_payer_names_isSet = false;
    m_payer_names_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;
}

void OAIInsuranceNetwork::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInsuranceNetwork::fromJsonObject(QJsonObject json) {

    m_network_id_isValid = ::OpenAPI::fromJsonValue(m_network_id, json[QString("networkId")]);
    m_network_id_isSet = !json[QString("networkId")].isNull() && m_network_id_isValid;

    m_network_names_isValid = ::OpenAPI::fromJsonValue(m_network_names, json[QString("networkNames")]);
    m_network_names_isSet = !json[QString("networkNames")].isNull() && m_network_names_isValid;

    m_payer_names_isValid = ::OpenAPI::fromJsonValue(m_payer_names, json[QString("payerNames")]);
    m_payer_names_isSet = !json[QString("payerNames")].isNull() && m_payer_names_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;
}

QString OAIInsuranceNetwork::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInsuranceNetwork::asJsonObject() const {
    QJsonObject obj;
    if (m_network_id_isSet) {
        obj.insert(QString("networkId"), ::OpenAPI::toJsonValue(m_network_id));
    }
    if (m_network_names.size() > 0) {
        obj.insert(QString("networkNames"), ::OpenAPI::toJsonValue(m_network_names));
    }
    if (m_payer_names.size() > 0) {
        obj.insert(QString("payerNames"), ::OpenAPI::toJsonValue(m_payer_names));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    return obj;
}

QString OAIInsuranceNetwork::getNetworkId() const {
    return m_network_id;
}
void OAIInsuranceNetwork::setNetworkId(const QString &network_id) {
    m_network_id = network_id;
    m_network_id_isSet = true;
}

bool OAIInsuranceNetwork::is_network_id_Set() const{
    return m_network_id_isSet;
}

bool OAIInsuranceNetwork::is_network_id_Valid() const{
    return m_network_id_isValid;
}

QMap<QString, QString> OAIInsuranceNetwork::getNetworkNames() const {
    return m_network_names;
}
void OAIInsuranceNetwork::setNetworkNames(const QMap<QString, QString> &network_names) {
    m_network_names = network_names;
    m_network_names_isSet = true;
}

bool OAIInsuranceNetwork::is_network_names_Set() const{
    return m_network_names_isSet;
}

bool OAIInsuranceNetwork::is_network_names_Valid() const{
    return m_network_names_isValid;
}

QMap<QString, QString> OAIInsuranceNetwork::getPayerNames() const {
    return m_payer_names;
}
void OAIInsuranceNetwork::setPayerNames(const QMap<QString, QString> &payer_names) {
    m_payer_names = payer_names;
    m_payer_names_isSet = true;
}

bool OAIInsuranceNetwork::is_payer_names_Set() const{
    return m_payer_names_isSet;
}

bool OAIInsuranceNetwork::is_payer_names_Valid() const{
    return m_payer_names_isValid;
}

QString OAIInsuranceNetwork::getState() const {
    return m_state;
}
void OAIInsuranceNetwork::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIInsuranceNetwork::is_state_Set() const{
    return m_state_isSet;
}

bool OAIInsuranceNetwork::is_state_Valid() const{
    return m_state_isValid;
}

bool OAIInsuranceNetwork::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_network_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_network_names.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_payer_names.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInsuranceNetwork::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
