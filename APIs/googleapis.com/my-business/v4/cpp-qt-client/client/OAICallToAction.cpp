/**
 * Google My Business API
 * The Google My Business API provides an interface for managing business location information on Google.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICallToAction.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICallToAction::OAICallToAction(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICallToAction::OAICallToAction() {
    this->initializeModel();
}

OAICallToAction::~OAICallToAction() {}

void OAICallToAction::initializeModel() {

    m_action_type_isSet = false;
    m_action_type_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;
}

void OAICallToAction::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICallToAction::fromJsonObject(QJsonObject json) {

    m_action_type_isValid = ::OpenAPI::fromJsonValue(m_action_type, json[QString("actionType")]);
    m_action_type_isSet = !json[QString("actionType")].isNull() && m_action_type_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;
}

QString OAICallToAction::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICallToAction::asJsonObject() const {
    QJsonObject obj;
    if (m_action_type_isSet) {
        obj.insert(QString("actionType"), ::OpenAPI::toJsonValue(m_action_type));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    return obj;
}

QString OAICallToAction::getActionType() const {
    return m_action_type;
}
void OAICallToAction::setActionType(const QString &action_type) {
    m_action_type = action_type;
    m_action_type_isSet = true;
}

bool OAICallToAction::is_action_type_Set() const{
    return m_action_type_isSet;
}

bool OAICallToAction::is_action_type_Valid() const{
    return m_action_type_isValid;
}

QString OAICallToAction::getUrl() const {
    return m_url;
}
void OAICallToAction::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAICallToAction::is_url_Set() const{
    return m_url_isSet;
}

bool OAICallToAction::is_url_Valid() const{
    return m_url_isValid;
}

bool OAICallToAction::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_action_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICallToAction::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
