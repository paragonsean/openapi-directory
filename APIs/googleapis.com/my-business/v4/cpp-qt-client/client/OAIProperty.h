/**
 * Google My Business API
 * The Google My Business API provides an interface for managing business location information on Google.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIProperty.h
 *
 * General factual information about the property&#39;s physical structure and important dates.
 */

#ifndef OAIProperty_H
#define OAIProperty_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIProperty : public OAIObject {
public:
    OAIProperty();
    OAIProperty(QString json);
    ~OAIProperty() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getBuiltYear() const;
    void setBuiltYear(const qint32 &built_year);
    bool is_built_year_Set() const;
    bool is_built_year_Valid() const;

    QString getBuiltYearException() const;
    void setBuiltYearException(const QString &built_year_exception);
    bool is_built_year_exception_Set() const;
    bool is_built_year_exception_Valid() const;

    qint32 getFloorsCount() const;
    void setFloorsCount(const qint32 &floors_count);
    bool is_floors_count_Set() const;
    bool is_floors_count_Valid() const;

    QString getFloorsCountException() const;
    void setFloorsCountException(const QString &floors_count_exception);
    bool is_floors_count_exception_Set() const;
    bool is_floors_count_exception_Valid() const;

    qint32 getLastRenovatedYear() const;
    void setLastRenovatedYear(const qint32 &last_renovated_year);
    bool is_last_renovated_year_Set() const;
    bool is_last_renovated_year_Valid() const;

    QString getLastRenovatedYearException() const;
    void setLastRenovatedYearException(const QString &last_renovated_year_exception);
    bool is_last_renovated_year_exception_Set() const;
    bool is_last_renovated_year_exception_Valid() const;

    qint32 getRoomsCount() const;
    void setRoomsCount(const qint32 &rooms_count);
    bool is_rooms_count_Set() const;
    bool is_rooms_count_Valid() const;

    QString getRoomsCountException() const;
    void setRoomsCountException(const QString &rooms_count_exception);
    bool is_rooms_count_exception_Set() const;
    bool is_rooms_count_exception_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_built_year;
    bool m_built_year_isSet;
    bool m_built_year_isValid;

    QString m_built_year_exception;
    bool m_built_year_exception_isSet;
    bool m_built_year_exception_isValid;

    qint32 m_floors_count;
    bool m_floors_count_isSet;
    bool m_floors_count_isValid;

    QString m_floors_count_exception;
    bool m_floors_count_exception_isSet;
    bool m_floors_count_exception_isValid;

    qint32 m_last_renovated_year;
    bool m_last_renovated_year_isSet;
    bool m_last_renovated_year_isValid;

    QString m_last_renovated_year_exception;
    bool m_last_renovated_year_exception_isSet;
    bool m_last_renovated_year_exception_isValid;

    qint32 m_rooms_count;
    bool m_rooms_count_isSet;
    bool m_rooms_count_isValid;

    QString m_rooms_count_exception;
    bool m_rooms_count_exception_isSet;
    bool m_rooms_count_exception_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIProperty)

#endif // OAIProperty_H
