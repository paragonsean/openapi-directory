/**
 * Google My Business API
 * The Google My Business API provides an interface for managing business location information on Google.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITimeInterval.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITimeInterval::OAITimeInterval(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITimeInterval::OAITimeInterval() {
    this->initializeModel();
}

OAITimeInterval::~OAITimeInterval() {}

void OAITimeInterval::initializeModel() {

    m_end_date_isSet = false;
    m_end_date_isValid = false;

    m_end_time_isSet = false;
    m_end_time_isValid = false;

    m_start_date_isSet = false;
    m_start_date_isValid = false;

    m_start_time_isSet = false;
    m_start_time_isValid = false;
}

void OAITimeInterval::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITimeInterval::fromJsonObject(QJsonObject json) {

    m_end_date_isValid = ::OpenAPI::fromJsonValue(m_end_date, json[QString("endDate")]);
    m_end_date_isSet = !json[QString("endDate")].isNull() && m_end_date_isValid;

    m_end_time_isValid = ::OpenAPI::fromJsonValue(m_end_time, json[QString("endTime")]);
    m_end_time_isSet = !json[QString("endTime")].isNull() && m_end_time_isValid;

    m_start_date_isValid = ::OpenAPI::fromJsonValue(m_start_date, json[QString("startDate")]);
    m_start_date_isSet = !json[QString("startDate")].isNull() && m_start_date_isValid;

    m_start_time_isValid = ::OpenAPI::fromJsonValue(m_start_time, json[QString("startTime")]);
    m_start_time_isSet = !json[QString("startTime")].isNull() && m_start_time_isValid;
}

QString OAITimeInterval::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITimeInterval::asJsonObject() const {
    QJsonObject obj;
    if (m_end_date.isSet()) {
        obj.insert(QString("endDate"), ::OpenAPI::toJsonValue(m_end_date));
    }
    if (m_end_time.isSet()) {
        obj.insert(QString("endTime"), ::OpenAPI::toJsonValue(m_end_time));
    }
    if (m_start_date.isSet()) {
        obj.insert(QString("startDate"), ::OpenAPI::toJsonValue(m_start_date));
    }
    if (m_start_time.isSet()) {
        obj.insert(QString("startTime"), ::OpenAPI::toJsonValue(m_start_time));
    }
    return obj;
}

OAIDate OAITimeInterval::getEndDate() const {
    return m_end_date;
}
void OAITimeInterval::setEndDate(const OAIDate &end_date) {
    m_end_date = end_date;
    m_end_date_isSet = true;
}

bool OAITimeInterval::is_end_date_Set() const{
    return m_end_date_isSet;
}

bool OAITimeInterval::is_end_date_Valid() const{
    return m_end_date_isValid;
}

OAITimeOfDay OAITimeInterval::getEndTime() const {
    return m_end_time;
}
void OAITimeInterval::setEndTime(const OAITimeOfDay &end_time) {
    m_end_time = end_time;
    m_end_time_isSet = true;
}

bool OAITimeInterval::is_end_time_Set() const{
    return m_end_time_isSet;
}

bool OAITimeInterval::is_end_time_Valid() const{
    return m_end_time_isValid;
}

OAIDate OAITimeInterval::getStartDate() const {
    return m_start_date;
}
void OAITimeInterval::setStartDate(const OAIDate &start_date) {
    m_start_date = start_date;
    m_start_date_isSet = true;
}

bool OAITimeInterval::is_start_date_Set() const{
    return m_start_date_isSet;
}

bool OAITimeInterval::is_start_date_Valid() const{
    return m_start_date_isValid;
}

OAITimeOfDay OAITimeInterval::getStartTime() const {
    return m_start_time;
}
void OAITimeInterval::setStartTime(const OAITimeOfDay &start_time) {
    m_start_time = start_time;
    m_start_time_isSet = true;
}

bool OAITimeInterval::is_start_time_Set() const{
    return m_start_time_isSet;
}

bool OAITimeInterval::is_start_time_Valid() const{
    return m_start_time_isValid;
}

bool OAITimeInterval::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_end_date.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_time.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_date.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_time.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITimeInterval::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
