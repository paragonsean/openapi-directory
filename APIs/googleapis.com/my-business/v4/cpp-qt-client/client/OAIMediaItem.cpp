/**
 * Google My Business API
 * The Google My Business API provides an interface for managing business location information on Google.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMediaItem.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMediaItem::OAIMediaItem(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMediaItem::OAIMediaItem() {
    this->initializeModel();
}

OAIMediaItem::~OAIMediaItem() {}

void OAIMediaItem::initializeModel() {

    m_attribution_isSet = false;
    m_attribution_isValid = false;

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_data_ref_isSet = false;
    m_data_ref_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_dimensions_isSet = false;
    m_dimensions_isValid = false;

    m_google_url_isSet = false;
    m_google_url_isValid = false;

    m_insights_isSet = false;
    m_insights_isValid = false;

    m_location_association_isSet = false;
    m_location_association_isValid = false;

    m_media_format_isSet = false;
    m_media_format_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_source_url_isSet = false;
    m_source_url_isValid = false;

    m_thumbnail_url_isSet = false;
    m_thumbnail_url_isValid = false;
}

void OAIMediaItem::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMediaItem::fromJsonObject(QJsonObject json) {

    m_attribution_isValid = ::OpenAPI::fromJsonValue(m_attribution, json[QString("attribution")]);
    m_attribution_isSet = !json[QString("attribution")].isNull() && m_attribution_isValid;

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_data_ref_isValid = ::OpenAPI::fromJsonValue(m_data_ref, json[QString("dataRef")]);
    m_data_ref_isSet = !json[QString("dataRef")].isNull() && m_data_ref_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_dimensions_isValid = ::OpenAPI::fromJsonValue(m_dimensions, json[QString("dimensions")]);
    m_dimensions_isSet = !json[QString("dimensions")].isNull() && m_dimensions_isValid;

    m_google_url_isValid = ::OpenAPI::fromJsonValue(m_google_url, json[QString("googleUrl")]);
    m_google_url_isSet = !json[QString("googleUrl")].isNull() && m_google_url_isValid;

    m_insights_isValid = ::OpenAPI::fromJsonValue(m_insights, json[QString("insights")]);
    m_insights_isSet = !json[QString("insights")].isNull() && m_insights_isValid;

    m_location_association_isValid = ::OpenAPI::fromJsonValue(m_location_association, json[QString("locationAssociation")]);
    m_location_association_isSet = !json[QString("locationAssociation")].isNull() && m_location_association_isValid;

    m_media_format_isValid = ::OpenAPI::fromJsonValue(m_media_format, json[QString("mediaFormat")]);
    m_media_format_isSet = !json[QString("mediaFormat")].isNull() && m_media_format_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_source_url_isValid = ::OpenAPI::fromJsonValue(m_source_url, json[QString("sourceUrl")]);
    m_source_url_isSet = !json[QString("sourceUrl")].isNull() && m_source_url_isValid;

    m_thumbnail_url_isValid = ::OpenAPI::fromJsonValue(m_thumbnail_url, json[QString("thumbnailUrl")]);
    m_thumbnail_url_isSet = !json[QString("thumbnailUrl")].isNull() && m_thumbnail_url_isValid;
}

QString OAIMediaItem::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMediaItem::asJsonObject() const {
    QJsonObject obj;
    if (m_attribution.isSet()) {
        obj.insert(QString("attribution"), ::OpenAPI::toJsonValue(m_attribution));
    }
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_data_ref.isSet()) {
        obj.insert(QString("dataRef"), ::OpenAPI::toJsonValue(m_data_ref));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_dimensions.isSet()) {
        obj.insert(QString("dimensions"), ::OpenAPI::toJsonValue(m_dimensions));
    }
    if (m_google_url_isSet) {
        obj.insert(QString("googleUrl"), ::OpenAPI::toJsonValue(m_google_url));
    }
    if (m_insights.isSet()) {
        obj.insert(QString("insights"), ::OpenAPI::toJsonValue(m_insights));
    }
    if (m_location_association.isSet()) {
        obj.insert(QString("locationAssociation"), ::OpenAPI::toJsonValue(m_location_association));
    }
    if (m_media_format_isSet) {
        obj.insert(QString("mediaFormat"), ::OpenAPI::toJsonValue(m_media_format));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_source_url_isSet) {
        obj.insert(QString("sourceUrl"), ::OpenAPI::toJsonValue(m_source_url));
    }
    if (m_thumbnail_url_isSet) {
        obj.insert(QString("thumbnailUrl"), ::OpenAPI::toJsonValue(m_thumbnail_url));
    }
    return obj;
}

OAIAttribution OAIMediaItem::getAttribution() const {
    return m_attribution;
}
void OAIMediaItem::setAttribution(const OAIAttribution &attribution) {
    m_attribution = attribution;
    m_attribution_isSet = true;
}

bool OAIMediaItem::is_attribution_Set() const{
    return m_attribution_isSet;
}

bool OAIMediaItem::is_attribution_Valid() const{
    return m_attribution_isValid;
}

QString OAIMediaItem::getCreateTime() const {
    return m_create_time;
}
void OAIMediaItem::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIMediaItem::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIMediaItem::is_create_time_Valid() const{
    return m_create_time_isValid;
}

OAIMediaItemDataRef OAIMediaItem::getDataRef() const {
    return m_data_ref;
}
void OAIMediaItem::setDataRef(const OAIMediaItemDataRef &data_ref) {
    m_data_ref = data_ref;
    m_data_ref_isSet = true;
}

bool OAIMediaItem::is_data_ref_Set() const{
    return m_data_ref_isSet;
}

bool OAIMediaItem::is_data_ref_Valid() const{
    return m_data_ref_isValid;
}

QString OAIMediaItem::getDescription() const {
    return m_description;
}
void OAIMediaItem::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIMediaItem::is_description_Set() const{
    return m_description_isSet;
}

bool OAIMediaItem::is_description_Valid() const{
    return m_description_isValid;
}

OAIDimensions OAIMediaItem::getDimensions() const {
    return m_dimensions;
}
void OAIMediaItem::setDimensions(const OAIDimensions &dimensions) {
    m_dimensions = dimensions;
    m_dimensions_isSet = true;
}

bool OAIMediaItem::is_dimensions_Set() const{
    return m_dimensions_isSet;
}

bool OAIMediaItem::is_dimensions_Valid() const{
    return m_dimensions_isValid;
}

QString OAIMediaItem::getGoogleUrl() const {
    return m_google_url;
}
void OAIMediaItem::setGoogleUrl(const QString &google_url) {
    m_google_url = google_url;
    m_google_url_isSet = true;
}

bool OAIMediaItem::is_google_url_Set() const{
    return m_google_url_isSet;
}

bool OAIMediaItem::is_google_url_Valid() const{
    return m_google_url_isValid;
}

OAIMediaInsights OAIMediaItem::getInsights() const {
    return m_insights;
}
void OAIMediaItem::setInsights(const OAIMediaInsights &insights) {
    m_insights = insights;
    m_insights_isSet = true;
}

bool OAIMediaItem::is_insights_Set() const{
    return m_insights_isSet;
}

bool OAIMediaItem::is_insights_Valid() const{
    return m_insights_isValid;
}

OAILocationAssociation OAIMediaItem::getLocationAssociation() const {
    return m_location_association;
}
void OAIMediaItem::setLocationAssociation(const OAILocationAssociation &location_association) {
    m_location_association = location_association;
    m_location_association_isSet = true;
}

bool OAIMediaItem::is_location_association_Set() const{
    return m_location_association_isSet;
}

bool OAIMediaItem::is_location_association_Valid() const{
    return m_location_association_isValid;
}

QString OAIMediaItem::getMediaFormat() const {
    return m_media_format;
}
void OAIMediaItem::setMediaFormat(const QString &media_format) {
    m_media_format = media_format;
    m_media_format_isSet = true;
}

bool OAIMediaItem::is_media_format_Set() const{
    return m_media_format_isSet;
}

bool OAIMediaItem::is_media_format_Valid() const{
    return m_media_format_isValid;
}

QString OAIMediaItem::getName() const {
    return m_name;
}
void OAIMediaItem::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIMediaItem::is_name_Set() const{
    return m_name_isSet;
}

bool OAIMediaItem::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIMediaItem::getSourceUrl() const {
    return m_source_url;
}
void OAIMediaItem::setSourceUrl(const QString &source_url) {
    m_source_url = source_url;
    m_source_url_isSet = true;
}

bool OAIMediaItem::is_source_url_Set() const{
    return m_source_url_isSet;
}

bool OAIMediaItem::is_source_url_Valid() const{
    return m_source_url_isValid;
}

QString OAIMediaItem::getThumbnailUrl() const {
    return m_thumbnail_url;
}
void OAIMediaItem::setThumbnailUrl(const QString &thumbnail_url) {
    m_thumbnail_url = thumbnail_url;
    m_thumbnail_url_isSet = true;
}

bool OAIMediaItem::is_thumbnail_url_Set() const{
    return m_thumbnail_url_isSet;
}

bool OAIMediaItem::is_thumbnail_url_Valid() const{
    return m_thumbnail_url_isValid;
}

bool OAIMediaItem::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_attribution.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_data_ref.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dimensions.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_google_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_insights.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_location_association.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_media_format_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_thumbnail_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMediaItem::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
