/**
 * Google My Business API
 * The Google My Business API provides an interface for managing business location information on Google.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDrivingDirectionMetricsRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDrivingDirectionMetricsRequest::OAIDrivingDirectionMetricsRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDrivingDirectionMetricsRequest::OAIDrivingDirectionMetricsRequest() {
    this->initializeModel();
}

OAIDrivingDirectionMetricsRequest::~OAIDrivingDirectionMetricsRequest() {}

void OAIDrivingDirectionMetricsRequest::initializeModel() {

    m_language_code_isSet = false;
    m_language_code_isValid = false;

    m_num_days_isSet = false;
    m_num_days_isValid = false;
}

void OAIDrivingDirectionMetricsRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDrivingDirectionMetricsRequest::fromJsonObject(QJsonObject json) {

    m_language_code_isValid = ::OpenAPI::fromJsonValue(m_language_code, json[QString("languageCode")]);
    m_language_code_isSet = !json[QString("languageCode")].isNull() && m_language_code_isValid;

    m_num_days_isValid = ::OpenAPI::fromJsonValue(m_num_days, json[QString("numDays")]);
    m_num_days_isSet = !json[QString("numDays")].isNull() && m_num_days_isValid;
}

QString OAIDrivingDirectionMetricsRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDrivingDirectionMetricsRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_language_code_isSet) {
        obj.insert(QString("languageCode"), ::OpenAPI::toJsonValue(m_language_code));
    }
    if (m_num_days_isSet) {
        obj.insert(QString("numDays"), ::OpenAPI::toJsonValue(m_num_days));
    }
    return obj;
}

QString OAIDrivingDirectionMetricsRequest::getLanguageCode() const {
    return m_language_code;
}
void OAIDrivingDirectionMetricsRequest::setLanguageCode(const QString &language_code) {
    m_language_code = language_code;
    m_language_code_isSet = true;
}

bool OAIDrivingDirectionMetricsRequest::is_language_code_Set() const{
    return m_language_code_isSet;
}

bool OAIDrivingDirectionMetricsRequest::is_language_code_Valid() const{
    return m_language_code_isValid;
}

QString OAIDrivingDirectionMetricsRequest::getNumDays() const {
    return m_num_days;
}
void OAIDrivingDirectionMetricsRequest::setNumDays(const QString &num_days) {
    m_num_days = num_days;
    m_num_days_isSet = true;
}

bool OAIDrivingDirectionMetricsRequest::is_num_days_Set() const{
    return m_num_days_isSet;
}

bool OAIDrivingDirectionMetricsRequest::is_num_days_Valid() const{
    return m_num_days_isValid;
}

bool OAIDrivingDirectionMetricsRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_language_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_num_days_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDrivingDirectionMetricsRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
