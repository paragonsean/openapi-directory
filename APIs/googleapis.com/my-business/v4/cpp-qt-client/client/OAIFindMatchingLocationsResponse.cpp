/**
 * Google My Business API
 * The Google My Business API provides an interface for managing business location information on Google.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFindMatchingLocationsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFindMatchingLocationsResponse::OAIFindMatchingLocationsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFindMatchingLocationsResponse::OAIFindMatchingLocationsResponse() {
    this->initializeModel();
}

OAIFindMatchingLocationsResponse::~OAIFindMatchingLocationsResponse() {}

void OAIFindMatchingLocationsResponse::initializeModel() {

    m_match_time_isSet = false;
    m_match_time_isValid = false;

    m_matched_locations_isSet = false;
    m_matched_locations_isValid = false;
}

void OAIFindMatchingLocationsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFindMatchingLocationsResponse::fromJsonObject(QJsonObject json) {

    m_match_time_isValid = ::OpenAPI::fromJsonValue(m_match_time, json[QString("matchTime")]);
    m_match_time_isSet = !json[QString("matchTime")].isNull() && m_match_time_isValid;

    m_matched_locations_isValid = ::OpenAPI::fromJsonValue(m_matched_locations, json[QString("matchedLocations")]);
    m_matched_locations_isSet = !json[QString("matchedLocations")].isNull() && m_matched_locations_isValid;
}

QString OAIFindMatchingLocationsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFindMatchingLocationsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_match_time_isSet) {
        obj.insert(QString("matchTime"), ::OpenAPI::toJsonValue(m_match_time));
    }
    if (m_matched_locations.size() > 0) {
        obj.insert(QString("matchedLocations"), ::OpenAPI::toJsonValue(m_matched_locations));
    }
    return obj;
}

QString OAIFindMatchingLocationsResponse::getMatchTime() const {
    return m_match_time;
}
void OAIFindMatchingLocationsResponse::setMatchTime(const QString &match_time) {
    m_match_time = match_time;
    m_match_time_isSet = true;
}

bool OAIFindMatchingLocationsResponse::is_match_time_Set() const{
    return m_match_time_isSet;
}

bool OAIFindMatchingLocationsResponse::is_match_time_Valid() const{
    return m_match_time_isValid;
}

QList<OAIMatchedLocation> OAIFindMatchingLocationsResponse::getMatchedLocations() const {
    return m_matched_locations;
}
void OAIFindMatchingLocationsResponse::setMatchedLocations(const QList<OAIMatchedLocation> &matched_locations) {
    m_matched_locations = matched_locations;
    m_matched_locations_isSet = true;
}

bool OAIFindMatchingLocationsResponse::is_matched_locations_Set() const{
    return m_matched_locations_isSet;
}

bool OAIFindMatchingLocationsResponse::is_matched_locations_Valid() const{
    return m_matched_locations_isValid;
}

bool OAIFindMatchingLocationsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_match_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_matched_locations.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFindMatchingLocationsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
