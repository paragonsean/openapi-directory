/**
 * Google My Business API
 * The Google My Business API provides an interface for managing business location information on Google.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIReview.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIReview::OAIReview(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIReview::OAIReview() {
    this->initializeModel();
}

OAIReview::~OAIReview() {}

void OAIReview::initializeModel() {

    m_comment_isSet = false;
    m_comment_isValid = false;

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_review_id_isSet = false;
    m_review_id_isValid = false;

    m_review_reply_isSet = false;
    m_review_reply_isValid = false;

    m_reviewer_isSet = false;
    m_reviewer_isValid = false;

    m_star_rating_isSet = false;
    m_star_rating_isValid = false;

    m_update_time_isSet = false;
    m_update_time_isValid = false;
}

void OAIReview::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIReview::fromJsonObject(QJsonObject json) {

    m_comment_isValid = ::OpenAPI::fromJsonValue(m_comment, json[QString("comment")]);
    m_comment_isSet = !json[QString("comment")].isNull() && m_comment_isValid;

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_review_id_isValid = ::OpenAPI::fromJsonValue(m_review_id, json[QString("reviewId")]);
    m_review_id_isSet = !json[QString("reviewId")].isNull() && m_review_id_isValid;

    m_review_reply_isValid = ::OpenAPI::fromJsonValue(m_review_reply, json[QString("reviewReply")]);
    m_review_reply_isSet = !json[QString("reviewReply")].isNull() && m_review_reply_isValid;

    m_reviewer_isValid = ::OpenAPI::fromJsonValue(m_reviewer, json[QString("reviewer")]);
    m_reviewer_isSet = !json[QString("reviewer")].isNull() && m_reviewer_isValid;

    m_star_rating_isValid = ::OpenAPI::fromJsonValue(m_star_rating, json[QString("starRating")]);
    m_star_rating_isSet = !json[QString("starRating")].isNull() && m_star_rating_isValid;

    m_update_time_isValid = ::OpenAPI::fromJsonValue(m_update_time, json[QString("updateTime")]);
    m_update_time_isSet = !json[QString("updateTime")].isNull() && m_update_time_isValid;
}

QString OAIReview::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIReview::asJsonObject() const {
    QJsonObject obj;
    if (m_comment_isSet) {
        obj.insert(QString("comment"), ::OpenAPI::toJsonValue(m_comment));
    }
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_review_id_isSet) {
        obj.insert(QString("reviewId"), ::OpenAPI::toJsonValue(m_review_id));
    }
    if (m_review_reply.isSet()) {
        obj.insert(QString("reviewReply"), ::OpenAPI::toJsonValue(m_review_reply));
    }
    if (m_reviewer.isSet()) {
        obj.insert(QString("reviewer"), ::OpenAPI::toJsonValue(m_reviewer));
    }
    if (m_star_rating_isSet) {
        obj.insert(QString("starRating"), ::OpenAPI::toJsonValue(m_star_rating));
    }
    if (m_update_time_isSet) {
        obj.insert(QString("updateTime"), ::OpenAPI::toJsonValue(m_update_time));
    }
    return obj;
}

QString OAIReview::getComment() const {
    return m_comment;
}
void OAIReview::setComment(const QString &comment) {
    m_comment = comment;
    m_comment_isSet = true;
}

bool OAIReview::is_comment_Set() const{
    return m_comment_isSet;
}

bool OAIReview::is_comment_Valid() const{
    return m_comment_isValid;
}

QString OAIReview::getCreateTime() const {
    return m_create_time;
}
void OAIReview::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIReview::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIReview::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QString OAIReview::getName() const {
    return m_name;
}
void OAIReview::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIReview::is_name_Set() const{
    return m_name_isSet;
}

bool OAIReview::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIReview::getReviewId() const {
    return m_review_id;
}
void OAIReview::setReviewId(const QString &review_id) {
    m_review_id = review_id;
    m_review_id_isSet = true;
}

bool OAIReview::is_review_id_Set() const{
    return m_review_id_isSet;
}

bool OAIReview::is_review_id_Valid() const{
    return m_review_id_isValid;
}

OAIReviewReply OAIReview::getReviewReply() const {
    return m_review_reply;
}
void OAIReview::setReviewReply(const OAIReviewReply &review_reply) {
    m_review_reply = review_reply;
    m_review_reply_isSet = true;
}

bool OAIReview::is_review_reply_Set() const{
    return m_review_reply_isSet;
}

bool OAIReview::is_review_reply_Valid() const{
    return m_review_reply_isValid;
}

OAIReviewer OAIReview::getReviewer() const {
    return m_reviewer;
}
void OAIReview::setReviewer(const OAIReviewer &reviewer) {
    m_reviewer = reviewer;
    m_reviewer_isSet = true;
}

bool OAIReview::is_reviewer_Set() const{
    return m_reviewer_isSet;
}

bool OAIReview::is_reviewer_Valid() const{
    return m_reviewer_isValid;
}

QString OAIReview::getStarRating() const {
    return m_star_rating;
}
void OAIReview::setStarRating(const QString &star_rating) {
    m_star_rating = star_rating;
    m_star_rating_isSet = true;
}

bool OAIReview::is_star_rating_Set() const{
    return m_star_rating_isSet;
}

bool OAIReview::is_star_rating_Valid() const{
    return m_star_rating_isValid;
}

QString OAIReview::getUpdateTime() const {
    return m_update_time;
}
void OAIReview::setUpdateTime(const QString &update_time) {
    m_update_time = update_time;
    m_update_time_isSet = true;
}

bool OAIReview::is_update_time_Set() const{
    return m_update_time_isSet;
}

bool OAIReview::is_update_time_Valid() const{
    return m_update_time_isValid;
}

bool OAIReview::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_comment_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_review_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_review_reply.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_reviewer.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_star_rating_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIReview::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
