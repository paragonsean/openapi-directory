/**
 * Google My Business API
 * The Google My Business API provides an interface for managing business location information on Google.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPets.h
 *
 * Policies regarding guest-owned animals.
 */

#ifndef OAIPets_H
#define OAIPets_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPets : public OAIObject {
public:
    OAIPets();
    OAIPets(QString json);
    ~OAIPets() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isCatsAllowed() const;
    void setCatsAllowed(const bool &cats_allowed);
    bool is_cats_allowed_Set() const;
    bool is_cats_allowed_Valid() const;

    QString getCatsAllowedException() const;
    void setCatsAllowedException(const QString &cats_allowed_exception);
    bool is_cats_allowed_exception_Set() const;
    bool is_cats_allowed_exception_Valid() const;

    bool isDogsAllowed() const;
    void setDogsAllowed(const bool &dogs_allowed);
    bool is_dogs_allowed_Set() const;
    bool is_dogs_allowed_Valid() const;

    QString getDogsAllowedException() const;
    void setDogsAllowedException(const QString &dogs_allowed_exception);
    bool is_dogs_allowed_exception_Set() const;
    bool is_dogs_allowed_exception_Valid() const;

    bool isPetsAllowed() const;
    void setPetsAllowed(const bool &pets_allowed);
    bool is_pets_allowed_Set() const;
    bool is_pets_allowed_Valid() const;

    QString getPetsAllowedException() const;
    void setPetsAllowedException(const QString &pets_allowed_exception);
    bool is_pets_allowed_exception_Set() const;
    bool is_pets_allowed_exception_Valid() const;

    bool isPetsAllowedFree() const;
    void setPetsAllowedFree(const bool &pets_allowed_free);
    bool is_pets_allowed_free_Set() const;
    bool is_pets_allowed_free_Valid() const;

    QString getPetsAllowedFreeException() const;
    void setPetsAllowedFreeException(const QString &pets_allowed_free_exception);
    bool is_pets_allowed_free_exception_Set() const;
    bool is_pets_allowed_free_exception_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_cats_allowed;
    bool m_cats_allowed_isSet;
    bool m_cats_allowed_isValid;

    QString m_cats_allowed_exception;
    bool m_cats_allowed_exception_isSet;
    bool m_cats_allowed_exception_isValid;

    bool m_dogs_allowed;
    bool m_dogs_allowed_isSet;
    bool m_dogs_allowed_isValid;

    QString m_dogs_allowed_exception;
    bool m_dogs_allowed_exception_isSet;
    bool m_dogs_allowed_exception_isValid;

    bool m_pets_allowed;
    bool m_pets_allowed_isSet;
    bool m_pets_allowed_isValid;

    QString m_pets_allowed_exception;
    bool m_pets_allowed_exception_isSet;
    bool m_pets_allowed_exception_isValid;

    bool m_pets_allowed_free;
    bool m_pets_allowed_free_isSet;
    bool m_pets_allowed_free_isValid;

    QString m_pets_allowed_free_exception;
    bool m_pets_allowed_free_exception_isSet;
    bool m_pets_allowed_free_exception_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPets)

#endif // OAIPets_H
