/**
 * Google My Business API
 * The Google My Business API provides an interface for managing business location information on Google.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICategory.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICategory::OAICategory(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICategory::OAICategory() {
    this->initializeModel();
}

OAICategory::~OAICategory() {}

void OAICategory::initializeModel() {

    m_category_id_isSet = false;
    m_category_id_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_more_hours_types_isSet = false;
    m_more_hours_types_isValid = false;

    m_service_types_isSet = false;
    m_service_types_isValid = false;
}

void OAICategory::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICategory::fromJsonObject(QJsonObject json) {

    m_category_id_isValid = ::OpenAPI::fromJsonValue(m_category_id, json[QString("categoryId")]);
    m_category_id_isSet = !json[QString("categoryId")].isNull() && m_category_id_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_more_hours_types_isValid = ::OpenAPI::fromJsonValue(m_more_hours_types, json[QString("moreHoursTypes")]);
    m_more_hours_types_isSet = !json[QString("moreHoursTypes")].isNull() && m_more_hours_types_isValid;

    m_service_types_isValid = ::OpenAPI::fromJsonValue(m_service_types, json[QString("serviceTypes")]);
    m_service_types_isSet = !json[QString("serviceTypes")].isNull() && m_service_types_isValid;
}

QString OAICategory::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICategory::asJsonObject() const {
    QJsonObject obj;
    if (m_category_id_isSet) {
        obj.insert(QString("categoryId"), ::OpenAPI::toJsonValue(m_category_id));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_more_hours_types.size() > 0) {
        obj.insert(QString("moreHoursTypes"), ::OpenAPI::toJsonValue(m_more_hours_types));
    }
    if (m_service_types.size() > 0) {
        obj.insert(QString("serviceTypes"), ::OpenAPI::toJsonValue(m_service_types));
    }
    return obj;
}

QString OAICategory::getCategoryId() const {
    return m_category_id;
}
void OAICategory::setCategoryId(const QString &category_id) {
    m_category_id = category_id;
    m_category_id_isSet = true;
}

bool OAICategory::is_category_id_Set() const{
    return m_category_id_isSet;
}

bool OAICategory::is_category_id_Valid() const{
    return m_category_id_isValid;
}

QString OAICategory::getDisplayName() const {
    return m_display_name;
}
void OAICategory::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAICategory::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAICategory::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QList<OAIMoreHoursType> OAICategory::getMoreHoursTypes() const {
    return m_more_hours_types;
}
void OAICategory::setMoreHoursTypes(const QList<OAIMoreHoursType> &more_hours_types) {
    m_more_hours_types = more_hours_types;
    m_more_hours_types_isSet = true;
}

bool OAICategory::is_more_hours_types_Set() const{
    return m_more_hours_types_isSet;
}

bool OAICategory::is_more_hours_types_Valid() const{
    return m_more_hours_types_isValid;
}

QList<OAIServiceType> OAICategory::getServiceTypes() const {
    return m_service_types;
}
void OAICategory::setServiceTypes(const QList<OAIServiceType> &service_types) {
    m_service_types = service_types;
    m_service_types_isSet = true;
}

bool OAICategory::is_service_types_Set() const{
    return m_service_types_isSet;
}

bool OAICategory::is_service_types_Valid() const{
    return m_service_types_isValid;
}

bool OAICategory::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_category_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_more_hours_types.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_types.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICategory::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
