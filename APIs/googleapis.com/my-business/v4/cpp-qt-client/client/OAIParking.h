/**
 * Google My Business API
 * The Google My Business API provides an interface for managing business location information on Google.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIParking.h
 *
 * Parking options at the property.
 */

#ifndef OAIParking_H
#define OAIParking_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIParking : public OAIObject {
public:
    OAIParking();
    OAIParking(QString json);
    ~OAIParking() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isElectricCarChargingStations() const;
    void setElectricCarChargingStations(const bool &electric_car_charging_stations);
    bool is_electric_car_charging_stations_Set() const;
    bool is_electric_car_charging_stations_Valid() const;

    QString getElectricCarChargingStationsException() const;
    void setElectricCarChargingStationsException(const QString &electric_car_charging_stations_exception);
    bool is_electric_car_charging_stations_exception_Set() const;
    bool is_electric_car_charging_stations_exception_Valid() const;

    bool isFreeParking() const;
    void setFreeParking(const bool &free_parking);
    bool is_free_parking_Set() const;
    bool is_free_parking_Valid() const;

    QString getFreeParkingException() const;
    void setFreeParkingException(const QString &free_parking_exception);
    bool is_free_parking_exception_Set() const;
    bool is_free_parking_exception_Valid() const;

    bool isFreeSelfParking() const;
    void setFreeSelfParking(const bool &free_self_parking);
    bool is_free_self_parking_Set() const;
    bool is_free_self_parking_Valid() const;

    QString getFreeSelfParkingException() const;
    void setFreeSelfParkingException(const QString &free_self_parking_exception);
    bool is_free_self_parking_exception_Set() const;
    bool is_free_self_parking_exception_Valid() const;

    bool isFreeValetParking() const;
    void setFreeValetParking(const bool &free_valet_parking);
    bool is_free_valet_parking_Set() const;
    bool is_free_valet_parking_Valid() const;

    QString getFreeValetParkingException() const;
    void setFreeValetParkingException(const QString &free_valet_parking_exception);
    bool is_free_valet_parking_exception_Set() const;
    bool is_free_valet_parking_exception_Valid() const;

    bool isParkingAvailable() const;
    void setParkingAvailable(const bool &parking_available);
    bool is_parking_available_Set() const;
    bool is_parking_available_Valid() const;

    QString getParkingAvailableException() const;
    void setParkingAvailableException(const QString &parking_available_exception);
    bool is_parking_available_exception_Set() const;
    bool is_parking_available_exception_Valid() const;

    bool isSelfParkingAvailable() const;
    void setSelfParkingAvailable(const bool &self_parking_available);
    bool is_self_parking_available_Set() const;
    bool is_self_parking_available_Valid() const;

    QString getSelfParkingAvailableException() const;
    void setSelfParkingAvailableException(const QString &self_parking_available_exception);
    bool is_self_parking_available_exception_Set() const;
    bool is_self_parking_available_exception_Valid() const;

    bool isValetParkingAvailable() const;
    void setValetParkingAvailable(const bool &valet_parking_available);
    bool is_valet_parking_available_Set() const;
    bool is_valet_parking_available_Valid() const;

    QString getValetParkingAvailableException() const;
    void setValetParkingAvailableException(const QString &valet_parking_available_exception);
    bool is_valet_parking_available_exception_Set() const;
    bool is_valet_parking_available_exception_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_electric_car_charging_stations;
    bool m_electric_car_charging_stations_isSet;
    bool m_electric_car_charging_stations_isValid;

    QString m_electric_car_charging_stations_exception;
    bool m_electric_car_charging_stations_exception_isSet;
    bool m_electric_car_charging_stations_exception_isValid;

    bool m_free_parking;
    bool m_free_parking_isSet;
    bool m_free_parking_isValid;

    QString m_free_parking_exception;
    bool m_free_parking_exception_isSet;
    bool m_free_parking_exception_isValid;

    bool m_free_self_parking;
    bool m_free_self_parking_isSet;
    bool m_free_self_parking_isValid;

    QString m_free_self_parking_exception;
    bool m_free_self_parking_exception_isSet;
    bool m_free_self_parking_exception_isValid;

    bool m_free_valet_parking;
    bool m_free_valet_parking_isSet;
    bool m_free_valet_parking_isValid;

    QString m_free_valet_parking_exception;
    bool m_free_valet_parking_exception_isSet;
    bool m_free_valet_parking_exception_isValid;

    bool m_parking_available;
    bool m_parking_available_isSet;
    bool m_parking_available_isValid;

    QString m_parking_available_exception;
    bool m_parking_available_exception_isSet;
    bool m_parking_available_exception_isValid;

    bool m_self_parking_available;
    bool m_self_parking_available_isSet;
    bool m_self_parking_available_isValid;

    QString m_self_parking_available_exception;
    bool m_self_parking_available_exception_isSet;
    bool m_self_parking_available_exception_isValid;

    bool m_valet_parking_available;
    bool m_valet_parking_available_isSet;
    bool m_valet_parking_available_isValid;

    QString m_valet_parking_available_exception;
    bool m_valet_parking_available_exception_isSet;
    bool m_valet_parking_available_exception_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIParking)

#endif // OAIParking_H
