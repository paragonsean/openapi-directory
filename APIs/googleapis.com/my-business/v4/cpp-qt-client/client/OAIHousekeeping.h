/**
 * Google My Business API
 * The Google My Business API provides an interface for managing business location information on Google.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIHousekeeping.h
 *
 * Conveniences provided in guest units to facilitate an easier, more comfortable stay.
 */

#ifndef OAIHousekeeping_H
#define OAIHousekeeping_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIHousekeeping : public OAIObject {
public:
    OAIHousekeeping();
    OAIHousekeeping(QString json);
    ~OAIHousekeeping() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isDailyHousekeeping() const;
    void setDailyHousekeeping(const bool &daily_housekeeping);
    bool is_daily_housekeeping_Set() const;
    bool is_daily_housekeeping_Valid() const;

    QString getDailyHousekeepingException() const;
    void setDailyHousekeepingException(const QString &daily_housekeeping_exception);
    bool is_daily_housekeeping_exception_Set() const;
    bool is_daily_housekeeping_exception_Valid() const;

    bool isHousekeepingAvailable() const;
    void setHousekeepingAvailable(const bool &housekeeping_available);
    bool is_housekeeping_available_Set() const;
    bool is_housekeeping_available_Valid() const;

    QString getHousekeepingAvailableException() const;
    void setHousekeepingAvailableException(const QString &housekeeping_available_exception);
    bool is_housekeeping_available_exception_Set() const;
    bool is_housekeeping_available_exception_Valid() const;

    bool isTurndownService() const;
    void setTurndownService(const bool &turndown_service);
    bool is_turndown_service_Set() const;
    bool is_turndown_service_Valid() const;

    QString getTurndownServiceException() const;
    void setTurndownServiceException(const QString &turndown_service_exception);
    bool is_turndown_service_exception_Set() const;
    bool is_turndown_service_exception_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_daily_housekeeping;
    bool m_daily_housekeeping_isSet;
    bool m_daily_housekeeping_isValid;

    QString m_daily_housekeeping_exception;
    bool m_daily_housekeeping_exception_isSet;
    bool m_daily_housekeeping_exception_isValid;

    bool m_housekeeping_available;
    bool m_housekeeping_available_isSet;
    bool m_housekeeping_available_isValid;

    QString m_housekeeping_available_exception;
    bool m_housekeeping_available_exception_isSet;
    bool m_housekeeping_available_exception_isValid;

    bool m_turndown_service;
    bool m_turndown_service_isSet;
    bool m_turndown_service_isValid;

    QString m_turndown_service_exception;
    bool m_turndown_service_exception_isSet;
    bool m_turndown_service_exception_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIHousekeeping)

#endif // OAIHousekeeping_H
