/**
 * Google My Business API
 * The Google My Business API provides an interface for managing business location information on Google.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPersonalProtection.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPersonalProtection::OAIPersonalProtection(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPersonalProtection::OAIPersonalProtection() {
    this->initializeModel();
}

OAIPersonalProtection::~OAIPersonalProtection() {}

void OAIPersonalProtection::initializeModel() {

    m_common_areas_offer_sanitizing_items_isSet = false;
    m_common_areas_offer_sanitizing_items_isValid = false;

    m_common_areas_offer_sanitizing_items_exception_isSet = false;
    m_common_areas_offer_sanitizing_items_exception_isValid = false;

    m_face_mask_required_isSet = false;
    m_face_mask_required_isValid = false;

    m_face_mask_required_exception_isSet = false;
    m_face_mask_required_exception_isValid = false;

    m_guest_room_hygiene_kits_available_isSet = false;
    m_guest_room_hygiene_kits_available_isValid = false;

    m_guest_room_hygiene_kits_available_exception_isSet = false;
    m_guest_room_hygiene_kits_available_exception_isValid = false;

    m_protective_equipment_available_isSet = false;
    m_protective_equipment_available_isValid = false;

    m_protective_equipment_available_exception_isSet = false;
    m_protective_equipment_available_exception_isValid = false;
}

void OAIPersonalProtection::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPersonalProtection::fromJsonObject(QJsonObject json) {

    m_common_areas_offer_sanitizing_items_isValid = ::OpenAPI::fromJsonValue(m_common_areas_offer_sanitizing_items, json[QString("commonAreasOfferSanitizingItems")]);
    m_common_areas_offer_sanitizing_items_isSet = !json[QString("commonAreasOfferSanitizingItems")].isNull() && m_common_areas_offer_sanitizing_items_isValid;

    m_common_areas_offer_sanitizing_items_exception_isValid = ::OpenAPI::fromJsonValue(m_common_areas_offer_sanitizing_items_exception, json[QString("commonAreasOfferSanitizingItemsException")]);
    m_common_areas_offer_sanitizing_items_exception_isSet = !json[QString("commonAreasOfferSanitizingItemsException")].isNull() && m_common_areas_offer_sanitizing_items_exception_isValid;

    m_face_mask_required_isValid = ::OpenAPI::fromJsonValue(m_face_mask_required, json[QString("faceMaskRequired")]);
    m_face_mask_required_isSet = !json[QString("faceMaskRequired")].isNull() && m_face_mask_required_isValid;

    m_face_mask_required_exception_isValid = ::OpenAPI::fromJsonValue(m_face_mask_required_exception, json[QString("faceMaskRequiredException")]);
    m_face_mask_required_exception_isSet = !json[QString("faceMaskRequiredException")].isNull() && m_face_mask_required_exception_isValid;

    m_guest_room_hygiene_kits_available_isValid = ::OpenAPI::fromJsonValue(m_guest_room_hygiene_kits_available, json[QString("guestRoomHygieneKitsAvailable")]);
    m_guest_room_hygiene_kits_available_isSet = !json[QString("guestRoomHygieneKitsAvailable")].isNull() && m_guest_room_hygiene_kits_available_isValid;

    m_guest_room_hygiene_kits_available_exception_isValid = ::OpenAPI::fromJsonValue(m_guest_room_hygiene_kits_available_exception, json[QString("guestRoomHygieneKitsAvailableException")]);
    m_guest_room_hygiene_kits_available_exception_isSet = !json[QString("guestRoomHygieneKitsAvailableException")].isNull() && m_guest_room_hygiene_kits_available_exception_isValid;

    m_protective_equipment_available_isValid = ::OpenAPI::fromJsonValue(m_protective_equipment_available, json[QString("protectiveEquipmentAvailable")]);
    m_protective_equipment_available_isSet = !json[QString("protectiveEquipmentAvailable")].isNull() && m_protective_equipment_available_isValid;

    m_protective_equipment_available_exception_isValid = ::OpenAPI::fromJsonValue(m_protective_equipment_available_exception, json[QString("protectiveEquipmentAvailableException")]);
    m_protective_equipment_available_exception_isSet = !json[QString("protectiveEquipmentAvailableException")].isNull() && m_protective_equipment_available_exception_isValid;
}

QString OAIPersonalProtection::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPersonalProtection::asJsonObject() const {
    QJsonObject obj;
    if (m_common_areas_offer_sanitizing_items_isSet) {
        obj.insert(QString("commonAreasOfferSanitizingItems"), ::OpenAPI::toJsonValue(m_common_areas_offer_sanitizing_items));
    }
    if (m_common_areas_offer_sanitizing_items_exception_isSet) {
        obj.insert(QString("commonAreasOfferSanitizingItemsException"), ::OpenAPI::toJsonValue(m_common_areas_offer_sanitizing_items_exception));
    }
    if (m_face_mask_required_isSet) {
        obj.insert(QString("faceMaskRequired"), ::OpenAPI::toJsonValue(m_face_mask_required));
    }
    if (m_face_mask_required_exception_isSet) {
        obj.insert(QString("faceMaskRequiredException"), ::OpenAPI::toJsonValue(m_face_mask_required_exception));
    }
    if (m_guest_room_hygiene_kits_available_isSet) {
        obj.insert(QString("guestRoomHygieneKitsAvailable"), ::OpenAPI::toJsonValue(m_guest_room_hygiene_kits_available));
    }
    if (m_guest_room_hygiene_kits_available_exception_isSet) {
        obj.insert(QString("guestRoomHygieneKitsAvailableException"), ::OpenAPI::toJsonValue(m_guest_room_hygiene_kits_available_exception));
    }
    if (m_protective_equipment_available_isSet) {
        obj.insert(QString("protectiveEquipmentAvailable"), ::OpenAPI::toJsonValue(m_protective_equipment_available));
    }
    if (m_protective_equipment_available_exception_isSet) {
        obj.insert(QString("protectiveEquipmentAvailableException"), ::OpenAPI::toJsonValue(m_protective_equipment_available_exception));
    }
    return obj;
}

bool OAIPersonalProtection::isCommonAreasOfferSanitizingItems() const {
    return m_common_areas_offer_sanitizing_items;
}
void OAIPersonalProtection::setCommonAreasOfferSanitizingItems(const bool &common_areas_offer_sanitizing_items) {
    m_common_areas_offer_sanitizing_items = common_areas_offer_sanitizing_items;
    m_common_areas_offer_sanitizing_items_isSet = true;
}

bool OAIPersonalProtection::is_common_areas_offer_sanitizing_items_Set() const{
    return m_common_areas_offer_sanitizing_items_isSet;
}

bool OAIPersonalProtection::is_common_areas_offer_sanitizing_items_Valid() const{
    return m_common_areas_offer_sanitizing_items_isValid;
}

QString OAIPersonalProtection::getCommonAreasOfferSanitizingItemsException() const {
    return m_common_areas_offer_sanitizing_items_exception;
}
void OAIPersonalProtection::setCommonAreasOfferSanitizingItemsException(const QString &common_areas_offer_sanitizing_items_exception) {
    m_common_areas_offer_sanitizing_items_exception = common_areas_offer_sanitizing_items_exception;
    m_common_areas_offer_sanitizing_items_exception_isSet = true;
}

bool OAIPersonalProtection::is_common_areas_offer_sanitizing_items_exception_Set() const{
    return m_common_areas_offer_sanitizing_items_exception_isSet;
}

bool OAIPersonalProtection::is_common_areas_offer_sanitizing_items_exception_Valid() const{
    return m_common_areas_offer_sanitizing_items_exception_isValid;
}

bool OAIPersonalProtection::isFaceMaskRequired() const {
    return m_face_mask_required;
}
void OAIPersonalProtection::setFaceMaskRequired(const bool &face_mask_required) {
    m_face_mask_required = face_mask_required;
    m_face_mask_required_isSet = true;
}

bool OAIPersonalProtection::is_face_mask_required_Set() const{
    return m_face_mask_required_isSet;
}

bool OAIPersonalProtection::is_face_mask_required_Valid() const{
    return m_face_mask_required_isValid;
}

QString OAIPersonalProtection::getFaceMaskRequiredException() const {
    return m_face_mask_required_exception;
}
void OAIPersonalProtection::setFaceMaskRequiredException(const QString &face_mask_required_exception) {
    m_face_mask_required_exception = face_mask_required_exception;
    m_face_mask_required_exception_isSet = true;
}

bool OAIPersonalProtection::is_face_mask_required_exception_Set() const{
    return m_face_mask_required_exception_isSet;
}

bool OAIPersonalProtection::is_face_mask_required_exception_Valid() const{
    return m_face_mask_required_exception_isValid;
}

bool OAIPersonalProtection::isGuestRoomHygieneKitsAvailable() const {
    return m_guest_room_hygiene_kits_available;
}
void OAIPersonalProtection::setGuestRoomHygieneKitsAvailable(const bool &guest_room_hygiene_kits_available) {
    m_guest_room_hygiene_kits_available = guest_room_hygiene_kits_available;
    m_guest_room_hygiene_kits_available_isSet = true;
}

bool OAIPersonalProtection::is_guest_room_hygiene_kits_available_Set() const{
    return m_guest_room_hygiene_kits_available_isSet;
}

bool OAIPersonalProtection::is_guest_room_hygiene_kits_available_Valid() const{
    return m_guest_room_hygiene_kits_available_isValid;
}

QString OAIPersonalProtection::getGuestRoomHygieneKitsAvailableException() const {
    return m_guest_room_hygiene_kits_available_exception;
}
void OAIPersonalProtection::setGuestRoomHygieneKitsAvailableException(const QString &guest_room_hygiene_kits_available_exception) {
    m_guest_room_hygiene_kits_available_exception = guest_room_hygiene_kits_available_exception;
    m_guest_room_hygiene_kits_available_exception_isSet = true;
}

bool OAIPersonalProtection::is_guest_room_hygiene_kits_available_exception_Set() const{
    return m_guest_room_hygiene_kits_available_exception_isSet;
}

bool OAIPersonalProtection::is_guest_room_hygiene_kits_available_exception_Valid() const{
    return m_guest_room_hygiene_kits_available_exception_isValid;
}

bool OAIPersonalProtection::isProtectiveEquipmentAvailable() const {
    return m_protective_equipment_available;
}
void OAIPersonalProtection::setProtectiveEquipmentAvailable(const bool &protective_equipment_available) {
    m_protective_equipment_available = protective_equipment_available;
    m_protective_equipment_available_isSet = true;
}

bool OAIPersonalProtection::is_protective_equipment_available_Set() const{
    return m_protective_equipment_available_isSet;
}

bool OAIPersonalProtection::is_protective_equipment_available_Valid() const{
    return m_protective_equipment_available_isValid;
}

QString OAIPersonalProtection::getProtectiveEquipmentAvailableException() const {
    return m_protective_equipment_available_exception;
}
void OAIPersonalProtection::setProtectiveEquipmentAvailableException(const QString &protective_equipment_available_exception) {
    m_protective_equipment_available_exception = protective_equipment_available_exception;
    m_protective_equipment_available_exception_isSet = true;
}

bool OAIPersonalProtection::is_protective_equipment_available_exception_Set() const{
    return m_protective_equipment_available_exception_isSet;
}

bool OAIPersonalProtection::is_protective_equipment_available_exception_Valid() const{
    return m_protective_equipment_available_exception_isValid;
}

bool OAIPersonalProtection::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_common_areas_offer_sanitizing_items_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_common_areas_offer_sanitizing_items_exception_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_face_mask_required_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_face_mask_required_exception_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_guest_room_hygiene_kits_available_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_guest_room_hygiene_kits_available_exception_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_protective_equipment_available_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_protective_equipment_available_exception_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPersonalProtection::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
