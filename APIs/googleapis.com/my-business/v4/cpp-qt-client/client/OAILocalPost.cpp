/**
 * Google My Business API
 * The Google My Business API provides an interface for managing business location information on Google.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILocalPost.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILocalPost::OAILocalPost(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILocalPost::OAILocalPost() {
    this->initializeModel();
}

OAILocalPost::~OAILocalPost() {}

void OAILocalPost::initializeModel() {

    m_alert_type_isSet = false;
    m_alert_type_isValid = false;

    m_call_to_action_isSet = false;
    m_call_to_action_isValid = false;

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_event_isSet = false;
    m_event_isValid = false;

    m_language_code_isSet = false;
    m_language_code_isValid = false;

    m_media_isSet = false;
    m_media_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_offer_isSet = false;
    m_offer_isValid = false;

    m_search_url_isSet = false;
    m_search_url_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;

    m_summary_isSet = false;
    m_summary_isValid = false;

    m_topic_type_isSet = false;
    m_topic_type_isValid = false;

    m_update_time_isSet = false;
    m_update_time_isValid = false;
}

void OAILocalPost::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILocalPost::fromJsonObject(QJsonObject json) {

    m_alert_type_isValid = ::OpenAPI::fromJsonValue(m_alert_type, json[QString("alertType")]);
    m_alert_type_isSet = !json[QString("alertType")].isNull() && m_alert_type_isValid;

    m_call_to_action_isValid = ::OpenAPI::fromJsonValue(m_call_to_action, json[QString("callToAction")]);
    m_call_to_action_isSet = !json[QString("callToAction")].isNull() && m_call_to_action_isValid;

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_event_isValid = ::OpenAPI::fromJsonValue(m_event, json[QString("event")]);
    m_event_isSet = !json[QString("event")].isNull() && m_event_isValid;

    m_language_code_isValid = ::OpenAPI::fromJsonValue(m_language_code, json[QString("languageCode")]);
    m_language_code_isSet = !json[QString("languageCode")].isNull() && m_language_code_isValid;

    m_media_isValid = ::OpenAPI::fromJsonValue(m_media, json[QString("media")]);
    m_media_isSet = !json[QString("media")].isNull() && m_media_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_offer_isValid = ::OpenAPI::fromJsonValue(m_offer, json[QString("offer")]);
    m_offer_isSet = !json[QString("offer")].isNull() && m_offer_isValid;

    m_search_url_isValid = ::OpenAPI::fromJsonValue(m_search_url, json[QString("searchUrl")]);
    m_search_url_isSet = !json[QString("searchUrl")].isNull() && m_search_url_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;

    m_summary_isValid = ::OpenAPI::fromJsonValue(m_summary, json[QString("summary")]);
    m_summary_isSet = !json[QString("summary")].isNull() && m_summary_isValid;

    m_topic_type_isValid = ::OpenAPI::fromJsonValue(m_topic_type, json[QString("topicType")]);
    m_topic_type_isSet = !json[QString("topicType")].isNull() && m_topic_type_isValid;

    m_update_time_isValid = ::OpenAPI::fromJsonValue(m_update_time, json[QString("updateTime")]);
    m_update_time_isSet = !json[QString("updateTime")].isNull() && m_update_time_isValid;
}

QString OAILocalPost::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILocalPost::asJsonObject() const {
    QJsonObject obj;
    if (m_alert_type_isSet) {
        obj.insert(QString("alertType"), ::OpenAPI::toJsonValue(m_alert_type));
    }
    if (m_call_to_action.isSet()) {
        obj.insert(QString("callToAction"), ::OpenAPI::toJsonValue(m_call_to_action));
    }
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_event.isSet()) {
        obj.insert(QString("event"), ::OpenAPI::toJsonValue(m_event));
    }
    if (m_language_code_isSet) {
        obj.insert(QString("languageCode"), ::OpenAPI::toJsonValue(m_language_code));
    }
    if (m_media.size() > 0) {
        obj.insert(QString("media"), ::OpenAPI::toJsonValue(m_media));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_offer.isSet()) {
        obj.insert(QString("offer"), ::OpenAPI::toJsonValue(m_offer));
    }
    if (m_search_url_isSet) {
        obj.insert(QString("searchUrl"), ::OpenAPI::toJsonValue(m_search_url));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    if (m_summary_isSet) {
        obj.insert(QString("summary"), ::OpenAPI::toJsonValue(m_summary));
    }
    if (m_topic_type_isSet) {
        obj.insert(QString("topicType"), ::OpenAPI::toJsonValue(m_topic_type));
    }
    if (m_update_time_isSet) {
        obj.insert(QString("updateTime"), ::OpenAPI::toJsonValue(m_update_time));
    }
    return obj;
}

QString OAILocalPost::getAlertType() const {
    return m_alert_type;
}
void OAILocalPost::setAlertType(const QString &alert_type) {
    m_alert_type = alert_type;
    m_alert_type_isSet = true;
}

bool OAILocalPost::is_alert_type_Set() const{
    return m_alert_type_isSet;
}

bool OAILocalPost::is_alert_type_Valid() const{
    return m_alert_type_isValid;
}

OAICallToAction OAILocalPost::getCallToAction() const {
    return m_call_to_action;
}
void OAILocalPost::setCallToAction(const OAICallToAction &call_to_action) {
    m_call_to_action = call_to_action;
    m_call_to_action_isSet = true;
}

bool OAILocalPost::is_call_to_action_Set() const{
    return m_call_to_action_isSet;
}

bool OAILocalPost::is_call_to_action_Valid() const{
    return m_call_to_action_isValid;
}

QString OAILocalPost::getCreateTime() const {
    return m_create_time;
}
void OAILocalPost::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAILocalPost::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAILocalPost::is_create_time_Valid() const{
    return m_create_time_isValid;
}

OAILocalPostEvent OAILocalPost::getEvent() const {
    return m_event;
}
void OAILocalPost::setEvent(const OAILocalPostEvent &event) {
    m_event = event;
    m_event_isSet = true;
}

bool OAILocalPost::is_event_Set() const{
    return m_event_isSet;
}

bool OAILocalPost::is_event_Valid() const{
    return m_event_isValid;
}

QString OAILocalPost::getLanguageCode() const {
    return m_language_code;
}
void OAILocalPost::setLanguageCode(const QString &language_code) {
    m_language_code = language_code;
    m_language_code_isSet = true;
}

bool OAILocalPost::is_language_code_Set() const{
    return m_language_code_isSet;
}

bool OAILocalPost::is_language_code_Valid() const{
    return m_language_code_isValid;
}

QList<OAIMediaItem> OAILocalPost::getMedia() const {
    return m_media;
}
void OAILocalPost::setMedia(const QList<OAIMediaItem> &media) {
    m_media = media;
    m_media_isSet = true;
}

bool OAILocalPost::is_media_Set() const{
    return m_media_isSet;
}

bool OAILocalPost::is_media_Valid() const{
    return m_media_isValid;
}

QString OAILocalPost::getName() const {
    return m_name;
}
void OAILocalPost::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAILocalPost::is_name_Set() const{
    return m_name_isSet;
}

bool OAILocalPost::is_name_Valid() const{
    return m_name_isValid;
}

OAILocalPostOffer OAILocalPost::getOffer() const {
    return m_offer;
}
void OAILocalPost::setOffer(const OAILocalPostOffer &offer) {
    m_offer = offer;
    m_offer_isSet = true;
}

bool OAILocalPost::is_offer_Set() const{
    return m_offer_isSet;
}

bool OAILocalPost::is_offer_Valid() const{
    return m_offer_isValid;
}

QString OAILocalPost::getSearchUrl() const {
    return m_search_url;
}
void OAILocalPost::setSearchUrl(const QString &search_url) {
    m_search_url = search_url;
    m_search_url_isSet = true;
}

bool OAILocalPost::is_search_url_Set() const{
    return m_search_url_isSet;
}

bool OAILocalPost::is_search_url_Valid() const{
    return m_search_url_isValid;
}

QString OAILocalPost::getState() const {
    return m_state;
}
void OAILocalPost::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAILocalPost::is_state_Set() const{
    return m_state_isSet;
}

bool OAILocalPost::is_state_Valid() const{
    return m_state_isValid;
}

QString OAILocalPost::getSummary() const {
    return m_summary;
}
void OAILocalPost::setSummary(const QString &summary) {
    m_summary = summary;
    m_summary_isSet = true;
}

bool OAILocalPost::is_summary_Set() const{
    return m_summary_isSet;
}

bool OAILocalPost::is_summary_Valid() const{
    return m_summary_isValid;
}

QString OAILocalPost::getTopicType() const {
    return m_topic_type;
}
void OAILocalPost::setTopicType(const QString &topic_type) {
    m_topic_type = topic_type;
    m_topic_type_isSet = true;
}

bool OAILocalPost::is_topic_type_Set() const{
    return m_topic_type_isSet;
}

bool OAILocalPost::is_topic_type_Valid() const{
    return m_topic_type_isValid;
}

QString OAILocalPost::getUpdateTime() const {
    return m_update_time;
}
void OAILocalPost::setUpdateTime(const QString &update_time) {
    m_update_time = update_time;
    m_update_time_isSet = true;
}

bool OAILocalPost::is_update_time_Set() const{
    return m_update_time_isSet;
}

bool OAILocalPost::is_update_time_Valid() const{
    return m_update_time_isValid;
}

bool OAILocalPost::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_alert_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_call_to_action.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_event.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_language_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_media.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_offer.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_search_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_summary_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_topic_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILocalPost::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
