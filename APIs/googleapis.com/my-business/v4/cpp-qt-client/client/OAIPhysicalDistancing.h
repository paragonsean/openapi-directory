/**
 * Google My Business API
 * The Google My Business API provides an interface for managing business location information on Google.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPhysicalDistancing.h
 *
 * Physical distancing measures implemented by the hotel during COVID-19.
 */

#ifndef OAIPhysicalDistancing_H
#define OAIPhysicalDistancing_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPhysicalDistancing : public OAIObject {
public:
    OAIPhysicalDistancing();
    OAIPhysicalDistancing(QString json);
    ~OAIPhysicalDistancing() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isCommonAreasPhysicalDistancingArranged() const;
    void setCommonAreasPhysicalDistancingArranged(const bool &common_areas_physical_distancing_arranged);
    bool is_common_areas_physical_distancing_arranged_Set() const;
    bool is_common_areas_physical_distancing_arranged_Valid() const;

    QString getCommonAreasPhysicalDistancingArrangedException() const;
    void setCommonAreasPhysicalDistancingArrangedException(const QString &common_areas_physical_distancing_arranged_exception);
    bool is_common_areas_physical_distancing_arranged_exception_Set() const;
    bool is_common_areas_physical_distancing_arranged_exception_Valid() const;

    bool isPhysicalDistancingRequired() const;
    void setPhysicalDistancingRequired(const bool &physical_distancing_required);
    bool is_physical_distancing_required_Set() const;
    bool is_physical_distancing_required_Valid() const;

    QString getPhysicalDistancingRequiredException() const;
    void setPhysicalDistancingRequiredException(const QString &physical_distancing_required_exception);
    bool is_physical_distancing_required_exception_Set() const;
    bool is_physical_distancing_required_exception_Valid() const;

    bool isSafetyDividers() const;
    void setSafetyDividers(const bool &safety_dividers);
    bool is_safety_dividers_Set() const;
    bool is_safety_dividers_Valid() const;

    QString getSafetyDividersException() const;
    void setSafetyDividersException(const QString &safety_dividers_exception);
    bool is_safety_dividers_exception_Set() const;
    bool is_safety_dividers_exception_Valid() const;

    bool isSharedAreasLimitedOccupancy() const;
    void setSharedAreasLimitedOccupancy(const bool &shared_areas_limited_occupancy);
    bool is_shared_areas_limited_occupancy_Set() const;
    bool is_shared_areas_limited_occupancy_Valid() const;

    QString getSharedAreasLimitedOccupancyException() const;
    void setSharedAreasLimitedOccupancyException(const QString &shared_areas_limited_occupancy_exception);
    bool is_shared_areas_limited_occupancy_exception_Set() const;
    bool is_shared_areas_limited_occupancy_exception_Valid() const;

    bool isWellnessAreasHavePrivateSpaces() const;
    void setWellnessAreasHavePrivateSpaces(const bool &wellness_areas_have_private_spaces);
    bool is_wellness_areas_have_private_spaces_Set() const;
    bool is_wellness_areas_have_private_spaces_Valid() const;

    QString getWellnessAreasHavePrivateSpacesException() const;
    void setWellnessAreasHavePrivateSpacesException(const QString &wellness_areas_have_private_spaces_exception);
    bool is_wellness_areas_have_private_spaces_exception_Set() const;
    bool is_wellness_areas_have_private_spaces_exception_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_common_areas_physical_distancing_arranged;
    bool m_common_areas_physical_distancing_arranged_isSet;
    bool m_common_areas_physical_distancing_arranged_isValid;

    QString m_common_areas_physical_distancing_arranged_exception;
    bool m_common_areas_physical_distancing_arranged_exception_isSet;
    bool m_common_areas_physical_distancing_arranged_exception_isValid;

    bool m_physical_distancing_required;
    bool m_physical_distancing_required_isSet;
    bool m_physical_distancing_required_isValid;

    QString m_physical_distancing_required_exception;
    bool m_physical_distancing_required_exception_isSet;
    bool m_physical_distancing_required_exception_isValid;

    bool m_safety_dividers;
    bool m_safety_dividers_isSet;
    bool m_safety_dividers_isValid;

    QString m_safety_dividers_exception;
    bool m_safety_dividers_exception_isSet;
    bool m_safety_dividers_exception_isValid;

    bool m_shared_areas_limited_occupancy;
    bool m_shared_areas_limited_occupancy_isSet;
    bool m_shared_areas_limited_occupancy_isValid;

    QString m_shared_areas_limited_occupancy_exception;
    bool m_shared_areas_limited_occupancy_exception_isSet;
    bool m_shared_areas_limited_occupancy_exception_isValid;

    bool m_wellness_areas_have_private_spaces;
    bool m_wellness_areas_have_private_spaces_isSet;
    bool m_wellness_areas_have_private_spaces_isValid;

    QString m_wellness_areas_have_private_spaces_exception;
    bool m_wellness_areas_have_private_spaces_exception_isSet;
    bool m_wellness_areas_have_private_spaces_exception_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPhysicalDistancing)

#endif // OAIPhysicalDistancing_H
