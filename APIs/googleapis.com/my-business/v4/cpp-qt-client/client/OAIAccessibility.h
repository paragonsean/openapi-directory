/**
 * Google My Business API
 * The Google My Business API provides an interface for managing business location information on Google.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAccessibility.h
 *
 * Physical adaptations made to the property in consideration of varying levels of human physical ability.
 */

#ifndef OAIAccessibility_H
#define OAIAccessibility_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAccessibility : public OAIObject {
public:
    OAIAccessibility();
    OAIAccessibility(QString json);
    ~OAIAccessibility() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isMobilityAccessible() const;
    void setMobilityAccessible(const bool &mobility_accessible);
    bool is_mobility_accessible_Set() const;
    bool is_mobility_accessible_Valid() const;

    bool isMobilityAccessibleElevator() const;
    void setMobilityAccessibleElevator(const bool &mobility_accessible_elevator);
    bool is_mobility_accessible_elevator_Set() const;
    bool is_mobility_accessible_elevator_Valid() const;

    QString getMobilityAccessibleElevatorException() const;
    void setMobilityAccessibleElevatorException(const QString &mobility_accessible_elevator_exception);
    bool is_mobility_accessible_elevator_exception_Set() const;
    bool is_mobility_accessible_elevator_exception_Valid() const;

    QString getMobilityAccessibleException() const;
    void setMobilityAccessibleException(const QString &mobility_accessible_exception);
    bool is_mobility_accessible_exception_Set() const;
    bool is_mobility_accessible_exception_Valid() const;

    bool isMobilityAccessibleParking() const;
    void setMobilityAccessibleParking(const bool &mobility_accessible_parking);
    bool is_mobility_accessible_parking_Set() const;
    bool is_mobility_accessible_parking_Valid() const;

    QString getMobilityAccessibleParkingException() const;
    void setMobilityAccessibleParkingException(const QString &mobility_accessible_parking_exception);
    bool is_mobility_accessible_parking_exception_Set() const;
    bool is_mobility_accessible_parking_exception_Valid() const;

    bool isMobilityAccessiblePool() const;
    void setMobilityAccessiblePool(const bool &mobility_accessible_pool);
    bool is_mobility_accessible_pool_Set() const;
    bool is_mobility_accessible_pool_Valid() const;

    QString getMobilityAccessiblePoolException() const;
    void setMobilityAccessiblePoolException(const QString &mobility_accessible_pool_exception);
    bool is_mobility_accessible_pool_exception_Set() const;
    bool is_mobility_accessible_pool_exception_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_mobility_accessible;
    bool m_mobility_accessible_isSet;
    bool m_mobility_accessible_isValid;

    bool m_mobility_accessible_elevator;
    bool m_mobility_accessible_elevator_isSet;
    bool m_mobility_accessible_elevator_isValid;

    QString m_mobility_accessible_elevator_exception;
    bool m_mobility_accessible_elevator_exception_isSet;
    bool m_mobility_accessible_elevator_exception_isValid;

    QString m_mobility_accessible_exception;
    bool m_mobility_accessible_exception_isSet;
    bool m_mobility_accessible_exception_isValid;

    bool m_mobility_accessible_parking;
    bool m_mobility_accessible_parking_isSet;
    bool m_mobility_accessible_parking_isValid;

    QString m_mobility_accessible_parking_exception;
    bool m_mobility_accessible_parking_exception_isSet;
    bool m_mobility_accessible_parking_exception_isValid;

    bool m_mobility_accessible_pool;
    bool m_mobility_accessible_pool_isSet;
    bool m_mobility_accessible_pool_isValid;

    QString m_mobility_accessible_pool_exception;
    bool m_mobility_accessible_pool_exception_isSet;
    bool m_mobility_accessible_pool_exception_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAccessibility)

#endif // OAIAccessibility_H
