/**
 * Google My Business API
 * The Google My Business API provides an interface for managing business location information on Google.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRepeatedEnumAttributeValue.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRepeatedEnumAttributeValue::OAIRepeatedEnumAttributeValue(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRepeatedEnumAttributeValue::OAIRepeatedEnumAttributeValue() {
    this->initializeModel();
}

OAIRepeatedEnumAttributeValue::~OAIRepeatedEnumAttributeValue() {}

void OAIRepeatedEnumAttributeValue::initializeModel() {

    m_set_values_isSet = false;
    m_set_values_isValid = false;

    m_unset_values_isSet = false;
    m_unset_values_isValid = false;
}

void OAIRepeatedEnumAttributeValue::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRepeatedEnumAttributeValue::fromJsonObject(QJsonObject json) {

    m_set_values_isValid = ::OpenAPI::fromJsonValue(m_set_values, json[QString("setValues")]);
    m_set_values_isSet = !json[QString("setValues")].isNull() && m_set_values_isValid;

    m_unset_values_isValid = ::OpenAPI::fromJsonValue(m_unset_values, json[QString("unsetValues")]);
    m_unset_values_isSet = !json[QString("unsetValues")].isNull() && m_unset_values_isValid;
}

QString OAIRepeatedEnumAttributeValue::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRepeatedEnumAttributeValue::asJsonObject() const {
    QJsonObject obj;
    if (m_set_values.size() > 0) {
        obj.insert(QString("setValues"), ::OpenAPI::toJsonValue(m_set_values));
    }
    if (m_unset_values.size() > 0) {
        obj.insert(QString("unsetValues"), ::OpenAPI::toJsonValue(m_unset_values));
    }
    return obj;
}

QList<QString> OAIRepeatedEnumAttributeValue::getSetValues() const {
    return m_set_values;
}
void OAIRepeatedEnumAttributeValue::setSetValues(const QList<QString> &set_values) {
    m_set_values = set_values;
    m_set_values_isSet = true;
}

bool OAIRepeatedEnumAttributeValue::is_set_values_Set() const{
    return m_set_values_isSet;
}

bool OAIRepeatedEnumAttributeValue::is_set_values_Valid() const{
    return m_set_values_isValid;
}

QList<QString> OAIRepeatedEnumAttributeValue::getUnsetValues() const {
    return m_unset_values;
}
void OAIRepeatedEnumAttributeValue::setUnsetValues(const QList<QString> &unset_values) {
    m_unset_values = unset_values;
    m_unset_values_isSet = true;
}

bool OAIRepeatedEnumAttributeValue::is_unset_values_Set() const{
    return m_unset_values_isSet;
}

bool OAIRepeatedEnumAttributeValue::is_unset_values_Valid() const{
    return m_unset_values_isValid;
}

bool OAIRepeatedEnumAttributeValue::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_set_values.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_unset_values.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRepeatedEnumAttributeValue::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
