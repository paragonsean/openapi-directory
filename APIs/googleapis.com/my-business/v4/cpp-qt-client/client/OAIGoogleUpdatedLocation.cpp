/**
 * Google My Business API
 * The Google My Business API provides an interface for managing business location information on Google.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleUpdatedLocation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleUpdatedLocation::OAIGoogleUpdatedLocation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleUpdatedLocation::OAIGoogleUpdatedLocation() {
    this->initializeModel();
}

OAIGoogleUpdatedLocation::~OAIGoogleUpdatedLocation() {}

void OAIGoogleUpdatedLocation::initializeModel() {

    m_diff_mask_isSet = false;
    m_diff_mask_isValid = false;

    m_location_isSet = false;
    m_location_isValid = false;
}

void OAIGoogleUpdatedLocation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleUpdatedLocation::fromJsonObject(QJsonObject json) {

    m_diff_mask_isValid = ::OpenAPI::fromJsonValue(m_diff_mask, json[QString("diffMask")]);
    m_diff_mask_isSet = !json[QString("diffMask")].isNull() && m_diff_mask_isValid;

    m_location_isValid = ::OpenAPI::fromJsonValue(m_location, json[QString("location")]);
    m_location_isSet = !json[QString("location")].isNull() && m_location_isValid;
}

QString OAIGoogleUpdatedLocation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleUpdatedLocation::asJsonObject() const {
    QJsonObject obj;
    if (m_diff_mask_isSet) {
        obj.insert(QString("diffMask"), ::OpenAPI::toJsonValue(m_diff_mask));
    }
    if (m_location.isSet()) {
        obj.insert(QString("location"), ::OpenAPI::toJsonValue(m_location));
    }
    return obj;
}

QString OAIGoogleUpdatedLocation::getDiffMask() const {
    return m_diff_mask;
}
void OAIGoogleUpdatedLocation::setDiffMask(const QString &diff_mask) {
    m_diff_mask = diff_mask;
    m_diff_mask_isSet = true;
}

bool OAIGoogleUpdatedLocation::is_diff_mask_Set() const{
    return m_diff_mask_isSet;
}

bool OAIGoogleUpdatedLocation::is_diff_mask_Valid() const{
    return m_diff_mask_isValid;
}

OAILocation OAIGoogleUpdatedLocation::getLocation() const {
    return m_location;
}
void OAIGoogleUpdatedLocation::setLocation(const OAILocation &location) {
    m_location = location;
    m_location_isSet = true;
}

bool OAIGoogleUpdatedLocation::is_location_Set() const{
    return m_location_isSet;
}

bool OAIGoogleUpdatedLocation::is_location_Valid() const{
    return m_location_isValid;
}

bool OAIGoogleUpdatedLocation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_diff_mask_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_location.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleUpdatedLocation::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
