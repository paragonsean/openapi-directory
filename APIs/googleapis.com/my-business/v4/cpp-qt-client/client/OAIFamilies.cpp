/**
 * Google My Business API
 * The Google My Business API provides an interface for managing business location information on Google.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFamilies.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFamilies::OAIFamilies(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFamilies::OAIFamilies() {
    this->initializeModel();
}

OAIFamilies::~OAIFamilies() {}

void OAIFamilies::initializeModel() {

    m_babysitting_isSet = false;
    m_babysitting_isValid = false;

    m_babysitting_exception_isSet = false;
    m_babysitting_exception_isValid = false;

    m_kids_activities_isSet = false;
    m_kids_activities_isValid = false;

    m_kids_activities_exception_isSet = false;
    m_kids_activities_exception_isValid = false;

    m_kids_club_isSet = false;
    m_kids_club_isValid = false;

    m_kids_club_exception_isSet = false;
    m_kids_club_exception_isValid = false;
}

void OAIFamilies::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFamilies::fromJsonObject(QJsonObject json) {

    m_babysitting_isValid = ::OpenAPI::fromJsonValue(m_babysitting, json[QString("babysitting")]);
    m_babysitting_isSet = !json[QString("babysitting")].isNull() && m_babysitting_isValid;

    m_babysitting_exception_isValid = ::OpenAPI::fromJsonValue(m_babysitting_exception, json[QString("babysittingException")]);
    m_babysitting_exception_isSet = !json[QString("babysittingException")].isNull() && m_babysitting_exception_isValid;

    m_kids_activities_isValid = ::OpenAPI::fromJsonValue(m_kids_activities, json[QString("kidsActivities")]);
    m_kids_activities_isSet = !json[QString("kidsActivities")].isNull() && m_kids_activities_isValid;

    m_kids_activities_exception_isValid = ::OpenAPI::fromJsonValue(m_kids_activities_exception, json[QString("kidsActivitiesException")]);
    m_kids_activities_exception_isSet = !json[QString("kidsActivitiesException")].isNull() && m_kids_activities_exception_isValid;

    m_kids_club_isValid = ::OpenAPI::fromJsonValue(m_kids_club, json[QString("kidsClub")]);
    m_kids_club_isSet = !json[QString("kidsClub")].isNull() && m_kids_club_isValid;

    m_kids_club_exception_isValid = ::OpenAPI::fromJsonValue(m_kids_club_exception, json[QString("kidsClubException")]);
    m_kids_club_exception_isSet = !json[QString("kidsClubException")].isNull() && m_kids_club_exception_isValid;
}

QString OAIFamilies::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFamilies::asJsonObject() const {
    QJsonObject obj;
    if (m_babysitting_isSet) {
        obj.insert(QString("babysitting"), ::OpenAPI::toJsonValue(m_babysitting));
    }
    if (m_babysitting_exception_isSet) {
        obj.insert(QString("babysittingException"), ::OpenAPI::toJsonValue(m_babysitting_exception));
    }
    if (m_kids_activities_isSet) {
        obj.insert(QString("kidsActivities"), ::OpenAPI::toJsonValue(m_kids_activities));
    }
    if (m_kids_activities_exception_isSet) {
        obj.insert(QString("kidsActivitiesException"), ::OpenAPI::toJsonValue(m_kids_activities_exception));
    }
    if (m_kids_club_isSet) {
        obj.insert(QString("kidsClub"), ::OpenAPI::toJsonValue(m_kids_club));
    }
    if (m_kids_club_exception_isSet) {
        obj.insert(QString("kidsClubException"), ::OpenAPI::toJsonValue(m_kids_club_exception));
    }
    return obj;
}

bool OAIFamilies::isBabysitting() const {
    return m_babysitting;
}
void OAIFamilies::setBabysitting(const bool &babysitting) {
    m_babysitting = babysitting;
    m_babysitting_isSet = true;
}

bool OAIFamilies::is_babysitting_Set() const{
    return m_babysitting_isSet;
}

bool OAIFamilies::is_babysitting_Valid() const{
    return m_babysitting_isValid;
}

QString OAIFamilies::getBabysittingException() const {
    return m_babysitting_exception;
}
void OAIFamilies::setBabysittingException(const QString &babysitting_exception) {
    m_babysitting_exception = babysitting_exception;
    m_babysitting_exception_isSet = true;
}

bool OAIFamilies::is_babysitting_exception_Set() const{
    return m_babysitting_exception_isSet;
}

bool OAIFamilies::is_babysitting_exception_Valid() const{
    return m_babysitting_exception_isValid;
}

bool OAIFamilies::isKidsActivities() const {
    return m_kids_activities;
}
void OAIFamilies::setKidsActivities(const bool &kids_activities) {
    m_kids_activities = kids_activities;
    m_kids_activities_isSet = true;
}

bool OAIFamilies::is_kids_activities_Set() const{
    return m_kids_activities_isSet;
}

bool OAIFamilies::is_kids_activities_Valid() const{
    return m_kids_activities_isValid;
}

QString OAIFamilies::getKidsActivitiesException() const {
    return m_kids_activities_exception;
}
void OAIFamilies::setKidsActivitiesException(const QString &kids_activities_exception) {
    m_kids_activities_exception = kids_activities_exception;
    m_kids_activities_exception_isSet = true;
}

bool OAIFamilies::is_kids_activities_exception_Set() const{
    return m_kids_activities_exception_isSet;
}

bool OAIFamilies::is_kids_activities_exception_Valid() const{
    return m_kids_activities_exception_isValid;
}

bool OAIFamilies::isKidsClub() const {
    return m_kids_club;
}
void OAIFamilies::setKidsClub(const bool &kids_club) {
    m_kids_club = kids_club;
    m_kids_club_isSet = true;
}

bool OAIFamilies::is_kids_club_Set() const{
    return m_kids_club_isSet;
}

bool OAIFamilies::is_kids_club_Valid() const{
    return m_kids_club_isValid;
}

QString OAIFamilies::getKidsClubException() const {
    return m_kids_club_exception;
}
void OAIFamilies::setKidsClubException(const QString &kids_club_exception) {
    m_kids_club_exception = kids_club_exception;
    m_kids_club_exception_isSet = true;
}

bool OAIFamilies::is_kids_club_exception_Set() const{
    return m_kids_club_exception_isSet;
}

bool OAIFamilies::is_kids_club_exception_Valid() const{
    return m_kids_club_exception_isValid;
}

bool OAIFamilies::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_babysitting_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_babysitting_exception_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_kids_activities_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_kids_activities_exception_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_kids_club_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_kids_club_exception_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFamilies::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
