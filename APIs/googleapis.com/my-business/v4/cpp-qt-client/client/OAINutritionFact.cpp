/**
 * Google My Business API
 * The Google My Business API provides an interface for managing business location information on Google.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINutritionFact.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINutritionFact::OAINutritionFact(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINutritionFact::OAINutritionFact() {
    this->initializeModel();
}

OAINutritionFact::~OAINutritionFact() {}

void OAINutritionFact::initializeModel() {

    m_lower_amount_isSet = false;
    m_lower_amount_isValid = false;

    m_unit_isSet = false;
    m_unit_isValid = false;

    m_upper_amount_isSet = false;
    m_upper_amount_isValid = false;
}

void OAINutritionFact::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAINutritionFact::fromJsonObject(QJsonObject json) {

    m_lower_amount_isValid = ::OpenAPI::fromJsonValue(m_lower_amount, json[QString("lowerAmount")]);
    m_lower_amount_isSet = !json[QString("lowerAmount")].isNull() && m_lower_amount_isValid;

    m_unit_isValid = ::OpenAPI::fromJsonValue(m_unit, json[QString("unit")]);
    m_unit_isSet = !json[QString("unit")].isNull() && m_unit_isValid;

    m_upper_amount_isValid = ::OpenAPI::fromJsonValue(m_upper_amount, json[QString("upperAmount")]);
    m_upper_amount_isSet = !json[QString("upperAmount")].isNull() && m_upper_amount_isValid;
}

QString OAINutritionFact::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAINutritionFact::asJsonObject() const {
    QJsonObject obj;
    if (m_lower_amount_isSet) {
        obj.insert(QString("lowerAmount"), ::OpenAPI::toJsonValue(m_lower_amount));
    }
    if (m_unit_isSet) {
        obj.insert(QString("unit"), ::OpenAPI::toJsonValue(m_unit));
    }
    if (m_upper_amount_isSet) {
        obj.insert(QString("upperAmount"), ::OpenAPI::toJsonValue(m_upper_amount));
    }
    return obj;
}

double OAINutritionFact::getLowerAmount() const {
    return m_lower_amount;
}
void OAINutritionFact::setLowerAmount(const double &lower_amount) {
    m_lower_amount = lower_amount;
    m_lower_amount_isSet = true;
}

bool OAINutritionFact::is_lower_amount_Set() const{
    return m_lower_amount_isSet;
}

bool OAINutritionFact::is_lower_amount_Valid() const{
    return m_lower_amount_isValid;
}

QString OAINutritionFact::getUnit() const {
    return m_unit;
}
void OAINutritionFact::setUnit(const QString &unit) {
    m_unit = unit;
    m_unit_isSet = true;
}

bool OAINutritionFact::is_unit_Set() const{
    return m_unit_isSet;
}

bool OAINutritionFact::is_unit_Valid() const{
    return m_unit_isValid;
}

double OAINutritionFact::getUpperAmount() const {
    return m_upper_amount;
}
void OAINutritionFact::setUpperAmount(const double &upper_amount) {
    m_upper_amount = upper_amount;
    m_upper_amount_isSet = true;
}

bool OAINutritionFact::is_upper_amount_Set() const{
    return m_upper_amount_isSet;
}

bool OAINutritionFact::is_upper_amount_Valid() const{
    return m_upper_amount_isValid;
}

bool OAINutritionFact::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_lower_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_unit_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_upper_amount_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAINutritionFact::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
