# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ReviewReply(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, comment: str=None, update_time: str=None):
        """ReviewReply - a model defined in OpenAPI

        :param comment: The comment of this ReviewReply.
        :param update_time: The update_time of this ReviewReply.
        """
        self.openapi_types = {
            'comment': str,
            'update_time': str
        }

        self.attribute_map = {
            'comment': 'comment',
            'update_time': 'updateTime'
        }

        self._comment = comment
        self._update_time = update_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReviewReply':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReviewReply of this ReviewReply.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def comment(self):
        """Gets the comment of this ReviewReply.

        The body of the reply as plain text with markups. The maximum length is 4096 bytes.

        :return: The comment of this ReviewReply.
        :rtype: str
        """
        return self._comment

    @comment.setter
    def comment(self, comment):
        """Sets the comment of this ReviewReply.

        The body of the reply as plain text with markups. The maximum length is 4096 bytes.

        :param comment: The comment of this ReviewReply.
        :type comment: str
        """

        self._comment = comment

    @property
    def update_time(self):
        """Gets the update_time of this ReviewReply.

        Output only. The timestamp for when the reply was last modified.

        :return: The update_time of this ReviewReply.
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this ReviewReply.

        Output only. The timestamp for when the reply was last modified.

        :param update_time: The update_time of this ReviewReply.
        :type update_time: str
        """

        self._update_time = update_time
