# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.time_dimension import TimeDimension
from openapi_server import util


class DimensionalMetricValue(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, metric_option: str=None, time_dimension: TimeDimension=None, value: str=None):
        """DimensionalMetricValue - a model defined in OpenAPI

        :param metric_option: The metric_option of this DimensionalMetricValue.
        :param time_dimension: The time_dimension of this DimensionalMetricValue.
        :param value: The value of this DimensionalMetricValue.
        """
        self.openapi_types = {
            'metric_option': str,
            'time_dimension': TimeDimension,
            'value': str
        }

        self.attribute_map = {
            'metric_option': 'metricOption',
            'time_dimension': 'timeDimension',
            'value': 'value'
        }

        self._metric_option = metric_option
        self._time_dimension = time_dimension
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DimensionalMetricValue':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DimensionalMetricValue of this DimensionalMetricValue.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def metric_option(self):
        """Gets the metric_option of this DimensionalMetricValue.

        The option that requested this dimensional value.

        :return: The metric_option of this DimensionalMetricValue.
        :rtype: str
        """
        return self._metric_option

    @metric_option.setter
    def metric_option(self, metric_option):
        """Sets the metric_option of this DimensionalMetricValue.

        The option that requested this dimensional value.

        :param metric_option: The metric_option of this DimensionalMetricValue.
        :type metric_option: str
        """
        allowed_values = ["METRIC_OPTION_UNSPECIFIED", "AGGREGATED_TOTAL", "AGGREGATED_DAILY", "BREAKDOWN_DAY_OF_WEEK", "BREAKDOWN_HOUR_OF_DAY"]  # noqa: E501
        if metric_option not in allowed_values:
            raise ValueError(
                "Invalid value for `metric_option` ({0}), must be one of {1}"
                .format(metric_option, allowed_values)
            )

        self._metric_option = metric_option

    @property
    def time_dimension(self):
        """Gets the time_dimension of this DimensionalMetricValue.


        :return: The time_dimension of this DimensionalMetricValue.
        :rtype: TimeDimension
        """
        return self._time_dimension

    @time_dimension.setter
    def time_dimension(self, time_dimension):
        """Sets the time_dimension of this DimensionalMetricValue.


        :param time_dimension: The time_dimension of this DimensionalMetricValue.
        :type time_dimension: TimeDimension
        """

        self._time_dimension = time_dimension

    @property
    def value(self):
        """Gets the value of this DimensionalMetricValue.

        The value. If no value is set, then the requested data is missing.

        :return: The value of this DimensionalMetricValue.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this DimensionalMetricValue.

        The value. If no value is set, then the requested data is missing.

        :param value: The value of this DimensionalMetricValue.
        :type value: str
        """

        self._value = value
