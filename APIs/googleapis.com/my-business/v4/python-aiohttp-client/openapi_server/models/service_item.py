# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.free_form_service_item import FreeFormServiceItem
from openapi_server.models.money import Money
from openapi_server.models.structured_service_item import StructuredServiceItem
from openapi_server import util


class ServiceItem(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, free_form_service_item: FreeFormServiceItem=None, is_offered: bool=None, price: Money=None, structured_service_item: StructuredServiceItem=None):
        """ServiceItem - a model defined in OpenAPI

        :param free_form_service_item: The free_form_service_item of this ServiceItem.
        :param is_offered: The is_offered of this ServiceItem.
        :param price: The price of this ServiceItem.
        :param structured_service_item: The structured_service_item of this ServiceItem.
        """
        self.openapi_types = {
            'free_form_service_item': FreeFormServiceItem,
            'is_offered': bool,
            'price': Money,
            'structured_service_item': StructuredServiceItem
        }

        self.attribute_map = {
            'free_form_service_item': 'freeFormServiceItem',
            'is_offered': 'isOffered',
            'price': 'price',
            'structured_service_item': 'structuredServiceItem'
        }

        self._free_form_service_item = free_form_service_item
        self._is_offered = is_offered
        self._price = price
        self._structured_service_item = structured_service_item

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ServiceItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ServiceItem of this ServiceItem.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def free_form_service_item(self):
        """Gets the free_form_service_item of this ServiceItem.


        :return: The free_form_service_item of this ServiceItem.
        :rtype: FreeFormServiceItem
        """
        return self._free_form_service_item

    @free_form_service_item.setter
    def free_form_service_item(self, free_form_service_item):
        """Sets the free_form_service_item of this ServiceItem.


        :param free_form_service_item: The free_form_service_item of this ServiceItem.
        :type free_form_service_item: FreeFormServiceItem
        """

        self._free_form_service_item = free_form_service_item

    @property
    def is_offered(self):
        """Gets the is_offered of this ServiceItem.

        Optional. This field decides whether or not the input service is offered by the merchant.

        :return: The is_offered of this ServiceItem.
        :rtype: bool
        """
        return self._is_offered

    @is_offered.setter
    def is_offered(self, is_offered):
        """Sets the is_offered of this ServiceItem.

        Optional. This field decides whether or not the input service is offered by the merchant.

        :param is_offered: The is_offered of this ServiceItem.
        :type is_offered: bool
        """

        self._is_offered = is_offered

    @property
    def price(self):
        """Gets the price of this ServiceItem.


        :return: The price of this ServiceItem.
        :rtype: Money
        """
        return self._price

    @price.setter
    def price(self, price):
        """Sets the price of this ServiceItem.


        :param price: The price of this ServiceItem.
        :type price: Money
        """

        self._price = price

    @property
    def structured_service_item(self):
        """Gets the structured_service_item of this ServiceItem.


        :return: The structured_service_item of this ServiceItem.
        :rtype: StructuredServiceItem
        """
        return self._structured_service_item

    @structured_service_item.setter
    def structured_service_item(self, structured_service_item):
        """Sets the structured_service_item of this ServiceItem.


        :param structured_service_item: The structured_service_item of this ServiceItem.
        :type structured_service_item: StructuredServiceItem
        """

        self._structured_service_item = structured_service_item
