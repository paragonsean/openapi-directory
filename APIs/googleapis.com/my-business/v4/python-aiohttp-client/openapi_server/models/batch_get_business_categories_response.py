# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.category import Category
from openapi_server import util


class BatchGetBusinessCategoriesResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, categories: List[Category]=None):
        """BatchGetBusinessCategoriesResponse - a model defined in OpenAPI

        :param categories: The categories of this BatchGetBusinessCategoriesResponse.
        """
        self.openapi_types = {
            'categories': List[Category]
        }

        self.attribute_map = {
            'categories': 'categories'
        }

        self._categories = categories

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BatchGetBusinessCategoriesResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BatchGetBusinessCategoriesResponse of this BatchGetBusinessCategoriesResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def categories(self):
        """Gets the categories of this BatchGetBusinessCategoriesResponse.

        Categories that match the GConcept ids provided in the request. They will not come in the same order as category ids in the request.

        :return: The categories of this BatchGetBusinessCategoriesResponse.
        :rtype: List[Category]
        """
        return self._categories

    @categories.setter
    def categories(self, categories):
        """Sets the categories of this BatchGetBusinessCategoriesResponse.

        Categories that match the GConcept ids provided in the request. They will not come in the same order as category ids in the request.

        :param categories: The categories of this BatchGetBusinessCategoriesResponse.
        :type categories: List[Category]
        """

        self._categories = categories
