# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.metric_value import MetricValue
from openapi_server import util


class LocationMetrics(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, location_name: str=None, metric_values: List[MetricValue]=None, time_zone: str=None):
        """LocationMetrics - a model defined in OpenAPI

        :param location_name: The location_name of this LocationMetrics.
        :param metric_values: The metric_values of this LocationMetrics.
        :param time_zone: The time_zone of this LocationMetrics.
        """
        self.openapi_types = {
            'location_name': str,
            'metric_values': List[MetricValue],
            'time_zone': str
        }

        self.attribute_map = {
            'location_name': 'locationName',
            'metric_values': 'metricValues',
            'time_zone': 'timeZone'
        }

        self._location_name = location_name
        self._metric_values = metric_values
        self._time_zone = time_zone

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LocationMetrics':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LocationMetrics of this LocationMetrics.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def location_name(self):
        """Gets the location_name of this LocationMetrics.

        The location resource name these values belong to.

        :return: The location_name of this LocationMetrics.
        :rtype: str
        """
        return self._location_name

    @location_name.setter
    def location_name(self, location_name):
        """Sets the location_name of this LocationMetrics.

        The location resource name these values belong to.

        :param location_name: The location_name of this LocationMetrics.
        :type location_name: str
        """

        self._location_name = location_name

    @property
    def metric_values(self):
        """Gets the metric_values of this LocationMetrics.

        A list of values for the requested metrics.

        :return: The metric_values of this LocationMetrics.
        :rtype: List[MetricValue]
        """
        return self._metric_values

    @metric_values.setter
    def metric_values(self, metric_values):
        """Sets the metric_values of this LocationMetrics.

        A list of values for the requested metrics.

        :param metric_values: The metric_values of this LocationMetrics.
        :type metric_values: List[MetricValue]
        """

        self._metric_values = metric_values

    @property
    def time_zone(self):
        """Gets the time_zone of this LocationMetrics.

        IANA timezone for the location.

        :return: The time_zone of this LocationMetrics.
        :rtype: str
        """
        return self._time_zone

    @time_zone.setter
    def time_zone(self, time_zone):
        """Sets the time_zone of this LocationMetrics.

        IANA timezone for the location.

        :param time_zone: The time_zone of this LocationMetrics.
        :type time_zone: str
        """

        self._time_zone = time_zone
