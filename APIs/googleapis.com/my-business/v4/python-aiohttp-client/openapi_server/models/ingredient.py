# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.menu_label import MenuLabel
from openapi_server import util


class Ingredient(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, labels: List[MenuLabel]=None):
        """Ingredient - a model defined in OpenAPI

        :param labels: The labels of this Ingredient.
        """
        self.openapi_types = {
            'labels': List[MenuLabel]
        }

        self.attribute_map = {
            'labels': 'labels'
        }

        self._labels = labels

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Ingredient':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Ingredient of this Ingredient.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def labels(self):
        """Gets the labels of this Ingredient.

        Required. Labels to describe ingredient. Display names should be 140 characters or less, with descriptions 1,000 characters or less. At least one set of labels is required.

        :return: The labels of this Ingredient.
        :rtype: List[MenuLabel]
        """
        return self._labels

    @labels.setter
    def labels(self, labels):
        """Sets the labels of this Ingredient.

        Required. Labels to describe ingredient. Display names should be 140 characters or less, with descriptions 1,000 characters or less. At least one set of labels is required.

        :param labels: The labels of this Ingredient.
        :type labels: List[MenuLabel]
        """

        self._labels = labels
