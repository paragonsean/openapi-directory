# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.media_item import MediaItem
from openapi_server import util


class ListMediaItemsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, media_items: List[MediaItem]=None, next_page_token: str=None, total_media_item_count: int=None):
        """ListMediaItemsResponse - a model defined in OpenAPI

        :param media_items: The media_items of this ListMediaItemsResponse.
        :param next_page_token: The next_page_token of this ListMediaItemsResponse.
        :param total_media_item_count: The total_media_item_count of this ListMediaItemsResponse.
        """
        self.openapi_types = {
            'media_items': List[MediaItem],
            'next_page_token': str,
            'total_media_item_count': int
        }

        self.attribute_map = {
            'media_items': 'mediaItems',
            'next_page_token': 'nextPageToken',
            'total_media_item_count': 'totalMediaItemCount'
        }

        self._media_items = media_items
        self._next_page_token = next_page_token
        self._total_media_item_count = total_media_item_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListMediaItemsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListMediaItemsResponse of this ListMediaItemsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def media_items(self):
        """Gets the media_items of this ListMediaItemsResponse.

        The returned list of media items.

        :return: The media_items of this ListMediaItemsResponse.
        :rtype: List[MediaItem]
        """
        return self._media_items

    @media_items.setter
    def media_items(self, media_items):
        """Sets the media_items of this ListMediaItemsResponse.

        The returned list of media items.

        :param media_items: The media_items of this ListMediaItemsResponse.
        :type media_items: List[MediaItem]
        """

        self._media_items = media_items

    @property
    def next_page_token(self):
        """Gets the next_page_token of this ListMediaItemsResponse.

        If there are more media items than the requested page size, then this field is populated with a token to fetch the next page of media items on a subsequent call to ListMediaItems.

        :return: The next_page_token of this ListMediaItemsResponse.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this ListMediaItemsResponse.

        If there are more media items than the requested page size, then this field is populated with a token to fetch the next page of media items on a subsequent call to ListMediaItems.

        :param next_page_token: The next_page_token of this ListMediaItemsResponse.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token

    @property
    def total_media_item_count(self):
        """Gets the total_media_item_count of this ListMediaItemsResponse.

        The total number of media items for this location, irrespective of pagination.

        :return: The total_media_item_count of this ListMediaItemsResponse.
        :rtype: int
        """
        return self._total_media_item_count

    @total_media_item_count.setter
    def total_media_item_count(self, total_media_item_count):
        """Sets the total_media_item_count of this ListMediaItemsResponse.

        The total number of media items for this location, irrespective of pagination.

        :param total_media_item_count: The total_media_item_count of this ListMediaItemsResponse.
        :type total_media_item_count: int
        """

        self._total_media_item_count = total_media_item_count
