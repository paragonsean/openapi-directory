# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.label import Label
from openapi_server.models.money import Money
from openapi_server import util


class Item(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, item_id: str=None, labels: List[Label]=None, price: Money=None):
        """Item - a model defined in OpenAPI

        :param item_id: The item_id of this Item.
        :param labels: The labels of this Item.
        :param price: The price of this Item.
        """
        self.openapi_types = {
            'item_id': str,
            'labels': List[Label],
            'price': Money
        }

        self.attribute_map = {
            'item_id': 'itemId',
            'labels': 'labels',
            'price': 'price'
        }

        self._item_id = item_id
        self._labels = labels
        self._price = price

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Item':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Item of this Item.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def item_id(self):
        """Gets the item_id of this Item.

        Required. ID for the item. Price list, section, and item IDs cannot be duplicated within this Location.

        :return: The item_id of this Item.
        :rtype: str
        """
        return self._item_id

    @item_id.setter
    def item_id(self, item_id):
        """Sets the item_id of this Item.

        Required. ID for the item. Price list, section, and item IDs cannot be duplicated within this Location.

        :param item_id: The item_id of this Item.
        :type item_id: str
        """

        self._item_id = item_id

    @property
    def labels(self):
        """Gets the labels of this Item.

        Required. Language-tagged labels for the item. We recommend that item names be 140 characters or less, and descriptions 250 characters or less. At least one set of labels is required.

        :return: The labels of this Item.
        :rtype: List[Label]
        """
        return self._labels

    @labels.setter
    def labels(self, labels):
        """Sets the labels of this Item.

        Required. Language-tagged labels for the item. We recommend that item names be 140 characters or less, and descriptions 250 characters or less. At least one set of labels is required.

        :param labels: The labels of this Item.
        :type labels: List[Label]
        """

        self._labels = labels

    @property
    def price(self):
        """Gets the price of this Item.


        :return: The price of this Item.
        :rtype: Money
        """
        return self._price

    @price.setter
    def price(self, price):
        """Sets the price of this Item.


        :param price: The price of this Item.
        :type price: Money
        """

        self._price = price
