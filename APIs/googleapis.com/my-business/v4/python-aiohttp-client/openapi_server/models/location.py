# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.ad_words_location_extensions import AdWordsLocationExtensions
from openapi_server.models.attribute import Attribute
from openapi_server.models.business_hours import BusinessHours
from openapi_server.models.category import Category
from openapi_server.models.lat_lng import LatLng
from openapi_server.models.location_key import LocationKey
from openapi_server.models.location_state import LocationState
from openapi_server.models.metadata import Metadata
from openapi_server.models.more_hours import MoreHours
from openapi_server.models.open_info import OpenInfo
from openapi_server.models.postal_address import PostalAddress
from openapi_server.models.price_list import PriceList
from openapi_server.models.profile import Profile
from openapi_server.models.relationship_data import RelationshipData
from openapi_server.models.service_area_business import ServiceAreaBusiness
from openapi_server.models.special_hours import SpecialHours
from openapi_server import util


class Location(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ad_words_location_extensions: AdWordsLocationExtensions=None, additional_categories: List[Category]=None, additional_phones: List[str]=None, address: PostalAddress=None, attributes: List[Attribute]=None, labels: List[str]=None, language_code: str=None, latlng: LatLng=None, location_key: LocationKey=None, location_name: str=None, location_state: LocationState=None, metadata: Metadata=None, more_hours: List[MoreHours]=None, name: str=None, open_info: OpenInfo=None, price_lists: List[PriceList]=None, primary_category: Category=None, primary_phone: str=None, profile: Profile=None, regular_hours: BusinessHours=None, relationship_data: RelationshipData=None, service_area: ServiceAreaBusiness=None, special_hours: SpecialHours=None, store_code: str=None, website_url: str=None):
        """Location - a model defined in OpenAPI

        :param ad_words_location_extensions: The ad_words_location_extensions of this Location.
        :param additional_categories: The additional_categories of this Location.
        :param additional_phones: The additional_phones of this Location.
        :param address: The address of this Location.
        :param attributes: The attributes of this Location.
        :param labels: The labels of this Location.
        :param language_code: The language_code of this Location.
        :param latlng: The latlng of this Location.
        :param location_key: The location_key of this Location.
        :param location_name: The location_name of this Location.
        :param location_state: The location_state of this Location.
        :param metadata: The metadata of this Location.
        :param more_hours: The more_hours of this Location.
        :param name: The name of this Location.
        :param open_info: The open_info of this Location.
        :param price_lists: The price_lists of this Location.
        :param primary_category: The primary_category of this Location.
        :param primary_phone: The primary_phone of this Location.
        :param profile: The profile of this Location.
        :param regular_hours: The regular_hours of this Location.
        :param relationship_data: The relationship_data of this Location.
        :param service_area: The service_area of this Location.
        :param special_hours: The special_hours of this Location.
        :param store_code: The store_code of this Location.
        :param website_url: The website_url of this Location.
        """
        self.openapi_types = {
            'ad_words_location_extensions': AdWordsLocationExtensions,
            'additional_categories': List[Category],
            'additional_phones': List[str],
            'address': PostalAddress,
            'attributes': List[Attribute],
            'labels': List[str],
            'language_code': str,
            'latlng': LatLng,
            'location_key': LocationKey,
            'location_name': str,
            'location_state': LocationState,
            'metadata': Metadata,
            'more_hours': List[MoreHours],
            'name': str,
            'open_info': OpenInfo,
            'price_lists': List[PriceList],
            'primary_category': Category,
            'primary_phone': str,
            'profile': Profile,
            'regular_hours': BusinessHours,
            'relationship_data': RelationshipData,
            'service_area': ServiceAreaBusiness,
            'special_hours': SpecialHours,
            'store_code': str,
            'website_url': str
        }

        self.attribute_map = {
            'ad_words_location_extensions': 'adWordsLocationExtensions',
            'additional_categories': 'additionalCategories',
            'additional_phones': 'additionalPhones',
            'address': 'address',
            'attributes': 'attributes',
            'labels': 'labels',
            'language_code': 'languageCode',
            'latlng': 'latlng',
            'location_key': 'locationKey',
            'location_name': 'locationName',
            'location_state': 'locationState',
            'metadata': 'metadata',
            'more_hours': 'moreHours',
            'name': 'name',
            'open_info': 'openInfo',
            'price_lists': 'priceLists',
            'primary_category': 'primaryCategory',
            'primary_phone': 'primaryPhone',
            'profile': 'profile',
            'regular_hours': 'regularHours',
            'relationship_data': 'relationshipData',
            'service_area': 'serviceArea',
            'special_hours': 'specialHours',
            'store_code': 'storeCode',
            'website_url': 'websiteUrl'
        }

        self._ad_words_location_extensions = ad_words_location_extensions
        self._additional_categories = additional_categories
        self._additional_phones = additional_phones
        self._address = address
        self._attributes = attributes
        self._labels = labels
        self._language_code = language_code
        self._latlng = latlng
        self._location_key = location_key
        self._location_name = location_name
        self._location_state = location_state
        self._metadata = metadata
        self._more_hours = more_hours
        self._name = name
        self._open_info = open_info
        self._price_lists = price_lists
        self._primary_category = primary_category
        self._primary_phone = primary_phone
        self._profile = profile
        self._regular_hours = regular_hours
        self._relationship_data = relationship_data
        self._service_area = service_area
        self._special_hours = special_hours
        self._store_code = store_code
        self._website_url = website_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Location':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Location of this Location.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ad_words_location_extensions(self):
        """Gets the ad_words_location_extensions of this Location.


        :return: The ad_words_location_extensions of this Location.
        :rtype: AdWordsLocationExtensions
        """
        return self._ad_words_location_extensions

    @ad_words_location_extensions.setter
    def ad_words_location_extensions(self, ad_words_location_extensions):
        """Sets the ad_words_location_extensions of this Location.


        :param ad_words_location_extensions: The ad_words_location_extensions of this Location.
        :type ad_words_location_extensions: AdWordsLocationExtensions
        """

        self._ad_words_location_extensions = ad_words_location_extensions

    @property
    def additional_categories(self):
        """Gets the additional_categories of this Location.

        Additional categories to describe your business. Categories help your customers find accurate, specific results for services they're interested in. To keep your business information accurate and live, make sure that you use as few categories as possible to describe your overall core business. Choose categories that are as specific as possible, but representative of your main business.

        :return: The additional_categories of this Location.
        :rtype: List[Category]
        """
        return self._additional_categories

    @additional_categories.setter
    def additional_categories(self, additional_categories):
        """Sets the additional_categories of this Location.

        Additional categories to describe your business. Categories help your customers find accurate, specific results for services they're interested in. To keep your business information accurate and live, make sure that you use as few categories as possible to describe your overall core business. Choose categories that are as specific as possible, but representative of your main business.

        :param additional_categories: The additional_categories of this Location.
        :type additional_categories: List[Category]
        """

        self._additional_categories = additional_categories

    @property
    def additional_phones(self):
        """Gets the additional_phones of this Location.

        Up to two phone numbers (mobile or landline, no fax) at which your business can be called, in addition to your primary phone number.

        :return: The additional_phones of this Location.
        :rtype: List[str]
        """
        return self._additional_phones

    @additional_phones.setter
    def additional_phones(self, additional_phones):
        """Sets the additional_phones of this Location.

        Up to two phone numbers (mobile or landline, no fax) at which your business can be called, in addition to your primary phone number.

        :param additional_phones: The additional_phones of this Location.
        :type additional_phones: List[str]
        """

        self._additional_phones = additional_phones

    @property
    def address(self):
        """Gets the address of this Location.


        :return: The address of this Location.
        :rtype: PostalAddress
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this Location.


        :param address: The address of this Location.
        :type address: PostalAddress
        """

        self._address = address

    @property
    def attributes(self):
        """Gets the attributes of this Location.

        Attributes for this location.

        :return: The attributes of this Location.
        :rtype: List[Attribute]
        """
        return self._attributes

    @attributes.setter
    def attributes(self, attributes):
        """Sets the attributes of this Location.

        Attributes for this location.

        :param attributes: The attributes of this Location.
        :type attributes: List[Attribute]
        """

        self._attributes = attributes

    @property
    def labels(self):
        """Gets the labels of this Location.

        A collection of free-form strings to allow you to tag your business. These labels are NOT user facing; only you can see them. Limited to 255 characters (per label).

        :return: The labels of this Location.
        :rtype: List[str]
        """
        return self._labels

    @labels.setter
    def labels(self, labels):
        """Sets the labels of this Location.

        A collection of free-form strings to allow you to tag your business. These labels are NOT user facing; only you can see them. Limited to 255 characters (per label).

        :param labels: The labels of this Location.
        :type labels: List[str]
        """

        self._labels = labels

    @property
    def language_code(self):
        """Gets the language_code of this Location.

        The language of the location. Set during creation and not updateable.

        :return: The language_code of this Location.
        :rtype: str
        """
        return self._language_code

    @language_code.setter
    def language_code(self, language_code):
        """Sets the language_code of this Location.

        The language of the location. Set during creation and not updateable.

        :param language_code: The language_code of this Location.
        :type language_code: str
        """

        self._language_code = language_code

    @property
    def latlng(self):
        """Gets the latlng of this Location.


        :return: The latlng of this Location.
        :rtype: LatLng
        """
        return self._latlng

    @latlng.setter
    def latlng(self, latlng):
        """Sets the latlng of this Location.


        :param latlng: The latlng of this Location.
        :type latlng: LatLng
        """

        self._latlng = latlng

    @property
    def location_key(self):
        """Gets the location_key of this Location.


        :return: The location_key of this Location.
        :rtype: LocationKey
        """
        return self._location_key

    @location_key.setter
    def location_key(self, location_key):
        """Sets the location_key of this Location.


        :param location_key: The location_key of this Location.
        :type location_key: LocationKey
        """

        self._location_key = location_key

    @property
    def location_name(self):
        """Gets the location_name of this Location.

        Location name should reflect your business's real-world name, as used consistently on your storefront, website, and stationery, and as known to customers. Any additional information, when relevant, can be included in other fields of the resource (for example, `Address`, `Categories`). Don't add unnecessary information to your name (for example, prefer \"Google\" over \"Google Inc. - Mountain View Corporate Headquarters\"). Don't include marketing taglines, store codes, special characters, hours or closed/open status, phone numbers, website URLs, service/product information, location/address or directions, or containment information (for example, \"Chase ATM in Duane Reade\").

        :return: The location_name of this Location.
        :rtype: str
        """
        return self._location_name

    @location_name.setter
    def location_name(self, location_name):
        """Sets the location_name of this Location.

        Location name should reflect your business's real-world name, as used consistently on your storefront, website, and stationery, and as known to customers. Any additional information, when relevant, can be included in other fields of the resource (for example, `Address`, `Categories`). Don't add unnecessary information to your name (for example, prefer \"Google\" over \"Google Inc. - Mountain View Corporate Headquarters\"). Don't include marketing taglines, store codes, special characters, hours or closed/open status, phone numbers, website URLs, service/product information, location/address or directions, or containment information (for example, \"Chase ATM in Duane Reade\").

        :param location_name: The location_name of this Location.
        :type location_name: str
        """

        self._location_name = location_name

    @property
    def location_state(self):
        """Gets the location_state of this Location.


        :return: The location_state of this Location.
        :rtype: LocationState
        """
        return self._location_state

    @location_state.setter
    def location_state(self, location_state):
        """Sets the location_state of this Location.


        :param location_state: The location_state of this Location.
        :type location_state: LocationState
        """

        self._location_state = location_state

    @property
    def metadata(self):
        """Gets the metadata of this Location.


        :return: The metadata of this Location.
        :rtype: Metadata
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this Location.


        :param metadata: The metadata of this Location.
        :type metadata: Metadata
        """

        self._metadata = metadata

    @property
    def more_hours(self):
        """Gets the more_hours of this Location.

        More hours for a business's different departments or specific customers.

        :return: The more_hours of this Location.
        :rtype: List[MoreHours]
        """
        return self._more_hours

    @more_hours.setter
    def more_hours(self, more_hours):
        """Sets the more_hours of this Location.

        More hours for a business's different departments or specific customers.

        :param more_hours: The more_hours of this Location.
        :type more_hours: List[MoreHours]
        """

        self._more_hours = more_hours

    @property
    def name(self):
        """Gets the name of this Location.

        Google identifier for this location in the form: `accounts/{account_id}/locations/{location_id}` In the context of matches, this field will not be populated.

        :return: The name of this Location.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Location.

        Google identifier for this location in the form: `accounts/{account_id}/locations/{location_id}` In the context of matches, this field will not be populated.

        :param name: The name of this Location.
        :type name: str
        """

        self._name = name

    @property
    def open_info(self):
        """Gets the open_info of this Location.


        :return: The open_info of this Location.
        :rtype: OpenInfo
        """
        return self._open_info

    @open_info.setter
    def open_info(self, open_info):
        """Sets the open_info of this Location.


        :param open_info: The open_info of this Location.
        :type open_info: OpenInfo
        """

        self._open_info = open_info

    @property
    def price_lists(self):
        """Gets the price_lists of this Location.

        Price list information for this location.

        :return: The price_lists of this Location.
        :rtype: List[PriceList]
        """
        return self._price_lists

    @price_lists.setter
    def price_lists(self, price_lists):
        """Sets the price_lists of this Location.

        Price list information for this location.

        :param price_lists: The price_lists of this Location.
        :type price_lists: List[PriceList]
        """

        self._price_lists = price_lists

    @property
    def primary_category(self):
        """Gets the primary_category of this Location.


        :return: The primary_category of this Location.
        :rtype: Category
        """
        return self._primary_category

    @primary_category.setter
    def primary_category(self, primary_category):
        """Sets the primary_category of this Location.


        :param primary_category: The primary_category of this Location.
        :type primary_category: Category
        """

        self._primary_category = primary_category

    @property
    def primary_phone(self):
        """Gets the primary_phone of this Location.

        A phone number that connects to your individual business location as directly as possible. Use a local phone number instead of a central, call center helpline number whenever possible.

        :return: The primary_phone of this Location.
        :rtype: str
        """
        return self._primary_phone

    @primary_phone.setter
    def primary_phone(self, primary_phone):
        """Sets the primary_phone of this Location.

        A phone number that connects to your individual business location as directly as possible. Use a local phone number instead of a central, call center helpline number whenever possible.

        :param primary_phone: The primary_phone of this Location.
        :type primary_phone: str
        """

        self._primary_phone = primary_phone

    @property
    def profile(self):
        """Gets the profile of this Location.


        :return: The profile of this Location.
        :rtype: Profile
        """
        return self._profile

    @profile.setter
    def profile(self, profile):
        """Sets the profile of this Location.


        :param profile: The profile of this Location.
        :type profile: Profile
        """

        self._profile = profile

    @property
    def regular_hours(self):
        """Gets the regular_hours of this Location.


        :return: The regular_hours of this Location.
        :rtype: BusinessHours
        """
        return self._regular_hours

    @regular_hours.setter
    def regular_hours(self, regular_hours):
        """Sets the regular_hours of this Location.


        :param regular_hours: The regular_hours of this Location.
        :type regular_hours: BusinessHours
        """

        self._regular_hours = regular_hours

    @property
    def relationship_data(self):
        """Gets the relationship_data of this Location.


        :return: The relationship_data of this Location.
        :rtype: RelationshipData
        """
        return self._relationship_data

    @relationship_data.setter
    def relationship_data(self, relationship_data):
        """Sets the relationship_data of this Location.


        :param relationship_data: The relationship_data of this Location.
        :type relationship_data: RelationshipData
        """

        self._relationship_data = relationship_data

    @property
    def service_area(self):
        """Gets the service_area of this Location.


        :return: The service_area of this Location.
        :rtype: ServiceAreaBusiness
        """
        return self._service_area

    @service_area.setter
    def service_area(self, service_area):
        """Sets the service_area of this Location.


        :param service_area: The service_area of this Location.
        :type service_area: ServiceAreaBusiness
        """

        self._service_area = service_area

    @property
    def special_hours(self):
        """Gets the special_hours of this Location.


        :return: The special_hours of this Location.
        :rtype: SpecialHours
        """
        return self._special_hours

    @special_hours.setter
    def special_hours(self, special_hours):
        """Sets the special_hours of this Location.


        :param special_hours: The special_hours of this Location.
        :type special_hours: SpecialHours
        """

        self._special_hours = special_hours

    @property
    def store_code(self):
        """Gets the store_code of this Location.

        External identifier for this location, which must be unique inside a given account. This is a means of associating the location with your own records.

        :return: The store_code of this Location.
        :rtype: str
        """
        return self._store_code

    @store_code.setter
    def store_code(self, store_code):
        """Sets the store_code of this Location.

        External identifier for this location, which must be unique inside a given account. This is a means of associating the location with your own records.

        :param store_code: The store_code of this Location.
        :type store_code: str
        """

        self._store_code = store_code

    @property
    def website_url(self):
        """Gets the website_url of this Location.

        A URL for this business. If possible, use a URL that represents this individual business location instead of a generic website/URL that represents all locations, or the brand.

        :return: The website_url of this Location.
        :rtype: str
        """
        return self._website_url

    @website_url.setter
    def website_url(self, website_url):
        """Sets the website_url of this Location.

        A URL for this business. If possible, use a URL that represents this individual business location instead of a generic website/URL that represents all locations, or the brand.

        :param website_url: The website_url of this Location.
        :type website_url: str
        """

        self._website_url = website_url
