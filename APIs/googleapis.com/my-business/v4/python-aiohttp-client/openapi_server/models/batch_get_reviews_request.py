# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BatchGetReviewsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ignore_rating_only_reviews: bool=None, location_names: List[str]=None, order_by: str=None, page_size: int=None, page_token: str=None):
        """BatchGetReviewsRequest - a model defined in OpenAPI

        :param ignore_rating_only_reviews: The ignore_rating_only_reviews of this BatchGetReviewsRequest.
        :param location_names: The location_names of this BatchGetReviewsRequest.
        :param order_by: The order_by of this BatchGetReviewsRequest.
        :param page_size: The page_size of this BatchGetReviewsRequest.
        :param page_token: The page_token of this BatchGetReviewsRequest.
        """
        self.openapi_types = {
            'ignore_rating_only_reviews': bool,
            'location_names': List[str],
            'order_by': str,
            'page_size': int,
            'page_token': str
        }

        self.attribute_map = {
            'ignore_rating_only_reviews': 'ignoreRatingOnlyReviews',
            'location_names': 'locationNames',
            'order_by': 'orderBy',
            'page_size': 'pageSize',
            'page_token': 'pageToken'
        }

        self._ignore_rating_only_reviews = ignore_rating_only_reviews
        self._location_names = location_names
        self._order_by = order_by
        self._page_size = page_size
        self._page_token = page_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BatchGetReviewsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BatchGetReviewsRequest of this BatchGetReviewsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ignore_rating_only_reviews(self):
        """Gets the ignore_rating_only_reviews of this BatchGetReviewsRequest.

        Whether to ignore rating-only reviews.

        :return: The ignore_rating_only_reviews of this BatchGetReviewsRequest.
        :rtype: bool
        """
        return self._ignore_rating_only_reviews

    @ignore_rating_only_reviews.setter
    def ignore_rating_only_reviews(self, ignore_rating_only_reviews):
        """Sets the ignore_rating_only_reviews of this BatchGetReviewsRequest.

        Whether to ignore rating-only reviews.

        :param ignore_rating_only_reviews: The ignore_rating_only_reviews of this BatchGetReviewsRequest.
        :type ignore_rating_only_reviews: bool
        """

        self._ignore_rating_only_reviews = ignore_rating_only_reviews

    @property
    def location_names(self):
        """Gets the location_names of this BatchGetReviewsRequest.

        A collection of locations to fetch reviews for, specified by their names.

        :return: The location_names of this BatchGetReviewsRequest.
        :rtype: List[str]
        """
        return self._location_names

    @location_names.setter
    def location_names(self, location_names):
        """Sets the location_names of this BatchGetReviewsRequest.

        A collection of locations to fetch reviews for, specified by their names.

        :param location_names: The location_names of this BatchGetReviewsRequest.
        :type location_names: List[str]
        """

        self._location_names = location_names

    @property
    def order_by(self):
        """Gets the order_by of this BatchGetReviewsRequest.

        Optional. Specifies the field to sort reviews by. If unspecified, the order of reviews returned will default to `update_time desc`. Valid orders to sort by are `rating`, `rating desc` and `update_time desc`. `rating` will return reviews in ascending order. `update_time`(i.e. ascending order) is not supported.

        :return: The order_by of this BatchGetReviewsRequest.
        :rtype: str
        """
        return self._order_by

    @order_by.setter
    def order_by(self, order_by):
        """Sets the order_by of this BatchGetReviewsRequest.

        Optional. Specifies the field to sort reviews by. If unspecified, the order of reviews returned will default to `update_time desc`. Valid orders to sort by are `rating`, `rating desc` and `update_time desc`. `rating` will return reviews in ascending order. `update_time`(i.e. ascending order) is not supported.

        :param order_by: The order_by of this BatchGetReviewsRequest.
        :type order_by: str
        """

        self._order_by = order_by

    @property
    def page_size(self):
        """Gets the page_size of this BatchGetReviewsRequest.

        How many reviews to fetch per page. The default value is 200.

        :return: The page_size of this BatchGetReviewsRequest.
        :rtype: int
        """
        return self._page_size

    @page_size.setter
    def page_size(self, page_size):
        """Sets the page_size of this BatchGetReviewsRequest.

        How many reviews to fetch per page. The default value is 200.

        :param page_size: The page_size of this BatchGetReviewsRequest.
        :type page_size: int
        """

        self._page_size = page_size

    @property
    def page_token(self):
        """Gets the page_token of this BatchGetReviewsRequest.

        If specified, it fetches the next page of reviews.

        :return: The page_token of this BatchGetReviewsRequest.
        :rtype: str
        """
        return self._page_token

    @page_token.setter
    def page_token(self, page_token):
        """Sets the page_token of this BatchGetReviewsRequest.

        If specified, it fetches the next page of reviews.

        :param page_token: The page_token of this BatchGetReviewsRequest.
        :type page_token: str
        """

        self._page_token = page_token
