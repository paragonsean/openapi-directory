# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LocationKey(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, explicit_no_place_id: bool=None, place_id: str=None, plus_page_id: str=None, request_id: str=None):
        """LocationKey - a model defined in OpenAPI

        :param explicit_no_place_id: The explicit_no_place_id of this LocationKey.
        :param place_id: The place_id of this LocationKey.
        :param plus_page_id: The plus_page_id of this LocationKey.
        :param request_id: The request_id of this LocationKey.
        """
        self.openapi_types = {
            'explicit_no_place_id': bool,
            'place_id': str,
            'plus_page_id': str,
            'request_id': str
        }

        self.attribute_map = {
            'explicit_no_place_id': 'explicitNoPlaceId',
            'place_id': 'placeId',
            'plus_page_id': 'plusPageId',
            'request_id': 'requestId'
        }

        self._explicit_no_place_id = explicit_no_place_id
        self._place_id = place_id
        self._plus_page_id = plus_page_id
        self._request_id = request_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LocationKey':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LocationKey of this LocationKey.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def explicit_no_place_id(self):
        """Gets the explicit_no_place_id of this LocationKey.

        Output only. A value of true indicates that an unset place ID is deliberate, which is different from no association being made yet.

        :return: The explicit_no_place_id of this LocationKey.
        :rtype: bool
        """
        return self._explicit_no_place_id

    @explicit_no_place_id.setter
    def explicit_no_place_id(self, explicit_no_place_id):
        """Sets the explicit_no_place_id of this LocationKey.

        Output only. A value of true indicates that an unset place ID is deliberate, which is different from no association being made yet.

        :param explicit_no_place_id: The explicit_no_place_id of this LocationKey.
        :type explicit_no_place_id: bool
        """

        self._explicit_no_place_id = explicit_no_place_id

    @property
    def place_id(self):
        """Gets the place_id of this LocationKey.

        If this location has been verified and is connected to/appears on Google Maps, this field is populated with the place ID for the location. This ID can be used in various Places APIs. If this location is unverified, this field may be populated if the location has been associated with a place that appears on Google Maps. This field can be set during Create calls, but not for Update. The additional `explicit_no_place_id` bool qualifies whether an unset place ID is deliberate or not.

        :return: The place_id of this LocationKey.
        :rtype: str
        """
        return self._place_id

    @place_id.setter
    def place_id(self, place_id):
        """Sets the place_id of this LocationKey.

        If this location has been verified and is connected to/appears on Google Maps, this field is populated with the place ID for the location. This ID can be used in various Places APIs. If this location is unverified, this field may be populated if the location has been associated with a place that appears on Google Maps. This field can be set during Create calls, but not for Update. The additional `explicit_no_place_id` bool qualifies whether an unset place ID is deliberate or not.

        :param place_id: The place_id of this LocationKey.
        :type place_id: str
        """

        self._place_id = place_id

    @property
    def plus_page_id(self):
        """Gets the plus_page_id of this LocationKey.

        Output only. If this location has a Google+ page associated with it, this is populated with the Google+ page ID for this location.

        :return: The plus_page_id of this LocationKey.
        :rtype: str
        """
        return self._plus_page_id

    @plus_page_id.setter
    def plus_page_id(self, plus_page_id):
        """Sets the plus_page_id of this LocationKey.

        Output only. If this location has a Google+ page associated with it, this is populated with the Google+ page ID for this location.

        :param plus_page_id: The plus_page_id of this LocationKey.
        :type plus_page_id: str
        """

        self._plus_page_id = plus_page_id

    @property
    def request_id(self):
        """Gets the request_id of this LocationKey.

        Output only. The `request_id` used to create this location. May be empty if this location was created outside of the Google My Business API or Business Profile Locations.

        :return: The request_id of this LocationKey.
        :rtype: str
        """
        return self._request_id

    @request_id.setter
    def request_id(self, request_id):
        """Sets the request_id of this LocationKey.

        Output only. The `request_id` used to create this location. May be empty if this location was created outside of the Google My Business API or Business Profile Locations.

        :param request_id: The request_id of this LocationKey.
        :type request_id: str
        """

        self._request_id = request_id
