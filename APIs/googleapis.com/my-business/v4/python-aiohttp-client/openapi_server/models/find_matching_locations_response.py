# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.matched_location import MatchedLocation
from openapi_server import util


class FindMatchingLocationsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, match_time: str=None, matched_locations: List[MatchedLocation]=None):
        """FindMatchingLocationsResponse - a model defined in OpenAPI

        :param match_time: The match_time of this FindMatchingLocationsResponse.
        :param matched_locations: The matched_locations of this FindMatchingLocationsResponse.
        """
        self.openapi_types = {
            'match_time': str,
            'matched_locations': List[MatchedLocation]
        }

        self.attribute_map = {
            'match_time': 'matchTime',
            'matched_locations': 'matchedLocations'
        }

        self._match_time = match_time
        self._matched_locations = matched_locations

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FindMatchingLocationsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FindMatchingLocationsResponse of this FindMatchingLocationsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def match_time(self):
        """Gets the match_time of this FindMatchingLocationsResponse.

        When the matching algorithm was last executed for this location.

        :return: The match_time of this FindMatchingLocationsResponse.
        :rtype: str
        """
        return self._match_time

    @match_time.setter
    def match_time(self, match_time):
        """Sets the match_time of this FindMatchingLocationsResponse.

        When the matching algorithm was last executed for this location.

        :param match_time: The match_time of this FindMatchingLocationsResponse.
        :type match_time: str
        """

        self._match_time = match_time

    @property
    def matched_locations(self):
        """Gets the matched_locations of this FindMatchingLocationsResponse.

        A collection of locations that are potential matches to the specified location, listed in order from best to least match. If there is an exact match, it will be in the first position.

        :return: The matched_locations of this FindMatchingLocationsResponse.
        :rtype: List[MatchedLocation]
        """
        return self._matched_locations

    @matched_locations.setter
    def matched_locations(self, matched_locations):
        """Sets the matched_locations of this FindMatchingLocationsResponse.

        A collection of locations that are potential matches to the specified location, listed in order from best to least match. If there is an exact match, it will be in the first position.

        :param matched_locations: The matched_locations of this FindMatchingLocationsResponse.
        :type matched_locations: List[MatchedLocation]
        """

        self._matched_locations = matched_locations
