# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PhysicalDistancing(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, common_areas_physical_distancing_arranged: bool=None, common_areas_physical_distancing_arranged_exception: str=None, physical_distancing_required: bool=None, physical_distancing_required_exception: str=None, safety_dividers: bool=None, safety_dividers_exception: str=None, shared_areas_limited_occupancy: bool=None, shared_areas_limited_occupancy_exception: str=None, wellness_areas_have_private_spaces: bool=None, wellness_areas_have_private_spaces_exception: str=None):
        """PhysicalDistancing - a model defined in OpenAPI

        :param common_areas_physical_distancing_arranged: The common_areas_physical_distancing_arranged of this PhysicalDistancing.
        :param common_areas_physical_distancing_arranged_exception: The common_areas_physical_distancing_arranged_exception of this PhysicalDistancing.
        :param physical_distancing_required: The physical_distancing_required of this PhysicalDistancing.
        :param physical_distancing_required_exception: The physical_distancing_required_exception of this PhysicalDistancing.
        :param safety_dividers: The safety_dividers of this PhysicalDistancing.
        :param safety_dividers_exception: The safety_dividers_exception of this PhysicalDistancing.
        :param shared_areas_limited_occupancy: The shared_areas_limited_occupancy of this PhysicalDistancing.
        :param shared_areas_limited_occupancy_exception: The shared_areas_limited_occupancy_exception of this PhysicalDistancing.
        :param wellness_areas_have_private_spaces: The wellness_areas_have_private_spaces of this PhysicalDistancing.
        :param wellness_areas_have_private_spaces_exception: The wellness_areas_have_private_spaces_exception of this PhysicalDistancing.
        """
        self.openapi_types = {
            'common_areas_physical_distancing_arranged': bool,
            'common_areas_physical_distancing_arranged_exception': str,
            'physical_distancing_required': bool,
            'physical_distancing_required_exception': str,
            'safety_dividers': bool,
            'safety_dividers_exception': str,
            'shared_areas_limited_occupancy': bool,
            'shared_areas_limited_occupancy_exception': str,
            'wellness_areas_have_private_spaces': bool,
            'wellness_areas_have_private_spaces_exception': str
        }

        self.attribute_map = {
            'common_areas_physical_distancing_arranged': 'commonAreasPhysicalDistancingArranged',
            'common_areas_physical_distancing_arranged_exception': 'commonAreasPhysicalDistancingArrangedException',
            'physical_distancing_required': 'physicalDistancingRequired',
            'physical_distancing_required_exception': 'physicalDistancingRequiredException',
            'safety_dividers': 'safetyDividers',
            'safety_dividers_exception': 'safetyDividersException',
            'shared_areas_limited_occupancy': 'sharedAreasLimitedOccupancy',
            'shared_areas_limited_occupancy_exception': 'sharedAreasLimitedOccupancyException',
            'wellness_areas_have_private_spaces': 'wellnessAreasHavePrivateSpaces',
            'wellness_areas_have_private_spaces_exception': 'wellnessAreasHavePrivateSpacesException'
        }

        self._common_areas_physical_distancing_arranged = common_areas_physical_distancing_arranged
        self._common_areas_physical_distancing_arranged_exception = common_areas_physical_distancing_arranged_exception
        self._physical_distancing_required = physical_distancing_required
        self._physical_distancing_required_exception = physical_distancing_required_exception
        self._safety_dividers = safety_dividers
        self._safety_dividers_exception = safety_dividers_exception
        self._shared_areas_limited_occupancy = shared_areas_limited_occupancy
        self._shared_areas_limited_occupancy_exception = shared_areas_limited_occupancy_exception
        self._wellness_areas_have_private_spaces = wellness_areas_have_private_spaces
        self._wellness_areas_have_private_spaces_exception = wellness_areas_have_private_spaces_exception

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PhysicalDistancing':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PhysicalDistancing of this PhysicalDistancing.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def common_areas_physical_distancing_arranged(self):
        """Gets the common_areas_physical_distancing_arranged of this PhysicalDistancing.

        Common areas arranged to maintain physical distancing.

        :return: The common_areas_physical_distancing_arranged of this PhysicalDistancing.
        :rtype: bool
        """
        return self._common_areas_physical_distancing_arranged

    @common_areas_physical_distancing_arranged.setter
    def common_areas_physical_distancing_arranged(self, common_areas_physical_distancing_arranged):
        """Sets the common_areas_physical_distancing_arranged of this PhysicalDistancing.

        Common areas arranged to maintain physical distancing.

        :param common_areas_physical_distancing_arranged: The common_areas_physical_distancing_arranged of this PhysicalDistancing.
        :type common_areas_physical_distancing_arranged: bool
        """

        self._common_areas_physical_distancing_arranged = common_areas_physical_distancing_arranged

    @property
    def common_areas_physical_distancing_arranged_exception(self):
        """Gets the common_areas_physical_distancing_arranged_exception of this PhysicalDistancing.

        Common areas physical distancing arranged exception.

        :return: The common_areas_physical_distancing_arranged_exception of this PhysicalDistancing.
        :rtype: str
        """
        return self._common_areas_physical_distancing_arranged_exception

    @common_areas_physical_distancing_arranged_exception.setter
    def common_areas_physical_distancing_arranged_exception(self, common_areas_physical_distancing_arranged_exception):
        """Sets the common_areas_physical_distancing_arranged_exception of this PhysicalDistancing.

        Common areas physical distancing arranged exception.

        :param common_areas_physical_distancing_arranged_exception: The common_areas_physical_distancing_arranged_exception of this PhysicalDistancing.
        :type common_areas_physical_distancing_arranged_exception: str
        """
        allowed_values = ["EXCEPTION_UNSPECIFIED", "UNDER_CONSTRUCTION", "DEPENDENT_ON_SEASON", "DEPENDENT_ON_DAY_OF_WEEK"]  # noqa: E501
        if common_areas_physical_distancing_arranged_exception not in allowed_values:
            raise ValueError(
                "Invalid value for `common_areas_physical_distancing_arranged_exception` ({0}), must be one of {1}"
                .format(common_areas_physical_distancing_arranged_exception, allowed_values)
            )

        self._common_areas_physical_distancing_arranged_exception = common_areas_physical_distancing_arranged_exception

    @property
    def physical_distancing_required(self):
        """Gets the physical_distancing_required of this PhysicalDistancing.

        Physical distancing required.

        :return: The physical_distancing_required of this PhysicalDistancing.
        :rtype: bool
        """
        return self._physical_distancing_required

    @physical_distancing_required.setter
    def physical_distancing_required(self, physical_distancing_required):
        """Sets the physical_distancing_required of this PhysicalDistancing.

        Physical distancing required.

        :param physical_distancing_required: The physical_distancing_required of this PhysicalDistancing.
        :type physical_distancing_required: bool
        """

        self._physical_distancing_required = physical_distancing_required

    @property
    def physical_distancing_required_exception(self):
        """Gets the physical_distancing_required_exception of this PhysicalDistancing.

        Physical distancing required exception.

        :return: The physical_distancing_required_exception of this PhysicalDistancing.
        :rtype: str
        """
        return self._physical_distancing_required_exception

    @physical_distancing_required_exception.setter
    def physical_distancing_required_exception(self, physical_distancing_required_exception):
        """Sets the physical_distancing_required_exception of this PhysicalDistancing.

        Physical distancing required exception.

        :param physical_distancing_required_exception: The physical_distancing_required_exception of this PhysicalDistancing.
        :type physical_distancing_required_exception: str
        """
        allowed_values = ["EXCEPTION_UNSPECIFIED", "UNDER_CONSTRUCTION", "DEPENDENT_ON_SEASON", "DEPENDENT_ON_DAY_OF_WEEK"]  # noqa: E501
        if physical_distancing_required_exception not in allowed_values:
            raise ValueError(
                "Invalid value for `physical_distancing_required_exception` ({0}), must be one of {1}"
                .format(physical_distancing_required_exception, allowed_values)
            )

        self._physical_distancing_required_exception = physical_distancing_required_exception

    @property
    def safety_dividers(self):
        """Gets the safety_dividers of this PhysicalDistancing.

        Safety dividers at front desk and other locations.

        :return: The safety_dividers of this PhysicalDistancing.
        :rtype: bool
        """
        return self._safety_dividers

    @safety_dividers.setter
    def safety_dividers(self, safety_dividers):
        """Sets the safety_dividers of this PhysicalDistancing.

        Safety dividers at front desk and other locations.

        :param safety_dividers: The safety_dividers of this PhysicalDistancing.
        :type safety_dividers: bool
        """

        self._safety_dividers = safety_dividers

    @property
    def safety_dividers_exception(self):
        """Gets the safety_dividers_exception of this PhysicalDistancing.

        Safety dividers exception.

        :return: The safety_dividers_exception of this PhysicalDistancing.
        :rtype: str
        """
        return self._safety_dividers_exception

    @safety_dividers_exception.setter
    def safety_dividers_exception(self, safety_dividers_exception):
        """Sets the safety_dividers_exception of this PhysicalDistancing.

        Safety dividers exception.

        :param safety_dividers_exception: The safety_dividers_exception of this PhysicalDistancing.
        :type safety_dividers_exception: str
        """
        allowed_values = ["EXCEPTION_UNSPECIFIED", "UNDER_CONSTRUCTION", "DEPENDENT_ON_SEASON", "DEPENDENT_ON_DAY_OF_WEEK"]  # noqa: E501
        if safety_dividers_exception not in allowed_values:
            raise ValueError(
                "Invalid value for `safety_dividers_exception` ({0}), must be one of {1}"
                .format(safety_dividers_exception, allowed_values)
            )

        self._safety_dividers_exception = safety_dividers_exception

    @property
    def shared_areas_limited_occupancy(self):
        """Gets the shared_areas_limited_occupancy of this PhysicalDistancing.

        Guest occupancy limited within shared facilities.

        :return: The shared_areas_limited_occupancy of this PhysicalDistancing.
        :rtype: bool
        """
        return self._shared_areas_limited_occupancy

    @shared_areas_limited_occupancy.setter
    def shared_areas_limited_occupancy(self, shared_areas_limited_occupancy):
        """Sets the shared_areas_limited_occupancy of this PhysicalDistancing.

        Guest occupancy limited within shared facilities.

        :param shared_areas_limited_occupancy: The shared_areas_limited_occupancy of this PhysicalDistancing.
        :type shared_areas_limited_occupancy: bool
        """

        self._shared_areas_limited_occupancy = shared_areas_limited_occupancy

    @property
    def shared_areas_limited_occupancy_exception(self):
        """Gets the shared_areas_limited_occupancy_exception of this PhysicalDistancing.

        Shared areas limited occupancy exception.

        :return: The shared_areas_limited_occupancy_exception of this PhysicalDistancing.
        :rtype: str
        """
        return self._shared_areas_limited_occupancy_exception

    @shared_areas_limited_occupancy_exception.setter
    def shared_areas_limited_occupancy_exception(self, shared_areas_limited_occupancy_exception):
        """Sets the shared_areas_limited_occupancy_exception of this PhysicalDistancing.

        Shared areas limited occupancy exception.

        :param shared_areas_limited_occupancy_exception: The shared_areas_limited_occupancy_exception of this PhysicalDistancing.
        :type shared_areas_limited_occupancy_exception: str
        """
        allowed_values = ["EXCEPTION_UNSPECIFIED", "UNDER_CONSTRUCTION", "DEPENDENT_ON_SEASON", "DEPENDENT_ON_DAY_OF_WEEK"]  # noqa: E501
        if shared_areas_limited_occupancy_exception not in allowed_values:
            raise ValueError(
                "Invalid value for `shared_areas_limited_occupancy_exception` ({0}), must be one of {1}"
                .format(shared_areas_limited_occupancy_exception, allowed_values)
            )

        self._shared_areas_limited_occupancy_exception = shared_areas_limited_occupancy_exception

    @property
    def wellness_areas_have_private_spaces(self):
        """Gets the wellness_areas_have_private_spaces of this PhysicalDistancing.

        Private spaces designated in spa and wellness areas.

        :return: The wellness_areas_have_private_spaces of this PhysicalDistancing.
        :rtype: bool
        """
        return self._wellness_areas_have_private_spaces

    @wellness_areas_have_private_spaces.setter
    def wellness_areas_have_private_spaces(self, wellness_areas_have_private_spaces):
        """Sets the wellness_areas_have_private_spaces of this PhysicalDistancing.

        Private spaces designated in spa and wellness areas.

        :param wellness_areas_have_private_spaces: The wellness_areas_have_private_spaces of this PhysicalDistancing.
        :type wellness_areas_have_private_spaces: bool
        """

        self._wellness_areas_have_private_spaces = wellness_areas_have_private_spaces

    @property
    def wellness_areas_have_private_spaces_exception(self):
        """Gets the wellness_areas_have_private_spaces_exception of this PhysicalDistancing.

        Wellness areas have private spaces exception.

        :return: The wellness_areas_have_private_spaces_exception of this PhysicalDistancing.
        :rtype: str
        """
        return self._wellness_areas_have_private_spaces_exception

    @wellness_areas_have_private_spaces_exception.setter
    def wellness_areas_have_private_spaces_exception(self, wellness_areas_have_private_spaces_exception):
        """Sets the wellness_areas_have_private_spaces_exception of this PhysicalDistancing.

        Wellness areas have private spaces exception.

        :param wellness_areas_have_private_spaces_exception: The wellness_areas_have_private_spaces_exception of this PhysicalDistancing.
        :type wellness_areas_have_private_spaces_exception: str
        """
        allowed_values = ["EXCEPTION_UNSPECIFIED", "UNDER_CONSTRUCTION", "DEPENDENT_ON_SEASON", "DEPENDENT_ON_DAY_OF_WEEK"]  # noqa: E501
        if wellness_areas_have_private_spaces_exception not in allowed_values:
            raise ValueError(
                "Invalid value for `wellness_areas_have_private_spaces_exception` ({0}), must be one of {1}"
                .format(wellness_areas_have_private_spaces_exception, allowed_values)
            )

        self._wellness_areas_have_private_spaces_exception = wellness_areas_have_private_spaces_exception
