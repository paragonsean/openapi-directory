# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PlaceInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, place_id: str=None):
        """PlaceInfo - a model defined in OpenAPI

        :param name: The name of this PlaceInfo.
        :param place_id: The place_id of this PlaceInfo.
        """
        self.openapi_types = {
            'name': str,
            'place_id': str
        }

        self.attribute_map = {
            'name': 'name',
            'place_id': 'placeId'
        }

        self._name = name
        self._place_id = place_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PlaceInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PlaceInfo of this PlaceInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this PlaceInfo.

        The localized name of the place. For example, `Scottsdale, AZ`.

        :return: The name of this PlaceInfo.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this PlaceInfo.

        The localized name of the place. For example, `Scottsdale, AZ`.

        :param name: The name of this PlaceInfo.
        :type name: str
        """

        self._name = name

    @property
    def place_id(self):
        """Gets the place_id of this PlaceInfo.

        The ID of the place. Must correspond to a [region.] (https://developers.google.com/places/web-service/supported_types#table3)

        :return: The place_id of this PlaceInfo.
        :rtype: str
        """
        return self._place_id

    @place_id.setter
    def place_id(self, place_id):
        """Sets the place_id of this PlaceInfo.

        The ID of the place. Must correspond to a [region.] (https://developers.google.com/places/web-service/supported_types#table3)

        :param place_id: The place_id of this PlaceInfo.
        :type place_id: str
        """

        self._place_id = place_id
