# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.food_menu_item_attributes import FoodMenuItemAttributes
from openapi_server.models.menu_label import MenuLabel
from openapi_server import util


class FoodMenuItemOption(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, attributes: FoodMenuItemAttributes=None, labels: List[MenuLabel]=None):
        """FoodMenuItemOption - a model defined in OpenAPI

        :param attributes: The attributes of this FoodMenuItemOption.
        :param labels: The labels of this FoodMenuItemOption.
        """
        self.openapi_types = {
            'attributes': FoodMenuItemAttributes,
            'labels': List[MenuLabel]
        }

        self.attribute_map = {
            'attributes': 'attributes',
            'labels': 'labels'
        }

        self._attributes = attributes
        self._labels = labels

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FoodMenuItemOption':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FoodMenuItemOption of this FoodMenuItemOption.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def attributes(self):
        """Gets the attributes of this FoodMenuItemOption.


        :return: The attributes of this FoodMenuItemOption.
        :rtype: FoodMenuItemAttributes
        """
        return self._attributes

    @attributes.setter
    def attributes(self, attributes):
        """Sets the attributes of this FoodMenuItemOption.


        :param attributes: The attributes of this FoodMenuItemOption.
        :type attributes: FoodMenuItemAttributes
        """

        self._attributes = attributes

    @property
    def labels(self):
        """Gets the labels of this FoodMenuItemOption.

        Required. Language tagged labels for this menu item option. E.g.: \"beef pad thai\", \"veggie pad thai\", \"small pizza\", \"large pizza\". Display names should be 140 characters or less, with descriptions 1,000 characters or less. At least one set of labels is required.

        :return: The labels of this FoodMenuItemOption.
        :rtype: List[MenuLabel]
        """
        return self._labels

    @labels.setter
    def labels(self, labels):
        """Sets the labels of this FoodMenuItemOption.

        Required. Language tagged labels for this menu item option. E.g.: \"beef pad thai\", \"veggie pad thai\", \"small pizza\", \"large pizza\". Display names should be 140 characters or less, with descriptions 1,000 characters or less. At least one set of labels is required.

        :param labels: The labels of this FoodMenuItemOption.
        :type labels: List[MenuLabel]
        """

        self._labels = labels
