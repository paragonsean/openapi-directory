# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.review import Review
from openapi_server import util


class ListReviewsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, average_rating: float=None, next_page_token: str=None, reviews: List[Review]=None, total_review_count: int=None):
        """ListReviewsResponse - a model defined in OpenAPI

        :param average_rating: The average_rating of this ListReviewsResponse.
        :param next_page_token: The next_page_token of this ListReviewsResponse.
        :param reviews: The reviews of this ListReviewsResponse.
        :param total_review_count: The total_review_count of this ListReviewsResponse.
        """
        self.openapi_types = {
            'average_rating': float,
            'next_page_token': str,
            'reviews': List[Review],
            'total_review_count': int
        }

        self.attribute_map = {
            'average_rating': 'averageRating',
            'next_page_token': 'nextPageToken',
            'reviews': 'reviews',
            'total_review_count': 'totalReviewCount'
        }

        self._average_rating = average_rating
        self._next_page_token = next_page_token
        self._reviews = reviews
        self._total_review_count = total_review_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListReviewsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListReviewsResponse of this ListReviewsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def average_rating(self):
        """Gets the average_rating of this ListReviewsResponse.

        The average star rating of all reviews for this location on a scale of 1 to 5, where 5 is the highest rating.

        :return: The average_rating of this ListReviewsResponse.
        :rtype: float
        """
        return self._average_rating

    @average_rating.setter
    def average_rating(self, average_rating):
        """Sets the average_rating of this ListReviewsResponse.

        The average star rating of all reviews for this location on a scale of 1 to 5, where 5 is the highest rating.

        :param average_rating: The average_rating of this ListReviewsResponse.
        :type average_rating: float
        """

        self._average_rating = average_rating

    @property
    def next_page_token(self):
        """Gets the next_page_token of this ListReviewsResponse.

        If the number of reviews exceeded the requested page size, this field is populated with a token to fetch the next page of reviews on a subsequent call to ListReviews. If there are no more reviews, this field is not present in the response.

        :return: The next_page_token of this ListReviewsResponse.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this ListReviewsResponse.

        If the number of reviews exceeded the requested page size, this field is populated with a token to fetch the next page of reviews on a subsequent call to ListReviews. If there are no more reviews, this field is not present in the response.

        :param next_page_token: The next_page_token of this ListReviewsResponse.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token

    @property
    def reviews(self):
        """Gets the reviews of this ListReviewsResponse.

        The reviews.

        :return: The reviews of this ListReviewsResponse.
        :rtype: List[Review]
        """
        return self._reviews

    @reviews.setter
    def reviews(self, reviews):
        """Sets the reviews of this ListReviewsResponse.

        The reviews.

        :param reviews: The reviews of this ListReviewsResponse.
        :type reviews: List[Review]
        """

        self._reviews = reviews

    @property
    def total_review_count(self):
        """Gets the total_review_count of this ListReviewsResponse.

        The total number of reviews for this location.

        :return: The total_review_count of this ListReviewsResponse.
        :rtype: int
        """
        return self._total_review_count

    @total_review_count.setter
    def total_review_count(self, total_review_count):
        """Sets the total_review_count of this ListReviewsResponse.

        The total number of reviews for this location.

        :param total_review_count: The total_review_count of this ListReviewsResponse.
        :type total_review_count: int
        """

        self._total_review_count = total_review_count
