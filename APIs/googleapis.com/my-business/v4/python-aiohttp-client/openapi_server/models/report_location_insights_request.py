# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.basic_metrics_request import BasicMetricsRequest
from openapi_server.models.driving_direction_metrics_request import DrivingDirectionMetricsRequest
from openapi_server import util


class ReportLocationInsightsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, basic_request: BasicMetricsRequest=None, driving_directions_request: DrivingDirectionMetricsRequest=None, location_names: List[str]=None):
        """ReportLocationInsightsRequest - a model defined in OpenAPI

        :param basic_request: The basic_request of this ReportLocationInsightsRequest.
        :param driving_directions_request: The driving_directions_request of this ReportLocationInsightsRequest.
        :param location_names: The location_names of this ReportLocationInsightsRequest.
        """
        self.openapi_types = {
            'basic_request': BasicMetricsRequest,
            'driving_directions_request': DrivingDirectionMetricsRequest,
            'location_names': List[str]
        }

        self.attribute_map = {
            'basic_request': 'basicRequest',
            'driving_directions_request': 'drivingDirectionsRequest',
            'location_names': 'locationNames'
        }

        self._basic_request = basic_request
        self._driving_directions_request = driving_directions_request
        self._location_names = location_names

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReportLocationInsightsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReportLocationInsightsRequest of this ReportLocationInsightsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def basic_request(self):
        """Gets the basic_request of this ReportLocationInsightsRequest.


        :return: The basic_request of this ReportLocationInsightsRequest.
        :rtype: BasicMetricsRequest
        """
        return self._basic_request

    @basic_request.setter
    def basic_request(self, basic_request):
        """Sets the basic_request of this ReportLocationInsightsRequest.


        :param basic_request: The basic_request of this ReportLocationInsightsRequest.
        :type basic_request: BasicMetricsRequest
        """

        self._basic_request = basic_request

    @property
    def driving_directions_request(self):
        """Gets the driving_directions_request of this ReportLocationInsightsRequest.


        :return: The driving_directions_request of this ReportLocationInsightsRequest.
        :rtype: DrivingDirectionMetricsRequest
        """
        return self._driving_directions_request

    @driving_directions_request.setter
    def driving_directions_request(self, driving_directions_request):
        """Sets the driving_directions_request of this ReportLocationInsightsRequest.


        :param driving_directions_request: The driving_directions_request of this ReportLocationInsightsRequest.
        :type driving_directions_request: DrivingDirectionMetricsRequest
        """

        self._driving_directions_request = driving_directions_request

    @property
    def location_names(self):
        """Gets the location_names of this ReportLocationInsightsRequest.

        A collection of locations to fetch insights for, specified by their names.

        :return: The location_names of this ReportLocationInsightsRequest.
        :rtype: List[str]
        """
        return self._location_names

    @location_names.setter
    def location_names(self, location_names):
        """Sets the location_names of this ReportLocationInsightsRequest.

        A collection of locations to fetch insights for, specified by their names.

        :param location_names: The location_names of this ReportLocationInsightsRequest.
        :type location_names: List[str]
        """

        self._location_names = location_names
