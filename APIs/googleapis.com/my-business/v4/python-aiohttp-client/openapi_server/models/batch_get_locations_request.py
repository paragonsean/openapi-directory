# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BatchGetLocationsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, location_names: List[str]=None):
        """BatchGetLocationsRequest - a model defined in OpenAPI

        :param location_names: The location_names of this BatchGetLocationsRequest.
        """
        self.openapi_types = {
            'location_names': List[str]
        }

        self.attribute_map = {
            'location_names': 'locationNames'
        }

        self._location_names = location_names

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BatchGetLocationsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BatchGetLocationsRequest of this BatchGetLocationsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def location_names(self):
        """Gets the location_names of this BatchGetLocationsRequest.

        A collection of locations to fetch, specified by their names.

        :return: The location_names of this BatchGetLocationsRequest.
        :rtype: List[str]
        """
        return self._location_names

    @location_names.setter
    def location_names(self, location_names):
        """Sets the location_names of this BatchGetLocationsRequest.

        A collection of locations to fetch, specified by their names.

        :param location_names: The location_names of this BatchGetLocationsRequest.
        :type location_names: List[str]
        """

        self._location_names = location_names
