# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EmailInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, email_address: str=None):
        """EmailInput - a model defined in OpenAPI

        :param email_address: The email_address of this EmailInput.
        """
        self.openapi_types = {
            'email_address': str
        }

        self.attribute_map = {
            'email_address': 'emailAddress'
        }

        self._email_address = email_address

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EmailInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EmailInput of this EmailInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def email_address(self):
        """Gets the email_address of this EmailInput.

        Email address where the PIN should be sent to. An email address is accepted only if it is one of the addresses provided by FetchVerificationOptions. If the EmailVerificationData has is_user_name_editable set to true, the client may specify a different user name (local-part) but must match the domain name.

        :return: The email_address of this EmailInput.
        :rtype: str
        """
        return self._email_address

    @email_address.setter
    def email_address(self, email_address):
        """Sets the email_address of this EmailInput.

        Email address where the PIN should be sent to. An email address is accepted only if it is one of the addresses provided by FetchVerificationOptions. If the EmailVerificationData has is_user_name_editable set to true, the client may specify a different user name (local-part) but must match the domain name.

        :param email_address: The email_address of this EmailInput.
        :type email_address: str
        """

        self._email_address = email_address
