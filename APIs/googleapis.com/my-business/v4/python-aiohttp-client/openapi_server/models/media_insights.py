# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MediaInsights(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, view_count: str=None):
        """MediaInsights - a model defined in OpenAPI

        :param view_count: The view_count of this MediaInsights.
        """
        self.openapi_types = {
            'view_count': str
        }

        self.attribute_map = {
            'view_count': 'viewCount'
        }

        self._view_count = view_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MediaInsights':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MediaInsights of this MediaInsights.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def view_count(self):
        """Gets the view_count of this MediaInsights.

        Output only. The number of times the media item has been viewed.

        :return: The view_count of this MediaInsights.
        :rtype: str
        """
        return self._view_count

    @view_count.setter
    def view_count(self, view_count):
        """Sets the view_count of this MediaInsights.

        Output only. The number of times the media item has been viewed.

        :param view_count: The view_count of this MediaInsights.
        :type view_count: str
        """

        self._view_count = view_count
