# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.service_item import ServiceItem
from openapi_server import util


class ServiceList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, service_items: List[ServiceItem]=None):
        """ServiceList - a model defined in OpenAPI

        :param name: The name of this ServiceList.
        :param service_items: The service_items of this ServiceList.
        """
        self.openapi_types = {
            'name': str,
            'service_items': List[ServiceItem]
        }

        self.attribute_map = {
            'name': 'name',
            'service_items': 'serviceItems'
        }

        self._name = name
        self._service_items = service_items

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ServiceList':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ServiceList of this ServiceList.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this ServiceList.

        Required. Google identifier for this location in the form: `accounts/{account_id}/locations/{location_id}/serviceList`

        :return: The name of this ServiceList.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ServiceList.

        Required. Google identifier for this location in the form: `accounts/{account_id}/locations/{location_id}/serviceList`

        :param name: The name of this ServiceList.
        :type name: str
        """

        self._name = name

    @property
    def service_items(self):
        """Gets the service_items of this ServiceList.

        Service items that are contained within this service list. Duplicated service items will be removed automatically.

        :return: The service_items of this ServiceList.
        :rtype: List[ServiceItem]
        """
        return self._service_items

    @service_items.setter
    def service_items(self, service_items):
        """Sets the service_items of this ServiceList.

        Service items that are contained within this service list. Duplicated service items will be removed automatically.

        :param service_items: The service_items of this ServiceList.
        :type service_items: List[ServiceItem]
        """

        self._service_items = service_items
