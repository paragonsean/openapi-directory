# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.enhanced_cleaning import EnhancedCleaning
from openapi_server.models.increased_food_safety import IncreasedFoodSafety
from openapi_server.models.minimized_contact import MinimizedContact
from openapi_server.models.personal_protection import PersonalProtection
from openapi_server.models.physical_distancing import PhysicalDistancing
from openapi_server import util


class HealthAndSafety(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, enhanced_cleaning: EnhancedCleaning=None, increased_food_safety: IncreasedFoodSafety=None, minimized_contact: MinimizedContact=None, personal_protection: PersonalProtection=None, physical_distancing: PhysicalDistancing=None):
        """HealthAndSafety - a model defined in OpenAPI

        :param enhanced_cleaning: The enhanced_cleaning of this HealthAndSafety.
        :param increased_food_safety: The increased_food_safety of this HealthAndSafety.
        :param minimized_contact: The minimized_contact of this HealthAndSafety.
        :param personal_protection: The personal_protection of this HealthAndSafety.
        :param physical_distancing: The physical_distancing of this HealthAndSafety.
        """
        self.openapi_types = {
            'enhanced_cleaning': EnhancedCleaning,
            'increased_food_safety': IncreasedFoodSafety,
            'minimized_contact': MinimizedContact,
            'personal_protection': PersonalProtection,
            'physical_distancing': PhysicalDistancing
        }

        self.attribute_map = {
            'enhanced_cleaning': 'enhancedCleaning',
            'increased_food_safety': 'increasedFoodSafety',
            'minimized_contact': 'minimizedContact',
            'personal_protection': 'personalProtection',
            'physical_distancing': 'physicalDistancing'
        }

        self._enhanced_cleaning = enhanced_cleaning
        self._increased_food_safety = increased_food_safety
        self._minimized_contact = minimized_contact
        self._personal_protection = personal_protection
        self._physical_distancing = physical_distancing

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HealthAndSafety':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HealthAndSafety of this HealthAndSafety.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def enhanced_cleaning(self):
        """Gets the enhanced_cleaning of this HealthAndSafety.


        :return: The enhanced_cleaning of this HealthAndSafety.
        :rtype: EnhancedCleaning
        """
        return self._enhanced_cleaning

    @enhanced_cleaning.setter
    def enhanced_cleaning(self, enhanced_cleaning):
        """Sets the enhanced_cleaning of this HealthAndSafety.


        :param enhanced_cleaning: The enhanced_cleaning of this HealthAndSafety.
        :type enhanced_cleaning: EnhancedCleaning
        """

        self._enhanced_cleaning = enhanced_cleaning

    @property
    def increased_food_safety(self):
        """Gets the increased_food_safety of this HealthAndSafety.


        :return: The increased_food_safety of this HealthAndSafety.
        :rtype: IncreasedFoodSafety
        """
        return self._increased_food_safety

    @increased_food_safety.setter
    def increased_food_safety(self, increased_food_safety):
        """Sets the increased_food_safety of this HealthAndSafety.


        :param increased_food_safety: The increased_food_safety of this HealthAndSafety.
        :type increased_food_safety: IncreasedFoodSafety
        """

        self._increased_food_safety = increased_food_safety

    @property
    def minimized_contact(self):
        """Gets the minimized_contact of this HealthAndSafety.


        :return: The minimized_contact of this HealthAndSafety.
        :rtype: MinimizedContact
        """
        return self._minimized_contact

    @minimized_contact.setter
    def minimized_contact(self, minimized_contact):
        """Sets the minimized_contact of this HealthAndSafety.


        :param minimized_contact: The minimized_contact of this HealthAndSafety.
        :type minimized_contact: MinimizedContact
        """

        self._minimized_contact = minimized_contact

    @property
    def personal_protection(self):
        """Gets the personal_protection of this HealthAndSafety.


        :return: The personal_protection of this HealthAndSafety.
        :rtype: PersonalProtection
        """
        return self._personal_protection

    @personal_protection.setter
    def personal_protection(self, personal_protection):
        """Sets the personal_protection of this HealthAndSafety.


        :param personal_protection: The personal_protection of this HealthAndSafety.
        :type personal_protection: PersonalProtection
        """

        self._personal_protection = personal_protection

    @property
    def physical_distancing(self):
        """Gets the physical_distancing of this HealthAndSafety.


        :return: The physical_distancing of this HealthAndSafety.
        :rtype: PhysicalDistancing
        """
        return self._physical_distancing

    @physical_distancing.setter
    def physical_distancing(self, physical_distancing):
        """Sets the physical_distancing of this HealthAndSafety.


        :param physical_distancing: The physical_distancing of this HealthAndSafety.
        :type physical_distancing: PhysicalDistancing
        """

        self._physical_distancing = physical_distancing
