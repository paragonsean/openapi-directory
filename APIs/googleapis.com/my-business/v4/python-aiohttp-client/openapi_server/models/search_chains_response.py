# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.chain import Chain
from openapi_server import util


class SearchChainsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, chains: List[Chain]=None):
        """SearchChainsResponse - a model defined in OpenAPI

        :param chains: The chains of this SearchChainsResponse.
        """
        self.openapi_types = {
            'chains': List[Chain]
        }

        self.attribute_map = {
            'chains': 'chains'
        }

        self._chains = chains

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SearchChainsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SearchChainsResponse of this SearchChainsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def chains(self):
        """Gets the chains of this SearchChainsResponse.

        Chains that match the queried chain_display_name in SearchChainsRequest. If there are no matches, this field will be empty. Results are listed in order of relevance.

        :return: The chains of this SearchChainsResponse.
        :rtype: List[Chain]
        """
        return self._chains

    @chains.setter
    def chains(self, chains):
        """Sets the chains of this SearchChainsResponse.

        Chains that match the queried chain_display_name in SearchChainsRequest. If there are no matches, this field will be empty. Results are listed in order of relevance.

        :param chains: The chains of this SearchChainsResponse.
        :type chains: List[Chain]
        """

        self._chains = chains
