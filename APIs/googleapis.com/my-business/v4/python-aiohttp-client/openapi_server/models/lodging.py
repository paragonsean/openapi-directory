# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.accessibility import Accessibility
from openapi_server.models.activities import Activities
from openapi_server.models.business import Business
from openapi_server.models.connectivity import Connectivity
from openapi_server.models.families import Families
from openapi_server.models.food_and_drink import FoodAndDrink
from openapi_server.models.guest_unit_features import GuestUnitFeatures
from openapi_server.models.guest_unit_type import GuestUnitType
from openapi_server.models.health_and_safety import HealthAndSafety
from openapi_server.models.housekeeping import Housekeeping
from openapi_server.models.living_area import LivingArea
from openapi_server.models.lodging_metadata import LodgingMetadata
from openapi_server.models.model_property import ModelProperty
from openapi_server.models.parking import Parking
from openapi_server.models.pets import Pets
from openapi_server.models.policies import Policies
from openapi_server.models.pools import Pools
from openapi_server.models.services import Services
from openapi_server.models.transportation import Transportation
from openapi_server.models.wellness import Wellness
from openapi_server import util


class Lodging(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, accessibility: Accessibility=None, activities: Activities=None, all_units: GuestUnitFeatures=None, business: Business=None, common_living_area: LivingArea=None, connectivity: Connectivity=None, families: Families=None, food_and_drink: FoodAndDrink=None, guest_units: List[GuestUnitType]=None, health_and_safety: HealthAndSafety=None, housekeeping: Housekeeping=None, metadata: LodgingMetadata=None, name: str=None, parking: Parking=None, pets: Pets=None, policies: Policies=None, pools: Pools=None, _property: ModelProperty=None, services: Services=None, some_units: GuestUnitFeatures=None, transportation: Transportation=None, wellness: Wellness=None):
        """Lodging - a model defined in OpenAPI

        :param accessibility: The accessibility of this Lodging.
        :param activities: The activities of this Lodging.
        :param all_units: The all_units of this Lodging.
        :param business: The business of this Lodging.
        :param common_living_area: The common_living_area of this Lodging.
        :param connectivity: The connectivity of this Lodging.
        :param families: The families of this Lodging.
        :param food_and_drink: The food_and_drink of this Lodging.
        :param guest_units: The guest_units of this Lodging.
        :param health_and_safety: The health_and_safety of this Lodging.
        :param housekeeping: The housekeeping of this Lodging.
        :param metadata: The metadata of this Lodging.
        :param name: The name of this Lodging.
        :param parking: The parking of this Lodging.
        :param pets: The pets of this Lodging.
        :param policies: The policies of this Lodging.
        :param pools: The pools of this Lodging.
        :param _property: The _property of this Lodging.
        :param services: The services of this Lodging.
        :param some_units: The some_units of this Lodging.
        :param transportation: The transportation of this Lodging.
        :param wellness: The wellness of this Lodging.
        """
        self.openapi_types = {
            'accessibility': Accessibility,
            'activities': Activities,
            'all_units': GuestUnitFeatures,
            'business': Business,
            'common_living_area': LivingArea,
            'connectivity': Connectivity,
            'families': Families,
            'food_and_drink': FoodAndDrink,
            'guest_units': List[GuestUnitType],
            'health_and_safety': HealthAndSafety,
            'housekeeping': Housekeeping,
            'metadata': LodgingMetadata,
            'name': str,
            'parking': Parking,
            'pets': Pets,
            'policies': Policies,
            'pools': Pools,
            '_property': ModelProperty,
            'services': Services,
            'some_units': GuestUnitFeatures,
            'transportation': Transportation,
            'wellness': Wellness
        }

        self.attribute_map = {
            'accessibility': 'accessibility',
            'activities': 'activities',
            'all_units': 'allUnits',
            'business': 'business',
            'common_living_area': 'commonLivingArea',
            'connectivity': 'connectivity',
            'families': 'families',
            'food_and_drink': 'foodAndDrink',
            'guest_units': 'guestUnits',
            'health_and_safety': 'healthAndSafety',
            'housekeeping': 'housekeeping',
            'metadata': 'metadata',
            'name': 'name',
            'parking': 'parking',
            'pets': 'pets',
            'policies': 'policies',
            'pools': 'pools',
            '_property': 'property',
            'services': 'services',
            'some_units': 'someUnits',
            'transportation': 'transportation',
            'wellness': 'wellness'
        }

        self._accessibility = accessibility
        self._activities = activities
        self._all_units = all_units
        self._business = business
        self._common_living_area = common_living_area
        self._connectivity = connectivity
        self._families = families
        self._food_and_drink = food_and_drink
        self._guest_units = guest_units
        self._health_and_safety = health_and_safety
        self._housekeeping = housekeeping
        self._metadata = metadata
        self._name = name
        self._parking = parking
        self._pets = pets
        self._policies = policies
        self._pools = pools
        self.__property = _property
        self._services = services
        self._some_units = some_units
        self._transportation = transportation
        self._wellness = wellness

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Lodging':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Lodging of this Lodging.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def accessibility(self):
        """Gets the accessibility of this Lodging.


        :return: The accessibility of this Lodging.
        :rtype: Accessibility
        """
        return self._accessibility

    @accessibility.setter
    def accessibility(self, accessibility):
        """Sets the accessibility of this Lodging.


        :param accessibility: The accessibility of this Lodging.
        :type accessibility: Accessibility
        """

        self._accessibility = accessibility

    @property
    def activities(self):
        """Gets the activities of this Lodging.


        :return: The activities of this Lodging.
        :rtype: Activities
        """
        return self._activities

    @activities.setter
    def activities(self, activities):
        """Sets the activities of this Lodging.


        :param activities: The activities of this Lodging.
        :type activities: Activities
        """

        self._activities = activities

    @property
    def all_units(self):
        """Gets the all_units of this Lodging.


        :return: The all_units of this Lodging.
        :rtype: GuestUnitFeatures
        """
        return self._all_units

    @all_units.setter
    def all_units(self, all_units):
        """Sets the all_units of this Lodging.


        :param all_units: The all_units of this Lodging.
        :type all_units: GuestUnitFeatures
        """

        self._all_units = all_units

    @property
    def business(self):
        """Gets the business of this Lodging.


        :return: The business of this Lodging.
        :rtype: Business
        """
        return self._business

    @business.setter
    def business(self, business):
        """Sets the business of this Lodging.


        :param business: The business of this Lodging.
        :type business: Business
        """

        self._business = business

    @property
    def common_living_area(self):
        """Gets the common_living_area of this Lodging.


        :return: The common_living_area of this Lodging.
        :rtype: LivingArea
        """
        return self._common_living_area

    @common_living_area.setter
    def common_living_area(self, common_living_area):
        """Sets the common_living_area of this Lodging.


        :param common_living_area: The common_living_area of this Lodging.
        :type common_living_area: LivingArea
        """

        self._common_living_area = common_living_area

    @property
    def connectivity(self):
        """Gets the connectivity of this Lodging.


        :return: The connectivity of this Lodging.
        :rtype: Connectivity
        """
        return self._connectivity

    @connectivity.setter
    def connectivity(self, connectivity):
        """Sets the connectivity of this Lodging.


        :param connectivity: The connectivity of this Lodging.
        :type connectivity: Connectivity
        """

        self._connectivity = connectivity

    @property
    def families(self):
        """Gets the families of this Lodging.


        :return: The families of this Lodging.
        :rtype: Families
        """
        return self._families

    @families.setter
    def families(self, families):
        """Sets the families of this Lodging.


        :param families: The families of this Lodging.
        :type families: Families
        """

        self._families = families

    @property
    def food_and_drink(self):
        """Gets the food_and_drink of this Lodging.


        :return: The food_and_drink of this Lodging.
        :rtype: FoodAndDrink
        """
        return self._food_and_drink

    @food_and_drink.setter
    def food_and_drink(self, food_and_drink):
        """Sets the food_and_drink of this Lodging.


        :param food_and_drink: The food_and_drink of this Lodging.
        :type food_and_drink: FoodAndDrink
        """

        self._food_and_drink = food_and_drink

    @property
    def guest_units(self):
        """Gets the guest_units of this Lodging.

        Individual GuestUnitTypes that are available in this Lodging.

        :return: The guest_units of this Lodging.
        :rtype: List[GuestUnitType]
        """
        return self._guest_units

    @guest_units.setter
    def guest_units(self, guest_units):
        """Sets the guest_units of this Lodging.

        Individual GuestUnitTypes that are available in this Lodging.

        :param guest_units: The guest_units of this Lodging.
        :type guest_units: List[GuestUnitType]
        """

        self._guest_units = guest_units

    @property
    def health_and_safety(self):
        """Gets the health_and_safety of this Lodging.


        :return: The health_and_safety of this Lodging.
        :rtype: HealthAndSafety
        """
        return self._health_and_safety

    @health_and_safety.setter
    def health_and_safety(self, health_and_safety):
        """Sets the health_and_safety of this Lodging.


        :param health_and_safety: The health_and_safety of this Lodging.
        :type health_and_safety: HealthAndSafety
        """

        self._health_and_safety = health_and_safety

    @property
    def housekeeping(self):
        """Gets the housekeeping of this Lodging.


        :return: The housekeeping of this Lodging.
        :rtype: Housekeeping
        """
        return self._housekeeping

    @housekeeping.setter
    def housekeeping(self, housekeeping):
        """Sets the housekeeping of this Lodging.


        :param housekeeping: The housekeeping of this Lodging.
        :type housekeeping: Housekeeping
        """

        self._housekeeping = housekeeping

    @property
    def metadata(self):
        """Gets the metadata of this Lodging.


        :return: The metadata of this Lodging.
        :rtype: LodgingMetadata
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this Lodging.


        :param metadata: The metadata of this Lodging.
        :type metadata: LodgingMetadata
        """

        self._metadata = metadata

    @property
    def name(self):
        """Gets the name of this Lodging.

        Required. Google identifier for this location in the form: `accounts/{account_id}/locations/{location_id}/lodging`

        :return: The name of this Lodging.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Lodging.

        Required. Google identifier for this location in the form: `accounts/{account_id}/locations/{location_id}/lodging`

        :param name: The name of this Lodging.
        :type name: str
        """

        self._name = name

    @property
    def parking(self):
        """Gets the parking of this Lodging.


        :return: The parking of this Lodging.
        :rtype: Parking
        """
        return self._parking

    @parking.setter
    def parking(self, parking):
        """Sets the parking of this Lodging.


        :param parking: The parking of this Lodging.
        :type parking: Parking
        """

        self._parking = parking

    @property
    def pets(self):
        """Gets the pets of this Lodging.


        :return: The pets of this Lodging.
        :rtype: Pets
        """
        return self._pets

    @pets.setter
    def pets(self, pets):
        """Sets the pets of this Lodging.


        :param pets: The pets of this Lodging.
        :type pets: Pets
        """

        self._pets = pets

    @property
    def policies(self):
        """Gets the policies of this Lodging.


        :return: The policies of this Lodging.
        :rtype: Policies
        """
        return self._policies

    @policies.setter
    def policies(self, policies):
        """Sets the policies of this Lodging.


        :param policies: The policies of this Lodging.
        :type policies: Policies
        """

        self._policies = policies

    @property
    def pools(self):
        """Gets the pools of this Lodging.


        :return: The pools of this Lodging.
        :rtype: Pools
        """
        return self._pools

    @pools.setter
    def pools(self, pools):
        """Sets the pools of this Lodging.


        :param pools: The pools of this Lodging.
        :type pools: Pools
        """

        self._pools = pools

    @property
    def _property(self):
        """Gets the _property of this Lodging.


        :return: The _property of this Lodging.
        :rtype: ModelProperty
        """
        return self.__property

    @_property.setter
    def _property(self, _property):
        """Sets the _property of this Lodging.


        :param _property: The _property of this Lodging.
        :type _property: ModelProperty
        """

        self.__property = _property

    @property
    def services(self):
        """Gets the services of this Lodging.


        :return: The services of this Lodging.
        :rtype: Services
        """
        return self._services

    @services.setter
    def services(self, services):
        """Sets the services of this Lodging.


        :param services: The services of this Lodging.
        :type services: Services
        """

        self._services = services

    @property
    def some_units(self):
        """Gets the some_units of this Lodging.


        :return: The some_units of this Lodging.
        :rtype: GuestUnitFeatures
        """
        return self._some_units

    @some_units.setter
    def some_units(self, some_units):
        """Sets the some_units of this Lodging.


        :param some_units: The some_units of this Lodging.
        :type some_units: GuestUnitFeatures
        """

        self._some_units = some_units

    @property
    def transportation(self):
        """Gets the transportation of this Lodging.


        :return: The transportation of this Lodging.
        :rtype: Transportation
        """
        return self._transportation

    @transportation.setter
    def transportation(self, transportation):
        """Sets the transportation of this Lodging.


        :param transportation: The transportation of this Lodging.
        :type transportation: Transportation
        """

        self._transportation = transportation

    @property
    def wellness(self):
        """Gets the wellness of this Lodging.


        :return: The wellness of this Lodging.
        :rtype: Wellness
        """
        return self._wellness

    @wellness.setter
    def wellness(self, wellness):
        """Sets the wellness of this Lodging.


        :param wellness: The wellness of this Lodging.
        :type wellness: Wellness
        """

        self._wellness = wellness
