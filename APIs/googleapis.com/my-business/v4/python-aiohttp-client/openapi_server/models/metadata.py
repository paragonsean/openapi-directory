# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.duplicate import Duplicate
from openapi_server import util


class Metadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, duplicate: Duplicate=None, maps_url: str=None, new_review_url: str=None):
        """Metadata - a model defined in OpenAPI

        :param duplicate: The duplicate of this Metadata.
        :param maps_url: The maps_url of this Metadata.
        :param new_review_url: The new_review_url of this Metadata.
        """
        self.openapi_types = {
            'duplicate': Duplicate,
            'maps_url': str,
            'new_review_url': str
        }

        self.attribute_map = {
            'duplicate': 'duplicate',
            'maps_url': 'mapsUrl',
            'new_review_url': 'newReviewUrl'
        }

        self._duplicate = duplicate
        self._maps_url = maps_url
        self._new_review_url = new_review_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Metadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Metadata of this Metadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def duplicate(self):
        """Gets the duplicate of this Metadata.


        :return: The duplicate of this Metadata.
        :rtype: Duplicate
        """
        return self._duplicate

    @duplicate.setter
    def duplicate(self, duplicate):
        """Sets the duplicate of this Metadata.


        :param duplicate: The duplicate of this Metadata.
        :type duplicate: Duplicate
        """

        self._duplicate = duplicate

    @property
    def maps_url(self):
        """Gets the maps_url of this Metadata.

        A link to the location on Maps.

        :return: The maps_url of this Metadata.
        :rtype: str
        """
        return self._maps_url

    @maps_url.setter
    def maps_url(self, maps_url):
        """Sets the maps_url of this Metadata.

        A link to the location on Maps.

        :param maps_url: The maps_url of this Metadata.
        :type maps_url: str
        """

        self._maps_url = maps_url

    @property
    def new_review_url(self):
        """Gets the new_review_url of this Metadata.

        A link to the page on Google Search where a customer can leave a review for the location.

        :return: The new_review_url of this Metadata.
        :rtype: str
        """
        return self._new_review_url

    @new_review_url.setter
    def new_review_url(self, new_review_url):
        """Sets the new_review_url of this Metadata.

        A link to the page on Google Search where a customer can leave a review for the location.

        :param new_review_url: The new_review_url of this Metadata.
        :type new_review_url: str
        """

        self._new_review_url = new_review_url
