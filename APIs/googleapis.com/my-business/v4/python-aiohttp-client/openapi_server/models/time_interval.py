# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.model_date import ModelDate
from openapi_server.models.time_of_day import TimeOfDay
from openapi_server import util


class TimeInterval(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, end_date: ModelDate=None, end_time: TimeOfDay=None, start_date: ModelDate=None, start_time: TimeOfDay=None):
        """TimeInterval - a model defined in OpenAPI

        :param end_date: The end_date of this TimeInterval.
        :param end_time: The end_time of this TimeInterval.
        :param start_date: The start_date of this TimeInterval.
        :param start_time: The start_time of this TimeInterval.
        """
        self.openapi_types = {
            'end_date': ModelDate,
            'end_time': TimeOfDay,
            'start_date': ModelDate,
            'start_time': TimeOfDay
        }

        self.attribute_map = {
            'end_date': 'endDate',
            'end_time': 'endTime',
            'start_date': 'startDate',
            'start_time': 'startTime'
        }

        self._end_date = end_date
        self._end_time = end_time
        self._start_date = start_date
        self._start_time = start_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TimeInterval':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TimeInterval of this TimeInterval.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def end_date(self):
        """Gets the end_date of this TimeInterval.


        :return: The end_date of this TimeInterval.
        :rtype: ModelDate
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date):
        """Sets the end_date of this TimeInterval.


        :param end_date: The end_date of this TimeInterval.
        :type end_date: ModelDate
        """

        self._end_date = end_date

    @property
    def end_time(self):
        """Gets the end_time of this TimeInterval.


        :return: The end_time of this TimeInterval.
        :rtype: TimeOfDay
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this TimeInterval.


        :param end_time: The end_time of this TimeInterval.
        :type end_time: TimeOfDay
        """

        self._end_time = end_time

    @property
    def start_date(self):
        """Gets the start_date of this TimeInterval.


        :return: The start_date of this TimeInterval.
        :rtype: ModelDate
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """Sets the start_date of this TimeInterval.


        :param start_date: The start_date of this TimeInterval.
        :type start_date: ModelDate
        """

        self._start_date = start_date

    @property
    def start_time(self):
        """Gets the start_time of this TimeInterval.


        :return: The start_time of this TimeInterval.
        :rtype: TimeOfDay
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this TimeInterval.


        :param start_time: The start_time of this TimeInterval.
        :type start_time: TimeOfDay
        """

        self._start_time = start_time
