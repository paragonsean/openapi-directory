# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Axis(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, end: float=None, start: float=None, tag: str=None):
        """Axis - a model defined in OpenAPI

        :param end: The end of this Axis.
        :param start: The start of this Axis.
        :param tag: The tag of this Axis.
        """
        self.openapi_types = {
            'end': float,
            'start': float,
            'tag': str
        }

        self.attribute_map = {
            'end': 'end',
            'start': 'start',
            'tag': 'tag'
        }

        self._end = end
        self._start = start
        self._tag = tag

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Axis':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Axis of this Axis.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def end(self):
        """Gets the end of this Axis.

        maximum value

        :return: The end of this Axis.
        :rtype: float
        """
        return self._end

    @end.setter
    def end(self, end):
        """Sets the end of this Axis.

        maximum value

        :param end: The end of this Axis.
        :type end: float
        """

        self._end = end

    @property
    def start(self):
        """Gets the start of this Axis.

        minimum value

        :return: The start of this Axis.
        :rtype: float
        """
        return self._start

    @start.setter
    def start(self, start):
        """Sets the start of this Axis.

        minimum value

        :param start: The start of this Axis.
        :type start: float
        """

        self._start = start

    @property
    def tag(self):
        """Gets the tag of this Axis.

        tag name.

        :return: The tag of this Axis.
        :rtype: str
        """
        return self._tag

    @tag.setter
    def tag(self, tag):
        """Sets the tag of this Axis.

        tag name.

        :param tag: The tag of this Axis.
        :type tag: str
        """

        self._tag = tag
