/**
 * Web Fonts Developer API
 * The Google Web Fonts Developer API lets you retrieve information about web fonts served by Google.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWebfont.h
 *
 * Metadata describing a family of fonts.
 */

#ifndef OAIWebfont_H
#define OAIWebfont_H

#include <QJsonObject>

#include "OAIAxis.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAxis;

class OAIWebfont : public OAIObject {
public:
    OAIWebfont();
    OAIWebfont(QString json);
    ~OAIWebfont() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIAxis> getAxes() const;
    void setAxes(const QList<OAIAxis> &axes);
    bool is_axes_Set() const;
    bool is_axes_Valid() const;

    QString getCategory() const;
    void setCategory(const QString &category);
    bool is_category_Set() const;
    bool is_category_Valid() const;

    QString getFamily() const;
    void setFamily(const QString &family);
    bool is_family_Set() const;
    bool is_family_Valid() const;

    QMap<QString, QString> getFiles() const;
    void setFiles(const QMap<QString, QString> &files);
    bool is_files_Set() const;
    bool is_files_Valid() const;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    QString getLastModified() const;
    void setLastModified(const QString &last_modified);
    bool is_last_modified_Set() const;
    bool is_last_modified_Valid() const;

    QString getMenu() const;
    void setMenu(const QString &menu);
    bool is_menu_Set() const;
    bool is_menu_Valid() const;

    QList<QString> getSubsets() const;
    void setSubsets(const QList<QString> &subsets);
    bool is_subsets_Set() const;
    bool is_subsets_Valid() const;

    QList<QString> getVariants() const;
    void setVariants(const QList<QString> &variants);
    bool is_variants_Set() const;
    bool is_variants_Valid() const;

    QString getVersion() const;
    void setVersion(const QString &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIAxis> m_axes;
    bool m_axes_isSet;
    bool m_axes_isValid;

    QString m_category;
    bool m_category_isSet;
    bool m_category_isValid;

    QString m_family;
    bool m_family_isSet;
    bool m_family_isValid;

    QMap<QString, QString> m_files;
    bool m_files_isSet;
    bool m_files_isValid;

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    QString m_last_modified;
    bool m_last_modified_isSet;
    bool m_last_modified_isValid;

    QString m_menu;
    bool m_menu_isSet;
    bool m_menu_isValid;

    QList<QString> m_subsets;
    bool m_subsets_isSet;
    bool m_subsets_isValid;

    QList<QString> m_variants;
    bool m_variants_isSet;
    bool m_variants_isValid;

    QString m_version;
    bool m_version_isSet;
    bool m_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWebfont)

#endif // OAIWebfont_H
