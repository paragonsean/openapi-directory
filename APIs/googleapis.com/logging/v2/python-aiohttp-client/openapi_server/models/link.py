# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.big_query_dataset import BigQueryDataset
from openapi_server import util


class Link(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bigquery_dataset: BigQueryDataset=None, create_time: str=None, description: str=None, lifecycle_state: str=None, name: str=None):
        """Link - a model defined in OpenAPI

        :param bigquery_dataset: The bigquery_dataset of this Link.
        :param create_time: The create_time of this Link.
        :param description: The description of this Link.
        :param lifecycle_state: The lifecycle_state of this Link.
        :param name: The name of this Link.
        """
        self.openapi_types = {
            'bigquery_dataset': BigQueryDataset,
            'create_time': str,
            'description': str,
            'lifecycle_state': str,
            'name': str
        }

        self.attribute_map = {
            'bigquery_dataset': 'bigqueryDataset',
            'create_time': 'createTime',
            'description': 'description',
            'lifecycle_state': 'lifecycleState',
            'name': 'name'
        }

        self._bigquery_dataset = bigquery_dataset
        self._create_time = create_time
        self._description = description
        self._lifecycle_state = lifecycle_state
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Link':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Link of this Link.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bigquery_dataset(self):
        """Gets the bigquery_dataset of this Link.


        :return: The bigquery_dataset of this Link.
        :rtype: BigQueryDataset
        """
        return self._bigquery_dataset

    @bigquery_dataset.setter
    def bigquery_dataset(self, bigquery_dataset):
        """Sets the bigquery_dataset of this Link.


        :param bigquery_dataset: The bigquery_dataset of this Link.
        :type bigquery_dataset: BigQueryDataset
        """

        self._bigquery_dataset = bigquery_dataset

    @property
    def create_time(self):
        """Gets the create_time of this Link.

        Output only. The creation timestamp of the link.

        :return: The create_time of this Link.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this Link.

        Output only. The creation timestamp of the link.

        :param create_time: The create_time of this Link.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def description(self):
        """Gets the description of this Link.

        Optional. Describes this link.The maximum length of the description is 8000 characters.

        :return: The description of this Link.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this Link.

        Optional. Describes this link.The maximum length of the description is 8000 characters.

        :param description: The description of this Link.
        :type description: str
        """

        self._description = description

    @property
    def lifecycle_state(self):
        """Gets the lifecycle_state of this Link.

        Output only. The resource lifecycle state.

        :return: The lifecycle_state of this Link.
        :rtype: str
        """
        return self._lifecycle_state

    @lifecycle_state.setter
    def lifecycle_state(self, lifecycle_state):
        """Sets the lifecycle_state of this Link.

        Output only. The resource lifecycle state.

        :param lifecycle_state: The lifecycle_state of this Link.
        :type lifecycle_state: str
        """
        allowed_values = ["LIFECYCLE_STATE_UNSPECIFIED", "ACTIVE", "DELETE_REQUESTED", "UPDATING", "CREATING", "FAILED"]  # noqa: E501
        if lifecycle_state not in allowed_values:
            raise ValueError(
                "Invalid value for `lifecycle_state` ({0}), must be one of {1}"
                .format(lifecycle_state, allowed_values)
            )

        self._lifecycle_state = lifecycle_state

    @property
    def name(self):
        """Gets the name of this Link.

        Output only. The resource name of the link. The name can have up to 100 characters. A valid link id (at the end of the link name) must only have alphanumeric characters and underscores within it. \"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]\" \"organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]\" \"billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]\" \"folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]\" For example:`projects/my-project/locations/global/buckets/my-bucket/links/my_link

        :return: The name of this Link.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Link.

        Output only. The resource name of the link. The name can have up to 100 characters. A valid link id (at the end of the link name) must only have alphanumeric characters and underscores within it. \"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]\" \"organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]\" \"billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]\" \"folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]\" For example:`projects/my-project/locations/global/buckets/my-bucket/links/my_link

        :param name: The name of this Link.
        :type name: str
        """

        self._name = name
