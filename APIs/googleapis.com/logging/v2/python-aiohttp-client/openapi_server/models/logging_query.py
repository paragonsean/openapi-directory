# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.summary_field import SummaryField
from openapi_server import util


class LoggingQuery(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, filter: str=None, summary_field_end: int=None, summary_field_start: int=None, summary_fields: List[SummaryField]=None):
        """LoggingQuery - a model defined in OpenAPI

        :param filter: The filter of this LoggingQuery.
        :param summary_field_end: The summary_field_end of this LoggingQuery.
        :param summary_field_start: The summary_field_start of this LoggingQuery.
        :param summary_fields: The summary_fields of this LoggingQuery.
        """
        self.openapi_types = {
            'filter': str,
            'summary_field_end': int,
            'summary_field_start': int,
            'summary_fields': List[SummaryField]
        }

        self.attribute_map = {
            'filter': 'filter',
            'summary_field_end': 'summaryFieldEnd',
            'summary_field_start': 'summaryFieldStart',
            'summary_fields': 'summaryFields'
        }

        self._filter = filter
        self._summary_field_end = summary_field_end
        self._summary_field_start = summary_field_start
        self._summary_fields = summary_fields

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LoggingQuery':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LoggingQuery of this LoggingQuery.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def filter(self):
        """Gets the filter of this LoggingQuery.

        Required. An advanced query using the Logging Query Language (https://cloud.google.com/logging/docs/view/logging-query-language). The maximum length of the filter is 20000 characters.

        :return: The filter of this LoggingQuery.
        :rtype: str
        """
        return self._filter

    @filter.setter
    def filter(self, filter):
        """Sets the filter of this LoggingQuery.

        Required. An advanced query using the Logging Query Language (https://cloud.google.com/logging/docs/view/logging-query-language). The maximum length of the filter is 20000 characters.

        :param filter: The filter of this LoggingQuery.
        :type filter: str
        """

        self._filter = filter

    @property
    def summary_field_end(self):
        """Gets the summary_field_end of this LoggingQuery.

        Characters will be counted from the end of the string.

        :return: The summary_field_end of this LoggingQuery.
        :rtype: int
        """
        return self._summary_field_end

    @summary_field_end.setter
    def summary_field_end(self, summary_field_end):
        """Sets the summary_field_end of this LoggingQuery.

        Characters will be counted from the end of the string.

        :param summary_field_end: The summary_field_end of this LoggingQuery.
        :type summary_field_end: int
        """

        self._summary_field_end = summary_field_end

    @property
    def summary_field_start(self):
        """Gets the summary_field_start of this LoggingQuery.

        Characters will be counted from the start of the string.

        :return: The summary_field_start of this LoggingQuery.
        :rtype: int
        """
        return self._summary_field_start

    @summary_field_start.setter
    def summary_field_start(self, summary_field_start):
        """Sets the summary_field_start of this LoggingQuery.

        Characters will be counted from the start of the string.

        :param summary_field_start: The summary_field_start of this LoggingQuery.
        :type summary_field_start: int
        """

        self._summary_field_start = summary_field_start

    @property
    def summary_fields(self):
        """Gets the summary_fields of this LoggingQuery.

        Optional. The set of summary fields to display for this saved query.

        :return: The summary_fields of this LoggingQuery.
        :rtype: List[SummaryField]
        """
        return self._summary_fields

    @summary_fields.setter
    def summary_fields(self, summary_fields):
        """Sets the summary_fields of this LoggingQuery.

        Optional. The set of summary fields to display for this saved query.

        :param summary_fields: The summary_fields of this LoggingQuery.
        :type summary_fields: List[SummaryField]
        """

        self._summary_fields = summary_fields
