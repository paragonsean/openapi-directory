# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class OpsAnalyticsQuery(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, sql_query_text: str=None):
        """OpsAnalyticsQuery - a model defined in OpenAPI

        :param sql_query_text: The sql_query_text of this OpsAnalyticsQuery.
        """
        self.openapi_types = {
            'sql_query_text': str
        }

        self.attribute_map = {
            'sql_query_text': 'sqlQueryText'
        }

        self._sql_query_text = sql_query_text

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OpsAnalyticsQuery':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OpsAnalyticsQuery of this OpsAnalyticsQuery.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def sql_query_text(self):
        """Gets the sql_query_text of this OpsAnalyticsQuery.

        Required. A logs analytics SQL query, which generally follows BigQuery format.This is the SQL query that appears in the Log Analytics UI's query editor.

        :return: The sql_query_text of this OpsAnalyticsQuery.
        :rtype: str
        """
        return self._sql_query_text

    @sql_query_text.setter
    def sql_query_text(self, sql_query_text):
        """Sets the sql_query_text of this OpsAnalyticsQuery.

        Required. A logs analytics SQL query, which generally follows BigQuery format.This is the SQL query that appears in the Log Analytics UI's query editor.

        :param sql_query_text: The sql_query_text of this OpsAnalyticsQuery.
        :type sql_query_text: str
        """

        self._sql_query_text = sql_query_text
