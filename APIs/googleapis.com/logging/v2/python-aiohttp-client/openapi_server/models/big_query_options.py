# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BigQueryOptions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, use_partitioned_tables: bool=None, uses_timestamp_column_partitioning: bool=None):
        """BigQueryOptions - a model defined in OpenAPI

        :param use_partitioned_tables: The use_partitioned_tables of this BigQueryOptions.
        :param uses_timestamp_column_partitioning: The uses_timestamp_column_partitioning of this BigQueryOptions.
        """
        self.openapi_types = {
            'use_partitioned_tables': bool,
            'uses_timestamp_column_partitioning': bool
        }

        self.attribute_map = {
            'use_partitioned_tables': 'usePartitionedTables',
            'uses_timestamp_column_partitioning': 'usesTimestampColumnPartitioning'
        }

        self._use_partitioned_tables = use_partitioned_tables
        self._uses_timestamp_column_partitioning = uses_timestamp_column_partitioning

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BigQueryOptions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BigQueryOptions of this BigQueryOptions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def use_partitioned_tables(self):
        """Gets the use_partitioned_tables of this BigQueryOptions.

        Optional. Whether to use BigQuery's partition tables (https://cloud.google.com/bigquery/docs/partitioned-tables). By default, Cloud Logging creates dated tables based on the log entries' timestamps, e.g. syslog_20170523. With partitioned tables the date suffix is no longer present and special query syntax (https://cloud.google.com/bigquery/docs/querying-partitioned-tables) has to be used instead. In both cases, tables are sharded based on UTC timezone.

        :return: The use_partitioned_tables of this BigQueryOptions.
        :rtype: bool
        """
        return self._use_partitioned_tables

    @use_partitioned_tables.setter
    def use_partitioned_tables(self, use_partitioned_tables):
        """Sets the use_partitioned_tables of this BigQueryOptions.

        Optional. Whether to use BigQuery's partition tables (https://cloud.google.com/bigquery/docs/partitioned-tables). By default, Cloud Logging creates dated tables based on the log entries' timestamps, e.g. syslog_20170523. With partitioned tables the date suffix is no longer present and special query syntax (https://cloud.google.com/bigquery/docs/querying-partitioned-tables) has to be used instead. In both cases, tables are sharded based on UTC timezone.

        :param use_partitioned_tables: The use_partitioned_tables of this BigQueryOptions.
        :type use_partitioned_tables: bool
        """

        self._use_partitioned_tables = use_partitioned_tables

    @property
    def uses_timestamp_column_partitioning(self):
        """Gets the uses_timestamp_column_partitioning of this BigQueryOptions.

        Output only. True if new timestamp column based partitioning is in use, false if legacy ingress-time partitioning is in use.All new sinks will have this field set true and will use timestamp column based partitioning. If use_partitioned_tables is false, this value has no meaning and will be false. Legacy sinks using partitioned tables will have this field set to false.

        :return: The uses_timestamp_column_partitioning of this BigQueryOptions.
        :rtype: bool
        """
        return self._uses_timestamp_column_partitioning

    @uses_timestamp_column_partitioning.setter
    def uses_timestamp_column_partitioning(self, uses_timestamp_column_partitioning):
        """Sets the uses_timestamp_column_partitioning of this BigQueryOptions.

        Output only. True if new timestamp column based partitioning is in use, false if legacy ingress-time partitioning is in use.All new sinks will have this field set true and will use timestamp column based partitioning. If use_partitioned_tables is false, this value has no meaning and will be false. Legacy sinks using partitioned tables will have this field set to false.

        :param uses_timestamp_column_partitioning: The uses_timestamp_column_partitioning of this BigQueryOptions.
        :type uses_timestamp_column_partitioning: bool
        """

        self._uses_timestamp_column_partitioning = uses_timestamp_column_partitioning
