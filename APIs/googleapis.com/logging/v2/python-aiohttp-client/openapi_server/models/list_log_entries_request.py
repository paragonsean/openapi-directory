# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ListLogEntriesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, filter: str=None, order_by: str=None, page_size: int=None, page_token: str=None, project_ids: List[str]=None, resource_names: List[str]=None):
        """ListLogEntriesRequest - a model defined in OpenAPI

        :param filter: The filter of this ListLogEntriesRequest.
        :param order_by: The order_by of this ListLogEntriesRequest.
        :param page_size: The page_size of this ListLogEntriesRequest.
        :param page_token: The page_token of this ListLogEntriesRequest.
        :param project_ids: The project_ids of this ListLogEntriesRequest.
        :param resource_names: The resource_names of this ListLogEntriesRequest.
        """
        self.openapi_types = {
            'filter': str,
            'order_by': str,
            'page_size': int,
            'page_token': str,
            'project_ids': List[str],
            'resource_names': List[str]
        }

        self.attribute_map = {
            'filter': 'filter',
            'order_by': 'orderBy',
            'page_size': 'pageSize',
            'page_token': 'pageToken',
            'project_ids': 'projectIds',
            'resource_names': 'resourceNames'
        }

        self._filter = filter
        self._order_by = order_by
        self._page_size = page_size
        self._page_token = page_token
        self._project_ids = project_ids
        self._resource_names = resource_names

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListLogEntriesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListLogEntriesRequest of this ListLogEntriesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def filter(self):
        """Gets the filter of this ListLogEntriesRequest.

        Optional. A filter that chooses which log entries to return. For more information, see Logging query language (https://cloud.google.com/logging/docs/view/logging-query-language).Only log entries that match the filter are returned. An empty filter matches all log entries in the resources listed in resource_names. Referencing a parent resource that is not listed in resource_names will cause the filter to return no results. The maximum length of a filter is 20,000 characters.

        :return: The filter of this ListLogEntriesRequest.
        :rtype: str
        """
        return self._filter

    @filter.setter
    def filter(self, filter):
        """Sets the filter of this ListLogEntriesRequest.

        Optional. A filter that chooses which log entries to return. For more information, see Logging query language (https://cloud.google.com/logging/docs/view/logging-query-language).Only log entries that match the filter are returned. An empty filter matches all log entries in the resources listed in resource_names. Referencing a parent resource that is not listed in resource_names will cause the filter to return no results. The maximum length of a filter is 20,000 characters.

        :param filter: The filter of this ListLogEntriesRequest.
        :type filter: str
        """

        self._filter = filter

    @property
    def order_by(self):
        """Gets the order_by of this ListLogEntriesRequest.

        Optional. How the results should be sorted. Presently, the only permitted values are \"timestamp asc\" (default) and \"timestamp desc\". The first option returns entries in order of increasing values of LogEntry.timestamp (oldest first), and the second option returns entries in order of decreasing timestamps (newest first). Entries with equal timestamps are returned in order of their insert_id values.

        :return: The order_by of this ListLogEntriesRequest.
        :rtype: str
        """
        return self._order_by

    @order_by.setter
    def order_by(self, order_by):
        """Sets the order_by of this ListLogEntriesRequest.

        Optional. How the results should be sorted. Presently, the only permitted values are \"timestamp asc\" (default) and \"timestamp desc\". The first option returns entries in order of increasing values of LogEntry.timestamp (oldest first), and the second option returns entries in order of decreasing timestamps (newest first). Entries with equal timestamps are returned in order of their insert_id values.

        :param order_by: The order_by of this ListLogEntriesRequest.
        :type order_by: str
        """

        self._order_by = order_by

    @property
    def page_size(self):
        """Gets the page_size of this ListLogEntriesRequest.

        Optional. The maximum number of results to return from this request. Default is 50. If the value is negative, the request is rejected.The presence of next_page_token in the response indicates that more results might be available.

        :return: The page_size of this ListLogEntriesRequest.
        :rtype: int
        """
        return self._page_size

    @page_size.setter
    def page_size(self, page_size):
        """Sets the page_size of this ListLogEntriesRequest.

        Optional. The maximum number of results to return from this request. Default is 50. If the value is negative, the request is rejected.The presence of next_page_token in the response indicates that more results might be available.

        :param page_size: The page_size of this ListLogEntriesRequest.
        :type page_size: int
        """

        self._page_size = page_size

    @property
    def page_token(self):
        """Gets the page_token of this ListLogEntriesRequest.

        Optional. If present, then retrieve the next batch of results from the preceding call to this method. page_token must be the value of next_page_token from the previous response. The values of other method parameters should be identical to those in the previous call.

        :return: The page_token of this ListLogEntriesRequest.
        :rtype: str
        """
        return self._page_token

    @page_token.setter
    def page_token(self, page_token):
        """Sets the page_token of this ListLogEntriesRequest.

        Optional. If present, then retrieve the next batch of results from the preceding call to this method. page_token must be the value of next_page_token from the previous response. The values of other method parameters should be identical to those in the previous call.

        :param page_token: The page_token of this ListLogEntriesRequest.
        :type page_token: str
        """

        self._page_token = page_token

    @property
    def project_ids(self):
        """Gets the project_ids of this ListLogEntriesRequest.

        Optional. Deprecated. Use resource_names instead. One or more project identifiers or project numbers from which to retrieve log entries. Example: \"my-project-1A\".

        :return: The project_ids of this ListLogEntriesRequest.
        :rtype: List[str]
        """
        return self._project_ids

    @project_ids.setter
    def project_ids(self, project_ids):
        """Sets the project_ids of this ListLogEntriesRequest.

        Optional. Deprecated. Use resource_names instead. One or more project identifiers or project numbers from which to retrieve log entries. Example: \"my-project-1A\".

        :param project_ids: The project_ids of this ListLogEntriesRequest.
        :type project_ids: List[str]
        """

        self._project_ids = project_ids

    @property
    def resource_names(self):
        """Gets the resource_names of this ListLogEntriesRequest.

        Required. Names of one or more parent resources from which to retrieve log entries: projects/[PROJECT_ID] organizations/[ORGANIZATION_ID] billingAccounts/[BILLING_ACCOUNT_ID] folders/[FOLDER_ID]May alternatively be one or more views: projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID] organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID] billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID] folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]Projects listed in the project_ids field are added to this list. A maximum of 100 resources may be specified in a single request.

        :return: The resource_names of this ListLogEntriesRequest.
        :rtype: List[str]
        """
        return self._resource_names

    @resource_names.setter
    def resource_names(self, resource_names):
        """Sets the resource_names of this ListLogEntriesRequest.

        Required. Names of one or more parent resources from which to retrieve log entries: projects/[PROJECT_ID] organizations/[ORGANIZATION_ID] billingAccounts/[BILLING_ACCOUNT_ID] folders/[FOLDER_ID]May alternatively be one or more views: projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID] organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID] billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID] folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]Projects listed in the project_ids field are added to this list. A maximum of 100 resources may be specified in a single request.

        :param resource_names: The resource_names of this ListLogEntriesRequest.
        :type resource_names: List[str]
        """

        self._resource_names = resource_names
