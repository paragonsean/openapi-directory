# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.link import Link
from openapi_server import util


class CreateLinkRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, link: Link=None, link_id: str=None, parent: str=None):
        """CreateLinkRequest - a model defined in OpenAPI

        :param link: The link of this CreateLinkRequest.
        :param link_id: The link_id of this CreateLinkRequest.
        :param parent: The parent of this CreateLinkRequest.
        """
        self.openapi_types = {
            'link': Link,
            'link_id': str,
            'parent': str
        }

        self.attribute_map = {
            'link': 'link',
            'link_id': 'linkId',
            'parent': 'parent'
        }

        self._link = link
        self._link_id = link_id
        self._parent = parent

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateLinkRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateLinkRequest of this CreateLinkRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def link(self):
        """Gets the link of this CreateLinkRequest.


        :return: The link of this CreateLinkRequest.
        :rtype: Link
        """
        return self._link

    @link.setter
    def link(self, link):
        """Sets the link of this CreateLinkRequest.


        :param link: The link of this CreateLinkRequest.
        :type link: Link
        """

        self._link = link

    @property
    def link_id(self):
        """Gets the link_id of this CreateLinkRequest.

        Required. The ID to use for the link. The link_id can have up to 100 characters. A valid link_id must only have alphanumeric characters and underscores within it.

        :return: The link_id of this CreateLinkRequest.
        :rtype: str
        """
        return self._link_id

    @link_id.setter
    def link_id(self, link_id):
        """Sets the link_id of this CreateLinkRequest.

        Required. The ID to use for the link. The link_id can have up to 100 characters. A valid link_id must only have alphanumeric characters and underscores within it.

        :param link_id: The link_id of this CreateLinkRequest.
        :type link_id: str
        """

        self._link_id = link_id

    @property
    def parent(self):
        """Gets the parent of this CreateLinkRequest.

        Required. The full resource name of the bucket to create a link for. \"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\" \"organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\" \"billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\" \"folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\" 

        :return: The parent of this CreateLinkRequest.
        :rtype: str
        """
        return self._parent

    @parent.setter
    def parent(self, parent):
        """Sets the parent of this CreateLinkRequest.

        Required. The full resource name of the bucket to create a link for. \"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\" \"organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\" \"billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\" \"folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\" 

        :param parent: The parent of this CreateLinkRequest.
        :type parent: str
        """

        self._parent = parent
