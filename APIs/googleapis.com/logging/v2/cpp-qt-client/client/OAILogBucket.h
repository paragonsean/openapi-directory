/**
 * Cloud Logging API
 * Writes log entries and manages your Cloud Logging configuration.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILogBucket.h
 *
 * Describes a repository in which log entries are stored.
 */

#ifndef OAILogBucket_H
#define OAILogBucket_H

#include <QJsonObject>

#include "OAICmekSettings.h"
#include "OAIIndexConfig.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICmekSettings;
class OAIIndexConfig;

class OAILogBucket : public OAIObject {
public:
    OAILogBucket();
    OAILogBucket(QString json);
    ~OAILogBucket() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAnalyticsEnabled() const;
    void setAnalyticsEnabled(const bool &analytics_enabled);
    bool is_analytics_enabled_Set() const;
    bool is_analytics_enabled_Valid() const;

    OAICmekSettings getCmekSettings() const;
    void setCmekSettings(const OAICmekSettings &cmek_settings);
    bool is_cmek_settings_Set() const;
    bool is_cmek_settings_Valid() const;

    QString getCreateTime() const;
    void setCreateTime(const QString &create_time);
    bool is_create_time_Set() const;
    bool is_create_time_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QList<OAIIndexConfig> getIndexConfigs() const;
    void setIndexConfigs(const QList<OAIIndexConfig> &index_configs);
    bool is_index_configs_Set() const;
    bool is_index_configs_Valid() const;

    QString getLifecycleState() const;
    void setLifecycleState(const QString &lifecycle_state);
    bool is_lifecycle_state_Set() const;
    bool is_lifecycle_state_Valid() const;

    bool isLocked() const;
    void setLocked(const bool &locked);
    bool is_locked_Set() const;
    bool is_locked_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList<QString> getRestrictedFields() const;
    void setRestrictedFields(const QList<QString> &restricted_fields);
    bool is_restricted_fields_Set() const;
    bool is_restricted_fields_Valid() const;

    qint32 getRetentionDays() const;
    void setRetentionDays(const qint32 &retention_days);
    bool is_retention_days_Set() const;
    bool is_retention_days_Valid() const;

    QString getUpdateTime() const;
    void setUpdateTime(const QString &update_time);
    bool is_update_time_Set() const;
    bool is_update_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_analytics_enabled;
    bool m_analytics_enabled_isSet;
    bool m_analytics_enabled_isValid;

    OAICmekSettings m_cmek_settings;
    bool m_cmek_settings_isSet;
    bool m_cmek_settings_isValid;

    QString m_create_time;
    bool m_create_time_isSet;
    bool m_create_time_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QList<OAIIndexConfig> m_index_configs;
    bool m_index_configs_isSet;
    bool m_index_configs_isValid;

    QString m_lifecycle_state;
    bool m_lifecycle_state_isSet;
    bool m_lifecycle_state_isValid;

    bool m_locked;
    bool m_locked_isSet;
    bool m_locked_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList<QString> m_restricted_fields;
    bool m_restricted_fields_isSet;
    bool m_restricted_fields_isValid;

    qint32 m_retention_days;
    bool m_retention_days_isSet;
    bool m_retention_days_isValid;

    QString m_update_time;
    bool m_update_time_isSet;
    bool m_update_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILogBucket)

#endif // OAILogBucket_H
