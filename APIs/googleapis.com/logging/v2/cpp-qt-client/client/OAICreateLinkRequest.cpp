/**
 * Cloud Logging API
 * Writes log entries and manages your Cloud Logging configuration.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateLinkRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateLinkRequest::OAICreateLinkRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateLinkRequest::OAICreateLinkRequest() {
    this->initializeModel();
}

OAICreateLinkRequest::~OAICreateLinkRequest() {}

void OAICreateLinkRequest::initializeModel() {

    m_link_isSet = false;
    m_link_isValid = false;

    m_link_id_isSet = false;
    m_link_id_isValid = false;

    m_parent_isSet = false;
    m_parent_isValid = false;
}

void OAICreateLinkRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateLinkRequest::fromJsonObject(QJsonObject json) {

    m_link_isValid = ::OpenAPI::fromJsonValue(m_link, json[QString("link")]);
    m_link_isSet = !json[QString("link")].isNull() && m_link_isValid;

    m_link_id_isValid = ::OpenAPI::fromJsonValue(m_link_id, json[QString("linkId")]);
    m_link_id_isSet = !json[QString("linkId")].isNull() && m_link_id_isValid;

    m_parent_isValid = ::OpenAPI::fromJsonValue(m_parent, json[QString("parent")]);
    m_parent_isSet = !json[QString("parent")].isNull() && m_parent_isValid;
}

QString OAICreateLinkRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateLinkRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_link.isSet()) {
        obj.insert(QString("link"), ::OpenAPI::toJsonValue(m_link));
    }
    if (m_link_id_isSet) {
        obj.insert(QString("linkId"), ::OpenAPI::toJsonValue(m_link_id));
    }
    if (m_parent_isSet) {
        obj.insert(QString("parent"), ::OpenAPI::toJsonValue(m_parent));
    }
    return obj;
}

OAILink OAICreateLinkRequest::getLink() const {
    return m_link;
}
void OAICreateLinkRequest::setLink(const OAILink &link) {
    m_link = link;
    m_link_isSet = true;
}

bool OAICreateLinkRequest::is_link_Set() const{
    return m_link_isSet;
}

bool OAICreateLinkRequest::is_link_Valid() const{
    return m_link_isValid;
}

QString OAICreateLinkRequest::getLinkId() const {
    return m_link_id;
}
void OAICreateLinkRequest::setLinkId(const QString &link_id) {
    m_link_id = link_id;
    m_link_id_isSet = true;
}

bool OAICreateLinkRequest::is_link_id_Set() const{
    return m_link_id_isSet;
}

bool OAICreateLinkRequest::is_link_id_Valid() const{
    return m_link_id_isValid;
}

QString OAICreateLinkRequest::getParent() const {
    return m_parent;
}
void OAICreateLinkRequest::setParent(const QString &parent) {
    m_parent = parent;
    m_parent_isSet = true;
}

bool OAICreateLinkRequest::is_parent_Set() const{
    return m_parent_isSet;
}

bool OAICreateLinkRequest::is_parent_Valid() const{
    return m_parent_isValid;
}

bool OAICreateLinkRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_link.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_link_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_parent_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateLinkRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
