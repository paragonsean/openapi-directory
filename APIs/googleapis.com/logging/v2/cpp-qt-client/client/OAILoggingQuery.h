/**
 * Cloud Logging API
 * Writes log entries and manages your Cloud Logging configuration.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILoggingQuery.h
 *
 * Describes a Cloud Logging query that can be run in Logs Explorer UI or via the logging API.In addition to the query itself, additional information may be stored to capture the display configuration and other UI state used in association with analysis of query results.
 */

#ifndef OAILoggingQuery_H
#define OAILoggingQuery_H

#include <QJsonObject>

#include "OAISummaryField.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISummaryField;

class OAILoggingQuery : public OAIObject {
public:
    OAILoggingQuery();
    OAILoggingQuery(QString json);
    ~OAILoggingQuery() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getFilter() const;
    void setFilter(const QString &filter);
    bool is_filter_Set() const;
    bool is_filter_Valid() const;

    qint32 getSummaryFieldEnd() const;
    void setSummaryFieldEnd(const qint32 &summary_field_end);
    bool is_summary_field_end_Set() const;
    bool is_summary_field_end_Valid() const;

    qint32 getSummaryFieldStart() const;
    void setSummaryFieldStart(const qint32 &summary_field_start);
    bool is_summary_field_start_Set() const;
    bool is_summary_field_start_Valid() const;

    QList<OAISummaryField> getSummaryFields() const;
    void setSummaryFields(const QList<OAISummaryField> &summary_fields);
    bool is_summary_fields_Set() const;
    bool is_summary_fields_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_filter;
    bool m_filter_isSet;
    bool m_filter_isValid;

    qint32 m_summary_field_end;
    bool m_summary_field_end_isSet;
    bool m_summary_field_end_isValid;

    qint32 m_summary_field_start;
    bool m_summary_field_start_isSet;
    bool m_summary_field_start_isValid;

    QList<OAISummaryField> m_summary_fields;
    bool m_summary_fields_isSet;
    bool m_summary_fields_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILoggingQuery)

#endif // OAILoggingQuery_H
