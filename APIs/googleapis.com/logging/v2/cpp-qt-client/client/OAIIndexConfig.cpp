/**
 * Cloud Logging API
 * Writes log entries and manages your Cloud Logging configuration.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIIndexConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIIndexConfig::OAIIndexConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIIndexConfig::OAIIndexConfig() {
    this->initializeModel();
}

OAIIndexConfig::~OAIIndexConfig() {}

void OAIIndexConfig::initializeModel() {

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_field_path_isSet = false;
    m_field_path_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIIndexConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIIndexConfig::fromJsonObject(QJsonObject json) {

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_field_path_isValid = ::OpenAPI::fromJsonValue(m_field_path, json[QString("fieldPath")]);
    m_field_path_isSet = !json[QString("fieldPath")].isNull() && m_field_path_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIIndexConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIIndexConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_field_path_isSet) {
        obj.insert(QString("fieldPath"), ::OpenAPI::toJsonValue(m_field_path));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QString OAIIndexConfig::getCreateTime() const {
    return m_create_time;
}
void OAIIndexConfig::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIIndexConfig::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIIndexConfig::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QString OAIIndexConfig::getFieldPath() const {
    return m_field_path;
}
void OAIIndexConfig::setFieldPath(const QString &field_path) {
    m_field_path = field_path;
    m_field_path_isSet = true;
}

bool OAIIndexConfig::is_field_path_Set() const{
    return m_field_path_isSet;
}

bool OAIIndexConfig::is_field_path_Valid() const{
    return m_field_path_isValid;
}

QString OAIIndexConfig::getType() const {
    return m_type;
}
void OAIIndexConfig::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIIndexConfig::is_type_Set() const{
    return m_type_isSet;
}

bool OAIIndexConfig::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIIndexConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_field_path_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIIndexConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
