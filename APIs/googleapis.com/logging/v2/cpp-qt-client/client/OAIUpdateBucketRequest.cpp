/**
 * Cloud Logging API
 * Writes log entries and manages your Cloud Logging configuration.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateBucketRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateBucketRequest::OAIUpdateBucketRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateBucketRequest::OAIUpdateBucketRequest() {
    this->initializeModel();
}

OAIUpdateBucketRequest::~OAIUpdateBucketRequest() {}

void OAIUpdateBucketRequest::initializeModel() {

    m_bucket_isSet = false;
    m_bucket_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_update_mask_isSet = false;
    m_update_mask_isValid = false;
}

void OAIUpdateBucketRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateBucketRequest::fromJsonObject(QJsonObject json) {

    m_bucket_isValid = ::OpenAPI::fromJsonValue(m_bucket, json[QString("bucket")]);
    m_bucket_isSet = !json[QString("bucket")].isNull() && m_bucket_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_update_mask_isValid = ::OpenAPI::fromJsonValue(m_update_mask, json[QString("updateMask")]);
    m_update_mask_isSet = !json[QString("updateMask")].isNull() && m_update_mask_isValid;
}

QString OAIUpdateBucketRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateBucketRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_bucket.isSet()) {
        obj.insert(QString("bucket"), ::OpenAPI::toJsonValue(m_bucket));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_update_mask_isSet) {
        obj.insert(QString("updateMask"), ::OpenAPI::toJsonValue(m_update_mask));
    }
    return obj;
}

OAILogBucket OAIUpdateBucketRequest::getBucket() const {
    return m_bucket;
}
void OAIUpdateBucketRequest::setBucket(const OAILogBucket &bucket) {
    m_bucket = bucket;
    m_bucket_isSet = true;
}

bool OAIUpdateBucketRequest::is_bucket_Set() const{
    return m_bucket_isSet;
}

bool OAIUpdateBucketRequest::is_bucket_Valid() const{
    return m_bucket_isValid;
}

QString OAIUpdateBucketRequest::getName() const {
    return m_name;
}
void OAIUpdateBucketRequest::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIUpdateBucketRequest::is_name_Set() const{
    return m_name_isSet;
}

bool OAIUpdateBucketRequest::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIUpdateBucketRequest::getUpdateMask() const {
    return m_update_mask;
}
void OAIUpdateBucketRequest::setUpdateMask(const QString &update_mask) {
    m_update_mask = update_mask;
    m_update_mask_isSet = true;
}

bool OAIUpdateBucketRequest::is_update_mask_Set() const{
    return m_update_mask_isSet;
}

bool OAIUpdateBucketRequest::is_update_mask_Valid() const{
    return m_update_mask_isValid;
}

bool OAIUpdateBucketRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bucket.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_mask_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateBucketRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
