/**
 * Cloud Logging API
 * Writes log entries and manages your Cloud Logging configuration.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILinkMetadata.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILinkMetadata::OAILinkMetadata(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILinkMetadata::OAILinkMetadata() {
    this->initializeModel();
}

OAILinkMetadata::~OAILinkMetadata() {}

void OAILinkMetadata::initializeModel() {

    m_create_link_request_isSet = false;
    m_create_link_request_isValid = false;

    m_delete_link_request_isSet = false;
    m_delete_link_request_isValid = false;

    m_end_time_isSet = false;
    m_end_time_isValid = false;

    m_start_time_isSet = false;
    m_start_time_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;
}

void OAILinkMetadata::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILinkMetadata::fromJsonObject(QJsonObject json) {

    m_create_link_request_isValid = ::OpenAPI::fromJsonValue(m_create_link_request, json[QString("createLinkRequest")]);
    m_create_link_request_isSet = !json[QString("createLinkRequest")].isNull() && m_create_link_request_isValid;

    m_delete_link_request_isValid = ::OpenAPI::fromJsonValue(m_delete_link_request, json[QString("deleteLinkRequest")]);
    m_delete_link_request_isSet = !json[QString("deleteLinkRequest")].isNull() && m_delete_link_request_isValid;

    m_end_time_isValid = ::OpenAPI::fromJsonValue(m_end_time, json[QString("endTime")]);
    m_end_time_isSet = !json[QString("endTime")].isNull() && m_end_time_isValid;

    m_start_time_isValid = ::OpenAPI::fromJsonValue(m_start_time, json[QString("startTime")]);
    m_start_time_isSet = !json[QString("startTime")].isNull() && m_start_time_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;
}

QString OAILinkMetadata::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILinkMetadata::asJsonObject() const {
    QJsonObject obj;
    if (m_create_link_request.isSet()) {
        obj.insert(QString("createLinkRequest"), ::OpenAPI::toJsonValue(m_create_link_request));
    }
    if (m_delete_link_request.isSet()) {
        obj.insert(QString("deleteLinkRequest"), ::OpenAPI::toJsonValue(m_delete_link_request));
    }
    if (m_end_time_isSet) {
        obj.insert(QString("endTime"), ::OpenAPI::toJsonValue(m_end_time));
    }
    if (m_start_time_isSet) {
        obj.insert(QString("startTime"), ::OpenAPI::toJsonValue(m_start_time));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    return obj;
}

OAICreateLinkRequest OAILinkMetadata::getCreateLinkRequest() const {
    return m_create_link_request;
}
void OAILinkMetadata::setCreateLinkRequest(const OAICreateLinkRequest &create_link_request) {
    m_create_link_request = create_link_request;
    m_create_link_request_isSet = true;
}

bool OAILinkMetadata::is_create_link_request_Set() const{
    return m_create_link_request_isSet;
}

bool OAILinkMetadata::is_create_link_request_Valid() const{
    return m_create_link_request_isValid;
}

OAIDeleteLinkRequest OAILinkMetadata::getDeleteLinkRequest() const {
    return m_delete_link_request;
}
void OAILinkMetadata::setDeleteLinkRequest(const OAIDeleteLinkRequest &delete_link_request) {
    m_delete_link_request = delete_link_request;
    m_delete_link_request_isSet = true;
}

bool OAILinkMetadata::is_delete_link_request_Set() const{
    return m_delete_link_request_isSet;
}

bool OAILinkMetadata::is_delete_link_request_Valid() const{
    return m_delete_link_request_isValid;
}

QString OAILinkMetadata::getEndTime() const {
    return m_end_time;
}
void OAILinkMetadata::setEndTime(const QString &end_time) {
    m_end_time = end_time;
    m_end_time_isSet = true;
}

bool OAILinkMetadata::is_end_time_Set() const{
    return m_end_time_isSet;
}

bool OAILinkMetadata::is_end_time_Valid() const{
    return m_end_time_isValid;
}

QString OAILinkMetadata::getStartTime() const {
    return m_start_time;
}
void OAILinkMetadata::setStartTime(const QString &start_time) {
    m_start_time = start_time;
    m_start_time_isSet = true;
}

bool OAILinkMetadata::is_start_time_Set() const{
    return m_start_time_isSet;
}

bool OAILinkMetadata::is_start_time_Valid() const{
    return m_start_time_isValid;
}

QString OAILinkMetadata::getState() const {
    return m_state;
}
void OAILinkMetadata::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAILinkMetadata::is_state_Set() const{
    return m_state_isSet;
}

bool OAILinkMetadata::is_state_Valid() const{
    return m_state_isValid;
}

bool OAILinkMetadata::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_create_link_request.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_delete_link_request.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILinkMetadata::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
