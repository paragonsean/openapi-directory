/**
 * Cloud Logging API
 * Writes log entries and manages your Cloud Logging configuration.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWriteLogEntriesRequest.h
 *
 * The parameters to WriteLogEntries.
 */

#ifndef OAIWriteLogEntriesRequest_H
#define OAIWriteLogEntriesRequest_H

#include <QJsonObject>

#include "OAILogEntry.h"
#include "OAIMonitoredResource.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAILogEntry;
class OAIMonitoredResource;

class OAIWriteLogEntriesRequest : public OAIObject {
public:
    OAIWriteLogEntriesRequest();
    OAIWriteLogEntriesRequest(QString json);
    ~OAIWriteLogEntriesRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isDryRun() const;
    void setDryRun(const bool &dry_run);
    bool is_dry_run_Set() const;
    bool is_dry_run_Valid() const;

    QList<OAILogEntry> getEntries() const;
    void setEntries(const QList<OAILogEntry> &entries);
    bool is_entries_Set() const;
    bool is_entries_Valid() const;

    QMap<QString, QString> getLabels() const;
    void setLabels(const QMap<QString, QString> &labels);
    bool is_labels_Set() const;
    bool is_labels_Valid() const;

    QString getLogName() const;
    void setLogName(const QString &log_name);
    bool is_log_name_Set() const;
    bool is_log_name_Valid() const;

    bool isPartialSuccess() const;
    void setPartialSuccess(const bool &partial_success);
    bool is_partial_success_Set() const;
    bool is_partial_success_Valid() const;

    OAIMonitoredResource getResource() const;
    void setResource(const OAIMonitoredResource &resource);
    bool is_resource_Set() const;
    bool is_resource_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_dry_run;
    bool m_dry_run_isSet;
    bool m_dry_run_isValid;

    QList<OAILogEntry> m_entries;
    bool m_entries_isSet;
    bool m_entries_isValid;

    QMap<QString, QString> m_labels;
    bool m_labels_isSet;
    bool m_labels_isValid;

    QString m_log_name;
    bool m_log_name_isSet;
    bool m_log_name_isValid;

    bool m_partial_success;
    bool m_partial_success_isSet;
    bool m_partial_success_isValid;

    OAIMonitoredResource m_resource;
    bool m_resource_isSet;
    bool m_resource_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWriteLogEntriesRequest)

#endif // OAIWriteLogEntriesRequest_H
