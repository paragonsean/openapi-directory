/*
 * Cloud Logging API
 * Writes log entries and manages your Cloud Logging configuration.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CopyLogEntriesRequest;
import org.openapitools.client.model.ListLogEntriesRequest;
import org.openapitools.client.model.ListLogEntriesResponse;
import org.openapitools.client.model.Operation;
import org.openapitools.client.model.TailLogEntriesRequest;
import org.openapitools.client.model.TailLogEntriesResponse;
import org.openapitools.client.model.WriteLogEntriesRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for EntriesApi
 */
@Disabled
public class EntriesApiTest {

    private final EntriesApi api = new EntriesApi();

    /**
     * Copies a set of log entries from a log bucket to a Cloud Storage bucket.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void loggingEntriesCopyTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        CopyLogEntriesRequest copyLogEntriesRequest = null;
        Operation response = api.loggingEntriesCopy($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, copyLogEntriesRequest);
        // TODO: test validations
    }

    /**
     * Lists log entries. Use this method to retrieve log entries that originated from a project/folder/organization/billing account. For ways to export log entries, see Exporting Logs (https://cloud.google.com/logging/docs/export).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void loggingEntriesListTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        ListLogEntriesRequest listLogEntriesRequest = null;
        ListLogEntriesResponse response = api.loggingEntriesList($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, listLogEntriesRequest);
        // TODO: test validations
    }

    /**
     * Streaming read of log entries as they are received. Until the stream is terminated, it will continue reading logs.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void loggingEntriesTailTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        TailLogEntriesRequest tailLogEntriesRequest = null;
        TailLogEntriesResponse response = api.loggingEntriesTail($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, tailLogEntriesRequest);
        // TODO: test validations
    }

    /**
     * Writes log entries to Logging. This API method is the only way to send log entries to Logging. This method is used, directly or indirectly, by the Logging agent (fluentd) and all logging libraries configured to use Logging. A single request may contain log entries for a maximum of 1000 different resource names (projects, organizations, billing accounts or folders), where the resource name for a log entry is determined from its logName field.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void loggingEntriesWriteTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        WriteLogEntriesRequest writeLogEntriesRequest = null;
        Object response = api.loggingEntriesWrite($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, writeLogEntriesRequest);
        // TODO: test validations
    }

}
