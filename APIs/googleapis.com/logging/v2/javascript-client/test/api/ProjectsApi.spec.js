/**
 * Cloud Logging API
 * Writes log entries and manages your Cloud Logging configuration.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CloudLoggingApi);
  }
}(this, function(expect, CloudLoggingApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CloudLoggingApi.ProjectsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ProjectsApi', function() {
    describe('loggingProjectsExclusionsCreate', function() {
      it('should call loggingProjectsExclusionsCreate successfully', function(done) {
        //uncomment below and update the code to test loggingProjectsExclusionsCreate
        //instance.loggingProjectsExclusionsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('loggingProjectsExclusionsList', function() {
      it('should call loggingProjectsExclusionsList successfully', function(done) {
        //uncomment below and update the code to test loggingProjectsExclusionsList
        //instance.loggingProjectsExclusionsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('loggingProjectsLocationsBucketsCreate', function() {
      it('should call loggingProjectsLocationsBucketsCreate successfully', function(done) {
        //uncomment below and update the code to test loggingProjectsLocationsBucketsCreate
        //instance.loggingProjectsLocationsBucketsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('loggingProjectsLocationsBucketsCreateAsync', function() {
      it('should call loggingProjectsLocationsBucketsCreateAsync successfully', function(done) {
        //uncomment below and update the code to test loggingProjectsLocationsBucketsCreateAsync
        //instance.loggingProjectsLocationsBucketsCreateAsync(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('loggingProjectsLocationsBucketsLinksCreate', function() {
      it('should call loggingProjectsLocationsBucketsLinksCreate successfully', function(done) {
        //uncomment below and update the code to test loggingProjectsLocationsBucketsLinksCreate
        //instance.loggingProjectsLocationsBucketsLinksCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('loggingProjectsLocationsBucketsLinksList', function() {
      it('should call loggingProjectsLocationsBucketsLinksList successfully', function(done) {
        //uncomment below and update the code to test loggingProjectsLocationsBucketsLinksList
        //instance.loggingProjectsLocationsBucketsLinksList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('loggingProjectsLocationsBucketsList', function() {
      it('should call loggingProjectsLocationsBucketsList successfully', function(done) {
        //uncomment below and update the code to test loggingProjectsLocationsBucketsList
        //instance.loggingProjectsLocationsBucketsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('loggingProjectsLocationsBucketsUndelete', function() {
      it('should call loggingProjectsLocationsBucketsUndelete successfully', function(done) {
        //uncomment below and update the code to test loggingProjectsLocationsBucketsUndelete
        //instance.loggingProjectsLocationsBucketsUndelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('loggingProjectsLocationsBucketsUpdateAsync', function() {
      it('should call loggingProjectsLocationsBucketsUpdateAsync successfully', function(done) {
        //uncomment below and update the code to test loggingProjectsLocationsBucketsUpdateAsync
        //instance.loggingProjectsLocationsBucketsUpdateAsync(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('loggingProjectsLocationsBucketsViewsCreate', function() {
      it('should call loggingProjectsLocationsBucketsViewsCreate successfully', function(done) {
        //uncomment below and update the code to test loggingProjectsLocationsBucketsViewsCreate
        //instance.loggingProjectsLocationsBucketsViewsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('loggingProjectsLocationsBucketsViewsList', function() {
      it('should call loggingProjectsLocationsBucketsViewsList successfully', function(done) {
        //uncomment below and update the code to test loggingProjectsLocationsBucketsViewsList
        //instance.loggingProjectsLocationsBucketsViewsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('loggingProjectsLocationsBucketsViewsPatch', function() {
      it('should call loggingProjectsLocationsBucketsViewsPatch successfully', function(done) {
        //uncomment below and update the code to test loggingProjectsLocationsBucketsViewsPatch
        //instance.loggingProjectsLocationsBucketsViewsPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('loggingProjectsLocationsList', function() {
      it('should call loggingProjectsLocationsList successfully', function(done) {
        //uncomment below and update the code to test loggingProjectsLocationsList
        //instance.loggingProjectsLocationsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('loggingProjectsLocationsOperationsCancel', function() {
      it('should call loggingProjectsLocationsOperationsCancel successfully', function(done) {
        //uncomment below and update the code to test loggingProjectsLocationsOperationsCancel
        //instance.loggingProjectsLocationsOperationsCancel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('loggingProjectsLocationsOperationsGet', function() {
      it('should call loggingProjectsLocationsOperationsGet successfully', function(done) {
        //uncomment below and update the code to test loggingProjectsLocationsOperationsGet
        //instance.loggingProjectsLocationsOperationsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('loggingProjectsLocationsOperationsList', function() {
      it('should call loggingProjectsLocationsOperationsList successfully', function(done) {
        //uncomment below and update the code to test loggingProjectsLocationsOperationsList
        //instance.loggingProjectsLocationsOperationsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('loggingProjectsLocationsRecentQueriesList', function() {
      it('should call loggingProjectsLocationsRecentQueriesList successfully', function(done) {
        //uncomment below and update the code to test loggingProjectsLocationsRecentQueriesList
        //instance.loggingProjectsLocationsRecentQueriesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('loggingProjectsLocationsSavedQueriesCreate', function() {
      it('should call loggingProjectsLocationsSavedQueriesCreate successfully', function(done) {
        //uncomment below and update the code to test loggingProjectsLocationsSavedQueriesCreate
        //instance.loggingProjectsLocationsSavedQueriesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('loggingProjectsLocationsSavedQueriesDelete', function() {
      it('should call loggingProjectsLocationsSavedQueriesDelete successfully', function(done) {
        //uncomment below and update the code to test loggingProjectsLocationsSavedQueriesDelete
        //instance.loggingProjectsLocationsSavedQueriesDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('loggingProjectsLocationsSavedQueriesList', function() {
      it('should call loggingProjectsLocationsSavedQueriesList successfully', function(done) {
        //uncomment below and update the code to test loggingProjectsLocationsSavedQueriesList
        //instance.loggingProjectsLocationsSavedQueriesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('loggingProjectsLogsDelete', function() {
      it('should call loggingProjectsLogsDelete successfully', function(done) {
        //uncomment below and update the code to test loggingProjectsLogsDelete
        //instance.loggingProjectsLogsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('loggingProjectsLogsList', function() {
      it('should call loggingProjectsLogsList successfully', function(done) {
        //uncomment below and update the code to test loggingProjectsLogsList
        //instance.loggingProjectsLogsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('loggingProjectsMetricsCreate', function() {
      it('should call loggingProjectsMetricsCreate successfully', function(done) {
        //uncomment below and update the code to test loggingProjectsMetricsCreate
        //instance.loggingProjectsMetricsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('loggingProjectsMetricsDelete', function() {
      it('should call loggingProjectsMetricsDelete successfully', function(done) {
        //uncomment below and update the code to test loggingProjectsMetricsDelete
        //instance.loggingProjectsMetricsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('loggingProjectsMetricsGet', function() {
      it('should call loggingProjectsMetricsGet successfully', function(done) {
        //uncomment below and update the code to test loggingProjectsMetricsGet
        //instance.loggingProjectsMetricsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('loggingProjectsMetricsList', function() {
      it('should call loggingProjectsMetricsList successfully', function(done) {
        //uncomment below and update the code to test loggingProjectsMetricsList
        //instance.loggingProjectsMetricsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('loggingProjectsMetricsUpdate', function() {
      it('should call loggingProjectsMetricsUpdate successfully', function(done) {
        //uncomment below and update the code to test loggingProjectsMetricsUpdate
        //instance.loggingProjectsMetricsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('loggingProjectsSinksPatch', function() {
      it('should call loggingProjectsSinksPatch successfully', function(done) {
        //uncomment below and update the code to test loggingProjectsSinksPatch
        //instance.loggingProjectsSinksPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
