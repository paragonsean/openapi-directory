/**
 * Cloud Logging API
 * Writes log entries and manages your Cloud Logging configuration.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CloudLoggingApi);
  }
}(this, function(expect, CloudLoggingApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CloudLoggingApi.RequestLog();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('RequestLog', function() {
    it('should create an instance of RequestLog', function() {
      // uncomment below and update the code to test RequestLog
      //var instance = new CloudLoggingApi.RequestLog();
      //expect(instance).to.be.a(CloudLoggingApi.RequestLog);
    });

    it('should have the property appEngineRelease (base name: "appEngineRelease")', function() {
      // uncomment below and update the code to test the property appEngineRelease
      //var instance = new CloudLoggingApi.RequestLog();
      //expect(instance).to.be();
    });

    it('should have the property appId (base name: "appId")', function() {
      // uncomment below and update the code to test the property appId
      //var instance = new CloudLoggingApi.RequestLog();
      //expect(instance).to.be();
    });

    it('should have the property cost (base name: "cost")', function() {
      // uncomment below and update the code to test the property cost
      //var instance = new CloudLoggingApi.RequestLog();
      //expect(instance).to.be();
    });

    it('should have the property endTime (base name: "endTime")', function() {
      // uncomment below and update the code to test the property endTime
      //var instance = new CloudLoggingApi.RequestLog();
      //expect(instance).to.be();
    });

    it('should have the property finished (base name: "finished")', function() {
      // uncomment below and update the code to test the property finished
      //var instance = new CloudLoggingApi.RequestLog();
      //expect(instance).to.be();
    });

    it('should have the property first (base name: "first")', function() {
      // uncomment below and update the code to test the property first
      //var instance = new CloudLoggingApi.RequestLog();
      //expect(instance).to.be();
    });

    it('should have the property host (base name: "host")', function() {
      // uncomment below and update the code to test the property host
      //var instance = new CloudLoggingApi.RequestLog();
      //expect(instance).to.be();
    });

    it('should have the property httpVersion (base name: "httpVersion")', function() {
      // uncomment below and update the code to test the property httpVersion
      //var instance = new CloudLoggingApi.RequestLog();
      //expect(instance).to.be();
    });

    it('should have the property instanceId (base name: "instanceId")', function() {
      // uncomment below and update the code to test the property instanceId
      //var instance = new CloudLoggingApi.RequestLog();
      //expect(instance).to.be();
    });

    it('should have the property instanceIndex (base name: "instanceIndex")', function() {
      // uncomment below and update the code to test the property instanceIndex
      //var instance = new CloudLoggingApi.RequestLog();
      //expect(instance).to.be();
    });

    it('should have the property ip (base name: "ip")', function() {
      // uncomment below and update the code to test the property ip
      //var instance = new CloudLoggingApi.RequestLog();
      //expect(instance).to.be();
    });

    it('should have the property latency (base name: "latency")', function() {
      // uncomment below and update the code to test the property latency
      //var instance = new CloudLoggingApi.RequestLog();
      //expect(instance).to.be();
    });

    it('should have the property line (base name: "line")', function() {
      // uncomment below and update the code to test the property line
      //var instance = new CloudLoggingApi.RequestLog();
      //expect(instance).to.be();
    });

    it('should have the property megaCycles (base name: "megaCycles")', function() {
      // uncomment below and update the code to test the property megaCycles
      //var instance = new CloudLoggingApi.RequestLog();
      //expect(instance).to.be();
    });

    it('should have the property method (base name: "method")', function() {
      // uncomment below and update the code to test the property method
      //var instance = new CloudLoggingApi.RequestLog();
      //expect(instance).to.be();
    });

    it('should have the property moduleId (base name: "moduleId")', function() {
      // uncomment below and update the code to test the property moduleId
      //var instance = new CloudLoggingApi.RequestLog();
      //expect(instance).to.be();
    });

    it('should have the property nickname (base name: "nickname")', function() {
      // uncomment below and update the code to test the property nickname
      //var instance = new CloudLoggingApi.RequestLog();
      //expect(instance).to.be();
    });

    it('should have the property pendingTime (base name: "pendingTime")', function() {
      // uncomment below and update the code to test the property pendingTime
      //var instance = new CloudLoggingApi.RequestLog();
      //expect(instance).to.be();
    });

    it('should have the property referrer (base name: "referrer")', function() {
      // uncomment below and update the code to test the property referrer
      //var instance = new CloudLoggingApi.RequestLog();
      //expect(instance).to.be();
    });

    it('should have the property requestId (base name: "requestId")', function() {
      // uncomment below and update the code to test the property requestId
      //var instance = new CloudLoggingApi.RequestLog();
      //expect(instance).to.be();
    });

    it('should have the property resource (base name: "resource")', function() {
      // uncomment below and update the code to test the property resource
      //var instance = new CloudLoggingApi.RequestLog();
      //expect(instance).to.be();
    });

    it('should have the property responseSize (base name: "responseSize")', function() {
      // uncomment below and update the code to test the property responseSize
      //var instance = new CloudLoggingApi.RequestLog();
      //expect(instance).to.be();
    });

    it('should have the property sourceReference (base name: "sourceReference")', function() {
      // uncomment below and update the code to test the property sourceReference
      //var instance = new CloudLoggingApi.RequestLog();
      //expect(instance).to.be();
    });

    it('should have the property spanId (base name: "spanId")', function() {
      // uncomment below and update the code to test the property spanId
      //var instance = new CloudLoggingApi.RequestLog();
      //expect(instance).to.be();
    });

    it('should have the property startTime (base name: "startTime")', function() {
      // uncomment below and update the code to test the property startTime
      //var instance = new CloudLoggingApi.RequestLog();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new CloudLoggingApi.RequestLog();
      //expect(instance).to.be();
    });

    it('should have the property taskName (base name: "taskName")', function() {
      // uncomment below and update the code to test the property taskName
      //var instance = new CloudLoggingApi.RequestLog();
      //expect(instance).to.be();
    });

    it('should have the property taskQueueName (base name: "taskQueueName")', function() {
      // uncomment below and update the code to test the property taskQueueName
      //var instance = new CloudLoggingApi.RequestLog();
      //expect(instance).to.be();
    });

    it('should have the property traceId (base name: "traceId")', function() {
      // uncomment below and update the code to test the property traceId
      //var instance = new CloudLoggingApi.RequestLog();
      //expect(instance).to.be();
    });

    it('should have the property traceSampled (base name: "traceSampled")', function() {
      // uncomment below and update the code to test the property traceSampled
      //var instance = new CloudLoggingApi.RequestLog();
      //expect(instance).to.be();
    });

    it('should have the property urlMapEntry (base name: "urlMapEntry")', function() {
      // uncomment below and update the code to test the property urlMapEntry
      //var instance = new CloudLoggingApi.RequestLog();
      //expect(instance).to.be();
    });

    it('should have the property userAgent (base name: "userAgent")', function() {
      // uncomment below and update the code to test the property userAgent
      //var instance = new CloudLoggingApi.RequestLog();
      //expect(instance).to.be();
    });

    it('should have the property versionId (base name: "versionId")', function() {
      // uncomment below and update the code to test the property versionId
      //var instance = new CloudLoggingApi.RequestLog();
      //expect(instance).to.be();
    });

    it('should have the property wasLoadingRequest (base name: "wasLoadingRequest")', function() {
      // uncomment below and update the code to test the property wasLoadingRequest
      //var instance = new CloudLoggingApi.RequestLog();
      //expect(instance).to.be();
    });

  });

}));
