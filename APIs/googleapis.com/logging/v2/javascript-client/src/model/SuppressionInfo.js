/**
 * Cloud Logging API
 * Writes log entries and manages your Cloud Logging configuration.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SuppressionInfo model module.
 * @module model/SuppressionInfo
 * @version v2
 */
class SuppressionInfo {
    /**
     * Constructs a new <code>SuppressionInfo</code>.
     * Information about entries that were omitted from the session.
     * @alias module:model/SuppressionInfo
     */
    constructor() { 
        
        SuppressionInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SuppressionInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SuppressionInfo} obj Optional instance to populate.
     * @return {module:model/SuppressionInfo} The populated <code>SuppressionInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SuppressionInfo();

            if (data.hasOwnProperty('reason')) {
                obj['reason'] = ApiClient.convertToType(data['reason'], 'String');
            }
            if (data.hasOwnProperty('suppressedCount')) {
                obj['suppressedCount'] = ApiClient.convertToType(data['suppressedCount'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SuppressionInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SuppressionInfo</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['reason'] && !(typeof data['reason'] === 'string' || data['reason'] instanceof String)) {
            throw new Error("Expected the field `reason` to be a primitive type in the JSON string but got " + data['reason']);
        }

        return true;
    }


}



/**
 * The reason that entries were omitted from the session.
 * @member {module:model/SuppressionInfo.ReasonEnum} reason
 */
SuppressionInfo.prototype['reason'] = undefined;

/**
 * A lower bound on the count of entries omitted due to reason.
 * @member {Number} suppressedCount
 */
SuppressionInfo.prototype['suppressedCount'] = undefined;





/**
 * Allowed values for the <code>reason</code> property.
 * @enum {String}
 * @readonly
 */
SuppressionInfo['ReasonEnum'] = {

    /**
     * value: "REASON_UNSPECIFIED"
     * @const
     */
    "REASON_UNSPECIFIED": "REASON_UNSPECIFIED",

    /**
     * value: "RATE_LIMIT"
     * @const
     */
    "RATE_LIMIT": "RATE_LIMIT",

    /**
     * value: "NOT_CONSUMED"
     * @const
     */
    "NOT_CONSUMED": "NOT_CONSUMED"
};



export default SuppressionInfo;

