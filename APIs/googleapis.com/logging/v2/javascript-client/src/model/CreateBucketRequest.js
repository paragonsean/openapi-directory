/**
 * Cloud Logging API
 * Writes log entries and manages your Cloud Logging configuration.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LogBucket from './LogBucket';

/**
 * The CreateBucketRequest model module.
 * @module model/CreateBucketRequest
 * @version v2
 */
class CreateBucketRequest {
    /**
     * Constructs a new <code>CreateBucketRequest</code>.
     * The parameters to CreateBucket.
     * @alias module:model/CreateBucketRequest
     */
    constructor() { 
        
        CreateBucketRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreateBucketRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateBucketRequest} obj Optional instance to populate.
     * @return {module:model/CreateBucketRequest} The populated <code>CreateBucketRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateBucketRequest();

            if (data.hasOwnProperty('bucket')) {
                obj['bucket'] = LogBucket.constructFromObject(data['bucket']);
            }
            if (data.hasOwnProperty('bucketId')) {
                obj['bucketId'] = ApiClient.convertToType(data['bucketId'], 'String');
            }
            if (data.hasOwnProperty('parent')) {
                obj['parent'] = ApiClient.convertToType(data['parent'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateBucketRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateBucketRequest</code>.
     */
    static validateJSON(data) {
        // validate the optional field `bucket`
        if (data['bucket']) { // data not null
          LogBucket.validateJSON(data['bucket']);
        }
        // ensure the json data is a string
        if (data['bucketId'] && !(typeof data['bucketId'] === 'string' || data['bucketId'] instanceof String)) {
            throw new Error("Expected the field `bucketId` to be a primitive type in the JSON string but got " + data['bucketId']);
        }
        // ensure the json data is a string
        if (data['parent'] && !(typeof data['parent'] === 'string' || data['parent'] instanceof String)) {
            throw new Error("Expected the field `parent` to be a primitive type in the JSON string but got " + data['parent']);
        }

        return true;
    }


}



/**
 * @member {module:model/LogBucket} bucket
 */
CreateBucketRequest.prototype['bucket'] = undefined;

/**
 * Required. A client-assigned identifier such as \"my-bucket\". Identifiers are limited to 100 characters and can include only letters, digits, underscores, hyphens, and periods.
 * @member {String} bucketId
 */
CreateBucketRequest.prototype['bucketId'] = undefined;

/**
 * Required. The resource in which to create the log bucket: \"projects/[PROJECT_ID]/locations/[LOCATION_ID]\" For example:\"projects/my-project/locations/global\"
 * @member {String} parent
 */
CreateBucketRequest.prototype['parent'] = undefined;






export default CreateBucketRequest;

