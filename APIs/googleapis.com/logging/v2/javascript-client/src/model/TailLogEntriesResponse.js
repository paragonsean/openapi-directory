/**
 * Cloud Logging API
 * Writes log entries and manages your Cloud Logging configuration.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LogEntry from './LogEntry';
import SuppressionInfo from './SuppressionInfo';

/**
 * The TailLogEntriesResponse model module.
 * @module model/TailLogEntriesResponse
 * @version v2
 */
class TailLogEntriesResponse {
    /**
     * Constructs a new <code>TailLogEntriesResponse</code>.
     * Result returned from TailLogEntries.
     * @alias module:model/TailLogEntriesResponse
     */
    constructor() { 
        
        TailLogEntriesResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TailLogEntriesResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TailLogEntriesResponse} obj Optional instance to populate.
     * @return {module:model/TailLogEntriesResponse} The populated <code>TailLogEntriesResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TailLogEntriesResponse();

            if (data.hasOwnProperty('entries')) {
                obj['entries'] = ApiClient.convertToType(data['entries'], [LogEntry]);
            }
            if (data.hasOwnProperty('suppressionInfo')) {
                obj['suppressionInfo'] = ApiClient.convertToType(data['suppressionInfo'], [SuppressionInfo]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TailLogEntriesResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TailLogEntriesResponse</code>.
     */
    static validateJSON(data) {
        if (data['entries']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['entries'])) {
                throw new Error("Expected the field `entries` to be an array in the JSON data but got " + data['entries']);
            }
            // validate the optional field `entries` (array)
            for (const item of data['entries']) {
                LogEntry.validateJSON(item);
            };
        }
        if (data['suppressionInfo']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['suppressionInfo'])) {
                throw new Error("Expected the field `suppressionInfo` to be an array in the JSON data but got " + data['suppressionInfo']);
            }
            // validate the optional field `suppressionInfo` (array)
            for (const item of data['suppressionInfo']) {
                SuppressionInfo.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * A list of log entries. Each response in the stream will order entries with increasing values of LogEntry.timestamp. Ordering is not guaranteed between separate responses.
 * @member {Array.<module:model/LogEntry>} entries
 */
TailLogEntriesResponse.prototype['entries'] = undefined;

/**
 * If entries that otherwise would have been included in the session were not sent back to the client, counts of relevant entries omitted from the session with the reason that they were not included. There will be at most one of each reason per response. The counts represent the number of suppressed entries since the last streamed response.
 * @member {Array.<module:model/SuppressionInfo>} suppressionInfo
 */
TailLogEntriesResponse.prototype['suppressionInfo'] = undefined;






export default TailLogEntriesResponse;

