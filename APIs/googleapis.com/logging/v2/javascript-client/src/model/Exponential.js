/**
 * Cloud Logging API
 * Writes log entries and manages your Cloud Logging configuration.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Exponential model module.
 * @module model/Exponential
 * @version v2
 */
class Exponential {
    /**
     * Constructs a new <code>Exponential</code>.
     * Specifies an exponential sequence of buckets that have a width that is proportional to the value of the lower bound. Each bucket represents a constant relative uncertainty on a specific value in the bucket.There are num_finite_buckets + 2 (&#x3D; N) buckets. Bucket i has the following boundaries:Upper bound (0 &lt;&#x3D; i &lt; N-1): scale * (growth_factor ^ i).Lower bound (1 &lt;&#x3D; i &lt; N): scale * (growth_factor ^ (i - 1)).
     * @alias module:model/Exponential
     */
    constructor() { 
        
        Exponential.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Exponential</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Exponential} obj Optional instance to populate.
     * @return {module:model/Exponential} The populated <code>Exponential</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Exponential();

            if (data.hasOwnProperty('growthFactor')) {
                obj['growthFactor'] = ApiClient.convertToType(data['growthFactor'], 'Number');
            }
            if (data.hasOwnProperty('numFiniteBuckets')) {
                obj['numFiniteBuckets'] = ApiClient.convertToType(data['numFiniteBuckets'], 'Number');
            }
            if (data.hasOwnProperty('scale')) {
                obj['scale'] = ApiClient.convertToType(data['scale'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Exponential</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Exponential</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * Must be greater than 1.
 * @member {Number} growthFactor
 */
Exponential.prototype['growthFactor'] = undefined;

/**
 * Must be greater than 0.
 * @member {Number} numFiniteBuckets
 */
Exponential.prototype['numFiniteBuckets'] = undefined;

/**
 * Must be greater than 0.
 * @member {Number} scale
 */
Exponential.prototype['scale'] = undefined;






export default Exponential;

