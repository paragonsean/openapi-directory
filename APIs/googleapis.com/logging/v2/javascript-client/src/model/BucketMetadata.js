/**
 * Cloud Logging API
 * Writes log entries and manages your Cloud Logging configuration.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateBucketRequest from './CreateBucketRequest';
import UpdateBucketRequest from './UpdateBucketRequest';

/**
 * The BucketMetadata model module.
 * @module model/BucketMetadata
 * @version v2
 */
class BucketMetadata {
    /**
     * Constructs a new <code>BucketMetadata</code>.
     * Metadata for LongRunningUpdateBucket Operations.
     * @alias module:model/BucketMetadata
     */
    constructor() { 
        
        BucketMetadata.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BucketMetadata</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BucketMetadata} obj Optional instance to populate.
     * @return {module:model/BucketMetadata} The populated <code>BucketMetadata</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BucketMetadata();

            if (data.hasOwnProperty('createBucketRequest')) {
                obj['createBucketRequest'] = CreateBucketRequest.constructFromObject(data['createBucketRequest']);
            }
            if (data.hasOwnProperty('endTime')) {
                obj['endTime'] = ApiClient.convertToType(data['endTime'], 'String');
            }
            if (data.hasOwnProperty('startTime')) {
                obj['startTime'] = ApiClient.convertToType(data['startTime'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('updateBucketRequest')) {
                obj['updateBucketRequest'] = UpdateBucketRequest.constructFromObject(data['updateBucketRequest']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BucketMetadata</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BucketMetadata</code>.
     */
    static validateJSON(data) {
        // validate the optional field `createBucketRequest`
        if (data['createBucketRequest']) { // data not null
          CreateBucketRequest.validateJSON(data['createBucketRequest']);
        }
        // ensure the json data is a string
        if (data['endTime'] && !(typeof data['endTime'] === 'string' || data['endTime'] instanceof String)) {
            throw new Error("Expected the field `endTime` to be a primitive type in the JSON string but got " + data['endTime']);
        }
        // ensure the json data is a string
        if (data['startTime'] && !(typeof data['startTime'] === 'string' || data['startTime'] instanceof String)) {
            throw new Error("Expected the field `startTime` to be a primitive type in the JSON string but got " + data['startTime']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // validate the optional field `updateBucketRequest`
        if (data['updateBucketRequest']) { // data not null
          UpdateBucketRequest.validateJSON(data['updateBucketRequest']);
        }

        return true;
    }


}



/**
 * @member {module:model/CreateBucketRequest} createBucketRequest
 */
BucketMetadata.prototype['createBucketRequest'] = undefined;

/**
 * The end time of an operation.
 * @member {String} endTime
 */
BucketMetadata.prototype['endTime'] = undefined;

/**
 * The create time of an operation.
 * @member {String} startTime
 */
BucketMetadata.prototype['startTime'] = undefined;

/**
 * Output only. State of an operation.
 * @member {module:model/BucketMetadata.StateEnum} state
 */
BucketMetadata.prototype['state'] = undefined;

/**
 * @member {module:model/UpdateBucketRequest} updateBucketRequest
 */
BucketMetadata.prototype['updateBucketRequest'] = undefined;





/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
BucketMetadata['StateEnum'] = {

    /**
     * value: "OPERATION_STATE_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "OPERATION_STATE_UNSPECIFIED",

    /**
     * value: "OPERATION_STATE_SCHEDULED"
     * @const
     */
    "SCHEDULED": "OPERATION_STATE_SCHEDULED",

    /**
     * value: "OPERATION_STATE_WAITING_FOR_PERMISSIONS"
     * @const
     */
    "WAITING_FOR_PERMISSIONS": "OPERATION_STATE_WAITING_FOR_PERMISSIONS",

    /**
     * value: "OPERATION_STATE_RUNNING"
     * @const
     */
    "RUNNING": "OPERATION_STATE_RUNNING",

    /**
     * value: "OPERATION_STATE_SUCCEEDED"
     * @const
     */
    "SUCCEEDED": "OPERATION_STATE_SUCCEEDED",

    /**
     * value: "OPERATION_STATE_FAILED"
     * @const
     */
    "FAILED": "OPERATION_STATE_FAILED",

    /**
     * value: "OPERATION_STATE_CANCELLED"
     * @const
     */
    "CANCELLED": "OPERATION_STATE_CANCELLED",

    /**
     * value: "OPERATION_STATE_PENDING"
     * @const
     */
    "PENDING": "OPERATION_STATE_PENDING"
};



export default BucketMetadata;

