/**
 * Cloud Logging API
 * Writes log entries and manages your Cloud Logging configuration.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LogEntry from './LogEntry';
import MonitoredResource from './MonitoredResource';

/**
 * The WriteLogEntriesRequest model module.
 * @module model/WriteLogEntriesRequest
 * @version v2
 */
class WriteLogEntriesRequest {
    /**
     * Constructs a new <code>WriteLogEntriesRequest</code>.
     * The parameters to WriteLogEntries.
     * @alias module:model/WriteLogEntriesRequest
     */
    constructor() { 
        
        WriteLogEntriesRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>WriteLogEntriesRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WriteLogEntriesRequest} obj Optional instance to populate.
     * @return {module:model/WriteLogEntriesRequest} The populated <code>WriteLogEntriesRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WriteLogEntriesRequest();

            if (data.hasOwnProperty('dryRun')) {
                obj['dryRun'] = ApiClient.convertToType(data['dryRun'], 'Boolean');
            }
            if (data.hasOwnProperty('entries')) {
                obj['entries'] = ApiClient.convertToType(data['entries'], [LogEntry]);
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ApiClient.convertToType(data['labels'], {'String': 'String'});
            }
            if (data.hasOwnProperty('logName')) {
                obj['logName'] = ApiClient.convertToType(data['logName'], 'String');
            }
            if (data.hasOwnProperty('partialSuccess')) {
                obj['partialSuccess'] = ApiClient.convertToType(data['partialSuccess'], 'Boolean');
            }
            if (data.hasOwnProperty('resource')) {
                obj['resource'] = MonitoredResource.constructFromObject(data['resource']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WriteLogEntriesRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WriteLogEntriesRequest</code>.
     */
    static validateJSON(data) {
        if (data['entries']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['entries'])) {
                throw new Error("Expected the field `entries` to be an array in the JSON data but got " + data['entries']);
            }
            // validate the optional field `entries` (array)
            for (const item of data['entries']) {
                LogEntry.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['logName'] && !(typeof data['logName'] === 'string' || data['logName'] instanceof String)) {
            throw new Error("Expected the field `logName` to be a primitive type in the JSON string but got " + data['logName']);
        }
        // validate the optional field `resource`
        if (data['resource']) { // data not null
          MonitoredResource.validateJSON(data['resource']);
        }

        return true;
    }


}



/**
 * Optional. If true, the request should expect normal response, but the entries won't be persisted nor exported. Useful for checking whether the logging API endpoints are working properly before sending valuable data.
 * @member {Boolean} dryRun
 */
WriteLogEntriesRequest.prototype['dryRun'] = undefined;

/**
 * Required. The log entries to send to Logging. The order of log entries in this list does not matter. Values supplied in this method's log_name, resource, and labels fields are copied into those log entries in this list that do not include values for their corresponding fields. For more information, see the LogEntry type.If the timestamp or insert_id fields are missing in log entries, then this method supplies the current time or a unique identifier, respectively. The supplied values are chosen so that, among the log entries that did not supply their own values, the entries earlier in the list will sort before the entries later in the list. See the entries.list method.Log entries with timestamps that are more than the logs retention period (https://cloud.google.com/logging/quotas) in the past or more than 24 hours in the future will not be available when calling entries.list. However, those log entries can still be exported with LogSinks (https://cloud.google.com/logging/docs/api/tasks/exporting-logs).To improve throughput and to avoid exceeding the quota limit (https://cloud.google.com/logging/quotas) for calls to entries.write, you should try to include several log entries in this list, rather than calling this method for each individual log entry.
 * @member {Array.<module:model/LogEntry>} entries
 */
WriteLogEntriesRequest.prototype['entries'] = undefined;

/**
 * Optional. Default labels that are added to the labels field of all log entries in entries. If a log entry already has a label with the same key as a label in this parameter, then the log entry's label is not changed. See LogEntry.
 * @member {Object.<String, String>} labels
 */
WriteLogEntriesRequest.prototype['labels'] = undefined;

/**
 * Optional. A default log resource name that is assigned to all log entries in entries that do not specify a value for log_name: projects/[PROJECT_ID]/logs/[LOG_ID] organizations/[ORGANIZATION_ID]/logs/[LOG_ID] billingAccounts/[BILLING_ACCOUNT_ID]/logs/[LOG_ID] folders/[FOLDER_ID]/logs/[LOG_ID][LOG_ID] must be URL-encoded. For example: \"projects/my-project-id/logs/syslog\" \"organizations/123/logs/cloudaudit.googleapis.com%2Factivity\" The permission logging.logEntries.create is needed on each project, organization, billing account, or folder that is receiving new log entries, whether the resource is specified in logName or in an individual log entry.
 * @member {String} logName
 */
WriteLogEntriesRequest.prototype['logName'] = undefined;

/**
 * Optional. Whether a batch's valid entries should be written even if some other entry failed due to a permanent error such as INVALID_ARGUMENT or PERMISSION_DENIED. If any entry failed, then the response status is the response status of one of the failed entries. The response will include error details in WriteLogEntriesPartialErrors.log_entry_errors keyed by the entries' zero-based index in the entries. Failed requests for which no entries are written will not include per-entry errors.
 * @member {Boolean} partialSuccess
 */
WriteLogEntriesRequest.prototype['partialSuccess'] = undefined;

/**
 * @member {module:model/MonitoredResource} resource
 */
WriteLogEntriesRequest.prototype['resource'] = undefined;






export default WriteLogEntriesRequest;

