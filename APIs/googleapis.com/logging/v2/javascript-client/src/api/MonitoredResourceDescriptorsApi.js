/**
 * Cloud Logging API
 * Writes log entries and manages your Cloud Logging configuration.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ListMonitoredResourceDescriptorsResponse from '../model/ListMonitoredResourceDescriptorsResponse';

/**
* MonitoredResourceDescriptors service.
* @module api/MonitoredResourceDescriptorsApi
* @version v2
*/
export default class MonitoredResourceDescriptorsApi {

    /**
    * Constructs a new MonitoredResourceDescriptorsApi. 
    * @alias module:api/MonitoredResourceDescriptorsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the loggingMonitoredResourceDescriptorsList operation.
     * @callback module:api/MonitoredResourceDescriptorsApi~loggingMonitoredResourceDescriptorsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListMonitoredResourceDescriptorsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the descriptors for monitored resource types used by Logging.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Number} [pageSize] Optional. The maximum number of results to return from this request. Non-positive values are ignored. The presence of nextPageToken in the response indicates that more results might be available.
     * @param {String} [pageToken] Optional. If present, then retrieve the next batch of results from the preceding call to this method. pageToken must be the value of nextPageToken from the previous response. The values of other method parameters should be identical to those in the previous call.
     * @param {module:api/MonitoredResourceDescriptorsApi~loggingMonitoredResourceDescriptorsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListMonitoredResourceDescriptorsResponse}
     */
    loggingMonitoredResourceDescriptorsList(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListMonitoredResourceDescriptorsResponse;
      return this.apiClient.callApi(
        '/v2/monitoredResourceDescriptors', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
