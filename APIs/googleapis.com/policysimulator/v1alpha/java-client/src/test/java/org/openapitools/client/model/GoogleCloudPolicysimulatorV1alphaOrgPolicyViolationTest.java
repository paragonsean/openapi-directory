/*
 * Policy Simulator API
 *  Policy Simulator is a collection of endpoints for creating, running, and viewing a Replay. A `Replay` is a type of simulation that lets you see how your members' access to resources might change if you changed your IAM policy. During a `Replay`, Policy Simulator re-evaluates, or replays, past access attempts under both the current policy and your proposed policy, and compares those results to determine how your members' access might change under the proposed policy.
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudOrgpolicyV2CustomConstraint;
import org.openapitools.client.model.GoogleCloudPolicysimulatorV1alphaResourceContext;
import org.openapitools.client.model.GoogleRpcStatus;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for GoogleCloudPolicysimulatorV1alphaOrgPolicyViolation
 */
public class GoogleCloudPolicysimulatorV1alphaOrgPolicyViolationTest {
    private final GoogleCloudPolicysimulatorV1alphaOrgPolicyViolation model = new GoogleCloudPolicysimulatorV1alphaOrgPolicyViolation();

    /**
     * Model tests for GoogleCloudPolicysimulatorV1alphaOrgPolicyViolation
     */
    @Test
    public void testGoogleCloudPolicysimulatorV1alphaOrgPolicyViolation() {
        // TODO: test GoogleCloudPolicysimulatorV1alphaOrgPolicyViolation
    }

    /**
     * Test the property 'customConstraint'
     */
    @Test
    public void customConstraintTest() {
        // TODO: test customConstraint
    }

    /**
     * Test the property 'error'
     */
    @Test
    public void errorTest() {
        // TODO: test error
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'resource'
     */
    @Test
    public void resourceTest() {
        // TODO: test resource
    }

}
