/*
 * Policy Simulator API
 *  Policy Simulator is a collection of endpoints for creating, running, and viewing a Replay. A `Replay` is a type of simulation that lets you see how your members' access to resources might change if you changed your IAM policy. During a `Replay`, Policy Simulator re-evaluates, or replays, past access attempts under both the current policy and your proposed policy, and compares those results to determine how your members' access might change under the proposed policy.
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.GoogleCloudPolicysimulatorV1alphaListOrgPolicyViolationsPreviewsResponse;
import org.openapitools.client.model.GoogleCloudPolicysimulatorV1alphaListOrgPolicyViolationsResponse;
import org.openapitools.client.model.GoogleCloudPolicysimulatorV1alphaOrgPolicyViolationsPreview;
import org.openapitools.client.model.GoogleLongrunningOperation;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for OrganizationsApi
 */
@Disabled
public class OrganizationsApiTest {

    private final OrganizationsApi api = new OrganizationsApi();

    /**
     * CreateOrgPolicyViolationsPreview creates an OrgPolicyViolationsPreview for the proposed changes in the provided OrgPolicyViolationsPreview.OrgPolicyOverlay. The changes to OrgPolicy are specified by this &#x60;OrgPolicyOverlay&#x60;. The resources to scan are inferred from these specified changes.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void policysimulatorOrganizationsLocationsOrgPolicyViolationsPreviewsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String orgPolicyViolationsPreviewId = null;
        GoogleCloudPolicysimulatorV1alphaOrgPolicyViolationsPreview googleCloudPolicysimulatorV1alphaOrgPolicyViolationsPreview = null;
        GoogleLongrunningOperation response = api.policysimulatorOrganizationsLocationsOrgPolicyViolationsPreviewsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, orgPolicyViolationsPreviewId, googleCloudPolicysimulatorV1alphaOrgPolicyViolationsPreview);
        // TODO: test validations
    }

    /**
     * GenerateOrgPolicyViolationsPreview generates an OrgPolicyViolationsPreview for the proposed changes in the provided OrgPolicyViolationsPreview.OrgPolicyOverlay. The changes to OrgPolicy are specified by this &#x60;OrgPolicyOverlay&#x60;. The resources to scan are inferred from these specified changes.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void policysimulatorOrganizationsLocationsOrgPolicyViolationsPreviewsGenerateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudPolicysimulatorV1alphaOrgPolicyViolationsPreview googleCloudPolicysimulatorV1alphaOrgPolicyViolationsPreview = null;
        GoogleLongrunningOperation response = api.policysimulatorOrganizationsLocationsOrgPolicyViolationsPreviewsGenerate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudPolicysimulatorV1alphaOrgPolicyViolationsPreview);
        // TODO: test validations
    }

    /**
     * ListOrgPolicyViolationsPreviews lists each OrgPolicyViolationsPreview in an organization. Each OrgPolicyViolationsPreview is available for at least 7 days.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void policysimulatorOrganizationsLocationsOrgPolicyViolationsPreviewsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudPolicysimulatorV1alphaListOrgPolicyViolationsPreviewsResponse response = api.policysimulatorOrganizationsLocationsOrgPolicyViolationsPreviewsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * ListOrgPolicyViolations lists the OrgPolicyViolations that are present in an OrgPolicyViolationsPreview.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void policysimulatorOrganizationsLocationsOrgPolicyViolationsPreviewsOrgPolicyViolationsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudPolicysimulatorV1alphaListOrgPolicyViolationsResponse response = api.policysimulatorOrganizationsLocationsOrgPolicyViolationsPreviewsOrgPolicyViolationsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken);
        // TODO: test validations
    }

}
