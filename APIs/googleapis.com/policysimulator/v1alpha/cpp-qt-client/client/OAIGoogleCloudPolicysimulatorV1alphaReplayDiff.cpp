/**
 * Policy Simulator API
 *  Policy Simulator is a collection of endpoints for creating, running, and viewing a Replay. A `Replay` is a type of simulation that lets you see how your members' access to resources might change if you changed your IAM policy. During a `Replay`, Policy Simulator re-evaluates, or replays, past access attempts under both the current policy and your proposed policy, and compares those results to determine how your members' access might change under the proposed policy.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudPolicysimulatorV1alphaReplayDiff.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudPolicysimulatorV1alphaReplayDiff::OAIGoogleCloudPolicysimulatorV1alphaReplayDiff(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudPolicysimulatorV1alphaReplayDiff::OAIGoogleCloudPolicysimulatorV1alphaReplayDiff() {
    this->initializeModel();
}

OAIGoogleCloudPolicysimulatorV1alphaReplayDiff::~OAIGoogleCloudPolicysimulatorV1alphaReplayDiff() {}

void OAIGoogleCloudPolicysimulatorV1alphaReplayDiff::initializeModel() {

    m_access_diff_isSet = false;
    m_access_diff_isValid = false;
}

void OAIGoogleCloudPolicysimulatorV1alphaReplayDiff::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudPolicysimulatorV1alphaReplayDiff::fromJsonObject(QJsonObject json) {

    m_access_diff_isValid = ::OpenAPI::fromJsonValue(m_access_diff, json[QString("accessDiff")]);
    m_access_diff_isSet = !json[QString("accessDiff")].isNull() && m_access_diff_isValid;
}

QString OAIGoogleCloudPolicysimulatorV1alphaReplayDiff::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudPolicysimulatorV1alphaReplayDiff::asJsonObject() const {
    QJsonObject obj;
    if (m_access_diff.isSet()) {
        obj.insert(QString("accessDiff"), ::OpenAPI::toJsonValue(m_access_diff));
    }
    return obj;
}

OAIGoogleCloudPolicysimulatorV1alphaAccessStateDiff OAIGoogleCloudPolicysimulatorV1alphaReplayDiff::getAccessDiff() const {
    return m_access_diff;
}
void OAIGoogleCloudPolicysimulatorV1alphaReplayDiff::setAccessDiff(const OAIGoogleCloudPolicysimulatorV1alphaAccessStateDiff &access_diff) {
    m_access_diff = access_diff;
    m_access_diff_isSet = true;
}

bool OAIGoogleCloudPolicysimulatorV1alphaReplayDiff::is_access_diff_Set() const{
    return m_access_diff_isSet;
}

bool OAIGoogleCloudPolicysimulatorV1alphaReplayDiff::is_access_diff_Valid() const{
    return m_access_diff_isValid;
}

bool OAIGoogleCloudPolicysimulatorV1alphaReplayDiff::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_access_diff.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudPolicysimulatorV1alphaReplayDiff::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
