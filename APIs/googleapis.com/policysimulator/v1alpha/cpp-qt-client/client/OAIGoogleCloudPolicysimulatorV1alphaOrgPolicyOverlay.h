/**
 * Policy Simulator API
 *  Policy Simulator is a collection of endpoints for creating, running, and viewing a Replay. A `Replay` is a type of simulation that lets you see how your members' access to resources might change if you changed your IAM policy. During a `Replay`, Policy Simulator re-evaluates, or replays, past access attempts under both the current policy and your proposed policy, and compares those results to determine how your members' access might change under the proposed policy.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudPolicysimulatorV1alphaOrgPolicyOverlay.h
 *
 * The proposed changes to OrgPolicy.
 */

#ifndef OAIGoogleCloudPolicysimulatorV1alphaOrgPolicyOverlay_H
#define OAIGoogleCloudPolicysimulatorV1alphaOrgPolicyOverlay_H

#include <QJsonObject>

#include "OAIGoogleCloudPolicysimulatorV1alphaOrgPolicyOverlayCustomConstraintOverlay.h"
#include "OAIGoogleCloudPolicysimulatorV1alphaOrgPolicyOverlayPolicyOverlay.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleCloudPolicysimulatorV1alphaOrgPolicyOverlayCustomConstraintOverlay;
class OAIGoogleCloudPolicysimulatorV1alphaOrgPolicyOverlayPolicyOverlay;

class OAIGoogleCloudPolicysimulatorV1alphaOrgPolicyOverlay : public OAIObject {
public:
    OAIGoogleCloudPolicysimulatorV1alphaOrgPolicyOverlay();
    OAIGoogleCloudPolicysimulatorV1alphaOrgPolicyOverlay(QString json);
    ~OAIGoogleCloudPolicysimulatorV1alphaOrgPolicyOverlay() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIGoogleCloudPolicysimulatorV1alphaOrgPolicyOverlayCustomConstraintOverlay> getCustomConstraints() const;
    void setCustomConstraints(const QList<OAIGoogleCloudPolicysimulatorV1alphaOrgPolicyOverlayCustomConstraintOverlay> &custom_constraints);
    bool is_custom_constraints_Set() const;
    bool is_custom_constraints_Valid() const;

    QList<OAIGoogleCloudPolicysimulatorV1alphaOrgPolicyOverlayPolicyOverlay> getPolicies() const;
    void setPolicies(const QList<OAIGoogleCloudPolicysimulatorV1alphaOrgPolicyOverlayPolicyOverlay> &policies);
    bool is_policies_Set() const;
    bool is_policies_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIGoogleCloudPolicysimulatorV1alphaOrgPolicyOverlayCustomConstraintOverlay> m_custom_constraints;
    bool m_custom_constraints_isSet;
    bool m_custom_constraints_isValid;

    QList<OAIGoogleCloudPolicysimulatorV1alphaOrgPolicyOverlayPolicyOverlay> m_policies;
    bool m_policies_isSet;
    bool m_policies_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudPolicysimulatorV1alphaOrgPolicyOverlay)

#endif // OAIGoogleCloudPolicysimulatorV1alphaOrgPolicyOverlay_H
