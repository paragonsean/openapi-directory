/**
 * Policy Simulator API
 *  Policy Simulator is a collection of endpoints for creating, running, and viewing a Replay. A `Replay` is a type of simulation that lets you see how your members' access to resources might change if you changed your IAM policy. During a `Replay`, Policy Simulator re-evaluates, or replays, past access attempts under both the current policy and your proposed policy, and compares those results to determine how your members' access might change under the proposed policy.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudPolicysimulatorV1alphaAccessTuple.h
 *
 * Information about the principal, resource, and permission to check.
 */

#ifndef OAIGoogleCloudPolicysimulatorV1alphaAccessTuple_H
#define OAIGoogleCloudPolicysimulatorV1alphaAccessTuple_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGoogleCloudPolicysimulatorV1alphaAccessTuple : public OAIObject {
public:
    OAIGoogleCloudPolicysimulatorV1alphaAccessTuple();
    OAIGoogleCloudPolicysimulatorV1alphaAccessTuple(QString json);
    ~OAIGoogleCloudPolicysimulatorV1alphaAccessTuple() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getFullResourceName() const;
    void setFullResourceName(const QString &full_resource_name);
    bool is_full_resource_name_Set() const;
    bool is_full_resource_name_Valid() const;

    QString getPermission() const;
    void setPermission(const QString &permission);
    bool is_permission_Set() const;
    bool is_permission_Valid() const;

    QString getPrincipal() const;
    void setPrincipal(const QString &principal);
    bool is_principal_Set() const;
    bool is_principal_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_full_resource_name;
    bool m_full_resource_name_isSet;
    bool m_full_resource_name_isValid;

    QString m_permission;
    bool m_permission_isSet;
    bool m_permission_isValid;

    QString m_principal;
    bool m_principal_isSet;
    bool m_principal_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudPolicysimulatorV1alphaAccessTuple)

#endif // OAIGoogleCloudPolicysimulatorV1alphaAccessTuple_H
