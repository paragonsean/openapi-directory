# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_iam_v1_policy import GoogleIamV1Policy
from openapi_server import util


class GoogleCloudPolicysimulatorV1alphaReplayConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, log_source: str=None, policy_overlay: Dict[str, GoogleIamV1Policy]=None):
        """GoogleCloudPolicysimulatorV1alphaReplayConfig - a model defined in OpenAPI

        :param log_source: The log_source of this GoogleCloudPolicysimulatorV1alphaReplayConfig.
        :param policy_overlay: The policy_overlay of this GoogleCloudPolicysimulatorV1alphaReplayConfig.
        """
        self.openapi_types = {
            'log_source': str,
            'policy_overlay': Dict[str, GoogleIamV1Policy]
        }

        self.attribute_map = {
            'log_source': 'logSource',
            'policy_overlay': 'policyOverlay'
        }

        self._log_source = log_source
        self._policy_overlay = policy_overlay

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudPolicysimulatorV1alphaReplayConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudPolicysimulatorV1alphaReplayConfig of this GoogleCloudPolicysimulatorV1alphaReplayConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def log_source(self):
        """Gets the log_source of this GoogleCloudPolicysimulatorV1alphaReplayConfig.

        The logs to use as input for the Replay.

        :return: The log_source of this GoogleCloudPolicysimulatorV1alphaReplayConfig.
        :rtype: str
        """
        return self._log_source

    @log_source.setter
    def log_source(self, log_source):
        """Sets the log_source of this GoogleCloudPolicysimulatorV1alphaReplayConfig.

        The logs to use as input for the Replay.

        :param log_source: The log_source of this GoogleCloudPolicysimulatorV1alphaReplayConfig.
        :type log_source: str
        """
        allowed_values = ["LOG_SOURCE_UNSPECIFIED", "RECENT_ACCESSES"]  # noqa: E501
        if log_source not in allowed_values:
            raise ValueError(
                "Invalid value for `log_source` ({0}), must be one of {1}"
                .format(log_source, allowed_values)
            )

        self._log_source = log_source

    @property
    def policy_overlay(self):
        """Gets the policy_overlay of this GoogleCloudPolicysimulatorV1alphaReplayConfig.

        A mapping of the resources that you want to simulate policies for and the policies that you want to simulate. Keys are the full resource names for the resources. For example, `//cloudresourcemanager.googleapis.com/projects/my-project`. For examples of full resource names for Google Cloud services, see https://cloud.google.com/iam/help/troubleshooter/full-resource-names. Values are Policy objects representing the policies that you want to simulate. Replays automatically take into account any IAM policies inherited through the resource hierarchy, and any policies set on descendant resources. You do not need to include these policies in the policy overlay.

        :return: The policy_overlay of this GoogleCloudPolicysimulatorV1alphaReplayConfig.
        :rtype: Dict[str, GoogleIamV1Policy]
        """
        return self._policy_overlay

    @policy_overlay.setter
    def policy_overlay(self, policy_overlay):
        """Sets the policy_overlay of this GoogleCloudPolicysimulatorV1alphaReplayConfig.

        A mapping of the resources that you want to simulate policies for and the policies that you want to simulate. Keys are the full resource names for the resources. For example, `//cloudresourcemanager.googleapis.com/projects/my-project`. For examples of full resource names for Google Cloud services, see https://cloud.google.com/iam/help/troubleshooter/full-resource-names. Values are Policy objects representing the policies that you want to simulate. Replays automatically take into account any IAM policies inherited through the resource hierarchy, and any policies set on descendant resources. You do not need to include these policies in the policy overlay.

        :param policy_overlay: The policy_overlay of this GoogleCloudPolicysimulatorV1alphaReplayConfig.
        :type policy_overlay: Dict[str, GoogleIamV1Policy]
        """

        self._policy_overlay = policy_overlay
