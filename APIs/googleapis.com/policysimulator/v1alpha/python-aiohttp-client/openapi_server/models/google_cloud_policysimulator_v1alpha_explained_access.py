# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_policysimulator_v1alpha_explained_policy import GoogleCloudPolicysimulatorV1alphaExplainedPolicy
from openapi_server.models.google_rpc_status import GoogleRpcStatus
from openapi_server import util


class GoogleCloudPolicysimulatorV1alphaExplainedAccess(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, access_state: str=None, errors: List[GoogleRpcStatus]=None, policies: List[GoogleCloudPolicysimulatorV1alphaExplainedPolicy]=None):
        """GoogleCloudPolicysimulatorV1alphaExplainedAccess - a model defined in OpenAPI

        :param access_state: The access_state of this GoogleCloudPolicysimulatorV1alphaExplainedAccess.
        :param errors: The errors of this GoogleCloudPolicysimulatorV1alphaExplainedAccess.
        :param policies: The policies of this GoogleCloudPolicysimulatorV1alphaExplainedAccess.
        """
        self.openapi_types = {
            'access_state': str,
            'errors': List[GoogleRpcStatus],
            'policies': List[GoogleCloudPolicysimulatorV1alphaExplainedPolicy]
        }

        self.attribute_map = {
            'access_state': 'accessState',
            'errors': 'errors',
            'policies': 'policies'
        }

        self._access_state = access_state
        self._errors = errors
        self._policies = policies

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudPolicysimulatorV1alphaExplainedAccess':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudPolicysimulatorV1alphaExplainedAccess of this GoogleCloudPolicysimulatorV1alphaExplainedAccess.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def access_state(self):
        """Gets the access_state of this GoogleCloudPolicysimulatorV1alphaExplainedAccess.

        Whether the principal in the access tuple has permission to access the resource in the access tuple under the given policies.

        :return: The access_state of this GoogleCloudPolicysimulatorV1alphaExplainedAccess.
        :rtype: str
        """
        return self._access_state

    @access_state.setter
    def access_state(self, access_state):
        """Sets the access_state of this GoogleCloudPolicysimulatorV1alphaExplainedAccess.

        Whether the principal in the access tuple has permission to access the resource in the access tuple under the given policies.

        :param access_state: The access_state of this GoogleCloudPolicysimulatorV1alphaExplainedAccess.
        :type access_state: str
        """
        allowed_values = ["ACCESS_STATE_UNSPECIFIED", "GRANTED", "NOT_GRANTED", "UNKNOWN_CONDITIONAL", "UNKNOWN_INFO_DENIED"]  # noqa: E501
        if access_state not in allowed_values:
            raise ValueError(
                "Invalid value for `access_state` ({0}), must be one of {1}"
                .format(access_state, allowed_values)
            )

        self._access_state = access_state

    @property
    def errors(self):
        """Gets the errors of this GoogleCloudPolicysimulatorV1alphaExplainedAccess.

        If the AccessState is `UNKNOWN`, this field contains a list of errors explaining why the result is `UNKNOWN`. If the `AccessState` is `GRANTED` or `NOT_GRANTED`, this field is omitted.

        :return: The errors of this GoogleCloudPolicysimulatorV1alphaExplainedAccess.
        :rtype: List[GoogleRpcStatus]
        """
        return self._errors

    @errors.setter
    def errors(self, errors):
        """Sets the errors of this GoogleCloudPolicysimulatorV1alphaExplainedAccess.

        If the AccessState is `UNKNOWN`, this field contains a list of errors explaining why the result is `UNKNOWN`. If the `AccessState` is `GRANTED` or `NOT_GRANTED`, this field is omitted.

        :param errors: The errors of this GoogleCloudPolicysimulatorV1alphaExplainedAccess.
        :type errors: List[GoogleRpcStatus]
        """

        self._errors = errors

    @property
    def policies(self):
        """Gets the policies of this GoogleCloudPolicysimulatorV1alphaExplainedAccess.

        If the AccessState is `UNKNOWN`, this field contains the policies that led to that result. If the `AccessState` is `GRANTED` or `NOT_GRANTED`, this field is omitted.

        :return: The policies of this GoogleCloudPolicysimulatorV1alphaExplainedAccess.
        :rtype: List[GoogleCloudPolicysimulatorV1alphaExplainedPolicy]
        """
        return self._policies

    @policies.setter
    def policies(self, policies):
        """Sets the policies of this GoogleCloudPolicysimulatorV1alphaExplainedAccess.

        If the AccessState is `UNKNOWN`, this field contains the policies that led to that result. If the `AccessState` is `GRANTED` or `NOT_GRANTED`, this field is omitted.

        :param policies: The policies of this GoogleCloudPolicysimulatorV1alphaExplainedAccess.
        :type policies: List[GoogleCloudPolicysimulatorV1alphaExplainedPolicy]
        """

        self._policies = policies
