# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_orgpolicy_v2_policy_spec import GoogleCloudOrgpolicyV2PolicySpec
from openapi_server import util


class GoogleCloudOrgpolicyV2AlternatePolicySpec(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, launch: str=None, spec: GoogleCloudOrgpolicyV2PolicySpec=None):
        """GoogleCloudOrgpolicyV2AlternatePolicySpec - a model defined in OpenAPI

        :param launch: The launch of this GoogleCloudOrgpolicyV2AlternatePolicySpec.
        :param spec: The spec of this GoogleCloudOrgpolicyV2AlternatePolicySpec.
        """
        self.openapi_types = {
            'launch': str,
            'spec': GoogleCloudOrgpolicyV2PolicySpec
        }

        self.attribute_map = {
            'launch': 'launch',
            'spec': 'spec'
        }

        self._launch = launch
        self._spec = spec

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudOrgpolicyV2AlternatePolicySpec':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudOrgpolicyV2AlternatePolicySpec of this GoogleCloudOrgpolicyV2AlternatePolicySpec.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def launch(self):
        """Gets the launch of this GoogleCloudOrgpolicyV2AlternatePolicySpec.

        Reference to the launch that will be used while audit logging and to control the launch. Should be set only in the alternate policy.

        :return: The launch of this GoogleCloudOrgpolicyV2AlternatePolicySpec.
        :rtype: str
        """
        return self._launch

    @launch.setter
    def launch(self, launch):
        """Sets the launch of this GoogleCloudOrgpolicyV2AlternatePolicySpec.

        Reference to the launch that will be used while audit logging and to control the launch. Should be set only in the alternate policy.

        :param launch: The launch of this GoogleCloudOrgpolicyV2AlternatePolicySpec.
        :type launch: str
        """

        self._launch = launch

    @property
    def spec(self):
        """Gets the spec of this GoogleCloudOrgpolicyV2AlternatePolicySpec.


        :return: The spec of this GoogleCloudOrgpolicyV2AlternatePolicySpec.
        :rtype: GoogleCloudOrgpolicyV2PolicySpec
        """
        return self._spec

    @spec.setter
    def spec(self, spec):
        """Sets the spec of this GoogleCloudOrgpolicyV2AlternatePolicySpec.


        :param spec: The spec of this GoogleCloudOrgpolicyV2AlternatePolicySpec.
        :type spec: GoogleCloudOrgpolicyV2PolicySpec
        """

        self._spec = spec
