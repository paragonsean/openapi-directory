/**
 * Policy Simulator API
 *  Policy Simulator is a collection of endpoints for creating, running, and viewing a Replay. A `Replay` is a type of simulation that lets you see how your members' access to resources might change if you changed your IAM policy. During a `Replay`, Policy Simulator re-evaluates, or replays, past access attempts under both the current policy and your proposed policy, and compares those results to determine how your members' access might change under the proposed policy.
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudPolicysimulatorV1alphaExplainedPolicy from './GoogleCloudPolicysimulatorV1alphaExplainedPolicy';
import GoogleRpcStatus from './GoogleRpcStatus';

/**
 * The GoogleCloudPolicysimulatorV1alphaExplainedAccess model module.
 * @module model/GoogleCloudPolicysimulatorV1alphaExplainedAccess
 * @version v1alpha
 */
class GoogleCloudPolicysimulatorV1alphaExplainedAccess {
    /**
     * Constructs a new <code>GoogleCloudPolicysimulatorV1alphaExplainedAccess</code>.
     * Details about how a set of policies, listed in ExplainedPolicy, resulted in a certain AccessState when replaying an access tuple.
     * @alias module:model/GoogleCloudPolicysimulatorV1alphaExplainedAccess
     */
    constructor() { 
        
        GoogleCloudPolicysimulatorV1alphaExplainedAccess.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudPolicysimulatorV1alphaExplainedAccess</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudPolicysimulatorV1alphaExplainedAccess} obj Optional instance to populate.
     * @return {module:model/GoogleCloudPolicysimulatorV1alphaExplainedAccess} The populated <code>GoogleCloudPolicysimulatorV1alphaExplainedAccess</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudPolicysimulatorV1alphaExplainedAccess();

            if (data.hasOwnProperty('accessState')) {
                obj['accessState'] = ApiClient.convertToType(data['accessState'], 'String');
            }
            if (data.hasOwnProperty('errors')) {
                obj['errors'] = ApiClient.convertToType(data['errors'], [GoogleRpcStatus]);
            }
            if (data.hasOwnProperty('policies')) {
                obj['policies'] = ApiClient.convertToType(data['policies'], [GoogleCloudPolicysimulatorV1alphaExplainedPolicy]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudPolicysimulatorV1alphaExplainedAccess</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudPolicysimulatorV1alphaExplainedAccess</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['accessState'] && !(typeof data['accessState'] === 'string' || data['accessState'] instanceof String)) {
            throw new Error("Expected the field `accessState` to be a primitive type in the JSON string but got " + data['accessState']);
        }
        if (data['errors']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['errors'])) {
                throw new Error("Expected the field `errors` to be an array in the JSON data but got " + data['errors']);
            }
            // validate the optional field `errors` (array)
            for (const item of data['errors']) {
                GoogleRpcStatus.validateJSON(item);
            };
        }
        if (data['policies']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['policies'])) {
                throw new Error("Expected the field `policies` to be an array in the JSON data but got " + data['policies']);
            }
            // validate the optional field `policies` (array)
            for (const item of data['policies']) {
                GoogleCloudPolicysimulatorV1alphaExplainedPolicy.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Whether the principal in the access tuple has permission to access the resource in the access tuple under the given policies.
 * @member {module:model/GoogleCloudPolicysimulatorV1alphaExplainedAccess.AccessStateEnum} accessState
 */
GoogleCloudPolicysimulatorV1alphaExplainedAccess.prototype['accessState'] = undefined;

/**
 * If the AccessState is `UNKNOWN`, this field contains a list of errors explaining why the result is `UNKNOWN`. If the `AccessState` is `GRANTED` or `NOT_GRANTED`, this field is omitted.
 * @member {Array.<module:model/GoogleRpcStatus>} errors
 */
GoogleCloudPolicysimulatorV1alphaExplainedAccess.prototype['errors'] = undefined;

/**
 * If the AccessState is `UNKNOWN`, this field contains the policies that led to that result. If the `AccessState` is `GRANTED` or `NOT_GRANTED`, this field is omitted.
 * @member {Array.<module:model/GoogleCloudPolicysimulatorV1alphaExplainedPolicy>} policies
 */
GoogleCloudPolicysimulatorV1alphaExplainedAccess.prototype['policies'] = undefined;





/**
 * Allowed values for the <code>accessState</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudPolicysimulatorV1alphaExplainedAccess['AccessStateEnum'] = {

    /**
     * value: "ACCESS_STATE_UNSPECIFIED"
     * @const
     */
    "ACCESS_STATE_UNSPECIFIED": "ACCESS_STATE_UNSPECIFIED",

    /**
     * value: "GRANTED"
     * @const
     */
    "GRANTED": "GRANTED",

    /**
     * value: "NOT_GRANTED"
     * @const
     */
    "NOT_GRANTED": "NOT_GRANTED",

    /**
     * value: "UNKNOWN_CONDITIONAL"
     * @const
     */
    "UNKNOWN_CONDITIONAL": "UNKNOWN_CONDITIONAL",

    /**
     * value: "UNKNOWN_INFO_DENIED"
     * @const
     */
    "UNKNOWN_INFO_DENIED": "UNKNOWN_INFO_DENIED"
};



export default GoogleCloudPolicysimulatorV1alphaExplainedAccess;

