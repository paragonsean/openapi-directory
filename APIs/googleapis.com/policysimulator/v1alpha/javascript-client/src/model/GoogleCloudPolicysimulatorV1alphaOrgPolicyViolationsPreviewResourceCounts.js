/**
 * Policy Simulator API
 *  Policy Simulator is a collection of endpoints for creating, running, and viewing a Replay. A `Replay` is a type of simulation that lets you see how your members' access to resources might change if you changed your IAM policy. During a `Replay`, Policy Simulator re-evaluates, or replays, past access attempts under both the current policy and your proposed policy, and compares those results to determine how your members' access might change under the proposed policy.
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudPolicysimulatorV1alphaOrgPolicyViolationsPreviewResourceCounts model module.
 * @module model/GoogleCloudPolicysimulatorV1alphaOrgPolicyViolationsPreviewResourceCounts
 * @version v1alpha
 */
class GoogleCloudPolicysimulatorV1alphaOrgPolicyViolationsPreviewResourceCounts {
    /**
     * Constructs a new <code>GoogleCloudPolicysimulatorV1alphaOrgPolicyViolationsPreviewResourceCounts</code>.
     * A summary of the state of all resources scanned for compliance with the changed OrgPolicy.
     * @alias module:model/GoogleCloudPolicysimulatorV1alphaOrgPolicyViolationsPreviewResourceCounts
     */
    constructor() { 
        
        GoogleCloudPolicysimulatorV1alphaOrgPolicyViolationsPreviewResourceCounts.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudPolicysimulatorV1alphaOrgPolicyViolationsPreviewResourceCounts</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudPolicysimulatorV1alphaOrgPolicyViolationsPreviewResourceCounts} obj Optional instance to populate.
     * @return {module:model/GoogleCloudPolicysimulatorV1alphaOrgPolicyViolationsPreviewResourceCounts} The populated <code>GoogleCloudPolicysimulatorV1alphaOrgPolicyViolationsPreviewResourceCounts</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudPolicysimulatorV1alphaOrgPolicyViolationsPreviewResourceCounts();

            if (data.hasOwnProperty('compliant')) {
                obj['compliant'] = ApiClient.convertToType(data['compliant'], 'Number');
            }
            if (data.hasOwnProperty('errors')) {
                obj['errors'] = ApiClient.convertToType(data['errors'], 'Number');
            }
            if (data.hasOwnProperty('noncompliant')) {
                obj['noncompliant'] = ApiClient.convertToType(data['noncompliant'], 'Number');
            }
            if (data.hasOwnProperty('scanned')) {
                obj['scanned'] = ApiClient.convertToType(data['scanned'], 'Number');
            }
            if (data.hasOwnProperty('unenforced')) {
                obj['unenforced'] = ApiClient.convertToType(data['unenforced'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudPolicysimulatorV1alphaOrgPolicyViolationsPreviewResourceCounts</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudPolicysimulatorV1alphaOrgPolicyViolationsPreviewResourceCounts</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * Output only. Number of scanned resources with zero violations.
 * @member {Number} compliant
 */
GoogleCloudPolicysimulatorV1alphaOrgPolicyViolationsPreviewResourceCounts.prototype['compliant'] = undefined;

/**
 * Output only. Number of resources that returned an error when scanned.
 * @member {Number} errors
 */
GoogleCloudPolicysimulatorV1alphaOrgPolicyViolationsPreviewResourceCounts.prototype['errors'] = undefined;

/**
 * Output only. Number of scanned resources with at least one violation.
 * @member {Number} noncompliant
 */
GoogleCloudPolicysimulatorV1alphaOrgPolicyViolationsPreviewResourceCounts.prototype['noncompliant'] = undefined;

/**
 * Output only. Number of resources checked for compliance. Must equal: unenforced + noncompliant + compliant + error
 * @member {Number} scanned
 */
GoogleCloudPolicysimulatorV1alphaOrgPolicyViolationsPreviewResourceCounts.prototype['scanned'] = undefined;

/**
 * Output only. Number of resources where the constraint was not enforced, i.e. the Policy set `enforced: false` for that resource.
 * @member {Number} unenforced
 */
GoogleCloudPolicysimulatorV1alphaOrgPolicyViolationsPreviewResourceCounts.prototype['unenforced'] = undefined;






export default GoogleCloudPolicysimulatorV1alphaOrgPolicyViolationsPreviewResourceCounts;

