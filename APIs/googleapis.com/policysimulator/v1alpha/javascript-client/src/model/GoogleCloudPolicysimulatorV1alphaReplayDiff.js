/**
 * Policy Simulator API
 *  Policy Simulator is a collection of endpoints for creating, running, and viewing a Replay. A `Replay` is a type of simulation that lets you see how your members' access to resources might change if you changed your IAM policy. During a `Replay`, Policy Simulator re-evaluates, or replays, past access attempts under both the current policy and your proposed policy, and compares those results to determine how your members' access might change under the proposed policy.
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudPolicysimulatorV1alphaAccessStateDiff from './GoogleCloudPolicysimulatorV1alphaAccessStateDiff';

/**
 * The GoogleCloudPolicysimulatorV1alphaReplayDiff model module.
 * @module model/GoogleCloudPolicysimulatorV1alphaReplayDiff
 * @version v1alpha
 */
class GoogleCloudPolicysimulatorV1alphaReplayDiff {
    /**
     * Constructs a new <code>GoogleCloudPolicysimulatorV1alphaReplayDiff</code>.
     * The difference between the results of evaluating an access tuple under the current (baseline) policies and under the proposed (simulated) policies. This difference explains how a principal&#39;s access could change if the proposed policies were applied.
     * @alias module:model/GoogleCloudPolicysimulatorV1alphaReplayDiff
     */
    constructor() { 
        
        GoogleCloudPolicysimulatorV1alphaReplayDiff.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudPolicysimulatorV1alphaReplayDiff</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudPolicysimulatorV1alphaReplayDiff} obj Optional instance to populate.
     * @return {module:model/GoogleCloudPolicysimulatorV1alphaReplayDiff} The populated <code>GoogleCloudPolicysimulatorV1alphaReplayDiff</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudPolicysimulatorV1alphaReplayDiff();

            if (data.hasOwnProperty('accessDiff')) {
                obj['accessDiff'] = GoogleCloudPolicysimulatorV1alphaAccessStateDiff.constructFromObject(data['accessDiff']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudPolicysimulatorV1alphaReplayDiff</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudPolicysimulatorV1alphaReplayDiff</code>.
     */
    static validateJSON(data) {
        // validate the optional field `accessDiff`
        if (data['accessDiff']) { // data not null
          GoogleCloudPolicysimulatorV1alphaAccessStateDiff.validateJSON(data['accessDiff']);
        }

        return true;
    }


}



/**
 * @member {module:model/GoogleCloudPolicysimulatorV1alphaAccessStateDiff} accessDiff
 */
GoogleCloudPolicysimulatorV1alphaReplayDiff.prototype['accessDiff'] = undefined;






export default GoogleCloudPolicysimulatorV1alphaReplayDiff;

