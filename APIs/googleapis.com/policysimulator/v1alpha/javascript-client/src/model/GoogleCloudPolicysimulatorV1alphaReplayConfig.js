/**
 * Policy Simulator API
 *  Policy Simulator is a collection of endpoints for creating, running, and viewing a Replay. A `Replay` is a type of simulation that lets you see how your members' access to resources might change if you changed your IAM policy. During a `Replay`, Policy Simulator re-evaluates, or replays, past access attempts under both the current policy and your proposed policy, and compares those results to determine how your members' access might change under the proposed policy.
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleIamV1Policy from './GoogleIamV1Policy';

/**
 * The GoogleCloudPolicysimulatorV1alphaReplayConfig model module.
 * @module model/GoogleCloudPolicysimulatorV1alphaReplayConfig
 * @version v1alpha
 */
class GoogleCloudPolicysimulatorV1alphaReplayConfig {
    /**
     * Constructs a new <code>GoogleCloudPolicysimulatorV1alphaReplayConfig</code>.
     * The configuration used for a Replay.
     * @alias module:model/GoogleCloudPolicysimulatorV1alphaReplayConfig
     */
    constructor() { 
        
        GoogleCloudPolicysimulatorV1alphaReplayConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudPolicysimulatorV1alphaReplayConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudPolicysimulatorV1alphaReplayConfig} obj Optional instance to populate.
     * @return {module:model/GoogleCloudPolicysimulatorV1alphaReplayConfig} The populated <code>GoogleCloudPolicysimulatorV1alphaReplayConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudPolicysimulatorV1alphaReplayConfig();

            if (data.hasOwnProperty('logSource')) {
                obj['logSource'] = ApiClient.convertToType(data['logSource'], 'String');
            }
            if (data.hasOwnProperty('policyOverlay')) {
                obj['policyOverlay'] = ApiClient.convertToType(data['policyOverlay'], {'String': GoogleIamV1Policy});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudPolicysimulatorV1alphaReplayConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudPolicysimulatorV1alphaReplayConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['logSource'] && !(typeof data['logSource'] === 'string' || data['logSource'] instanceof String)) {
            throw new Error("Expected the field `logSource` to be a primitive type in the JSON string but got " + data['logSource']);
        }

        return true;
    }


}



/**
 * The logs to use as input for the Replay.
 * @member {module:model/GoogleCloudPolicysimulatorV1alphaReplayConfig.LogSourceEnum} logSource
 */
GoogleCloudPolicysimulatorV1alphaReplayConfig.prototype['logSource'] = undefined;

/**
 * A mapping of the resources that you want to simulate policies for and the policies that you want to simulate. Keys are the full resource names for the resources. For example, `//cloudresourcemanager.googleapis.com/projects/my-project`. For examples of full resource names for Google Cloud services, see https://cloud.google.com/iam/help/troubleshooter/full-resource-names. Values are Policy objects representing the policies that you want to simulate. Replays automatically take into account any IAM policies inherited through the resource hierarchy, and any policies set on descendant resources. You do not need to include these policies in the policy overlay.
 * @member {Object.<String, module:model/GoogleIamV1Policy>} policyOverlay
 */
GoogleCloudPolicysimulatorV1alphaReplayConfig.prototype['policyOverlay'] = undefined;





/**
 * Allowed values for the <code>logSource</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudPolicysimulatorV1alphaReplayConfig['LogSourceEnum'] = {

    /**
     * value: "LOG_SOURCE_UNSPECIFIED"
     * @const
     */
    "LOG_SOURCE_UNSPECIFIED": "LOG_SOURCE_UNSPECIFIED",

    /**
     * value: "RECENT_ACCESSES"
     * @const
     */
    "RECENT_ACCESSES": "RECENT_ACCESSES"
};



export default GoogleCloudPolicysimulatorV1alphaReplayConfig;

