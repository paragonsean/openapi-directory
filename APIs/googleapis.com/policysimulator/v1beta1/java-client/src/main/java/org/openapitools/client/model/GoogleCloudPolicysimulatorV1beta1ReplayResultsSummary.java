/*
 * Policy Simulator API
 *  Policy Simulator is a collection of endpoints for creating, running, and viewing a Replay. A `Replay` is a type of simulation that lets you see how your members' access to resources might change if you changed your IAM policy. During a `Replay`, Policy Simulator re-evaluates, or replays, past access attempts under both the current policy and your proposed policy, and compares those results to determine how your members' access might change under the proposed policy.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleTypeDate;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Summary statistics about the replayed log entries.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:43:11.048014-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudPolicysimulatorV1beta1ReplayResultsSummary {
  public static final String SERIALIZED_NAME_DIFFERENCE_COUNT = "differenceCount";
  @SerializedName(SERIALIZED_NAME_DIFFERENCE_COUNT)
  private Integer differenceCount;

  public static final String SERIALIZED_NAME_ERROR_COUNT = "errorCount";
  @SerializedName(SERIALIZED_NAME_ERROR_COUNT)
  private Integer errorCount;

  public static final String SERIALIZED_NAME_LOG_COUNT = "logCount";
  @SerializedName(SERIALIZED_NAME_LOG_COUNT)
  private Integer logCount;

  public static final String SERIALIZED_NAME_NEWEST_DATE = "newestDate";
  @SerializedName(SERIALIZED_NAME_NEWEST_DATE)
  private GoogleTypeDate newestDate;

  public static final String SERIALIZED_NAME_OLDEST_DATE = "oldestDate";
  @SerializedName(SERIALIZED_NAME_OLDEST_DATE)
  private GoogleTypeDate oldestDate;

  public static final String SERIALIZED_NAME_UNCHANGED_COUNT = "unchangedCount";
  @SerializedName(SERIALIZED_NAME_UNCHANGED_COUNT)
  private Integer unchangedCount;

  public GoogleCloudPolicysimulatorV1beta1ReplayResultsSummary() {
  }

  public GoogleCloudPolicysimulatorV1beta1ReplayResultsSummary differenceCount(Integer differenceCount) {
    this.differenceCount = differenceCount;
    return this;
  }

  /**
   * The number of replayed log entries with a difference between baseline and simulated policies.
   * @return differenceCount
   */
  @javax.annotation.Nullable
  public Integer getDifferenceCount() {
    return differenceCount;
  }

  public void setDifferenceCount(Integer differenceCount) {
    this.differenceCount = differenceCount;
  }


  public GoogleCloudPolicysimulatorV1beta1ReplayResultsSummary errorCount(Integer errorCount) {
    this.errorCount = errorCount;
    return this;
  }

  /**
   * The number of log entries that could not be replayed.
   * @return errorCount
   */
  @javax.annotation.Nullable
  public Integer getErrorCount() {
    return errorCount;
  }

  public void setErrorCount(Integer errorCount) {
    this.errorCount = errorCount;
  }


  public GoogleCloudPolicysimulatorV1beta1ReplayResultsSummary logCount(Integer logCount) {
    this.logCount = logCount;
    return this;
  }

  /**
   * The total number of log entries replayed.
   * @return logCount
   */
  @javax.annotation.Nullable
  public Integer getLogCount() {
    return logCount;
  }

  public void setLogCount(Integer logCount) {
    this.logCount = logCount;
  }


  public GoogleCloudPolicysimulatorV1beta1ReplayResultsSummary newestDate(GoogleTypeDate newestDate) {
    this.newestDate = newestDate;
    return this;
  }

  /**
   * Get newestDate
   * @return newestDate
   */
  @javax.annotation.Nullable
  public GoogleTypeDate getNewestDate() {
    return newestDate;
  }

  public void setNewestDate(GoogleTypeDate newestDate) {
    this.newestDate = newestDate;
  }


  public GoogleCloudPolicysimulatorV1beta1ReplayResultsSummary oldestDate(GoogleTypeDate oldestDate) {
    this.oldestDate = oldestDate;
    return this;
  }

  /**
   * Get oldestDate
   * @return oldestDate
   */
  @javax.annotation.Nullable
  public GoogleTypeDate getOldestDate() {
    return oldestDate;
  }

  public void setOldestDate(GoogleTypeDate oldestDate) {
    this.oldestDate = oldestDate;
  }


  public GoogleCloudPolicysimulatorV1beta1ReplayResultsSummary unchangedCount(Integer unchangedCount) {
    this.unchangedCount = unchangedCount;
    return this;
  }

  /**
   * The number of replayed log entries with no difference between baseline and simulated policies.
   * @return unchangedCount
   */
  @javax.annotation.Nullable
  public Integer getUnchangedCount() {
    return unchangedCount;
  }

  public void setUnchangedCount(Integer unchangedCount) {
    this.unchangedCount = unchangedCount;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudPolicysimulatorV1beta1ReplayResultsSummary googleCloudPolicysimulatorV1beta1ReplayResultsSummary = (GoogleCloudPolicysimulatorV1beta1ReplayResultsSummary) o;
    return Objects.equals(this.differenceCount, googleCloudPolicysimulatorV1beta1ReplayResultsSummary.differenceCount) &&
        Objects.equals(this.errorCount, googleCloudPolicysimulatorV1beta1ReplayResultsSummary.errorCount) &&
        Objects.equals(this.logCount, googleCloudPolicysimulatorV1beta1ReplayResultsSummary.logCount) &&
        Objects.equals(this.newestDate, googleCloudPolicysimulatorV1beta1ReplayResultsSummary.newestDate) &&
        Objects.equals(this.oldestDate, googleCloudPolicysimulatorV1beta1ReplayResultsSummary.oldestDate) &&
        Objects.equals(this.unchangedCount, googleCloudPolicysimulatorV1beta1ReplayResultsSummary.unchangedCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(differenceCount, errorCount, logCount, newestDate, oldestDate, unchangedCount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudPolicysimulatorV1beta1ReplayResultsSummary {\n");
    sb.append("    differenceCount: ").append(toIndentedString(differenceCount)).append("\n");
    sb.append("    errorCount: ").append(toIndentedString(errorCount)).append("\n");
    sb.append("    logCount: ").append(toIndentedString(logCount)).append("\n");
    sb.append("    newestDate: ").append(toIndentedString(newestDate)).append("\n");
    sb.append("    oldestDate: ").append(toIndentedString(oldestDate)).append("\n");
    sb.append("    unchangedCount: ").append(toIndentedString(unchangedCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("differenceCount");
    openapiFields.add("errorCount");
    openapiFields.add("logCount");
    openapiFields.add("newestDate");
    openapiFields.add("oldestDate");
    openapiFields.add("unchangedCount");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudPolicysimulatorV1beta1ReplayResultsSummary
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudPolicysimulatorV1beta1ReplayResultsSummary.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudPolicysimulatorV1beta1ReplayResultsSummary is not found in the empty JSON string", GoogleCloudPolicysimulatorV1beta1ReplayResultsSummary.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudPolicysimulatorV1beta1ReplayResultsSummary.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudPolicysimulatorV1beta1ReplayResultsSummary` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `newestDate`
      if (jsonObj.get("newestDate") != null && !jsonObj.get("newestDate").isJsonNull()) {
        GoogleTypeDate.validateJsonElement(jsonObj.get("newestDate"));
      }
      // validate the optional field `oldestDate`
      if (jsonObj.get("oldestDate") != null && !jsonObj.get("oldestDate").isJsonNull()) {
        GoogleTypeDate.validateJsonElement(jsonObj.get("oldestDate"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudPolicysimulatorV1beta1ReplayResultsSummary.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudPolicysimulatorV1beta1ReplayResultsSummary' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudPolicysimulatorV1beta1ReplayResultsSummary> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudPolicysimulatorV1beta1ReplayResultsSummary.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudPolicysimulatorV1beta1ReplayResultsSummary>() {
           @Override
           public void write(JsonWriter out, GoogleCloudPolicysimulatorV1beta1ReplayResultsSummary value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudPolicysimulatorV1beta1ReplayResultsSummary read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudPolicysimulatorV1beta1ReplayResultsSummary given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudPolicysimulatorV1beta1ReplayResultsSummary
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudPolicysimulatorV1beta1ReplayResultsSummary
   */
  public static GoogleCloudPolicysimulatorV1beta1ReplayResultsSummary fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudPolicysimulatorV1beta1ReplayResultsSummary.class);
  }

  /**
   * Convert an instance of GoogleCloudPolicysimulatorV1beta1ReplayResultsSummary to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

