# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_orgpolicy_v2_alternate_policy_spec import GoogleCloudOrgpolicyV2AlternatePolicySpec
from openapi_server.models.google_cloud_orgpolicy_v2_policy_spec import GoogleCloudOrgpolicyV2PolicySpec
from openapi_server import util


class GoogleCloudOrgpolicyV2Policy(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, alternate: GoogleCloudOrgpolicyV2AlternatePolicySpec=None, dry_run_spec: GoogleCloudOrgpolicyV2PolicySpec=None, etag: str=None, name: str=None, spec: GoogleCloudOrgpolicyV2PolicySpec=None):
        """GoogleCloudOrgpolicyV2Policy - a model defined in OpenAPI

        :param alternate: The alternate of this GoogleCloudOrgpolicyV2Policy.
        :param dry_run_spec: The dry_run_spec of this GoogleCloudOrgpolicyV2Policy.
        :param etag: The etag of this GoogleCloudOrgpolicyV2Policy.
        :param name: The name of this GoogleCloudOrgpolicyV2Policy.
        :param spec: The spec of this GoogleCloudOrgpolicyV2Policy.
        """
        self.openapi_types = {
            'alternate': GoogleCloudOrgpolicyV2AlternatePolicySpec,
            'dry_run_spec': GoogleCloudOrgpolicyV2PolicySpec,
            'etag': str,
            'name': str,
            'spec': GoogleCloudOrgpolicyV2PolicySpec
        }

        self.attribute_map = {
            'alternate': 'alternate',
            'dry_run_spec': 'dryRunSpec',
            'etag': 'etag',
            'name': 'name',
            'spec': 'spec'
        }

        self._alternate = alternate
        self._dry_run_spec = dry_run_spec
        self._etag = etag
        self._name = name
        self._spec = spec

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudOrgpolicyV2Policy':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudOrgpolicyV2Policy of this GoogleCloudOrgpolicyV2Policy.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def alternate(self):
        """Gets the alternate of this GoogleCloudOrgpolicyV2Policy.


        :return: The alternate of this GoogleCloudOrgpolicyV2Policy.
        :rtype: GoogleCloudOrgpolicyV2AlternatePolicySpec
        """
        return self._alternate

    @alternate.setter
    def alternate(self, alternate):
        """Sets the alternate of this GoogleCloudOrgpolicyV2Policy.


        :param alternate: The alternate of this GoogleCloudOrgpolicyV2Policy.
        :type alternate: GoogleCloudOrgpolicyV2AlternatePolicySpec
        """

        self._alternate = alternate

    @property
    def dry_run_spec(self):
        """Gets the dry_run_spec of this GoogleCloudOrgpolicyV2Policy.


        :return: The dry_run_spec of this GoogleCloudOrgpolicyV2Policy.
        :rtype: GoogleCloudOrgpolicyV2PolicySpec
        """
        return self._dry_run_spec

    @dry_run_spec.setter
    def dry_run_spec(self, dry_run_spec):
        """Sets the dry_run_spec of this GoogleCloudOrgpolicyV2Policy.


        :param dry_run_spec: The dry_run_spec of this GoogleCloudOrgpolicyV2Policy.
        :type dry_run_spec: GoogleCloudOrgpolicyV2PolicySpec
        """

        self._dry_run_spec = dry_run_spec

    @property
    def etag(self):
        """Gets the etag of this GoogleCloudOrgpolicyV2Policy.

        Optional. An opaque tag indicating the current state of the policy, used for concurrency control. This 'etag' is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.

        :return: The etag of this GoogleCloudOrgpolicyV2Policy.
        :rtype: str
        """
        return self._etag

    @etag.setter
    def etag(self, etag):
        """Sets the etag of this GoogleCloudOrgpolicyV2Policy.

        Optional. An opaque tag indicating the current state of the policy, used for concurrency control. This 'etag' is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.

        :param etag: The etag of this GoogleCloudOrgpolicyV2Policy.
        :type etag: str
        """

        self._etag = etag

    @property
    def name(self):
        """Gets the name of this GoogleCloudOrgpolicyV2Policy.

        Immutable. The resource name of the policy. Must be one of the following forms, where `constraint_name` is the name of the constraint which this policy configures: * `projects/{project_number}/policies/{constraint_name}` * `folders/{folder_id}/policies/{constraint_name}` * `organizations/{organization_id}/policies/{constraint_name}` For example, `projects/123/policies/compute.disableSerialPortAccess`. Note: `projects/{project_id}/policies/{constraint_name}` is also an acceptable name for API requests, but responses will return the name using the equivalent project number.

        :return: The name of this GoogleCloudOrgpolicyV2Policy.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudOrgpolicyV2Policy.

        Immutable. The resource name of the policy. Must be one of the following forms, where `constraint_name` is the name of the constraint which this policy configures: * `projects/{project_number}/policies/{constraint_name}` * `folders/{folder_id}/policies/{constraint_name}` * `organizations/{organization_id}/policies/{constraint_name}` For example, `projects/123/policies/compute.disableSerialPortAccess`. Note: `projects/{project_id}/policies/{constraint_name}` is also an acceptable name for API requests, but responses will return the name using the equivalent project number.

        :param name: The name of this GoogleCloudOrgpolicyV2Policy.
        :type name: str
        """

        self._name = name

    @property
    def spec(self):
        """Gets the spec of this GoogleCloudOrgpolicyV2Policy.


        :return: The spec of this GoogleCloudOrgpolicyV2Policy.
        :rtype: GoogleCloudOrgpolicyV2PolicySpec
        """
        return self._spec

    @spec.setter
    def spec(self, spec):
        """Sets the spec of this GoogleCloudOrgpolicyV2Policy.


        :param spec: The spec of this GoogleCloudOrgpolicyV2Policy.
        :type spec: GoogleCloudOrgpolicyV2PolicySpec
        """

        self._spec = spec
