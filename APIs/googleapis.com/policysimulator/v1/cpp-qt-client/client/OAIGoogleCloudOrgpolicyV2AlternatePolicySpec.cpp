/**
 * Policy Simulator API
 *  Policy Simulator is a collection of endpoints for creating, running, and viewing a Replay. A `Replay` is a type of simulation that lets you see how your members' access to resources might change if you changed your IAM policy. During a `Replay`, Policy Simulator re-evaluates, or replays, past access attempts under both the current policy and your proposed policy, and compares those results to determine how your members' access might change under the proposed policy.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudOrgpolicyV2AlternatePolicySpec.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudOrgpolicyV2AlternatePolicySpec::OAIGoogleCloudOrgpolicyV2AlternatePolicySpec(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudOrgpolicyV2AlternatePolicySpec::OAIGoogleCloudOrgpolicyV2AlternatePolicySpec() {
    this->initializeModel();
}

OAIGoogleCloudOrgpolicyV2AlternatePolicySpec::~OAIGoogleCloudOrgpolicyV2AlternatePolicySpec() {}

void OAIGoogleCloudOrgpolicyV2AlternatePolicySpec::initializeModel() {

    m_launch_isSet = false;
    m_launch_isValid = false;

    m_spec_isSet = false;
    m_spec_isValid = false;
}

void OAIGoogleCloudOrgpolicyV2AlternatePolicySpec::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudOrgpolicyV2AlternatePolicySpec::fromJsonObject(QJsonObject json) {

    m_launch_isValid = ::OpenAPI::fromJsonValue(m_launch, json[QString("launch")]);
    m_launch_isSet = !json[QString("launch")].isNull() && m_launch_isValid;

    m_spec_isValid = ::OpenAPI::fromJsonValue(m_spec, json[QString("spec")]);
    m_spec_isSet = !json[QString("spec")].isNull() && m_spec_isValid;
}

QString OAIGoogleCloudOrgpolicyV2AlternatePolicySpec::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudOrgpolicyV2AlternatePolicySpec::asJsonObject() const {
    QJsonObject obj;
    if (m_launch_isSet) {
        obj.insert(QString("launch"), ::OpenAPI::toJsonValue(m_launch));
    }
    if (m_spec.isSet()) {
        obj.insert(QString("spec"), ::OpenAPI::toJsonValue(m_spec));
    }
    return obj;
}

QString OAIGoogleCloudOrgpolicyV2AlternatePolicySpec::getLaunch() const {
    return m_launch;
}
void OAIGoogleCloudOrgpolicyV2AlternatePolicySpec::setLaunch(const QString &launch) {
    m_launch = launch;
    m_launch_isSet = true;
}

bool OAIGoogleCloudOrgpolicyV2AlternatePolicySpec::is_launch_Set() const{
    return m_launch_isSet;
}

bool OAIGoogleCloudOrgpolicyV2AlternatePolicySpec::is_launch_Valid() const{
    return m_launch_isValid;
}

OAIGoogleCloudOrgpolicyV2PolicySpec OAIGoogleCloudOrgpolicyV2AlternatePolicySpec::getSpec() const {
    return m_spec;
}
void OAIGoogleCloudOrgpolicyV2AlternatePolicySpec::setSpec(const OAIGoogleCloudOrgpolicyV2PolicySpec &spec) {
    m_spec = spec;
    m_spec_isSet = true;
}

bool OAIGoogleCloudOrgpolicyV2AlternatePolicySpec::is_spec_Set() const{
    return m_spec_isSet;
}

bool OAIGoogleCloudOrgpolicyV2AlternatePolicySpec::is_spec_Valid() const{
    return m_spec_isValid;
}

bool OAIGoogleCloudOrgpolicyV2AlternatePolicySpec::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_launch_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_spec.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudOrgpolicyV2AlternatePolicySpec::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
