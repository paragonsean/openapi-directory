/*
 * Policy Simulator API
 *  Policy Simulator is a collection of endpoints for creating, running, and viewing a Replay. A `Replay` is a type of simulation that lets you see how your members' access to resources might change if you changed your IAM policy. During a `Replay`, Policy Simulator re-evaluates, or replays, past access attempts under both the current policy and your proposed policy, and compares those results to determine how your members' access might change under the proposed policy.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudOrgpolicyV2AlternatePolicySpec;
import org.openapitools.client.model.GoogleCloudOrgpolicyV2PolicySpec;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Defines an organization policy which is used to specify constraints for configurations of Google Cloud resources.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:43:14.313021-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudOrgpolicyV2Policy {
  public static final String SERIALIZED_NAME_ALTERNATE = "alternate";
  @SerializedName(SERIALIZED_NAME_ALTERNATE)
  private GoogleCloudOrgpolicyV2AlternatePolicySpec alternate;

  public static final String SERIALIZED_NAME_DRY_RUN_SPEC = "dryRunSpec";
  @SerializedName(SERIALIZED_NAME_DRY_RUN_SPEC)
  private GoogleCloudOrgpolicyV2PolicySpec dryRunSpec;

  public static final String SERIALIZED_NAME_ETAG = "etag";
  @SerializedName(SERIALIZED_NAME_ETAG)
  private String etag;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_SPEC = "spec";
  @SerializedName(SERIALIZED_NAME_SPEC)
  private GoogleCloudOrgpolicyV2PolicySpec spec;

  public GoogleCloudOrgpolicyV2Policy() {
  }

  public GoogleCloudOrgpolicyV2Policy alternate(GoogleCloudOrgpolicyV2AlternatePolicySpec alternate) {
    this.alternate = alternate;
    return this;
  }

  /**
   * Get alternate
   * @return alternate
   */
  @javax.annotation.Nullable
  public GoogleCloudOrgpolicyV2AlternatePolicySpec getAlternate() {
    return alternate;
  }

  public void setAlternate(GoogleCloudOrgpolicyV2AlternatePolicySpec alternate) {
    this.alternate = alternate;
  }


  public GoogleCloudOrgpolicyV2Policy dryRunSpec(GoogleCloudOrgpolicyV2PolicySpec dryRunSpec) {
    this.dryRunSpec = dryRunSpec;
    return this;
  }

  /**
   * Get dryRunSpec
   * @return dryRunSpec
   */
  @javax.annotation.Nullable
  public GoogleCloudOrgpolicyV2PolicySpec getDryRunSpec() {
    return dryRunSpec;
  }

  public void setDryRunSpec(GoogleCloudOrgpolicyV2PolicySpec dryRunSpec) {
    this.dryRunSpec = dryRunSpec;
  }


  public GoogleCloudOrgpolicyV2Policy etag(String etag) {
    this.etag = etag;
    return this;
  }

  /**
   * Optional. An opaque tag indicating the current state of the policy, used for concurrency control. This &#39;etag&#39; is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
   * @return etag
   */
  @javax.annotation.Nullable
  public String getEtag() {
    return etag;
  }

  public void setEtag(String etag) {
    this.etag = etag;
  }


  public GoogleCloudOrgpolicyV2Policy name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Immutable. The resource name of the policy. Must be one of the following forms, where &#x60;constraint_name&#x60; is the name of the constraint which this policy configures: * &#x60;projects/{project_number}/policies/{constraint_name}&#x60; * &#x60;folders/{folder_id}/policies/{constraint_name}&#x60; * &#x60;organizations/{organization_id}/policies/{constraint_name}&#x60; For example, &#x60;projects/123/policies/compute.disableSerialPortAccess&#x60;. Note: &#x60;projects/{project_id}/policies/{constraint_name}&#x60; is also an acceptable name for API requests, but responses will return the name using the equivalent project number.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public GoogleCloudOrgpolicyV2Policy spec(GoogleCloudOrgpolicyV2PolicySpec spec) {
    this.spec = spec;
    return this;
  }

  /**
   * Get spec
   * @return spec
   */
  @javax.annotation.Nullable
  public GoogleCloudOrgpolicyV2PolicySpec getSpec() {
    return spec;
  }

  public void setSpec(GoogleCloudOrgpolicyV2PolicySpec spec) {
    this.spec = spec;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudOrgpolicyV2Policy googleCloudOrgpolicyV2Policy = (GoogleCloudOrgpolicyV2Policy) o;
    return Objects.equals(this.alternate, googleCloudOrgpolicyV2Policy.alternate) &&
        Objects.equals(this.dryRunSpec, googleCloudOrgpolicyV2Policy.dryRunSpec) &&
        Objects.equals(this.etag, googleCloudOrgpolicyV2Policy.etag) &&
        Objects.equals(this.name, googleCloudOrgpolicyV2Policy.name) &&
        Objects.equals(this.spec, googleCloudOrgpolicyV2Policy.spec);
  }

  @Override
  public int hashCode() {
    return Objects.hash(alternate, dryRunSpec, etag, name, spec);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudOrgpolicyV2Policy {\n");
    sb.append("    alternate: ").append(toIndentedString(alternate)).append("\n");
    sb.append("    dryRunSpec: ").append(toIndentedString(dryRunSpec)).append("\n");
    sb.append("    etag: ").append(toIndentedString(etag)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    spec: ").append(toIndentedString(spec)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("alternate");
    openapiFields.add("dryRunSpec");
    openapiFields.add("etag");
    openapiFields.add("name");
    openapiFields.add("spec");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudOrgpolicyV2Policy
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudOrgpolicyV2Policy.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudOrgpolicyV2Policy is not found in the empty JSON string", GoogleCloudOrgpolicyV2Policy.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudOrgpolicyV2Policy.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudOrgpolicyV2Policy` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `alternate`
      if (jsonObj.get("alternate") != null && !jsonObj.get("alternate").isJsonNull()) {
        GoogleCloudOrgpolicyV2AlternatePolicySpec.validateJsonElement(jsonObj.get("alternate"));
      }
      // validate the optional field `dryRunSpec`
      if (jsonObj.get("dryRunSpec") != null && !jsonObj.get("dryRunSpec").isJsonNull()) {
        GoogleCloudOrgpolicyV2PolicySpec.validateJsonElement(jsonObj.get("dryRunSpec"));
      }
      if ((jsonObj.get("etag") != null && !jsonObj.get("etag").isJsonNull()) && !jsonObj.get("etag").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `etag` to be a primitive type in the JSON string but got `%s`", jsonObj.get("etag").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // validate the optional field `spec`
      if (jsonObj.get("spec") != null && !jsonObj.get("spec").isJsonNull()) {
        GoogleCloudOrgpolicyV2PolicySpec.validateJsonElement(jsonObj.get("spec"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudOrgpolicyV2Policy.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudOrgpolicyV2Policy' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudOrgpolicyV2Policy> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudOrgpolicyV2Policy.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudOrgpolicyV2Policy>() {
           @Override
           public void write(JsonWriter out, GoogleCloudOrgpolicyV2Policy value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudOrgpolicyV2Policy read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudOrgpolicyV2Policy given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudOrgpolicyV2Policy
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudOrgpolicyV2Policy
   */
  public static GoogleCloudOrgpolicyV2Policy fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudOrgpolicyV2Policy.class);
  }

  /**
   * Convert an instance of GoogleCloudOrgpolicyV2Policy to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

