/**
 * Policy Simulator API
 *  Policy Simulator is a collection of endpoints for creating, running, and viewing a Replay. A `Replay` is a type of simulation that lets you see how your members' access to resources might change if you changed your IAM policy. During a `Replay`, Policy Simulator re-evaluates, or replays, past access attempts under both the current policy and your proposed policy, and compares those results to determine how your members' access might change under the proposed policy.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudPolicysimulatorV1BindingExplanationAnnotatedMembership model module.
 * @module model/GoogleCloudPolicysimulatorV1BindingExplanationAnnotatedMembership
 * @version v1
 */
class GoogleCloudPolicysimulatorV1BindingExplanationAnnotatedMembership {
    /**
     * Constructs a new <code>GoogleCloudPolicysimulatorV1BindingExplanationAnnotatedMembership</code>.
     * Details about whether the binding includes the principal.
     * @alias module:model/GoogleCloudPolicysimulatorV1BindingExplanationAnnotatedMembership
     */
    constructor() { 
        
        GoogleCloudPolicysimulatorV1BindingExplanationAnnotatedMembership.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudPolicysimulatorV1BindingExplanationAnnotatedMembership</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudPolicysimulatorV1BindingExplanationAnnotatedMembership} obj Optional instance to populate.
     * @return {module:model/GoogleCloudPolicysimulatorV1BindingExplanationAnnotatedMembership} The populated <code>GoogleCloudPolicysimulatorV1BindingExplanationAnnotatedMembership</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudPolicysimulatorV1BindingExplanationAnnotatedMembership();

            if (data.hasOwnProperty('membership')) {
                obj['membership'] = ApiClient.convertToType(data['membership'], 'String');
            }
            if (data.hasOwnProperty('relevance')) {
                obj['relevance'] = ApiClient.convertToType(data['relevance'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudPolicysimulatorV1BindingExplanationAnnotatedMembership</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudPolicysimulatorV1BindingExplanationAnnotatedMembership</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['membership'] && !(typeof data['membership'] === 'string' || data['membership'] instanceof String)) {
            throw new Error("Expected the field `membership` to be a primitive type in the JSON string but got " + data['membership']);
        }
        // ensure the json data is a string
        if (data['relevance'] && !(typeof data['relevance'] === 'string' || data['relevance'] instanceof String)) {
            throw new Error("Expected the field `relevance` to be a primitive type in the JSON string but got " + data['relevance']);
        }

        return true;
    }


}



/**
 * Indicates whether the binding includes the principal.
 * @member {module:model/GoogleCloudPolicysimulatorV1BindingExplanationAnnotatedMembership.MembershipEnum} membership
 */
GoogleCloudPolicysimulatorV1BindingExplanationAnnotatedMembership.prototype['membership'] = undefined;

/**
 * The relevance of the principal's status to the overall determination for the binding.
 * @member {module:model/GoogleCloudPolicysimulatorV1BindingExplanationAnnotatedMembership.RelevanceEnum} relevance
 */
GoogleCloudPolicysimulatorV1BindingExplanationAnnotatedMembership.prototype['relevance'] = undefined;





/**
 * Allowed values for the <code>membership</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudPolicysimulatorV1BindingExplanationAnnotatedMembership['MembershipEnum'] = {

    /**
     * value: "MEMBERSHIP_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "MEMBERSHIP_UNSPECIFIED",

    /**
     * value: "MEMBERSHIP_INCLUDED"
     * @const
     */
    "INCLUDED": "MEMBERSHIP_INCLUDED",

    /**
     * value: "MEMBERSHIP_NOT_INCLUDED"
     * @const
     */
    "NOT_INCLUDED": "MEMBERSHIP_NOT_INCLUDED",

    /**
     * value: "MEMBERSHIP_UNKNOWN_INFO_DENIED"
     * @const
     */
    "UNKNOWN_INFO_DENIED": "MEMBERSHIP_UNKNOWN_INFO_DENIED",

    /**
     * value: "MEMBERSHIP_UNKNOWN_UNSUPPORTED"
     * @const
     */
    "UNKNOWN_UNSUPPORTED": "MEMBERSHIP_UNKNOWN_UNSUPPORTED"
};


/**
 * Allowed values for the <code>relevance</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudPolicysimulatorV1BindingExplanationAnnotatedMembership['RelevanceEnum'] = {

    /**
     * value: "HEURISTIC_RELEVANCE_UNSPECIFIED"
     * @const
     */
    "HEURISTIC_RELEVANCE_UNSPECIFIED": "HEURISTIC_RELEVANCE_UNSPECIFIED",

    /**
     * value: "NORMAL"
     * @const
     */
    "NORMAL": "NORMAL",

    /**
     * value: "HIGH"
     * @const
     */
    "HIGH": "HIGH"
};



export default GoogleCloudPolicysimulatorV1BindingExplanationAnnotatedMembership;

