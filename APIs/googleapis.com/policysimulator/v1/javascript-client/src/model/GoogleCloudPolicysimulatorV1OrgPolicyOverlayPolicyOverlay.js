/**
 * Policy Simulator API
 *  Policy Simulator is a collection of endpoints for creating, running, and viewing a Replay. A `Replay` is a type of simulation that lets you see how your members' access to resources might change if you changed your IAM policy. During a `Replay`, Policy Simulator re-evaluates, or replays, past access attempts under both the current policy and your proposed policy, and compares those results to determine how your members' access might change under the proposed policy.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudOrgpolicyV2Policy from './GoogleCloudOrgpolicyV2Policy';

/**
 * The GoogleCloudPolicysimulatorV1OrgPolicyOverlayPolicyOverlay model module.
 * @module model/GoogleCloudPolicysimulatorV1OrgPolicyOverlayPolicyOverlay
 * @version v1
 */
class GoogleCloudPolicysimulatorV1OrgPolicyOverlayPolicyOverlay {
    /**
     * Constructs a new <code>GoogleCloudPolicysimulatorV1OrgPolicyOverlayPolicyOverlay</code>.
     * A change to an OrgPolicy.
     * @alias module:model/GoogleCloudPolicysimulatorV1OrgPolicyOverlayPolicyOverlay
     */
    constructor() { 
        
        GoogleCloudPolicysimulatorV1OrgPolicyOverlayPolicyOverlay.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudPolicysimulatorV1OrgPolicyOverlayPolicyOverlay</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudPolicysimulatorV1OrgPolicyOverlayPolicyOverlay} obj Optional instance to populate.
     * @return {module:model/GoogleCloudPolicysimulatorV1OrgPolicyOverlayPolicyOverlay} The populated <code>GoogleCloudPolicysimulatorV1OrgPolicyOverlayPolicyOverlay</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudPolicysimulatorV1OrgPolicyOverlayPolicyOverlay();

            if (data.hasOwnProperty('policy')) {
                obj['policy'] = GoogleCloudOrgpolicyV2Policy.constructFromObject(data['policy']);
            }
            if (data.hasOwnProperty('policyParent')) {
                obj['policyParent'] = ApiClient.convertToType(data['policyParent'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudPolicysimulatorV1OrgPolicyOverlayPolicyOverlay</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudPolicysimulatorV1OrgPolicyOverlayPolicyOverlay</code>.
     */
    static validateJSON(data) {
        // validate the optional field `policy`
        if (data['policy']) { // data not null
          GoogleCloudOrgpolicyV2Policy.validateJSON(data['policy']);
        }
        // ensure the json data is a string
        if (data['policyParent'] && !(typeof data['policyParent'] === 'string' || data['policyParent'] instanceof String)) {
            throw new Error("Expected the field `policyParent` to be a primitive type in the JSON string but got " + data['policyParent']);
        }

        return true;
    }


}



/**
 * @member {module:model/GoogleCloudOrgpolicyV2Policy} policy
 */
GoogleCloudPolicysimulatorV1OrgPolicyOverlayPolicyOverlay.prototype['policy'] = undefined;

/**
 * Optional. The parent of the policy we are attaching to. Example: \"projects/123456\"
 * @member {String} policyParent
 */
GoogleCloudPolicysimulatorV1OrgPolicyOverlayPolicyOverlay.prototype['policyParent'] = undefined;






export default GoogleCloudPolicysimulatorV1OrgPolicyOverlayPolicyOverlay;

