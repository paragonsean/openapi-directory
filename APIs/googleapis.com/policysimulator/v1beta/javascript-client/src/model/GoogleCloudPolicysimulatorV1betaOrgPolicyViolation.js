/**
 * Policy Simulator API
 *  Policy Simulator is a collection of endpoints for creating, running, and viewing a Replay. A `Replay` is a type of simulation that lets you see how your members' access to resources might change if you changed your IAM policy. During a `Replay`, Policy Simulator re-evaluates, or replays, past access attempts under both the current policy and your proposed policy, and compares those results to determine how your members' access might change under the proposed policy.
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudOrgpolicyV2CustomConstraint from './GoogleCloudOrgpolicyV2CustomConstraint';
import GoogleCloudPolicysimulatorV1betaResourceContext from './GoogleCloudPolicysimulatorV1betaResourceContext';
import GoogleRpcStatus from './GoogleRpcStatus';

/**
 * The GoogleCloudPolicysimulatorV1betaOrgPolicyViolation model module.
 * @module model/GoogleCloudPolicysimulatorV1betaOrgPolicyViolation
 * @version v1beta
 */
class GoogleCloudPolicysimulatorV1betaOrgPolicyViolation {
    /**
     * Constructs a new <code>GoogleCloudPolicysimulatorV1betaOrgPolicyViolation</code>.
     * OrgPolicyViolation is a resource representing a single resource violating a single OrgPolicy constraint.
     * @alias module:model/GoogleCloudPolicysimulatorV1betaOrgPolicyViolation
     */
    constructor() { 
        
        GoogleCloudPolicysimulatorV1betaOrgPolicyViolation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudPolicysimulatorV1betaOrgPolicyViolation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudPolicysimulatorV1betaOrgPolicyViolation} obj Optional instance to populate.
     * @return {module:model/GoogleCloudPolicysimulatorV1betaOrgPolicyViolation} The populated <code>GoogleCloudPolicysimulatorV1betaOrgPolicyViolation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudPolicysimulatorV1betaOrgPolicyViolation();

            if (data.hasOwnProperty('customConstraint')) {
                obj['customConstraint'] = GoogleCloudOrgpolicyV2CustomConstraint.constructFromObject(data['customConstraint']);
            }
            if (data.hasOwnProperty('error')) {
                obj['error'] = GoogleRpcStatus.constructFromObject(data['error']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('resource')) {
                obj['resource'] = GoogleCloudPolicysimulatorV1betaResourceContext.constructFromObject(data['resource']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudPolicysimulatorV1betaOrgPolicyViolation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudPolicysimulatorV1betaOrgPolicyViolation</code>.
     */
    static validateJSON(data) {
        // validate the optional field `customConstraint`
        if (data['customConstraint']) { // data not null
          GoogleCloudOrgpolicyV2CustomConstraint.validateJSON(data['customConstraint']);
        }
        // validate the optional field `error`
        if (data['error']) { // data not null
          GoogleRpcStatus.validateJSON(data['error']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `resource`
        if (data['resource']) { // data not null
          GoogleCloudPolicysimulatorV1betaResourceContext.validateJSON(data['resource']);
        }

        return true;
    }


}



/**
 * @member {module:model/GoogleCloudOrgpolicyV2CustomConstraint} customConstraint
 */
GoogleCloudPolicysimulatorV1betaOrgPolicyViolation.prototype['customConstraint'] = undefined;

/**
 * @member {module:model/GoogleRpcStatus} error
 */
GoogleCloudPolicysimulatorV1betaOrgPolicyViolation.prototype['error'] = undefined;

/**
 * The name of the `OrgPolicyViolation`. Example: organizations/my-example-org/locations/global/orgPolicyViolationsPreviews/506a5f7f/orgPolicyViolations/38ce`
 * @member {String} name
 */
GoogleCloudPolicysimulatorV1betaOrgPolicyViolation.prototype['name'] = undefined;

/**
 * @member {module:model/GoogleCloudPolicysimulatorV1betaResourceContext} resource
 */
GoogleCloudPolicysimulatorV1betaOrgPolicyViolation.prototype['resource'] = undefined;






export default GoogleCloudPolicysimulatorV1betaOrgPolicyViolation;

