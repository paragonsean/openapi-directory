/**
 * Policy Simulator API
 *  Policy Simulator is a collection of endpoints for creating, running, and viewing a Replay. A `Replay` is a type of simulation that lets you see how your members' access to resources might change if you changed your IAM policy. During a `Replay`, Policy Simulator re-evaluates, or replays, past access attempts under both the current policy and your proposed policy, and compares those results to determine how your members' access might change under the proposed policy.
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudPolicysimulatorV1betaBindingExplanationAnnotatedMembership from './GoogleCloudPolicysimulatorV1betaBindingExplanationAnnotatedMembership';
import GoogleTypeExpr from './GoogleTypeExpr';

/**
 * The GoogleCloudPolicysimulatorV1betaBindingExplanation model module.
 * @module model/GoogleCloudPolicysimulatorV1betaBindingExplanation
 * @version v1beta
 */
class GoogleCloudPolicysimulatorV1betaBindingExplanation {
    /**
     * Constructs a new <code>GoogleCloudPolicysimulatorV1betaBindingExplanation</code>.
     * Details about how a binding in a policy affects a principal&#39;s ability to use a permission.
     * @alias module:model/GoogleCloudPolicysimulatorV1betaBindingExplanation
     */
    constructor() { 
        
        GoogleCloudPolicysimulatorV1betaBindingExplanation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudPolicysimulatorV1betaBindingExplanation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudPolicysimulatorV1betaBindingExplanation} obj Optional instance to populate.
     * @return {module:model/GoogleCloudPolicysimulatorV1betaBindingExplanation} The populated <code>GoogleCloudPolicysimulatorV1betaBindingExplanation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudPolicysimulatorV1betaBindingExplanation();

            if (data.hasOwnProperty('access')) {
                obj['access'] = ApiClient.convertToType(data['access'], 'String');
            }
            if (data.hasOwnProperty('condition')) {
                obj['condition'] = GoogleTypeExpr.constructFromObject(data['condition']);
            }
            if (data.hasOwnProperty('memberships')) {
                obj['memberships'] = ApiClient.convertToType(data['memberships'], {'String': GoogleCloudPolicysimulatorV1betaBindingExplanationAnnotatedMembership});
            }
            if (data.hasOwnProperty('relevance')) {
                obj['relevance'] = ApiClient.convertToType(data['relevance'], 'String');
            }
            if (data.hasOwnProperty('role')) {
                obj['role'] = ApiClient.convertToType(data['role'], 'String');
            }
            if (data.hasOwnProperty('rolePermission')) {
                obj['rolePermission'] = ApiClient.convertToType(data['rolePermission'], 'String');
            }
            if (data.hasOwnProperty('rolePermissionRelevance')) {
                obj['rolePermissionRelevance'] = ApiClient.convertToType(data['rolePermissionRelevance'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudPolicysimulatorV1betaBindingExplanation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudPolicysimulatorV1betaBindingExplanation</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['access'] && !(typeof data['access'] === 'string' || data['access'] instanceof String)) {
            throw new Error("Expected the field `access` to be a primitive type in the JSON string but got " + data['access']);
        }
        // validate the optional field `condition`
        if (data['condition']) { // data not null
          GoogleTypeExpr.validateJSON(data['condition']);
        }
        // ensure the json data is a string
        if (data['relevance'] && !(typeof data['relevance'] === 'string' || data['relevance'] instanceof String)) {
            throw new Error("Expected the field `relevance` to be a primitive type in the JSON string but got " + data['relevance']);
        }
        // ensure the json data is a string
        if (data['role'] && !(typeof data['role'] === 'string' || data['role'] instanceof String)) {
            throw new Error("Expected the field `role` to be a primitive type in the JSON string but got " + data['role']);
        }
        // ensure the json data is a string
        if (data['rolePermission'] && !(typeof data['rolePermission'] === 'string' || data['rolePermission'] instanceof String)) {
            throw new Error("Expected the field `rolePermission` to be a primitive type in the JSON string but got " + data['rolePermission']);
        }
        // ensure the json data is a string
        if (data['rolePermissionRelevance'] && !(typeof data['rolePermissionRelevance'] === 'string' || data['rolePermissionRelevance'] instanceof String)) {
            throw new Error("Expected the field `rolePermissionRelevance` to be a primitive type in the JSON string but got " + data['rolePermissionRelevance']);
        }

        return true;
    }


}



/**
 * Required. Indicates whether _this binding_ provides the specified permission to the specified principal for the specified resource. This field does _not_ indicate whether the principal actually has the permission for the resource. There might be another binding that overrides this binding. To determine whether the principal actually has the permission, use the `access` field in the TroubleshootIamPolicyResponse.
 * @member {module:model/GoogleCloudPolicysimulatorV1betaBindingExplanation.AccessEnum} access
 */
GoogleCloudPolicysimulatorV1betaBindingExplanation.prototype['access'] = undefined;

/**
 * @member {module:model/GoogleTypeExpr} condition
 */
GoogleCloudPolicysimulatorV1betaBindingExplanation.prototype['condition'] = undefined;

/**
 * Indicates whether each principal in the binding includes the principal specified in the request, either directly or indirectly. Each key identifies a principal in the binding, and each value indicates whether the principal in the binding includes the principal in the request. For example, suppose that a binding includes the following principals: * `user:alice@example.com` * `group:product-eng@example.com` The principal in the replayed access tuple is `user:bob@example.com`. This user is a principal of the group `group:product-eng@example.com`. For the first principal in the binding, the key is `user:alice@example.com`, and the `membership` field in the value is set to `MEMBERSHIP_NOT_INCLUDED`. For the second principal in the binding, the key is `group:product-eng@example.com`, and the `membership` field in the value is set to `MEMBERSHIP_INCLUDED`.
 * @member {Object.<String, module:model/GoogleCloudPolicysimulatorV1betaBindingExplanationAnnotatedMembership>} memberships
 */
GoogleCloudPolicysimulatorV1betaBindingExplanation.prototype['memberships'] = undefined;

/**
 * The relevance of this binding to the overall determination for the entire policy.
 * @member {module:model/GoogleCloudPolicysimulatorV1betaBindingExplanation.RelevanceEnum} relevance
 */
GoogleCloudPolicysimulatorV1betaBindingExplanation.prototype['relevance'] = undefined;

/**
 * The role that this binding grants. For example, `roles/compute.serviceAgent`. For a complete list of predefined IAM roles, as well as the permissions in each role, see https://cloud.google.com/iam/help/roles/reference.
 * @member {String} role
 */
GoogleCloudPolicysimulatorV1betaBindingExplanation.prototype['role'] = undefined;

/**
 * Indicates whether the role granted by this binding contains the specified permission.
 * @member {module:model/GoogleCloudPolicysimulatorV1betaBindingExplanation.RolePermissionEnum} rolePermission
 */
GoogleCloudPolicysimulatorV1betaBindingExplanation.prototype['rolePermission'] = undefined;

/**
 * The relevance of the permission's existence, or nonexistence, in the role to the overall determination for the entire policy.
 * @member {module:model/GoogleCloudPolicysimulatorV1betaBindingExplanation.RolePermissionRelevanceEnum} rolePermissionRelevance
 */
GoogleCloudPolicysimulatorV1betaBindingExplanation.prototype['rolePermissionRelevance'] = undefined;





/**
 * Allowed values for the <code>access</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudPolicysimulatorV1betaBindingExplanation['AccessEnum'] = {

    /**
     * value: "ACCESS_STATE_UNSPECIFIED"
     * @const
     */
    "ACCESS_STATE_UNSPECIFIED": "ACCESS_STATE_UNSPECIFIED",

    /**
     * value: "GRANTED"
     * @const
     */
    "GRANTED": "GRANTED",

    /**
     * value: "NOT_GRANTED"
     * @const
     */
    "NOT_GRANTED": "NOT_GRANTED",

    /**
     * value: "UNKNOWN_CONDITIONAL"
     * @const
     */
    "UNKNOWN_CONDITIONAL": "UNKNOWN_CONDITIONAL",

    /**
     * value: "UNKNOWN_INFO_DENIED"
     * @const
     */
    "UNKNOWN_INFO_DENIED": "UNKNOWN_INFO_DENIED"
};


/**
 * Allowed values for the <code>relevance</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudPolicysimulatorV1betaBindingExplanation['RelevanceEnum'] = {

    /**
     * value: "HEURISTIC_RELEVANCE_UNSPECIFIED"
     * @const
     */
    "HEURISTIC_RELEVANCE_UNSPECIFIED": "HEURISTIC_RELEVANCE_UNSPECIFIED",

    /**
     * value: "NORMAL"
     * @const
     */
    "NORMAL": "NORMAL",

    /**
     * value: "HIGH"
     * @const
     */
    "HIGH": "HIGH"
};


/**
 * Allowed values for the <code>rolePermission</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudPolicysimulatorV1betaBindingExplanation['RolePermissionEnum'] = {

    /**
     * value: "ROLE_PERMISSION_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "ROLE_PERMISSION_UNSPECIFIED",

    /**
     * value: "ROLE_PERMISSION_INCLUDED"
     * @const
     */
    "INCLUDED": "ROLE_PERMISSION_INCLUDED",

    /**
     * value: "ROLE_PERMISSION_NOT_INCLUDED"
     * @const
     */
    "NOT_INCLUDED": "ROLE_PERMISSION_NOT_INCLUDED",

    /**
     * value: "ROLE_PERMISSION_UNKNOWN_INFO_DENIED"
     * @const
     */
    "UNKNOWN_INFO_DENIED": "ROLE_PERMISSION_UNKNOWN_INFO_DENIED"
};


/**
 * Allowed values for the <code>rolePermissionRelevance</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudPolicysimulatorV1betaBindingExplanation['RolePermissionRelevanceEnum'] = {

    /**
     * value: "HEURISTIC_RELEVANCE_UNSPECIFIED"
     * @const
     */
    "HEURISTIC_RELEVANCE_UNSPECIFIED": "HEURISTIC_RELEVANCE_UNSPECIFIED",

    /**
     * value: "NORMAL"
     * @const
     */
    "NORMAL": "NORMAL",

    /**
     * value: "HIGH"
     * @const
     */
    "HIGH": "HIGH"
};



export default GoogleCloudPolicysimulatorV1betaBindingExplanation;

