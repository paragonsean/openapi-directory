/**
 * Policy Simulator API
 *  Policy Simulator is a collection of endpoints for creating, running, and viewing a Replay. A `Replay` is a type of simulation that lets you see how your members' access to resources might change if you changed your IAM policy. During a `Replay`, Policy Simulator re-evaluates, or replays, past access attempts under both the current policy and your proposed policy, and compares those results to determine how your members' access might change under the proposed policy.
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValues model module.
 * @module model/GoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValues
 * @version v1beta
 */
class GoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValues {
    /**
     * Constructs a new <code>GoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValues</code>.
     * A message that holds specific allowed and denied values. This message can define specific values and subtrees of the Resource Manager resource hierarchy (&#x60;Organizations&#x60;, &#x60;Folders&#x60;, &#x60;Projects&#x60;) that are allowed or denied. This is achieved by using the &#x60;under:&#x60; and optional &#x60;is:&#x60; prefixes. The &#x60;under:&#x60; prefix is used to denote resource subtree values. The &#x60;is:&#x60; prefix is used to denote specific values, and is required only if the value contains a \&quot;:\&quot;. Values prefixed with \&quot;is:\&quot; are treated the same as values with no prefix. Ancestry subtrees must be in one of the following formats: - &#x60;projects/&#x60; (for example, &#x60;projects/tokyo-rain-123&#x60;) - &#x60;folders/&#x60; (for example, &#x60;folders/1234&#x60;) - &#x60;organizations/&#x60; (for example, &#x60;organizations/1234&#x60;) The &#x60;supports_under&#x60; field of the associated &#x60;Constraint&#x60; defines whether ancestry prefixes can be used.
     * @alias module:model/GoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValues
     */
    constructor() { 
        
        GoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValues.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValues</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValues} obj Optional instance to populate.
     * @return {module:model/GoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValues} The populated <code>GoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValues</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValues();

            if (data.hasOwnProperty('allowedValues')) {
                obj['allowedValues'] = ApiClient.convertToType(data['allowedValues'], ['String']);
            }
            if (data.hasOwnProperty('deniedValues')) {
                obj['deniedValues'] = ApiClient.convertToType(data['deniedValues'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValues</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValues</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['allowedValues'])) {
            throw new Error("Expected the field `allowedValues` to be an array in the JSON data but got " + data['allowedValues']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['deniedValues'])) {
            throw new Error("Expected the field `deniedValues` to be an array in the JSON data but got " + data['deniedValues']);
        }

        return true;
    }


}



/**
 * List of values allowed at this resource.
 * @member {Array.<String>} allowedValues
 */
GoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValues.prototype['allowedValues'] = undefined;

/**
 * List of values denied at this resource.
 * @member {Array.<String>} deniedValues
 */
GoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValues.prototype['deniedValues'] = undefined;






export default GoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValues;

