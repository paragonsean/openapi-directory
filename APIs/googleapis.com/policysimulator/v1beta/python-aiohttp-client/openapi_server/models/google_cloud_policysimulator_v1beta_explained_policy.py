# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_policysimulator_v1beta_binding_explanation import GoogleCloudPolicysimulatorV1betaBindingExplanation
from openapi_server.models.google_iam_v1_policy import GoogleIamV1Policy
from openapi_server import util


class GoogleCloudPolicysimulatorV1betaExplainedPolicy(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, access: str=None, binding_explanations: List[GoogleCloudPolicysimulatorV1betaBindingExplanation]=None, full_resource_name: str=None, policy: GoogleIamV1Policy=None, relevance: str=None):
        """GoogleCloudPolicysimulatorV1betaExplainedPolicy - a model defined in OpenAPI

        :param access: The access of this GoogleCloudPolicysimulatorV1betaExplainedPolicy.
        :param binding_explanations: The binding_explanations of this GoogleCloudPolicysimulatorV1betaExplainedPolicy.
        :param full_resource_name: The full_resource_name of this GoogleCloudPolicysimulatorV1betaExplainedPolicy.
        :param policy: The policy of this GoogleCloudPolicysimulatorV1betaExplainedPolicy.
        :param relevance: The relevance of this GoogleCloudPolicysimulatorV1betaExplainedPolicy.
        """
        self.openapi_types = {
            'access': str,
            'binding_explanations': List[GoogleCloudPolicysimulatorV1betaBindingExplanation],
            'full_resource_name': str,
            'policy': GoogleIamV1Policy,
            'relevance': str
        }

        self.attribute_map = {
            'access': 'access',
            'binding_explanations': 'bindingExplanations',
            'full_resource_name': 'fullResourceName',
            'policy': 'policy',
            'relevance': 'relevance'
        }

        self._access = access
        self._binding_explanations = binding_explanations
        self._full_resource_name = full_resource_name
        self._policy = policy
        self._relevance = relevance

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudPolicysimulatorV1betaExplainedPolicy':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudPolicysimulatorV1betaExplainedPolicy of this GoogleCloudPolicysimulatorV1betaExplainedPolicy.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def access(self):
        """Gets the access of this GoogleCloudPolicysimulatorV1betaExplainedPolicy.

        Indicates whether _this policy_ provides the specified permission to the specified principal for the specified resource. This field does _not_ indicate whether the principal actually has the permission for the resource. There might be another policy that overrides this policy. To determine whether the principal actually has the permission, use the `access` field in the TroubleshootIamPolicyResponse.

        :return: The access of this GoogleCloudPolicysimulatorV1betaExplainedPolicy.
        :rtype: str
        """
        return self._access

    @access.setter
    def access(self, access):
        """Sets the access of this GoogleCloudPolicysimulatorV1betaExplainedPolicy.

        Indicates whether _this policy_ provides the specified permission to the specified principal for the specified resource. This field does _not_ indicate whether the principal actually has the permission for the resource. There might be another policy that overrides this policy. To determine whether the principal actually has the permission, use the `access` field in the TroubleshootIamPolicyResponse.

        :param access: The access of this GoogleCloudPolicysimulatorV1betaExplainedPolicy.
        :type access: str
        """
        allowed_values = ["ACCESS_STATE_UNSPECIFIED", "GRANTED", "NOT_GRANTED", "UNKNOWN_CONDITIONAL", "UNKNOWN_INFO_DENIED"]  # noqa: E501
        if access not in allowed_values:
            raise ValueError(
                "Invalid value for `access` ({0}), must be one of {1}"
                .format(access, allowed_values)
            )

        self._access = access

    @property
    def binding_explanations(self):
        """Gets the binding_explanations of this GoogleCloudPolicysimulatorV1betaExplainedPolicy.

        Details about how each binding in the policy affects the principal's ability, or inability, to use the permission for the resource. If the user who created the Replay does not have access to the policy, this field is omitted.

        :return: The binding_explanations of this GoogleCloudPolicysimulatorV1betaExplainedPolicy.
        :rtype: List[GoogleCloudPolicysimulatorV1betaBindingExplanation]
        """
        return self._binding_explanations

    @binding_explanations.setter
    def binding_explanations(self, binding_explanations):
        """Sets the binding_explanations of this GoogleCloudPolicysimulatorV1betaExplainedPolicy.

        Details about how each binding in the policy affects the principal's ability, or inability, to use the permission for the resource. If the user who created the Replay does not have access to the policy, this field is omitted.

        :param binding_explanations: The binding_explanations of this GoogleCloudPolicysimulatorV1betaExplainedPolicy.
        :type binding_explanations: List[GoogleCloudPolicysimulatorV1betaBindingExplanation]
        """

        self._binding_explanations = binding_explanations

    @property
    def full_resource_name(self):
        """Gets the full_resource_name of this GoogleCloudPolicysimulatorV1betaExplainedPolicy.

        The full resource name that identifies the resource. For example, `//compute.googleapis.com/projects/my-project/zones/us-central1-a/instances/my-instance`. If the user who created the Replay does not have access to the policy, this field is omitted. For examples of full resource names for Google Cloud services, see https://cloud.google.com/iam/help/troubleshooter/full-resource-names.

        :return: The full_resource_name of this GoogleCloudPolicysimulatorV1betaExplainedPolicy.
        :rtype: str
        """
        return self._full_resource_name

    @full_resource_name.setter
    def full_resource_name(self, full_resource_name):
        """Sets the full_resource_name of this GoogleCloudPolicysimulatorV1betaExplainedPolicy.

        The full resource name that identifies the resource. For example, `//compute.googleapis.com/projects/my-project/zones/us-central1-a/instances/my-instance`. If the user who created the Replay does not have access to the policy, this field is omitted. For examples of full resource names for Google Cloud services, see https://cloud.google.com/iam/help/troubleshooter/full-resource-names.

        :param full_resource_name: The full_resource_name of this GoogleCloudPolicysimulatorV1betaExplainedPolicy.
        :type full_resource_name: str
        """

        self._full_resource_name = full_resource_name

    @property
    def policy(self):
        """Gets the policy of this GoogleCloudPolicysimulatorV1betaExplainedPolicy.


        :return: The policy of this GoogleCloudPolicysimulatorV1betaExplainedPolicy.
        :rtype: GoogleIamV1Policy
        """
        return self._policy

    @policy.setter
    def policy(self, policy):
        """Sets the policy of this GoogleCloudPolicysimulatorV1betaExplainedPolicy.


        :param policy: The policy of this GoogleCloudPolicysimulatorV1betaExplainedPolicy.
        :type policy: GoogleIamV1Policy
        """

        self._policy = policy

    @property
    def relevance(self):
        """Gets the relevance of this GoogleCloudPolicysimulatorV1betaExplainedPolicy.

        The relevance of this policy to the overall determination in the TroubleshootIamPolicyResponse. If the user who created the Replay does not have access to the policy, this field is omitted.

        :return: The relevance of this GoogleCloudPolicysimulatorV1betaExplainedPolicy.
        :rtype: str
        """
        return self._relevance

    @relevance.setter
    def relevance(self, relevance):
        """Sets the relevance of this GoogleCloudPolicysimulatorV1betaExplainedPolicy.

        The relevance of this policy to the overall determination in the TroubleshootIamPolicyResponse. If the user who created the Replay does not have access to the policy, this field is omitted.

        :param relevance: The relevance of this GoogleCloudPolicysimulatorV1betaExplainedPolicy.
        :type relevance: str
        """
        allowed_values = ["HEURISTIC_RELEVANCE_UNSPECIFIED", "NORMAL", "HIGH"]  # noqa: E501
        if relevance not in allowed_values:
            raise ValueError(
                "Invalid value for `relevance` ({0}), must be one of {1}"
                .format(relevance, allowed_values)
            )

        self._relevance = relevance
