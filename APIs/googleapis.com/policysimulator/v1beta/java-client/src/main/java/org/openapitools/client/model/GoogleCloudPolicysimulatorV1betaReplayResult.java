/*
 * Policy Simulator API
 *  Policy Simulator is a collection of endpoints for creating, running, and viewing a Replay. A `Replay` is a type of simulation that lets you see how your members' access to resources might change if you changed your IAM policy. During a `Replay`, Policy Simulator re-evaluates, or replays, past access attempts under both the current policy and your proposed policy, and compares those results to determine how your members' access might change under the proposed policy.
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudPolicysimulatorV1betaAccessTuple;
import org.openapitools.client.model.GoogleCloudPolicysimulatorV1betaReplayDiff;
import org.openapitools.client.model.GoogleRpcStatus;
import org.openapitools.client.model.GoogleTypeDate;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The result of replaying a single access tuple against a simulated state.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:43:12.210857-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudPolicysimulatorV1betaReplayResult {
  public static final String SERIALIZED_NAME_ACCESS_TUPLE = "accessTuple";
  @SerializedName(SERIALIZED_NAME_ACCESS_TUPLE)
  private GoogleCloudPolicysimulatorV1betaAccessTuple accessTuple;

  public static final String SERIALIZED_NAME_DIFF = "diff";
  @SerializedName(SERIALIZED_NAME_DIFF)
  private GoogleCloudPolicysimulatorV1betaReplayDiff diff;

  public static final String SERIALIZED_NAME_ERROR = "error";
  @SerializedName(SERIALIZED_NAME_ERROR)
  private GoogleRpcStatus error;

  public static final String SERIALIZED_NAME_LAST_SEEN_DATE = "lastSeenDate";
  @SerializedName(SERIALIZED_NAME_LAST_SEEN_DATE)
  private GoogleTypeDate lastSeenDate;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PARENT = "parent";
  @SerializedName(SERIALIZED_NAME_PARENT)
  private String parent;

  public GoogleCloudPolicysimulatorV1betaReplayResult() {
  }

  public GoogleCloudPolicysimulatorV1betaReplayResult accessTuple(GoogleCloudPolicysimulatorV1betaAccessTuple accessTuple) {
    this.accessTuple = accessTuple;
    return this;
  }

  /**
   * Get accessTuple
   * @return accessTuple
   */
  @javax.annotation.Nullable
  public GoogleCloudPolicysimulatorV1betaAccessTuple getAccessTuple() {
    return accessTuple;
  }

  public void setAccessTuple(GoogleCloudPolicysimulatorV1betaAccessTuple accessTuple) {
    this.accessTuple = accessTuple;
  }


  public GoogleCloudPolicysimulatorV1betaReplayResult diff(GoogleCloudPolicysimulatorV1betaReplayDiff diff) {
    this.diff = diff;
    return this;
  }

  /**
   * Get diff
   * @return diff
   */
  @javax.annotation.Nullable
  public GoogleCloudPolicysimulatorV1betaReplayDiff getDiff() {
    return diff;
  }

  public void setDiff(GoogleCloudPolicysimulatorV1betaReplayDiff diff) {
    this.diff = diff;
  }


  public GoogleCloudPolicysimulatorV1betaReplayResult error(GoogleRpcStatus error) {
    this.error = error;
    return this;
  }

  /**
   * Get error
   * @return error
   */
  @javax.annotation.Nullable
  public GoogleRpcStatus getError() {
    return error;
  }

  public void setError(GoogleRpcStatus error) {
    this.error = error;
  }


  public GoogleCloudPolicysimulatorV1betaReplayResult lastSeenDate(GoogleTypeDate lastSeenDate) {
    this.lastSeenDate = lastSeenDate;
    return this;
  }

  /**
   * Get lastSeenDate
   * @return lastSeenDate
   */
  @javax.annotation.Nullable
  public GoogleTypeDate getLastSeenDate() {
    return lastSeenDate;
  }

  public void setLastSeenDate(GoogleTypeDate lastSeenDate) {
    this.lastSeenDate = lastSeenDate;
  }


  public GoogleCloudPolicysimulatorV1betaReplayResult name(String name) {
    this.name = name;
    return this;
  }

  /**
   * The resource name of the &#x60;ReplayResult&#x60;, in the following format: &#x60;{projects|folders|organizations}/{resource-id}/locations/global/replays/{replay-id}/results/{replay-result-id}&#x60;, where &#x60;{resource-id}&#x60; is the ID of the project, folder, or organization that owns the Replay. Example: &#x60;projects/my-example-project/locations/global/replays/506a5f7f-38ce-4d7d-8e03-479ce1833c36/results/1234&#x60;
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public GoogleCloudPolicysimulatorV1betaReplayResult parent(String parent) {
    this.parent = parent;
    return this;
  }

  /**
   * The Replay that the access tuple was included in.
   * @return parent
   */
  @javax.annotation.Nullable
  public String getParent() {
    return parent;
  }

  public void setParent(String parent) {
    this.parent = parent;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudPolicysimulatorV1betaReplayResult googleCloudPolicysimulatorV1betaReplayResult = (GoogleCloudPolicysimulatorV1betaReplayResult) o;
    return Objects.equals(this.accessTuple, googleCloudPolicysimulatorV1betaReplayResult.accessTuple) &&
        Objects.equals(this.diff, googleCloudPolicysimulatorV1betaReplayResult.diff) &&
        Objects.equals(this.error, googleCloudPolicysimulatorV1betaReplayResult.error) &&
        Objects.equals(this.lastSeenDate, googleCloudPolicysimulatorV1betaReplayResult.lastSeenDate) &&
        Objects.equals(this.name, googleCloudPolicysimulatorV1betaReplayResult.name) &&
        Objects.equals(this.parent, googleCloudPolicysimulatorV1betaReplayResult.parent);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accessTuple, diff, error, lastSeenDate, name, parent);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudPolicysimulatorV1betaReplayResult {\n");
    sb.append("    accessTuple: ").append(toIndentedString(accessTuple)).append("\n");
    sb.append("    diff: ").append(toIndentedString(diff)).append("\n");
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("    lastSeenDate: ").append(toIndentedString(lastSeenDate)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    parent: ").append(toIndentedString(parent)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("accessTuple");
    openapiFields.add("diff");
    openapiFields.add("error");
    openapiFields.add("lastSeenDate");
    openapiFields.add("name");
    openapiFields.add("parent");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudPolicysimulatorV1betaReplayResult
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudPolicysimulatorV1betaReplayResult.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudPolicysimulatorV1betaReplayResult is not found in the empty JSON string", GoogleCloudPolicysimulatorV1betaReplayResult.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudPolicysimulatorV1betaReplayResult.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudPolicysimulatorV1betaReplayResult` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `accessTuple`
      if (jsonObj.get("accessTuple") != null && !jsonObj.get("accessTuple").isJsonNull()) {
        GoogleCloudPolicysimulatorV1betaAccessTuple.validateJsonElement(jsonObj.get("accessTuple"));
      }
      // validate the optional field `diff`
      if (jsonObj.get("diff") != null && !jsonObj.get("diff").isJsonNull()) {
        GoogleCloudPolicysimulatorV1betaReplayDiff.validateJsonElement(jsonObj.get("diff"));
      }
      // validate the optional field `error`
      if (jsonObj.get("error") != null && !jsonObj.get("error").isJsonNull()) {
        GoogleRpcStatus.validateJsonElement(jsonObj.get("error"));
      }
      // validate the optional field `lastSeenDate`
      if (jsonObj.get("lastSeenDate") != null && !jsonObj.get("lastSeenDate").isJsonNull()) {
        GoogleTypeDate.validateJsonElement(jsonObj.get("lastSeenDate"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("parent") != null && !jsonObj.get("parent").isJsonNull()) && !jsonObj.get("parent").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `parent` to be a primitive type in the JSON string but got `%s`", jsonObj.get("parent").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudPolicysimulatorV1betaReplayResult.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudPolicysimulatorV1betaReplayResult' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudPolicysimulatorV1betaReplayResult> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudPolicysimulatorV1betaReplayResult.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudPolicysimulatorV1betaReplayResult>() {
           @Override
           public void write(JsonWriter out, GoogleCloudPolicysimulatorV1betaReplayResult value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudPolicysimulatorV1betaReplayResult read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudPolicysimulatorV1betaReplayResult given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudPolicysimulatorV1betaReplayResult
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudPolicysimulatorV1betaReplayResult
   */
  public static GoogleCloudPolicysimulatorV1betaReplayResult fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudPolicysimulatorV1betaReplayResult.class);
  }

  /**
   * Convert an instance of GoogleCloudPolicysimulatorV1betaReplayResult to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

