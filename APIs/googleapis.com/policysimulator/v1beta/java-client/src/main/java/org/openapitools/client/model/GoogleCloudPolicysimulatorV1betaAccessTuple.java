/*
 * Policy Simulator API
 *  Policy Simulator is a collection of endpoints for creating, running, and viewing a Replay. A `Replay` is a type of simulation that lets you see how your members' access to resources might change if you changed your IAM policy. During a `Replay`, Policy Simulator re-evaluates, or replays, past access attempts under both the current policy and your proposed policy, and compares those results to determine how your members' access might change under the proposed policy.
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Information about the principal, resource, and permission to check.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:43:12.210857-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudPolicysimulatorV1betaAccessTuple {
  public static final String SERIALIZED_NAME_FULL_RESOURCE_NAME = "fullResourceName";
  @SerializedName(SERIALIZED_NAME_FULL_RESOURCE_NAME)
  private String fullResourceName;

  public static final String SERIALIZED_NAME_PERMISSION = "permission";
  @SerializedName(SERIALIZED_NAME_PERMISSION)
  private String permission;

  public static final String SERIALIZED_NAME_PRINCIPAL = "principal";
  @SerializedName(SERIALIZED_NAME_PRINCIPAL)
  private String principal;

  public GoogleCloudPolicysimulatorV1betaAccessTuple() {
  }

  public GoogleCloudPolicysimulatorV1betaAccessTuple fullResourceName(String fullResourceName) {
    this.fullResourceName = fullResourceName;
    return this;
  }

  /**
   * Required. The full resource name that identifies the resource. For example, &#x60;//compute.googleapis.com/projects/my-project/zones/us-central1-a/instances/my-instance&#x60;. For examples of full resource names for Google Cloud services, see https://cloud.google.com/iam/help/troubleshooter/full-resource-names.
   * @return fullResourceName
   */
  @javax.annotation.Nullable
  public String getFullResourceName() {
    return fullResourceName;
  }

  public void setFullResourceName(String fullResourceName) {
    this.fullResourceName = fullResourceName;
  }


  public GoogleCloudPolicysimulatorV1betaAccessTuple permission(String permission) {
    this.permission = permission;
    return this;
  }

  /**
   * Required. The IAM permission to check for the specified principal and resource. For a complete list of IAM permissions, see https://cloud.google.com/iam/help/permissions/reference. For a complete list of predefined IAM roles and the permissions in each role, see https://cloud.google.com/iam/help/roles/reference.
   * @return permission
   */
  @javax.annotation.Nullable
  public String getPermission() {
    return permission;
  }

  public void setPermission(String permission) {
    this.permission = permission;
  }


  public GoogleCloudPolicysimulatorV1betaAccessTuple principal(String principal) {
    this.principal = principal;
    return this;
  }

  /**
   * Required. The principal whose access you want to check, in the form of the email address that represents that principal. For example, &#x60;alice@example.com&#x60; or &#x60;my-service-account@my-project.iam.gserviceaccount.com&#x60;. The principal must be a Google Account or a service account. Other types of principals are not supported.
   * @return principal
   */
  @javax.annotation.Nullable
  public String getPrincipal() {
    return principal;
  }

  public void setPrincipal(String principal) {
    this.principal = principal;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudPolicysimulatorV1betaAccessTuple googleCloudPolicysimulatorV1betaAccessTuple = (GoogleCloudPolicysimulatorV1betaAccessTuple) o;
    return Objects.equals(this.fullResourceName, googleCloudPolicysimulatorV1betaAccessTuple.fullResourceName) &&
        Objects.equals(this.permission, googleCloudPolicysimulatorV1betaAccessTuple.permission) &&
        Objects.equals(this.principal, googleCloudPolicysimulatorV1betaAccessTuple.principal);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fullResourceName, permission, principal);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudPolicysimulatorV1betaAccessTuple {\n");
    sb.append("    fullResourceName: ").append(toIndentedString(fullResourceName)).append("\n");
    sb.append("    permission: ").append(toIndentedString(permission)).append("\n");
    sb.append("    principal: ").append(toIndentedString(principal)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("fullResourceName");
    openapiFields.add("permission");
    openapiFields.add("principal");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudPolicysimulatorV1betaAccessTuple
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudPolicysimulatorV1betaAccessTuple.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudPolicysimulatorV1betaAccessTuple is not found in the empty JSON string", GoogleCloudPolicysimulatorV1betaAccessTuple.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudPolicysimulatorV1betaAccessTuple.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudPolicysimulatorV1betaAccessTuple` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("fullResourceName") != null && !jsonObj.get("fullResourceName").isJsonNull()) && !jsonObj.get("fullResourceName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fullResourceName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fullResourceName").toString()));
      }
      if ((jsonObj.get("permission") != null && !jsonObj.get("permission").isJsonNull()) && !jsonObj.get("permission").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `permission` to be a primitive type in the JSON string but got `%s`", jsonObj.get("permission").toString()));
      }
      if ((jsonObj.get("principal") != null && !jsonObj.get("principal").isJsonNull()) && !jsonObj.get("principal").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `principal` to be a primitive type in the JSON string but got `%s`", jsonObj.get("principal").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudPolicysimulatorV1betaAccessTuple.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudPolicysimulatorV1betaAccessTuple' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudPolicysimulatorV1betaAccessTuple> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudPolicysimulatorV1betaAccessTuple.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudPolicysimulatorV1betaAccessTuple>() {
           @Override
           public void write(JsonWriter out, GoogleCloudPolicysimulatorV1betaAccessTuple value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudPolicysimulatorV1betaAccessTuple read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudPolicysimulatorV1betaAccessTuple given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudPolicysimulatorV1betaAccessTuple
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudPolicysimulatorV1betaAccessTuple
   */
  public static GoogleCloudPolicysimulatorV1betaAccessTuple fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudPolicysimulatorV1betaAccessTuple.class);
  }

  /**
   * Convert an instance of GoogleCloudPolicysimulatorV1betaAccessTuple to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

