/**
 * Policy Simulator API
 *  Policy Simulator is a collection of endpoints for creating, running, and viewing a Replay. A `Replay` is a type of simulation that lets you see how your members' access to resources might change if you changed your IAM policy. During a `Replay`, Policy Simulator re-evaluates, or replays, past access attempts under both the current policy and your proposed policy, and compares those results to determine how your members' access might change under the proposed policy.
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudPolicysimulatorV1ReplayConfig.h
 *
 * The configuration used for a Replay.
 */

#ifndef OAIGoogleCloudPolicysimulatorV1ReplayConfig_H
#define OAIGoogleCloudPolicysimulatorV1ReplayConfig_H

#include <QJsonObject>

#include "OAIGoogleIamV1Policy.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleIamV1Policy;

class OAIGoogleCloudPolicysimulatorV1ReplayConfig : public OAIObject {
public:
    OAIGoogleCloudPolicysimulatorV1ReplayConfig();
    OAIGoogleCloudPolicysimulatorV1ReplayConfig(QString json);
    ~OAIGoogleCloudPolicysimulatorV1ReplayConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getLogSource() const;
    void setLogSource(const QString &log_source);
    bool is_log_source_Set() const;
    bool is_log_source_Valid() const;

    QMap<QString, OAIGoogleIamV1Policy> getPolicyOverlay() const;
    void setPolicyOverlay(const QMap<QString, OAIGoogleIamV1Policy> &policy_overlay);
    bool is_policy_overlay_Set() const;
    bool is_policy_overlay_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_log_source;
    bool m_log_source_isSet;
    bool m_log_source_isValid;

    QMap<QString, OAIGoogleIamV1Policy> m_policy_overlay;
    bool m_policy_overlay_isSet;
    bool m_policy_overlay_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudPolicysimulatorV1ReplayConfig)

#endif // OAIGoogleCloudPolicysimulatorV1ReplayConfig_H
