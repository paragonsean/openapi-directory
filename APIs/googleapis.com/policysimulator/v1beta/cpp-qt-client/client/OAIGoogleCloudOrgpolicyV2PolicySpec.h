/**
 * Policy Simulator API
 *  Policy Simulator is a collection of endpoints for creating, running, and viewing a Replay. A `Replay` is a type of simulation that lets you see how your members' access to resources might change if you changed your IAM policy. During a `Replay`, Policy Simulator re-evaluates, or replays, past access attempts under both the current policy and your proposed policy, and compares those results to determine how your members' access might change under the proposed policy.
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudOrgpolicyV2PolicySpec.h
 *
 * Defines a Google Cloud policy specification which is used to specify constraints for configurations of Google Cloud resources.
 */

#ifndef OAIGoogleCloudOrgpolicyV2PolicySpec_H
#define OAIGoogleCloudOrgpolicyV2PolicySpec_H

#include <QJsonObject>

#include "OAIGoogleCloudOrgpolicyV2PolicySpecPolicyRule.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleCloudOrgpolicyV2PolicySpecPolicyRule;

class OAIGoogleCloudOrgpolicyV2PolicySpec : public OAIObject {
public:
    OAIGoogleCloudOrgpolicyV2PolicySpec();
    OAIGoogleCloudOrgpolicyV2PolicySpec(QString json);
    ~OAIGoogleCloudOrgpolicyV2PolicySpec() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getEtag() const;
    void setEtag(const QString &etag);
    bool is_etag_Set() const;
    bool is_etag_Valid() const;

    bool isInheritFromParent() const;
    void setInheritFromParent(const bool &inherit_from_parent);
    bool is_inherit_from_parent_Set() const;
    bool is_inherit_from_parent_Valid() const;

    bool isReset() const;
    void setReset(const bool &reset);
    bool is_reset_Set() const;
    bool is_reset_Valid() const;

    QList<OAIGoogleCloudOrgpolicyV2PolicySpecPolicyRule> getRules() const;
    void setRules(const QList<OAIGoogleCloudOrgpolicyV2PolicySpecPolicyRule> &rules);
    bool is_rules_Set() const;
    bool is_rules_Valid() const;

    QString getUpdateTime() const;
    void setUpdateTime(const QString &update_time);
    bool is_update_time_Set() const;
    bool is_update_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_etag;
    bool m_etag_isSet;
    bool m_etag_isValid;

    bool m_inherit_from_parent;
    bool m_inherit_from_parent_isSet;
    bool m_inherit_from_parent_isValid;

    bool m_reset;
    bool m_reset_isSet;
    bool m_reset_isValid;

    QList<OAIGoogleCloudOrgpolicyV2PolicySpecPolicyRule> m_rules;
    bool m_rules_isSet;
    bool m_rules_isValid;

    QString m_update_time;
    bool m_update_time_isSet;
    bool m_update_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudOrgpolicyV2PolicySpec)

#endif // OAIGoogleCloudOrgpolicyV2PolicySpec_H
