/**
 * Policy Simulator API
 *  Policy Simulator is a collection of endpoints for creating, running, and viewing a Replay. A `Replay` is a type of simulation that lets you see how your members' access to resources might change if you changed your IAM policy. During a `Replay`, Policy Simulator re-evaluates, or replays, past access attempts under both the current policy and your proposed policy, and compares those results to determine how your members' access might change under the proposed policy.
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudPolicysimulatorV1betaListReplayResultsResponse.h
 *
 * Response message for Simulator.ListReplayResults.
 */

#ifndef OAIGoogleCloudPolicysimulatorV1betaListReplayResultsResponse_H
#define OAIGoogleCloudPolicysimulatorV1betaListReplayResultsResponse_H

#include <QJsonObject>

#include "OAIGoogleCloudPolicysimulatorV1betaReplayResult.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleCloudPolicysimulatorV1betaReplayResult;

class OAIGoogleCloudPolicysimulatorV1betaListReplayResultsResponse : public OAIObject {
public:
    OAIGoogleCloudPolicysimulatorV1betaListReplayResultsResponse();
    OAIGoogleCloudPolicysimulatorV1betaListReplayResultsResponse(QString json);
    ~OAIGoogleCloudPolicysimulatorV1betaListReplayResultsResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getNextPageToken() const;
    void setNextPageToken(const QString &next_page_token);
    bool is_next_page_token_Set() const;
    bool is_next_page_token_Valid() const;

    QList<OAIGoogleCloudPolicysimulatorV1betaReplayResult> getReplayResults() const;
    void setReplayResults(const QList<OAIGoogleCloudPolicysimulatorV1betaReplayResult> &replay_results);
    bool is_replay_results_Set() const;
    bool is_replay_results_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_next_page_token;
    bool m_next_page_token_isSet;
    bool m_next_page_token_isValid;

    QList<OAIGoogleCloudPolicysimulatorV1betaReplayResult> m_replay_results;
    bool m_replay_results_isSet;
    bool m_replay_results_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudPolicysimulatorV1betaListReplayResultsResponse)

#endif // OAIGoogleCloudPolicysimulatorV1betaListReplayResultsResponse_H
