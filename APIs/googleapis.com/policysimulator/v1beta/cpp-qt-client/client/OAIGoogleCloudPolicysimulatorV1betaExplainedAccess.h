/**
 * Policy Simulator API
 *  Policy Simulator is a collection of endpoints for creating, running, and viewing a Replay. A `Replay` is a type of simulation that lets you see how your members' access to resources might change if you changed your IAM policy. During a `Replay`, Policy Simulator re-evaluates, or replays, past access attempts under both the current policy and your proposed policy, and compares those results to determine how your members' access might change under the proposed policy.
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudPolicysimulatorV1betaExplainedAccess.h
 *
 * Details about how a set of policies, listed in ExplainedPolicy, resulted in a certain AccessState when replaying an access tuple.
 */

#ifndef OAIGoogleCloudPolicysimulatorV1betaExplainedAccess_H
#define OAIGoogleCloudPolicysimulatorV1betaExplainedAccess_H

#include <QJsonObject>

#include "OAIGoogleCloudPolicysimulatorV1betaExplainedPolicy.h"
#include "OAIGoogleRpcStatus.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleRpcStatus;
class OAIGoogleCloudPolicysimulatorV1betaExplainedPolicy;

class OAIGoogleCloudPolicysimulatorV1betaExplainedAccess : public OAIObject {
public:
    OAIGoogleCloudPolicysimulatorV1betaExplainedAccess();
    OAIGoogleCloudPolicysimulatorV1betaExplainedAccess(QString json);
    ~OAIGoogleCloudPolicysimulatorV1betaExplainedAccess() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccessState() const;
    void setAccessState(const QString &access_state);
    bool is_access_state_Set() const;
    bool is_access_state_Valid() const;

    QList<OAIGoogleRpcStatus> getErrors() const;
    void setErrors(const QList<OAIGoogleRpcStatus> &errors);
    bool is_errors_Set() const;
    bool is_errors_Valid() const;

    QList<OAIGoogleCloudPolicysimulatorV1betaExplainedPolicy> getPolicies() const;
    void setPolicies(const QList<OAIGoogleCloudPolicysimulatorV1betaExplainedPolicy> &policies);
    bool is_policies_Set() const;
    bool is_policies_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_access_state;
    bool m_access_state_isSet;
    bool m_access_state_isValid;

    QList<OAIGoogleRpcStatus> m_errors;
    bool m_errors_isSet;
    bool m_errors_isValid;

    QList<OAIGoogleCloudPolicysimulatorV1betaExplainedPolicy> m_policies;
    bool m_policies_isSet;
    bool m_policies_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudPolicysimulatorV1betaExplainedAccess)

#endif // OAIGoogleCloudPolicysimulatorV1betaExplainedAccess_H
