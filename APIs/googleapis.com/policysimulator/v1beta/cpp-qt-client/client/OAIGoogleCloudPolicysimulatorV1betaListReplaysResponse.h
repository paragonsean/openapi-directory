/**
 * Policy Simulator API
 *  Policy Simulator is a collection of endpoints for creating, running, and viewing a Replay. A `Replay` is a type of simulation that lets you see how your members' access to resources might change if you changed your IAM policy. During a `Replay`, Policy Simulator re-evaluates, or replays, past access attempts under both the current policy and your proposed policy, and compares those results to determine how your members' access might change under the proposed policy.
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudPolicysimulatorV1betaListReplaysResponse.h
 *
 * Response message for Simulator.ListReplays.
 */

#ifndef OAIGoogleCloudPolicysimulatorV1betaListReplaysResponse_H
#define OAIGoogleCloudPolicysimulatorV1betaListReplaysResponse_H

#include <QJsonObject>

#include "OAIGoogleCloudPolicysimulatorV1betaReplay.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleCloudPolicysimulatorV1betaReplay;

class OAIGoogleCloudPolicysimulatorV1betaListReplaysResponse : public OAIObject {
public:
    OAIGoogleCloudPolicysimulatorV1betaListReplaysResponse();
    OAIGoogleCloudPolicysimulatorV1betaListReplaysResponse(QString json);
    ~OAIGoogleCloudPolicysimulatorV1betaListReplaysResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getNextPageToken() const;
    void setNextPageToken(const QString &next_page_token);
    bool is_next_page_token_Set() const;
    bool is_next_page_token_Valid() const;

    QList<OAIGoogleCloudPolicysimulatorV1betaReplay> getReplays() const;
    void setReplays(const QList<OAIGoogleCloudPolicysimulatorV1betaReplay> &replays);
    bool is_replays_Set() const;
    bool is_replays_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_next_page_token;
    bool m_next_page_token_isSet;
    bool m_next_page_token_isValid;

    QList<OAIGoogleCloudPolicysimulatorV1betaReplay> m_replays;
    bool m_replays_isSet;
    bool m_replays_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudPolicysimulatorV1betaListReplaysResponse)

#endif // OAIGoogleCloudPolicysimulatorV1betaListReplaysResponse_H
