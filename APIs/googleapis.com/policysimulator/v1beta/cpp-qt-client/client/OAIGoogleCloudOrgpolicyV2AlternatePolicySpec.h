/**
 * Policy Simulator API
 *  Policy Simulator is a collection of endpoints for creating, running, and viewing a Replay. A `Replay` is a type of simulation that lets you see how your members' access to resources might change if you changed your IAM policy. During a `Replay`, Policy Simulator re-evaluates, or replays, past access attempts under both the current policy and your proposed policy, and compares those results to determine how your members' access might change under the proposed policy.
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudOrgpolicyV2AlternatePolicySpec.h
 *
 * Similar to PolicySpec but with an extra &#39;launch&#39; field for launch reference. The PolicySpec here is specific for dry-run/darklaunch.
 */

#ifndef OAIGoogleCloudOrgpolicyV2AlternatePolicySpec_H
#define OAIGoogleCloudOrgpolicyV2AlternatePolicySpec_H

#include <QJsonObject>

#include "OAIGoogleCloudOrgpolicyV2PolicySpec.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleCloudOrgpolicyV2PolicySpec;

class OAIGoogleCloudOrgpolicyV2AlternatePolicySpec : public OAIObject {
public:
    OAIGoogleCloudOrgpolicyV2AlternatePolicySpec();
    OAIGoogleCloudOrgpolicyV2AlternatePolicySpec(QString json);
    ~OAIGoogleCloudOrgpolicyV2AlternatePolicySpec() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getLaunch() const;
    void setLaunch(const QString &launch);
    bool is_launch_Set() const;
    bool is_launch_Valid() const;

    OAIGoogleCloudOrgpolicyV2PolicySpec getSpec() const;
    void setSpec(const OAIGoogleCloudOrgpolicyV2PolicySpec &spec);
    bool is_spec_Set() const;
    bool is_spec_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_launch;
    bool m_launch_isSet;
    bool m_launch_isValid;

    OAIGoogleCloudOrgpolicyV2PolicySpec m_spec;
    bool m_spec_isSet;
    bool m_spec_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudOrgpolicyV2AlternatePolicySpec)

#endif // OAIGoogleCloudOrgpolicyV2AlternatePolicySpec_H
