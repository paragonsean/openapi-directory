/**
 * Policy Simulator API
 *  Policy Simulator is a collection of endpoints for creating, running, and viewing a Replay. A `Replay` is a type of simulation that lets you see how your members' access to resources might change if you changed your IAM policy. During a `Replay`, Policy Simulator re-evaluates, or replays, past access attempts under both the current policy and your proposed policy, and compares those results to determine how your members' access might change under the proposed policy.
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudPolicysimulatorV1betaAccessStateDiff.h
 *
 * A summary and comparison of the principal&#39;s access under the current (baseline) policies and the proposed (simulated) policies for a single access tuple.
 */

#ifndef OAIGoogleCloudPolicysimulatorV1betaAccessStateDiff_H
#define OAIGoogleCloudPolicysimulatorV1betaAccessStateDiff_H

#include <QJsonObject>

#include "OAIGoogleCloudPolicysimulatorV1betaExplainedAccess.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleCloudPolicysimulatorV1betaExplainedAccess;

class OAIGoogleCloudPolicysimulatorV1betaAccessStateDiff : public OAIObject {
public:
    OAIGoogleCloudPolicysimulatorV1betaAccessStateDiff();
    OAIGoogleCloudPolicysimulatorV1betaAccessStateDiff(QString json);
    ~OAIGoogleCloudPolicysimulatorV1betaAccessStateDiff() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccessChange() const;
    void setAccessChange(const QString &access_change);
    bool is_access_change_Set() const;
    bool is_access_change_Valid() const;

    OAIGoogleCloudPolicysimulatorV1betaExplainedAccess getBaseline() const;
    void setBaseline(const OAIGoogleCloudPolicysimulatorV1betaExplainedAccess &baseline);
    bool is_baseline_Set() const;
    bool is_baseline_Valid() const;

    OAIGoogleCloudPolicysimulatorV1betaExplainedAccess getSimulated() const;
    void setSimulated(const OAIGoogleCloudPolicysimulatorV1betaExplainedAccess &simulated);
    bool is_simulated_Set() const;
    bool is_simulated_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_access_change;
    bool m_access_change_isSet;
    bool m_access_change_isValid;

    OAIGoogleCloudPolicysimulatorV1betaExplainedAccess m_baseline;
    bool m_baseline_isSet;
    bool m_baseline_isValid;

    OAIGoogleCloudPolicysimulatorV1betaExplainedAccess m_simulated;
    bool m_simulated_isSet;
    bool m_simulated_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudPolicysimulatorV1betaAccessStateDiff)

#endif // OAIGoogleCloudPolicysimulatorV1betaAccessStateDiff_H
