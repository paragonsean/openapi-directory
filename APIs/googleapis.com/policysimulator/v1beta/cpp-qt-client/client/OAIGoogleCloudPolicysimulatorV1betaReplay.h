/**
 * Policy Simulator API
 *  Policy Simulator is a collection of endpoints for creating, running, and viewing a Replay. A `Replay` is a type of simulation that lets you see how your members' access to resources might change if you changed your IAM policy. During a `Replay`, Policy Simulator re-evaluates, or replays, past access attempts under both the current policy and your proposed policy, and compares those results to determine how your members' access might change under the proposed policy.
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudPolicysimulatorV1betaReplay.h
 *
 * A resource describing a &#x60;Replay&#x60;, or simulation.
 */

#ifndef OAIGoogleCloudPolicysimulatorV1betaReplay_H
#define OAIGoogleCloudPolicysimulatorV1betaReplay_H

#include <QJsonObject>

#include "OAIGoogleCloudPolicysimulatorV1betaReplayConfig.h"
#include "OAIGoogleCloudPolicysimulatorV1betaReplayResultsSummary.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleCloudPolicysimulatorV1betaReplayConfig;
class OAIGoogleCloudPolicysimulatorV1betaReplayResultsSummary;

class OAIGoogleCloudPolicysimulatorV1betaReplay : public OAIObject {
public:
    OAIGoogleCloudPolicysimulatorV1betaReplay();
    OAIGoogleCloudPolicysimulatorV1betaReplay(QString json);
    ~OAIGoogleCloudPolicysimulatorV1betaReplay() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGoogleCloudPolicysimulatorV1betaReplayConfig getConfig() const;
    void setConfig(const OAIGoogleCloudPolicysimulatorV1betaReplayConfig &config);
    bool is_config_Set() const;
    bool is_config_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIGoogleCloudPolicysimulatorV1betaReplayResultsSummary getResultsSummary() const;
    void setResultsSummary(const OAIGoogleCloudPolicysimulatorV1betaReplayResultsSummary &results_summary);
    bool is_results_summary_Set() const;
    bool is_results_summary_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGoogleCloudPolicysimulatorV1betaReplayConfig m_config;
    bool m_config_isSet;
    bool m_config_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIGoogleCloudPolicysimulatorV1betaReplayResultsSummary m_results_summary;
    bool m_results_summary_isSet;
    bool m_results_summary_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudPolicysimulatorV1betaReplay)

#endif // OAIGoogleCloudPolicysimulatorV1betaReplay_H
