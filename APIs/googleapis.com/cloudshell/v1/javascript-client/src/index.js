/**
 * Cloud Shell API
 * Allows users to start, configure, and connect to interactive shell sessions running in the cloud. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AddPublicKeyRequest from './model/AddPublicKeyRequest';
import AddPublicKeyResponse from './model/AddPublicKeyResponse';
import AuthorizeEnvironmentRequest from './model/AuthorizeEnvironmentRequest';
import Environment from './model/Environment';
import ListOperationsResponse from './model/ListOperationsResponse';
import Operation from './model/Operation';
import RemovePublicKeyRequest from './model/RemovePublicKeyRequest';
import StartEnvironmentMetadata from './model/StartEnvironmentMetadata';
import StartEnvironmentRequest from './model/StartEnvironmentRequest';
import StartEnvironmentResponse from './model/StartEnvironmentResponse';
import Status from './model/Status';
import OperationsApi from './api/OperationsApi';
import UsersApi from './api/UsersApi';


/**
* Allows users to start, configure, and connect to interactive shell sessions running in the cloud. .<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var CloudShellApi = require('index'); // See note below*.
* var xxxSvc = new CloudShellApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new CloudShellApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new CloudShellApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new CloudShellApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AddPublicKeyRequest model constructor.
     * @property {module:model/AddPublicKeyRequest}
     */
    AddPublicKeyRequest,

    /**
     * The AddPublicKeyResponse model constructor.
     * @property {module:model/AddPublicKeyResponse}
     */
    AddPublicKeyResponse,

    /**
     * The AuthorizeEnvironmentRequest model constructor.
     * @property {module:model/AuthorizeEnvironmentRequest}
     */
    AuthorizeEnvironmentRequest,

    /**
     * The Environment model constructor.
     * @property {module:model/Environment}
     */
    Environment,

    /**
     * The ListOperationsResponse model constructor.
     * @property {module:model/ListOperationsResponse}
     */
    ListOperationsResponse,

    /**
     * The Operation model constructor.
     * @property {module:model/Operation}
     */
    Operation,

    /**
     * The RemovePublicKeyRequest model constructor.
     * @property {module:model/RemovePublicKeyRequest}
     */
    RemovePublicKeyRequest,

    /**
     * The StartEnvironmentMetadata model constructor.
     * @property {module:model/StartEnvironmentMetadata}
     */
    StartEnvironmentMetadata,

    /**
     * The StartEnvironmentRequest model constructor.
     * @property {module:model/StartEnvironmentRequest}
     */
    StartEnvironmentRequest,

    /**
     * The StartEnvironmentResponse model constructor.
     * @property {module:model/StartEnvironmentResponse}
     */
    StartEnvironmentResponse,

    /**
     * The Status model constructor.
     * @property {module:model/Status}
     */
    Status,

    /**
    * The OperationsApi service constructor.
    * @property {module:api/OperationsApi}
    */
    OperationsApi,

    /**
    * The UsersApi service constructor.
    * @property {module:api/UsersApi}
    */
    UsersApi
};
