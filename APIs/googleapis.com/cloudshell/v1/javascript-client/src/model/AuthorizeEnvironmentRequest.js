/**
 * Cloud Shell API
 * Allows users to start, configure, and connect to interactive shell sessions running in the cloud. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AuthorizeEnvironmentRequest model module.
 * @module model/AuthorizeEnvironmentRequest
 * @version v1
 */
class AuthorizeEnvironmentRequest {
    /**
     * Constructs a new <code>AuthorizeEnvironmentRequest</code>.
     * Request message for AuthorizeEnvironment.
     * @alias module:model/AuthorizeEnvironmentRequest
     */
    constructor() { 
        
        AuthorizeEnvironmentRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AuthorizeEnvironmentRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AuthorizeEnvironmentRequest} obj Optional instance to populate.
     * @return {module:model/AuthorizeEnvironmentRequest} The populated <code>AuthorizeEnvironmentRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AuthorizeEnvironmentRequest();

            if (data.hasOwnProperty('accessToken')) {
                obj['accessToken'] = ApiClient.convertToType(data['accessToken'], 'String');
            }
            if (data.hasOwnProperty('expireTime')) {
                obj['expireTime'] = ApiClient.convertToType(data['expireTime'], 'String');
            }
            if (data.hasOwnProperty('idToken')) {
                obj['idToken'] = ApiClient.convertToType(data['idToken'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AuthorizeEnvironmentRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AuthorizeEnvironmentRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['accessToken'] && !(typeof data['accessToken'] === 'string' || data['accessToken'] instanceof String)) {
            throw new Error("Expected the field `accessToken` to be a primitive type in the JSON string but got " + data['accessToken']);
        }
        // ensure the json data is a string
        if (data['expireTime'] && !(typeof data['expireTime'] === 'string' || data['expireTime'] instanceof String)) {
            throw new Error("Expected the field `expireTime` to be a primitive type in the JSON string but got " + data['expireTime']);
        }
        // ensure the json data is a string
        if (data['idToken'] && !(typeof data['idToken'] === 'string' || data['idToken'] instanceof String)) {
            throw new Error("Expected the field `idToken` to be a primitive type in the JSON string but got " + data['idToken']);
        }

        return true;
    }


}



/**
 * The OAuth access token that should be sent to the environment.
 * @member {String} accessToken
 */
AuthorizeEnvironmentRequest.prototype['accessToken'] = undefined;

/**
 * The time when the credentials expire. If not set, defaults to one hour from when the server received the request.
 * @member {String} expireTime
 */
AuthorizeEnvironmentRequest.prototype['expireTime'] = undefined;

/**
 * The OAuth ID token that should be sent to the environment.
 * @member {String} idToken
 */
AuthorizeEnvironmentRequest.prototype['idToken'] = undefined;






export default AuthorizeEnvironmentRequest;

