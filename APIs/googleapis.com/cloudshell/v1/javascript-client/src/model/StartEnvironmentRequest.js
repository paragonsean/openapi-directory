/**
 * Cloud Shell API
 * Allows users to start, configure, and connect to interactive shell sessions running in the cloud. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The StartEnvironmentRequest model module.
 * @module model/StartEnvironmentRequest
 * @version v1
 */
class StartEnvironmentRequest {
    /**
     * Constructs a new <code>StartEnvironmentRequest</code>.
     * Request message for StartEnvironment.
     * @alias module:model/StartEnvironmentRequest
     */
    constructor() { 
        
        StartEnvironmentRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>StartEnvironmentRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StartEnvironmentRequest} obj Optional instance to populate.
     * @return {module:model/StartEnvironmentRequest} The populated <code>StartEnvironmentRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StartEnvironmentRequest();

            if (data.hasOwnProperty('accessToken')) {
                obj['accessToken'] = ApiClient.convertToType(data['accessToken'], 'String');
            }
            if (data.hasOwnProperty('publicKeys')) {
                obj['publicKeys'] = ApiClient.convertToType(data['publicKeys'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StartEnvironmentRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StartEnvironmentRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['accessToken'] && !(typeof data['accessToken'] === 'string' || data['accessToken'] instanceof String)) {
            throw new Error("Expected the field `accessToken` to be a primitive type in the JSON string but got " + data['accessToken']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['publicKeys'])) {
            throw new Error("Expected the field `publicKeys` to be an array in the JSON data but got " + data['publicKeys']);
        }

        return true;
    }


}



/**
 * The initial access token passed to the environment. If this is present and valid, the environment will be pre-authenticated with gcloud so that the user can run gcloud commands in Cloud Shell without having to log in. This code can be updated later by calling AuthorizeEnvironment.
 * @member {String} accessToken
 */
StartEnvironmentRequest.prototype['accessToken'] = undefined;

/**
 * Public keys that should be added to the environment before it is started.
 * @member {Array.<String>} publicKeys
 */
StartEnvironmentRequest.prototype['publicKeys'] = undefined;






export default StartEnvironmentRequest;

