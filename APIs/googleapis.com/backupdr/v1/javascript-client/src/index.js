/**
 * Backup and DR Service API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AuditConfig from './model/AuditConfig';
import AuditLogConfig from './model/AuditLogConfig';
import Binding from './model/Binding';
import Expr from './model/Expr';
import ListLocationsResponse from './model/ListLocationsResponse';
import ListManagementServersResponse from './model/ListManagementServersResponse';
import ListOperationsResponse from './model/ListOperationsResponse';
import Location from './model/Location';
import ManagementServer from './model/ManagementServer';
import ManagementURI from './model/ManagementURI';
import NetworkConfig from './model/NetworkConfig';
import Operation from './model/Operation';
import OperationMetadata from './model/OperationMetadata';
import Policy from './model/Policy';
import SetIamPolicyRequest from './model/SetIamPolicyRequest';
import Status from './model/Status';
import TestIamPermissionsRequest from './model/TestIamPermissionsRequest';
import TestIamPermissionsResponse from './model/TestIamPermissionsResponse';
import WorkforceIdentityBasedManagementURI from './model/WorkforceIdentityBasedManagementURI';
import WorkforceIdentityBasedOAuth2ClientID from './model/WorkforceIdentityBasedOAuth2ClientID';
import ProjectsApi from './api/ProjectsApi';


/**
* JS API client generated by OpenAPI Generator.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var BackupAndDrServiceApi = require('index'); // See note below*.
* var xxxSvc = new BackupAndDrServiceApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new BackupAndDrServiceApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new BackupAndDrServiceApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new BackupAndDrServiceApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AuditConfig model constructor.
     * @property {module:model/AuditConfig}
     */
    AuditConfig,

    /**
     * The AuditLogConfig model constructor.
     * @property {module:model/AuditLogConfig}
     */
    AuditLogConfig,

    /**
     * The Binding model constructor.
     * @property {module:model/Binding}
     */
    Binding,

    /**
     * The Expr model constructor.
     * @property {module:model/Expr}
     */
    Expr,

    /**
     * The ListLocationsResponse model constructor.
     * @property {module:model/ListLocationsResponse}
     */
    ListLocationsResponse,

    /**
     * The ListManagementServersResponse model constructor.
     * @property {module:model/ListManagementServersResponse}
     */
    ListManagementServersResponse,

    /**
     * The ListOperationsResponse model constructor.
     * @property {module:model/ListOperationsResponse}
     */
    ListOperationsResponse,

    /**
     * The Location model constructor.
     * @property {module:model/Location}
     */
    Location,

    /**
     * The ManagementServer model constructor.
     * @property {module:model/ManagementServer}
     */
    ManagementServer,

    /**
     * The ManagementURI model constructor.
     * @property {module:model/ManagementURI}
     */
    ManagementURI,

    /**
     * The NetworkConfig model constructor.
     * @property {module:model/NetworkConfig}
     */
    NetworkConfig,

    /**
     * The Operation model constructor.
     * @property {module:model/Operation}
     */
    Operation,

    /**
     * The OperationMetadata model constructor.
     * @property {module:model/OperationMetadata}
     */
    OperationMetadata,

    /**
     * The Policy model constructor.
     * @property {module:model/Policy}
     */
    Policy,

    /**
     * The SetIamPolicyRequest model constructor.
     * @property {module:model/SetIamPolicyRequest}
     */
    SetIamPolicyRequest,

    /**
     * The Status model constructor.
     * @property {module:model/Status}
     */
    Status,

    /**
     * The TestIamPermissionsRequest model constructor.
     * @property {module:model/TestIamPermissionsRequest}
     */
    TestIamPermissionsRequest,

    /**
     * The TestIamPermissionsResponse model constructor.
     * @property {module:model/TestIamPermissionsResponse}
     */
    TestIamPermissionsResponse,

    /**
     * The WorkforceIdentityBasedManagementURI model constructor.
     * @property {module:model/WorkforceIdentityBasedManagementURI}
     */
    WorkforceIdentityBasedManagementURI,

    /**
     * The WorkforceIdentityBasedOAuth2ClientID model constructor.
     * @property {module:model/WorkforceIdentityBasedOAuth2ClientID}
     */
    WorkforceIdentityBasedOAuth2ClientID,

    /**
    * The ProjectsApi service constructor.
    * @property {module:api/ProjectsApi}
    */
    ProjectsApi
};
