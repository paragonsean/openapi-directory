/**
 * Backup and DR Service API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BackupAndDrServiceApi);
  }
}(this, function(expect, BackupAndDrServiceApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new BackupAndDrServiceApi.ProjectsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ProjectsApi', function() {
    describe('backupdrProjectsLocationsList', function() {
      it('should call backupdrProjectsLocationsList successfully', function(done) {
        //uncomment below and update the code to test backupdrProjectsLocationsList
        //instance.backupdrProjectsLocationsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('backupdrProjectsLocationsManagementServersCreate', function() {
      it('should call backupdrProjectsLocationsManagementServersCreate successfully', function(done) {
        //uncomment below and update the code to test backupdrProjectsLocationsManagementServersCreate
        //instance.backupdrProjectsLocationsManagementServersCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('backupdrProjectsLocationsManagementServersGetIamPolicy', function() {
      it('should call backupdrProjectsLocationsManagementServersGetIamPolicy successfully', function(done) {
        //uncomment below and update the code to test backupdrProjectsLocationsManagementServersGetIamPolicy
        //instance.backupdrProjectsLocationsManagementServersGetIamPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('backupdrProjectsLocationsManagementServersList', function() {
      it('should call backupdrProjectsLocationsManagementServersList successfully', function(done) {
        //uncomment below and update the code to test backupdrProjectsLocationsManagementServersList
        //instance.backupdrProjectsLocationsManagementServersList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('backupdrProjectsLocationsManagementServersSetIamPolicy', function() {
      it('should call backupdrProjectsLocationsManagementServersSetIamPolicy successfully', function(done) {
        //uncomment below and update the code to test backupdrProjectsLocationsManagementServersSetIamPolicy
        //instance.backupdrProjectsLocationsManagementServersSetIamPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('backupdrProjectsLocationsManagementServersTestIamPermissions', function() {
      it('should call backupdrProjectsLocationsManagementServersTestIamPermissions successfully', function(done) {
        //uncomment below and update the code to test backupdrProjectsLocationsManagementServersTestIamPermissions
        //instance.backupdrProjectsLocationsManagementServersTestIamPermissions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('backupdrProjectsLocationsOperationsCancel', function() {
      it('should call backupdrProjectsLocationsOperationsCancel successfully', function(done) {
        //uncomment below and update the code to test backupdrProjectsLocationsOperationsCancel
        //instance.backupdrProjectsLocationsOperationsCancel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('backupdrProjectsLocationsOperationsDelete', function() {
      it('should call backupdrProjectsLocationsOperationsDelete successfully', function(done) {
        //uncomment below and update the code to test backupdrProjectsLocationsOperationsDelete
        //instance.backupdrProjectsLocationsOperationsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('backupdrProjectsLocationsOperationsGet', function() {
      it('should call backupdrProjectsLocationsOperationsGet successfully', function(done) {
        //uncomment below and update the code to test backupdrProjectsLocationsOperationsGet
        //instance.backupdrProjectsLocationsOperationsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('backupdrProjectsLocationsOperationsList', function() {
      it('should call backupdrProjectsLocationsOperationsList successfully', function(done) {
        //uncomment below and update the code to test backupdrProjectsLocationsOperationsList
        //instance.backupdrProjectsLocationsOperationsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
