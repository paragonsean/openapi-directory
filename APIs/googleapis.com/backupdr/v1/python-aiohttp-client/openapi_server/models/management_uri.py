# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ManagementURI(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, api: str=None, web_ui: str=None):
        """ManagementURI - a model defined in OpenAPI

        :param api: The api of this ManagementURI.
        :param web_ui: The web_ui of this ManagementURI.
        """
        self.openapi_types = {
            'api': str,
            'web_ui': str
        }

        self.attribute_map = {
            'api': 'api',
            'web_ui': 'webUi'
        }

        self._api = api
        self._web_ui = web_ui

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ManagementURI':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ManagementURI of this ManagementURI.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def api(self):
        """Gets the api of this ManagementURI.

        Output only. The ManagementServer AGM/RD API URL.

        :return: The api of this ManagementURI.
        :rtype: str
        """
        return self._api

    @api.setter
    def api(self, api):
        """Sets the api of this ManagementURI.

        Output only. The ManagementServer AGM/RD API URL.

        :param api: The api of this ManagementURI.
        :type api: str
        """

        self._api = api

    @property
    def web_ui(self):
        """Gets the web_ui of this ManagementURI.

        Output only. The ManagementServer AGM/RD WebUI URL.

        :return: The web_ui of this ManagementURI.
        :rtype: str
        """
        return self._web_ui

    @web_ui.setter
    def web_ui(self, web_ui):
        """Sets the web_ui of this ManagementURI.

        Output only. The ManagementServer AGM/RD WebUI URL.

        :param web_ui: The web_ui of this ManagementURI.
        :type web_ui: str
        """

        self._web_ui = web_ui
