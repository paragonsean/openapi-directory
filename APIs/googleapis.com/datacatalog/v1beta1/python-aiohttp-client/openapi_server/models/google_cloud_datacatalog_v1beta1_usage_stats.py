# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDatacatalogV1beta1UsageStats(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, total_cancellations: float=None, total_completions: float=None, total_execution_time_for_completions_millis: float=None, total_failures: float=None):
        """GoogleCloudDatacatalogV1beta1UsageStats - a model defined in OpenAPI

        :param total_cancellations: The total_cancellations of this GoogleCloudDatacatalogV1beta1UsageStats.
        :param total_completions: The total_completions of this GoogleCloudDatacatalogV1beta1UsageStats.
        :param total_execution_time_for_completions_millis: The total_execution_time_for_completions_millis of this GoogleCloudDatacatalogV1beta1UsageStats.
        :param total_failures: The total_failures of this GoogleCloudDatacatalogV1beta1UsageStats.
        """
        self.openapi_types = {
            'total_cancellations': float,
            'total_completions': float,
            'total_execution_time_for_completions_millis': float,
            'total_failures': float
        }

        self.attribute_map = {
            'total_cancellations': 'totalCancellations',
            'total_completions': 'totalCompletions',
            'total_execution_time_for_completions_millis': 'totalExecutionTimeForCompletionsMillis',
            'total_failures': 'totalFailures'
        }

        self._total_cancellations = total_cancellations
        self._total_completions = total_completions
        self._total_execution_time_for_completions_millis = total_execution_time_for_completions_millis
        self._total_failures = total_failures

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDatacatalogV1beta1UsageStats':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDatacatalogV1beta1UsageStats of this GoogleCloudDatacatalogV1beta1UsageStats.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def total_cancellations(self):
        """Gets the total_cancellations of this GoogleCloudDatacatalogV1beta1UsageStats.

        The number of times that the underlying entry was attempted to be used but was cancelled by the user.

        :return: The total_cancellations of this GoogleCloudDatacatalogV1beta1UsageStats.
        :rtype: float
        """
        return self._total_cancellations

    @total_cancellations.setter
    def total_cancellations(self, total_cancellations):
        """Sets the total_cancellations of this GoogleCloudDatacatalogV1beta1UsageStats.

        The number of times that the underlying entry was attempted to be used but was cancelled by the user.

        :param total_cancellations: The total_cancellations of this GoogleCloudDatacatalogV1beta1UsageStats.
        :type total_cancellations: float
        """

        self._total_cancellations = total_cancellations

    @property
    def total_completions(self):
        """Gets the total_completions of this GoogleCloudDatacatalogV1beta1UsageStats.

        The number of times that the underlying entry was successfully used.

        :return: The total_completions of this GoogleCloudDatacatalogV1beta1UsageStats.
        :rtype: float
        """
        return self._total_completions

    @total_completions.setter
    def total_completions(self, total_completions):
        """Sets the total_completions of this GoogleCloudDatacatalogV1beta1UsageStats.

        The number of times that the underlying entry was successfully used.

        :param total_completions: The total_completions of this GoogleCloudDatacatalogV1beta1UsageStats.
        :type total_completions: float
        """

        self._total_completions = total_completions

    @property
    def total_execution_time_for_completions_millis(self):
        """Gets the total_execution_time_for_completions_millis of this GoogleCloudDatacatalogV1beta1UsageStats.

        Total time spent (in milliseconds) during uses the resulted in completions.

        :return: The total_execution_time_for_completions_millis of this GoogleCloudDatacatalogV1beta1UsageStats.
        :rtype: float
        """
        return self._total_execution_time_for_completions_millis

    @total_execution_time_for_completions_millis.setter
    def total_execution_time_for_completions_millis(self, total_execution_time_for_completions_millis):
        """Sets the total_execution_time_for_completions_millis of this GoogleCloudDatacatalogV1beta1UsageStats.

        Total time spent (in milliseconds) during uses the resulted in completions.

        :param total_execution_time_for_completions_millis: The total_execution_time_for_completions_millis of this GoogleCloudDatacatalogV1beta1UsageStats.
        :type total_execution_time_for_completions_millis: float
        """

        self._total_execution_time_for_completions_millis = total_execution_time_for_completions_millis

    @property
    def total_failures(self):
        """Gets the total_failures of this GoogleCloudDatacatalogV1beta1UsageStats.

        The number of times that the underlying entry was attempted to be used but failed.

        :return: The total_failures of this GoogleCloudDatacatalogV1beta1UsageStats.
        :rtype: float
        """
        return self._total_failures

    @total_failures.setter
    def total_failures(self, total_failures):
        """Sets the total_failures of this GoogleCloudDatacatalogV1beta1UsageStats.

        The number of times that the underlying entry was attempted to be used but failed.

        :param total_failures: The total_failures of this GoogleCloudDatacatalogV1beta1UsageStats.
        :type total_failures: float
        """

        self._total_failures = total_failures
