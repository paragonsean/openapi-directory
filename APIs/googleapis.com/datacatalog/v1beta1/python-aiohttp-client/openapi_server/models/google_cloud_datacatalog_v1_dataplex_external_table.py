# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDatacatalogV1DataplexExternalTable(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data_catalog_entry: str=None, fully_qualified_name: str=None, google_cloud_resource: str=None, system: str=None):
        """GoogleCloudDatacatalogV1DataplexExternalTable - a model defined in OpenAPI

        :param data_catalog_entry: The data_catalog_entry of this GoogleCloudDatacatalogV1DataplexExternalTable.
        :param fully_qualified_name: The fully_qualified_name of this GoogleCloudDatacatalogV1DataplexExternalTable.
        :param google_cloud_resource: The google_cloud_resource of this GoogleCloudDatacatalogV1DataplexExternalTable.
        :param system: The system of this GoogleCloudDatacatalogV1DataplexExternalTable.
        """
        self.openapi_types = {
            'data_catalog_entry': str,
            'fully_qualified_name': str,
            'google_cloud_resource': str,
            'system': str
        }

        self.attribute_map = {
            'data_catalog_entry': 'dataCatalogEntry',
            'fully_qualified_name': 'fullyQualifiedName',
            'google_cloud_resource': 'googleCloudResource',
            'system': 'system'
        }

        self._data_catalog_entry = data_catalog_entry
        self._fully_qualified_name = fully_qualified_name
        self._google_cloud_resource = google_cloud_resource
        self._system = system

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDatacatalogV1DataplexExternalTable':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDatacatalogV1DataplexExternalTable of this GoogleCloudDatacatalogV1DataplexExternalTable.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data_catalog_entry(self):
        """Gets the data_catalog_entry of this GoogleCloudDatacatalogV1DataplexExternalTable.

        Name of the Data Catalog entry representing the external table.

        :return: The data_catalog_entry of this GoogleCloudDatacatalogV1DataplexExternalTable.
        :rtype: str
        """
        return self._data_catalog_entry

    @data_catalog_entry.setter
    def data_catalog_entry(self, data_catalog_entry):
        """Sets the data_catalog_entry of this GoogleCloudDatacatalogV1DataplexExternalTable.

        Name of the Data Catalog entry representing the external table.

        :param data_catalog_entry: The data_catalog_entry of this GoogleCloudDatacatalogV1DataplexExternalTable.
        :type data_catalog_entry: str
        """

        self._data_catalog_entry = data_catalog_entry

    @property
    def fully_qualified_name(self):
        """Gets the fully_qualified_name of this GoogleCloudDatacatalogV1DataplexExternalTable.

        Fully qualified name (FQN) of the external table.

        :return: The fully_qualified_name of this GoogleCloudDatacatalogV1DataplexExternalTable.
        :rtype: str
        """
        return self._fully_qualified_name

    @fully_qualified_name.setter
    def fully_qualified_name(self, fully_qualified_name):
        """Sets the fully_qualified_name of this GoogleCloudDatacatalogV1DataplexExternalTable.

        Fully qualified name (FQN) of the external table.

        :param fully_qualified_name: The fully_qualified_name of this GoogleCloudDatacatalogV1DataplexExternalTable.
        :type fully_qualified_name: str
        """

        self._fully_qualified_name = fully_qualified_name

    @property
    def google_cloud_resource(self):
        """Gets the google_cloud_resource of this GoogleCloudDatacatalogV1DataplexExternalTable.

        Google Cloud resource name of the external table.

        :return: The google_cloud_resource of this GoogleCloudDatacatalogV1DataplexExternalTable.
        :rtype: str
        """
        return self._google_cloud_resource

    @google_cloud_resource.setter
    def google_cloud_resource(self, google_cloud_resource):
        """Sets the google_cloud_resource of this GoogleCloudDatacatalogV1DataplexExternalTable.

        Google Cloud resource name of the external table.

        :param google_cloud_resource: The google_cloud_resource of this GoogleCloudDatacatalogV1DataplexExternalTable.
        :type google_cloud_resource: str
        """

        self._google_cloud_resource = google_cloud_resource

    @property
    def system(self):
        """Gets the system of this GoogleCloudDatacatalogV1DataplexExternalTable.

        Service in which the external table is registered.

        :return: The system of this GoogleCloudDatacatalogV1DataplexExternalTable.
        :rtype: str
        """
        return self._system

    @system.setter
    def system(self, system):
        """Sets the system of this GoogleCloudDatacatalogV1DataplexExternalTable.

        Service in which the external table is registered.

        :param system: The system of this GoogleCloudDatacatalogV1DataplexExternalTable.
        :type system: str
        """
        allowed_values = ["INTEGRATED_SYSTEM_UNSPECIFIED", "BIGQUERY", "CLOUD_PUBSUB", "DATAPROC_METASTORE", "DATAPLEX", "CLOUD_SPANNER", "CLOUD_BIGTABLE", "CLOUD_SQL", "LOOKER", "VERTEX_AI"]  # noqa: E501
        if system not in allowed_values:
            raise ValueError(
                "Invalid value for `system` ({0}), must be one of {1}"
                .format(system, allowed_values)
            )

        self._system = system
