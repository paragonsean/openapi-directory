# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_datacatalog_v1beta1_search_catalog_result import GoogleCloudDatacatalogV1beta1SearchCatalogResult
from openapi_server import util


class GoogleCloudDatacatalogV1beta1SearchCatalogResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, next_page_token: str=None, results: List[GoogleCloudDatacatalogV1beta1SearchCatalogResult]=None, total_size: int=None, unreachable: List[str]=None):
        """GoogleCloudDatacatalogV1beta1SearchCatalogResponse - a model defined in OpenAPI

        :param next_page_token: The next_page_token of this GoogleCloudDatacatalogV1beta1SearchCatalogResponse.
        :param results: The results of this GoogleCloudDatacatalogV1beta1SearchCatalogResponse.
        :param total_size: The total_size of this GoogleCloudDatacatalogV1beta1SearchCatalogResponse.
        :param unreachable: The unreachable of this GoogleCloudDatacatalogV1beta1SearchCatalogResponse.
        """
        self.openapi_types = {
            'next_page_token': str,
            'results': List[GoogleCloudDatacatalogV1beta1SearchCatalogResult],
            'total_size': int,
            'unreachable': List[str]
        }

        self.attribute_map = {
            'next_page_token': 'nextPageToken',
            'results': 'results',
            'total_size': 'totalSize',
            'unreachable': 'unreachable'
        }

        self._next_page_token = next_page_token
        self._results = results
        self._total_size = total_size
        self._unreachable = unreachable

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDatacatalogV1beta1SearchCatalogResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDatacatalogV1beta1SearchCatalogResponse of this GoogleCloudDatacatalogV1beta1SearchCatalogResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def next_page_token(self):
        """Gets the next_page_token of this GoogleCloudDatacatalogV1beta1SearchCatalogResponse.

        The token that can be used to retrieve the next page of results.

        :return: The next_page_token of this GoogleCloudDatacatalogV1beta1SearchCatalogResponse.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this GoogleCloudDatacatalogV1beta1SearchCatalogResponse.

        The token that can be used to retrieve the next page of results.

        :param next_page_token: The next_page_token of this GoogleCloudDatacatalogV1beta1SearchCatalogResponse.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token

    @property
    def results(self):
        """Gets the results of this GoogleCloudDatacatalogV1beta1SearchCatalogResponse.

        Search results.

        :return: The results of this GoogleCloudDatacatalogV1beta1SearchCatalogResponse.
        :rtype: List[GoogleCloudDatacatalogV1beta1SearchCatalogResult]
        """
        return self._results

    @results.setter
    def results(self, results):
        """Sets the results of this GoogleCloudDatacatalogV1beta1SearchCatalogResponse.

        Search results.

        :param results: The results of this GoogleCloudDatacatalogV1beta1SearchCatalogResponse.
        :type results: List[GoogleCloudDatacatalogV1beta1SearchCatalogResult]
        """

        self._results = results

    @property
    def total_size(self):
        """Gets the total_size of this GoogleCloudDatacatalogV1beta1SearchCatalogResponse.

        The approximate total number of entries matched by the query.

        :return: The total_size of this GoogleCloudDatacatalogV1beta1SearchCatalogResponse.
        :rtype: int
        """
        return self._total_size

    @total_size.setter
    def total_size(self, total_size):
        """Sets the total_size of this GoogleCloudDatacatalogV1beta1SearchCatalogResponse.

        The approximate total number of entries matched by the query.

        :param total_size: The total_size of this GoogleCloudDatacatalogV1beta1SearchCatalogResponse.
        :type total_size: int
        """

        self._total_size = total_size

    @property
    def unreachable(self):
        """Gets the unreachable of this GoogleCloudDatacatalogV1beta1SearchCatalogResponse.

        Unreachable locations. Search result does not include data from those locations. Users can get additional information on the error by repeating the search request with a more restrictive parameter -- setting the value for `SearchDataCatalogRequest.scope.restricted_locations`.

        :return: The unreachable of this GoogleCloudDatacatalogV1beta1SearchCatalogResponse.
        :rtype: List[str]
        """
        return self._unreachable

    @unreachable.setter
    def unreachable(self, unreachable):
        """Sets the unreachable of this GoogleCloudDatacatalogV1beta1SearchCatalogResponse.

        Unreachable locations. Search result does not include data from those locations. Users can get additional information on the error by repeating the search request with a more restrictive parameter -- setting the value for `SearchDataCatalogRequest.scope.restricted_locations`.

        :param unreachable: The unreachable of this GoogleCloudDatacatalogV1beta1SearchCatalogResponse.
        :type unreachable: List[str]
        """

        self._unreachable = unreachable
