# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_datacatalog_v1_physical_schema_avro_schema import GoogleCloudDatacatalogV1PhysicalSchemaAvroSchema
from openapi_server.models.google_cloud_datacatalog_v1_physical_schema_protobuf_schema import GoogleCloudDatacatalogV1PhysicalSchemaProtobufSchema
from openapi_server.models.google_cloud_datacatalog_v1_physical_schema_thrift_schema import GoogleCloudDatacatalogV1PhysicalSchemaThriftSchema
from openapi_server import util


class GoogleCloudDatacatalogV1PhysicalSchema(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, avro: GoogleCloudDatacatalogV1PhysicalSchemaAvroSchema=None, csv: object=None, orc: object=None, parquet: object=None, protobuf: GoogleCloudDatacatalogV1PhysicalSchemaProtobufSchema=None, thrift: GoogleCloudDatacatalogV1PhysicalSchemaThriftSchema=None):
        """GoogleCloudDatacatalogV1PhysicalSchema - a model defined in OpenAPI

        :param avro: The avro of this GoogleCloudDatacatalogV1PhysicalSchema.
        :param csv: The csv of this GoogleCloudDatacatalogV1PhysicalSchema.
        :param orc: The orc of this GoogleCloudDatacatalogV1PhysicalSchema.
        :param parquet: The parquet of this GoogleCloudDatacatalogV1PhysicalSchema.
        :param protobuf: The protobuf of this GoogleCloudDatacatalogV1PhysicalSchema.
        :param thrift: The thrift of this GoogleCloudDatacatalogV1PhysicalSchema.
        """
        self.openapi_types = {
            'avro': GoogleCloudDatacatalogV1PhysicalSchemaAvroSchema,
            'csv': object,
            'orc': object,
            'parquet': object,
            'protobuf': GoogleCloudDatacatalogV1PhysicalSchemaProtobufSchema,
            'thrift': GoogleCloudDatacatalogV1PhysicalSchemaThriftSchema
        }

        self.attribute_map = {
            'avro': 'avro',
            'csv': 'csv',
            'orc': 'orc',
            'parquet': 'parquet',
            'protobuf': 'protobuf',
            'thrift': 'thrift'
        }

        self._avro = avro
        self._csv = csv
        self._orc = orc
        self._parquet = parquet
        self._protobuf = protobuf
        self._thrift = thrift

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDatacatalogV1PhysicalSchema':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDatacatalogV1PhysicalSchema of this GoogleCloudDatacatalogV1PhysicalSchema.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def avro(self):
        """Gets the avro of this GoogleCloudDatacatalogV1PhysicalSchema.


        :return: The avro of this GoogleCloudDatacatalogV1PhysicalSchema.
        :rtype: GoogleCloudDatacatalogV1PhysicalSchemaAvroSchema
        """
        return self._avro

    @avro.setter
    def avro(self, avro):
        """Sets the avro of this GoogleCloudDatacatalogV1PhysicalSchema.


        :param avro: The avro of this GoogleCloudDatacatalogV1PhysicalSchema.
        :type avro: GoogleCloudDatacatalogV1PhysicalSchemaAvroSchema
        """

        self._avro = avro

    @property
    def csv(self):
        """Gets the csv of this GoogleCloudDatacatalogV1PhysicalSchema.

        Marks a CSV-encoded data source.

        :return: The csv of this GoogleCloudDatacatalogV1PhysicalSchema.
        :rtype: object
        """
        return self._csv

    @csv.setter
    def csv(self, csv):
        """Sets the csv of this GoogleCloudDatacatalogV1PhysicalSchema.

        Marks a CSV-encoded data source.

        :param csv: The csv of this GoogleCloudDatacatalogV1PhysicalSchema.
        :type csv: object
        """

        self._csv = csv

    @property
    def orc(self):
        """Gets the orc of this GoogleCloudDatacatalogV1PhysicalSchema.

        Marks an ORC-encoded data source.

        :return: The orc of this GoogleCloudDatacatalogV1PhysicalSchema.
        :rtype: object
        """
        return self._orc

    @orc.setter
    def orc(self, orc):
        """Sets the orc of this GoogleCloudDatacatalogV1PhysicalSchema.

        Marks an ORC-encoded data source.

        :param orc: The orc of this GoogleCloudDatacatalogV1PhysicalSchema.
        :type orc: object
        """

        self._orc = orc

    @property
    def parquet(self):
        """Gets the parquet of this GoogleCloudDatacatalogV1PhysicalSchema.

        Marks a Parquet-encoded data source.

        :return: The parquet of this GoogleCloudDatacatalogV1PhysicalSchema.
        :rtype: object
        """
        return self._parquet

    @parquet.setter
    def parquet(self, parquet):
        """Sets the parquet of this GoogleCloudDatacatalogV1PhysicalSchema.

        Marks a Parquet-encoded data source.

        :param parquet: The parquet of this GoogleCloudDatacatalogV1PhysicalSchema.
        :type parquet: object
        """

        self._parquet = parquet

    @property
    def protobuf(self):
        """Gets the protobuf of this GoogleCloudDatacatalogV1PhysicalSchema.


        :return: The protobuf of this GoogleCloudDatacatalogV1PhysicalSchema.
        :rtype: GoogleCloudDatacatalogV1PhysicalSchemaProtobufSchema
        """
        return self._protobuf

    @protobuf.setter
    def protobuf(self, protobuf):
        """Sets the protobuf of this GoogleCloudDatacatalogV1PhysicalSchema.


        :param protobuf: The protobuf of this GoogleCloudDatacatalogV1PhysicalSchema.
        :type protobuf: GoogleCloudDatacatalogV1PhysicalSchemaProtobufSchema
        """

        self._protobuf = protobuf

    @property
    def thrift(self):
        """Gets the thrift of this GoogleCloudDatacatalogV1PhysicalSchema.


        :return: The thrift of this GoogleCloudDatacatalogV1PhysicalSchema.
        :rtype: GoogleCloudDatacatalogV1PhysicalSchemaThriftSchema
        """
        return self._thrift

    @thrift.setter
    def thrift(self, thrift):
        """Sets the thrift of this GoogleCloudDatacatalogV1PhysicalSchema.


        :param thrift: The thrift of this GoogleCloudDatacatalogV1PhysicalSchema.
        :type thrift: GoogleCloudDatacatalogV1PhysicalSchemaThriftSchema
        """

        self._thrift = thrift
