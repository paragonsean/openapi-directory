# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_datacatalog_v1beta1_usage_stats import GoogleCloudDatacatalogV1beta1UsageStats
from openapi_server import util


class GoogleCloudDatacatalogV1beta1UsageSignal(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, update_time: str=None, usage_within_time_range: Dict[str, GoogleCloudDatacatalogV1beta1UsageStats]=None):
        """GoogleCloudDatacatalogV1beta1UsageSignal - a model defined in OpenAPI

        :param update_time: The update_time of this GoogleCloudDatacatalogV1beta1UsageSignal.
        :param usage_within_time_range: The usage_within_time_range of this GoogleCloudDatacatalogV1beta1UsageSignal.
        """
        self.openapi_types = {
            'update_time': str,
            'usage_within_time_range': Dict[str, GoogleCloudDatacatalogV1beta1UsageStats]
        }

        self.attribute_map = {
            'update_time': 'updateTime',
            'usage_within_time_range': 'usageWithinTimeRange'
        }

        self._update_time = update_time
        self._usage_within_time_range = usage_within_time_range

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDatacatalogV1beta1UsageSignal':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDatacatalogV1beta1UsageSignal of this GoogleCloudDatacatalogV1beta1UsageSignal.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def update_time(self):
        """Gets the update_time of this GoogleCloudDatacatalogV1beta1UsageSignal.

        The timestamp of the end of the usage statistics duration.

        :return: The update_time of this GoogleCloudDatacatalogV1beta1UsageSignal.
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this GoogleCloudDatacatalogV1beta1UsageSignal.

        The timestamp of the end of the usage statistics duration.

        :param update_time: The update_time of this GoogleCloudDatacatalogV1beta1UsageSignal.
        :type update_time: str
        """

        self._update_time = update_time

    @property
    def usage_within_time_range(self):
        """Gets the usage_within_time_range of this GoogleCloudDatacatalogV1beta1UsageSignal.

        Usage statistics over each of the pre-defined time ranges, supported strings for time ranges are {\"24H\", \"7D\", \"30D\"}.

        :return: The usage_within_time_range of this GoogleCloudDatacatalogV1beta1UsageSignal.
        :rtype: Dict[str, GoogleCloudDatacatalogV1beta1UsageStats]
        """
        return self._usage_within_time_range

    @usage_within_time_range.setter
    def usage_within_time_range(self, usage_within_time_range):
        """Sets the usage_within_time_range of this GoogleCloudDatacatalogV1beta1UsageSignal.

        Usage statistics over each of the pre-defined time ranges, supported strings for time ranges are {\"24H\", \"7D\", \"30D\"}.

        :param usage_within_time_range: The usage_within_time_range of this GoogleCloudDatacatalogV1beta1UsageSignal.
        :type usage_within_time_range: Dict[str, GoogleCloudDatacatalogV1beta1UsageStats]
        """

        self._usage_within_time_range = usage_within_time_range
